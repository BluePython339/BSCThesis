sub_401000
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ edi + 0x30 ] eax
mov eax [ ebp + 0x14 ]
mov [ edi + 0x34 ] eax
lea eax [ edi + 0x18 ]
push eax
push edi
push sub_401123
push ecx
call sub_42128a
mov esi eax
add esp 0x10
test esi esi
je r-xdata
lea ecx [ edi + 0x20 ]
mov ecx [ edi + 0x4 ]
movzx eax [ ecx ]
push eax
push ecx
push 0x2
push edi
call sub_40105d
add esp 0x10
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
movzx esi si
or esi 0x80070000
jmp r-xdata
sub_40105d
push ebp
mov ebp esp
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x1c ]
push [ eax + 0x18 ]
call sub_4212ca
add esp 0x14
test eax eax
jle r-xdata
pop ebp
retn
movzx eax ax
or eax 0x80070000
sub_401088
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push [ esi + 0x1c ]
push [ esi + 0x18 ]
call sub_42130d
and [ esi + 0x18 ] 0x0
and [ esi + 0x1c ] 0x0
pop ecx
pop ecx
pop esi
pop ebp
retn
sub_4010a7
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
xor edx edx
push esi
mov esi r--data
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ edx + 0x1 ]
and [ ecx + 0x4 ] 0x0
and [ ecx + 0xc ] 0x0
mov [ ecx ] esi
mov [ ecx + 0x8 ] eax
pop esi
pop ebp
retn
mov edx eax
mov esi eax
lea ecx [ edx + 0x1 ]
mov al [ edx ]
inc edx
test al al
jne r-xdata
sub edx ecx
sub_4010df
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
xor edi edi
mov esi r--data
mov edx edi
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ edx * 2 + 0x2 ]
mov [ ecx + 0x4 ] edi
mov [ ecx + 0xc ] edi
pop edi
mov [ ecx ] esi
mov [ ecx + 0x8 ] eax
pop esi
pop ebp
retn
mov edx eax
mov esi eax
lea ecx [ edx + 0x2 ]
mov ax [ edx ]
add edx 0x2
cmp ax di
jne r-xdata
sub edx ecx
sar edx 0x1
sub_401123
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
test eax eax
je r-xdata
pop ebp
retn 0x24
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x1c ]
push edi
mov edi [ ebp + 0x20 ]
sub ecx 0x0
je r-xdata
and [ eax ] 0x0
sub ecx 0x1
jne r-xdata
pop esi
pop edi
pop ebx
push [ eax + 0x34 ]
push [ ebp + 0x24 ]
push edi
push ebx
push ecx
push [ ebp + 0x14 ]
mov ecx esi
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_420f99
call esi
mov ecx [ ebp + 0x18 ]
test dl dl
je r-xdata
mov ecx 0x100
movzx ecx dl
inc ecx
jmp r-xdata
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x18 ]
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ebx
mov [ eax + 0x14 ] edi
jmp r-xdata
sub_40119b
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
or eax [ ebp + 0x10 ]
je r-xdata
mov al 0x1
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x8 ]
mov eax [ edx + 0xc ]
and ecx [ ebp + 0xc ]
and eax [ ebp + 0x10 ]
or ecx eax
je r-xdata
xor al al
pop ebp
retn
mov eax [ edx + 0x10 ]
mov ecx [ edx + 0x14 ]
and eax [ ebp + 0xc ]
and ecx [ ebp + 0x10 ]
cmp eax [ edx + 0x10 ]
jne r-xdata
cmp ecx [ edx + 0x14 ]
je r-xdata
sub_4011d7
push ebp
mov ebp esp
sub esp 0x10
mov al [ r--data ]
mov edx [ ebp + 0xc ]
mov ecx edx
push esi
mov esi [ ebp + 0x8 ]
sub ecx r--data
or ecx 0xb000000
mov eax [ edx ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x8 ]
add edx 0xc
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x4 ]
push ecx
and [ ecx + 0x4 ] 0x0
push [ ebp + 0x18 ]
mov [ ecx ] eax
mov eax [ esi + 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
movzx eax [ eax ]
and [ ecx + 0x14 ] 0x0
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] 0x2
mov [ ecx + 0x10 ] edx
movzx eax [ edx ]
mov [ ecx + 0x18 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ecx + 0x1c ] 0x1
push [ esi + 0x1c ]
push [ esi + 0x18 ]
call sub_421347
add esp 0x1c
pop esi
mov esp ebp
pop ebp
retn
sub_401310
sub esp 0x458
push ebp
push esi
push edi
mov edi [ esp + 0x474 ]
lea esi [ esp + 0x64 ]
test edi edi
je r-xdata
push 0xa2
call sub_40cd14
push eax
push esi
call sub_421693
push esi
call sub_4216b5
push r--data
lea esi [ esi + eax * 2 ]
add esi 0x2
push esi
call sub_421693
push esi
call sub_4216b5
xor ecx ecx
push 0x58
mov [ esi + eax * 2 + 0x2 ] cx
lea eax [ esp + 0x28 ]
pop esi
push esi
push ecx
push eax
call sub_41d1e0
mov eax [ esp + 0x48c ]
add esp 0x24
cmp [ esp + 0x478 ] 0x0
mov ebp [ esp + 0x470 ]
mov edi [ GetOpenFileNameW@IAT ]
mov [ esp + 0x10 ] eax
mov eax [ rw-data ]
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x64 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x46c ]
mov [ esp + 0x3c ] eax
lea eax [ esp + 0xc ]
mov [ esp + 0xc ] esi
mov [ esp + 0x28 ] ebp
mov [ esp + 0x2c ] 0x800
mov [ esp + 0x40 ] 0x1080c
push eax
je r-xdata
mov eax esi
push edi
push eax
call sub_421693
mov eax esi
push eax
call sub_4216b5
lea esi [ esp + 0x72 ]
push edi
lea esi [ esi + eax * 2 ]
push esi
call sub_421693
push esi
call sub_4216b5
add esp 0x18
lea esi [ esi + eax * 2 ]
add esi 0x2
call edi
call [ GetSaveFileNameW@IAT ]
jmp r-xdata
pop edi
pop esi
setne al
pop ebp
add esp 0x458
retn 0x14
call [ CommDlgExtendedError@IAT ]
cmp eax 0x3002
jne r-xdata
mov esi eax
test esi esi
jne r-xdata
test esi esi
xor eax eax
cmp [ esp + 0x478 ] al
mov [ ebp ] ax
lea eax [ esp + 0xc ]
push eax
je r-xdata
call edi
call [ GetSaveFileNameW@IAT ]
jmp r-xdata
mov esi eax
sub_401446
push ebp
mov ebp esp
sub esp 0x22c
lea eax [ ebp - 0x4 ]
push eax
call [ SHGetMalloc@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x22c ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x24 ]
push edi
push eax
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x14 ] 0x41
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
call [ SHBrowseForFolderW@IAT ]
mov edi eax
test edi edi
jne r-xdata
xor al al
jmp r-xdata
push esi
push [ ebp + 0x10 ]
push edi
call [ SHGetPathFromIDListW@IAT ]
mov ecx [ ebp - 0x4 ]
mov esi eax
push edi
push ecx
mov edx [ ecx ]
call [ edx + 0x14 ]
xor eax eax
test esi esi
pop esi
setne al
xor al al
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
pop edi
sub_401506
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x30
je r-xdata
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40ca74
cmp [ ebp + 0xc ] 0x110
jne r-xdata
xor al al
pop ebp
retn 0x1c
mov al [ ebp + 0x20 ]
mov ecx rw-data
and al 0x1
movzx eax al
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x8 ]
call sub_40ca9b
jmp r-xdata
sub_401546
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x4c ]
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0xc ] 0x1
call sub_40f838
mov esp ebp
pop ebp
retn 0x8
sub_401590
mov eax sub_42eb77
call sub_41c16c
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_408e1d
xor ebx ebx
mov [ esi ] r--data
lea ecx [ esi + 0x1024 ]
mov [ ebp - 0x4 ] ebx
call sub_405d5f
lea ecx [ esi + 0x20e8 ]
mov [ ebp - 0x4 ] 0x1
call sub_40c004
lea ecx [ esi + 0x2280 ]
mov [ esi + 0x21d0 ] ebx
mov [ esi + 0x21d4 ] ebx
call sub_40172e
lea ecx [ esi + 0x45c0 ]
call sub_40172e
cmp [ ebp + 0x8 ] ebx
mov [ ebp - 0x4 ] 0x4
sete al
mov [ esi + 0x21bc ] ebx
mov [ esi + 0x21b8 ] al
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x72a8
call sub_41c12b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x5
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov ecx eax
call sub_40a687
jmp r-xdata
mov [ esi + 0x21bc ] eax
mov al [ eax + 0x5195 ]
or [ esi + 0x21c0 ] 0xffffffff
or [ esi + 0x21c4 ] 0xffffffff
or [ esi + 0x21c8 ] 0xffffffff
push 0x40
mov [ esi + 0x1c ] al
lea eax [ esi + 0x2208 ]
push ebx
push eax
mov [ esi + 0x6ce8 ] 0x2
mov [ esi + 0x6cec ] ebx
mov [ esi + 0x6cf0 ] ebx
mov [ esi + 0x6cf8 ] ebx
mov [ esi + 0x21d0 ] ebx
mov [ esi + 0x21d4 ] ebx
mov [ esi + 0x6cf4 ] bl
mov [ esi + 0x6cfc ] bx
mov [ esi + 0x21d8 ] ebx
mov [ esi + 0x6cd8 ] ebx
mov [ esi + 0x6cdc ] ebx
mov [ esi + 0x6ce0 ] ebx
mov [ esi + 0x6ce4 ] ebx
call sub_41d1e0
push 0x34
lea eax [ esi + 0x2248 ]
push ebx
push eax
call sub_41d1e0
push 0x20
lea eax [ esi + 0x4580 ]
push ebx
push eax
call sub_41d1e0
mov ecx [ ebp - 0xc ]
add esp 0x24
mov [ esi + 0x6d10 ] ebx
xor eax eax
mov [ esi + 0x6d18 ] ebx
mov [ esi + 0x6d1c ] ebx
mov [ esi + 0x6d20 ] ebx
mov [ esi + 0x6d24 ] ebx
mov [ esi + 0x6d28 ] ebx
mov [ esi + 0x6d2c ] ebx
mov [ esi + 0x6d32 ] ax
mov eax esi
mov [ esi + 0x6d0e ] bl
mov [ esi + 0x6d30 ] bl
mov [ esi + 0x21e0 ] bl
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_40172e
push ecx
xor eax eax
mov [ esp ] ecx
mov [ ecx + 0x1020 ] eax
mov [ ecx + 0x1024 ] eax
mov [ ecx + 0x1028 ] eax
mov [ ecx + 0x102c ] eax
mov [ ecx + 0x1030 ] eax
mov [ ecx + 0x1034 ] eax
mov [ ecx + 0x1038 ] eax
mov [ ecx + 0x103c ] eax
mov [ ecx + 0x1040 ] eax
mov [ ecx + 0x1044 ] eax
mov eax ecx
pop ecx
retn
sub_401774
push esi
mov esi ecx
cmp [ esi + 0x21b8 ] 0x0
mov [ esi ] r--data
je r-xdata
lea ecx [ esi + 0x55e0 ]
call sub_40a6f4
lea ecx [ esi + 0x32a0 ]
call sub_40a6f4
lea ecx [ esi + 0x20e8 ]
call sub_40c0a7
lea ecx [ esi + 0x1024 ]
call sub_405e1e
mov ecx esi
pop esi
jmp sub_408e53
push edi
mov edi [ esi + 0x21bc ]
test edi edi
je r-xdata
pop edi
mov ecx edi
call sub_40a702
push 0x72a8
push edi
call sub_41c15e
pop ecx
pop ecx
sub_4017e5
push ebp
mov ebp esp
mov eax [ fs : 0x0 ]
mov edx ecx
push 0xffffffff
push sub_42eb81
push eax
mov [ fs : 0x0 ] esp
mov ecx [ edx ]
push 0x0
push [ edx + 0xc ]
mov eax [ ecx ]
push [ edx + 0x8 ]
call [ eax + 0xc ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_40181c
push esi
mov esi ecx
call sub_401774
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push 0x7d38
push esi
call sub_41c15e
pop ecx
pop ecx
sub_40183e
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
add [ esi + 0x4 ] eax
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jbe r-xdata
pop esi
retn 0x4
mov eax [ esi + 0xc ]
push ebx
push ebp
mov ebp rw-data
push edi
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
mov edi [ esi + 0x4 ]
shr eax 0x2
add eax 0x20
add eax [ esi + 0x8 ]
cmp edi eax
ja r-xdata
cmp ecx eax
jbe r-xdata
push edi
push [ esi ]
call sub_4216d5
mov ebx eax
pop ecx
pop ecx
test ebx ebx
jne r-xdata
mov edi eax
push eax
push r--data
push ebp
call sub_4069e4
add esp 0xc
mov ecx ebp
call sub_406a1c
mov [ esi + 0x8 ] edi
pop edi
pop ebp
mov [ esi ] ebx
pop ebx
mov ecx ebp
call sub_406a1c
sub_4018b1
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
add [ esi + 0x4 ] eax
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jbe r-xdata
pop esi
retn 0x4
mov eax [ esi + 0xc ]
push ebx
push ebp
mov ebp rw-data
push edi
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
mov edi [ esi + 0x4 ]
shr eax 0x2
add eax 0x20
add eax [ esi + 0x8 ]
cmp edi eax
ja r-xdata
cmp ecx eax
jbe r-xdata
lea eax [ edi + edi ]
push eax
push [ esi ]
call sub_4216d5
mov ebx eax
pop ecx
pop ecx
test ebx ebx
jne r-xdata
mov edi eax
push eax
push r--data
push ebp
call sub_4069e4
add esp 0xc
mov ecx ebp
call sub_406a1c
mov [ esi + 0x8 ] edi
pop edi
pop ebp
mov [ esi ] ebx
pop ebx
mov ecx ebp
call sub_406a1c
sub_401941
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_401a4c
test al al
jne r-xdata
pop esi
retn 0x4
cmp [ esi + 0x6cfd ] al
jne r-xdata
push 0x2
mov ecx rw-data
call j_sub_406b14
lea eax [ esi + 0x1e ]
push eax
push 0x38
call sub_401546
sub_401974
cmp [ ecx + 0x6cf4 ] 0x0
mov edx [ esp + 0x4 ]
je r-xdata
mov eax edx
retn 0x4
mov eax edx
not eax
inc eax
and eax 0xf
add edx eax
cmp [ ecx + 0x6ce8 ] 0x3
jne r-xdata
add edx 0x8
add edx 0x10
jmp r-xdata
sub_4019a1
mov eax sub_42ed6d
call sub_41c16c
sub esp 0x10
push edi
mov edi ecx
cmp [ edi + 0x6cee ] 0x0
jne r-xdata
mov eax [ edi ]
push ebx
mov [ ebp - 0x1c ] edi
call [ eax + 0x10 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
xor ebx ebx
mov ecx edi
mov [ ebp - 0x4 ] ebx
cmp [ edi + 0x2224 ] bl
je r-xdata
xor al al
jmp r-xdata
push esi
mov esi [ edi ]
push ebx
call sub_40205e
push edx
push eax
mov ecx edi
call [ esi + 0xc ]
push r--data
mov ecx edi
call sub_403bd2
pop esi
test eax eax
je r-xdata
mov eax [ edi + 0x6cf8 ]
mov edx [ edi ]
add eax 0x14
push ebx
push ebx
push eax
call [ edx + 0xc ]
mov ecx edi
call sub_4037fd
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] ebx
seta bl
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
call sub_4017e5
mov al bl
pop ebx
push [ ebp + 0x8 ]
mov ecx edi
call sub_401df9
test al al
je r-xdata
mov bl 0x1
sub_401a4c
mov eax sub_42eb9b
call sub_41c16c
sub esp 0x1c
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
push 0x7
mov eax [ edi ]
lea esi [ edi + 0x21f8 ]
push esi
mov [ edi + 0x6cf4 ] bl
mov [ edi + 0x6cfc ] bl
call [ eax + 0x8 ]
cmp eax 0x7
je r-xdata
push 0x7
push esi
mov [ edi + 0x6cf8 ] ebx
call sub_401da3
test eax eax
je r-xdata
xor al al
jmp r-xdata
push 0x200000
lea ecx [ ebp - 0x28 ]
call sub_401571
mov eax [ edi ]
mov ecx edi
mov [ ebp - 0x4 ] ebx
call [ eax + 0x10 ]
mov ecx [ ebp - 0x24 ]
mov edx [ edi ]
add ecx 0xfffffff0
mov esi [ ebp - 0x28 ]
push ecx
push esi
mov ecx edi
mov [ ebp - 0x18 ] eax
call [ edx + 0x8 ]
mov edx eax
mov ecx ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] ecx
test edx edx
jle r-xdata
mov [ edi + 0x6ce8 ] eax
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
cmp [ edi + 0x6cf8 ] ebx
jne r-xdata
lea edx [ esi + ecx ]
cmp [ edx ] 0x52
jne r-xdata
mov eax [ edi + 0x6ce8 ]
cmp eax 0x4
jne r-xdata
mov esi [ edi ]
mov ecx edi
push ebx
call [ esi + 0x10 ]
sub eax 0x7
mov ecx edi
sbb edx ebx
push edx
push eax
call [ esi + 0xc ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
test esi esi
je r-xdata
inc ecx
mov [ ebp - 0x14 ] ecx
cmp ecx eax
jl r-xdata
sub eax ecx
push eax
push edx
call sub_401da3
mov ecx [ ebp - 0x14 ]
test eax eax
je r-xdata
cmp eax 0x3
jne r-xdata
lea eax [ edi + 0x1e ]
push eax
push 0x3b
call sub_401546
jmp r-xdata
push esi
call j_sub_4251ac#3
pop ecx
push esi
call j_sub_4251ac#3
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
mov [ edi + 0x6ce8 ] eax
cmp eax 0x1
jne r-xdata
mov [ edi + 0x2200 ] 0x7
jmp r-xdata
mov eax [ edi ]
lea esi [ edi + 0x21ff ]
push 0x1
push esi
mov ecx edi
call [ eax + 0x8 ]
cmp [ esi ] 0x0
jne r-xdata
lea eax [ ecx + edx ]
mov edx [ edi ]
push ebx
push ebx
push eax
mov ecx edi
mov [ edi + 0x6cf8 ] eax
call [ edx + 0xc ]
mov eax [ edi + 0x6ce8 ]
cmp eax 0x2
je r-xdata
test ecx ecx
jle r-xdata
mov ecx edi
call sub_4037fd
test eax eax
jne r-xdata
mov [ edi + 0x2200 ] 0x8
jmp r-xdata
mov eax [ edi ]
lea ecx [ edi + 0x21f8 ]
push 0x7
push ecx
mov ecx edi
call [ eax + 0x8 ]
cmp eax 0x3
jne r-xdata
cmp edx 0x1c
jge r-xdata
mov eax [ edi + 0x21dc ]
cmp eax 0x1
je r-xdata
cmp [ edi + 0x6cfd ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x1f
jle r-xdata
cmp [ edi + 0x21e0 ] 0x0
je r-xdata
mov ecx edi
call sub_401ed6
cmp [ edi + 0x6cfc ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax esi
sub eax edx
cmp [ eax + 0x1c ] 0x52
jne r-xdata
mov ecx edi
call sub_401ed6
cmp eax 0x4
je r-xdata
cmp [ edi + 0x21e0 ] 0x0
mov al [ edi + 0x2224 ]
mov [ edi + 0x6cee ] al
je r-xdata
lea eax [ edi + 0x1e ]
push eax
push 0x19
call sub_401546
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0x1d ] 0x53
jne r-xdata
mov eax [ edi ]
mov ecx edi
mov [ ebp - 0x28 ] edi
call [ eax + 0x10 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
mov eax [ edi + 0x6cdc ]
mov esi [ edi + 0x6cd8 ]
mov [ ebp + 0x8 ] eax
mov eax [ edi + 0x6ce0 ]
mov [ ebp - 0x18 ] eax
mov eax [ edi + 0x6ce4 ]
mov [ ebp - 0x14 ] eax
mov eax [ edi + 0x21dc ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp [ edi + 0x6cf4 ] 0x0
jne r-xdata
cmp [ eax + 0x1e ] 0x46
jne r-xdata
mov ecx edi
call sub_4037fd
test eax eax
jne r-xdata
cmp [ edi + 0x6ced ] 0x0
je r-xdata
cmp [ eax + 0x1f ] 0x58
je r-xdata
mov eax [ edi + 0x21dc ]
cmp eax 0x3
jne r-xdata
jmp r-xdata
lea ecx [ edi + 0x1e ]
push ecx
lea ecx [ edi + 0x6d32 ]
push ecx
call sub_421693
pop ecx
pop ecx
cmp [ edi + 0x6cf1 ] 0x0
je r-xdata
cmp eax 0x2
je r-xdata
cmp [ edi + 0x6ced ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x28 ]
mov [ edi + 0x6cdc ] eax
mov eax [ ebp - 0x18 ]
mov [ edi + 0x6ce0 ] eax
mov eax [ ebp - 0x14 ]
mov [ edi + 0x6ce4 ] eax
mov eax [ ebp - 0x10 ]
mov [ edi + 0x6cd8 ] esi
mov [ edi + 0x21dc ] eax
call sub_4017e5
mov al 0x1
cmp [ edi + 0x6ced ] 0x0
je r-xdata
cmp eax 0x5
je r-xdata
mov eax ebx
cmp [ edi + 0x5648 ] 0x0
jne r-xdata
mov [ edi + 0x6cf1 ] bl
cmp [ edi + 0x3308 ] 0x0
jne r-xdata
mov ecx edi
call sub_401ed6
xor eax eax
inc eax
jmp r-xdata
xor ebx ebx
inc ebx
mov [ edi + 0x6cf1 ] al
jmp r-xdata
sub_401da3
xor ecx ecx
cmp [ esp + 0x8 ] 0x1
jb r-xdata
mov eax ecx
retn 0x8
mov eax [ esp + 0x4 ]
cmp [ eax ] 0x52
jne r-xdata
cmp [ esp + 0x8 ] 0x7
jb r-xdata
cmp [ eax + 0x1 ] 0x61
jne r-xdata
cmp [ eax + 0x2 ] 0x72
jne r-xdata
cmp [ eax + 0x3 ] 0x21
jne r-xdata
cmp [ eax + 0x4 ] 0x1a
jne r-xdata
cmp [ eax + 0x5 ] 0x7
jne r-xdata
mov al [ eax + 0x6 ]
test al al
jne r-xdata
cmp al 0x1
jne r-xdata
push 0x2
jmp r-xdata
cmp al 0x2
jne r-xdata
push 0x3
jmp r-xdata
pop ecx
push 0x4
sub_401df9
mov eax sub_42ed46
call sub_41c16c
sub esp 0x14
push ebx
xor ebx ebx
mov eax ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
push ebx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] ebx
push ecx
mov ecx eax
call sub_403878
test al al
je r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
push esi
push edi
mov edi [ ebp - 0x1c ]
lea ecx [ ebp - 0x20 ]
push 0x1
call sub_40183e
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
mov esi [ ebp + 0x8 ]
mov [ ecx + eax - 0x1 ] bl
lea eax [ edi + 0x1 ]
push eax
mov ecx esi
call sub_401927
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x6ce8 ] 0x3
jne r-xdata
mov ecx [ ebp - 0xc ]
mov al bl
pop ebx
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
push [ ebp - 0x20 ]
call j_sub_4251ac#3
pop ecx
test [ eax + 0x45dc ] 0x1
je r-xdata
push [ esi + 0x4 ]
push [ esi ]
push [ ebp - 0x20 ]
call sub_40fd55
jmp r-xdata
push [ esi + 0x4 ]
push [ esi ]
push [ ebp - 0x20 ]
call sub_40fc9f
shr edi 0x1
push edi
push [ esi ]
push [ ebp - 0x20 ]
call sub_40fd1a
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
jmp r-xdata
push [ esi ]
call sub_4216b5
pop ecx
push eax
mov ecx esi
call sub_401927
pop edi
mov bl 0x1
pop esi
sub_401eea
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_4095c0
test al al
jne r-xdata
push 0x0
mov ecx esi
call sub_401a4c
test al al
jne r-xdata
xor al al
jmp r-xdata
mov al 0x1
lea eax [ esi + 0x1e ]
push eax
push 0x38
call sub_401546
mov ecx esi
call sub_408ebf
jmp r-xdata
pop esi
retn 0x4
sub_401f25
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x4c ]
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x48 ] eax
mov [ ebp - 0xc ] 0x2
call sub_40f838
mov esp ebp
pop ebp
retn 0xc
sub_401fb5
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi ecx
cmp [ edi + 0x6ce8 ] 0x2
jne r-xdata
mov ecx [ esi + 0x10ec ]
cmp ecx 0x2
jne r-xdata
cmp [ esi + 0x19 ] 0x14
jae r-xdata
cmp ecx 0x1
jne r-xdata
xor eax eax
cmp [ esi + 0x10e1 ] al
sete al
dec eax
and eax 0xfffffff0
add eax 0x20
mov [ esi + 0x1c ] eax
test [ esi + 0x1c ] 0x10
je r-xdata
add esi 0x20
xor edx edx
cmp [ esi ] dx
je r-xdata
push 0x800
lea eax [ esi + 0x20 ]
push eax
call sub_40a9f6
mov [ esi + 0x10e1 ] 0x1
pop edi
pop esi
retn 0x4
push ebx
push 0x5c
pop ecx
push 0x5f
pop ebx
cmp [ esi ] 0x3a
jne r-xdata
cmp [ edi + 0x6ce8 ] 0x3
jne r-xdata
movzx eax [ esi ]
cmp eax 0x2f
je r-xdata
mov [ esi ] bx
mov [ esi ] bx
mov [ esi ] cx
cmp ax cx
jne r-xdata
cmp [ esi ] cx
jne r-xdata
pop ebx
add esi 0x2
cmp [ esi ] dx
jne r-xdata
cmp [ edi + 0x6ce8 ] 0x3
je r-xdata
sub_40205e
push ebx
mov ebx ecx
push esi
push edi
xor edi edi
mov esi [ ebx + 0x6cf8 ]
add esi [ ebx + 0x2200 ]
cmp [ ebx + 0x6ce8 ] 0x2
jne r-xdata
push [ ebx + 0x2214 ]
call sub_401974
add eax [ ebx + 0x2254 ]
add esi eax
add esi [ ebx + 0x2214 ]
jmp r-xdata
adc edi edi
mov eax esi
mov edx edi
pop edi
pop esi
pop ebx
retn
sub_4020a6
mov eax 0x20b4
call sub_41c240
push edi
mov edi [ esp + 0x20bc ]
mov [ esp + 0x8 ] ecx
mov edx [ edi + 0x14 ]
mov eax edx
sub eax [ esp + 0x20c0 ]
cmp eax [ edi + 0x18 ]
jb r-xdata
pop edi
add esp 0x20b4
retn 0xc
sub edx eax
mov [ edi + 0x18 ] eax
cmp edx 0x2
jb r-xdata
push ebx
mov ebx [ esp + 0x20c8 ]
push ebp
push esi
pop esi
pop ebp
pop ebx
mov ecx [ edi + 0x14 ]
mov esi [ edi + 0x18 ]
sub ecx esi
je r-xdata
test edx edx
jg r-xdata
jl r-xdata
lea ebp [ esi + eax ]
mov ecx edi
mov [ esp + 0x24 ] ebp
call sub_40bedc
sub ebp [ edi + 0x18 ]
mov esi eax
xor ecx ecx
mov eax edx
cmp [ ebx + 0x4 ] 0x1
mov [ esp + 0x20 ] eax
mov [ esp + 0x1c ] ecx
jne r-xdata
cmp eax ecx
ja r-xdata
cmp [ ebx + 0x4 ] 0x2
je r-xdata
cmp esi 0x1
jne r-xdata
test eax eax
ja r-xdata
cmp [ ebx + 0x4 ] 0x3
jne r-xdata
test eax eax
jne r-xdata
mov ecx [ esp + 0x24 ]
mov [ edi + 0x18 ] ecx
mov eax [ edi + 0x14 ]
sub eax ecx
cmp eax 0x2
jae r-xdata
jb r-xdata
mov ecx edi
mov [ ebx + 0x1e ] 0x1
call sub_40bedc
mov [ esp + 0x18 ] eax
test al 0x1
je r-xdata
mov ecx edi
call sub_40bedc
mov ecx eax
or ecx edx
je r-xdata
sub esi 0x1
je r-xdata
cmp esi 0x7
ja r-xdata
test al 0x2
je r-xdata
mov ecx edi
call sub_40bedc
mov ecx eax
or ecx edx
je r-xdata
mov ecx edi
call sub_40bedc
test eax eax
je r-xdata
sub esi 0x1
je r-xdata
mov ecx [ esp + 0x1c ]
mov eax [ esp + 0x20 ]
mov ecx edi
call sub_40bedc
mov ecx eax
or ecx edx
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
mov ecx [ ecx + 0x6cd8 ]
add ecx eax
mov eax [ esp + 0x14 ]
mov eax [ eax + 0x6cdc ]
adc eax edx
mov [ ebx + 0x20 ] ecx
mov [ ebx + 0x24 ] eax
mov ecx edi
call sub_40bedc
mov cl al
shr eax 0x1
and cl 0x1
and al 0x1
mov [ ebx + 0x10b1 ] cl
mov ecx edi
mov [ ebx + 0x10ba ] al
call sub_40bd8f
movzx eax al
mov [ ebx + 0x10dc ] eax
cmp eax 0x18
jbe r-xdata
mov ecx [ esp + 0x14 ]
lea eax [ ebx + 0x20 ]
push eax
call sub_403c6f
jmp r-xdata
mov ecx edi
call sub_40bedc
test eax eax
jne r-xdata
sub esi 0x1
je r-xdata
mov ecx [ esp + 0x14 ]
mov ecx [ ecx + 0x6cd8 ]
add ecx eax
mov eax [ esp + 0x14 ]
mov eax [ eax + 0x6cdc ]
adc eax edx
mov [ ebx + 0x30 ] ecx
mov [ ebx + 0x34 ] eax
push 0x10
lea eax [ ebx + 0x1091 ]
mov ecx edi
push eax
call sub_40be3e
push 0x10
lea eax [ ebx + 0x10a1 ]
mov ecx edi
push eax
call sub_40be3e
cmp [ ebx + 0x10b1 ] 0x0
je r-xdata
mov ecx [ esp + 0x14 ]
lea eax [ ebx + 0x20 ]
push eax
call sub_403c6f
push 0x20
lea eax [ ebx + 0x1064 ]
mov [ ebx + 0x1060 ] 0x3
push eax
jmp r-xdata
test ecx ecx
jl r-xdata
sub esi 0x1
je r-xdata
mov [ ebx + 0x1090 ] 0x1
mov [ ebx + 0x108c ] 0x5
mov [ ebx + 0x108b ] 0x1
push 0x8
lea esi [ ebx + 0x10b2 ]
mov ecx edi
push esi
call sub_40be3e
push 0x4
lea eax [ esp + 0x2c ]
mov ecx edi
push eax
call sub_40be3e
lea eax [ esp + 0x54 ]
push eax
call sub_40e222
push 0x8
push esi
lea eax [ esp + 0x5c ]
push eax
call sub_40e268
lea eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x58 ]
push eax
call sub_40e17b
push 0x4
lea eax [ esp + 0x30 ]
push eax
lea eax [ esp + 0x30 ]
push eax
call sub_41d710
add esp 0xc
neg eax
sbb al al
inc al
cmp [ ebx + 0x4 ] 0x3
mov [ ebx + 0x10b1 ] al
jne r-xdata
mov ecx edi
call sub_40be3e
jmp r-xdata
jg r-xdata
test ecx ecx
jl r-xdata
sub esi 0x1
je r-xdata
push 0x8
push r--data
push esi
call sub_41d710
add esp 0xc
test eax eax
jne r-xdata
mov ecx edi
call sub_40bedc
mov [ esp + 0x12 ] al
and al 0x1
mov cl [ esp + 0x12 ]
mov [ esp + 0x13 ] al
test cl 0x2
je r-xdata
cmp ebp 0x9
jb r-xdata
jg r-xdata
mov ecx edi
call sub_40bedc
mov ecx edi
mov [ ebx + 0x10f0 ] eax
call sub_40bedc
and al 0x1
mov ecx edi
mov [ ebx + 0x20f4 ] al
call sub_40bedc
mov esi eax
mov [ esp + 0xc4 ] 0x0
cmp esi 0x1fff
jae r-xdata
sub esi 0x1
je r-xdata
mov [ ebx + 0x10b1 ] al
test cl 0x4
je r-xdata
mov ecx edi
test al al
je r-xdata
mov ecx edi
call sub_40bedc
mov ecx edi
call sub_40bedc
test eax eax
je r-xdata
cmp ebp 0x1
jb r-xdata
push 0x2000
lea eax [ esp + 0xc8 ]
push eax
push eax
call sub_40b264
push 0x800
lea eax [ ebx + 0x10f4 ]
push eax
lea eax [ esp + 0xcc ]
push eax
call sub_40fd55
jmp r-xdata
push esi
lea eax [ esp + 0xc8 ]
mov ecx edi
push eax
call sub_40be3e
mov [ esp + esi + 0xc4 ] 0x0
mov ecx edi
call sub_40bedc
mov ecx eax
mov [ esp + 0x18 ] eax
shr ecx 0x2
lea ebp [ ebx + 0x20f8 ]
and cl 0x1
mov [ ebx + 0x20f6 ] cl
mov ecx eax
shr ecx 0x3
and cl 0x1
mov [ ebx + 0x20f7 ] cl
mov [ ebx + 0x21f8 ] 0x0
mov [ ebp ] 0x0
test al 0x1
je r-xdata
sub esi 0x1
jne r-xdata
test [ esp + 0x12 ] 0x8
je r-xdata
mov ecx edi
test al al
je r-xdata
call sub_40be1e
push edx
push eax
lea ecx [ ebx + 0x1030 ]
call sub_40f828
call sub_40bddc
push 0x0
push eax
lea ecx [ ebx + 0x1030 ]
call sub_40f4cd
jmp r-xdata
push eax
push r--data
lea eax [ esp + 0x34 ]
mov [ ebx + 0x10e3 ] 0x1
push 0x14
push eax
call sub_403ce2
add esp 0x10
lea eax [ esp + 0x2c ]
push 0x800
push eax
mov eax [ esp + 0x1c ]
add eax 0x22a0
push eax
call sub_40e81b
jmp r-xdata
test al 0x2
je r-xdata
mov ecx edi
call sub_40bedc
mov esi eax
mov eax 0xff
cmp esi eax
jb r-xdata
cmp [ ebx + 0x4 ] 0x3
jne r-xdata
cmp [ esp + 0x13 ] 0x0
mov ecx edi
je r-xdata
call sub_40be1e
push edx
push eax
lea ecx [ ebx + 0x1038 ]
call sub_40f828
call sub_40bddc
push 0x0
push eax
lea ecx [ ebx + 0x1038 ]
call sub_40f4cd
jmp r-xdata
mov cl [ esp + 0x12 ]
mov al [ esp + 0x13 ]
cmp [ ebx + 0x20f6 ] 0x0
je r-xdata
mov ecx edi
call sub_40bedc
mov esi eax
mov eax 0xff
cmp esi eax
jb r-xdata
push esi
push ebp
mov ecx edi
call sub_40be3e
mov eax [ esp + 0x18 ]
mov [ esi + ebp ] 0x0
mov esi eax
lea esi [ ebx + 0x1020 ]
push ebp
mov ecx esi
call sub_401f56
push ebp
push [ esi ]
mov eax [ edi + 0x14 ]
sub eax [ esp + 0x24 ]
cmp eax 0x1
jne r-xdata
call sub_40be1e
push edx
push eax
lea ecx [ ebx + 0x1040 ]
call sub_40f828
jmp r-xdata
call sub_40bddc
push 0x0
push eax
lea ecx [ ebx + 0x1040 ]
call sub_40f4cd
jmp r-xdata
cmp [ ebx + 0x20f7 ] 0x0
je r-xdata
mov ecx edi
call sub_40bedc
mov [ ebx + 0x22f8 ] eax
push esi
lea ebp [ ebx + 0x21f8 ]
mov ecx edi
push ebp
call sub_40be3e
mov [ esi + ebp ] 0x0
mov esi eax
add ebp 0x1
mov [ ebx + 0x20f5 ] 0x1
jmp r-xdata
mov ecx edi
call sub_40bedc
mov [ ebx + 0x22fc ] eax
sub_40263e
push ebp
sub esp 0x74
mov eax sub_42ebb5
call sub_41c16c
mov eax 0x2000
call sub_41c240
push ebx
push esi
mov ebx ecx
lea ecx [ ebp + 0x48 ]
push edi
push ebx
mov [ ebp + 0x44 ] ebx
call sub_40bd64
xor ecx ecx
push 0x7
mov [ ebp + 0x40 ] ecx
mov [ ebp - 0x4 ] ecx
pop edi
cmp [ ebx + 0x6cf4 ] cl
je r-xdata
mov [ ebp + 0x76 ] cl
mov edx [ ebx + 0x6cf8 ]
xor eax eax
add edx edi
adc eax ecx
cmp [ ebx + 0x6cdc ] eax
jl r-xdata
lea ecx [ ebp + 0x48 ]
call sub_40bda7
movzx eax ax
lea ecx [ ebp + 0x48 ]
mov [ ebx + 0x21e4 ] eax
mov [ ebx + 0x21f4 ] 0x0
call sub_40bd8f
lea ecx [ ebp + 0x48 ]
movzx esi al
call sub_40bda7
movzx eax ax
lea ecx [ ebp + 0x48 ]
mov [ ebx + 0x21ec ] eax
shr eax 0xe
and al 0x1
mov [ ebx + 0x21f4 ] al
call sub_40bda7
movzx ecx ax
mov [ ebx + 0x21f0 ] ecx
mov [ ebx + 0x21e8 ] esi
cmp ecx edi
jb r-xdata
mov ecx ebx
call sub_403c2e
jmp r-xdata
jg r-xdata
mov ecx ebx
call sub_401f70
jmp r-xdata
sub esi 0x73
je r-xdata
lea ecx [ ebp + 0x48 ]
call sub_40a6f4
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x40 ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
lea esp [ ebp + 0x78 ]
pop ebp
retn
mov ecx ebx
mov [ ebp + 0x76 ] 0x1
call sub_403b17
mov eax [ ebx ]
lea ecx [ ebp + 0x38 ]
push 0x8
push ecx
mov ecx ebx
call [ eax + 0x8 ]
cmp eax 0x8
jne r-xdata
cmp [ ebx + 0x6cd8 ] edx
jbe r-xdata
mov [ ebx + 0x21e8 ] 0x1
sub esi 0x1
je r-xdata
xor ecx ecx
lea eax [ ebp + 0x38 ]
push ecx
push ecx
push ecx
push ecx
push eax
mov eax [ ebx + 0x21bc ]
lea esi [ ebx + 0x1024 ]
add eax 0x4024
push eax
push 0x4
push ecx
mov ecx esi
call sub_405f32
mov [ ebp + 0x64 ] esi
jmp r-xdata
cmp eax 0x1
jne r-xdata
push 0x6
jmp r-xdata
mov [ ebx + 0x21e8 ] 0x2
jmp r-xdata
sub esi 0x6
je r-xdata
push edi
lea ecx [ ebp + 0x48 ]
call sub_40bf68
cmp [ ebp + 0x5c ] 0x0
jne r-xdata
lea eax [ ecx - 0x7 ]
push eax
test [ ebx + 0x21ec ] 0x2
jne r-xdata
lea ecx [ ebp + 0x48 ]
call sub_40bf68
push [ ebx + 0x21f0 ]
mov ecx ebx
call sub_401974
add eax [ ebx + 0x6cd8 ]
push 0x0
pop ecx
adc ecx [ ebx + 0x6cdc ]
mov [ ebx + 0x6ce0 ] eax
mov eax [ ebx + 0x21e8 ]
mov [ ebx + 0x6ce4 ] ecx
cmp eax 0x1
je r-xdata
mov eax [ ebx + 0x21e8 ]
mov [ ebx + 0x21dc ] eax
cmp eax 0x75
jne r-xdata
mov [ ebx + 0x21e8 ] 0x3
jmp r-xdata
sub esi 0x1
jne r-xdata
lea edi [ ebx + 0x2208 ]
mov ecx edi
call sub_40a2d1
push 0x5
pop ecx
lea esi [ ebx + 0x21e4 ]
[ edi ] [ esi ]
lea ecx [ ebp + 0x48 ]
call sub_40bda7
lea ecx [ ebp + 0x48 ]
mov [ ebx + 0x221c ] ax
call sub_40bddc
mov cl [ ebx + 0x2210 ]
mov edx eax
and cl 0x1
mov [ ebx + 0x2220 ] edx
mov [ ebx + 0x6ced ] cl
mov ecx [ ebx + 0x2210 ]
shr ecx 0x3
and cl 0x1
mov [ ebx + 0x6cec ] cl
mov ecx [ ebx + 0x2210 ]
mov eax ecx
shr eax 0x2
and al 0x1
mov [ ebx + 0x6cef ] al
mov eax ecx
shr eax 0x6
and al 0x1
mov [ ebx + 0x6cf3 ] al
mov eax ecx
shr eax 0x7
and al 0x1
mov [ ebx + 0x6cf4 ] al
test edx edx
jne r-xdata
jle r-xdata
mov [ ebx + 0x21e8 ] 0x5
jmp r-xdata
xor eax eax
inc eax
xor eax eax
cmp [ ebx + 0x221c ] ax
je r-xdata
test [ ebx + 0x21ec ] 0x8000
je r-xdata
cmp eax 0x3
jle r-xdata
mov eax [ ebx + 0x6ce4 ]
cmp eax [ ebx + 0x6cdc ]
jg r-xdata
mov eax [ ebx + 0x21e8 ]
cmp eax 0x79
je r-xdata
mov [ ebx + 0x6cf0 ] al
mov eax ecx
shr eax 0x1
and al 0x1
mov [ ebx + 0x2224 ] al
mov eax ecx
shr eax 0x8
and al 0x1
shr ecx 0x4
and cl 0x1
mov [ ebx + 0x6cf1 ] al
mov [ ebx + 0x6cf2 ] cl
push 0x0
lea ecx [ ebp + 0x48 ]
call sub_40be8d
movzx eax ax
cmp [ ebx + 0x21e4 ] eax
je r-xdata
lea ecx [ ebp + 0x48 ]
call sub_40bddc
add [ ebx + 0x6ce0 ] eax
adc [ ebx + 0x6ce4 ] 0x0
jmp r-xdata
cmp eax 0x2
lea edi [ ebx + 0x2280 ]
sete al
mov [ ebp + 0x77 ] al
test al al
jne r-xdata
cmp eax 0x5
jne r-xdata
mov eax [ ebp + 0x5c ]
mov [ ebp + 0x40 ] eax
jl r-xdata
cmp eax 0x76
je r-xdata
push 0x0
mov ecx edi
mov [ ebp + 0x68 ] edi
call sub_40a238
push 0x5
pop ecx
lea esi [ ebx + 0x21e4 ]
[ edi ] [ esi ]
mov esi [ ebp + 0x68 ]
xor ecx ecx
inc ecx
mov al [ esi + 0x8 ]
mov edx [ esi + 0x8 ]
and al cl
mov [ esi + 0x1088 ] al
mov eax edx
shr eax 0x1
and al cl
mov [ esi + 0x1089 ] al
mov eax edx
shr eax 0x2
and al cl
mov [ esi + 0x108b ] al
mov eax edx
shr eax 0xa
and al cl
cmp [ ebp + 0x77 ] 0x0
mov [ esi + 0x1090 ] al
je r-xdata
lea edi [ ebx + 0x45c0 ]
push eax
lea edi [ ebx + 0x4580 ]
pop ecx
lea esi [ ebx + 0x21e4 ]
[ edi ] [ esi ]
mov al [ ebx + 0x4588 ]
mov edx [ ebx + 0x4588 ]
and al 0x1
mov [ ebx + 0x459c ] al
mov ecx edx
mov eax edx
shr ecx 0x1
shr eax 0x2
and cl 0x1
shr edx 0x3
and al 0x1
and dl 0x1
mov [ ebx + 0x459d ] cl
mov [ ebx + 0x459e ] al
mov [ ebx + 0x459f ] dl
test cl cl
je r-xdata
mov eax [ ebx + 0x6ce0 ]
cmp eax [ ebx + 0x6cd8 ]
ja r-xdata
cmp eax 0x5
jne r-xdata
xor ecx ecx
mov eax ecx
test dl 0x10
je r-xdata
cmp [ ebx + 0x459f ] 0x0
je r-xdata
lea ecx [ ebp + 0x48 ]
call sub_40bddc
mov [ ebx + 0x4594 ] eax
push 0x3
mov ecx rw-data
mov [ ebx + 0x6cfc ] 0x1
call sub_406acc
cmp [ ebp + 0x76 ] 0x0
je r-xdata
cmp [ ebx + 0x459e ] 0x0
je r-xdata
mov eax ecx
test dl 0x10
je r-xdata
mov eax ecx
xor ecx ecx
jmp r-xdata
push 0x7
pop edi
lea ecx [ ebp + 0x48 ]
call sub_40bda7
movzx eax ax
mov [ ebx + 0x4598 ] eax
mov [ ebx + 0x6d10 ] eax
jmp r-xdata
lea eax [ ebx + 0x1e ]
push eax
push eax
push 0x4
call sub_401f25
mov [ ebx + 0x6cfd ] 0x1
jmp r-xdata
mov eax [ ebx ]
mov ecx ebx
mov [ ebp + 0x28 ] ebx
call [ eax + 0x10 ]
mov [ ebp + 0x30 ] eax
mov [ ebp + 0x34 ] edx
mov eax [ ebx ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x1
call [ eax + 0x10 ]
mov esi [ ebx ]
xor ecx ecx
sub eax edi
push ecx
sbb edx ecx
mov ecx ebx
push edx
push eax
call [ esi + 0xc ]
mov [ ebp + 0x77 ] 0x1
mov ecx edx
mov eax 0x10000
shr ecx 0x5
and ecx 0x7
shl eax cl
mov eax ecx
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp [ ebp + 0x77 ] 0x0
mov [ esi + 0x10e0 ] al
jne r-xdata
mov ecx ebx
call sub_40911f
neg al
sbb al al
not al
and [ ebp + 0x77 ] al
sub edi 0x1
jne r-xdata
lea ecx [ ebp + 0x28 ]
mov [ ebp - 0x4 ] 0x0
call sub_4017e5
cmp [ ebp + 0x77 ] 0x0
jne r-xdata
mov al [ esi + 0x18 ]
mov [ esi + 0x10ec ] 0x2
cmp al 0x3
je r-xdata
movzx edx [ esi + 0x19 ]
sub edx 0xd
je r-xdata
mov [ esi + 0x10e4 ] eax
lea ecx [ ebp + 0x48 ]
mov eax edx
shr edx 0xb
shr eax 0x3
and dl 0x1
and al 0x1
mov [ esi + 0x10e3 ] dl
mov [ esi + 0x10e2 ] al
call sub_40bddc
lea ecx [ ebp + 0x48 ]
mov [ esi + 0x14 ] eax
call sub_40bddc
lea ecx [ ebp + 0x48 ]
mov [ ebp + 0x6c ] eax
call sub_40bd8f
lea ecx [ ebp + 0x48 ]
mov [ esi + 0x18 ] al
mov [ esi + 0x1060 ] 0x2
call sub_40bddc
lea ecx [ ebp + 0x48 ]
mov [ esi + 0x1064 ] eax
call sub_40bddc
lea ecx [ ebp + 0x48 ]
mov [ ebp + 0x3c ] eax
call sub_40bd8f
lea ecx [ ebp + 0x48 ]
mov [ esi + 0x19 ] al
call sub_40bd8f
sub al 0x30
lea ecx [ ebp + 0x48 ]
mov [ esi + 0x1a ] al
call sub_40bda7
movzx eax ax
lea ecx [ ebp + 0x48 ]
mov [ ebp + 0x70 ] eax
call sub_40bddc
xor ecx ecx
mov edi eax
mov [ esi + 0x1c ] edi
mov [ esi + 0x108c ] ecx
cmp [ esi + 0x108b ] cl
je r-xdata
mov [ esi + 0x10ea ] al
mov eax edx
and eax 0xe0
cmp al 0xe0
sete al
mov [ esi + 0x10e1 ] al
test al al
je r-xdata
mov [ esi + 0x10ec ] 0x1
cmp al 0x5
je r-xdata
mov [ esi + 0x108c ] 0x1
dec edx
sub edx 0x1
je r-xdata
cmp [ ebp + 0x77 ] cl
jne r-xdata
and edi 0xf000
cmp edi 0xa000
jne r-xdata
cmp al 0x6
jae r-xdata
mov [ esi + 0x108c ] 0x2
jmp r-xdata
sub edx 0x5
je r-xdata
mov eax ecx
test [ esi + 0x1c ] 0x80000000
je r-xdata
xor eax eax
mov [ esi + 0x10f0 ] 0x1
mov [ esi + 0x10f4 ] ax
mov [ esi + 0x10f0 ] ecx
cmp al 0x3
jne r-xdata
mov [ esi + 0x10ec ] ecx
jmp r-xdata
mov [ esi + 0x108c ] 0x3
jmp r-xdata
sub edx 0x6
je r-xdata
cmp [ ebp + 0x6c ] 0xffffffff
mov edx ecx
mov edi ecx
sete al
lea ecx [ ebp + 0x48 ]
call sub_40bddc
lea ecx [ ebp + 0x48 ]
mov edi eax
call sub_40bddc
cmp [ ebp + 0x6c ] 0xffffffff
mov edx eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ esi + 0x108c ] 0x4
jmp r-xdata
mov eax [ ebp + 0x70 ]
mov edi 0x1fff
cmp eax edi
jae r-xdata
mov eax 0x7fffffff
mov [ esi + 0x1050 ] eax
mov [ esi + 0x1054 ] eax
xor ecx ecx
mov eax ecx
jmp r-xdata
cmp edx 0xffffffff
jne r-xdata
mov [ esi + 0x10e8 ] al
mov eax [ esi + 0x8 ]
shr eax 0x8
and al 0x1
mov [ esi + 0x10e9 ] al
je r-xdata
push edi
lea eax [ ebp - 0x200c ]
push eax
lea ecx [ ebp + 0x48 ]
call sub_40be3e
xor eax eax
mov [ ebp + edi - 0x200c ] al
cmp [ ebp + 0x77 ] al
je r-xdata
mov edi eax
mov [ esi + 0x108a ] al
xor eax eax
add eax [ esi + 0x14 ]
mov [ esi + 0x1048 ] eax
adc edi ecx
xor eax eax
add eax [ ebp + 0x6c ]
mov [ esi + 0x104c ] edi
adc edx ecx
mov [ esi + 0x1050 ] eax
cmp [ esi + 0x108a ] 0x0
mov [ esi + 0x1054 ] edx
je r-xdata
xor eax eax
inc eax
xor ecx ecx
jmp r-xdata
lea eax [ esi + 0x20 ]
push 0x800
push eax
mov [ ebp + 0x6c ] eax
lea eax [ ebp - 0x200c ]
push eax
call sub_40fc9f
mov edi [ esi + 0xc ]
sub edi [ ebp + 0x70 ]
sub edi 0x20
test [ esi + 0x8 ] 0x400
je r-xdata
test [ esi + 0x8 ] 0x200
je r-xdata
test edi edi
jle r-xdata
sub edi 0x8
lea edi [ esi + 0x20 ]
xor ecx ecx
mov [ edi ] cx
lea ecx [ ebp + 0x24 ]
call sub_4067c4
lea eax [ ebp - 0x200c ]
push eax
call sub_421720
mov ecx [ ebp + 0x70 ]
lea edi [ esi + 0x20 ]
inc eax
mov [ esp ] 0x800
sub ecx eax
push edi
push ecx
lea ecx [ ebp - 0x200c ]
add eax ecx
push eax
mov eax ecx
lea ecx [ ebp + 0x24 ]
push eax
call sub_4067d5
xor eax eax
jmp r-xdata
lea edi [ esi + 0x20 ]
lea eax [ esi + 0x1020 ]
push edi
mov ecx eax
mov [ ebp + 0x70 ] eax
call sub_401f56
push edi
push [ esi + 0x1020 ]
lea ecx [ ebp + 0x48 ]
call sub_40be3e
push r--data
lea edi [ esi + 0x20 ]
push edi
call sub_4216e0
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
mov ecx ebx
call sub_401fb5
jmp r-xdata
push 0x1
push 0x800
push edi
lea eax [ ebp - 0x200c ]
push eax
call sub_40e5d3
cmp [ edi ] ax
jne r-xdata
test [ esi + 0x8 ] 0x400
je r-xdata
mov [ ebx + 0x6cee ] 0x1
push r--data
push edi
call sub_4216e0
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp + 0x70 ]
mov edx [ eax ]
movzx ecx [ edx + 0xb ]
movzx eax [ edx + 0xa ]
shl ecx 0x8
add ecx eax
movzx eax [ edx + 0x9 ]
shl ecx 0x8
add ecx eax
movzx eax [ edx + 0x8 ]
and [ ebx + 0x21c4 ] 0x0
shl ecx 0x8
add ecx eax
mov eax ecx
mov ecx [ ebx + 0x21c4 ]
shld ecx eax 0x9
shl eax 0x9
mov [ ebx + 0x21c0 ] eax
mov eax [ ebx ]
mov [ ebx + 0x21c4 ] ecx
mov ecx ebx
call [ eax + 0x10 ]
mov esi edx
mov edi eax
push esi
push edi
push [ ebx + 0x21c4 ]
push [ ebx + 0x21c0 ]
call sub_40e57d
push esi
push edi
push 0x0
push 0xc8
push esi
push edi
mov [ ebx + 0x21c8 ] eax
mov [ ebp + 0x70 ] eax
call sub_41c190
add eax [ ebx + 0x21c0 ]
adc edx [ ebx + 0x21c4 ]
push edx
push eax
call sub_40e57d
mov ecx [ ebp + 0x70 ]
mov esi [ ebp + 0x68 ]
mov edi [ ebp + 0x6c ]
cmp eax ecx
jle r-xdata
push [ ebp + 0x3c ]
lea ecx [ esi + 0x1030 ]
call sub_40f6cb
test [ esi + 0x8 ] 0x1000
je r-xdata
push 0x8
lea eax [ esi + 0x1091 ]
push eax
lea ecx [ ebp + 0x48 ]
call sub_40be3e
lea eax [ ecx + 0x1 ]
mov [ ebx + 0x21c8 ] eax
jmp r-xdata
mov eax [ esi + 0x1048 ]
lea ecx [ ebp + 0x48 ]
add [ ebx + 0x6ce0 ] eax
mov eax [ esi + 0x104c ]
adc [ ebx + 0x6ce4 ] eax
mov al [ esi + 0x10e2 ]
mov [ ebp + 0x44 ] al
push [ ebp + 0x44 ]
call sub_40be8d
movzx eax ax
cmp [ esi ] eax
je r-xdata
lea ecx [ ebp + 0x48 ]
call sub_40bda7
movzx ecx ax
lea eax [ ebx + 0x32b0 ]
mov [ ebp + 0x28 ] eax
lea eax [ ebx + 0x32b8 ]
mov [ ebp + 0x2c ] eax
lea eax [ ebx + 0x32c0 ]
mov [ ebp + 0x30 ] eax
xor eax eax
mov esi eax
mov [ ebp + 0x34 ] eax
mov eax ecx
mov [ ebp + 0x70 ] esi
mov [ ebp + 0x6c ] eax
push 0x1
mov ecx rw-data
mov [ ebx + 0x6cfc ] 0x1
call sub_406acc
cmp [ ebp + 0x76 ] 0x0
jne r-xdata
inc esi
mov [ ebp + 0x70 ] esi
cmp esi 0x4
jl r-xdata
cmp [ ebp + esi * 4 + 0x28 ] 0x0
je r-xdata
push edi
lea eax [ ebx + 0x1e ]
push eax
push 0x1a
call sub_401f25
jmp r-xdata
push 0x3
pop ecx
sub ecx esi
mov ebx eax
shl cl 0x2
shr ebx cl
test bl 0x8
je r-xdata
mov ebx [ ebp + 0x44 ]
mov esi [ ebp + 0x68 ]
test esi esi
je r-xdata
mov ecx [ ebp + esi * 4 + 0x28 ]
lea eax [ ebp ]
push eax
call sub_40f4fa
test bl 0x4
je r-xdata
lea ecx [ ebp + 0x48 ]
call sub_40bddc
mov ecx [ ebp + esi * 4 + 0x28 ]
push eax
call sub_40f6cb
and [ ebp + 0x18 ] 0x0
and ebx 0x3
jle r-xdata
inc [ ebp + 0x14 ]
mov ecx [ ebp + esi * 4 + 0x28 ]
lea eax [ ebp ]
push eax
call sub_40f729
mov eax [ ebp + 0x6c ]
push 0x3
pop eax
sub eax ebx
shl eax 0x3
mov [ ebp + 0x3c ] eax
mov esi eax
lea ecx [ ebp + 0x48 ]
call sub_40bd8f
mov ecx esi
movzx eax al
shl eax cl
add esi 0x8
or [ ebp + 0x18 ] eax
sub ebx 0x1
jne r-xdata
mov esi [ ebp + 0x70 ]
sub_403087
push ebp
sub esp 0x5c
mov eax sub_42ebc7
call sub_41c16c
mov eax 0x2070
call sub_41c240
push ebx
push esi
mov ebx ecx
lea ecx [ ebp + 0x34 ]
push edi
push ebx
call sub_40bd64
xor ecx ecx
mov [ ebp + 0x20 ] ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebx + 0x6cf4 ] cl
je r-xdata
mov [ ebp + 0x5f ] cl
mov edx [ ebx + 0x6cf8 ]
xor eax eax
add edx 0x8
adc eax ecx
cmp [ ebx + 0x6cdc ] eax
jl r-xdata
lea ecx [ ebp + 0x34 ]
mov [ ebx + 0x21f4 ] 0x0
call sub_40bddc
push 0x4
lea ecx [ ebp + 0x34 ]
mov [ ebx + 0x21e4 ] eax
call sub_40bf44
lea ecx [ ebp + 0x34 ]
mov esi eax
call sub_40bedc
mov ecx eax
or ecx edx
je r-xdata
mov ecx ebx
call sub_403c2e
jmp r-xdata
jg r-xdata
mov ecx ebx
call sub_401f70
test esi esi
je r-xdata
lea ecx [ ebp + 0x34 ]
call sub_40a6f4
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x20 ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
lea esp [ ebp + 0x60 ]
pop ebp
retn
mov ecx ebx
mov [ ebp + 0x5f ] 0x1
call sub_403b17
mov eax [ ebx ]
lea ecx [ ebp + 0x10 ]
push 0x10
push ecx
mov ecx ebx
call [ eax + 0x8 ]
cmp eax 0x10
jne r-xdata
cmp [ ebx + 0x6cd8 ] edx
jbe r-xdata
lea edi [ esi + 0x4 ]
lea ecx [ esi - 0x3 ]
add edi eax
add ecx eax
js r-xdata
lea eax [ ebp + 0x54 ]
xor ecx ecx
push eax
push ecx
push [ ebx + 0x2260 ]
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebx + 0x2264 ]
push eax
mov eax [ ebx + 0x21bc ]
lea esi [ ebx + 0x1024 ]
add eax 0x4024
push eax
push 0x5
push ecx
mov ecx esi
call sub_405f32
cmp [ ebx + 0x225c ] 0x0
je r-xdata
cmp edi 0x7
jb r-xdata
mov [ ebp + 0x50 ] esi
jmp r-xdata
push 0x8
lea eax [ ebx + 0x2274 ]
push eax
lea eax [ ebp + 0x54 ]
push eax
call sub_41d710
add esp 0xc
test eax eax
je r-xdata
push ecx
lea ecx [ ebp + 0x34 ]
call sub_40bf68
cmp [ ebp + 0x48 ] edi
jb r-xdata
push 0x7
lea ecx [ ebp + 0x34 ]
call sub_40bf68
cmp eax 0x7
jae r-xdata
lea eax [ ebx + 0x1e ]
push eax
push 0x6
call sub_401546
push 0xb
mov ecx rw-data
mov [ ebx + 0x6cfd ] 0x1
call sub_406acc
jmp r-xdata
lea ecx [ ebp + 0x34 ]
call sub_40bebc
lea ecx [ ebp + 0x34 ]
mov esi eax
call sub_40bedc
lea ecx [ ebp + 0x34 ]
mov [ ebx + 0x21e8 ] eax
call sub_40bedc
mov [ ebx + 0x21ec ] eax
shr eax 0x2
and al 0x1
mov [ ebx + 0x21f0 ] edi
cmp [ ebx + 0x21e4 ] esi
mov [ ebx + 0x21f4 ] al
mov eax [ ebx + 0x21e8 ]
mov [ ebx + 0x21dc ] eax
setne al
mov [ ebp + 0x5e ] al
test al al
je r-xdata
xor eax eax
test [ ebx + 0x21ec ] 0x1
mov [ ebp + 0x30 ] eax
mov [ ebp + 0x2c ] eax
je r-xdata
mov ecx ebx
call sub_401f70
push 0x3
mov ecx rw-data
mov [ ebx + 0x6cfc ] 0x1
call sub_406acc
cmp [ ebp + 0x5f ] 0x0
je r-xdata
test [ ebx + 0x21ec ] 0x2
mov esi eax
mov edi eax
mov [ ebp + 0x24 ] esi
mov [ ebp + 0x58 ] edi
je r-xdata
lea ecx [ ebp + 0x34 ]
call sub_40bedc
mov ecx eax
mov [ ebp + 0x2c ] edx
xor eax eax
mov [ ebp + 0x30 ] ecx
cmp edx eax
jb r-xdata
lea eax [ ebx + 0x1e ]
push eax
push eax
push 0x4
call sub_401f25
mov [ ebx + 0x6cfd ] 0x1
jmp r-xdata
push [ ebx + 0x21f0 ]
mov ecx ebx
call sub_401974
add eax [ ebx + 0x6cd8 ]
push 0x0
pop edx
mov ecx edx
adc ecx [ ebx + 0x6cdc ]
add eax esi
mov [ ebx + 0x6ce0 ] eax
adc ecx edi
mov edi [ ebx + 0x21e8 ]
xor eax eax
mov [ ebx + 0x6ce4 ] ecx
inc eax
cmp edi eax
je r-xdata
lea ecx [ ebp + 0x34 ]
call sub_40bedc
mov esi eax
mov [ ebp + 0x24 ] eax
mov edi edx
mov [ ebp + 0x58 ] edx
ja r-xdata
lea edi [ ebx + 0x2208 ]
mov ecx edi
call sub_40a2d1
push 0x5
pop ecx
lea esi [ ebx + 0x21e4 ]
[ edi ] [ esi ]
lea ecx [ ebp + 0x34 ]
call sub_40bedc
mov edx eax
xor eax eax
inc eax
mov cl dl
and cl al
mov [ ebx + 0x6ced ] cl
mov ecx edx
shr ecx 0x2
and cl al
mov [ ebx + 0x6cec ] cl
mov ecx edx
shr ecx 0x4
and cl al
mov eax edx
shr eax 0x3
and al 0x1
mov [ ebx + 0x6cef ] cl
mov [ ebx + 0x6cf3 ] al
xor ecx ecx
xor eax eax
mov [ ebx + 0x6cf0 ] cl
inc eax
mov [ ebx + 0x6cf2 ] al
test dl 0x2
je r-xdata
jle r-xdata
cmp ecx [ ebx + 0x21f0 ]
jae r-xdata
mov [ ebx + 0x6d10 ] ecx
lea ecx [ ebp + 0x34 ]
call sub_40bedc
mov [ ebx + 0x6d10 ] eax
xor ecx ecx
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebx + 0x6ce4 ]
cmp eax [ ebx + 0x6cdc ]
jg r-xdata
cmp edi 0x3
jle r-xdata
mov eax ecx
cmp [ ebx + 0x6d10 ] ecx
je r-xdata
cmp [ ebx + 0x6ced ] 0x0
je r-xdata
mov eax [ ebp + 0x48 ]
mov [ ebp + 0x20 ] eax
jmp r-xdata
jl r-xdata
cmp edi 0x2
lea edi [ ebx + 0x2280 ]
je r-xdata
cmp edi 0x4
je r-xdata
lea eax [ ebx + 0x2208 ]
push eax
push ecx
lea eax [ ebp + 0x34 ]
mov ecx ebx
push eax
call sub_4020a6
mov ecx [ ebp + 0x30 ]
mov [ ebx + 0x6cf1 ] al
mov eax ecx
or eax [ ebp + 0x2c ]
je r-xdata
mov eax [ ebx + 0x6ce0 ]
cmp eax [ ebx + 0x6cd8 ]
jbe r-xdata
push edx
mov ecx edi
mov [ ebp + 0x28 ] edi
call sub_40a238
mov eax [ ebp + 0x24 ]
lea esi [ ebx + 0x21e4 ]
push 0x5
pop ecx
[ edi ] [ esi ]
mov esi [ ebp + 0x28 ]
lea ecx [ ebp + 0x34 ]
cmp [ ebx + 0x21e8 ] 0x2
sete [ ebp + 0x5f ]
mov [ esi + 0x1048 ] eax
mov eax [ ebp + 0x58 ]
mov [ esi + 0x10e9 ] 0x1
mov [ esi + 0x104c ] eax
call sub_40bedc
lea ecx [ ebp + 0x34 ]
mov [ esi + 0x1084 ] eax
call sub_40bedc
mov [ esi + 0x1050 ] eax
mov eax [ esi + 0x1084 ]
shr eax 0x3
and al 0x1
mov [ esi + 0x1054 ] edx
mov [ esi + 0x108a ] al
je r-xdata
lea edi [ ebx + 0x45c0 ]
push 0x5
pop ecx
lea edi [ ebx + 0x2248 ]
lea esi [ ebx + 0x21e4 ]
[ edi ] [ esi ]
lea ecx [ ebp + 0x34 ]
call sub_40bedc
test eax eax
je r-xdata
cmp edi 0x5
jne r-xdata
mov ecx [ esi + 0x104c ]
mov edi [ esi + 0x1054 ]
mov eax [ esi + 0x1048 ]
mov edx [ esi + 0x1050 ]
cmp ecx edi
jl r-xdata
mov eax 0x7fffffff
mov [ esi + 0x1050 ] eax
mov [ esi + 0x1054 ] eax
lea ecx [ ebp + 0x34 ]
call sub_40bedc
and al 0x1
lea ecx [ ebp + 0x34 ]
mov [ ebx + 0x225c ] al
call sub_40bd8f
movzx eax al
mov [ ebx + 0x2260 ] eax
cmp eax 0x18
ja r-xdata
lea eax [ ebx + 0x1e ]
mov ecx ebx
push eax
call sub_403c6f
jmp r-xdata
push 0x5
pop ecx
lea edi [ ebx + 0x4580 ]
lea esi [ ebx + 0x21e4 ]
[ edi ] [ esi ]
lea ecx [ ebp + 0x34 ]
call sub_40bedc
and al 0x1
xor ecx ecx
mov [ ebx + 0x459c ] al
mov [ ebx + 0x459e ] cx
mov [ ebx + 0x459d ] cl
jmp r-xdata
mov eax edx
mov ecx edi
jg r-xdata
push 0x10
lea eax [ ebx + 0x2264 ]
push eax
lea ecx [ ebp + 0x34 ]
call sub_40be3e
cmp [ ebx + 0x225c ] 0x0
je r-xdata
and [ esi + 0x1060 ] 0x0
test [ esi + 0x1084 ] 0x4
je r-xdata
lea ecx [ ebp + 0x34 ]
call sub_40bddc
push 0x0
push eax
lea ecx [ esi + 0x1030 ]
call sub_40f4cd
mov [ esi + 0x105c ] ecx
lea ecx [ ebp + 0x34 ]
mov [ esi + 0x1058 ] eax
call sub_40bedc
test [ esi + 0x1084 ] 0x2
mov [ esi + 0x1c ] eax
je r-xdata
cmp eax edx
ja r-xdata
mov [ ebx + 0x6cf4 ] 0x1
jmp r-xdata
push 0x8
lea esi [ ebx + 0x2274 ]
push esi
lea ecx [ ebp + 0x34 ]
call sub_40be3e
push 0x4
lea eax [ ebp + 0x58 ]
push eax
lea ecx [ ebp + 0x34 ]
call sub_40be3e
lea eax [ ebp - 0x7c ]
push eax
call sub_40e222
push 0x8
push esi
lea eax [ ebp - 0x7c ]
push eax
call sub_40e268
lea eax [ ebp ]
push eax
lea eax [ ebp - 0x7c ]
push eax
call sub_40e17b
push 0x4
lea eax [ ebp ]
push eax
lea eax [ ebp + 0x58 ]
push eax
call sub_41d710
add esp 0xc
neg eax
sbb al al
inc al
mov [ ebx + 0x225c ] al
and [ esi + 0x10f0 ] 0x0
lea ecx [ ebp + 0x34 ]
call sub_40bedc
mov ecx eax
mov [ ebp + 0x58 ] eax
shr ecx 0x7
and al 0x3f
and cl 0x7
add al 0x32
mov [ esi + 0x1a ] cl
lea ecx [ ebp + 0x34 ]
mov [ esi + 0x19 ] al
call sub_40bedc
lea ecx [ ebp + 0x34 ]
mov [ esi + 0x18 ] al
call sub_40bedc
mov ecx [ ebx + 0x21ec ]
xor edx edx
shr ecx 0x6
inc edx
mov edi eax
mov [ esi + 0x10ec ] 0x2
mov al [ esi + 0x18 ]
and cl dl
mov [ esi + 0x10e8 ] cl
cmp al dl
jne r-xdata
lea ecx [ ebp + 0x34 ]
mov [ esi + 0x1060 ] 0x2
call sub_40bddc
mov [ esi + 0x1064 ] eax
test al al
jne r-xdata
mov [ esi + 0x10ec ] edx
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax ecx
shr eax 0x3
and al dl
mov [ esi + 0x1088 ] al
mov eax ecx
shr ecx 0x5
shr eax 0x4
and cl dl
and al dl
mov [ esi + 0x10ea ] cl
cmp [ ebp + 0x5f ] 0x0
mov ecx [ ebp + 0x58 ]
mov [ esi + 0x1089 ] al
je r-xdata
and [ esi + 0x10ec ] 0x0
xor eax eax
test cl 0x40
je r-xdata
push edi
lea eax [ ebp - 0x207c ]
push eax
lea ecx [ ebp + 0x34 ]
call sub_40be3e
mov [ ebp + edi - 0x207c ] 0x0
lea eax [ ebp - 0x207c ]
push 0x800
lea edi [ esi + 0x20 ]
push edi
push eax
call sub_40fd55
mov ecx [ ebp + 0x30 ]
mov eax ecx
or eax [ ebp + 0x2c ]
je r-xdata
mov edi eax
mov eax edx
jmp r-xdata
cmp [ ebp + 0x5f ] 0x0
je r-xdata
push esi
push ecx
lea eax [ ebp + 0x34 ]
mov ecx ebx
push eax
call sub_4020a6
mov [ esi + 0x10e0 ] al
mov al [ esi + 0x1084 ]
and al dl
shr ecx 0xa
mov [ esi + 0x10e1 ] al
and ecx 0xf
movzx eax al
mov edx 0x20000
shl edx cl
neg eax
sbb eax eax
not eax
and eax edx
mov [ esi + 0x10e4 ] eax
movzx eax [ esi + 0x108b ]
neg eax
sbb eax eax
and eax 0x5
mov [ esi + 0x108c ] eax
mov eax 0x1fff
cmp edi eax
jb r-xdata
push r--data
push edi
call sub_4216e0
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
mov ecx ebx
call sub_401fb5
jmp r-xdata
cmp [ ebp + 0x5e ] 0x0
je r-xdata
mov [ ebx + 0x6cee ] 0x1
push edi
lea eax [ ebx + 0x1e ]
push eax
push 0x1a
call sub_401f25
jmp r-xdata
sub_4037fd
push ecx
push esi
mov esi ecx
cmp [ esi + 0x6cfd ] 0x0
je r-xdata
mov eax [ esi ]
call [ eax + 0x10 ]
mov [ esi + 0x6cd8 ] eax
mov eax [ esi + 0x6ce8 ]
dec eax
mov [ esi + 0x6cdc ] edx
sub eax 0x1
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esi
call sub_40263e
sub eax 0x1
jne r-xdata
pop esi
pop ecx
retn
mov eax ecx
mov eax [ esi + 0x6ce4 ]
cmp eax [ esi + 0x6cdc ]
jg r-xdata
mov ecx [ esp + 0x4 ]
jmp r-xdata
mov ecx esi
call sub_403087
jmp r-xdata
jl r-xdata
test ecx ecx
je r-xdata
mov ecx eax
mov ecx esi
call sub_401f70
jmp r-xdata
mov eax [ esi + 0x6ce0 ]
cmp eax [ esi + 0x6cd8 ]
ja r-xdata
sub_403878
mov eax sub_42ebdc
call sub_41c16c
mov eax 0xe6e0
call sub_41c240
push esi
mov esi ecx
cmp [ esi + 0x6cfc ] 0x0
je r-xdata
cmp [ esi + 0x45da ] 0x5
ja r-xdata
lea eax [ esi + 0x1e ]
push eax
push 0x1b
call sub_401546
push 0x3
mov ecx rw-data
call sub_406acc
jmp r-xdata
lea eax [ esi + 0x1e ]
push eax
push 0x1c
call sub_401546
movzx eax [ esi + 0x45d9 ]
xor ecx ecx
cmp [ esi + 0x6ce8 ] 0x3
setne cl
dec ecx
and ecx 0x15
add ecx 0x1d
cmp eax ecx
jg r-xdata
xor al al
mov eax [ esi + 0x5608 ]
or eax [ esi + 0x560c ]
jne r-xdata
push ebx
lea ebx [ esi + 0x20e8 ]
push edi
mov ecx ebx
call sub_40c103
push ebx
lea ecx [ ebp - 0xe6ec ]
call sub_4101ad
xor ebx ebx
lea ecx [ ebp - 0xe6ec ]
push ebx
push [ esi + 0x56a4 ]
mov [ ebp - 0x4 ] ebx
call sub_411660
mov edi [ ebp + 0x8 ]
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp [ esi + 0x5649 ] al
jne r-xdata
cmp [ esi + 0x564b ] bl
je r-xdata
cmp [ esi + 0x5614 ] ebx
jl r-xdata
mov al 0x1
jmp r-xdata
push 0x1
push [ esi + 0x5620 ]
lea ecx [ esi + 0x21a0 ]
call sub_40a0c4
mov eax [ esi + 0x5608 ]
lea ecx [ esi + 0x20e8 ]
push [ ebp + 0xc ]
mov [ esi + 0x2108 ] eax
mov eax [ esi + 0x560c ]
push esi
mov [ esi + 0x210c ] eax
mov [ esi + 0x2110 ] bl
call sub_40c1b5
mov al [ esi + 0x5649 ]
lea ecx [ esi + 0x20e8 ]
mov [ esi + 0x2137 ] al
lea eax [ esi + 0x45c0 ]
mov [ ecx + 0x38 ] eax
mov [ ecx + 0x3c ] ebx
mov eax [ esi + 0x5610 ]
mov edx [ esi + 0x5614 ]
mov [ ebp - 0x9aac ] eax
mov [ ebp - 0x9aa8 ] edx
mov [ ebp - 0x9a94 ] bl
cmp [ esi + 0x45da ] bl
jne r-xdata
mov edx [ esi + 0x21bc ]
cmp [ edx + 0x4124 ] bl
je r-xdata
test edi edi
jne r-xdata
jg r-xdata
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
movzx eax [ esi + 0x45d9 ]
lea ecx [ ebp - 0xe6ec ]
push ebx
push eax
call sub_4112c1
push edx
push eax
push ecx
call sub_408ad8
jmp r-xdata
lea ecx [ ebp - 0xe6ec ]
call sub_410373
pop edi
mov al bl
pop ebx
jmp r-xdata
movzx ecx [ esi + 0x5650 ]
lea eax [ esi + 0x5672 ]
push eax
lea eax [ esi + 0x567b ]
neg ecx
push eax
push [ esi + 0x569c ]
lea eax [ esi + 0x5661 ]
sbb ecx ecx
push eax
lea eax [ esi + 0x5651 ]
and ecx eax
lea eax [ edx + 0x4024 ]
push ecx
push eax
push [ esi + 0x564c ]
lea ecx [ esi + 0x20e8 ]
push ebx
call sub_40c16d
push [ esi + 0x5610 ]
mov ecx edi
call sub_401f56
push [ esi + 0x5610 ]
lea ecx [ esi + 0x20e8 ]
push [ edi ]
call sub_40c1d2
mov [ esi + 0x2111 ] 0x1
jmp r-xdata
lea eax [ esi + 0x1e ]
push eax
push 0x1c
call sub_401546
jmp r-xdata
cmp [ esi + 0x5610 ] 0x1000000
jbe r-xdata
mov bl 0x1
lea eax [ esi + 0x45e0 ]
push eax
lea eax [ esi + 0x1e ]
push eax
push 0x1d
call sub_401f25
push 0x3
mov ecx rw-data
call sub_406acc
test edi edi
je r-xdata
movzx edx [ esi + 0x567a ]
lea eax [ esi + 0x567b ]
neg edx
lea ecx [ esi + 0x21a0 ]
sbb edx edx
and edx eax
lea eax [ esi + 0x5620 ]
push edx
push eax
call sub_40a092
test al al
jne r-xdata
mov ecx edi
call sub_405bd9
jmp r-xdata
sub_403b17
push esi
mov esi ecx
mov eax [ esi + 0x21bc ]
cmp [ eax + 0x4124 ] 0x0
jne r-xdata
pop esi
retn
add eax 0x4024
push eax
lea eax [ esi + 0x1e ]
push eax
push 0x2
call sub_40fc5d
test al al
je r-xdata
mov ecx esi
call sub_408ebf
push 0x2
call sub_403c8d
push 0xff
mov ecx rw-data
call j_sub_406b14
mov eax [ esi + 0x21bc ]
cmp [ eax + 0x4124 ] 0x0
jne r-xdata
mov eax [ esi + 0x21bc ]
mov [ eax + 0x4127 ] 0x1
sub_403b79
push ebx
push ebp
push esi
push edi
mov esi ecx
xor ebx ebx
call sub_4037fd
mov edi eax
test edi edi
je r-xdata
xor eax eax
mov ebp [ esp + 0x14 ]
inc ebx
test bl 0x7f
jne r-xdata
cmp [ esi + 0x21dc ] 0x5
je r-xdata
cmp [ esi + 0x21dc ] ebp
je r-xdata
call sub_40ef9c
mov eax edi
jmp r-xdata
mov ecx esi
call sub_401ed6
mov ecx esi
call sub_4037fd
mov edi eax
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
cmp ebp 0x5
je r-xdata
sub_403bd2
push ebx
push esi
push edi
mov esi ecx
xor ebx ebx
jmp r-xdata
call sub_4037fd
mov edi eax
test edi edi
jne r-xdata
cmp [ esi + 0x21dc ] 0x5
je r-xdata
xor eax eax
inc ebx
test bl 0x7f
jne r-xdata
cmp [ esi + 0x21dc ] 0x3
jne r-xdata
call sub_40ef9c
mov ecx esi
call sub_401ed6
mov ecx esi
push [ esp + 0x10 ]
lea eax [ esi + 0x45e0 ]
push eax
call sub_4216e0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_403c2e
push esi
mov esi ecx
call sub_4090c9
cmp [ esi + 0x6cd8 ] eax
jne r-xdata
lea eax [ esi + 0x1e ]
push eax
push 0x37
call sub_401546
push 0x1
mov ecx rw-data
call sub_406acc
cmp [ esi + 0x6cdc ] edx
jne r-xdata
cmp [ esi + 0x6ce0 ] eax
jne r-xdata
cmp [ esi + 0x6ce4 ] edx
je r-xdata
pop esi
retn
sub_403cb5
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_403caf
push [ eax + 0x4 ]
push [ eax ]
call sub_422acd
add esp 0x1c
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_403d0a
push ebx
push ebp
mov ebx ecx
mov ebp 0x200
push esi
push edi
mov esi [ ebx + 0x8 ]
mov edi [ ebx + 0x4 ]
jmp r-xdata
cmp esi ebp
jae r-xdata
cmp [ rw-data ] 0x1
jl r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x40
push edi
push [ ebx ]
call sub_405544
add edi ebp
sub esi ebp
cmp esi 0x400
jb r-xdata
prefetcht0 [ edi + 0x200 ]
sub_403d4c
sub esp 0xbc
mov edx [ esp + 0xc0 ]
push ebx
push ebp
push esi
mov eax [ edx + 0xf8 ]
mov esi [ esp + 0xd0 ]
push edi
push 0x10
pop ecx
lea edi [ esp + 0x8c ]
mov [ esp + 0x18 ] 0x3c6ef372
[ edi ] [ esi ]
mov esi [ edx + 0xf4 ]
lea edi [ esp + 0x4c ]
push 0x8
pop ecx
[ edi ] [ esi ]
mov esi [ eax ]
mov ecx 0x6a09e667
mov edi [ eax + 0x4 ]
xor esi 0x510e527f
mov eax [ edx + 0xfc ]
xor edi 0x9b05688c
mov ebx [ esp + 0x64 ]
mov [ esp + 0x28 ] ecx
mov ecx 0xbb67ae85
mov [ esp + 0x30 ] ecx
mov edx [ eax ]
mov eax [ eax + 0x4 ]
xor edx 0x1f83d9ab
mov ecx [ esp + 0x5c ]
xor eax 0x5be0cd19
mov [ esp + 0x44 ] eax
xor ebp ebp
mov eax [ esp + 0x68 ]
mov [ esp + 0x3c ] eax
mov eax [ esp + 0x60 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x58 ]
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x54 ]
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x50 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x4c ]
mov [ esp + 0x10 ] ebp
mov [ esp + 0x48 ] ebp
mov ebp [ esp + 0x44 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x24 ] 0xa54ff53a
mov [ esp + 0x40 ] ebx
mov [ esp + 0x34 ] ecx
movzx eax [ eax + r--data ]
mov eax [ esp + eax * 4 + 0x8c ]
add eax ecx
mov ecx [ esp + 0x14 ]
add ecx eax
mov eax [ esp + 0x28 ]
mov [ esp + 0x14 ] ecx
xor ecx esi
mov esi [ esp + 0x34 ]
ror ecx 0x10
add eax ecx
xor esi eax
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x10 ]
ror esi 0xc
mov [ esp + 0x34 ] esi
movzx eax [ eax + r--data ]
mov eax [ esp + eax * 4 + 0x8c ]
add eax esi
mov esi [ esp + 0x14 ]
add esi eax
mov eax [ esp + 0x34 ]
mov [ esp + 0x14 ] esi
xor esi ecx
mov ecx [ esp + 0x28 ]
ror esi 0x8
add ecx esi
xor eax ecx
mov [ esp + 0x28 ] ecx
ror eax 0x7
mov [ esp + 0x34 ] eax
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x20 ]
movzx eax [ eax + r--data ]
mov eax [ esp + eax * 4 + 0x8c ]
add eax [ esp + 0x1c ]
add ecx eax
mov eax [ esp + 0x30 ]
mov [ esp + 0x20 ] ecx
xor ecx edi
mov edi [ esp + 0x1c ]
ror ecx 0x10
add eax ecx
xor edi eax
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x10 ]
ror edi 0xc
mov [ esp + 0x1c ] edi
movzx eax [ eax + r--data ]
mov eax [ esp + eax * 4 + 0x8c ]
add eax edi
mov edi [ esp + 0x20 ]
add edi eax
mov eax [ esp + 0x1c ]
mov [ esp + 0x20 ] edi
xor edi ecx
mov ecx [ esp + 0x30 ]
ror edi 0x8
add ecx edi
xor eax ecx
mov [ esp + 0x30 ] ecx
ror eax 0x7
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x10 ]
movzx eax [ eax + r--data ]
mov eax [ esp + eax * 4 + 0x8c ]
add eax ebx
mov ebx [ esp + 0x38 ]
add ebx eax
mov eax [ esp + 0x18 ]
mov ecx ebx
xor ecx edx
mov edx [ esp + 0x40 ]
ror ecx 0x10
add eax ecx
xor edx eax
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x10 ]
ror edx 0xc
movzx eax [ eax + r--data ]
mov eax [ esp + eax * 4 + 0x8c ]
add eax edx
add ebx eax
mov eax [ esp + 0x18 ]
mov [ esp + 0x38 ] ebx
xor ebx ecx
mov ecx [ esp + 0x2c ]
ror ebx 0x8
add eax ebx
xor edx eax
mov [ esp + 0x18 ] eax
ror edx 0x7
mov [ esp + 0x40 ] edx
mov edx [ esp + 0x10 ]
movzx eax [ edx + r--data ]
mov eax [ esp + eax * 4 + 0x8c ]
add eax [ esp + 0x3c ]
add ecx eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x2c ] ecx
xor ecx ebp
mov ebp [ esp + 0x3c ]
ror ecx 0x10
add eax ecx
xor ebp eax
mov [ esp + 0x24 ] eax
movzx eax [ edx + r--data ]
mov edx [ esp + 0x2c ]
ror ebp 0xc
mov eax [ esp + eax * 4 + 0x8c ]
add eax ebp
add edx eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x2c ] edx
xor edx ecx
mov ecx [ esp + 0x14 ]
ror edx 0x8
add eax edx
xor ebp eax
mov [ esp + 0x24 ] eax
ror ebp 0x7
mov [ esp + 0x3c ] ebp
mov ebp [ esp + 0x10 ]
movzx eax [ ebp + r--data ]
mov eax [ esp + eax * 4 + 0x8c ]
add eax [ esp + 0x1c ]
add ecx eax
mov eax [ esp + 0x18 ]
mov [ esp + 0x14 ] ecx
xor ecx edx
mov edx [ esp + 0x1c ]
ror ecx 0x10
add eax ecx
xor edx eax
mov [ esp + 0x18 ] eax
movzx eax [ ebp + r--data ]
mov ebp [ esp + 0x14 ]
ror edx 0xc
mov eax [ esp + eax * 4 + 0x8c ]
add eax edx
add ebp eax
mov eax [ esp + 0x18 ]
mov [ esp + 0x14 ] ebp
mov [ esp + 0x4c ] ebp
xor ebp ecx
mov ecx [ esp + 0x20 ]
ror ebp 0x8
add eax ebp
xor edx eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x74 ] eax
mov eax [ esp + 0x10 ]
ror edx 0x7
mov [ esp + 0x1c ] edx
mov [ esp + 0x60 ] edx
movzx eax [ eax + r--data ]
mov edx [ esp + 0x40 ]
mov eax [ esp + eax * 4 + 0x8c ]
add eax edx
add ecx eax
mov [ esp + 0x20 ] ecx
xor ecx esi
mov eax [ esp + 0x24 ]
mov esi [ esp + 0x20 ]
ror ecx 0x10
add eax ecx
xor edx eax
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x10 ]
ror edx 0xc
movzx eax [ eax + r--data ]
mov eax [ esp + eax * 4 + 0x8c ]
add eax edx
add esi eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x20 ] esi
mov [ esp + 0x50 ] esi
xor esi ecx
mov ecx [ esp + 0x38 ]
ror esi 0x8
add eax esi
xor edx eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x78 ] eax
mov eax [ esp + 0x10 ]
ror edx 0x7
mov [ esp + 0x40 ] edx
mov [ esp + 0x64 ] edx
movzx eax [ eax + r--data ]
mov edx [ esp + 0x3c ]
mov eax [ esp + eax * 4 + 0x8c ]
add eax edx
add ecx eax
mov eax [ esp + 0x28 ]
mov [ esp + 0x38 ] ecx
xor ecx edi
mov edi [ esp + 0x38 ]
ror ecx 0x10
add eax ecx
xor edx eax
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x10 ]
ror edx 0xc
movzx eax [ eax + r--data ]
mov eax [ esp + eax * 4 + 0x8c ]
add eax edx
add edi eax
mov eax [ esp + 0x28 ]
mov [ esp + 0x38 ] edi
mov [ esp + 0x54 ] edi
xor edi ecx
mov ecx [ esp + 0x2c ]
ror edi 0x8
add eax edi
xor edx eax
mov [ esp + 0x28 ] eax
ror edx 0x7
mov [ esp + 0x3c ] edx
mov [ esp + 0x68 ] edx
mov edx [ esp + 0x10 ]
mov [ esp + 0x6c ] eax
movzx eax [ edx + r--data ]
mov eax [ esp + eax * 4 + 0x8c ]
add eax [ esp + 0x34 ]
add ecx eax
mov eax [ esp + 0x30 ]
mov [ esp + 0x2c ] ecx
xor ecx ebx
mov ebx [ esp + 0x34 ]
ror ecx 0x10
add eax ecx
xor ebx eax
mov [ esp + 0x30 ] eax
movzx eax [ edx + r--data ]
mov edx [ esp + 0x2c ]
ror ebx 0xc
mov eax [ esp + eax * 4 + 0x8c ]
add eax ebx
add edx eax
mov [ esp + 0x2c ] edx
mov [ esp + 0x58 ] edx
xor edx ecx
ror edx 0x8
mov eax [ esp + 0x30 ]
add eax edx
xor ebx eax
mov [ esp + 0x30 ] eax
mov [ esp + 0x70 ] eax
mov eax [ esp + 0x10 ]
ror ebx 0x7
add eax 0x10
mov [ esp + 0x34 ] ebx
mov ecx [ esp + 0x34 ]
mov [ esp + 0x5c ] ebx
mov ebx [ esp + 0x40 ]
mov [ esp + 0x10 ] eax
cmp eax 0x90
jbe r-xdata
mov [ esp + 0x84 ] edx
mov edx [ esp + 0xd0 ]
mov [ esp + 0x88 ] ebp
mov ebp [ esp + 0x48 ]
mov [ esp + 0x7c ] esi
mov [ esp + 0x80 ] edi
mov ecx [ edx + 0xf4 ]
mov eax [ esp + ebp + 0x6c ]
xor eax [ ecx + ebp ]
xor eax [ esp + ebp + 0x4c ]
mov [ ecx + ebp ] eax
add ebp 0x4
cmp ebp 0x20
jb r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0xbc
retn 0x8
sub_404221
push ebp
mov ebp esp
and esp 0xfffffff0
sub esp 0x78
mov ecx [ ebp + 0x8 ]
push esi
push edi
mov eax [ ecx + 0xf4 ]
mov [ esp + 0x3c ] eax
movaps xmm4 [ eax ]
movaps xmm5 [ eax + 0x10 ]
mov eax [ ecx + 0xf8 ]
movaps [ esp + 0x40 ] xmm5
movaps [ esp + 0x70 ] xmm4
movaps xmm3 [ eax ]
mov eax [ ebp + 0xc ]
pxor xmm3 [ rw-data ]
mov ecx [ eax + 0x18 ]
mov edx [ eax + 0x10 ]
mov esi [ eax + 0x8 ]
mov edi [ eax ]
movd xmm2 ecx
movd xmm0 edx
movd xmm1 esi
punpckldq xmm1 xmm2
movd xmm6 edi
punpckldq xmm6 xmm0
punpckldq xmm6 xmm1
paddd xmm6 xmm4
mov [ esp + 0x24 ] esi
mov esi [ eax + 0x14 ]
paddd xmm6 xmm5
pxor xmm3 xmm6
mov [ esp + 0x2c ] edi
mov edi [ eax + 0xc ]
movaps xmm7 xmm3
pslld xmm3 0x10
psrld xmm7 0x10
mov [ esp + 0x1c ] ecx
mov ecx [ eax + 0x4 ]
pxor xmm7 xmm3
movaps xmm5 xmm7
mov [ esp + 0x20 ] edx
paddd xmm5 [ rw-data ]
mov edx [ eax + 0x1c ]
movaps xmm0 xmm5
pxor xmm0 [ esp + 0x40 ]
movaps xmm4 xmm0
movd xmm1 edi
psrld xmm0 0xc
pslld xmm4 0x14
movd xmm2 edx
pxor xmm4 xmm0
punpckldq xmm1 xmm2
movd xmm0 esi
movd xmm3 ecx
punpckldq xmm3 xmm0
punpckldq xmm3 xmm1
paddd xmm3 xmm6
mov [ esp + 0x18 ] esi
mov esi [ eax + 0x30 ]
paddd xmm3 xmm4
pxor xmm7 xmm3
movaps [ esp + 0x50 ] xmm3
movaps xmm3 xmm7
mov [ esp + 0x28 ] edi
mov edi [ eax + 0x38 ]
pslld xmm3 0x18
psrld xmm7 0x8
mov [ esp + 0x14 ] edx
pxor xmm3 xmm7
mov [ esp + 0x10 ] ecx
movaps xmm2 xmm3
mov [ esp + 0x34 ] edi
paddd xmm2 xmm5
pshufd xmm3 xmm3 0x93
movaps xmm0 xmm2
mov [ esp + 0x30 ] esi
pxor xmm0 xmm4
pshufd xmm4 xmm2 0x4e
movaps xmm1 xmm0
psrld xmm0 0x7
pslld xmm1 0x19
pxor xmm1 xmm0
pshufd xmm5 xmm1 0x39
mov edx [ eax + 0x28 ]
mov ecx [ eax + 0x20 ]
movd xmm2 edi
mov edi [ eax + 0x3c ]
movd xmm0 esi
mov esi [ eax + 0x34 ]
movd xmm1 edx
punpckldq xmm1 xmm2
movd xmm7 ecx
punpckldq xmm7 xmm0
punpckldq xmm7 xmm1
paddd xmm7 [ esp + 0x50 ]
paddd xmm7 xmm5
mov [ esp + 0x38 ] edi
mov edi [ eax + 0x2c ]
pxor xmm3 xmm7
mov eax [ eax + 0x24 ]
movaps xmm0 xmm3
psrld xmm0 0x10
pslld xmm3 0x10
mov [ esp + 0xc ] edi
pxor xmm0 xmm3
mov edi [ esp + 0x38 ]
movd xmm1 [ esp + 0xc ]
movaps xmm6 xmm0
movaps [ esp + 0x50 ] xmm0
paddd xmm6 xmm4
movaps xmm0 xmm6
movd xmm3 eax
pxor xmm0 xmm5
movd xmm2 edi
movaps xmm4 xmm0
punpckldq xmm1 xmm2
psrld xmm0 0xc
pslld xmm4 0x14
pxor xmm4 xmm0
movd xmm0 esi
punpckldq xmm3 xmm0
movaps xmm0 [ esp + 0x50 ]
punpckldq xmm3 xmm1
paddd xmm3 xmm7
movd xmm7 [ esp + 0x34 ]
paddd xmm3 xmm4
pxor xmm0 xmm3
movaps [ esp + 0x60 ] xmm3
movaps xmm3 xmm0
psrld xmm0 0x8
pslld xmm3 0x18
pxor xmm3 xmm0
movaps xmm2 xmm3
pshufd xmm3 xmm3 0x39
paddd xmm2 xmm6
movaps xmm0 xmm2
pxor xmm0 xmm4
pshufd xmm4 xmm2 0x4e
movaps xmm1 xmm0
movd xmm2 esi
psrld xmm0 0x7
pslld xmm1 0x19
pxor xmm1 xmm0
movd xmm0 eax
punpckldq xmm7 xmm0
pshufd xmm5 xmm1 0x93
movd xmm1 [ esp + 0x20 ]
punpckldq xmm1 xmm2
punpckldq xmm7 xmm1
paddd xmm7 [ esp + 0x60 ]
paddd xmm7 xmm5
pxor xmm3 xmm7
movaps xmm0 xmm3
pslld xmm3 0x10
psrld xmm0 0x10
pxor xmm0 xmm3
movaps xmm6 xmm0
movaps [ esp + 0x60 ] xmm0
paddd xmm6 xmm4
movaps xmm0 xmm6
pxor xmm0 xmm5
movaps xmm4 xmm0
psrld xmm0 0xc
pslld xmm4 0x14
movd xmm2 [ esp + 0x1c ]
pxor xmm4 xmm0
movd xmm0 edi
movd xmm1 ecx
punpckldq xmm1 xmm2
movd xmm3 edx
punpckldq xmm3 xmm0
movaps xmm0 [ esp + 0x60 ]
punpckldq xmm3 xmm1
paddd xmm3 xmm7
movd xmm7 [ esp + 0x10 ]
paddd xmm3 xmm4
pxor xmm0 xmm3
movaps [ esp + 0x50 ] xmm3
movaps xmm3 xmm0
psrld xmm0 0x8
pslld xmm3 0x18
pxor xmm3 xmm0
movaps xmm2 xmm3
pshufd xmm3 xmm3 0x93
paddd xmm2 xmm6
movaps xmm0 xmm2
pxor xmm0 xmm4
pshufd xmm4 xmm2 0x4e
movd xmm2 [ esp + 0x18 ]
movaps xmm1 xmm0
psrld xmm0 0x7
pslld xmm1 0x19
pxor xmm1 xmm0
movd xmm0 [ esp + 0xc ]
punpckldq xmm7 xmm0
pshufd xmm5 xmm1 0x39
movd xmm1 [ esp + 0x2c ]
punpckldq xmm1 xmm2
punpckldq xmm7 xmm1
paddd xmm7 [ esp + 0x50 ]
movd xmm2 [ esp + 0x28 ]
paddd xmm7 xmm5
pxor xmm3 xmm7
movd xmm1 [ esp + 0x24 ]
movaps xmm0 xmm3
punpckldq xmm1 xmm2
psrld xmm0 0x10
pslld xmm3 0x10
pxor xmm0 xmm3
movd xmm3 [ esp + 0x30 ]
movaps xmm6 xmm0
movaps [ esp + 0x60 ] xmm0
paddd xmm6 xmm4
movaps xmm0 xmm6
pxor xmm0 xmm5
movaps xmm4 xmm0
psrld xmm0 0xc
pslld xmm4 0x14
pxor xmm4 xmm0
movd xmm0 [ esp + 0x14 ]
punpckldq xmm3 xmm0
movaps xmm0 [ esp + 0x60 ]
punpckldq xmm3 xmm1
paddd xmm3 xmm7
paddd xmm3 xmm4
pxor xmm0 xmm3
movaps [ esp + 0x50 ] xmm3
movaps xmm3 xmm0
psrld xmm0 0x8
pslld xmm3 0x18
pxor xmm3 xmm0
movaps xmm2 xmm3
pshufd xmm3 xmm3 0x39
paddd xmm2 xmm6
movaps xmm0 xmm2
pxor xmm0 xmm4
pshufd xmm4 xmm2 0x4e
movaps xmm1 xmm0
movd xmm2 edi
pslld xmm1 0x19
psrld xmm0 0x7
pxor xmm1 xmm0
movd xmm0 [ esp + 0x18 ]
pshufd xmm5 xmm1 0x93
movd xmm1 [ esp + 0x30 ]
movd xmm7 [ esp + 0xc ]
punpckldq xmm7 xmm0
punpckldq xmm1 xmm2
punpckldq xmm7 xmm1
paddd xmm7 [ esp + 0x50 ]
paddd xmm7 xmm5
movd xmm1 [ esp + 0x2c ]
pxor xmm3 xmm7
movd xmm2 esi
movaps xmm0 xmm3
punpckldq xmm1 xmm2
psrld xmm0 0x10
pslld xmm3 0x10
pxor xmm0 xmm3
movd xmm3 ecx
movaps xmm6 xmm0
movaps [ esp + 0x60 ] xmm0
paddd xmm6 xmm4
movaps xmm0 xmm6
pxor xmm0 xmm5
movaps xmm4 xmm0
psrld xmm0 0xc
pslld xmm4 0x14
pxor xmm4 xmm0
movd xmm0 [ esp + 0x24 ]
punpckldq xmm3 xmm0
movaps xmm0 [ esp + 0x60 ]
punpckldq xmm3 xmm1
paddd xmm3 xmm7
movd xmm7 edx
paddd xmm3 xmm4
pxor xmm0 xmm3
movaps [ esp + 0x50 ] xmm3
movaps xmm3 xmm0
psrld xmm0 0x8
pslld xmm3 0x18
pxor xmm3 xmm0
movaps xmm2 xmm3
pshufd xmm3 xmm3 0x93
paddd xmm2 xmm6
movaps xmm0 xmm2
pxor xmm0 xmm4
pshufd xmm4 xmm2 0x4e
movaps xmm1 xmm0
movd xmm2 eax
psrld xmm0 0x7
pslld xmm1 0x19
pxor xmm1 xmm0
movd xmm0 [ esp + 0x14 ]
punpckldq xmm7 xmm0
pshufd xmm5 xmm1 0x39
movd xmm1 [ esp + 0x28 ]
punpckldq xmm1 xmm2
punpckldq xmm7 xmm1
paddd xmm7 [ esp + 0x50 ]
movd xmm2 [ esp + 0x20 ]
paddd xmm7 xmm5
movd xmm1 [ esp + 0x1c ]
pxor xmm3 xmm7
movaps xmm0 xmm3
punpckldq xmm1 xmm2
psrld xmm0 0x10
pslld xmm3 0x10
pxor xmm0 xmm3
movd xmm3 [ esp + 0x34 ]
movaps xmm6 xmm0
movaps [ esp + 0x60 ] xmm0
paddd xmm6 xmm4
movaps xmm0 xmm6
pxor xmm0 xmm5
movaps xmm4 xmm0
psrld xmm0 0xc
pslld xmm4 0x14
pxor xmm4 xmm0
movd xmm0 [ esp + 0x10 ]
punpckldq xmm3 xmm0
movaps xmm0 [ esp + 0x60 ]
punpckldq xmm3 xmm1
paddd xmm3 xmm7
paddd xmm3 xmm4
movaps [ esp + 0x50 ] xmm3
pxor xmm0 xmm3
movd xmm7 [ esp + 0x14 ]
movaps xmm3 xmm0
psrld xmm0 0x8
pslld xmm3 0x18
pxor xmm3 xmm0
movaps xmm2 xmm3
pshufd xmm3 xmm3 0x39
paddd xmm2 xmm6
movaps xmm0 xmm2
pxor xmm0 xmm4
pshufd xmm4 xmm2 0x4e
movd xmm2 [ esp + 0xc ]
movaps xmm1 xmm0
psrld xmm0 0x7
pslld xmm1 0x19
pxor xmm1 xmm0
movd xmm0 esi
punpckldq xmm7 xmm0
pshufd xmm5 xmm1 0x93
movd xmm1 [ esp + 0x28 ]
punpckldq xmm1 xmm2
punpckldq xmm7 xmm1
paddd xmm7 [ esp + 0x50 ]
movd xmm2 [ esp + 0x34 ]
paddd xmm7 xmm5
pxor xmm3 xmm7
movd xmm1 [ esp + 0x10 ]
movaps xmm0 xmm3
punpckldq xmm1 xmm2
psrld xmm0 0x10
pslld xmm3 0x10
pxor xmm0 xmm3
movd xmm3 eax
movaps xmm6 xmm0
movaps [ esp + 0x60 ] xmm0
paddd xmm6 xmm4
movaps xmm0 xmm6
pxor xmm0 xmm5
movaps xmm4 xmm0
psrld xmm0 0xc
pslld xmm4 0x14
pxor xmm4 xmm0
movd xmm0 [ esp + 0x30 ]
punpckldq xmm3 xmm0
movaps xmm0 [ esp + 0x60 ]
punpckldq xmm3 xmm1
paddd xmm3 xmm7
movd xmm7 [ esp + 0x24 ]
paddd xmm3 xmm4
pxor xmm0 xmm3
movaps [ esp + 0x50 ] xmm3
movaps xmm3 xmm0
psrld xmm0 0x8
pslld xmm3 0x18
pxor xmm3 xmm0
movaps xmm2 xmm3
pshufd xmm3 xmm3 0x93
paddd xmm2 xmm6
movaps xmm0 xmm2
pxor xmm0 xmm4
pshufd xmm4 xmm2 0x4e
movaps xmm1 xmm0
movd xmm2 edi
psrld xmm0 0x7
pslld xmm1 0x19
pxor xmm1 xmm0
movd xmm0 [ esp + 0x20 ]
pshufd xmm5 xmm1 0x39
movd xmm1 [ esp + 0x18 ]
punpckldq xmm7 xmm0
punpckldq xmm1 xmm2
punpckldq xmm7 xmm1
paddd xmm7 [ esp + 0x50 ]
paddd xmm7 xmm5
pxor xmm3 xmm7
movaps xmm0 xmm3
pslld xmm3 0x10
psrld xmm0 0x10
pxor xmm0 xmm3
movaps [ esp + 0x60 ] xmm0
movaps xmm6 xmm0
movd xmm3 [ esp + 0x1c ]
paddd xmm6 xmm4
movd xmm2 ecx
movaps xmm0 xmm6
movd xmm1 edx
pxor xmm0 xmm5
punpckldq xmm1 xmm2
movaps xmm4 xmm0
psrld xmm0 0xc
pslld xmm4 0x14
pxor xmm4 xmm0
movd xmm0 [ esp + 0x2c ]
punpckldq xmm3 xmm0
movaps xmm0 [ esp + 0x60 ]
punpckldq xmm3 xmm1
paddd xmm3 xmm7
movd xmm7 eax
paddd xmm3 xmm4
pxor xmm0 xmm3
movaps [ esp + 0x50 ] xmm3
movaps xmm3 xmm0
psrld xmm0 0x8
pslld xmm3 0x18
pxor xmm3 xmm0
movaps xmm2 xmm3
pshufd xmm3 xmm3 0x39
paddd xmm2 xmm6
movaps xmm0 xmm2
pxor xmm0 xmm4
pshufd xmm4 xmm2 0x4e
movaps xmm1 xmm0
movd xmm2 edx
psrld xmm0 0x7
pslld xmm1 0x19
pxor xmm1 xmm0
movd xmm0 [ esp + 0x24 ]
punpckldq xmm7 xmm0
pshufd xmm5 xmm1 0x93
movd xmm1 [ esp + 0x18 ]
punpckldq xmm1 xmm2
punpckldq xmm7 xmm1
paddd xmm7 [ esp + 0x50 ]
movd xmm1 [ esp + 0x14 ]
paddd xmm7 xmm5
pxor xmm3 xmm7
movd xmm2 edi
movaps xmm0 xmm3
punpckldq xmm1 xmm2
psrld xmm0 0x10
pslld xmm3 0x10
pxor xmm0 xmm3
movd xmm3 [ esp + 0x2c ]
movaps xmm6 xmm0
movaps [ esp + 0x60 ] xmm0
paddd xmm6 xmm4
movaps xmm0 xmm6
pxor xmm0 xmm5
movaps xmm4 xmm0
psrld xmm0 0xc
pslld xmm4 0x14
pxor xmm4 xmm0
movd xmm0 [ esp + 0x20 ]
punpckldq xmm3 xmm0
movaps xmm0 [ esp + 0x60 ]
punpckldq xmm3 xmm1
paddd xmm3 xmm7
paddd xmm3 xmm4
pxor xmm0 xmm3
movaps [ esp + 0x50 ] xmm3
movaps xmm3 xmm0
psrld xmm0 0x8
pslld xmm3 0x18
pxor xmm3 xmm0
movaps xmm2 xmm3
paddd xmm2 xmm6
movaps xmm0 xmm2
pxor xmm0 xmm4
movaps xmm1 xmm0
psrld xmm0 0x7
pslld xmm1 0x19
pxor xmm1 xmm0
movd xmm7 [ esp + 0x34 ]
movd xmm0 [ esp + 0x1c ]
punpckldq xmm7 xmm0
pshufd xmm5 xmm1 0x39
movd xmm1 [ esp + 0xc ]
pshufd xmm4 xmm2 0x4e
movd xmm2 [ esp + 0x28 ]
punpckldq xmm1 xmm2
punpckldq xmm7 xmm1
paddd xmm7 [ esp + 0x50 ]
pshufd xmm3 xmm3 0x93
paddd xmm7 xmm5
pxor xmm3 xmm7
movd xmm1 [ esp + 0x30 ]
movaps xmm0 xmm3
movd xmm2 esi
psrld xmm0 0x10
pslld xmm3 0x10
punpckldq xmm1 xmm2
pxor xmm0 xmm3
movd xmm3 [ esp + 0x10 ]
movaps xmm6 xmm0
movaps [ esp + 0x60 ] xmm0
paddd xmm6 xmm4
movaps xmm0 xmm6
pxor xmm0 xmm5
movaps xmm4 xmm0
psrld xmm0 0xc
pslld xmm4 0x14
pxor xmm4 xmm0
movd xmm0 ecx
punpckldq xmm3 xmm0
movaps xmm0 [ esp + 0x60 ]
punpckldq xmm3 xmm1
paddd xmm3 xmm7
movd xmm7 [ esp + 0x24 ]
paddd xmm3 xmm4
pxor xmm0 xmm3
movaps [ esp + 0x50 ] xmm3
movaps xmm3 xmm0
psrld xmm0 0x8
pslld xmm3 0x18
pxor xmm3 xmm0
movaps xmm2 xmm3
pshufd xmm3 xmm3 0x39
paddd xmm2 xmm6
movaps xmm0 xmm2
pxor xmm0 xmm4
pshufd xmm4 xmm2 0x4e
movaps xmm1 xmm0
movd xmm2 ecx
psrld xmm0 0x7
pslld xmm1 0x19
pxor xmm1 xmm0
movd xmm0 [ esp + 0x2c ]
punpckldq xmm7 xmm0
pshufd xmm5 xmm1 0x93
movd xmm1 [ esp + 0x1c ]
punpckldq xmm1 xmm2
movd xmm2 [ esp + 0x28 ]
punpckldq xmm7 xmm1
paddd xmm7 [ esp + 0x50 ]
paddd xmm7 xmm5
movd xmm1 edx
pxor xmm3 xmm7
movaps xmm0 xmm3
pslld xmm3 0x10
psrld xmm0 0x10
pxor xmm0 xmm3
movd xmm3 [ esp + 0x30 ]
movaps xmm6 xmm0
movaps [ esp + 0x60 ] xmm0
paddd xmm6 xmm4
movaps xmm0 xmm6
pxor xmm0 xmm5
movaps xmm4 xmm0
psrld xmm0 0xc
pslld xmm4 0x14
pxor xmm4 xmm0
movd xmm0 [ esp + 0xc ]
punpckldq xmm3 xmm0
movaps xmm0 [ esp + 0x60 ]
punpckldq xmm1 xmm2
punpckldq xmm3 xmm1
paddd xmm3 xmm7
movd xmm7 [ esp + 0x20 ]
paddd xmm3 xmm4
pxor xmm0 xmm3
movaps [ esp + 0x50 ] xmm3
movaps xmm3 xmm0
psrld xmm0 0x8
pslld xmm3 0x18
pxor xmm3 xmm0
movaps xmm2 xmm3
pshufd xmm3 xmm3 0x93
paddd xmm2 xmm6
movaps xmm0 xmm2
pxor xmm0 xmm4
pshufd xmm4 xmm2 0x4e
movd xmm2 [ esp + 0x10 ]
movaps xmm1 xmm0
psrld xmm0 0x7
pslld xmm1 0x19
pxor xmm1 xmm0
movd xmm0 edi
punpckldq xmm7 xmm0
pshufd xmm5 xmm1 0x39
movd xmm1 [ esp + 0x14 ]
punpckldq xmm1 xmm2
punpckldq xmm7 xmm1
paddd xmm7 [ esp + 0x50 ]
movd xmm1 [ esp + 0x18 ]
paddd xmm7 xmm5
pxor xmm3 xmm7
movd xmm2 eax
movaps xmm0 xmm3
punpckldq xmm1 xmm2
psrld xmm0 0x10
pslld xmm3 0x10
pxor xmm0 xmm3
movd xmm3 esi
movaps xmm6 xmm0
movaps [ esp + 0x60 ] xmm0
paddd xmm6 xmm4
movaps xmm0 xmm6
pxor xmm0 xmm5
movaps xmm4 xmm0
psrld xmm0 0xc
pslld xmm4 0x14
pxor xmm4 xmm0
movd xmm0 [ esp + 0x34 ]
punpckldq xmm3 xmm0
movaps xmm0 [ esp + 0x60 ]
punpckldq xmm3 xmm1
paddd xmm3 xmm7
movd xmm7 [ esp + 0x30 ]
paddd xmm3 xmm4
pxor xmm0 xmm3
movaps [ esp + 0x50 ] xmm3
movaps xmm3 xmm0
psrld xmm0 0x8
pslld xmm3 0x18
pxor xmm3 xmm0
movaps xmm2 xmm3
pshufd xmm3 xmm3 0x39
paddd xmm2 xmm6
movaps xmm0 xmm2
pxor xmm0 xmm4
pshufd xmm4 xmm2 0x4e
movd xmm2 [ esp + 0x20 ]
movaps xmm1 xmm0
pslld xmm1 0x19
psrld xmm0 0x7
pxor xmm1 xmm0
movd xmm0 [ esp + 0x34 ]
pshufd xmm5 xmm1 0x93
movd xmm1 [ esp + 0x10 ]
punpckldq xmm7 xmm0
punpckldq xmm1 xmm2
punpckldq xmm7 xmm1
paddd xmm7 [ esp + 0x50 ]
paddd xmm7 xmm5
movd xmm2 edx
pxor xmm3 xmm7
movd xmm1 edi
movaps xmm0 xmm3
punpckldq xmm1 xmm2
psrld xmm0 0x10
pslld xmm3 0x10
pxor xmm0 xmm3
movd xmm3 [ esp + 0x18 ]
movaps xmm6 xmm0
movaps [ esp + 0x60 ] xmm0
paddd xmm6 xmm4
movaps xmm0 xmm6
pxor xmm0 xmm5
movaps xmm4 xmm0
psrld xmm0 0xc
pslld xmm4 0x14
pxor xmm4 xmm0
movd xmm0 esi
punpckldq xmm3 xmm0
movaps xmm0 [ esp + 0x60 ]
punpckldq xmm3 xmm1
paddd xmm3 xmm7
movd xmm7 [ esp + 0x2c ]
paddd xmm3 xmm4
pxor xmm0 xmm3
movaps [ esp + 0x50 ] xmm3
movaps xmm3 xmm0
psrld xmm0 0x8
pslld xmm3 0x18
pxor xmm3 xmm0
movaps xmm2 xmm3
pshufd xmm3 xmm3 0x93
paddd xmm2 xmm6
movaps xmm0 xmm2
pxor xmm0 xmm4
pshufd xmm4 xmm2 0x4e
movaps xmm1 xmm0
movd xmm2 ecx
psrld xmm0 0x7
pslld xmm1 0x19
pxor xmm1 xmm0
movd xmm0 eax
punpckldq xmm7 xmm0
pshufd xmm5 xmm1 0x39
movd xmm1 [ esp + 0x1c ]
punpckldq xmm1 xmm2
punpckldq xmm7 xmm1
paddd xmm7 [ esp + 0x50 ]
movd xmm2 [ esp + 0xc ]
paddd xmm7 xmm5
pxor xmm3 xmm7
movd xmm1 [ esp + 0x28 ]
movaps xmm0 xmm3
punpckldq xmm1 xmm2
pslld xmm3 0x10
psrld xmm0 0x10
pxor xmm0 xmm3
movd xmm3 [ esp + 0x14 ]
movaps xmm6 xmm0
movaps [ esp + 0x60 ] xmm0
paddd xmm6 xmm4
movaps xmm0 xmm6
pxor xmm0 xmm5
movaps xmm4 xmm0
psrld xmm0 0xc
pslld xmm4 0x14
pxor xmm4 xmm0
movd xmm0 [ esp + 0x24 ]
punpckldq xmm3 xmm0
movaps xmm0 [ esp + 0x60 ]
punpckldq xmm3 xmm1
paddd xmm3 xmm7
paddd xmm3 xmm4
pxor xmm0 xmm3
movaps [ esp + 0x50 ] xmm3
movaps xmm3 xmm0
psrld xmm0 0x8
pslld xmm3 0x18
pxor xmm3 xmm0
movaps xmm2 xmm3
movd xmm7 esi
paddd xmm2 xmm6
pshufd xmm3 xmm3 0x39
movaps xmm0 xmm2
pxor xmm0 xmm4
pshufd xmm4 xmm2 0x4e
movd xmm2 [ esp + 0x28 ]
movaps xmm1 xmm0
psrld xmm0 0x7
pslld xmm1 0x19
pxor xmm1 xmm0
movd xmm0 [ esp + 0x30 ]
punpckldq xmm7 xmm0
pshufd xmm5 xmm1 0x93
movd xmm1 [ esp + 0x14 ]
punpckldq xmm1 xmm2
punpckldq xmm7 xmm1
paddd xmm7 [ esp + 0x50 ]
paddd xmm7 xmm5
movd xmm1 [ esp + 0x34 ]
pxor xmm3 xmm7
movd xmm2 eax
movaps xmm0 xmm3
punpckldq xmm1 xmm2
psrld xmm0 0x10
pslld xmm3 0x10
pxor xmm0 xmm3
movd xmm3 [ esp + 0xc ]
movaps xmm6 xmm0
movaps [ esp + 0x60 ] xmm0
paddd xmm6 xmm4
movaps xmm0 xmm6
pxor xmm0 xmm5
movaps xmm4 xmm0
psrld xmm0 0xc
pslld xmm4 0x14
pxor xmm4 xmm0
movd xmm0 [ esp + 0x10 ]
punpckldq xmm3 xmm0
movaps xmm0 [ esp + 0x60 ]
punpckldq xmm3 xmm1
paddd xmm3 xmm7
movd xmm7 [ esp + 0x18 ]
paddd xmm3 xmm4
pxor xmm0 xmm3
movaps [ esp + 0x50 ] xmm3
movaps xmm3 xmm0
psrld xmm0 0x8
pslld xmm3 0x18
pxor xmm3 xmm0
movaps xmm2 xmm3
pshufd xmm3 xmm3 0x93
paddd xmm2 xmm6
movaps xmm0 xmm2
pxor xmm0 xmm4
pshufd xmm4 xmm2 0x4e
movd xmm2 [ esp + 0x24 ]
movaps xmm1 xmm0
psrld xmm0 0x7
pslld xmm1 0x19
pxor xmm1 xmm0
movd xmm0 ecx
punpckldq xmm7 xmm0
pshufd xmm5 xmm1 0x39
movd xmm1 edi
punpckldq xmm1 xmm2
punpckldq xmm7 xmm1
paddd xmm7 [ esp + 0x50 ]
paddd xmm7 xmm5
pxor xmm3 xmm7
movaps xmm0 xmm3
pslld xmm3 0x10
psrld xmm0 0x10
pxor xmm0 xmm3
movaps xmm6 xmm0
movaps [ esp + 0x60 ] xmm0
paddd xmm6 xmm4
movaps xmm0 xmm6
pxor xmm0 xmm5
movaps xmm4 xmm0
movd xmm1 [ esp + 0x20 ]
movd xmm3 [ esp + 0x2c ]
psrld xmm0 0xc
pslld xmm4 0x14
movd xmm2 edx
pxor xmm4 xmm0
punpckldq xmm1 xmm2
movd xmm0 [ esp + 0x1c ]
punpckldq xmm3 xmm0
movaps xmm0 [ esp + 0x60 ]
punpckldq xmm3 xmm1
paddd xmm3 xmm7
movd xmm7 [ esp + 0x1c ]
paddd xmm3 xmm4
pxor xmm0 xmm3
movaps [ esp + 0x50 ] xmm3
movaps xmm3 xmm0
psrld xmm0 0x8
pslld xmm3 0x18
pxor xmm3 xmm0
movaps xmm2 xmm3
pshufd xmm3 xmm3 0x39
paddd xmm2 xmm6
movaps xmm0 xmm2
pxor xmm0 xmm4
pshufd xmm4 xmm2 0x4e
movd xmm2 [ esp + 0x2c ]
movaps xmm1 xmm0
psrld xmm0 0x7
pslld xmm1 0x19
pxor xmm1 xmm0
movd xmm0 [ esp + 0xc ]
punpckldq xmm7 xmm0
pshufd xmm5 xmm1 0x93
movd xmm1 [ esp + 0x34 ]
punpckldq xmm1 xmm2
punpckldq xmm7 xmm1
paddd xmm7 [ esp + 0x50 ]
paddd xmm7 xmm5
movd xmm2 ecx
pxor xmm3 xmm7
movd xmm1 eax
movaps xmm0 xmm3
punpckldq xmm1 xmm2
psrld xmm0 0x10
pslld xmm3 0x10
pxor xmm0 xmm3
movd xmm3 edi
movaps xmm6 xmm0
movaps [ esp + 0x60 ] xmm0
paddd xmm6 xmm4
movaps xmm0 xmm6
pxor xmm0 xmm5
movaps xmm4 xmm0
psrld xmm0 0xc
pslld xmm4 0x14
pxor xmm4 xmm0
movd xmm0 [ esp + 0x28 ]
punpckldq xmm3 xmm0
movaps xmm0 [ esp + 0x60 ]
punpckldq xmm3 xmm1
paddd xmm3 xmm7
paddd xmm3 xmm4
pxor xmm0 xmm3
movaps [ esp + 0x50 ] xmm3
movaps xmm3 xmm0
psrld xmm0 0x8
pslld xmm3 0x18
pxor xmm3 xmm0
movaps xmm2 xmm3
pshufd xmm3 xmm3 0x93
paddd xmm2 xmm6
movaps xmm0 xmm2
pxor xmm0 xmm4
pshufd xmm4 xmm2 0x4e
movaps xmm1 xmm0
movd xmm2 edx
pslld xmm1 0x19
psrld xmm0 0x7
pxor xmm1 xmm0
pshufd xmm5 xmm1 0x39
movd xmm0 [ esp + 0x10 ]
movd xmm7 [ esp + 0x30 ]
punpckldq xmm7 xmm0
movd xmm1 esi
punpckldq xmm1 xmm2
punpckldq xmm7 xmm1
paddd xmm7 [ esp + 0x50 ]
movd xmm2 [ esp + 0x18 ]
paddd xmm7 xmm5
pxor xmm3 xmm7
movd xmm1 [ esp + 0x14 ]
movaps xmm0 xmm3
punpckldq xmm1 xmm2
psrld xmm0 0x10
pslld xmm3 0x10
pxor xmm0 xmm3
movd xmm3 [ esp + 0x24 ]
movaps xmm6 xmm0
movaps [ esp + 0x60 ] xmm0
paddd xmm6 xmm4
movaps xmm0 xmm6
pxor xmm0 xmm5
movaps xmm4 xmm0
psrld xmm0 0xc
pslld xmm4 0x14
pxor xmm4 xmm0
movd xmm0 [ esp + 0x20 ]
punpckldq xmm3 xmm0
movaps xmm0 [ esp + 0x60 ]
punpckldq xmm3 xmm1
paddd xmm3 xmm7
movd xmm7 edx
paddd xmm3 xmm4
pxor xmm0 xmm3
movaps [ esp + 0x50 ] xmm3
movaps xmm3 xmm0
psrld xmm0 0x8
pslld xmm3 0x18
pxor xmm3 xmm0
movaps xmm2 xmm3
pshufd xmm3 xmm3 0x39
paddd xmm2 xmm6
movaps xmm0 xmm2
pxor xmm0 xmm4
pshufd xmm4 xmm2 0x4e
movd xmm2 [ esp + 0x10 ]
movaps xmm1 xmm0
psrld xmm0 0x7
pslld xmm1 0x19
pxor xmm1 xmm0
movd xmm0 [ esp + 0x14 ]
punpckldq xmm7 xmm0
pshufd xmm5 xmm1 0x93
movd xmm1 ecx
punpckldq xmm1 xmm2
punpckldq xmm7 xmm1
paddd xmm7 [ esp + 0x50 ]
movd xmm2 [ esp + 0x18 ]
paddd xmm7 xmm5
movd xmm1 [ esp + 0x20 ]
pxor xmm3 xmm7
movaps xmm0 xmm3
punpckldq xmm1 xmm2
pslld xmm3 0x10
psrld xmm0 0x10
pxor xmm0 xmm3
movd xmm3 [ esp + 0x24 ]
movaps xmm6 xmm0
movaps [ esp + 0x60 ] xmm0
paddd xmm6 xmm4
movaps xmm0 xmm6
pxor xmm0 xmm5
movaps xmm4 xmm0
psrld xmm0 0xc
pslld xmm4 0x14
pxor xmm4 xmm0
movd xmm0 [ esp + 0x1c ]
punpckldq xmm3 xmm0
punpckldq xmm3 xmm1
paddd xmm3 xmm7
paddd xmm3 xmm4
movaps xmm0 [ esp + 0x60 ]
pxor xmm0 xmm3
movaps [ esp + 0x50 ] xmm3
movaps xmm3 xmm0
movd xmm7 edi
psrld xmm0 0x8
pslld xmm3 0x18
pop edi
pxor xmm3 xmm0
movaps xmm2 xmm3
pshufd xmm3 xmm3 0x93
paddd xmm2 xmm6
movaps xmm0 xmm2
pxor xmm0 xmm4
pshufd xmm4 xmm2 0x4e
movaps xmm1 xmm0
movd xmm2 esi
psrld xmm0 0x7
pslld xmm1 0x19
pop esi
pxor xmm1 xmm0
movd xmm0 [ esp + 0x20 ]
punpckldq xmm7 xmm0
pshufd xmm5 xmm1 0x39
movd xmm1 eax
punpckldq xmm1 xmm2
punpckldq xmm7 xmm1
paddd xmm7 [ esp + 0x48 ]
movd xmm2 [ esp + 0x24 ]
paddd xmm7 xmm5
movd xmm1 [ esp + 0x2c ]
pxor xmm3 xmm7
movaps xmm0 xmm3
punpckldq xmm1 xmm2
psrld xmm0 0x10
pslld xmm3 0x10
mov eax [ esp + 0x34 ]
pxor xmm0 xmm3
movaps xmm6 xmm0
movaps [ esp + 0x58 ] xmm0
paddd xmm6 xmm4
movaps xmm0 xmm6
pxor xmm0 xmm5
movd xmm5 [ esp + 0x4 ]
movaps xmm4 xmm0
psrld xmm0 0xc
pslld xmm4 0x14
pxor xmm4 xmm0
movd xmm0 [ esp + 0x28 ]
punpckldq xmm5 xmm0
movaps xmm0 [ esp + 0x58 ]
punpckldq xmm5 xmm1
paddd xmm5 xmm7
paddd xmm5 xmm4
pxor xmm0 xmm5
movaps xmm3 xmm0
psrld xmm0 0x8
pslld xmm3 0x18
pxor xmm3 xmm0
movaps xmm2 xmm3
pshufd xmm3 xmm3 0x39
paddd xmm2 xmm6
movaps xmm0 xmm2
pxor xmm0 xmm4
movaps xmm1 xmm0
psrld xmm0 0x7
pslld xmm1 0x19
pxor xmm1 xmm0
pshufd xmm0 xmm2 0x4e
pxor xmm0 xmm5
pshufd xmm1 xmm1 0x93
pxor xmm0 [ esp + 0x68 ]
pxor xmm3 xmm1
pxor xmm3 [ esp + 0x38 ]
movaps [ eax ] xmm0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xf4 ]
movaps [ eax + 0x10 ] xmm3
xor eax eax
mov esp ebp
pop ebp
retn 0x8
sub_4053f0
push esi
mov esi [ esp + 0x8 ]
push edi
cmp [ esi + 0x100 ] 0x40
jbe r-xdata
mov eax [ esi + 0xf8 ]
mov edx [ esi + 0x100 ]
add [ eax ] edx
mov ecx [ esi + 0xf8 ]
cmp [ ecx ] edx
sbb eax eax
neg eax
add [ ecx + 0x4 ] eax
cmp [ esi + 0x104 ] 0x0
je r-xdata
mov eax [ esi + 0xf8 ]
add [ eax ] 0x40
mov ecx [ esi + 0xf8 ]
cmp [ ecx ] 0x40
sbb eax eax
neg eax
add [ ecx + 0x4 ] eax
push [ esi + 0xf0 ]
push esi
call sub_403d4c
mov ecx [ esi + 0xf0 ]
add [ esi + 0x100 ] 0xffffffc0
push [ esi + 0x100 ]
lea eax [ ecx + 0x40 ]
push eax
push ecx
call sub_41ee90
add esp 0xc
mov eax [ esi + 0xfc ]
xor edi edi
or [ eax ] 0xffffffff
mov eax 0x80
mov ecx [ esi + 0x100 ]
sub eax ecx
push eax
mov eax [ esi + 0xf0 ]
add eax ecx
push edi
push eax
call sub_41d1e0
add esp 0xc
push [ esi + 0xf0 ]
push esi
call sub_403d4c
mov ecx [ esp + 0x10 ]
mov eax [ esi + 0xfc ]
or [ eax + 0x4 ] 0xffffffff
mov eax [ esi + 0xf4 ]
mov eax [ edi + eax ]
mov [ edi + ecx ] eax
add edi 0x4
cmp edi 0x20
jl r-xdata
pop edi
pop esi
retn 0x8
sub_4054c8
cmp [ rw-data ] 0x2
jl r-xdata
push esi
mov esi [ esp + 0x8 ]
mov ecx esi
call sub_405893
xor edx edx
movaps xmm0 [ r--data ]
movaps [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movaps [ rw-data ] xmm0
mov ecx [ esi + 0xf4 ]
mov eax [ edx + r--data ]
mov [ edx + ecx ] eax
add edx 0x4
cmp edx 0x20
jl r-xdata
mov eax [ esi + 0xf4 ]
xor [ eax ] 0x2080020
mov ecx [ esi + 0xf4 ]
mov eax [ esp + 0xc ]
xor [ ecx + 0x8 ] eax
mov ecx [ esi + 0xf4 ]
mov eax [ esp + 0x10 ]
or eax 0x2000
shl eax 0x10
xor [ ecx + 0xc ] eax
pop esi
retn 0xc
sub_405544
push edi
mov edi [ esp + 0x10 ]
test edi edi
je r-xdata
pop edi
retn 0xc
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi [ esp + 0x14 ]
push edi
push ebp
push eax
call sub_41ee90
add [ esi + 0x100 ] edi
add esp 0xc
add ebp edi
xor edi edi
push ebx
push ebp
push eax
call sub_41ee90
mov eax [ esi + 0xf8 ]
add esp 0xc
add [ esi + 0x100 ] ebx
add [ eax ] 0x40
mov ecx [ esi + 0xf8 ]
cmp [ ecx ] 0x40
sbb eax eax
neg eax
add [ ecx + 0x4 ] eax
cmp [ rw-data ] 0x2
push [ esi + 0xf0 ]
push esi
jl r-xdata
mov ecx [ esi + 0x100 ]
mov ebx 0x80
mov eax [ esi + 0xf0 ]
sub ebx ecx
add eax ecx
cmp edi ebx
jbe r-xdata
pop esi
pop ebp
pop ebx
call sub_403d4c
call sub_404221
jmp r-xdata
test edi edi
jne r-xdata
mov ecx [ esi + 0xf0 ]
push 0x40
lea eax [ ecx + 0x40 ]
push eax
push ecx
call sub_41ee90
add [ esi + 0x100 ] 0xffffffc0
add esp 0xc
add ebp ebx
sub edi ebx
jmp r-xdata
sub_405601
sub esp 0x100
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x114 ]
lea ebp [ esp + 0x10 ]
xor esi esi
mov ebx edi
push ebp
push ebx
call sub_4053f0
add esi 0x40
add ebp 0x20
add ebx 0x108
cmp esi 0x200
jb r-xdata
sub eax esi
cmp eax 0x40
jbe r-xdata
mov eax [ edi + 0xb48 ]
cmp eax esi
jbe r-xdata
push 0x8
add edi 0x840
lea esi [ esp + 0x14 ]
pop ebx
push eax
lea eax [ edi + 0x948 ]
add eax esi
push eax
push ebx
call sub_405544
push 0x40
pop eax
push 0x20
push esi
push edi
call sub_405544
add esi 0x20
sub ebx 0x1
jne r-xdata
push [ esp + 0x118 ]
push edi
call sub_4053f0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x100
retn 0x8
sub_405691
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
xor ebp ebp
push edi
push 0x200
push ebp
lea eax [ esi + 0x948 ]
push eax
call sub_41d1e0
add esp 0xc
mov [ esi + 0xb48 ] ebp
lea eax [ esi + 0x840 ]
push 0x1
push ebp
push eax
call sub_4054c8
mov edi ebp
mov ebx esi
push ebp
push edi
push ebx
call sub_4054c8
inc edi
add ebx 0x108
cmp edi 0x8
jb r-xdata
pop edi
mov [ esi + 0x944 ] 0x1
mov [ esi + 0x83c ] 0x1
pop esi
pop ebp
pop ebx
retn 0x4
sub_4056f2
sub esp 0x6c
push ebx
mov ebx [ esp + 0x78 ]
push ebp
mov ebp [ esp + 0x78 ]
push esi
mov esi 0x200
push edi
mov eax [ ebp + 0xb48 ]
sub esi eax
mov edi [ esp + 0x88 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x18 ] esi
test eax eax
je r-xdata
mov [ esp + 0x84 ] ebx
cmp edi 0x1000
jae r-xdata
cmp edi esi
jb r-xdata
mov esi [ ebp + 0xb50 ]
cmp esi 0x6
je r-xdata
xor esi esi
inc esi
jmp r-xdata
push esi
add eax 0x948
add eax ebp
push ebx
push eax
call sub_41ee90
add esp 0xc
lea edi [ ebp + 0x948 ]
push 0x8
pop esi
push 0x4
pop esi
cmp esi 0x7
jne r-xdata
xor eax eax
mov [ esp + 0x80 ] eax
push 0x40
push edi
push ebp
call sub_405544
add edi 0x40
add ebp 0x108
sub esi 0x1
jne r-xdata
mov edi [ esp + 0x88 ]
add ebx [ esp + 0x18 ]
sub edi [ esp + 0x18 ]
and [ esp + 0x10 ] esi
mov ebp [ esp + 0x80 ]
mov ecx [ ebp + 0xb4c ]
test ecx ecx
je r-xdata
imul edx eax 0x108
mov ecx eax
shl ecx 0x6
add edx ebp
add ecx ebx
mov [ esp + 0x18 ] edx
lea ebx [ esp + 0x1c ]
mov [ esp + 0x14 ] ecx
cmp eax 0x8
jb r-xdata
call sub_40f473
mov eax [ esp + 0x80 ]
mov ebx [ esp + 0x84 ]
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x4 ] ecx
mov [ ebx ] edx
cmp esi 0x1
jbe r-xdata
and [ esp + 0x88 ] 0x0
test esi esi
je r-xdata
mov esi edi
and esi 0x1ff
sub edi esi
add ebx edi
mov edi [ esp + 0x10 ]
test esi esi
je r-xdata
mov ecx ebx
call sub_403d0a
mov ecx [ ebp + 0xb4c ]
push ebx
push sub_403cfe
call sub_40f111
jmp r-xdata
lea eax [ edi + esi ]
pop edi
pop esi
mov [ ebp + 0xb48 ] eax
pop ebp
pop ebx
add esp 0x6c
retn 0xc
push esi
lea eax [ edi + 0x948 ]
add eax ebp
push ebx
push eax
call sub_41ee90
add esp 0xc
cmp eax 0x8
jae r-xdata
mov eax [ esp + 0x80 ]
add ebx 0xc
mov ecx [ esp + 0x14 ]
inc eax
mov edx [ esp + 0x18 ]
add ecx 0x40
add edx 0x108
mov [ esp + 0x80 ] eax
inc [ esp + 0x88 ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] edx
cmp [ esp + 0x88 ] esi
jb r-xdata
sub_4058b6
mov eax sub_42ec34
call sub_41c16c
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_40a687
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x92d4 ]
call sub_40e874
lea ecx [ esi + 0x9330 ]
mov [ ebp - 0x4 ] 0x1
call sub_40e874
lea ecx [ esi + 0x938c ]
mov [ ebp - 0x4 ] 0x2
call sub_40e874
lea ecx [ esi + 0x93e8 ]
mov [ ebp - 0x4 ] 0x3
call sub_40e874
lea ecx [ esi + 0x9444 ]
mov [ ebp - 0x4 ] 0x4
call sub_40e874
mov ecx esi
mov [ ebp - 0x4 ] 0x5
call sub_405aa7
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_405943
mov eax 0x2004
call sub_41c240
push ebx
push ebp
push esi
push edi
push 0x0
push [ esp + 0x2024 ]
call sub_40a89f
mov ecx [ esp + 0x2018 ]
mov ebx eax
call sub_40e95c
mov ebp 0x800
jmp r-xdata
mov ecx [ esp + 0x2018 ]
lea eax [ esp + 0x10 ]
push ebp
push eax
call sub_40e91f
test al al
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
call sub_40b1b4
mov esi eax
movzx ecx [ esi ]
push ecx
call sub_40aed4
cmp [ esp + 0x201c ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2004
retn 0x14
test al al
je r-xdata
test al al
je r-xdata
push 0x0
lea eax [ esp + 0x14 ]
mov edi ebx
push eax
call sub_40a89f
mov esi eax
cmp [ esi ] 0x2a
jne r-xdata
push ebp
push r--data
lea eax [ esp + 0x18 ]
push eax
call sub_40e81b
xor eax eax
mov [ esi ] ax
jmp r-xdata
push [ esp + 0x2028 ]
push edi
push esi
call sub_40a36a
test al al
jne r-xdata
movzx ecx [ esi + 0x2 ]
push ecx
call sub_40aed4
test al al
je r-xdata
mov al 0x1
jmp r-xdata
push 0x2e
pop eax
push 0x5c
mov [ esp + 0x1014 ] ax
pop eax
push ebp
mov [ esp + 0x1016 ] ax
lea eax [ esp + 0x1018 ]
push ebx
push eax
call sub_40e847
lea edi [ esp + 0x1010 ]
sub_405a42
push ebp
mov ebp esp
push esi
push 0x5
push [ ebp + 0x10 ]
mov esi ecx
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
lea eax [ esi + 0x9330 ]
push eax
call sub_405943
test al al
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov al 0x1
jmp r-xdata
xor al al
cmp [ esi + 0x93a0 ] 0x0
je r-xdata
pop esi
pop ebp
retn 0x10
push 0x5
push [ ebp + 0x10 ]
lea eax [ esi + 0x938c ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push eax
call sub_405943
neg al
sbb al al
inc al
jmp r-xdata
sub_405aa7
push esi
mov esi ecx
call sub_40a72c
xor eax eax
lea ecx [ esi + 0x92d4 ]
mov [ esi + 0x72b2 ] ax
mov [ esi + 0x82d2 ] ax
mov [ esi + 0x72a8 ] al
mov [ esi + 0x72ac ] eax
mov [ esi + 0x72b0 ] al
call sub_40e946
lea ecx [ esi + 0x9330 ]
call sub_40e946
lea ecx [ esi + 0x938c ]
call sub_40e946
lea ecx [ esi + 0x9444 ]
call sub_40e946
lea ecx [ esi + 0x93e8 ]
call sub_40e946
lea ecx [ esi + 0x5168 ]
pop esi
jmp sub_405bd9
sub_405b14
push ecx
push ebx
push esi
mov esi [ esp + 0x1c ]
mov [ esp + 0x8 ] ecx
push edi
test esi esi
je r-xdata
mov edi [ esp + 0x14 ]
lea ebx [ edi + 0x20 ]
push ebx
call sub_4216b5
pop ecx
cmp eax 0x800
jb r-xdata
cmp [ esp + 0x24 ] 0x0
jbe r-xdata
mov al [ edi + 0x10e1 ]
mov edi [ esp + 0xc ]
mov ecx edi
push ebp
xor ebp ebp
mov [ esp + 0x24 ] al
inc ebp
push ebp
push 0x0
push [ esp + 0x2c ]
push ebx
call sub_405a42
test al al
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
mov [ esi ] ax
xor eax eax
add edi 0x92d4
mov ecx edi
mov [ esp + 0x24 ] edi
call sub_40e95c
mov ecx edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
retn 0x14
call sub_40e8cf
mov edi eax
test edi edi
jne r-xdata
push [ esp + 0x20 ]
push ebx
push edi
call sub_40a36a
test al al
jne r-xdata
cmp [ esp + 0x1c ] 0x0
je r-xdata
mov ecx [ esp + 0x24 ]
inc ebp
test esi esi
je r-xdata
push ebx
push edi
call j_sub_4100df
mov ecx [ esp + 0x1c ]
neg eax
sbb al al
inc al
mov [ ecx ] al
mov eax ebp
jmp r-xdata
push [ esp + 0x28 ]
push edi
push esi
call sub_40e847
pop ebp
sub_405bf6
push ebx
push ebp
push esi
push edi
push rw-data
mov ebx ecx
call sub_405d2a
mov edx rw-data
mov esi 0x100
movzx eax cl
shr ecx 0x8
xor ecx [ eax * 4 + rw-data ]
mov [ edi ] ecx
lea edi [ edi + 0x400 ]
sub ebp 0x1
jne r-xdata
add edx 0x4
sub esi 0x1
jne r-xdata
mov ecx [ edx - 0x400 ]
mov edi edx
push 0x7
pop ebp
pop edi
pop esi
pop ebp
mov eax ebx
pop ebx
retn
sub_405c44
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
cmp esi 0x8
jb r-xdata
test dl 0x7
je r-xdata
test esi esi
je r-xdata
push edi
mov edi esi
shr edi 0x3
movzx ecx [ edx ]
movzx eax bl
xor ecx eax
shr ebx 0x8
xor ebx [ ecx * 4 + rw-data ]
inc edx
mov [ ebp + 0xc ] edx
sub esi 0x1
jne r-xdata
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0xc
movzx ecx [ edx ]
movzx eax bl
xor ecx eax
shr ebx 0x8
xor ebx [ ecx * 4 + rw-data ]
inc edx
sub esi 0x1
jne r-xdata
xor ebx [ edx ]
sub esi 0x8
mov edx [ edx + 0x4 ]
mov ecx edx
shr ecx 0x18
mov eax edx
shr eax 0x10
movzx eax al
mov ecx [ ecx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov eax edx
shr eax 0x8
movzx eax al
xor ecx [ eax * 4 + rw-data ]
mov eax ebx
shr eax 0x18
xor ecx [ eax * 4 + rw-data ]
mov eax ebx
shr eax 0x10
movzx eax al
xor ecx [ eax * 4 + rw-data ]
mov eax ebx
shr eax 0x8
movzx eax al
xor ecx [ eax * 4 + rw-data ]
movzx eax dl
mov edx [ ebp + 0xc ]
add edx 0x8
mov [ ebp + 0xc ] edx
xor ecx [ eax * 4 + rw-data ]
movzx eax bl
xor ecx [ eax * 4 + rw-data ]
mov ebx ecx
sub edi 0x1
jne r-xdata
pop edi
sub_405d2a
mov edx [ esp + 0x4 ]
xor ecx ecx
cmp [ edx + 0x4 ] ecx
jne r-xdata
retn 0x4
push esi
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
mov [ edx + ecx * 4 ] eax
inc ecx
cmp ecx 0x100
jb r-xdata
sub esi 0x1
jne r-xdata
push 0x8
mov eax ecx
pop esi
pop esi
sub_405d5f
mov eax sub_42ec6e
call sub_41c16c
push ecx
push ebx
push esi
push edi
push j_sub_40da45#2
push sub_405e0c
push 0x4
mov edi ecx
push 0x12c
push edi
mov [ ebp - 0x10 ] edi
call sub_41c26d
push j_sub_40da45#2
push sub_405e0c
push 0x4
push 0x178
lea esi [ edi + 0x4b4 ]
xor ebx ebx
push esi
mov [ ebp - 0x4 ] ebx
call sub_41c26d
lea ecx [ edi + 0xa9c ]
mov [ ebp - 0x4 ] 0x1
call sub_40cd8b
push 0x4b0
push ebx
push edi
mov [ edi + 0xa98 ] ebx
call sub_41d1e0
push 0x5e0
push ebx
push esi
call sub_41d1e0
push 0x400
lea eax [ edi + 0xba4 ]
mov [ edi + 0x4b0 ] ebx
push ebx
push eax
mov [ edi + 0xa94 ] ebx
call sub_41d1e0
mov ecx [ ebp - 0xc ]
add esp 0x24
mov eax edi
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_405e1e
push ebp
mov ebp esp
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_42eb81
push eax
mov [ fs : 0x0 ] esp
push esi
push edi
mov edi ecx
push 0x4b0
push edi
call sub_40dc0c
push 0x5e0
lea esi [ edi + 0x4b4 ]
push esi
call sub_40dc0c
push j_sub_40da45#2
push 0x4
push 0x178
push esi
call sub_41c2d6
push j_sub_40da45#2
push 0x4
push 0x12c
push edi
call sub_41c2d6
mov ecx [ ebp - 0xc ]
pop edi
mov [ fs : 0x0 ] ecx
pop esi
mov esp ebp
pop ebp
retn
sub_405e8f
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
mov esi [ ebp + 0x8 ]
push 0x20
pop ebx
cmp [ esi ] 0x2
jne r-xdata
cmp [ esi ] 0x3
jne r-xdata
mov eax [ esi + 0x4 ]
push edi
mov [ ebp + 0x8 ] eax
lea eax [ ebp - 0x20 ]
push eax
push 0x4
lea eax [ ebp + 0x8 ]
push eax
push ebx
push [ ebp + 0xc ]
call sub_406543
xor edx edx
mov [ esi + 0x4 ] edx
mov edi edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x20 ]
add esi 0x4
push eax
push ebx
push esi
push ebx
push [ ebp + 0xc ]
call sub_406543
push ebx
lea eax [ ebp - 0x20 ]
push eax
push esi
call sub_41ee90
add esp 0xc
movzx eax [ ebp + edx - 0x20 ]
mov ecx edx
and ecx 0x3
shl ecx 0x3
shl eax cl
xor edi eax
inc edx
cmp edx ebx
jb r-xdata
mov [ esi + 0x4 ] edi
pop edi
sub_405f32
sub esp 0x180
push ebx
push esi
push edi
mov edi [ esp + 0x198 ]
mov ebx ecx
cmp [ edi + 0x100 ] 0x0
je r-xdata
xor al al
mov esi [ esp + 0x194 ]
test esi esi
je r-xdata
push ebp
mov ebp 0x80
mov [ ebx + 0xa98 ] esi
push ebp
lea eax [ esp + 0x14 ]
mov ecx edi
push eax
call sub_40da58
push ebp
lea eax [ esp + 0x114 ]
push eax
lea eax [ esp + 0x18 ]
push eax
call sub_40fed3
sub esi 0x4
je r-xdata
push [ esp + 0x1a0 ]
lea eax [ esp + 0x14 ]
mov ecx ebx
push eax
push edi
push [ esp + 0x1a0 ]
call sub_40601a
sub esi 0x1
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0x180
retn 0x20
push ebp
lea eax [ esp + 0x114 ]
push eax
call sub_40dc0c
push 0x100
lea eax [ esp + 0x14 ]
push eax
call sub_40dc0c
mov al 0x1
pop ebp
jmp r-xdata
push [ esp + 0x1b0 ]
lea eax [ esp + 0x14 ]
mov ecx ebx
push [ esp + 0x1b0 ]
push [ esp + 0x1b0 ]
push [ esp + 0x1b0 ]
push [ esp + 0x1b0 ]
push eax
push edi
push [ esp + 0x1b0 ]
call sub_4062ed
jmp r-xdata
sub_40601a
sub esp 0x290
push ebx
push ebp
mov ebx ecx
push esi
push edi
mov [ esp + 0x14 ] ebx
xor edi edi
lea esi [ ebx + 0x12a ]
inc edi
add esi 0x12c
cmp edi 0x4
jb r-xdata
cmp [ esp + 0x2b0 ] 0x0
jne r-xdata
push [ esp + 0x2a8 ]
lea ecx [ esi - 0x12a ]
call sub_40d9d3
test al al
je r-xdata
push 0x108
lea eax [ esp + 0x100 ]
push eax
push [ esp + 0x2b4 ]
call sub_40ff0b
push [ esp + 0x2ac ]
call sub_4216b5
mov ebp eax
add ebp ebp
cmp [ esp + 0x2b4 ] 0x0
pop ecx
je r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ esi ] 0x0
jmp r-xdata
lea eax [ esp + 0x60 ]
push eax
call sub_40e098
xor ebx ebx
push 0x8
push [ esp + 0x2b4 ]
lea ecx [ esp + 0x104 ]
add ecx ebp
push ecx
call sub_41ee90
add esp 0xc
add ebp 0x8
push 0x8
push [ esp + 0x2b4 ]
lea eax [ esi - 0x28 ]
push eax
call sub_41d710
add esp 0xc
test eax eax
je r-xdata
jne r-xdata
dec eax
or eax 0xffffc000
inc eax
push 0x10
imul esi edi 0x12c
lea eax [ ebx + 0x10a ]
pop ebp
push ebp
add eax esi
push eax
lea eax [ esp + 0x20 ]
push eax
call sub_41ee90
lea eax [ ebx + 0x11a ]
add eax esi
push ebp
push eax
lea eax [ esp + 0x3c ]
push eax
call sub_41ee90
add esp 0x18
jmp r-xdata
inc ebx
cmp ebx 0x40000
jl r-xdata
push 0x27
pop ecx
push 0x0
lea eax [ esp + 0x3c ]
push eax
lea eax [ esp + 0x20c ]
lea esi [ esp + 0x68 ]
lea edi [ esp + 0x20c ]
[ edi ] [ esi ]
push eax
call sub_40dfac
mov ecx ebx
test ecx ecx
jns r-xdata
lea eax [ esp + 0x28 ]
push eax
push 0x80
lea eax [ esp + 0x20 ]
push eax
push [ esp + 0x2b0 ]
lea ecx [ ebx + 0xa9c ]
call sub_40d0a7
push ebp
lea eax [ esp + 0x1c ]
push eax
call sub_40dc0c
push ebp
lea eax [ esp + 0x2c ]
push eax
call sub_40dc0c
pop edi
pop esi
pop ebp
pop ebx
add esp 0x290
retn 0x10
push 0x0
push ebp
lea eax [ esp + 0x104 ]
push eax
lea eax [ esp + 0x6c ]
push eax
call sub_40e0c9
mov eax ebx
mov [ esp + 0x10 ] bl
sar eax 0x8
mov [ esp + 0x11 ] al
mov eax ebx
sar eax 0x10
push 0x0
mov [ esp + 0x16 ] al
lea eax [ esp + 0x14 ]
push 0x3
push eax
lea eax [ esp + 0x6c ]
push eax
call sub_40e0c9
mov eax ebx
and eax 0x80003fff
jns r-xdata
push 0x0
lea eax [ esp + 0x50 ]
push eax
lea eax [ esp + 0x68 ]
push eax
call sub_40dfac
mov ebx [ esp + 0x14 ]
xor edx edx
push 0x10
pop ebp
sar ecx 0xe
mov al [ esp + 0x48 ]
mov [ esp + ecx + 0x28 ] al
add ecx 0x3fff
mov eax [ esp + edx + 0x4c ]
shr eax cl
add ecx 0x8
mov [ esi ] al
inc esi
cmp ecx 0x20
jl r-xdata
add edx 0x4
cmp edx ebp
jl r-xdata
lea esi [ esp + 0x18 ]
add esi edx
xor ecx ecx
imul edi [ ebx + 0x4b0 ] 0x12c
mov esi [ esp + 0x2a8 ]
push 0x40
pop ecx
add edi ebx
[ edi ] [ esi ]
xor ecx ecx
cmp [ esp + 0x2b0 ] ecx
setne cl
movsw [ edi ] [ esi ]
imul eax [ ebx + 0x4b0 ] 0x12c
mov [ eax + ebx + 0x12a ] cl
cmp cl 0x1
jne r-xdata
push ebp
lea eax [ esp + 0x1c ]
push eax
imul eax [ ebx + 0x4b0 ] 0x12c
add eax 0x10a
add eax ebx
push eax
call sub_41ee90
push ebp
lea eax [ esp + 0x38 ]
push eax
imul eax [ ebx + 0x4b0 ] 0x12c
add eax 0x11a
add eax ebx
push eax
call sub_41ee90
mov eax [ ebx + 0x4b0 ]
add esp 0x18
inc eax
and eax 0x3
mov [ ebx + 0x4b0 ] eax
lea eax [ esp + 0xfc ]
push 0x108
push eax
call sub_40dc0c
imul eax [ ebx + 0x4b0 ] 0x12c
push 0x8
push [ esp + 0x2b4 ]
add eax 0x102
add eax ebx
push eax
call sub_41ee90
add esp 0xc
sub_4062ed
sub esp 0x264
push edi
mov edi [ esp + 0x280 ]
mov eax ecx
mov [ esp + 0x4 ] eax
cmp edi 0x18
ja r-xdata
pop edi
add esp 0x264
retn 0x20
push ebx
push ebp
xor ebp ebp
lea ebx [ eax + 0x4b4 ]
push esi
mov esi ebp
inc esi
add ebx 0x178
cmp esi 0x4
jb r-xdata
push [ esp + 0x27c ]
mov ecx ebx
call sub_40d9d3
test al al
je r-xdata
cmp [ ebx + 0x134 ] edi
jne r-xdata
mov esi 0x200
lea eax [ esp + 0x74 ]
push esi
push eax
push [ esp + 0x288 ]
call sub_40ff41
xor eax eax
mov ecx edi
inc eax
shl eax cl
push eax
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x5c ]
push eax
lea eax [ esp + 0x40 ]
push eax
push 0x10
push [ esp + 0x298 ]
lea eax [ esp + 0x8c ]
push eax
call sub_421720
pop ecx
push eax
lea eax [ esp + 0x90 ]
push eax
call sub_4066b6
push esi
lea eax [ esp + 0x78 ]
push eax
call sub_40dc0c
mov edx [ esp + 0x10 ]
mov esi [ esp + 0x27c ]
push 0x40
mov ecx [ edx + 0xa94 ]
lea ebx [ edx + 0x4b4 ]
mov eax ecx
and eax 0x3
imul eax eax 0x178
add ebx eax
lea eax [ ecx + 0x1 ]
mov [ edx + 0xa94 ] eax
pop ecx
push 0x10
push [ esp + 0x288 ]
mov [ ebx + 0x134 ] edi
lea eax [ ebx + 0x102 ]
mov edi ebx
[ edi ] [ esi ]
push eax
movsw [ edi ] [ esi ]
call sub_41ee90
push 0x20
pop edi
push edi
lea eax [ esp + 0x44 ]
push eax
lea esi [ ebx + 0x112 ]
push esi
call sub_41ee90
push edi
lea eax [ esp + 0x30 ]
push eax
lea eax [ ebx + 0x138 ]
push eax
call sub_41ee90
push edi
lea eax [ esp + 0x7c ]
push eax
lea eax [ ebx + 0x158 ]
push eax
call sub_41ee90
add esp 0x30
push ebp
push 0x1
push edi
push esi
call sub_40db10
push 0x10
push [ esp + 0x288 ]
lea eax [ ebx + 0x102 ]
push eax
call sub_41d710
add esp 0xc
test eax eax
je r-xdata
mov esi [ esp + 0x294 ]
test esi esi
je r-xdata
push edi
lea eax [ esp + 0x58 ]
push eax
push [ esp + 0x298 ]
call sub_41ee90
add esp 0xc
push ebp
push ebp
push 0x20
pop edi
push edi
lea esi [ ebx + 0x112 ]
push esi
call sub_40db10
push edi
lea eax [ esp + 0x38 ]
push esi
push eax
call sub_41ee90
add esp 0xc
push ebp
push 0x1
push edi
push esi
call sub_40db10
push edi
lea eax [ ebx + 0x138 ]
push eax
lea eax [ esp + 0x1c ]
push eax
call sub_41ee90
push edi
lea eax [ ebx + 0x158 ]
push eax
lea eax [ esp + 0x68 ]
push eax
call sub_41ee90
add esp 0x18
jmp r-xdata
cmp [ esp + 0x288 ] 0x0
pop esi
pop ebp
pop ebx
je r-xdata
push 0x8
push ebp
push esi
call sub_41d1e0
add esp 0xc
cmp [ esp + 0x290 ] ebp
je r-xdata
push edi
lea eax [ esp + 0x2c ]
push eax
call sub_40dc0c
push [ esp + 0x27c ]
mov ecx [ esp + 0x8 ]
lea eax [ esp + 0x2c ]
push 0x100
push eax
push [ esp + 0x278 ]
add ecx 0xa9c
call sub_40d0a7
mov al [ esp + ebp + 0x14 ]
mov ecx ebp
and ecx 0x7
xor [ ecx + esi ] al
inc ebp
cmp ebp edi
jb r-xdata
push edi
lea eax [ esp + 0x18 ]
push eax
call sub_40dc0c
sub_406543
sub esp 0x1d0
push ebx
push ebp
push esi
mov esi [ esp + 0x1e4 ]
push edi
push 0x40
pop ebp
cmp esi ebp
jbe r-xdata
mov ebx [ esp + 0x1e4 ]
lea eax [ esp + 0x170 ]
push eax
call sub_40e222
push esi
push [ esp + 0x1e8 ]
lea eax [ esp + 0x178 ]
push eax
call sub_40e268
lea eax [ esp + 0x50 ]
push eax
lea eax [ esp + 0x174 ]
push eax
call sub_40e17b
push 0x20
lea ebx [ esp + 0x54 ]
pop esi
jmp r-xdata
cmp esi ebp
jae r-xdata
mov ebp ebx
lea eax [ esp + 0x10 ]
sub ebp eax
xor edi edi
mov edx edi
test esi esi
je r-xdata
lea eax [ esp + 0x90 ]
push eax
call sub_40e222
push ebp
lea eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0x98 ]
push eax
call sub_40e268
push [ esp + 0x1f0 ]
lea eax [ esp + 0x94 ]
push [ esp + 0x1f0 ]
push eax
call sub_40e268
lea eax [ esp + 0x70 ]
push eax
lea eax [ esp + 0x94 ]
push eax
call sub_40e17b
lea eax [ esp + 0x100 ]
push eax
call sub_40e222
test esi esi
je r-xdata
mov eax ebp
lea ecx [ esp + 0x10 ]
sub eax esi
add ecx esi
push eax
push 0x36
push ecx
call sub_41d1e0
add esp 0xc
lea ecx [ esp + 0x10 ]
add ecx edx
mov al [ ecx + ebp ]
xor al 0x36
inc edx
mov [ ecx ] al
cmp edx esi
jb r-xdata
push 0x40
pop ebp
cmp esi ebp
jae r-xdata
lea eax [ esp + 0x10 ]
sub ebx eax
push ebp
lea eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0x108 ]
push eax
call sub_40e268
push 0x20
lea eax [ esp + 0x74 ]
push eax
lea eax [ esp + 0x108 ]
push eax
call sub_40e268
push [ esp + 0x1f4 ]
lea eax [ esp + 0x104 ]
push eax
call sub_40e17b
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1d0
retn 0x14
mov eax ebp
lea ecx [ esp + 0x10 ]
sub eax esi
add ecx esi
push eax
push 0x5c
push ecx
call sub_41d1e0
add esp 0xc
lea ecx [ esp + 0x10 ]
add ecx edi
mov al [ ebx + ecx ]
xor al 0x5c
inc edi
mov [ ecx ] al
cmp edi esi
jb r-xdata
sub_4066b6
push ebp
lea ebp [ esp - 0x58 ]
sub esp 0xbc
push ebx
push esi
mov esi [ ebp + 0x6c ]
push edi
push 0x40
pop eax
cmp esi eax
jae r-xdata
push eax
push [ ebp + 0x68 ]
lea eax [ ebp - 0x44 ]
push eax
call sub_41ee90
add esp 0xc
mov [ ebp + esi - 0x44 ] 0x1000000
lea eax [ ebp + 0x20 ]
push eax
lea eax [ esi + 0x4 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
push [ ebp + 0x64 ]
push [ ebp + 0x60 ]
call sub_406543
push 0x20
pop ebx
push ebx
lea eax [ ebp + 0x20 ]
push eax
lea eax [ ebp ]
push eax
call sub_41ee90
mov eax [ ebp + 0x7c ]
add esp 0xc
dec eax
xor esi esi
mov [ ebp + 0x4c ] eax
push 0x10
pop eax
mov [ ebp + 0x50 ] eax
mov [ ebp + 0x54 ] eax
mov eax [ ebp + 0x70 ]
mov [ ebp + 0x40 ] eax
mov eax [ ebp + 0x74 ]
mov [ ebp + 0x44 ] eax
mov eax [ ebp + 0x78 ]
mov [ ebp + 0x48 ] eax
mov eax esi
push ebx
lea eax [ ebp ]
push eax
push [ ebp + esi + 0x40 ]
call sub_41ee90
add esi 0x4
add esp 0xc
cmp esi 0xc
jb r-xdata
lea eax [ ebp - 0x64 ]
push eax
push ebx
lea eax [ ebp + 0x20 ]
push eax
push [ ebp + 0x64 ]
push [ ebp + 0x60 ]
call sub_406543
push ebx
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp + 0x20 ]
push eax
call sub_41ee90
add esp 0xc
xor ecx ecx
mov edi [ ebp + esi + 0x4c ]
test edi edi
je r-xdata
push 0x44
lea eax [ ebp - 0x44 ]
push eax
call sub_40dc0c
push ebx
lea eax [ ebp ]
push eax
call sub_40dc0c
push ebx
lea eax [ ebp + 0x20 ]
push eax
call sub_40dc0c
push ebx
lea eax [ ebp - 0x64 ]
push eax
call sub_40dc0c
pop edi
pop esi
pop ebx
lea esp [ ebp + 0x58 ]
pop ebp
retn 0x20
mov al [ ebp + ecx + 0x20 ]
xor [ ebp + ecx ] al
inc ecx
cmp ecx ebx
jb r-xdata
sub edi 0x1
jne r-xdata
sub_4067d5
push ecx
mov edx [ esp + 0xc ]
push ebx
push ebp
push esi
mov bl [ edx ]
xor esi esi
push edi
xor edi edi
mov [ esp + 0x12 ] bl
inc edi
mov ebp ecx
mov ecx [ esp + 0x28 ]
cmp [ esp + 0x20 ] edi
jbe r-xdata
cmp esi ecx
jb r-xdata
cmp esi ecx
jae r-xdata
mov eax [ esp + 0x24 ]
xor ecx ecx
pop edi
mov [ eax + esi * 2 ] cx
pop esi
pop ebp
pop ebx
pop ecx
retn 0x14
lea esi [ ecx - 0x1 ]
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
movzx eax [ ebp + 0x4 ]
shr eax 0x6
sub eax 0x0
je r-xdata
mov al [ edi + edx ]
inc edi
mov [ ebp + 0x4 ] al
mov [ ebp + 0x8 ] 0x8
mov ebx [ esp + 0x24 ]
movzx eax [ edi + edx ]
mov [ ebx + esi * 2 ] ax
inc esi
inc edi
jmp r-xdata
sub eax 0x1
je r-xdata
mov bl [ esp + 0x12 ]
movzx edx [ edi + edx ]
mov eax 0x100
movzx ecx bl
imul ecx eax
mov eax [ esp + 0x24 ]
add dx cx
mov [ eax + esi * 2 ] dx
inc esi
mov edx [ esp + 0x1c ]
inc edi
sub eax 0x1
je r-xdata
shl [ ebp + 0x4 ] 0x2
add [ ebp + 0x8 ] 0xfffffffe
cmp edi [ esp + 0x20 ]
jb r-xdata
movzx ecx [ edi + edx + 0x1 ]
mov eax 0x100
imul ecx eax
movzx eax [ edi + edx ]
add cx ax
mov eax [ esp + 0x24 ]
mov [ eax + esi * 2 ] cx
inc esi
add edi 0x2
jmp r-xdata
sub eax 0x1
jne r-xdata
mov ecx [ esp + 0x28 ]
jmp r-xdata
movzx ebx [ edi + edx ]
inc edi
test bl bl
jns r-xdata
add ebx 0x2
jmp r-xdata
mov al [ edi + edx ]
and ebx 0x7f
add ebx 0x2
mov [ esp + 0x13 ] al
inc edi
test ebx ebx
jle r-xdata
test ebx ebx
jg r-xdata
cmp esi ecx
jae r-xdata
cmp esi ecx
jae r-xdata
jmp r-xdata
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
movzx eax al
movsx dx [ esi + ecx ]
movzx ecx [ esp + 0x12 ]
add dx ax
mov eax 0xff
and dx ax
inc eax
imul ecx eax
mov eax [ esp + 0x24 ]
add dx cx
mov ecx [ esp + 0x28 ]
mov [ eax + esi * 2 ] dx
dec ebx
mov al [ esp + 0x13 ]
inc esi
test ebx ebx
jg r-xdata
mov eax [ esp + 0x18 ]
dec ebx
mov edx [ esp + 0x24 ]
movsx ax [ esi + eax ]
mov [ edx + esi * 2 ] ax
inc esi
mov edx [ esp + 0x1c ]
sub_40696b
push esi
mov esi ecx
cmp [ esi + 0x9 ] 0x0
jne r-xdata
xor al al
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_40fa9d
test al al
jne r-xdata
pop esi
retn 0x8
mov [ esi + 0xa ] 0x1
jmp r-xdata
sub_4069e4
push ebp
mov ebp esp
sub esp 0x800
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
lea eax [ ebp - 0x800 ]
push 0x400
push eax
call sub_403cb5
add esp 0x14
lea eax [ ebp - 0x800 ]
push eax
push 0x1
call sub_401546
mov esp ebp
pop ebp
retn
sub_406acc
mov edx [ esp + 0x4 ]
mov eax edx
sub eax 0x1
je r-xdata
cmp [ ecx ] 0x0
jne r-xdata
sub eax 0x1
je r-xdata
inc [ ecx + 0x4 ]
retn 0x4
mov [ ecx ] edx
cmp [ ecx ] 0x0
je r-xdata
sub eax 0x1
je r-xdata
mov [ ecx ] 0x2
jmp r-xdata
cmp [ ecx ] 0x1
jne r-xdata
cmp [ ecx ] 0xb
je r-xdata
sub eax 0xfc
jne r-xdata
mov [ ecx ] 0x3
jmp r-xdata
sub_406b14
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xff
jne r-xdata
push esi
call sub_406acc
push r--data
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esi
push eax
call sub_41f404
int3
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebp
retn 0x4
sub_406bc9
mov eax sub_42ec8b
call sub_41c16c
mov eax 0x3040
call sub_41c240
cmp [ rw-data ] 0x0
jne r-xdata
push ebx
push esi
push edi
push 0x1418
lea ecx [ ebp - 0x28 ]
call sub_401571
mov ebx [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push 0x800
lea eax [ ebx + 0x10f4 ]
push eax
lea eax [ ebp - 0x1028 ]
push eax
call sub_40e847
lea eax [ ebp - 0x1028 ]
push eax
call sub_4216b5
push 0x4
mov [ ebp - 0x10 ] eax
lea esi [ ebp - 0x1028 ]
mov eax esi
lea edi [ ebp - 0x2028 ]
push r--data
push eax
call sub_422b57
add esp 0x10
neg eax
sbb al al
add al 0x1
mov [ ebp - 0x14 ] eax
je r-xdata
push r--data
call sub_4074d7
push r--data
call sub_4074d7
mov [ rw-data ] 0x1
push esi
push edi
call sub_421693
lea eax [ ebp - 0x2028 ]
push eax
call sub_4216b5
mov edi [ ebp - 0x28 ]
add esp 0xc
mov [ ebp + 0x10 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x518b ] 0x0
jne r-xdata
push 0x4
lea esi [ ebp - 0x1020 ]
mov eax esi
push r--data
push eax
call sub_422b57
add esp 0xc
test eax eax
jne r-xdata
xor esi esi
inc esi
push esi
push [ ebp + 0xc ]
call sub_4096ef
cmp [ ebx + 0x10e1 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x5c
pop eax
mov [ ebp - 0x2028 ] ax
lea edi [ ebp - 0x2026 ]
lea esi [ ebp - 0x101a ]
push 0x0
push [ ebp + 0xc ]
call [ CreateDirectoryW@IAT ]
test eax eax
je r-xdata
cmp [ ebx + 0x20f4 ] 0x0
jne r-xdata
xor bl bl
lea esi [ ebx + 0x10f4 ]
push esi
call sub_40adf9
test al al
jne r-xdata
mov eax [ ebx + 0x10f0 ]
cmp eax 0x3
jne r-xdata
xor eax eax
push eax
push 0x80
push esi
push eax
push eax
push 0x40000000
push [ ebp + 0xc ]
call [ CreateFileW@IAT ]
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0xc ]
mov al bl
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
push edi
call j_sub_4251ac#3
pop ecx
push esi
lea eax [ ebx + 0x20 ]
push eax
call sub_407345
test al al
je r-xdata
cmp eax 0x2
je r-xdata
mov ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x10 ]
add eax ecx
mov [ edi ] 0xa0000003
lea esi [ ecx + ecx ]
mov [ edi + 0xa ] si
lea eax [ eax * 2 + 0xc ]
mov [ edi + 0x4 ] ax
xor eax eax
mov [ edi + 0x6 ] eax
lea eax [ ebp - 0x1028 ]
push eax
lea eax [ edi + 0x10 ]
push eax
call sub_421693
lea eax [ esi + 0x2 ]
mov [ edi + 0xc ] ax
mov eax [ ebp + 0x10 ]
add eax eax
mov [ edi + 0xe ] ax
lea eax [ ebp - 0x2028 ]
push eax
mov eax [ ebp - 0x10 ]
add eax 0x9
lea eax [ edi + eax * 2 ]
push eax
call sub_421693
add esp 0x10
jmp r-xdata
push eax
call [ CloseHandle@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x10 ]
add eax ecx
mov [ edi ] 0xa000000c
lea esi [ ecx + ecx ]
mov [ edi + 0xa ] si
lea eax [ eax * 2 + 0x10 ]
mov [ edi + 0x4 ] ax
xor eax eax
mov [ edi + 0x6 ] eax
lea eax [ ebp - 0x1028 ]
push eax
lea eax [ edi + 0x14 ]
push eax
call sub_421693
lea eax [ esi + 0x2 ]
mov [ edi + 0xc ] ax
mov eax [ ebp + 0x10 ]
add eax eax
mov [ edi + 0xe ] ax
lea eax [ ebp - 0x2028 ]
push eax
mov eax [ ebp - 0x10 ]
add eax 0xb
lea eax [ edi + eax * 2 ]
push eax
call sub_421693
xor eax eax
add esp 0x10
cmp [ ebp - 0x14 ] al
sete al
mov [ edi + 0x10 ] eax
cmp eax esi
jne r-xdata
mov esi [ ebp + 0xc ]
xor eax eax
push eax
push 0x2200000
push 0x3
push eax
push eax
push 0xc0000000
push esi
call [ CreateFileW@IAT ]
mov ecx eax
mov [ ebp + 0xc ] ecx
cmp ecx 0xffffffff
je r-xdata
xor edx edx
lea eax [ ebp - 0x18 ]
push edx
push eax
movzx eax [ edi + 0x4 ]
push edx
push edx
add eax 0x8
push eax
push edi
push 0x900a4
push ecx
call [ DeviceIoControl@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x304c ]
call sub_408e1d
lea ecx [ ebp - 0x304c ]
mov [ ebp - 0x4 ] 0x1
call sub_408ebf
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x3048 ] eax
lea eax [ ebx + 0x1040 ]
mov ecx [ edx + 0x6294 ]
neg ecx
sbb ecx ecx
and ecx eax
lea eax [ ebx + 0x1038 ]
push ecx
mov ecx [ edx + 0x6290 ]
neg ecx
sbb ecx ecx
and ecx eax
lea eax [ ebx + 0x1030 ]
push ecx
mov ecx [ edx + 0x628c ]
neg ecx
sbb ecx ecx
and ecx eax
push ecx
lea ecx [ ebp - 0x304c ]
call sub_409430
lea ecx [ ebp - 0x304c ]
call sub_408ebf
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x519c ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
call [ CloseHandle@IAT ]
push esi
push 0x0
push 0x14
call sub_401f25
call [ GetLastError@IAT ]
cmp eax 0x522
jne r-xdata
lea ecx [ ebp - 0x304c ]
call sub_408e53
xor ebx ebx
inc ebx
jmp r-xdata
push [ ebx + 0x1c ]
push esi
call sub_409ae4
mov ecx rw-data
call sub_420f99
push 0x9
mov ecx rw-data
call sub_406acc
cmp [ ebx + 0x10e1 ] 0x0
push esi
je r-xdata
push 0x16
call sub_403c8d
test edi edi
je r-xdata
call [ DeleteFileW@IAT ]
jmp r-xdata
call [ RemoveDirectoryW@IAT ]
sub_406f8b
mov eax sub_42ec9d
call sub_41c16c
mov eax 0x1010
call sub_41c240
xor eax eax
push edi
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov edi [ ebp + 0x8 ]
mov ecx edi
push eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_403878
test al al
je r-xdata
cmp [ ebp - 0x1c ] 0x0
pop edi
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
push [ ebp - 0x1c ]
call j_sub_4251ac#3
pop ecx
cmp [ rw-data ] 0x0
push esi
push 0x7
pop esi
je r-xdata
push r--data
call sub_4074d7
test al al
je r-xdata
push ebx
mov ebx [ ebp - 0x1c ]
push ebx
push esi
push [ ebp + 0xc ]
call [ SetFileSecurityW@IAT ]
test eax eax
jne r-xdata
push 0xf
pop esi
push r--data
call sub_4074d7
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
pop ebx
pop esi
push 0x800
lea eax [ ebp - 0x101c ]
push eax
push [ ebp + 0xc ]
call sub_40ac19
test al al
je r-xdata
push [ ebp + 0xc ]
lea eax [ edi + 0x1e ]
push eax
push 0x4f
call sub_401f25
mov esi rw-data
mov ecx esi
call sub_420f99
push 0x1
mov ecx esi
call sub_406acc
push ebx
push esi
lea eax [ ebp - 0x101c ]
push eax
call [ SetFileSecurityW@IAT ]
test eax eax
jne r-xdata
sub_40708a
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
push esi
push esi
call sub_40b29f
push esi
call sub_409820
test al al
je r-xdata
pop esi
pop ebp
retn 0xc
push ebx
push 0x1
push [ ebp + 0x8 ]
call sub_4096ef
push 0x0
push esi
push [ ebp + 0x8 ]
call [ CreateHardLinkW@IAT ]
test eax eax
setne bl
test bl bl
jne r-xdata
mov al bl
pop ebx
push [ ebp + 0x8 ]
push 0x15
call sub_401546
mov esi rw-data
mov ecx esi
call sub_420f99
push 0x9
mov ecx esi
call sub_406acc
sub_4070ec
mov eax sub_42ecbd
call sub_41c16c
mov eax 0x5094
call sub_41c240
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi 0x800
cmp [ esi ] bx
je r-xdata
push 0x802
lea eax [ ebp - 0x1010 ]
cmp [ esi + 0x2 ] bx
jne r-xdata
cmp [ ebp + 0x10 ] bl
je r-xdata
push esi
lea eax [ edi + 0x1e ]
push eax
push 0x50
call sub_401f25
push 0x3
mov ecx rw-data
call sub_406acc
jmp r-xdata
lea eax [ ebp - 0x1010 ]
push r--data
push eax
call sub_421693
pop ecx
pop ecx
push edi
lea eax [ ebp - 0x100c ]
jmp r-xdata
push 0x802
lea eax [ ebp - 0x407c ]
push eax
lea eax [ ebp - 0x1010 ]
push eax
call sub_40e81b
lea ecx [ ebp - 0x307c ]
call sub_406ba0
push ebx
lea eax [ ebp - 0x307c ]
push eax
push esi
call sub_409b66
mov ecx [ ebp - 0x2074 ]
mov bl al
test cl 0x1
je r-xdata
push ebx
push ebx
mov ecx edi
call sub_403878
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
push esi
push eax
call sub_40e847
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x407c ]
push eax
push edi
call sub_4072c1
cmp [ ebp - 0x407c ] 0x3a
je r-xdata
lea ecx [ ebp - 0x2034 ]
call sub_408e1d
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x1010 ]
push 0x11
push eax
lea ecx [ ebp - 0x2034 ]
call sub_409598
test al al
je r-xdata
and ecx 0xfffffffe
push ecx
push esi
call sub_409ae4
lea ecx [ ebp - 0x50a0 ]
call sub_408e1d
mov [ ebp - 0x4 ] 0x1
test bl bl
je r-xdata
lea eax [ ebp - 0x2034 ]
mov ecx edi
push eax
push 0x0
call sub_403878
test al al
je r-xdata
push [ ebp - 0x2074 ]
push esi
call sub_409ae4
lea ecx [ ebp - 0x50a0 ]
call sub_408e53
lea ecx [ ebp - 0x2034 ]
call sub_408e53
push 0x5
push esi
lea ecx [ ebp - 0x50a0 ]
call sub_40915c
test al al
je r-xdata
lea ecx [ ebp - 0x2034 ]
call sub_408ebf
lea eax [ ebp - 0x2044 ]
push eax
lea eax [ ebp - 0x204c ]
push eax
lea eax [ ebp - 0x2054 ]
push eax
push [ ebp - 0x509c ]
call [ SetFileTime@IAT ]
sub_4072c1
push ebp
mov ebp esp
mov eax 0x2000
call sub_41c240
mov eax [ ebp + 0x8 ]
push edi
cmp [ eax + 0x6ce8 ] 0x2
mov ecx [ eax + 0x55e0 ]
mov edi [ eax + 0x55e4 ]
jne r-xdata
mov eax 0x1fff
cmp edi eax
jb r-xdata
mov eax [ ebp + 0x10 ]
shr edi 0x1
dec eax
cmp edi eax
jb r-xdata
push edi
push ecx
lea eax [ ebp - 0x2000 ]
push eax
call sub_41ee90
add esp 0xc
mov [ ebp + edi - 0x2000 ] 0x0
lea eax [ ebp - 0x2000 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_40fd55
mov edi eax
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
push ecx
call sub_40fd1a
xor eax eax
mov [ esi + edi * 2 ] ax
pop esi
jmp r-xdata
mov edi eax
pop edi
mov esp ebp
pop ebp
retn 0xc
sub_407345
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_40ae2f
test al al
je r-xdata
push ebx
push ebp
push edi
xor eax eax
mov ebx eax
push 0x2e
pop edi
cmp [ esi ] ax
je r-xdata
xor al al
jmp r-xdata
xor ebp ebp
add esi 0x2
xor ebp ebp
pop esi
retn 0x8
mov edi ebp
cmp [ esi ] bp
je r-xdata
xor al al
jmp r-xdata
add esi 0x2
cmp [ esi - 0x2 ] bp
jne r-xdata
movzx eax [ esi ]
test ax ax
je r-xdata
xor eax eax
test ebx ebx
setns al
push 0x2e
add esi 0x4
pop eax
pop edi
pop ebp
pop ebx
movzx eax [ esi - 0x2 ]
push eax
call sub_40aed4
test al al
je r-xdata
jmp r-xdata
push eax
call sub_40aed4
test al al
jne r-xdata
add esi 0x2
inc edi
cmp [ esi - 0x4 ] bp
jne r-xdata
cmp [ esi - 0x2 ] ax
jne r-xdata
mov esi [ esp + 0x18 ]
push esi
call sub_40ae2f
test al al
je r-xdata
cmp [ esi ] di
jne r-xdata
cmp [ esi - 0x4 ] ax
jne r-xdata
movzx eax [ esi ]
push eax
call sub_40aed4
test al al
jne r-xdata
xor eax eax
movzx eax [ esi + 0x2 ]
push eax
call sub_40aed4
test al al
jne r-xdata
test edi edi
je r-xdata
cmp [ esi ] bp
jne r-xdata
cmp [ esp + 0x14 ] 0x0
jne r-xdata
cmp [ esi + 0x2 ] di
jne r-xdata
xor eax eax
xor eax eax
cmp [ esi + 0x2 ] ax
jne r-xdata
dec ebx
movzx eax [ esi - 0x6 ]
push eax
call sub_40aed4
test al al
je r-xdata
push 0x2e
pop eax
xor ebp ebp
test al al
jne r-xdata
movzx eax [ esi + 0x4 ]
push eax
call sub_40aed4
test al al
jne r-xdata
cmp [ esi ] di
jne r-xdata
mov [ esp + 0x14 ] al
jmp r-xdata
inc ebx
mov al 0x1
xor eax eax
cmp [ esi + 0x4 ] ax
jne r-xdata
mov [ esp + 0x14 ] 0x1
jmp r-xdata
sub_40746c
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
cmp [ edi + 0x51c1 ] 0x0
jne r-xdata
lea eax [ esi + 0x45e0 ]
push r--data
push eax
call sub_4216e0
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ edi + 0x5188 ] 0x0
je r-xdata
pop edi
pop esi
retn 0xc
movzx eax [ edi + 0x51c1 ]
push eax
push [ esp + 0x18 ]
push esi
call sub_4070ec
lea eax [ esi + 0x45e0 ]
push r--data
push eax
call sub_4216e0
pop ecx
pop ecx
test eax eax
jne r-xdata
push [ esp + 0x14 ]
push esi
call sub_406f8b
sub_4074d7
push ebp
mov ebp esp
sub esp 0x14
lea eax [ ebp - 0x4 ]
push ebx
push eax
push 0x20
xor ebx ebx
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] 0x1
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] 0x2
push ebx
call [ LookupPrivilegeValueW@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
push ebx
push ebx
push ebx
lea eax [ ebp - 0x14 ]
push eax
push ebx
push [ ebp - 0x4 ]
call [ AdjustTokenPrivileges@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov bl 0x1
sub_40754a
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x4c ]
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x44 ] eax
mov [ ebp - 0xc ] 0x3
call sub_40f838
mov esp ebp
pop ebp
retn 0x10
sub_407581
mov eax sub_42ece2
call sub_41c16c
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
xor edi edi
lea ecx [ esi + 0x10 ]
mov [ esi ] edi
mov [ esi + 0x4 ] edi
call sub_40c004
mov ebx [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0xf4 ] ax
mov [ esi + 0x10f6 ] ax
push 0xe6e0
mov [ ebp - 0x4 ] edi
mov [ esi + 0xe4 ] edi
call sub_41c12b
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov [ esi + 0xe0 ] edi
mov eax [ ebx + 0x7298 ]
cmp eax 0x8
jb r-xdata
lea ecx [ esi + 0x10 ]
push ecx
mov ecx eax
call sub_4101ad
mov edi eax
mov ecx [ ebp - 0xc ]
mov [ edi + 0x1c ] eax
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
push 0x8
pop eax
sub_407611
push esi
push edi
mov edi ecx
mov esi [ edi + 0xe0 ]
test esi esi
je r-xdata
lea ecx [ edi + 0x10 ]
pop edi
pop esi
jmp sub_40c0a7
mov ecx esi
call sub_410373
push 0xe6e0
push esi
call sub_41c15e
pop ecx
pop ecx
sub_40763d
mov edx [ esp + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x4 ]
ja r-xdata
xor eax eax
jb r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ecx ]
cmp eax [ edx ]
jae r-xdata
retn 0x4
sub_40765b
mov eax [ esp + 0x4 ]
mov edx [ ecx ]
mov ecx [ ecx + 0x4 ]
cmp ecx [ eax + 0x4 ]
ja r-xdata
xor eax eax
inc eax
jb r-xdata
cmp edx [ eax ]
jne r-xdata
cmp edx [ eax ]
ja r-xdata
xor eax eax
jmp r-xdata
cmp ecx [ eax + 0x4 ]
je r-xdata
retn 0x4
sub_407682
push ebx
push esi
mov esi [ esp + 0xc ]
cmp [ esi + 0x6ce8 ] 0x3
jne r-xdata
cmp [ esi + 0x2299 ] 0x1d
setne al
cmp [ esi + 0x2299 ] 0x32
seta al
jmp r-xdata
xor eax eax
test bl bl
pop esi
sete al
pop ebx
retn 0x8
push [ esp + 0x10 ]
add esi 0x1e
mov ecx rw-data
push esi
call sub_406b46
push esi
push 0x22
call sub_401546
cmp [ esi + 0x229a ] 0x0
sete bl
dec bl
and bl al
je r-xdata
sub_4076dd
mov eax 0x1048
call sub_41c240
push ebx
push ebp
push esi
mov esi ecx
xor ebx ebx
push edi
lea ecx [ esp + 0x10 ]
mov eax [ esi + 0x8 ]
mov [ esi + 0x20f6 ] bl
mov ax [ eax + 0x72b2 ]
mov [ esi + 0x5c ] ax
call sub_406ba0
lea edi [ esi + 0xf4 ]
mov ebp 0x800
jmp r-xdata
mov ecx [ esi + 0x8 ]
push ebp
push edi
call sub_405a9c
test al al
jne r-xdata
push ebx
lea eax [ esp + 0x14 ]
push eax
push edi
call sub_409b66
test al al
je r-xdata
mov ecx [ esi + 0x8 ]
add ecx 0x93e8
call sub_40e95c
jmp r-xdata
mov eax [ esp + 0x1010 ]
add [ esi + 0x98 ] eax
mov eax [ esp + 0x1014 ]
adc [ esi + 0x9c ] eax
mov ecx [ esi + 0x8 ]
push ebp
push edi
call sub_405a9c
mov ecx [ esi + 0x8 ]
test al al
jne r-xdata
cmp [ ecx + 0x4127 ] bl
je r-xdata
cmp [ ecx + 0x4127 ] bl
je r-xdata
mov ecx esi
call sub_407c39
cmp eax 0x1
je r-xdata
add ecx 0x4024
call sub_40da45
cmp [ esi + 0xe4 ] ebx
jne r-xdata
add ecx 0x4024
call sub_40da45
push ebx
lea eax [ esp + 0x14 ]
push eax
push edi
call sub_409b66
test al al
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1048
retn
mov eax [ esi + 0x8 ]
cmp [ eax + 0x72b2 ] 0x49
je r-xdata
mov eax [ esp + 0x1010 ]
add [ esi + 0x90 ] eax
mov eax [ esp + 0x1014 ]
adc [ esi + 0x94 ] eax
cmp [ rw-data ] 0xb
je r-xdata
cmp [ esi + 0x20f6 ] bl
jne r-xdata
push 0xa
mov ecx rw-data
call sub_406acc
push edi
push 0x43
call sub_401546
sub_407813
mov eax 0x1008
call sub_41c240
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
cmp [ eax + 0x51c1 ] 0x0
jne r-xdata
pop esi
add esp 0x1008
retn 0x8
cmp [ eax + 0x519c ] 0x0
push ebx
mov ebx [ esp + 0x1014 ]
sete al
push ebp
push edi
movzx eax al
lea edi [ esi + 0x10f6 ]
push [ ebx + 0x229c ]
push eax
push edi
call sub_4098a7
mov ebp eax
test ebp ebp
je r-xdata
mov [ esi + 0x10f5 ] 0x1
push edi
call sub_409820
mov [ esp + 0x14 ] eax
test al al
je r-xdata
pop edi
pop ebp
pop ebx
mov edx [ esi + 0x8 ]
lea eax [ ebx + 0x32c0 ]
mov ecx [ edx + 0x6294 ]
neg ecx
sbb ecx ecx
and ecx eax
lea eax [ ebx + 0x32b8 ]
push ecx
mov ecx [ edx + 0x6290 ]
neg ecx
sbb ecx ecx
and ecx eax
lea eax [ ebx + 0x32b0 ]
push ecx
mov ecx [ edx + 0x628c ]
neg ecx
sbb ecx ecx
and ecx eax
push ecx
push edi
call sub_40994b
push 0x1
push edi
call sub_4096ef
mov eax [ esi + 0x8 ]
push [ ebx + 0x229c ]
cmp [ eax + 0x519c ] 0x0
sete al
movzx eax al
push eax
push edi
call sub_4098a7
test eax eax
je r-xdata
push edi
call sub_409834
push eax
call sub_409882
test al al
jne r-xdata
push 0x800
push edi
lea eax [ esp + 0x20 ]
push eax
call sub_40e847
push 0x1
push edi
call sub_40afd9
push 0x1
push edi
call sub_4096ef
mov eax [ esi + 0x8 ]
push [ ebx + 0x229c ]
cmp [ eax + 0x519c ] 0x0
sete al
movzx eax al
push eax
push edi
call sub_4098a7
mov ebp eax
mov eax [ esp + 0x14 ]
mov eax [ esp + 0x14 ]
test al al
jne r-xdata
xor ecx ecx
lea eax [ ebx + 0x32b0 ]
push ecx
push eax
push [ ebx + 0x32d4 ]
lea eax [ esp + 0x1f ]
mov [ esp + 0x20 ] ecx
push [ ebx + 0x32d0 ]
push eax
push 0x800
push edi
push ecx
push [ esi + 0x8 ]
call sub_408b7d
test al al
je r-xdata
test ebp ebp
je r-xdata
push edi
lea eax [ ebx + 0x1e ]
push eax
push 0x13
call sub_401f25
mov ebp rw-data
mov ecx ebp
call sub_420f99
push 0x9
mov ecx ebp
call sub_406acc
jmp r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x519c ] 0x0
jne r-xdata
cmp [ esi + 0x10f5 ] 0x0
je r-xdata
push [ ebx + 0x229c ]
push edi
call sub_409ae4
sub_4079c6
mov eax 0x1008
call sub_41c240
mov eax [ ecx + 0x8 ]
push ebx
mov [ esp + 0x8 ] ecx
mov bl 0x1
movzx edx [ eax + 0x72b2 ]
cmp edx 0x45
je r-xdata
cmp [ eax + 0x51c1 ] 0x0
jne r-xdata
cmp edx 0x58
jne r-xdata
mov al bl
pop ebx
add esp 0x1008
retn 0x8
push esi
push edi
mov edi [ esp + 0x1018 ]
lea esi [ ecx + 0x10f6 ]
push 0x1
lea ecx [ esp + 0x13 ]
lea edx [ edi + 0x32b0 ]
push edx
push [ edi + 0x32d4 ]
push [ edi + 0x32d0 ]
push ecx
push 0x800
push esi
push [ esp + 0x1038 ]
push eax
call sub_408b7d
test al al
jne r-xdata
pop edi
pop esi
xor bl bl
cmp [ esp + 0xf ] bl
jne r-xdata
push ebp
push esi
lea ebp [ edi + 0x1e ]
mov ecx rw-data
push ebp
call sub_4069b2
push esi
call sub_40ae56
test al al
jne r-xdata
pop ebp
push ebp
push 0x6a
call sub_401546
push 0x800
push esi
lea eax [ esp + 0x20 ]
push eax
call sub_40e847
push 0x1
push esi
call sub_40afd9
push 0x1
push esi
call sub_4096ef
push 0x1
lea eax [ edi + 0x32b0 ]
push eax
push [ edi + 0x32d4 ]
lea eax [ esp + 0x1f ]
push [ edi + 0x32d0 ]
push eax
mov eax [ esp + 0x28 ]
push 0x800
push esi
push [ esp + 0x103c ]
push [ eax + 0x8 ]
call sub_408b7d
test al al
je r-xdata
push esi
push ebp
mov ecx rw-data
call sub_4069b2
inc bl
jmp r-xdata
sub_407ae4
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
cmp [ eax + 0x4124 ] 0x0
jne r-xdata
mov al 0x1
add eax 0x4024
push eax
push [ esp + 0x10 ]
push 0x1
call sub_40fc5d
test al al
je r-xdata
push 0x2
call sub_403c8d
push [ esp + 0xc ]
push 0x6
call sub_401546
xor al al
jmp r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x4124 ] 0x0
je r-xdata
pop esi
retn 0x8
mov [ eax + 0x4127 ] 0x1
sub_407b37
push ebx
push ebp
push esi
mov esi [ esp + 0x18 ]
mov ebx ecx
push edi
mov edi [ esp + 0x20 ]
push edi
mov eax [ ebx + 0x8 ]
add eax 0x1012
push eax
push esi
call sub_40e847
mov ecx [ ebx + 0x8 ]
xor eax eax
add ecx 0x1012
mov [ esp + 0x20 ] eax
cmp [ ecx ] ax
je r-xdata
mov eax [ ebx + 0x8 ]
push 0x3a
pop ecx
cmp [ eax + 0x5158 ] 0x4
movzx ebp [ eax + 0x72b2 ]
jne r-xdata
push ecx
call sub_40b1b4
movzx ebp [ eax ]
push ebp
call sub_40aed4
test al al
jne r-xdata
cmp ebp 0x45
je r-xdata
cmp ebp 0x58
jne r-xdata
push ebp
call sub_40adc0
test al al
jne r-xdata
push edi
push [ esp + 0x1c ]
call sub_40b1d0
push eax
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x5158 ] 0x1
je r-xdata
push ecx
call sub_40adc0
test al al
je r-xdata
push edi
push esi
call sub_40a7a3
pop edi
pop esi
pop ebp
pop ebx
retn 0x10
push 0x5f
pop ebx
cmp [ esi + 0x2 ] bx
jne r-xdata
push edi
push [ esp + 0x1c ]
jmp r-xdata
xor eax eax
mov [ esp + 0x20 ] 0x1
mov [ esi ] ax
cmp [ esi ] bx
jne r-xdata
movzx eax [ esi + 0x4 ]
push eax
call sub_40aed4
test al al
je r-xdata
push esi
call sub_40e81b
movzx eax [ esi ]
push eax
call CharUpperW
cmp [ esp + 0x20 ] 0x0
movzx edi ax
je r-xdata
cmp [ esi + 0x2 ] bx
jne r-xdata
lea eax [ edi - 0x41 ]
cmp ax 0x19
ja r-xdata
push 0x5c
pop eax
mov [ esi ] ax
push 0x3a
pop eax
jmp r-xdata
mov [ esi + 0x2 ] ax
sub_407c39
mov eax sub_42ecf7
call sub_41c16c
mov eax 0x9d84
call sub_41c240
push esi
mov esi ecx
lea ecx [ ebp - 0x9d90 ]
push [ esi + 0x8 ]
call sub_401590
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0xf4 ]
push eax
lea ecx [ ebp - 0x9d90 ]
call sub_4095c0
test al al
je r-xdata
lea ecx [ ebp - 0x9d90 ]
call sub_401774
mov ecx [ ebp - 0xc ]
xor eax eax
pop esi
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
push 0x1
lea ecx [ ebp - 0x9d90 ]
call sub_401a4c
test al al
jne r-xdata
cmp [ ebp - 0x3093 ] 0x0
jne r-xdata
push 0x1
mov ecx rw-data
call sub_406acc
jmp r-xdata
push ebx
push edi
xor ebx ebx
xor edi edi
cmp [ ebp - 0x30a3 ] bl
je r-xdata
lea eax [ ebp - 0x9d90 ]
mov ecx esi
push eax
call sub_407dce
mov eax [ esi + 0x8 ]
push 0x49
pop edx
pop edi
movzx ecx [ eax + 0x72b2 ]
pop ebx
cmp ecx 0x54
je r-xdata
lea eax [ ebp - 0x9d72 ]
push eax
lea eax [ ebp - 0x1010 ]
push eax
call sub_421693
cmp [ ebp - 0x309e ] bl
pop ecx
pop ecx
jmp r-xdata
mov [ eax + 0x51c1 ] 0x1
cmp cx dx
jne r-xdata
sete al
movzx eax al
push eax
push 0x800
lea eax [ ebp - 0x1010 ]
push eax
call sub_40b046
lea ecx [ ebp - 0x2058 ]
call sub_406ba0
push 0x0
lea eax [ ebp - 0x2058 ]
push eax
lea eax [ ebp - 0x1010 ]
push eax
call sub_409b66
test al al
jne r-xdata
lea ecx [ ebp - 0x9d90 ]
call sub_420f99
cmp [ eax + 0x51c1 ] 0x0
lea ecx [ esi + 0xf4 ]
push ecx
sete al
movzx eax al
push eax
call sub_40fc7e
mov eax [ esi + 0x8 ]
cmp [ eax + 0x72b2 ] dx
je r-xdata
add edi [ ebp - 0x1058 ]
adc ebx [ ebp - 0x1054 ]
cmp [ ebp - 0x309e ] 0x0
add [ esi + 0x98 ] edi
adc [ esi + 0x9c ] ebx
lea ecx [ ebp - 0x9d90 ]
call sub_4037fd
lea ecx [ ebp - 0xd ]
push ecx
push eax
lea eax [ ebp - 0x9d90 ]
mov ecx esi
push eax
call sub_407e20
test al al
jne r-xdata
sub_407dce
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
call sub_4090c9
xor ecx ecx
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x8 ]
mov [ esi + 0xe8 ] ecx
mov [ esi + 0xec ] ecx
mov [ esi + 0x6c ] edx
mov al [ eax + 0x4124 ]
mov [ esi + 0x5f ] cl
mov [ esi + 0x10f5 ] cl
mov [ esi + 0xf3 ] cl
mov ecx esi
mov [ esi + 0x10f4 ] al
mov [ esi + 0xf1 ] 0x1
call sub_40f69a
pop esi
retn 0x4
sub_407e20
mov eax sub_42ed17
call sub_41c16c
mov eax 0x5190
call sub_41c240
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi ecx
xor ecx ecx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] ecx
cmp [ ebx + 0x32cc ] ecx
jg r-xdata
cmp [ ebx + 0x32d4 ] ecx
jg r-xdata
jl r-xdata
mov eax [ edi + 0x8 ]
movzx eax [ eax + 0x72b2 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp + 0xc ] ecx
jne r-xdata
jl r-xdata
mov [ ebx + 0x32c8 ] ecx
mov [ ebx + 0x32cc ] ecx
cmp [ ebx + 0x32c8 ] ecx
jae r-xdata
push esi
mov esi [ ebx + 0x21dc ]
cmp esi 0x2
je r-xdata
cmp [ edi + 0x5f ] cl
je r-xdata
mov [ ebx + 0x32d0 ] ecx
mov [ ebx + 0x32d4 ] ecx
cmp [ ebx + 0x32d0 ] ecx
jae r-xdata
mov edx [ edi + 0x8 ]
mov [ edi + 0x10f5 ] cl
cmp [ edx + 0x515c ] ecx
jne r-xdata
cmp esi 0x3
jne r-xdata
xor al al
jmp r-xdata
push eax
push ecx
lea eax [ edi + 0x10 ]
push eax
push ebx
call sub_416efd
test al al
jne r-xdata
push 0x800
lea eax [ ebp - 0x519c ]
mov [ ebp - 0x11 ] cl
push eax
push 0x5
lea eax [ ebp - 0x11 ]
mov ecx edx
push eax
lea eax [ ebx + 0x2280 ]
push eax
call sub_405b14
test eax eax
setne al
mov [ ebp - 0xf ] al
test al al
je r-xdata
mov eax [ edx + 0x92e8 ]
cmp [ edi + 0xec ] eax
jb r-xdata
cmp esi 0x5
jne r-xdata
cmp [ edi + 0x10f5 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop ebx
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
xor ecx ecx
push 0x1
mov ecx rw-data
call sub_406acc
mov ecx ebx
call sub_401f93
lea eax [ ebp - 0x2154 ]
push eax
lea eax [ ebx + 0x22a0 ]
push eax
call sub_40a89f
mov eax [ edi + 0x8 ]
cmp [ eax + 0x5197 ] 0x0
jne r-xdata
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
cmp [ edi + 0xf1 ] 0x0
jne r-xdata
mov ecx ebx
call sub_401ed6
jmp r-xdata
cmp [ ebx + 0x459c ] 0x0
je r-xdata
lea eax [ edi + 0x10f6 ]
push eax
push ebx
push [ edi + 0x8 ]
call sub_40746c
xor ecx ecx
inc ecx
cmp [ ebx + 0x3363 ] 0x0
mov [ ebp - 0x20 ] ecx
je r-xdata
lea eax [ ebp - 0x2154 ]
push eax
call sub_40af69
mov [ edi + 0xf1 ] 0x0
xor al al
jmp r-xdata
mov al 0x1
mov esi [ ebp - 0x18 ]
lea eax [ edi + 0x10 ]
push esi
push 0x0
push eax
push ebx
call sub_416efd
test al al
jne r-xdata
mov ecx ebx
call sub_40209f
test al al
jne r-xdata
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x6284 ]
cmp eax ecx
je r-xdata
pop esi
mov eax [ ebx ]
mov ecx ebx
push 0x0
push [ ebx + 0x6cdc ]
push [ ebx + 0x6cd8 ]
call [ eax + 0xc ]
push 0x1
mov ecx rw-data
call sub_406acc
jmp r-xdata
mov al [ ebx + 0x3309 ]
mov [ edi + 0x5f ] al
xor eax eax
mov [ edi + 0x60 ] al
mov ecx [ ebx + 0x6ce0 ]
sub ecx [ ebx + 0x32c8 ]
mov edx [ ebx ]
push eax
mov eax [ ebx + 0x6ce4 ]
sbb eax [ ebx + 0x32cc ]
push eax
push ecx
mov ecx ebx
call [ edx + 0xc ]
xor ecx ecx
mov al cl
mov [ ebp + 0xf ] cl
mov dl cl
mov [ ebp + 0x8 ] dl
cmp [ ebp - 0xf ] al
jne r-xdata
mov eax [ edi + 0x8 ]
xor ecx ecx
inc ecx
cmp ecx [ eax + 0x6284 ]
sbb al al
not al
and [ ebp - 0xf ] al
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov esi [ ebp - 0x18 ]
push 0x49
pop edx
mov al [ eax + 0x51c1 ]
test al al
je r-xdata
mov dl [ ebx + 0x6cec ]
mov [ ebp + 0xf ] dl
mov [ ebp + 0x8 ] dl
test dl dl
je r-xdata
test eax eax
push 0x0
sete al
dec al
and [ ebp - 0xf ] al
lea eax [ ebp - 0x2154 ]
push eax
call sub_40b17f
mov ecx [ edi + 0x8 ]
mov ecx [ ecx + 0x6284 ]
dec ecx
cmp ecx eax
jne r-xdata
push [ ebp + 0x8 ]
test al al
push ecx
sete al
movzx eax al
push eax
lea eax [ ebp - 0x2154 ]
push eax
call j_sub_41b4ce
test al al
je r-xdata
cmp si dx
je r-xdata
cmp [ edi + 0x60 ] 0x0
jne r-xdata
mov [ ebp - 0xf ] 0x0
jmp r-xdata
xor ecx ecx
lea eax [ ebp - 0x2154 ]
inc ecx
push ecx
push eax
call sub_40b17f
jmp r-xdata
push 0x800
lea eax [ edi + 0x10f6 ]
mov ecx edi
push eax
lea eax [ ebp - 0x2154 ]
push eax
push ebx
call sub_407b37
xor eax eax
cmp [ ebp + 0xf ] al
jne r-xdata
mov cl 0x1
test al al
jne r-xdata
mov [ ebp + 0xb ] al
cmp [ edi + 0x10f6 ] ax
je r-xdata
cmp [ ebx + 0x6cec ] al
jne r-xdata
cmp si cx
je r-xdata
cmp [ eax + 0x5154 ] 0x0
je r-xdata
mov [ ebp + 0xb ] 0x1
cmp [ ebx + 0x3308 ] al
je r-xdata
test dl dl
jne r-xdata
lea ecx [ ebp - 0x319c ]
call sub_406ba0
push 0x0
lea eax [ ebp - 0x319c ]
push eax
lea eax [ edi + 0x10f6 ]
push eax
call sub_409b66
test al al
je r-xdata
cmp si dx
jne r-xdata
cmp [ ebx + 0x330b ] 0x0
mov esi rw-data
je r-xdata
mov eax [ edi + 0x8 ]
push 0x45
pop ecx
push 0x58
cmp [ eax + 0x5153 ] 0x0
pop edx
jne r-xdata
mov eax [ edi + 0x8 ]
cmp [ eax + 0x5153 ] 0x0
setne al
dec al
and [ ebp + 0xb ] al
lea eax [ ebx + 0x32b0 ]
push eax
lea ecx [ ebp - 0x218c ]
call sub_40765b
test al al
je r-xdata
lea eax [ ebp - 0x2154 ]
mov ecx edi
push eax
push ebx
call sub_407682
test al al
jne r-xdata
lea eax [ ebp - 0x2154 ]
mov ecx edi
push eax
push ebx
call sub_407ae4
test al al
jne r-xdata
cmp [ ebp - 0x2190 ] 0x0
je r-xdata
mov esi [ edi + 0x8 ]
lea edi [ ebp - 0x130 ]
push 0x40
add esi 0x4024
pop ecx
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov edi [ ebp - 0x1c ]
lea ecx [ ebp - 0x2c ]
push ecx
movzx ecx [ ebx + 0x3310 ]
lea eax [ ebx + 0x333b ]
push eax
push [ ebx + 0x335c ]
xor edx edx
lea eax [ ebx + 0x3321 ]
push eax
neg ecx
mov [ ebp - 0x4 ] edx
lea eax [ ebx + 0x3311 ]
sbb ecx ecx
and ecx eax
lea eax [ ebp - 0x130 ]
push ecx
push eax
push [ ebx + 0x330c ]
lea ecx [ edi + 0x10 ]
push edx
call sub_40c16d
cmp [ ebx + 0x330b ] 0x0
je r-xdata
push 0x2
mov ecx esi
call sub_406acc
mov ecx ebx
call sub_401ed6
xor eax eax
cmp [ ebx + 0x6cec ] al
sete al
jmp r-xdata
mov eax [ edi + 0x8 ]
mov al [ eax + 0x4124 ]
test al al
jne r-xdata
mov [ edi + 0x20f6 ] 0x1
jmp r-xdata
mov [ ebp + 0xb ] 0x0
jmp r-xdata
push edi
lea ecx [ ebp - 0x218c ]
call sub_40763d
test al al
je r-xdata
lea ecx [ ebp - 0x1154 ]
call sub_408e1d
mov eax [ ebx + 0x3370 ]
test eax eax
push 0x50
setne cl
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x13 ] cl
pop edx
test cl cl
je r-xdata
cmp [ ebx + 0x3331 ] 0x0
je r-xdata
push 0x1
mov ecx esi
call sub_406acc
mov [ ebp + 0xb ] 0x0
mov ecx ebx
call sub_40209f
test al al
je r-xdata
cmp eax 0x5
je r-xdata
push 0x8
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebx + 0x3332 ]
push eax
call sub_41d710
add esp 0xc
test eax eax
je r-xdata
mov cl [ ebp + 0xb ]
test cl cl
je r-xdata
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov cl [ ebp + 0xb ]
mov esi [ ebp - 0x18 ]
test cl cl
je r-xdata
cmp [ ebx + 0x6cfc ] 0x0
jne r-xdata
mov esi [ ebp - 0x18 ]
lea eax [ ebp - 0x1154 ]
mov ecx edi
push eax
push ebx
call sub_4079c6
mov esi [ ebp - 0x18 ]
mov cl al
mov [ ebp + 0xb ] cl
jmp r-xdata
lea ecx [ ebp - 0x1154 ]
call sub_408e53
lea ecx [ ebp - 0x130 ]
call j_sub_40da45
mov al [ ebp - 0x20 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp ax 0x50
je r-xdata
cmp [ ebx + 0x6cec ] 0x0
je r-xdata
cmp si dx
je r-xdata
lea eax [ ebx + 0x1e ]
push eax
push 0x6
call sub_401546
push 0xb
mov ecx rw-data
call sub_406acc
mov [ ebp + 0xb ] 0x0
test cl cl
je r-xdata
xor eax eax
inc eax
push eax
mov [ ebp + 0xf ] al
mov [ ebp + 0xb ] al
xor eax eax
push eax
push eax
lea eax [ ebp - 0x2154 ]
push eax
call j_sub_41b4ce
test al al
jne r-xdata
test cl cl
jne r-xdata
push 0x49
pop ecx
cmp ax cx
je r-xdata
mov eax [ edi + 0x8 ]
cmp [ eax + 0x51c1 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x1154 ]
call sub_408e53
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x130 ]
call j_sub_40da45
cmp [ ebp - 0xf ] 0x0
mov al [ ebp + 0xb ]
mov dl [ ebp + 0xf ]
je r-xdata
mov eax [ edi + 0x8 ]
cmp [ eax + 0x51c1 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] al
jmp r-xdata
push 0x45
pop ecx
cmp ax cx
je r-xdata
lea eax [ edi + 0x10f6 ]
mov [ ebp - 0xe ] 0x0
push eax
call sub_409820
test al al
je r-xdata
inc [ edi + 0xec ]
mov al [ ebp + 0xf ]
test al al
jne r-xdata
mov [ edi + 0x10f5 ] 0x1
cmp [ eax + 0x51c1 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
xor ecx ecx
inc ecx
cmp [ eax + 0x5158 ] ecx
je r-xdata
cmp [ ebp - 0xe ] 0x0
je r-xdata
cmp [ ebp - 0xe ] 0x0
jne r-xdata
mov [ ebp - 0xe ] 0x1
test al al
jne r-xdata
push 0x50
mov [ ebp - 0xe ] al
pop eax
cmp si ax
je r-xdata
mov al [ ebp + 0xf ]
inc [ edi + 0xe4 ]
lea eax [ ebp - 0x2154 ]
push eax
push ebx
mov ecx edi
call sub_407813
jmp r-xdata
mov cl [ ebp + 0xb ]
xor cl cl
mov [ ebp + 0xb ] cl
jmp r-xdata
xor ecx ecx
lea eax [ ebx + 0x32b0 ]
push ecx
push eax
push [ ebx + 0x32d4 ]
lea eax [ ebp - 0xe ]
push [ ebx + 0x32d0 ]
push eax
push 0x800
lea eax [ edi + 0x10f6 ]
push eax
push ecx
push [ edi + 0x8 ]
call sub_408b7d
inc [ edi + 0xe8 ]
lea esi [ ebx + 0x32e0 ]
xor eax eax
lea ecx [ edi + 0xc8 ]
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
mov [ edi + 0x88 ] eax
mov [ edi + 0x8c ] eax
mov eax [ edi + 0x8 ]
push [ eax + 0x7298 ]
push [ esi ]
call sub_40a0c4
mov eax [ edi + 0x8 ]
lea ecx [ edi + 0xa0 ]
push [ eax + 0x7298 ]
push [ esi ]
call sub_40a0c4
mov eax [ ebx + 0x32c8 ]
lea esi [ edi + 0x10 ]
mov ecx [ ebx + 0x32cc ]
mov [ edi + 0x30 ] eax
lea eax [ ebp - 0x1154 ]
push eax
mov [ edi + 0x34 ] ecx
mov ecx esi
push ebx
call sub_40c1b5
mov dl [ ebp - 0xe ]
mov al [ ebp + 0xf ]
mov [ edi + 0x39 ] dl
mov [ edi + 0x3a ] al
test dl dl
jne r-xdata
inc [ edi + 0xe4 ]
lea ecx [ ebp - 0x1154 ]
call sub_409139
test al al
je r-xdata
mov edx [ edi + 0x8 ]
cmp [ edx + 0x5194 ] 0x0
sete [ ebp - 0x1141 ]
cmp [ ebp - 0xe ] 0x0
jne r-xdata
cmp [ ebx + 0x6cfc ] dl
jne r-xdata
lea eax [ edi + 0x10f6 ]
push eax
lea esi [ ebx + 0x1e ]
push esi
push 0x3a
call sub_401f25
lea eax [ edi + 0x10f6 ]
mov ecx rw-data
push eax
push esi
call sub_406b64
jmp r-xdata
xor eax eax
xor cl cl
inc eax
test al al
jne r-xdata
mov ecx [ ebx + 0x32c8 ]
mov eax [ ebx + 0x32cc ]
mov esi [ ebx + 0x32d4 ]
mov edx [ ebx + 0x32d0 ]
shld eax ecx 0xb
shl ecx 0xb
cmp eax esi
jl r-xdata
cmp [ ebx + 0x3308 ] 0x0
jne r-xdata
mov esi [ ebx + 0x3370 ]
cmp esi 0x4
je r-xdata
push 0x50
pop eax
cmp [ ebp - 0x18 ] ax
je r-xdata
mov al [ ebp + 0xf ]
lea esi [ edi + 0x10 ]
jg r-xdata
mov ecx ebx
call sub_401ed6
cmp [ ebx + 0x3309 ] 0x0
jne r-xdata
cmp [ ebx + 0x229a ] 0x0
jne r-xdata
push 0x800
lea eax [ ebp - 0x419c ]
mov ecx edi
push eax
lea eax [ ebx + 0x3374 ]
push eax
push ebx
call sub_407b37
mov cl [ ebp - 0x10 ]
test cl cl
je r-xdata
cmp esi 0x5
je r-xdata
xor eax eax
inc eax
mov cl al
jmp r-xdata
test esi esi
jl r-xdata
cmp ecx edx
jbe r-xdata
xor eax eax
mov cl al
movzx eax [ ebx + 0x333a ]
lea ecx [ ebx + 0x333b ]
neg eax
sbb eax eax
and eax ecx
lea ecx [ edi + 0xc8 ]
push eax
lea eax [ ebx + 0x32e0 ]
push eax
call sub_40a092
test al al
je r-xdata
movzx eax [ ebx + 0x3360 ]
mov ecx [ edi + 0xe0 ]
push eax
push [ ebx + 0x3364 ]
call sub_411660
mov eax [ edi + 0xe0 ]
mov ecx [ ebx + 0x32d0 ]
mov edx [ ebx + 0x32d4 ]
mov [ eax + 0x4c40 ] ecx
mov [ eax + 0x4c44 ] edx
mov [ eax + 0x4c58 ] 0x0
movzx eax [ ebx + 0x3360 ]
mov ecx [ edi + 0xe0 ]
push eax
movzx eax [ ebx + 0x2299 ]
push eax
call sub_4112c1
push [ ebx + 0x32d4 ]
push [ ebx + 0x32d0 ]
push esi
call sub_408ad8
jmp r-xdata
mov al [ ebp - 0xd ]
cmp [ ebp - 0x419c ] 0x0
je r-xdata
cmp esi eax
je r-xdata
cmp [ ebp - 0x13 ] 0x0
mov [ ebp - 0x10 ] cl
mov [ ebp - 0x12 ] al
mov [ ebp - 0xd ] al
je r-xdata
push [ ebx + 0x32d4 ]
lea ecx [ ebp - 0x1154 ]
push [ ebx + 0x32d0 ]
call sub_409287
jg r-xdata
cmp [ ebx + 0x229a ] 0x0
je r-xdata
mov [ edi + 0xf3 ] al
jmp r-xdata
mov cl 0x1
xor eax eax
jmp r-xdata
test cl cl
je r-xdata
test cl cl
jne r-xdata
lea eax [ ebp - 0x419c ]
push 0x800
push eax
lea eax [ edi + 0x10f6 ]
push eax
cmp esi 0x4
jne r-xdata
test cl cl
je r-xdata
cmp esi 0x2
je r-xdata
mov ecx ebx
call sub_4090c9
cmp edx [ ebx + 0x32cc ]
jl r-xdata
cmp edx 0x5f5e100
jb r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebx + 0x32d4 ] eax
jl r-xdata
cmp [ ebx + 0x3360 ] 0x0
jne r-xdata
xor eax eax
test al al
je r-xdata
jmp r-xdata
lea eax [ ebx + 0x1e ]
mov ecx edi
push eax
lea eax [ ebp - 0x1154 ]
push eax
call sub_408a12
call sub_40708a
jmp r-xdata
lea eax [ edi + 0x10f6 ]
push eax
push ebx
lea eax [ edi + 0x10 ]
push eax
push edx
call sub_40729a
jmp r-xdata
cmp esi 0x3
je r-xdata
jg r-xdata
cmp [ ebp - 0xe ] 0x0
jne r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
jg r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x12 ] 0x0
mov cl [ ebp - 0x10 ]
mov cl [ ebp - 0x10 ]
jmp r-xdata
mov [ ebp - 0xd ] al
test al al
je r-xdata
lea eax [ edi + 0x10f6 ]
push eax
lea eax [ ebx + 0x1e ]
push eax
push 0x46
call sub_401f25
xor al al
mov [ ebp - 0xd ] al
cmp eax [ ebx + 0x32c8 ]
jbe r-xdata
mov eax [ ebp - 0x18 ]
push 0x58
pop ecx
cmp ax cx
je r-xdata
test cl cl
jne r-xdata
test cl cl
je r-xdata
cmp [ ebx + 0x32d0 ] eax
jbe r-xdata
mov [ edi + 0x10f5 ] al
jmp r-xdata
cmp [ ebx + 0x6ce8 ] 0x2
jne r-xdata
cmp [ ebp - 0x13 ] 0x0
je r-xdata
push 0x45
pop ecx
cmp ax cx
jne r-xdata
cmp [ ebx + 0x330b ] cl
je r-xdata
mov [ edi + 0xf3 ] 0x1
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp [ ebx + 0x3370 ] 0x5
jne r-xdata
lea eax [ ebp - 0x2154 ]
push eax
lea eax [ ebx + 0x1e ]
push eax
push 0x3
cmp [ ebx + 0x3331 ] cl
je r-xdata
mov eax [ edi + 0x8 ]
cmp [ eax + 0x5150 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
cmp [ eax + 0x5194 ] 0x0
je r-xdata
cmp [ ebp - 0xd ] 0x0
je r-xdata
cmp [ edi + 0xf3 ] 0x0
jne r-xdata
cmp [ ebx + 0x6cfc ] cl
je r-xdata
mov edx [ edi + 0x8 ]
lea esi [ ebx + 0x32c0 ]
lea edi [ ebx + 0x32b0 ]
mov eax [ edx + 0x6294 ]
mov ecx [ edx + 0x6290 ]
neg eax
sbb eax eax
and eax esi
neg ecx
push eax
sbb ecx ecx
lea eax [ ebx + 0x32b8 ]
and ecx eax
mov eax [ edx + 0x628c ]
neg eax
push ecx
sbb eax eax
lea ecx [ ebp - 0x1154 ]
and eax edi
push eax
call sub_409430
lea ecx [ ebp - 0x1154 ]
call sub_408ebf
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x8 ]
mov eax [ ecx + 0x6294 ]
neg eax
sbb eax eax
and eax esi
push eax
mov eax [ ecx + 0x628c ]
lea ecx [ ebp - 0x1154 ]
neg eax
sbb eax eax
and eax edi
push eax
call sub_40942d
mov edi [ ebp - 0x1c ]
mov eax [ edi + 0x8 ]
cmp [ eax + 0x519c ] 0x0
jne r-xdata
and [ ebx + 0x229c ] 0xffffffdf
lea ecx [ ebp - 0x1154 ]
call sub_409588
lea eax [ ebp - 0x2154 ]
push eax
lea eax [ ebx + 0x1e ]
push eax
push 0x4
jmp r-xdata
mov [ edi + 0x10f5 ] 0x1
push [ ebx + 0x229c ]
lea eax [ ebp - 0x1136 ]
push eax
call sub_409ae4
test al al
jne r-xdata
call sub_401f25
push 0x3
mov ecx rw-data
mov [ ebp - 0x24 ] 0x1
call sub_406acc
lea eax [ ebp - 0x1136 ]
push eax
lea eax [ ebx + 0x1e ]
push eax
push 0x10
call sub_401f25
sub_408a12
mov eax sub_42ed34
call sub_41c16c
mov eax 0x1034
call sub_41c240
push ebx
push esi
push [ ebp + 0x18 ]
mov esi [ ebp + 0x14 ]
push esi
push esi
call sub_40b29f
lea ecx [ ebp - 0x1040 ]
call sub_408e1d
xor ebx ebx
lea ecx [ ebp - 0x1040 ]
push esi
mov [ ebp - 0x4 ] ebx
call sub_4095c0
test al al
jne r-xdata
push 0x100000
lea ecx [ ebp - 0x1c ]
call sub_401571
mov [ ebp - 0x4 ] 0x1
call sub_40ef9c
mov esi [ ebp - 0x1c ]
jmp r-xdata
push [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push 0x11
call sub_40754a
push [ ebp + 0xc ]
push 0x12
call sub_401546
jmp r-xdata
push [ ebp - 0x18 ]
lea ecx [ ebp - 0x1040 ]
push esi
call sub_40932b
test eax eax
jne r-xdata
lea ecx [ ebp - 0x1040 ]
call sub_408e53
mov ecx [ ebp - 0xc ]
mov al bl
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x14
mov ecx [ ebp + 0x8 ]
push eax
push esi
call sub_4095e6
call sub_40ef9c
mov bl 0x1
test esi esi
je r-xdata
push esi
call j_sub_4251ac#3
pop ecx
sub_408ad8
mov eax sub_42ed46
call sub_41c16c
sub esp 0x14
push esi
push edi
push 0x40000
lea ecx [ ebp - 0x20 ]
call sub_401571
push [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
push edi
call sub_40c248
mov esi eax
test esi esi
je r-xdata
test edi edi
je r-xdata
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
push edi
call j_sub_4251ac#3
pop ecx
pop ebx
xor ecx ecx
cmp ecx eax
jl r-xdata
mov ecx [ ebp + 0x8 ]
push esi
push edi
call sub_40c3e5
mov eax [ ebp - 0x10 ]
xor ecx ecx
cmp eax ecx
jl r-xdata
jg r-xdata
push [ ebp - 0x1c ]
mov ecx [ ebp + 0x8 ]
push edi
call sub_40c248
mov esi eax
mov eax [ ebp - 0x10 ]
test esi esi
jne r-xdata
jg r-xdata
mov esi ebx
cmp esi ebx
jb r-xdata
cmp esi 0xffffffff
je r-xdata
sub ebx esi
sbb eax ecx
mov [ ebp - 0x10 ] eax
cmp ebx ecx
jb r-xdata
sub_408b7d
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x24 ]
test edi edi
je r-xdata
mov esi [ esp + 0x1c ]
xor bl bl
push esi
call sub_409820
mov ebp [ esp + 0x18 ]
jmp r-xdata
mov [ edi ] 0x0
test al al
jne r-xdata
test bl bl
jne r-xdata
xor ebx ebx
cmp [ esp + 0x34 ] bl
setne bl
add ebx 0x11
test ebp ebp
je r-xdata
xor eax eax
xor bl bl
test ebp ebp
sete al
push eax
push [ esp + 0x34 ]
push [ esp + 0x34 ]
push [ esp + 0x34 ]
push [ esp + 0x30 ]
push esi
push [ esp + 0x2c ]
call sub_40fb0c
test eax eax
je r-xdata
push esi
inc bl
call sub_408c49
test al al
jne r-xdata
push 0x1
push esi
call sub_4096ef
test ebp ebp
je r-xdata
push ebx
push esi
mov ecx ebp
call sub_408f0d
test al al
je r-xdata
cmp eax 0x1
je r-xdata
push esi
call sub_409820
push esi
call sub_4097cd
push ebx
push esi
mov ecx ebp
call sub_408f0d
jmp r-xdata
mov al 0x1
jmp r-xdata
test edi edi
je r-xdata
cmp eax 0x6
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x24
xor al al
jmp r-xdata
mov [ edi ] 0x1
push 0xff
mov ecx rw-data
call j_sub_406b14
sub_408c49
mov eax sub_42ed5b
call sub_41c16c
mov eax 0x5024
call sub_41c240
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x4030 ]
push edi
mov ebx 0x800
push ebx
push eax
push esi
call [ GetLongPathNameW@IAT ]
test eax eax
je r-xdata
xor al al
cmp eax ebx
jae r-xdata
push ebx
lea eax [ ebp - 0x5030 ]
push eax
push esi
call [ GetShortPathNameW@IAT ]
test eax eax
je r-xdata
cmp eax ebx
jae r-xdata
lea eax [ ebp - 0x4030 ]
push eax
call sub_40b1d0
mov [ ebp + 0x8 ] eax
lea eax [ ebp - 0x5030 ]
push eax
call sub_40b1d0
mov edi eax
xor ebx ebx
cmp [ edi ] bx
je r-xdata
push edi
push [ ebp + 0x8 ]
call sub_4100df
test eax eax
je r-xdata
push edi
push esi
call sub_40b1d0
push eax
call sub_4100df
test eax eax
jne r-xdata
mov [ ebp - 0x100c ] ax
mov edi ebx
mov edi 0x800
lea eax [ ebp - 0x3030 ]
push edi
push esi
push eax
call sub_40e847
push edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x3030 ]
push eax
call sub_40b23f
mov edi [ MoveFileW@IAT ]
lea eax [ ebp - 0x100c ]
push eax
lea eax [ ebp - 0x3030 ]
push eax
call edi
test eax eax
je r-xdata
push 0x800
push esi
lea eax [ ebp - 0x100c ]
push eax
call sub_40e847
push edi
push r--data
push 0x800
lea eax [ ebp - 0x100c ]
push eax
call sub_40b1d0
push eax
call sub_403ce2
add esp 0x10
lea eax [ ebp - 0x100c ]
push eax
call sub_409820
test al al
je r-xdata
lea ecx [ ebp - 0x2030 ]
call sub_408e1d
push esi
mov [ ebp - 0x4 ] ebx
call sub_409820
test al al
jne r-xdata
mov ax [ ebp - 0x100c ]
xor eax eax
mov [ ebp - 0x100c ] ax
jmp r-xdata
lea eax [ ebp - 0x3030 ]
push eax
lea eax [ ebp - 0x100c ]
push eax
call edi
test bl bl
je r-xdata
push 0x12
push esi
lea ecx [ ebp - 0x2030 ]
call sub_408f0d
mov bl al
test ax ax
jne r-xdata
test ax ax
je r-xdata
add edi 0x7b
cmp edi 0x2710
jl r-xdata
lea ecx [ ebp - 0x2030 ]
call sub_408e53
mov al 0x1
jmp r-xdata
lea ecx [ ebp - 0x2030 ]
call sub_408ebf
lea ecx [ ebp - 0x2030 ]
call sub_409009
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_408e1d
or [ ecx + 0x4 ] 0xffffffff
xor eax eax
mov [ ecx ] r--data
mov [ ecx + 0x1e ] ax
mov [ ecx + 0x8 ] al
mov [ ecx + 0xc ] eax
mov [ ecx + 0x10 ] al
mov [ ecx + 0x1020 ] eax
mov [ ecx + 0x1c ] al
mov [ ecx + 0x15 ] al
mov eax ecx
mov [ ecx + 0x11 ] 0x1010000
mov [ ecx + 0x18 ] 0x100
retn
sub_408e53
push ebp
mov ebp esp
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_42eb81
push eax
mov [ fs : 0x0 ] esp
cmp [ ecx + 0x4 ] 0xffffffff
mov [ ecx ] r--data
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x10 ] 0x0
jne r-xdata
cmp [ ecx + 0x12 ] 0x0
je r-xdata
call sub_408ebf
call sub_409009
jmp r-xdata
sub_408e9d
push esi
mov esi ecx
call sub_408e53
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push 0x1024
push esi
call sub_41c15e
pop ecx
pop ecx
sub_408ebf
push ebx
push esi
mov esi ecx
mov bl 0x1
cmp [ esi + 0x4 ] 0xffffffff
je r-xdata
and [ esi + 0xc ] 0x0
test bl bl
jne r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
pop esi
mov al bl
pop ebx
retn
cmp [ esi + 0x14 ] bl
je r-xdata
or [ esi + 0x4 ] 0xffffffff
cmp [ esi + 0xc ] 0x0
jne r-xdata
lea eax [ esi + 0x1e ]
mov ecx rw-data
push eax
call sub_406991
push [ esi + 0x4 ]
call [ CloseHandle@IAT ]
lea ebx [ eax - 0x1 ]
neg ebx
sbb bl bl
inc bl
sub_408f0d
mov eax 0x1004
call sub_41c240
push ebx
push ebp
push esi
mov esi ecx
mov ecx [ esp + 0x1018 ]
mov eax ecx
shr eax 0x1
and al 0x1
test cl 0x10
jne r-xdata
mov dl 0x1
cmp [ esi + 0x1c ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xffffffff
mov ebp [ esp + 0xc ]
cmp eax 0x20
je r-xdata
xor dl dl
jmp r-xdata
and [ esi + 0xc ] 0x0
lea eax [ esi + 0x1e ]
push 0x800
push [ esp + 0x1018 ]
mov [ esi + 0x12 ] 0x1
push eax
mov [ esi + 0x10 ] 0x0
call sub_40e847
xor eax eax
cmp [ esi + 0x4 ] 0xffffffff
pop esi
pop ebp
setne al
pop ebx
add esp 0x1004
retn 0x8
push 0x800
lea eax [ esp + 0x14 ]
push eax
push [ esp + 0x101c ]
call sub_40ac19
test al al
je r-xdata
mov ebp [ esp + 0xc ]
xor eax eax
push eax
push eax
push 0x2
push eax
push ebp
push ebx
push [ esp + 0x102c ]
call [ CreateFileW@IAT ]
mov [ esi + 0x4 ] eax
jmp r-xdata
push [ esp + 0x1014 ]
xor ebx ebx
mov [ esi + 0x18 ] ecx
test al al
sete bl
xor eax eax
dec ebx
and ebx 0x80000000
add ebx 0xc0000000
test dl dl
setne al
mov [ esp + 0x10 ] eax
call sub_40b1b4
movzx eax [ eax ]
cmp eax 0x2e
je r-xdata
xor eax eax
push eax
push eax
push 0x2
push eax
push ebp
push ebx
lea eax [ esp + 0x28 ]
push eax
call [ CreateFileW@IAT ]
mov [ esi + 0x4 ] eax
cmp [ esi + 0x4 ] 0xffffffff
jne r-xdata
sub_409009
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0xffffffff
je r-xdata
xor al al
pop esi
retn
cmp [ esi + 0x13 ] 0x0
je r-xdata
call sub_408ebf
lea eax [ esi + 0x1e ]
push eax
call sub_4097cd
pop esi
retn
sub_409032
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x1
jne r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
push 0xfffffff6
call [ GetStdHandle@IAT ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx esi
call sub_409139
test al al
je r-xdata
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov eax 0x4e20
cmp [ ebp + 0xc ] eax
jbe r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x6d
jne r-xdata
push eax
or eax 0xffffffff
jmp r-xdata
mov ebx 0x8000
cmp [ ebp + 0xc ] ebx
jbe r-xdata
xor eax eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call [ GetLastError@IAT ]
cmp eax 0x21
jne r-xdata
push ebx
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx esi
call sub_409032
jmp r-xdata
sub_4090c9
mov eax sub_42ed6d
call sub_41c16c
sub esp 0x10
push esi
mov esi ecx
push edi
mov [ ebp - 0x1c ] esi
mov eax [ esi ]
call [ eax + 0x10 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
mov eax [ esi ]
xor ecx ecx
push 0x2
push ecx
mov [ ebp - 0x4 ] ecx
push ecx
mov ecx esi
call [ eax + 0xc ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
lea ecx [ ebp - 0x1c ]
mov esi eax
mov edi edx
call sub_4017e5
mov ecx [ ebp - 0xc ]
mov edx edi
pop edi
mov eax esi
mov [ fs : 0x0 ] ecx
pop esi
mov esp ebp
pop ebp
retn
sub_40911f
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
lea edx [ ebp - 0x1 ]
push 0x1
push edx
mov [ ebp - 0x1 ] 0x0
call [ eax + 0x8 ]
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_409139
cmp [ ecx + 0x4 ] 0xffffffff
jne r-xdata
push [ ecx + 0x4 ]
call [ GetFileType@IAT ]
cmp eax 0x2
je r-xdata
xor al al
retn
xor eax eax
inc eax
retn
cmp eax 0x3
je r-xdata
xor eax eax
retn
sub_40915c
mov eax 0x1008
call sub_41c240
push ebx
mov ebx [ esp + 0x1014 ]
xor edx edx
push ebp
push edi
mov edi ecx
mov [ edi + 0x1020 ] edx
cmp [ edi + 0x1c ] dl
jne r-xdata
mov cl 0x1
mov cl dl
test bl 0x4
je r-xdata
shr ebx 0x3
not ebx
and ebx 0x1
test cl cl
je r-xdata
or esi 0x40000000
mov eax ebx
shr eax 0x1
push esi
and al 0x1
movzx esi al
neg esi
sbb esi esi
and esi 0xc0000000
add esi 0x80000000
test bl 0x1
je r-xdata
xor eax eax
cmp [ edi + 0x15 ] al
push edx
setne al
dec eax
and eax 0x8000000
push eax
push 0x3
push edx
push ebx
push esi
push [ esp + 0x1034 ]
mov [ esp + 0x30 ] eax
call [ CreateFileW@IAT ]
mov ebp eax
cmp ebp 0xffffffff
jne r-xdata
or ebx 0x2
xor eax eax
cmp ebp 0xffffffff
mov [ edi + 0x12 ] al
setne bl
mov [ edi + 0xc ] eax
mov [ edi + 0x10 ] al
pop esi
test bl bl
je r-xdata
call [ GetLastError@IAT ]
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x18 ]
push 0x800
push eax
push [ esp + 0x1024 ]
call sub_40ac19
test al al
je r-xdata
pop edi
pop ebp
mov al bl
pop ebx
add esp 0x1008
retn 0x8
push 0x800
push [ esp + 0x101c ]
lea ecx [ edi + 0x1e ]
mov [ edi + 0x4 ] ebp
push ecx
call sub_40e847
cmp [ esp + 0x10 ] 0x2
jne r-xdata
push 0x0
push [ esp + 0x18 ]
lea eax [ esp + 0x20 ]
push 0x3
push 0x0
push ebx
push esi
push eax
call [ CreateFileW@IAT ]
mov ebp eax
call [ GetLastError@IAT ]
cmp eax 0x2
jne r-xdata
mov [ edi + 0x1020 ] 0x1
cmp ebp 0xffffffff
jne r-xdata
mov [ esp + 0x10 ] eax
sub_409287
push esi
push edi
xor edi edi
mov esi ecx
push edi
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_4092b5
test al al
je r-xdata
pop edi
pop esi
retn 0x8
mov ecx esi
call sub_409588
mov eax [ esi ]
mov ecx esi
push edi
push edi
push edi
call [ eax + 0xc ]
sub_4092b5
push ebp
mov ebp esp
push ebx
mov ebx ecx
cmp [ ebx + 0x4 ] 0xffffffff
je r-xdata
mov al 0x1
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
test edi edi
jg r-xdata
mov ecx [ ebp + 0x10 ]
jl r-xdata
call [ GetLastError@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
test esi esi
jae r-xdata
xor al al
jmp r-xdata
mov eax edi
mov [ ebp + 0x10 ] edi
sar eax 0x1f
push ecx
lea eax [ ebp + 0x10 ]
push eax
push esi
push [ ebx + 0x4 ]
call [ SetFilePointer@IAT ]
pop edi
pop esi
cmp eax 0xffffffff
jne r-xdata
cmp ecx 0x1
mov ecx ebx
jne r-xdata
pop ebx
pop ebp
retn 0xc
call sub_4090c9
mov eax [ ebx ]
call [ eax + 0x10 ]
jmp r-xdata
add esi eax
adc edi edx
xor ecx ecx
jmp r-xdata
sub_40932b
push ecx
push ecx
push ebx
push ebp
push esi
mov esi ecx
xor ebx ebx
push edi
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] ebx
cmp [ esi + 0x11 ] bl
je r-xdata
mov ebp [ esp + 0x20 ]
mov eax [ esi ]
call [ eax + 0x10 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edx
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn 0x8
mov [ esi + 0x1020 ] 0x2
cmp [ esi + 0x14 ] bl
je r-xdata
cmp [ esi + 0x11 ] bl
jne r-xdata
mov edi ebx
test ebp ebp
je r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
mov edx [ esi ]
xor eax eax
mov ecx ebx
add ecx [ esp + 0x10 ]
push 0x0
adc eax [ esp + 0x18 ]
push eax
push ecx
mov ecx esi
call [ edx + 0xc ]
mov eax ebp
mov ecx 0x200
sub eax ebx
cmp eax ecx
jb r-xdata
lea eax [ esi + 0x1e ]
mov ecx rw-data
push eax
call sub_406a71
jmp r-xdata
lea eax [ esi + 0x1e ]
mov ecx rw-data
push eax
call sub_406966
test al al
jne r-xdata
push eax
push [ esp + 0x20 ]
mov ecx esi
call sub_409032
cmp eax 0xffffffff
jne r-xdata
mov eax ecx
push ebp
push [ esp + 0x20 ]
mov ecx esi
call sub_409032
mov edi eax
cmp edi 0xffffffff
jne r-xdata
add ebx 0x200
add edi eax
cmp ebx ebp
jb r-xdata
mov eax 0x200
sub_4093fe
push esi
push [ esp + 0x10 ]
mov esi ecx
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_4092b5
test al al
jne r-xdata
pop esi
retn 0xc
cmp [ esi + 0x14 ] al
je r-xdata
lea eax [ esi + 0x1e ]
mov ecx rw-data
push eax
call sub_406aab
sub_409430
sub esp 0x1c
push ebx
push ebp
push edi
mov edi ecx
cmp [ edi + 0x18 ] 0x100
je r-xdata
mov ecx [ esp + 0x2c ]
xor ebx ebx
inc ebx
test ecx ecx
je r-xdata
test [ edi + 0x18 ] 0x2
jne r-xdata
xor dl dl
mov eax [ ecx ]
or eax [ ecx + 0x4 ]
je r-xdata
push [ edi + 0x4 ]
call [ FlushFileBuffers@IAT ]
mov [ esp + 0x30 ] 0x0
mov eax [ esi ]
or eax [ esi + 0x4 ]
mov [ esp + 0x30 ] bl
jne r-xdata
mov dl bl
jmp r-xdata
xor bl bl
mov eax [ ebp ]
or eax [ ebp + 0x4 ]
jne r-xdata
mov ebp [ esp + 0x38 ]
test ebp ebp
je r-xdata
push esi
mov esi [ esp + 0x34 ]
mov [ esp + 0x13 ] dl
test esi esi
je r-xdata
cmp [ esp + 0x30 ] 0x0
je r-xdata
lea eax [ esp + 0x14 ]
push eax
call sub_40f65a
test dl dl
je r-xdata
pop esi
test bl bl
je r-xdata
lea eax [ esp + 0x24 ]
mov ecx esi
push eax
call sub_40f65a
movzx eax [ esp + 0xf ]
lea ecx [ esp + 0x10 ]
neg eax
sbb eax eax
and eax ecx
lea ecx [ esp + 0x18 ]
push eax
movzx eax bl
neg eax
sbb eax eax
and eax ecx
lea ecx [ esp + 0x24 ]
push eax
movzx eax [ esp + 0x34 ]
neg eax
sbb eax eax
and eax ecx
push eax
push [ edi + 0x4 ]
call [ SetFileTime@IAT ]
pop edi
pop ebp
pop ebx
add esp 0x1c
retn 0xc
lea eax [ esp + 0x18 ]
mov ecx ebp
push eax
call sub_40f65a
sub_409509
push ecx
push ebx
push ebp
push esi
mov esi ecx
or ebx 0xffffffff
mov ebp rw-data
cmp [ esi + 0x4 ] ebx
jne r-xdata
and [ esp + 0xc ] 0x0
lea eax [ esp + 0xc ]
push edi
push 0x1
push eax
push 0x0
push [ esi + 0x4 ]
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov eax [ esp + 0x10 ]
xor ecx ecx
cdq
add ecx edi
mov edx eax
mov eax ecx
adc edx 0x0
call [ GetLastError@IAT ]
test eax eax
je r-xdata
mov eax ebx
mov edx ebx
jmp r-xdata
lea eax [ esi + 0x1e ]
mov ecx ebp
push eax
call sub_406aab
cmp [ esi + 0x14 ] 0x0
je r-xdata
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax ebx
mov edx ebx
jmp r-xdata
lea eax [ esi + 0x1e ]
mov ecx ebp
push eax
call sub_406aab
pop edi
sub_4095c0
mov eax [ ecx ]
push 0x0
push [ esp + 0x8 ]
call [ eax + 0x4 ]
test al al
je r-xdata
push [ esp + 0x4 ]
mov ecx rw-data
call sub_406a63
xor al al
mov al 0x1
jmp r-xdata
retn 0x4
sub_4095e6
push ebp
mov ebp [ esp + 0xc ]
push edi
mov edi ecx
test ebp ebp
jne r-xdata
cmp [ edi + 0xc ] 0x1
jne r-xdata
mov al 0x1
jmp r-xdata
push ebx
push esi
push 0xfffffff5
call [ GetStdHandle@IAT ]
mov [ edi + 0x4 ] eax
pop edi
pop ebp
retn 0x8
push 0x0
lea eax [ esp + 0x1c ]
push eax
push ebp
push [ esp + 0x20 ]
push [ edi + 0x4 ]
call [ WriteFile@IAT ]
dec eax
neg eax
sbb al al
inc al
mov bl al
xor esi esi
test ebp ebp
je r-xdata
pop esi
mov al bl
mov [ edi + 0x8 ] 0x1
pop ebx
cmp [ edi + 0x14 ] 0x0
je r-xdata
mov eax ebp
sub eax esi
cmp eax 0x4000
jb r-xdata
cmp [ edi + 0xc ] 0x0
jne r-xdata
push 0x0
lea ecx [ esp + 0x1c ]
push ecx
push eax
mov eax [ esp + 0x20 ]
add eax esi
push eax
push [ edi + 0x4 ]
call [ WriteFile@IAT ]
lea ebx [ eax - 0x1 ]
neg ebx
sbb bl bl
add bl 0x1
je r-xdata
mov eax 0x4000
push 0x0
lea eax [ edi + 0x1e ]
mov ecx rw-data
push eax
call sub_40696b
test al al
je r-xdata
add esi 0x4000
cmp esi ebp
jb r-xdata
lea eax [ edi + 0x1e ]
mov ecx rw-data
push eax
push 0x0
call sub_406b64
cmp [ esp + 0x18 ] ebp
jae r-xdata
jmp r-xdata
and [ esp + 0x18 ] 0x0
xor bl bl
cmp [ edi + 0xc ] 0x0
je r-xdata
cmp [ esp + 0x18 ] 0x0
jbe r-xdata
test bl bl
jne r-xdata
mov esi [ edi ]
mov ecx edi
push 0x0
call [ esi + 0x10 ]
sub eax [ esp + 0x1c ]
mov ecx edi
sbb edx 0x0
push edx
push eax
call [ esi + 0xc ]
jmp r-xdata
sub_4096ef
mov eax 0x1004
call sub_41c240
push esi
mov esi [ esp + 0x100c ]
test esi esi
je r-xdata
xor al al
xor eax eax
cmp [ esi ] ax
je r-xdata
push ebx
push edi
mov bl 0x1
mov [ esp + 0xc ] eax
mov edi esi
push ebp
cmp [ esp + 0x101c ] 0x0
pop ebp
jne r-xdata
movzx eax [ edi ]
push eax
call sub_40aed4
test al al
je r-xdata
pop edi
mov al bl
pop ebx
jmp r-xdata
push esi
call sub_40b1b4
movzx eax [ eax ]
push eax
call sub_40aed4
test al al
jne r-xdata
mov eax [ esp + 0x10 ]
add edi 0x2
add eax 0x2
xor ecx ecx
mov [ esp + 0x10 ] eax
cmp [ edi ] cx
jne r-xdata
cmp edi esi
jbe r-xdata
pop esi
add esp 0x1004
retn 0x8
xor eax eax
push eax
push 0x1
push esi
call sub_4098a7
neg eax
sbb al al
inc al
mov bl al
mov ebp eax
sar ebp 0x1
cmp ebp 0x800
jae r-xdata
lea eax [ esi + 0x4 ]
cmp edi eax
jne r-xdata
push ebp
lea eax [ esp + 0x18 ]
push esi
push eax
call sub_422b91
add esp 0xc
xor eax eax
mov [ esp + ebp * 2 + 0x14 ] ax
push eax
push 0x1
lea eax [ esp + 0x1c ]
push eax
call sub_4098a7
mov ebx eax
neg ebx
sbb bl bl
inc bl
cmp [ esi + 0x2 ] 0x3a
je r-xdata
sub_4097cd
push ebp
mov ebp esp
mov eax 0x1000
call sub_41c240
push ebx
push [ ebp + 0x8 ]
call [ DeleteFileW@IAT ]
test eax eax
setne bl
test bl bl
jne r-xdata
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x800
lea eax [ ebp - 0x1000 ]
push eax
push [ ebp + 0x8 ]
call sub_40ac19
test al al
je r-xdata
lea eax [ ebp - 0x1000 ]
push eax
call [ DeleteFileW@IAT ]
test eax eax
setne bl
sub_409834
push ebp
mov ebp esp
mov eax 0x1000
call sub_41c240
push esi
push [ ebp + 0x8 ]
call [ GetFileAttributesW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0x800
lea eax [ ebp - 0x1000 ]
push eax
push [ ebp + 0x8 ]
call sub_40ac19
test al al
je r-xdata
lea eax [ ebp - 0x1000 ]
push eax
call [ GetFileAttributesW@IAT ]
mov esi eax
sub_4098a7
push ebp
mov ebp esp
mov eax 0x1000
call sub_41c240
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_40b1b4
movzx eax [ eax ]
cmp eax 0x2e
je r-xdata
push esi
call sub_409820
test al al
jne r-xdata
cmp eax 0x20
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x2
je r-xdata
push 0x800
lea eax [ ebp - 0x1000 ]
push eax
push esi
call sub_40ac19
test al al
je r-xdata
push 0x0
push esi
call [ CreateDirectoryW@IAT ]
test eax eax
jne r-xdata
push 0x2
pop eax
cmp eax 0x3
je r-xdata
push 0x0
lea eax [ ebp - 0x1000 ]
push eax
call [ CreateDirectoryW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
inc eax
jmp r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x10 ]
push esi
call sub_409ae4
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_40994b
mov eax 0x1024
call sub_41c240
push ebx
push ebp
xor ebx ebx
xor ecx ecx
push esi
mov esi [ esp + 0x1038 ]
inc ebx
push edi
test esi esi
je r-xdata
mov [ esp + 0x11 ] cl
mov eax [ esi ]
or eax [ esi + 0x4 ]
mov [ esp + 0x11 ] bl
jne r-xdata
mov [ esp + 0x13 ] cl
mov eax [ edi ]
or eax [ edi + 0x4 ]
mov [ esp + 0x13 ] bl
jne r-xdata
mov edi [ esp + 0x1040 ]
test edi edi
je r-xdata
mov [ esp + 0x12 ] cl
mov eax [ ebp ]
or eax [ ebp + 0x4 ]
mov [ esp + 0x12 ] bl
jne r-xdata
mov ebp [ esp + 0x1044 ]
test ebp ebp
je r-xdata
xor bl bl
test bl al
je r-xdata
push [ esp + 0x1038 ]
call sub_409834
mov [ esp + 0x18 ] eax
cmp eax 0xffffffff
je r-xdata
cmp [ esp + 0x11 ] 0x0
je r-xdata
push 0x800
lea eax [ esp + 0x38 ]
push eax
push [ esp + 0x1040 ]
call sub_40ac19
test al al
je r-xdata
push 0x0
push [ esp + 0x103c ]
call sub_409ae4
jmp r-xdata
cmp [ esp + 0x13 ] 0x0
je r-xdata
lea eax [ esp + 0x1c ]
mov ecx esi
push eax
call sub_40f65a
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1024
retn 0x10
push 0x0
push 0x2000000
push 0x3
push 0x0
push 0x3
push 0x40000000
lea eax [ esp + 0x4c ]
push eax
call [ CreateFileW@IAT ]
mov [ esp + 0x14 ] eax
cmp eax 0xffffffff
je r-xdata
push 0x0
push 0x2000000
push 0x3
push 0x0
push 0x3
push 0x40000000
push [ esp + 0x1050 ]
call [ CreateFileW@IAT ]
mov [ esp + 0x14 ] eax
cmp eax 0xffffffff
jne r-xdata
cmp [ esp + 0x12 ] 0x0
je r-xdata
lea eax [ esp + 0x2c ]
mov ecx edi
push eax
call sub_40f65a
movzx eax [ esp + 0x11 ]
lea ecx [ esp + 0x1c ]
neg eax
mov esi [ esp + 0x14 ]
sbb eax eax
and eax ecx
lea ecx [ esp + 0x24 ]
push eax
movzx eax [ esp + 0x16 ]
neg eax
sbb eax eax
and eax ecx
lea ecx [ esp + 0x30 ]
push eax
movzx eax [ esp + 0x1b ]
neg eax
sbb eax eax
and eax ecx
push eax
push esi
call [ SetFileTime@IAT ]
push esi
call [ CloseHandle@IAT ]
test bl bl
je r-xdata
lea eax [ esp + 0x24 ]
mov ecx ebp
push eax
call sub_40f65a
push [ esp + 0x18 ]
push [ esp + 0x103c ]
call sub_409ae4
sub_409ae4
push ebp
mov ebp esp
mov eax 0x1000
call sub_41c240
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ SetFileAttributesW@IAT ]
test eax eax
setne bl
test bl bl
jne r-xdata
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x800
lea eax [ ebp - 0x1000 ]
push eax
push [ ebp + 0x8 ]
call sub_40ac19
test al al
je r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x1000 ]
push eax
call [ SetFileAttributesW@IAT ]
test eax eax
setne bl
sub_409b66
push esi
mov esi [ esp + 0xc ]
push [ esp + 0x8 ]
mov [ esi + 0x1044 ] 0x0
call sub_40aeec
test al al
je r-xdata
push esi
push [ esp + 0xc ]
push 0xffffffff
call sub_409c91
cmp eax 0xffffffff
je r-xdata
xor al al
jmp r-xdata
push eax
call [ FindClose@IAT ]
push [ esi + 0x1008 ]
and [ esi + 0x1040 ] 0x0
call sub_409882
push [ esi + 0x1008 ]
mov [ esi + 0x100c ] al
call sub_40989a
mov [ esi + 0x100d ] al
mov al 0x1
pop esi
retn 0xc
sub_409bca
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi ecx
jmp r-xdata
xor ebx ebx
mov [ edi + 0x1044 ] bl
cmp [ esi ] bx
jne r-xdata
cmp [ esi + 0x1000 ] 0x0
push edi
push esi
je r-xdata
xor al al
push [ esi + 0x1004 ]
call sub_409c91
push 0xffffffff
call sub_409c91
mov [ esi + 0x1004 ] eax
jmp r-xdata
push [ edi + 0x1008 ]
mov [ edi + 0x1040 ] ebx
call sub_409882
push [ edi + 0x1008 ]
mov [ edi + 0x100c ] al
call sub_40989a
mov [ edi + 0x100d ] al
push edi
mov [ esi + 0x1000 ] bl
call sub_40b1d0
mov ebx eax
push r--data
push ebx
call sub_4216e0
pop ecx
pop ecx
test eax eax
je r-xdata
cmp eax 0xffffffff
je r-xdata
push r--data
push ebx
call sub_4216e0
pop ecx
pop ecx
test eax eax
jne r-xdata
mov al 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x8
sub_409c91
mov eax 0x1250
call sub_41c240
push ebx
push ebp
push esi
mov esi [ esp + 0x1260 ]
lea eax [ esp + 0xc ]
push edi
mov edi [ esp + 0x126c ]
or ebp 0xffffffff
push eax
cmp esi ebp
jne r-xdata
push esi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push [ esp + 0x126c ]
mov ebx [ FindFirstFileW@IAT ]
call ebx
mov esi eax
cmp esi ebp
jne r-xdata
cmp esi ebp
je r-xdata
mov esi ebp
call [ GetLastError@IAT ]
cmp eax 0x12
setne al
mov [ edi + 0x1044 ] al
mov ebx 0x800
push ebx
push [ esp + 0x126c ]
push edi
call sub_40e847
push ebx
lea eax [ esp + 0x40 ]
push eax
push edi
call sub_40b23f
mov ecx [ esp + 0x2c ]
xor eax eax
add eax [ esp + 0x30 ]
mov [ edi + 0x1000 ] eax
mov eax [ esp + 0x10 ]
adc ecx 0x0
mov [ edi + 0x1008 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x1028 ] eax
mov eax [ esp + 0x18 ]
mov [ edi + 0x102c ] eax
mov eax [ esp + 0x1c ]
mov [ edi + 0x1030 ] eax
mov eax [ esp + 0x20 ]
mov [ edi + 0x1034 ] eax
mov eax [ esp + 0x24 ]
mov [ edi + 0x1038 ] eax
mov eax [ esp + 0x28 ]
mov [ edi + 0x103c ] eax
lea eax [ esp + 0x24 ]
mov [ edi + 0x1004 ] ecx
lea ecx [ edi + 0x1010 ]
push eax
call sub_40f4ba
lea eax [ esp + 0x14 ]
push eax
lea ecx [ edi + 0x1018 ]
call sub_40f4ba
lea eax [ esp + 0x1c ]
push eax
lea ecx [ edi + 0x1020 ]
call sub_40f4ba
push 0x800
lea eax [ esp + 0x264 ]
push eax
push [ esp + 0x1270 ]
call sub_40ac19
test al al
je r-xdata
and [ edi + 0x1040 ] 0x0
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1250
retn 0xc
call [ GetLastError@IAT ]
cmp eax 0x2
je r-xdata
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x264 ]
push eax
call ebx
mov esi eax
cmp esi ebp
jne r-xdata
xor eax eax
cmp eax 0x3
je r-xdata
cmp eax 0x12
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ edi + 0x1044 ] al
jmp r-xdata
sub_409e16
cmp [ esp + 0x4 ] 0x0
push esi
mov esi ecx
mov [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0xc ] 0x0
push edi
mov edi 0x8003
push edi
call sub_41c402
push edi
push 0x0
push eax
mov [ esi + 0xc ] eax
call sub_41d1e0
add esp 0x10
pop edi
jmp r-xdata
mov eax esi
pop esi
retn 0x4
sub_409e5c
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x8 ] 0x1
pop esi
retn 0x4
cmp [ esi + 0x8 ] 0x0
jne r-xdata
push [ esi + 0xc ]
call j_sub_4251ac#2
pop ecx
sub_409e9f
push ebx
mov ebx ecx
push esi
push edi
push 0x8
mov esi [ ebx + 0xc ]
mov edx [ ebx ]
pop ecx
sub ecx [ ebx + 0x4 ]
movzx edi [ esi + edx ]
movzx eax [ esi + edx + 0x1 ]
shl edi 0x8
or edi eax
movzx eax [ esi + edx + 0x2 ]
shl edi 0x8
or edi eax
shr edi cl
movzx eax di
pop edi
pop esi
pop ebx
retn
sub_409ee0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
mov ebx ecx
push 0x8
mov esi ebx
sub edi ebx
pop ebp
mov ecx esi
call sub_40a20c
lea eax [ edi + esi ]
mov ecx esi
push eax
call sub_409ff8
add esi 0x108
sub ebp 0x1
jne r-xdata
lea esi [ ebx + 0x840 ]
mov ecx esi
call sub_40a20c
mov ebp [ esp + 0x14 ]
mov ecx esi
lea eax [ ebp + 0x840 ]
push eax
call sub_409ff8
lea esi [ ebp + 0x948 ]
mov ecx 0x80
lea edi [ ebx + 0x948 ]
[ edi ] [ esi ]
mov eax [ ebp + 0xb48 ]
mov [ ebx + 0xb48 ] eax
mov eax [ ebp + 0xb4c ]
pop edi
mov [ ebx + 0xb4c ] eax
mov eax [ ebp + 0xb50 ]
pop esi
mov [ ebx + 0xb50 ] eax
mov eax ebx
pop ebp
pop ebx
retn 0x4
sub_409f6d
push ebx
push esi
push edi
mov ebx ecx
push 0x8
mov esi ebx
pop edi
mov ecx esi
call sub_40a20c
add esi 0x108
sub edi 0x1
jne r-xdata
lea ecx [ ebx + 0x840 ]
call sub_40a20c
pop edi
pop esi
mov eax ebx
pop ebx
retn
sub_409f9a
push ebp
mov ebp esp
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_42eb81
push eax
mov [ fs : 0x0 ] esp
push esi
mov esi ecx
push edi
push [ esi + 0xc ]
call sub_40f2da
push 0x4
lea eax [ esi + 0x4 ]
push eax
call sub_40dc0c
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
mov [ fs : 0x0 ] ecx
pop esi
mov esp ebp
pop ebp
retn
mov edi 0xb54
push edi
push [ esi + 0x8 ]
call sub_40dc0c
push edi
push [ esi + 0x8 ]
call sub_41c15e
pop ecx
pop ecx
sub_409ff8
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
retn 0x4
push 0xb0
push [ edi + 0xf0 ]
push [ esi + 0xf0 ]
call sub_41ee90
mov eax [ edi + 0x100 ]
add esp 0xc
mov [ esi + 0x100 ] eax
mov al [ edi + 0x104 ]
mov [ esi + 0x104 ] al
sub_40a03c
cmp [ ecx ] 0x0
je r-xdata
mov al 0x1
mov edx [ esp + 0x4 ]
cmp [ edx ] 0x0
je r-xdata
cmp [ ecx ] 0x1
jne r-xdata
cmp [ ecx ] 0x2
jne r-xdata
cmp [ edx ] 0x1
je r-xdata
cmp [ ecx ] 0x3
jne r-xdata
cmp [ edx ] 0x2
jne r-xdata
mov eax [ ecx + 0x4 ]
sub eax [ edx + 0x4 ]
xor al al
jmp r-xdata
cmp [ edx ] 0x3
jne r-xdata
retn 0x4
lea eax [ edx + 0x4 ]
push 0x20
push eax
lea eax [ ecx + 0x4 ]
push eax
call sub_41d710
add esp 0xc
jmp r-xdata
neg eax
sbb eax eax
inc eax
jmp r-xdata
sub_40a092
push ebp
mov ebp esp
sub esp 0x24
lea eax [ ebp - 0x24 ]
push eax
call sub_40a159
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x24 ]
call sub_40a03c
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
lea eax [ ebp - 0x24 ]
push eax
call sub_405e8f
sub_40a0c4
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
cmp eax 0x1
jne r-xdata
push 0xb54
call sub_41c12b
mov [ ebp - 0x4 ] eax
pop ecx
test eax eax
je r-xdata
cmp eax 0x2
jne r-xdata
and [ esi + 0x4 ] 0x0
xor eax eax
mov ecx eax
call sub_409f6d
jmp r-xdata
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0xffffffff
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp eax 0x8
jb r-xdata
push [ esi + 0x8 ]
call sub_405691
mov [ esi + 0x10 ] eax
pop esi
mov esp ebp
pop ebp
retn 0x8
push 0x8
pop eax
sub_40a12a
mov eax [ esp + 0x4 ]
mov [ ecx ] eax
cmp eax 0x1
je r-xdata
and [ ecx + 0x4 ] 0x0
cmp eax 0x2
jne r-xdata
retn 0x4
push 0x20
lea eax [ ecx + 0x4 ]
push rw-data
push eax
call sub_41ee90
add esp 0xc
cmp eax 0x3
jne r-xdata
sub_40a159
push ebp
mov ebp esp
mov eax [ ecx ]
sub esp 0xb54
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
cmp [ ecx ] 0x1
jne r-xdata
cmp [ ecx ] 0x2
jne r-xdata
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
cmp [ ecx ] 0x3
jne r-xdata
mov eax [ ecx + 0x4 ]
not eax
mov [ esi + 0x4 ] eax
pop esi
mov esp ebp
pop ebp
retn 0x4
push [ ecx + 0x8 ]
lea ecx [ ebp - 0xb54 ]
call sub_409ee0
lea eax [ esi + 0x4 ]
push eax
lea eax [ ebp - 0xb54 ]
push eax
call sub_405601
sub_40a1ac
push esi
mov esi ecx
cmp [ esi ] 0x2
jne r-xdata
cmp [ esi ] 0x3
jne r-xdata
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esi + 0x4 ]
call sub_405c44
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
cmp [ esi + 0x10 ] 0x1
jbe r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0xc ]
push [ esp + 0xc ]
push [ esp + 0xc ]
mov [ ecx + 0xb4c ] eax
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x10 ]
mov [ ecx + 0xb50 ] eax
push [ esi + 0x8 ]
call sub_4056f2
cmp [ esi + 0xc ] 0x0
jne r-xdata
call sub_40f1ac
mov [ esi + 0xc ] eax
sub_40a20c
mov eax ecx
not eax
inc eax
and eax 0x3f
add eax ecx
mov [ ecx + 0xf0 ] eax
sub eax 0xffffff80
mov [ ecx + 0xf4 ] eax
add eax 0x20
mov [ ecx + 0xf8 ] eax
add eax 0x8
mov [ ecx + 0xfc ] eax
retn
sub_40a238
push ebx
push esi
push [ esp + 0xc ]
mov esi ecx
lea ecx [ esi + 0x1020 ]
call sub_401f56
xor ebx ebx
lea ecx [ esi + 0x1060 ]
push ebx
mov [ esi + 0x10 ] bl
call sub_40a12a
mov [ esi + 0x1030 ] ebx
mov [ esi + 0x1034 ] ebx
mov [ esi + 0x1040 ] ebx
mov [ esi + 0x1044 ] ebx
mov [ esi + 0x1038 ] ebx
mov [ esi + 0x103c ] ebx
mov [ esi + 0x1088 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x108c ] ebx
mov [ esi + 0x1090 ] bl
mov [ esi + 0x10b1 ] bl
mov [ esi + 0x10ba ] bl
mov [ esi + 0x10dc ] ebx
mov [ esi + 0x10e0 ] ebx
mov [ esi + 0x10e4 ] ebx
mov [ esi + 0x10e8 ] bx
mov [ esi + 0x10ea ] bl
mov [ esi + 0x10f0 ] ebx
mov [ esi + 0x20f5 ] bl
pop esi
pop ebx
retn 0x4
sub_40a2d1
xor eax eax
mov [ ecx + 0x14 ] ax
mov [ ecx + 0x18 ] eax
mov [ ecx + 0x1c ] ax
mov [ ecx + 0x1e ] al
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x28 ] eax
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x30 ] eax
mov [ ecx + 0x34 ] eax
mov [ ecx + 0x38 ] eax
mov [ ecx + 0x3c ] eax
retn
sub_40a2fa
push ebp
mov ebp esp
mov ecx [ rw-data ]
sub esp 0x114
cmp ecx 0xffffffff
jne r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x114 ] 0x114
push eax
call [ GetVersionExW@IAT ]
mov ecx [ ebp - 0x104 ]
mov eax [ ebp - 0x110 ]
mov edx [ ebp - 0x10c ]
mov [ rw-data ] ecx
mov [ rw-data ] eax
mov [ rw-data ] edx
jmp r-xdata
mov eax 0x501
shl eax 0x8
add eax edx
jmp r-xdata
cmp ecx 0x2
jne r-xdata
mov esp ebp
pop ebp
retn
sub_40a36a
mov eax 0x2004
call sub_41c240
mov ecx [ esp + 0x2010 ]
mov eax ecx
push ebx
mov ebx [ esp + 0x200c ]
push ebp
mov ebp [ esp + 0x2014 ]
shr eax 0x1f
push esi
and al 0x1
movzx esi cx
mov [ esp + 0xc ] al
push edi
mov edi [ esp + 0x10 ]
test esi esi
je r-xdata
push ebx
call sub_40b1d0
push ebp
mov [ esp + 0x14 ] eax
call sub_40b1d0
push 0x6
mov ebx eax
push ebx
push r--data
call sub_410101
test eax eax
je r-xdata
push ebx
call sub_4216b5
mov [ esp + 0x14 ] eax
pop ecx
cmp esi 0x2
je r-xdata
xor al al
jmp r-xdata
push edi
push ebx
push [ esp + 0x18 ]
cmp esi 0x2
jne r-xdata
cmp esi 0x1
jne r-xdata
cmp esi 0x3
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2004
retn 0xc
call sub_40a4f7
call sub_40a628
neg eax
sbb eax eax
inc eax
jmp r-xdata
push 0x800
lea eax [ esp + 0x18 ]
push eax
push ebx
call sub_40aa6b
push 0x800
lea eax [ esp + 0x1018 ]
push eax
push ebp
call sub_40aa6b
cmp esi 0x2
je r-xdata
push edi
push eax
push ebp
push ebx
call sub_40a649
test eax eax
jne r-xdata
push edi
lea eax [ esp + 0x1018 ]
push eax
lea eax [ esp + 0x1c ]
push eax
call sub_40a628
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
mov eax [ esp + 0x10 ]
movzx eax [ ebp + eax * 2 ]
cmp eax 0x5c
je r-xdata
cmp esi 0x4
je r-xdata
mov al 0x1
jmp r-xdata
cmp eax 0x2f
je r-xdata
lea eax [ esp + 0x14 ]
push eax
call sub_40aeec
test al al
je r-xdata
cmp esi 0x5
jne r-xdata
test ax ax
jne r-xdata
cmp esi 0x4
je r-xdata
push edi
push ebp
push ebx
cmp [ esp + 0x14 ] 0x0
je r-xdata
push ebx
call sub_40aeec
test al al
jne r-xdata
lea eax [ esp + 0x14 ]
push edi
push eax
call sub_4216b5
pop ecx
push eax
lea eax [ esp + 0x101c ]
push eax
lea eax [ esp + 0x20 ]
push eax
call sub_40a649
push edi
lea eax [ esp + 0x1018 ]
push eax
lea eax [ esp + 0x1c ]
push eax
call sub_40a628
jmp r-xdata
test eax eax
jne r-xdata
sub_40a4f7
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi [ esp + 0x14 ]
push edi
push 0x2e
pop ebx
xor eax eax
test di di
sete al
push 0x2a
pop edx
cmp eax edx
je r-xdata
movzx eax [ ebp ]
test ax ax
jne r-xdata
cmp eax 0x3f
je r-xdata
push 0x2e
pop ecx
xor ebx ebx
cmp ax cx
jne r-xdata
mov al 0x1
jmp r-xdata
test di di
je r-xdata
cmp cx di
je r-xdata
cmp [ esi ] bx
jne r-xdata
lea eax [ ebp + 0x2 ]
mov [ esp + 0x18 ] eax
cmp [ eax ] dx
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
xor al al
jmp r-xdata
add esi 0x2
jmp r-xdata
cmp cx bx
jne r-xdata
push [ esp + 0x1c ]
push esi
push ebp
call sub_40a4f7
add esi 0x2
test al al
jne r-xdata
jmp r-xdata
push ecx
push esi
call sub_41f472
mov edi eax
pop ecx
pop ecx
cmp [ ebp + 0x2 ] bx
jne r-xdata
cmp [ ebp + 0x4 ] bx
je r-xdata
push [ esp + 0x1c ]
movzx eax [ esi ]
push eax
call sub_40a66e
push [ esp + 0x1c ]
movzx edi ax
movzx eax [ ebp ]
push eax
call sub_40a66e
movzx ecx ax
add ebp 0x2
mov eax ecx
test eax eax
je r-xdata
test di di
je r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
cmp edi 0x5c
je r-xdata
push r--data
push ebp
mov esi edi
call sub_422bd4
pop ecx
pop ecx
test eax eax
jne r-xdata
xor ebx ebx
inc ebx
cmp [ edi + 0x2 ] bx
jne r-xdata
cmp di bx
je r-xdata
add edi 0x2
push 0x2e
push edi
call sub_41f472
pop ecx
pop ecx
test eax eax
jne r-xdata
mov al bl
jmp r-xdata
push [ esp + 0x1c ]
push edi
push [ esp + 0x20 ]
call sub_40a628
neg eax
sbb eax eax
inc eax
jmp r-xdata
sub_40a628
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
je r-xdata
call j_sub_4100df
call sub_4216e0
pop ecx
pop ecx
jmp r-xdata
pop ebp
retn 0xc
sub_40a649
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
je r-xdata
call sub_410101
call sub_422b57
add esp 0xc
jmp r-xdata
pop ebp
retn 0x10
sub_40a687
mov eax sub_42ed93
call sub_41c16c
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
lea ecx [ esi + 0x4024 ]
call sub_40d99a
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x5168 ] eax
mov [ esi + 0x516c ] eax
mov [ esi + 0x5170 ] eax
mov [ esi + 0x5174 ] eax
mov [ esi + 0x51a0 ] eax
mov ecx esi
mov [ esi + 0x51a4 ] eax
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x51a8 ] eax
mov [ esi + 0x51ac ] eax
call sub_40a72c
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_40a72c
push esi
push edi
push 0x72a8
xor edi edi
mov esi ecx
push edi
push esi
call sub_41d1e0
mov eax 0x7fffffff
mov [ esi + 0xc ] 0x2000000
add esp 0xc
mov [ esi + 0x5130 ] edi
mov [ esi + 0x5134 ] 0x3
mov [ esi + 0x5128 ] edi
mov [ esi + 0x5184 ] edi
mov [ esi + 0x628c ] 0x4
mov [ esi + 0x51b0 ] eax
mov [ esi + 0x51b4 ] eax
mov [ esi + 0x51b8 ] eax
mov [ esi + 0x51bc ] eax
mov [ esi + 0x5138 ] 0x2
call sub_40f390
pop edi
mov [ esi + 0x7298 ] eax
pop esi
retn
sub_40a7a3
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_4216b5
pop ecx
test eax eax
je r-xdata
pop esi
retn 0x8
cmp [ esi + eax * 2 - 0x2 ] 0x5c
je r-xdata
inc eax
cmp eax [ esp + 0xc ]
jae r-xdata
push r--data
push esi
call sub_422c19
pop ecx
pop ecx
sub_40a7d3
mov eax 0x2004
call sub_41c240
push ebp
push esi
mov esi [ esp + 0x2010 ]
push edi
test esi esi
je r-xdata
cmp [ esp + 0x201c ] 0x0
jbe r-xdata
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
add esp 0x2004
retn 0xc
mov eax [ esp + 0x2018 ]
xor ecx ecx
mov [ eax ] cx
lea eax [ esp + 0xc ]
mov ebp 0x800
push eax
lea eax [ esp + 0x14 ]
push eax
push ebp
push esi
call [ GetFullPathNameW@IAT ]
mov edi eax
test edi edi
je r-xdata
push ebp
lea eax [ esp + 0x1014 ]
push eax
push esi
call sub_40ac19
test al al
je r-xdata
cmp edi ebp
jbe r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea eax [ esp + 0x14 ]
push eax
push ebp
lea eax [ esp + 0x101c ]
push eax
call [ GetFullPathNameW@IAT ]
mov edi eax
cmp esi [ esp + 0x2018 ]
je r-xdata
cmp edi ebp
jae r-xdata
push [ esp + 0x201c ]
push esi
push [ esp + 0x201c ]
lea eax [ esp + 0x14 ]
push eax
jmp r-xdata
push [ esp + 0x2020 ]
call sub_40e847
jmp r-xdata
sub_40a89f
mov eax 0x1000
call sub_41c240
push ebx
push esi
mov esi [ esp + 0x100c ]
push edi
push 0x2e
pop ebx
movzx eax [ esi ]
test ax ax
je r-xdata
xor ecx ecx
cmp [ esi ] cx
je r-xdata
mov ecx eax
lea edi [ esi + 0x4 ]
cmp [ esi ] bx
jne r-xdata
push 0x5c
pop ebx
push ebp
movzx eax [ edi - 0x2 ]
add edi 0x2
mov ecx eax
test ax ax
jne r-xdata
cmp [ edi - 0x2 ] bx
jne r-xdata
cmp [ esp + 0x1014 ] 0x0
je r-xdata
cmp [ esi + 0x2 ] bx
jne r-xdata
cmp [ edi ] bx
jne r-xdata
cmp [ esi + 0x2 ] 0x3a
jne r-xdata
movzx eax cx
push eax
call sub_40aed4
test al al
je r-xdata
mov [ esp + 0x1010 ] esi
cmp [ edi ] bx
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
add esp 0x1000
retn 0x8
push 0x800
push esi
lea eax [ esp + 0x14 ]
push eax
call sub_40e847
lea eax [ esp + 0xc ]
push eax
push [ esp + 0x1018 ]
call sub_421693
pop ecx
pop ecx
cmp [ esi + 0x4 ] cx
jne r-xdata
movzx eax [ edi ]
mov ebp edi
test ax ax
je r-xdata
cmp [ edi + 0x2 ] bx
jne r-xdata
lea edi [ esi + 0x4 ]
movzx eax [ edi + 0x2 ]
push eax
call sub_40aed4
test al al
je r-xdata
add esi 0x4
xor ecx ecx
cmp edi esi
je r-xdata
push 0x2e
mov ebx eax
pop esi
lea eax [ edi + 0x4 ]
push ebx
push eax
call sub_41f472
pop ecx
pop ecx
test eax eax
je r-xdata
lea esi [ edi + 0x4 ]
push 0x2e
pop ebx
pop ebp
mov esi edi
mov [ esp + 0x1014 ] esi
cmp [ edi ] cx
jne r-xdata
cmp bx si
jne r-xdata
lea edi [ ebp + 0x2 ]
jmp r-xdata
add eax 0x2
push ebx
push eax
call sub_41f472
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi esi
cmp [ esi ] cx
je r-xdata
mov esi [ esp + 0x1014 ]
push 0x5c
pop ebx
add ebp 0x2
movzx ebx [ ebp ]
test bx bx
jne r-xdata
lea edi [ eax + 0x2 ]
movzx eax bx
push eax
call sub_40aed4
test al al
je r-xdata
sub_40a9f6
push ebp
mov ebp esp
mov eax 0x1000
call sub_41c240
call sub_40a2fa
cmp eax 0x600
jb r-xdata
mov esp ebp
pop ebp
retn 0x8
push 0x800
lea eax [ ebp - 0x1000 ]
push eax
push 0xffffffff
push [ ebp + 0x8 ]
push 0x20
call [ FoldStringW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0xc ]
xor eax eax
mov [ ebp - 0x2 ] ax
lea eax [ ebp - 0x1000 ]
push eax
push [ ebp + 0x8 ]
call sub_40e847
sub_40aa6b
push edi
mov edi [ esp + 0x10 ]
test edi edi
je r-xdata
pop edi
retn 0xc
push esi
mov esi [ esp + 0xc ]
dec edi
push esi
call sub_40b1d0
sub eax esi
sar eax 0x1
cmp edi eax
jb r-xdata
push edi
push esi
mov esi [ esp + 0x18 ]
push esi
call sub_422b91
add esp 0xc
xor eax eax
mov [ esi + edi * 2 ] ax
pop esi
push esi
call sub_40b1d0
mov edi eax
sub edi esi
sar edi 0x1
sub_40aaae
push ebx
mov ebx [ esp + 0xc ]
xor eax eax
push edi
mov edi [ esp + 0xc ]
push edi
mov [ ebx ] ax
call sub_40adcd
test al al
je r-xdata
push esi
push 0x5c
pop esi
cmp [ edi ] si
jne r-xdata
movzx eax [ edi ]
push eax
push r--data
push [ esp + 0x1c ]
push ebx
call sub_403ce2
add esp 0x10
jmp r-xdata
pop esi
cmp [ edi + 0x2 ] si
jne r-xdata
pop edi
pop ebx
retn 0xc
lea eax [ edi + 0x4 ]
push esi
push eax
call sub_41f472
pop ecx
pop ecx
test eax eax
je r-xdata
add eax 0x2
push esi
push eax
call sub_41f472
pop ecx
pop ecx
test eax eax
je r-xdata
push edi
call sub_4216b5
pop ecx
sub eax edi
sar eax 0x1
inc eax
jmp r-xdata
cmp eax [ esp + 0x18 ]
sbb esi esi
and esi eax
push esi
push edi
push ebx
call sub_422b91
add esp 0xc
xor eax eax
mov [ ebx + esi * 2 ] ax
sub_40ab3b
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
push ebx
call sub_4216b5
dec eax
pop ecx
lea edi [ ebx + eax * 2 ]
jmp r-xdata
movzx eax [ edi ]
push eax
call sub_40e721
test al al
je r-xdata
cmp edi ebx
jbe r-xdata
movzx eax [ edi ]
mov esi edi
jmp r-xdata
sub edi 0x2
push eax
call sub_40e721
test al al
jne r-xdata
cmp esi ebx
jbe r-xdata
cmp esi ebx
jbe r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn 0x4
sub esi 0x2
movzx eax [ esi ]
push ebp
push 0x2e
pop ebp
pop ebp
push eax
call sub_40e721
test al al
jne r-xdata
push ebx
call sub_40b1d0
push ebp
push eax
call sub_41f472
pop ecx
pop ecx
test eax eax
je r-xdata
sub esi 0x2
cmp esi ebx
ja r-xdata
cmp eax esi
jae r-xdata
movzx eax [ esi ]
cmp ax bp
je r-xdata
jmp r-xdata
mov edi esi
sub_40abc3
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x14 ]
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
mov esi [ ebp + 0x10 ]
je r-xdata
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov [ esi ] ax
push edi
push esi
push [ ebp + 0x8 ]
call sub_40fc9f
jmp r-xdata
mov esi [ ebp + 0x10 ]
cmp esi eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
xor eax eax
mov [ esi + edi * 2 - 0x2 ] ax
test edi edi
je r-xdata
push edi
push eax
push esi
call sub_422b91
add esp 0xc
jmp r-xdata
sub_40ac19
push ebp
mov ebp esp
mov eax 0x1000
call sub_41c240
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x0
jne r-xdata
push esi
push edi
call sub_40adcd
push edi
call sub_4216b5
pop ecx
push edi
mov esi eax
call sub_40adf9
test al al
je r-xdata
xor al al
jmp r-xdata
push ebx
lea eax [ ebp - 0x1000 ]
mov ebx 0x7ff
push eax
push ebx
call [ GetCurrentDirectoryW@IAT ]
test eax eax
je r-xdata
push edi
call sub_40adcd
test al al
je r-xdata
pop edi
mov esp ebp
pop ebp
retn 0xc
xor al al
cmp eax ebx
ja r-xdata
push 0x5c
pop eax
cmp [ edi ] ax
jne r-xdata
lea eax [ esi + 0x4 ]
cmp [ ebp + 0x10 ] eax
jbe r-xdata
movzx eax [ edi ]
push eax
call sub_40aed4
test al al
je r-xdata
xor al al
jmp r-xdata
add edi 0x2
cmp [ edi ] ax
jne r-xdata
mov esi [ ebp + 0xc ]
push 0x4
push r--data
push esi
call sub_422b91
lea eax [ esi + 0x8 ]
push edi
push eax
call sub_421693
add esp 0x14
jmp r-xdata
push 0x800
lea eax [ ebp - 0x1000 ]
push eax
call sub_40a7a3
lea eax [ ebp - 0x1000 ]
push eax
call sub_4216b5
add eax 0x4
add eax esi
pop ecx
cmp [ ebp + 0x10 ] eax
jbe r-xdata
lea eax [ esi + 0x6 ]
cmp [ ebp + 0x10 ] eax
jbe r-xdata
pop esi
lea eax [ esi + 0x6 ]
cmp [ ebp + 0x10 ] eax
jbe r-xdata
mov al 0x1
jmp r-xdata
mov esi [ ebp + 0xc ]
push 0x4
push r--data
push esi
call sub_422b91
lea eax [ ebp - 0x1000 ]
push eax
lea eax [ esi + 0x8 ]
push eax
call sub_421693
add esp 0x14
cmp [ edi ] 0x2e
jne r-xdata
mov esi [ ebp + 0xc ]
push 0x4
push r--data
push esi
call sub_422b91
push 0x2
lea eax [ ebp - 0x1000 ]
push eax
lea eax [ esi + 0x8 ]
push eax
call sub_422b91
lea eax [ esi + 0xc ]
push edi
push eax
call sub_421693
add esp 0x20
jmp r-xdata
mov esi [ ebp + 0xc ]
push 0x4
push r--data
push esi
call sub_422b91
lea eax [ esi + 0x8 ]
push r--data
push eax
call sub_421693
lea eax [ esi + 0xe ]
push edi
push eax
call sub_421693
add esp 0x1c
push [ ebp + 0x10 ]
push edi
push esi
call sub_40e81b
movzx eax [ edi + 0x2 ]
push eax
call sub_40aed4
test al al
je r-xdata
mov al 0x1
jmp r-xdata
pop ebx
add edi 0x4
sub_40adcd
push esi
mov esi [ esp + 0x8 ]
movzx eax [ esi ]
push eax
call sub_40e74b
movzx eax ax
add eax 0xffffffbf
cmp ax 0x19
ja r-xdata
xor eax eax
cmp [ esi + 0x2 ] 0x3a
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop esi
retn 0x4
sub_40adf9
push esi
mov esi [ esp + 0x8 ]
push 0x5c
pop eax
cmp [ esi ] ax
jne r-xdata
push esi
call sub_40adcd
test al al
je r-xdata
cmp [ esi + 0x2 ] ax
je r-xdata
xor eax eax
movzx eax [ esi + 0x4 ]
push eax
call sub_40aed4
test al al
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop esi
retn 0x4
sub_40ae2f
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_40adf9
test al al
jne r-xdata
xor eax eax
inc eax
movzx eax [ esi ]
push eax
call sub_40aed4
test al al
jne r-xdata
xor eax eax
jmp r-xdata
pop esi
retn 0x4
sub_40ae56
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
cmp [ esi ] bx
je r-xdata
movzx eax [ esi ]
push ebp
push edi
mov edi esi
test ax ax
je r-xdata
cmp [ esi + 0x2 ] bx
je r-xdata
mov al bl
push 0x20
pop ebp
lea eax [ esi + 0x4 ]
push 0x3a
push eax
call sub_41f472
pop ecx
pop ecx
test eax eax
je r-xdata
xor al al
jmp r-xdata
je r-xdata
xor al al
jmp r-xdata
pop edi
pop ebp
movzx eax [ edi + 0x2 ]
push eax
call sub_40aed4
test al al
jne r-xdata
cmp ax 0x2e
jne r-xdata
pop esi
pop ebx
retn 0x4
add edi 0x2
movzx eax [ edi ]
test ax ax
jne r-xdata
cmp ax bp
jb r-xdata
push r--data
push esi
call sub_422bd4
pop ecx
pop ecx
test eax eax
jne r-xdata
xor ebx ebx
inc ebx
sub_40aeec
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push r--data
push [ esp + 0x8 ]
call sub_422bd4
neg eax
pop ecx
sbb eax eax
pop ecx
neg eax
xor eax eax
jmp r-xdata
retn 0x4
sub_40af10
push ebp
mov ebp esp
mov eax 0x1000
call sub_41c240
push esi
mov esi 0x800
lea eax [ ebp - 0x1000 ]
push esi
push [ ebp + 0x8 ]
push eax
call sub_40e847
push esi
lea eax [ ebp - 0x1000 ]
push eax
call sub_40a7a3
push esi
push [ ebp + 0xc ]
lea eax [ ebp - 0x1000 ]
push eax
call sub_40e81b
push [ ebp + 0x14 ]
lea eax [ ebp - 0x1000 ]
push eax
push [ ebp + 0x10 ]
call sub_40e847
pop esi
mov esp ebp
pop ebp
retn 0x10
sub_40af69
push ebx
push ebp
mov ebp [ esp + 0xc ]
xor eax eax
push esi
push edi
mov esi eax
mov ebx ebp
lea edi [ esi - 0x1 ]
jmp r-xdata
cmp [ esp + 0x14 ] 0x0
jne r-xdata
test edi edi
jg r-xdata
mov eax [ esp + 0x14 ]
mov [ ebp + esi * 2 ] ax
xor eax eax
cmp [ ebx ] ax
je r-xdata
movzx eax [ ebp + edi * 2 ]
cmp eax 0x20
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
add ebx 0x2
inc esi
jmp r-xdata
movzx eax [ ebp + edi * 2 - 0x2 ]
push eax
call sub_40aed4
test al al
jne r-xdata
cmp eax 0x2e
jne r-xdata
movzx eax [ ebx ]
mov [ esp + 0x14 ] eax
movzx eax ax
push eax
call sub_40aed4
test al al
jne r-xdata
dec esi
dec edi
sub_40afd9
push ebp
push esi
mov esi [ esp + 0xc ]
xor ebp ebp
cmp [ esi ] bp
je r-xdata
pop esi
pop ebp
retn 0x8
push ebx
mov bl [ esp + 0x14 ]
push edi
mov edi ebp
movzx eax [ esi ]
push eax
push ecx
call sub_41f472
pop ecx
pop ecx
test eax eax
jne r-xdata
mov ecx r--data
push 0x5f
pop ecx
mov [ esi ] cx
jmp r-xdata
test bl bl
je r-xdata
mov eax edi
and eax 0xfffffffe
cmp eax 0x2
jle r-xdata
push 0x5f
pop ecx
cmp [ esi ] 0x20
jae r-xdata
add esi 0x2
add edi 0x2
cmp [ esi ] bp
jne r-xdata
cmp [ esi ] 0x3a
jne r-xdata
mov ecx r--data
test bl bl
jne r-xdata
pop edi
pop ebx
mov [ esi ] cx
sub_40b046
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
push edi
call sub_40aa4a
mov esi eax
test esi esi
jne r-xdata
lea ebx [ esi + 0x2 ]
cmp [ ebx ] 0x0
jne r-xdata
push [ esp + 0x18 ]
push r--data
push edi
call sub_40e81b
push edi
call sub_40aa4a
mov esi eax
jmp r-xdata
push r--data
push ebx
call sub_4100df
test eax eax
je r-xdata
push edi
call sub_4216b5
pop ecx
mov ecx [ esp + 0x18 ]
add ecx 0xfffffffd
cmp eax ecx
jb r-xdata
cmp [ esp + 0x1c ] 0x0
jne r-xdata
push r--data
push ebx
call sub_421693
pop ecx
pop ecx
push r--data
push ebx
call sub_4100df
test eax eax
jne r-xdata
lea edi [ esi + 0x4 ]
movzx eax [ edi ]
push eax
call sub_40e721
test al al
je r-xdata
push edi
call sub_40ab3b
mov esi eax
push 0x3a
pop ebx
inc [ esi ]
cmp [ esi ] bx
jne r-xdata
push r--data
push edi
call sub_421693
pop ecx
pop ecx
add esi 0x6
movzx eax [ esi ]
push eax
call sub_40e721
test al al
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
push 0x30
pop ebp
inc [ esi ]
push 0x3a
pop ebx
cmp [ esi ] bx
jne r-xdata
push edi
call sub_4216b5
pop ecx
lea ecx [ edi + eax * 2 ]
jmp r-xdata
movzx eax [ esi ]
push eax
call sub_40e721
test al al
je r-xdata
push 0x30
pop ebp
cmp ecx esi
jne r-xdata
inc [ esi ]
cmp [ esi ] bx
je r-xdata
push 0x41
pop eax
mov [ esi ] ax
jmp r-xdata
mov [ esi ] bp
add esi 0xfffffffe
inc [ esi ]
cmp [ esi ] bx
je r-xdata
mov ax [ ecx ]
mov [ ecx + 0x2 ] ax
sub ecx 0x2
push 0x31
pop eax
mov [ esi + 0x2 ] ax
jmp r-xdata
mov [ esi ] bp
sub esi 0x2
cmp esi edi
jb r-xdata
jmp r-xdata
cmp [ esi - 0x2 ] 0x2e
je r-xdata
jmp r-xdata
sub_40b17f
push esi
push edi
push 0x3b
push [ esp + 0x10 ]
xor edi edi
call sub_41f64b
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
retn 0x8
lea eax [ esi + 0x2 ]
push eax
call j_sub_410052
cmp [ esp + 0x10 ] 0x0
mov edi eax
je r-xdata
xor eax eax
mov [ esi ] ax
sub_40b1d0
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_4216b5
pop ecx
mov edi eax
jmp r-xdata
sub edi 0x1
jns r-xdata
movzx eax [ esi + edi * 2 ]
push eax
call sub_40aed4
test al al
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
lea eax [ esi + 0x2 ]
lea eax [ eax + edi * 2 ]
jmp r-xdata
mov eax esi
cmp [ esi + 0x2 ] 0x3a
jne r-xdata
pop edi
pop esi
retn 0x4
add esi 0x4
sub_40b213
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_40b1d0
lea ecx [ esi + 0x4 ]
cmp eax ecx
jb r-xdata
xor ecx ecx
mov [ eax ] cx
pop esi
retn 0x4
cmp [ esi + 0x2 ] 0x3a
jne r-xdata
sub eax 0x2
lea ecx [ esi + 0x8 ]
cmp eax ecx
jb r-xdata
sub_40b264
push ebx
mov ebx [ esp + 0x10 ]
xor ecx ecx
push edi
mov edi [ esp + 0x10 ]
sub ebx 0x1
je r-xdata
mov [ ecx + edi ] 0x0
pop edi
pop ebx
retn 0xc
mov eax [ esp + 0xc ]
push esi
mov esi edi
sub esi eax
pop esi
cmp dl 0x2f
jne r-xdata
inc ecx
mov [ esi + eax ] dl
inc eax
cmp ecx ebx
jb r-xdata
add dl 0x2d
mov dl [ eax ]
test dl dl
je r-xdata
sub_40b29f
push ebx
mov ebx [ esp + 0x10 ]
xor ecx ecx
push edi
mov edi [ esp + 0x10 ]
sub ebx 0x1
je r-xdata
xor eax eax
mov [ edi + ecx * 2 ] ax
pop edi
pop ebx
retn 0xc
mov eax [ esp + 0xc ]
push esi
mov esi edi
sub esi eax
pop esi
cmp edx 0x2f
jne r-xdata
mov [ esi + eax ] dx
inc ecx
add eax 0x2
cmp ecx ebx
jb r-xdata
push 0x5c
pop edx
movzx edx [ eax ]
test dx dx
je r-xdata
sub_40b30d
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
add [ esi + 0x4 ] eax
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jbe r-xdata
pop esi
retn 0x4
mov eax [ esi + 0xc ]
push ebx
push ebp
mov ebp rw-data
push edi
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
mov edi [ esi + 0x4 ]
shr eax 0x2
add eax 0x20
add eax [ esi + 0x8 ]
cmp edi eax
ja r-xdata
cmp ecx eax
jbe r-xdata
imul eax edi 0x28
push eax
push [ esi ]
call sub_4216d5
mov ebx eax
pop ecx
pop ecx
test ebx ebx
jne r-xdata
mov edi eax
push eax
push r--data
push ebp
call sub_4069e4
add esp 0xc
mov ecx ebp
call sub_406a1c
mov [ esi + 0x8 ] edi
pop edi
pop ebp
mov [ esi ] ebx
pop ebx
mov ecx ebp
call sub_406a1c
sub_40b383
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi ecx
push 0x1c
lea eax [ esi + 0x38 ]
push eax
lea eax [ edi + 0x14 ]
push eax
call sub_41ee90
mov ebx [ esi + 0x1c ]
mov ebp 0x2000
add esp 0xc
cmp ebx ebp
jb r-xdata
test ebx ebx
je r-xdata
mov ebx ebp
mov eax [ esi + 0x2c ]
sub ebp ebx
cmp eax ebp
jb r-xdata
mov eax [ edi + 0x10 ]
push ebx
push [ esi + 0x18 ]
add eax 0x3c000
push eax
call sub_41ee90
add esp 0xc
test eax eax
je r-xdata
mov eax ebp
mov ebp 0x40000
mov [ edi + 0x30 ] ebp
and [ edi + 0x34 ] 0x0
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
push eax
mov eax [ edi + 0x10 ]
push [ esi + 0x28 ]
add eax 0x3c000
add eax ebx
push eax
call sub_41ee90
add esp 0xc
cmp [ esi + 0x14 ] 0x0
jle r-xdata
mov ebx [ esi ]
mov ebx [ edi + 0x10 ]
mov eax 0x3ffff
mov ecx [ ebx + 0x3c020 ]
mov edx [ ebx + 0x3c01c ]
and ecx eax
and edx eax
lea eax [ edx + ecx ]
cmp eax ebp
jb r-xdata
push [ esi + 0x14 ]
mov ecx edi
push ebx
call sub_40b490
test al al
jne r-xdata
lea eax [ ebx + ecx ]
mov [ esi + 0x58 ] edx
lea ebx [ esi + 0x18 ]
mov [ esi + 0x54 ] eax
mov ecx ebx
call sub_405bd9
mov eax [ edi + 0x10 ]
mov esi [ eax + 0x3c030 ]
mov eax 0x1fc0
cmp esi eax
jb r-xdata
xor edx edx
xor ecx ecx
mov [ ebx ] 0x16
test esi esi
je r-xdata
mov esi eax
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
add esi 0x40
mov ecx ebx
push esi
call sub_40183e
mov eax [ edi + 0x10 ]
push esi
add eax 0x3c000
push eax
push [ ebx ]
call sub_41ee90
add esp 0xc
sub_40b490
mov edx [ esp + 0x4 ]
push ebx
push esi
push edi
mov edi ecx
mov esi 0x17d7840
mov ebx [ edi + 0x30 ]
cmp ebx 0x40000
jae r-xdata
cmp [ edx ] 0x28
je r-xdata
mov al 0x1
mov eax [ edi + 0x10 ]
mov ecx ebx
and ecx 0x3ffff
mov eax [ ecx + eax ]
cmp eax [ esp + 0x14 ]
jae r-xdata
push [ edx + 0xc ]
mov ecx edi
call sub_40b4f7
add edx 0x28
dec esi
jmp r-xdata
dec esi
test esi esi
jle r-xdata
cmp [ edx ] 0x16
je r-xdata
xor al al
jmp r-xdata
imul edx eax 0x28
lea eax [ ebx + 0x4 ]
mov [ edi + 0x30 ] eax
add edx [ esp + 0x10 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x8
sub_40b4f7
mov eax [ esp + 0x4 ]
sub esp 0x48
push esi
mov esi ecx
test eax eax
jle r-xdata
pop esi
add esp 0x48
retn 0x4
push ebx
push ebp
push edi
cmp eax 0x2
jle r-xdata
mov edx [ esi + 0x24 ]
mov ecx [ esi + 0x10 ]
mov esi [ esi + 0x2c ]
cmp edx 0x3c000
jae r-xdata
push 0x3
pop ecx
cmp eax ecx
je r-xdata
pop edi
pop ebp
pop ebx
cmp edx 0x4
jl r-xdata
mov eax [ esi + 0x24 ]
mov ebx [ esi + 0x10 ]
cmp eax 0x3c000
jae r-xdata
cmp eax 0x4
je r-xdata
cmp eax 0x2
lea ebp [ edx - 0x4 ]
sete bl
xor edi edi
add bl 0xe8
test ebp ebp
jle r-xdata
cmp eax 0x15
jl r-xdata
mov edx [ esi + 0x14 ]
mov eax [ esi + 0x24 ]
sub edx ecx
mov ecx [ esi + 0x10 ]
mov edi [ esi + 0x18 ]
mov [ esp + 0x28 ] eax
mov [ esp + 0x18 ] edx
mov [ esp + 0x1c ] edi
lea ebp [ ecx + eax ]
mov [ esp + 0x5c ] ecx
mov [ ecx + 0x3c020 ] eax
cmp eax 0x1e000
jae r-xdata
cmp eax 0x5
je r-xdata
mov al [ ecx ]
inc ecx
inc edi
inc esi
cmp al 0xe8
je r-xdata
mov edx [ esi + 0x2c ]
lea edi [ eax - 0x15 ]
shr edx 0x4
mov [ esp + 0x28 ] edx
test edi edi
jle r-xdata
test edx edx
js r-xdata
mov edi [ esi + 0x24 ]
mov ecx [ esi + 0x10 ]
mov eax [ esi + 0x14 ]
mov [ esp + 0x38 ] edi
mov [ esp + 0x30 ] eax
mov [ esp + 0x2c ] ecx
lea edx [ ecx + edi ]
mov [ esp + 0x34 ] edx
mov [ ecx + 0x3c020 ] edi
cmp edi 0x1e000
jae r-xdata
cmp eax 0x6
jne r-xdata
mov edx [ ecx ]
test edx edx
jns r-xdata
cmp al bl
jne r-xdata
dec edi
shr edi 0x4
inc edi
mov [ esp + 0x2c ] edi
test edi edi
js r-xdata
and [ esp + 0x28 ] 0x0
test eax eax
jle r-xdata
mov edi [ esi + 0x24 ]
xor ebp ebp
mov ebx [ esi + 0x14 ]
mov [ esp + 0x30 ] edi
lea eax [ edi + edi ]
mov [ esp + 0x28 ] eax
mov eax [ esi + 0x10 ]
mov [ eax + 0x3c020 ] edi
cmp edi 0x1e000
jae r-xdata
cmp edx 0x1000000
jge r-xdata
lea eax [ esi + edx ]
test eax eax
js r-xdata
cmp edi ebp
jl r-xdata
add ebx 0x10
inc edx
sub edi 0x1
mov [ esp + 0x28 ] edx
mov [ esp + 0x2c ] edi
jne r-xdata
mov al [ eax + rw-data ]
test al al
je r-xdata
mov edi [ esp + 0x28 ]
mov eax edx
xor ecx ecx
neg eax
push 0x3
mov [ esp + 0x28 ] ecx
mov [ esp + 0x24 ] eax
pop edx
and [ esp + 0x1c ] 0x0
lea eax [ esp + 0x3c ]
and [ esp + 0x18 ] 0x0
xor esi esi
and [ esp + 0x14 ] 0x0
xor ebx ebx
and [ esp + 0x10 ] 0x0
xor ebp ebp
push 0x1c
push esi
push eax
mov [ esp + 0x68 ] esi
call sub_41d1e0
mov eax [ esp + 0x34 ]
add esp 0xc
and [ esp + 0x24 ] ebx
mov [ esp + 0x20 ] eax
cmp eax edi
jge r-xdata
xor edx edx
mov [ esp + 0x24 ] edx
test ebx ebx
jle r-xdata
add ecx 0x4
add edi 0x4
add esi 0x4
sub edx esi
mov [ ecx ] edx
lea eax [ edx + 0x1000000 ]
mov [ ecx ] eax
jmp r-xdata
movzx eax [ ebx ]
and eax 0x1f
sub eax 0x10
js r-xdata
jmp r-xdata
mov edi [ esp + 0x28 ]
xor ecx ecx
movzx edx al
push 0x12
mov [ esp + 0x60 ] ecx
mov [ esp + 0x34 ] edx
pop ebp
inc ecx
inc eax
mov [ esp + 0x24 ] ecx
mov [ esp + 0x20 ] eax
cmp ecx edx
jl r-xdata
mov [ esp + 0x10 ] eax
xor edx edx
add eax ebp
mov esi [ esp + 0x10 ]
mov [ esp + 0x38 ] eax
mov eax edi
sub eax ecx
mov edi [ esp + 0x38 ]
dec eax
push 0x3
pop ecx
div ecx
mov edx [ esp + 0x18 ]
inc eax
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x14 ]
inc eax
mov [ esp + 0x28 ] eax
cmp eax [ esp + 0x30 ]
jl r-xdata
mov ecx [ esp + 0x18 ]
mov eax ecx
sub eax [ esp + 0x14 ]
mov edi [ esp + 0x10 ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x2c ]
mov [ esp + 0x14 ] ecx
mov ecx edi
imul ecx esi
mov esi [ esp + 0x34 ]
movzx edx [ eax ]
inc eax
mov [ esp + 0x2c ] eax
mov eax ebp
imul eax [ esp + 0x10 ]
add ecx eax
mov eax ebx
imul eax [ esp + 0x18 ]
add ecx eax
mov eax [ esp + 0x1c ]
lea eax [ ecx + eax * 8 ]
shr eax 0x3
movzx ecx al
mov eax [ esp + 0x20 ]
sub ecx edx
mov [ eax + esi ] cl
mov al cl
sub al [ esp + 0x1c ]
movsx esi dl
movsx eax al
shl esi 0x3
push esi
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] ecx
call sub_422c4a
add [ esp + 0x40 ] eax
mov eax esi
sub eax [ esp + 0x18 ]
push eax
call sub_422c4a
add [ esp + 0x48 ] eax
mov eax [ esp + 0x1c ]
add eax esi
push eax
call sub_422c4a
add [ esp + 0x50 ] eax
mov eax esi
sub eax [ esp + 0x1c ]
push eax
call sub_422c4a
add [ esp + 0x58 ] eax
mov eax [ esp + 0x20 ]
add eax esi
push eax
call sub_422c4a
add [ esp + 0x60 ] eax
mov eax esi
sub eax edi
push eax
call sub_422c4a
add [ esp + 0x68 ] eax
lea eax [ esi + edi ]
push eax
call sub_422c4a
add [ esp + 0x70 ] eax
add esp 0x1c
test [ esp + 0x24 ] 0x1f
jne r-xdata
lea eax [ edi + edi ]
inc ecx
add ebp 0x29
mov [ esp + 0x5c ] ecx
cmp ebp 0x64
jle r-xdata
push 0x4
lea eax [ ebp + 0x18 ]
mov ecx esi
push eax
push ebx
call sub_40ba6f
cmp eax 0x5
jne r-xdata
xor ebx ebx
cmp ecx edi
jge r-xdata
lea ecx [ edi - 0x2 ]
mov edi [ esp + 0x1c ]
jmp r-xdata
sub bl [ eax ]
add esi 0x3
movzx ebx bl
inc eax
mov [ edi + edx ] bl
add edi 0x3
sub ecx 0x1
mov [ esp + 0x5c ] eax
mov [ esp + 0x10 ] esi
mov [ esp + 0x14 ] ecx
jne r-xdata
movzx eax [ edi ]
movzx ecx [ edi - 0x3 ]
mov esi eax
sub esi ecx
mov [ esp + 0x30 ] eax
add esi ebx
mov [ esp + 0x2c ] ecx
mov eax esi
sub eax ebx
push eax
call sub_422c4a
mov ecx esi
mov [ esp + 0x3c ] eax
sub ecx [ esp + 0x34 ]
push ecx
call sub_422c4a
sub esi [ esp + 0x34 ]
push esi
mov [ esp + 0x40 ] eax
call sub_422c4a
mov ecx [ esp + 0x44 ]
add esp 0xc
mov edx [ esp + 0x34 ]
cmp ecx edx
jg r-xdata
jmp r-xdata
mov esi [ esp + 0x5c ]
mov edx [ esp + 0x3c ]
xor eax eax
and [ esp + 0x3c ] eax
xor ecx ecx
inc ecx
inc edx
mov [ esp + 0x24 ] edx
cmp edx ebx
jl r-xdata
mov dl [ esp + 0x5c ]
mov edi [ esp + 0x28 ]
xor eax eax
inc eax
shl eax cl
test edx eax
je r-xdata
mov edi [ esp + 0x2c ]
mov edx [ esp + 0x28 ]
mov edx [ esp + 0x30 ]
mov ecx [ esp + 0x5c ]
push 0x14
push ebp
push 0x14
push ebp
push ebx
mov ecx esi
call sub_40ba6f
sub eax edi
mov ecx esi
and eax 0xfffff
push eax
push ebx
call sub_40bac2
cmp edi ecx
jl r-xdata
cmp esi 0x3
jl r-xdata
mov edi [ esp + 0x28 ]
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x24 ]
push 0x3
pop edx
mov ecx [ esp + 0x14 ]
cmp edx eax
mov esi [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x5c ]
mov ebx [ esp + 0x30 ]
jle r-xdata
cmp ecx eax
jg r-xdata
mov eax [ esp + 0x28 ]
and [ esp + ecx * 4 + 0x3c ] 0x0
inc ecx
cmp ecx 0x7
jb r-xdata
mov edx [ esp + ecx * 4 + 0x3c ]
mov eax ecx
lea ecx [ edx + edi ]
mov [ esp + 0x5c ] 0x0
cmp ecx eax
jge r-xdata
jmp r-xdata
mov eax [ esi + 0x10 ]
sub dl [ eax + ebp ]
inc ebp
mov [ eax + ecx ] dl
add ecx ebx
cmp ecx edi
jl r-xdata
mov edx [ esp + 0x24 ]
mov edi [ esp + 0x30 ]
mov eax [ esp + 0x28 ]
mov al [ edi + ebp + 0x1 ]
add [ edi + ebp ] al
add [ edi + ebp + 0x2 ] al
add edi edx
jmp r-xdata
mov ebx [ esp + 0x2c ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x14 ]
mov esi [ esp + 0x10 ]
jmp r-xdata
cmp [ esp + ecx * 4 + 0x3c ] edx
jae r-xdata
mov esi [ esp + 0x5c ]
sub eax 0x1
je r-xdata
cmp ebx 0xfffffff0
jl r-xdata
sub eax 0x1
je r-xdata
mov eax [ esp + 0x20 ]
add eax [ esp + 0x30 ]
inc [ esp + 0x24 ]
mov edi [ esp + 0x38 ]
mov [ esp + 0x20 ] eax
cmp eax edi
jl r-xdata
dec ebx
jmp r-xdata
cmp ebx 0x10
jge r-xdata
sub eax 0x1
je r-xdata
inc ebx
jmp r-xdata
cmp ebp 0xfffffff0
jl r-xdata
sub eax 0x1
je r-xdata
dec ebp
jmp r-xdata
cmp ebp 0x10
jge r-xdata
sub eax 0x1
je r-xdata
inc ebp
jmp r-xdata
cmp esi 0xfffffff0
jl r-xdata
sub eax 0x1
jne r-xdata
dec esi
jmp r-xdata
cmp esi 0x10
jge r-xdata
mov [ esp + 0x5c ] esi
jmp r-xdata
inc esi
sub_40ba6f
push ebx
mov ebx [ esp + 0xc ]
mov eax ebx
cdq
and ebx 0x7
and edx 0x7
add eax edx
mov edx [ esp + 0x8 ]
sar eax 0x3
push esi
push edi
push 0x20
movzx edi [ eax + edx + 0x3 ]
movzx esi [ eax + edx ]
movzx ecx [ eax + edx + 0x1 ]
movzx eax [ eax + edx + 0x2 ]
or edx 0xffffffff
shl ecx 0x8
shl edi 0x8
or esi ecx
or eax edi
mov ecx ebx
shl eax 0x10
or eax esi
shr eax cl
pop ecx
sub ecx [ esp + 0x18 ]
pop edi
shr edx cl
pop esi
and eax edx
pop ebx
retn 0xc
sub_40bac2
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
or ebx 0xffffffff
mov eax esi
and esi 0x7
push 0x20
cdq
and edx 0x7
pop ecx
sub ecx [ ebp + 0x14 ]
add edx eax
shr ebx cl
mov ecx esi
shl [ ebp + 0xc ] cl
mov esi [ ebp + 0x8 ]
shl ebx cl
xor ecx ecx
sar edx 0x3
not ebx
add esi edx
mov edx [ ebp + 0xc ]
mov al [ esi + ecx ]
and al bl
shr ebx 0x8
or al dl
or ebx 0xff000000
shr edx 0x8
mov [ esi + ecx ] al
inc ecx
cmp ecx 0x4
jb r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
sub_40bb31
push esi
mov esi [ esp + 0xc ]
push esi
push [ esp + 0xc ]
push 0xffffffff
call sub_405c44
xor edx edx
not eax
mov ecx edx
add ecx 0xc
inc edx
cmp ecx 0x48
jb r-xdata
cmp [ ecx + rw-data ] esi
je r-xdata
cmp [ ecx + rw-data ] eax
jne r-xdata
xor eax eax
imul eax edx 0xc
mov eax [ eax + rw-data ]
jmp r-xdata
pop esi
retn 0x8
sub_40bb72
push ebx
push ebp
mov ebx ecx
mov eax 0x8000
push esi
push edi
mov edi [ esp + 0x18 ]
and [ ebx + 0x4 ] 0x0
and [ ebx ] 0x0
cmp edi eax
jae r-xdata
mov ebp [ esp + 0x14 ]
push eax
push ebp
push [ ebx + 0xc ]
call sub_41ee90
xor eax eax
xor cl cl
inc eax
mov [ esp + 0x24 ] cl
add esp 0xc
cmp edi eax
jbe r-xdata
mov eax edi
push 0x8
mov ecx ebx
call sub_409e83
mov esi [ esp + 0x1c ]
mov al [ esp + 0x18 ]
and [ esi + 0x14 ] 0x0
cmp al [ ebp ]
jne r-xdata
xor cl [ eax + ebp ]
inc eax
cmp eax edi
jb r-xdata
push 0x1
mov ecx esi
call sub_40b30d
mov ecx [ esi + 0x14 ]
xor ebx ebx
push 0x3
mov edi ebx
lea eax [ ecx + 0x1 ]
imul ecx ecx 0x28
mov [ esi + 0x14 ] eax
add ecx [ esi ]
lea eax [ ecx + 0xc ]
mov [ ecx ] 0x16
mov [ ecx + 0x14 ] eax
lea eax [ ecx + 0x1c ]
mov [ ecx + 0x24 ] eax
pop eax
mov [ ecx + 0x18 ] eax
mov [ ecx + 0x8 ] eax
cmp [ esi + 0x14 ] ebx
jle r-xdata
push edi
push ebp
mov ecx ebx
call sub_40bb31
mov edi eax
test edi edi
je r-xdata
mov [ esp + 0x18 ] cl
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
mov edx ebx
push 0x1
mov ecx esi
call sub_40b30d
mov edx [ esi + 0x14 ]
push 0x3
lea ecx [ edx + 0x1 ]
mov [ esi + 0x14 ] ecx
imul ecx edx 0x28
add ecx [ esi ]
lea eax [ ecx + 0xc ]
mov [ ecx ] 0x28
mov [ eax ] edi
mov [ ecx + 0x14 ] eax
lea eax [ ecx + 0x1c ]
mov [ ecx + 0x24 ] eax
pop eax
mov [ ecx + 0x18 ] eax
mov [ ecx + 0x8 ] eax
jmp r-xdata
cmp [ ecx + 0x24 ] ebx
jne r-xdata
lea eax [ ecx + 0xc ]
mov [ ecx + 0x14 ] eax
inc edi
add edx 0x28
cmp edi [ esi + 0x14 ]
jl r-xdata
lea eax [ ecx + 0x1c ]
mov [ ecx + 0x24 ] eax
mov ecx [ esi ]
add ecx edx
cmp [ ecx + 0x14 ] ebx
jne r-xdata
sub_40bc7e
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov ecx edi
call j_sub_409e9f
mov ebx eax
mov ecx edi
and eax 0xc000
je r-xdata
push 0x6
call sub_409e83
shr ebx 0xa
and ebx 0xf
cmp eax 0x4000
je r-xdata
test ebx 0x3c00
jne r-xdata
push 0x2
cmp eax 0x8000
je r-xdata
shr ebx 0x6
movzx ebx bl
push 0xa
shr ebx 0x2
or ebx 0xffffff00
push 0xe
jmp r-xdata
call sub_409e83
mov ecx edi
call j_sub_409e9f
mov esi eax
call sub_409e83
mov ecx edi
call j_sub_409e9f
mov esi eax
mov ecx edi
push 0x10
shl esi 0x10
call sub_409e83
mov ecx edi
call j_sub_409e9f
or esi eax
jmp r-xdata
mov eax ebx
call sub_409e83
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
push 0x10
mov ecx edi
call sub_409e83
mov eax esi
jmp r-xdata
sub_40bd2d
push esi
mov esi [ esp + 0x8 ]
mov edx 0x40000
cmp esi edx
jae r-xdata
pop esi
retn 0xc
mov ecx [ ecx + 0x10 ]
add ecx esi
cmp [ esp + 0xc ] ecx
je r-xdata
mov eax [ esp + 0x10 ]
sub edx esi
cmp eax edx
jb r-xdata
push eax
push [ esp + 0x10 ]
push ecx
call sub_41f6f0
add esp 0xc
mov eax edx
sub_40bd64
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ ecx ] edx
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] edx
mov [ ecx + 0x10 ] eax
mov eax ecx
mov [ ebp - 0x4 ] ecx
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x18 ] edx
mov [ ecx + 0x14 ] edx
mov [ ecx + 0x1c ] edx
mov esp ebp
pop ebp
retn 0x4
sub_40bda7
push esi
mov esi ecx
push edi
mov edi [ esi + 0x18 ]
lea eax [ edi + 0x1 ]
cmp eax [ esi + 0x14 ]
jae r-xdata
xor eax eax
mov edx [ esi ]
mov eax 0x100
movzx ecx [ edi + edx + 0x1 ]
imul ecx eax
movzx eax [ edi + edx ]
add cx ax
movzx eax cx
lea ecx [ edi + 0x2 ]
mov [ esi + 0x18 ] ecx
jmp r-xdata
pop edi
pop esi
retn
sub_40bddc
push ebx
mov ebx ecx
push edi
mov edi [ ebx + 0x18 ]
lea eax [ edi + 0x3 ]
cmp eax [ ebx + 0x14 ]
jae r-xdata
xor eax eax
mov edx [ ebx ]
push esi
movzx esi [ edi + edx + 0x3 ]
movzx eax [ edi + edx + 0x2 ]
movzx ecx [ edi + edx + 0x1 ]
shl esi 0x8
add eax esi
shl eax 0x8
add eax ecx
movzx ecx [ edi + edx ]
shl eax 0x8
add eax ecx
lea ecx [ edi + 0x4 ]
mov [ ebx + 0x18 ] ecx
pop esi
jmp r-xdata
pop edi
pop ebx
retn
sub_40be1e
push esi
push edi
mov esi ecx
call sub_40bddc
mov ecx esi
mov edi eax
call sub_40bddc
xor ecx ecx
mov edx eax
add ecx edi
pop edi
adc edx 0x0
mov eax ecx
pop esi
retn
sub_40be3e
push ebx
mov ebx ecx
push ebp
push esi
push edi
mov esi [ ebx + 0x14 ]
sub esi [ ebx + 0x18 ]
mov edi [ esp + 0x18 ]
cmp esi edi
jb r-xdata
mov ebp [ esp + 0x14 ]
test esi esi
je r-xdata
mov esi edi
cmp edi esi
jbe r-xdata
mov eax [ ebx ]
add eax [ ebx + 0x18 ]
push esi
push eax
push ebp
call sub_41ee90
add esp 0xc
add [ ebx + 0x18 ] esi
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
sub edi esi
lea ecx [ esi + ebp ]
push edi
push 0x0
push ecx
call sub_41d1e0
add esp 0xc
sub_40be8d
mov eax [ ecx + 0x14 ]
cmp eax 0x2
ja r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ecx ]
add eax 0xfffffffe
push eax
add ecx 0x2
push ecx
push 0xffffffff
call sub_405c44
not eax
movzx eax ax
mov eax [ ecx + 0x18 ]
retn 0x4
sub_40bebc
mov eax [ ecx + 0x14 ]
cmp eax 0x4
ja r-xdata
mov ecx [ ecx ]
add eax 0xfffffffc
push eax
add ecx 0x4
push ecx
push 0xffffffff
call sub_405c44
not eax
retn
or eax 0xffffffff
retn
sub_40bedc
push ecx
push ecx
push ebx
push ebp
push esi
push edi
mov edi ecx
xor esi esi
mov [ esp + 0x10 ] esi
mov ebp esi
mov eax [ edi + 0x14 ]
cmp [ edi + 0x18 ] eax
jae r-xdata
xor eax eax
xor edx edx
mov edx [ edi ]
mov eax esi
mov edx ecx
jmp r-xdata
mov eax [ esp + 0x14 ]
add ebp 0x7
mov edx [ edi ]
cmp eax [ edi + 0x14 ]
jb r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
mov eax [ edi + 0x18 ]
lea ecx [ eax + 0x1 ]
mov [ edi + 0x18 ] ecx
mov bl [ edx + eax ]
mov al bl
mov [ esp + 0x14 ] ecx
and al 0x7f
mov ecx ebp
movzx eax al
cdq
call sub_41c6a0
mov ecx [ esp + 0x10 ]
add esi eax
adc ecx edx
mov [ esp + 0x10 ] ecx
test bl bl
jns r-xdata
sub_40bf44
mov eax [ esp + 0x4 ]
mov edx [ ecx + 0x14 ]
cmp eax edx
jae r-xdata
xor eax eax
mov ecx [ ecx ]
sub eax [ esp + 0x4 ]
inc eax
jmp r-xdata
inc eax
cmp eax edx
jb r-xdata
retn 0x4
test [ ecx + eax ] 0x80
je r-xdata
sub_40bf68
push ecx
push ebx
push ebp
push esi
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0x1c ] ebx
je r-xdata
mov esi [ esp + 0x18 ]
test esi esi
je r-xdata
mov ebx [ edi + 0x4 ]
mov ecx ebx
mov eax [ edi + 0x14 ]
sub ecx eax
mov ebp [ esp + 0x18 ]
mov [ esp + 0x10 ] ebx
cmp ebp ecx
jbe r-xdata
pop edi
pop esi
pop ebp
mov eax ebx
pop ebx
pop ecx
retn 0x4
push esi
call sub_40183e
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
add edx [ edi ]
push esi
mov eax [ ecx ]
push edx
call [ eax + 0x8 ]
mov ebx eax
add [ edi + 0x14 ] ebx
add eax ebp
mov ebx ebp
mov [ edi + 0x14 ] eax
jmp r-xdata
mov eax ebp
sub eax ecx
mov ecx edi
mov esi eax
not esi
inc esi
and esi 0xf
add esi eax
push esi
call sub_40183e
mov ecx [ edi + 0x10 ]
mov edx [ edi ]
add edx ebx
push esi
mov eax [ ecx ]
push edx
call [ eax + 0x8 ]
mov ecx [ edi ]
mov ebx eax
add ecx [ esp + 0x10 ]
push esi
push ecx
mov ecx [ edi + 0x1c ]
call sub_405f0a
mov ecx ebx
neg ecx
sbb ecx ecx
and ecx ebp
add [ edi + 0x14 ] ecx
jmp r-xdata
sub_40c004
mov eax sub_42ede7
call sub_41c16c
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
lea ecx [ esi + 0x90 ]
call sub_409ed0
xor edi edi
lea ecx [ esi + 0xa4 ]
mov [ ebp - 0x4 ] edi
call sub_409ed0
lea ecx [ esi + 0xb8 ]
mov [ ebp - 0x4 ] 0x1
call sub_409ed0
mov ebx 0x10c0
mov [ ebp - 0x4 ] 0x2
push ebx
call sub_41c12b
pop ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
mov eax edi
mov ecx eax
call sub_405d5f
jmp r-xdata
mov ecx esi
mov [ esi + 0x44 ] edi
call sub_40c103
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx eax
call sub_405d5f
mov edi eax
push ebx
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x40 ] eax
call sub_41c12b
pop ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x4
test eax eax
je r-xdata
sub_40c0a7
push ebx
push esi
mov esi ecx
mov ebx 0x10c0
push edi
mov edi [ esi + 0x40 ]
test edi edi
je r-xdata
mov edi [ esi + 0x44 ]
test edi edi
je r-xdata
mov ecx edi
call sub_405e1e
push ebx
push edi
call sub_41c15e
pop ecx
pop ecx
lea ecx [ esi + 0xb8 ]
call sub_409f9a
lea ecx [ esi + 0xa4 ]
call sub_409f9a
pop edi
lea ecx [ esi + 0x90 ]
pop esi
pop ebx
jmp sub_409f9a
mov ecx edi
call sub_405e1e
push ebx
push edi
call sub_41c15e
pop ecx
pop ecx
sub_40c103
or [ ecx + 0x48 ] 0xffffffff
xor edx edx
mov [ ecx ] dl
mov [ ecx + 0xc ] dl
mov [ ecx + 0x20 ] edx
mov [ ecx + 0x24 ] edx
mov [ ecx + 0x28 ] 0x1
mov [ ecx + 0x2a ] dl
mov [ ecx + 0x4c ] edx
mov [ ecx + 0x50 ] dl
mov [ ecx + 0x2c ] edx
mov [ ecx + 0x30 ] edx
mov [ ecx + 0x18 ] edx
mov [ ecx + 0x34 ] edx
mov [ ecx + 0xcc ] dx
mov [ ecx + 0x78 ] edx
mov [ ecx + 0x7c ] edx
mov [ ecx + 0x70 ] edx
mov [ ecx + 0x74 ] edx
mov [ ecx + 0x68 ] edx
mov [ ecx + 0x6c ] edx
mov [ ecx + 0x60 ] edx
mov [ ecx + 0x64 ] edx
mov [ ecx + 0x38 ] edx
mov [ ecx + 0x3c ] edx
mov [ ecx + 0x88 ] edx
mov [ ecx + 0x8c ] edx
mov [ ecx + 0x80 ] edx
mov [ ecx + 0x84 ] edx
retn
sub_40c16d
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
push [ ebp + 0x24 ]
mov esi ecx
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
je r-xdata
mov ecx [ esi + 0x44 ]
push 0x0
call sub_405f32
mov [ esi + 0xcd ] al
mov ecx [ esi + 0x40 ]
push 0x1
call sub_405f32
mov [ esi + 0xcc ] al
jmp r-xdata
pop esi
pop ebp
retn 0x20
sub_40c1e7
push ebp
mov ebp esp
cmp [ ecx + 0x28 ] 0x0
je r-xdata
pop ebp
retn 0x10
mov edx [ ecx + 0x2c ]
test edx edx
je r-xdata
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ecx + 0x88 ]
mov eax esi
push edi
mov edi [ ecx + 0x8c ]
or eax edi
mov eax [ ebp + 0x8 ]
je r-xdata
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
add eax [ ecx + 0x80 ]
adc ebx [ ecx + 0x84 ]
jmp r-xdata
push edi
push esi
push ebx
push eax
push [ edx + 0x32d4 ]
push [ edx + 0x32d0 ]
push [ ecx + 0x7c ]
push [ ecx + 0x78 ]
call sub_40fc39
pop edi
pop esi
pop ebx
sub_40c248
push ecx
push ebx
mov ebx [ esp + 0x10 ]
push ebp
push esi
mov esi ecx
push edi
cmp [ esi + 0xcd ] 0x0
je r-xdata
mov ecx [ esp + 0x18 ]
xor edx edx
mov [ esp + 0x1c ] ecx
mov eax edx
mov [ esp + 0x10 ] eax
mov edi edx
test ebx ebx
je r-xdata
and ebx 0xfffffff0
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
mov ebp [ esi + 0x2c ]
je r-xdata
cmp edi 0xffffffff
je r-xdata
mov ecx [ eax + 0x6cd8 ]
push [ esi + 0x5c ]
add ecx [ esi + 0x70 ]
push [ esi + 0x58 ]
mov eax [ eax + 0x6cdc ]
adc eax [ esi + 0x74 ]
push eax
push ecx
mov ecx esi
call sub_40c1e7
mov ecx [ esi + 0x24 ]
cmp edx ecx
jl r-xdata
push [ esi + 0x4 ]
push [ esi + 0x8 ]
push [ esp + 0x20 ]
call sub_41ee90
mov edi [ esi + 0x4 ]
add esp 0xc
xor eax eax
mov [ esi + 0x4 ] eax
jmp r-xdata
call sub_40ef9c
mov eax edi
cmp [ esi + 0xcd ] 0x0
mov eax [ esp + 0x10 ]
mov edi eax
je r-xdata
mov edx ebx
jg r-xdata
mov ecx [ esp + 0x10 ]
mov eax edi
cdq
add [ esi + 0x70 ] eax
adc [ esi + 0x74 ] edx
add ecx edi
add [ esp + 0x1c ] edi
sub ebx edi
sub [ esi + 0x20 ] eax
mov [ esp + 0x10 ] ecx
sbb [ esi + 0x24 ] edx
cmp [ esi + 0x4f ] 0x0
je r-xdata
mov ecx [ esi + 0x44 ]
push eax
push [ esp + 0x1c ]
call sub_405f0a
cmp [ esi + 0x4f ] 0x0
je r-xdata
mov edx [ esi + 0x20 ]
jmp r-xdata
cmp ebx [ esi + 0x20 ]
jbe r-xdata
mov eax [ esi + 0x20 ]
or eax [ esi + 0x24 ]
jne r-xdata
cmp [ ebp + 0x4 ] 0xffffffff
je r-xdata
cmp [ esi + 0xcd ] 0x0
je r-xdata
test edx edx
je r-xdata
test edi edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp ]
mov ecx ebp
push edx
push [ esp + 0x20 ]
call [ eax + 0x8 ]
mov edi eax
mov eax [ esi + 0x38 ]
test eax eax
jne r-xdata
xor edi edi
cmp edi ecx
jl r-xdata
movzx eax [ esi + 0x4c ]
push eax
push 0x1
push esi
push ebp
call sub_416efd
test al al
je r-xdata
cmp [ esi + 0xcd ] al
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
cmp [ eax + 0x1089 ] 0x0
je r-xdata
lea eax [ ebp + 0x2280 ]
jg r-xdata
mov [ esi + 0x50 ] 0x1
test ebx ebx
je r-xdata
test cl 0xf
je r-xdata
push edi
push [ esp + 0x20 ]
lea ecx [ esi + 0x90 ]
call sub_40a1ac
add eax edx
mov ecx eax
and ecx 0xfffffff0
sub ecx eax
add ecx edx
test ecx ecx
jle r-xdata
cmp ebx [ esi + 0x20 ]
jbe r-xdata
mov eax [ esp + 0x10 ]
xor edx edx
jmp r-xdata
mov edx ecx
sub_40c3e5
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
push edi
mov edi [ esp + 0x14 ]
cmp [ esi + 0xc ] 0x0
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] edi
je r-xdata
cmp [ esi + 0x29 ] 0x0
jne r-xdata
cmp edi [ esi + 0x10 ]
ja r-xdata
add [ esi + 0x78 ] edi
adc [ esi + 0x7c ] 0x0
cmp [ esi + 0x2a ] 0x0
jne r-xdata
mov ecx [ esi + 0x30 ]
push edi
push ebx
call sub_4095e6
push edi
push ebx
push [ esi + 0x14 ]
call sub_41ee90
add [ esi + 0x14 ] edi
add esp 0xc
sub [ esi + 0x10 ] edi
jmp r-xdata
call sub_40ef9c
pop edi
pop esi
pop ebx
retn 0x8
push edi
push ebx
lea ecx [ esi + 0xb8 ]
call sub_40a1ac
sub_40c463
sub esp 0x400
lea eax [ esp ]
push ebx
push ebp
push esi
push edi
push [ esp + 0x414 ]
xor ebx ebx
inc ebx
push ebx
push 0x200
push eax
push r--data
call sub_40c4f4
lea eax [ esp + 0x10 ]
push 0x2a
push eax
call sub_41f472
pop ecx
pop ecx
mov edi eax
push 0x64
pop ebp
test edi edi
je r-xdata
mov ecx [ esp + 0x41c ]
mov esi [ esp + 0x418 ]
mov [ ecx ] ebp
mov [ esi ] ebp
lea eax [ esp + 0x10 ]
push eax
call j_sub_410052
mov esi [ esp + 0x418 ]
mov [ esi ] eax
lea eax [ edi + 0x2 ]
push eax
call j_sub_410052
mov ecx [ esp + 0x41c ]
mov [ ecx ] eax
jmp r-xdata
pop edi
pop esi
pop ebp
mov al bl
pop ebx
add esp 0x400
retn 0xc
cmp [ ecx ] ebp
jne r-xdata
cmp [ esi ] ebp
jne r-xdata
xor ebx ebx
sub_40c4f4
mov eax 0x2014
call sub_41c240
push ebx
mov ebx ecx
push ebp
push esi
mov esi [ esp + 0x2024 ]
cmp [ ebx ] 0x0
push edi
je r-xdata
cmp esi [ esp + 0x202c ]
je r-xdata
mov eax [ esp + 0x2034 ]
mov edx r--data
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2014
retn 0x14
push esi
push [ esp + 0x2030 ]
call sub_421693
pop ecx
pop ecx
mov edx r--data
sub eax 0x1
je r-xdata
push ebp
lea eax [ esp + 0x28 ]
push eax
push esi
call sub_40fed3
lea eax [ esp + 0x24 ]
mov [ esp + 0x1023 ] 0x0
push eax
call sub_421720
pop ecx
push eax
lea eax [ esp + 0x28 ]
push eax
push edi
call sub_405c44
not eax
push eax
push r--data
lea eax [ esp + 0x18 ]
push 0xa
push eax
call sub_403ce2
add esp 0x10
lea eax [ esp + 0x10 ]
mov ecx ebx
push eax
call sub_40c9a1
test eax eax
je r-xdata
push ebp
lea eax [ esp + 0x1028 ]
push eax
push [ esp + 0x2040 ]
call sub_40fed3
lea eax [ esp + 0x1024 ]
push eax
call sub_421720
pop ecx
push eax
lea eax [ esp + 0x1028 ]
push eax
push edi
call sub_405c44
mov edi eax
mov edx r--data
jmp r-xdata
sub eax 0x1
jne r-xdata
push 0x22
lea edi [ eax + 0x12 ]
pop ebp
cmp [ edi ] bp
jne r-xdata
push 0x1
push edx
push 0xffffffff
call sub_405c44
cmp [ esp + 0x2038 ] 0x0
mov edi eax
mov ebp 0x1000
je r-xdata
mov edx r--data
jmp r-xdata
push 0xc
push edi
call sub_41f472
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
add edi 0x2
mov esi 0xff
sub esi edi
sar esi 0x1
jmp r-xdata
mov ebx [ esp + 0x202c ]
test esi esi
je r-xdata
mov esi eax
neg esi
sbb esi esi
and esi ecx
mov eax [ esp + 0x2030 ]
lea ecx [ eax - 0x1 ]
cmp esi ecx
jbe r-xdata
xor eax eax
push ebp
push ebx
mov [ ebx + esi * 2 ] ax
call sub_41f64b
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
push edi
push ebx
call sub_422b91
add esp 0xc
xor ecx ecx
mov [ eax ] cx
jmp r-xdata
sub_40c69c
mov eax sub_42edfc
call sub_41c16c
mov eax 0x403c
call sub_41c240
push ebx
push esi
push edi
push 0x5c
pop edi
push edi
push [ ebp + 0x8 ]
mov esi ecx
mov [ ebp - 0x24 ] edi
call sub_41f472
pop ecx
xor ebx ebx
test eax eax
pop ecx
lea eax [ ebp - 0x4048 ]
jne r-xdata
push [ ebp + 0x8 ]
push eax
call sub_421693
pop ecx
pop ecx
lea ecx [ ebp - 0x1048 ]
call sub_408e1d
push 0x4
lea eax [ ebp - 0x4048 ]
mov [ ebp - 0x4 ] ebx
push eax
lea ecx [ ebp - 0x1048 ]
call sub_40915c
test al al
je r-xdata
push 0x800
push eax
push ebx
call [ GetModuleFileNameW@IAT ]
lea eax [ ebp - 0x4048 ]
push edi
push eax
call sub_41f64b
pop ecx
pop ecx
test eax eax
je r-xdata
lea ecx [ ebp - 0x1048 ]
call sub_408e53
or edi 0xffffffff
mov [ ebp + 0xb ] bl
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x1c ] ebx
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
add eax 0x2
push ebx
mov eax edi
lea ecx [ ebp - 0x1048 ]
cdq
push edx
push eax
call sub_4093fe
push 0x80002
call sub_422c59
mov [ esi ] eax
pop ecx
test eax eax
je r-xdata
lea ecx [ ebp - 0x1048 ]
call sub_409509
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x1048 ]
push 0x2000
lea eax [ ebp - 0x3048 ]
push eax
call sub_40932b
mov [ ebp - 0x18 ] eax
mov edi ebx
lea ecx [ eax - 0x10 ]
mov [ ebp - 0x20 ] ecx
test ecx ecx
js r-xdata
push 0x80000
push eax
lea ecx [ ebp - 0x1048 ]
call sub_40932b
mov cl [ ebp + 0xb ]
mov [ esi + 0x4 ] eax
test cl cl
je r-xdata
mov eax [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
cmp [ ebp + edi - 0x3048 ] 0x2a
jne r-xdata
lea eax [ eax * 2 + 0x2 ]
push eax
call sub_422c59
mov edi eax
pop ecx
test edi edi
je r-xdata
shr eax 0x1
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp edi 0xffffffff
jne r-xdata
cmp edi 0xffffffff
je r-xdata
push 0x2a
pop edx
cmp [ ebp + edi - 0x3048 ] dx
jne r-xdata
cmp [ ebp + edi - 0x3047 ] 0x2a
jne r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov [ edx + ecx ] bl
mov ecx [ esi + 0x4 ]
inc ecx
push ecx
push edi
push [ esi ]
call sub_40fc9f
push [ esi ]
call j_sub_4251ac#3
pop ecx
mov [ esi ] edi
mov ecx 0x40000
cmp [ esi + 0x4 ] ecx
ja r-xdata
cmp [ ebp + edi - 0x3048 ] 0x52
jne r-xdata
lea ecx [ ebp - 0x3044 ]
add ecx edi
cmp [ ecx - 0x2 ] dx
jne r-xdata
push 0xb
lea eax [ ebp - 0x3046 ]
add eax edi
push r--data
push eax
call sub_422c70
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + ecx * 2 ] dx
mov ecx ebx
cmp [ esi + 0x4 ] ebx
jbe r-xdata
mov ecx [ esi + 0x4 ]
inc edi
cmp edi [ ebp - 0x20 ]
jg r-xdata
cmp [ ebp + edi - 0x3047 ] 0x61
jne r-xdata
add eax 0xffffffe0
cmp edi eax
jg r-xdata
mov eax [ ebp - 0x14 ]
add edi eax
mov [ ebp - 0x10 ] edi
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ esi ]
xor edx edx
mov [ eax + ecx * 2 ] dx
mov [ esi + 0x4 ] ecx
push 0xd
pop eax
mov eax [ ebp - 0x18 ]
jmp r-xdata
push 0x4
lea eax [ ebp - 0x3046 ]
add eax edi
push r--data
push eax
call sub_422c70
add esp 0xc
test eax eax
je r-xdata
push 0xb
push r--data
push ecx
call sub_422b57
add esp 0xc
test eax eax
je r-xdata
mov ecx [ ebp - 0x18 ]
push ebx
add ecx 0xfffffff0
add eax ecx
lea ecx [ ebp - 0x1048 ]
push ebx
push eax
call sub_4093fe
mov eax [ ebp - 0x1c ]
inc eax
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jb r-xdata
cmp di [ ebp - 0x24 ]
jne r-xdata
mov [ ebp + 0xb ] 0x1
cmp di ax
je r-xdata
movzx eax [ edx + ebx * 2 ]
sub eax 0x22
je r-xdata
push 0xc
pop edi
push 0xa
pop eax
cmp di ax
jne r-xdata
push 0x22
sub eax 0x3a
je r-xdata
mov edx [ esi ]
movzx edi [ edx + ebx * 2 ]
inc ebx
test di di
je r-xdata
mov [ edx + ecx * 2 ] di
inc ecx
push 0xd
pop eax
cmp ebx [ esi + 0x4 ]
jb r-xdata
push 0x5c
jmp r-xdata
sub eax 0x12
je r-xdata
pop eax
mov [ edx + ecx * 2 ] ax
inc ebx
jmp r-xdata
push 0xa
jmp r-xdata
sub eax 0x4
je r-xdata
push 0xd
jmp r-xdata
dec eax
sub eax 0x1
jne r-xdata
push 0x9
jmp r-xdata
sub_40c9a1
push ebx
push esi
mov esi [ ecx ]
push edi
movzx eax [ esi ]
test ax ax
je r-xdata
xor eax eax
mov edi [ esp + 0x10 ]
push 0xc
pop ebx
movzx eax [ esi ]
test ax ax
jne r-xdata
push 0x7
lea eax [ edi + 0x2 ]
push eax
lea eax [ esi + 0x2 ]
push eax
call sub_422b57
add esp 0xc
test eax eax
jne r-xdata
cmp ax bx
je r-xdata
jmp r-xdata
cmp [ esi + 0x10 ] 0x3d
jne r-xdata
add esi 0x2
add esi 0x2
cmp [ esi ] bx
je r-xdata
cmp [ esi + 0x12 ] 0x22
jne r-xdata
movzx eax [ esi ]
test ax ax
jne r-xdata
mov eax esi
jmp r-xdata
cmp ax [ edi ]
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_40ca0c
push ebp
mov ebp esp
sub esp 0x800
push esi
push edi
push 0x0
mov esi ecx
call [ GetModuleHandleW@IAT ]
push 0x5
mov edi r--data
push edi
push eax
call [ FindResourceW@IAT ]
test eax eax
je r-xdata
mov ecx r--data
lea eax [ ebp - 0x800 ]
push ecx
push 0x1
push 0x400
push eax
push ecx
mov ecx esi
call sub_40c4f4
lea eax [ ebp - 0x800 ]
push edi
push eax
call sub_4216e0
neg eax
pop ecx
sbb al al
inc al
pop ecx
mov [ esi + 0x10 ] al
mov [ esi + 0x10 ] 0x1
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_40ca9b
sub esp 0x854
push ebx
push ebp
push esi
push edi
lea eax [ esp + 0x14 ]
mov ebx ecx
push eax
lea eax [ esp + 0x1c ]
mov [ esp + 0x2c ] ebx
push eax
push [ esp + 0x874 ]
call sub_40c463
mov esi [ esp + 0x868 ]
mov [ esp + 0x13 ] al
lea eax [ esp + 0x34 ]
push eax
push esi
call [ GetWindowRect@IAT ]
lea eax [ esp + 0x54 ]
push eax
push esi
call [ GetClientRect@IAT ]
mov ecx [ esp + 0x3c ]
sub ecx [ esp + 0x34 ]
mov edi [ esp + 0x40 ]
inc ecx
sub edi [ esp + 0x38 ]
mov edx ecx
mov eax [ esp + 0x5c ]
inc edi
mov ebp edi
mov [ esp + 0x2c ] 0x64
sub ebp [ esp + 0x60 ]
sub edx eax
cmp [ esp + 0x13 ] 0x0
mov [ esp + 0x30 ] edx
je r-xdata
cmp [ esp + 0x870 ] 0x0
jne r-xdata
cmp [ esp + 0x870 ] 0x0
jne r-xdata
push 0x8
call [ GetSystemMetrics@IAT ]
push 0x5
push esi
sub ebp eax
call [ GetWindow@IAT ]
mov edi eax
xor ebx ebx
mov [ esp + 0x1c ] edi
jmp r-xdata
push 0x400
lea eax [ esp + 0x68 ]
push eax
push esi
call [ GetWindowTextW@IAT ]
push [ esp + 0x86c ]
lea eax [ esp + 0x68 ]
mov ecx ebx
push 0x1
push 0x400
push eax
push eax
call sub_40c4f4
lea eax [ esp + 0x64 ]
push eax
push esi
call [ SetWindowTextW@IAT ]
imul eax [ esp + 0x18 ]
push 0x64
pop ebx
cdq
idiv ebx
mov ebx eax
mov eax [ esp + 0x60 ]
imul eax [ esp + 0x14 ]
add ebx [ esp + 0x30 ]
sub ecx ebx
mov [ esp + 0x1c ] ebx
cdq
idiv [ esp + 0x2c ]
add eax ebp
mov [ esp + 0x20 ] eax
mov eax ecx
sub edi [ esp + 0x20 ]
cdq
sub eax edx
mov ecx eax
mov eax edi
cdq
sub eax edx
sar ecx 0x1
add ecx [ esp + 0x34 ]
mov edi eax
sar edi 0x1
add edi [ esp + 0x38 ]
mov [ esp + 0x24 ] ecx
test ecx ecx
jns r-xdata
test edi edi
jne r-xdata
test edi edi
jns r-xdata
and [ esp + 0x24 ] 0x0
cmp ebx 0x200
jge r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x854
retn 0xc
push 0xfffffff0
push esi
mov ebx 0x204
call [ GetWindowLongW@IAT ]
test eax 0x800
jne r-xdata
xor edi edi
mov esi 0x400
lea eax [ esp + 0x64 ]
push esi
push eax
push edi
call [ GetWindowTextW@IAT ]
cmp [ esp + 0x64 ] 0x0
je r-xdata
push ebx
push [ esp + 0x24 ]
push [ esp + 0x24 ]
push edi
push [ esp + 0x34 ]
push 0x0
push esi
call [ SetWindowPos@IAT ]
lea eax [ esp + 0x34 ]
push eax
push esi
call [ GetWindowRect@IAT ]
mov ebx [ esp + 0x28 ]
add ebx 0x2
cmp [ esp + 0x13 ] 0x0
je r-xdata
push [ esp + 0x86c ]
mov ecx [ esp + 0x2c ]
lea eax [ esp + 0x68 ]
push 0x1
push esi
push eax
push eax
call sub_40c4f4
lea eax [ esp + 0x64 ]
push eax
push edi
call [ SetWindowTextW@IAT ]
push 0x2
push edi
call [ GetWindow@IAT ]
mov edi eax
cmp edi [ esp + 0x1c ]
je r-xdata
lea eax [ esp + 0x44 ]
push eax
push edi
call [ GetWindowRect@IAT ]
mov eax [ esp + 0x50 ]
mov ecx [ esp + 0x48 ]
sub eax ecx
inc eax
sub ecx ebp
imul eax [ esp + 0x14 ]
push 0x204
push 0x64
pop esi
sub ecx [ esp + 0x3c ]
cdq
idiv esi
mov esi [ esp + 0x48 ]
push eax
mov eax [ esp + 0x54 ]
sub eax esi
imul ecx [ esp + 0x1c ]
inc eax
imul eax [ esp + 0x20 ]
cdq
idiv [ esp + 0x34 ]
push eax
push 0x64
mov eax ecx
cdq
pop ecx
idiv ecx
push eax
mov eax [ esp + 0x40 ]
cdq
sub eax edx
sar eax 0x1
sub esi eax
sub esi [ esp + 0x44 ]
imul esi [ esp + 0x28 ]
mov eax esi
cdq
idiv ecx
push eax
push 0x0
push edi
call [ SetWindowPos@IAT ]
inc ebx
sub_40cd14
mov eax [ rw-data ]
inc eax
push ebx
push ebp
push esi
cmp eax 0x8
mov ebp rw-data
mov ecx ebp
sbb esi esi
and esi eax
xor eax eax
mov [ rw-data ] esi
shl esi 0xa
add esi rw-data
mov [ esi ] ax
call sub_40c999
mov ebx 0x200
test al al
jne r-xdata
push ebx
push esi
push [ esp + 0x18 ]
push [ rw-data ]
call [ LoadStringW@IAT ]
push ebx
push esi
push [ esp + 0x18 ]
push [ rw-data ]
call [ LoadStringW@IAT ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push ebx
push esi
push esi
mov ecx ebp
call sub_40c4f4
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
sub_40cda4
push ebp
mov ebp esp
sub esp 0x304
xor eax eax
push ebx
xor ebx ebx
inc ebx
push esi
mov edx ebx
mov esi 0x11b
mov [ ebp + eax - 0x304 ] dl
mov [ ebp + eax - 0x205 ] dl
mov [ ebp + edx - 0x104 ] al
inc eax
mov [ ebp - 0x4 ] eax
mov eax edx
and al 0x80
movsx ecx al
lea eax [ edx + edx ]
neg ecx
sbb ecx ecx
and ecx esi
xor ecx eax
mov eax [ ebp - 0x4 ]
xor edx ecx
cmp edx ebx
jne r-xdata
xor edx edx
mov eax ebx
mov [ edx + rw-data ] bl
and al 0x80
movsx ecx al
neg ecx
sbb ecx ecx
add ebx ebx
and ecx esi
xor ebx ecx
inc edx
cmp edx 0x1e
jb r-xdata
xor ebx ebx
xor edx edx
movzx eax bl
lea ecx [ ebp - 0x205 ]
movzx eax [ ebp + eax - 0x104 ]
sub ecx eax
movzx edx [ ecx ]
jmp r-xdata
xor eax eax
movzx eax cl
movzx eax [ ebp + eax - 0x104 ]
movzx eax [ ebp + eax - 0x2eb ]
jmp r-xdata
lea eax [ edx + edx ]
xor eax edx
add eax eax
xor eax edx
add eax eax
xor eax edx
add eax eax
xor edx eax
mov ecx edx
xor ecx 0x6300
sar ecx 0x8
xor ecx edx
mov [ ebx + rw-data ] cl
mov [ ebx * 4 + rw-data ] cl
mov [ ebx * 4 + rw-data ] cl
mov [ ebx * 4 + rw-data ] cl
mov [ ebx * 4 + rw-data ] cl
mov [ ebx * 4 + rw-data ] cl
mov [ ebx * 4 + rw-data ] cl
mov [ ebx * 4 + rw-data ] cl
mov [ ebx * 4 + rw-data ] cl
test cl cl
je r-xdata
xor eax eax
movzx eax cl
movzx eax [ ebp + eax - 0x104 ]
movzx eax [ ebp + eax - 0x303 ]
jmp r-xdata
mov [ ebx * 4 + rw-data ] al
mov [ ebx * 4 + rw-data ] al
mov [ ebx * 4 + rw-data ] al
mov [ ebx * 4 + rw-data ] al
test cl cl
je r-xdata
xor dl dl
mov edx esi
shl edx 0x3
xor edx esi
shl edx 0x2
xor edx esi
add edx edx
mov eax edx
sar eax 0x8
movzx ecx al
movzx eax dl
xor ecx eax
xor ecx 0x5
movzx eax [ ebp + ecx - 0x104 ]
lea ecx [ ebp - 0x205 ]
sub ecx eax
mov dl [ ecx ]
jmp r-xdata
movzx esi bl
mov ecx esi
mov [ ebx * 4 + rw-data ] al
shl ecx 0x3
xor ecx esi
mov [ ebx * 4 + rw-data ] al
shl ecx 0x2
xor ecx esi
mov [ ebx * 4 + rw-data ] al
mov [ ebx * 4 + rw-data ] al
add ecx ecx
mov eax ecx
sar eax 0x8
xor al cl
xor al 0x5
je r-xdata
xor eax eax
movzx eax dl
movzx eax [ ebp + eax - 0x104 ]
movzx eax [ ebp + eax - 0x29c ]
jmp r-xdata
mov [ ebx + rw-data ] dl
test dl dl
je r-xdata
xor eax eax
movzx eax [ ebp + ecx - 0x104 ]
movzx eax [ ebp + eax - 0x23d ]
jmp r-xdata
movzx ecx dl
mov [ ebx * 4 + rw-data ] al
mov [ ebx * 4 + rw-data ] al
mov [ ebx * 4 + rw-data ] al
mov [ ebx * 4 + rw-data ] al
mov [ ecx * 4 + rw-data ] al
mov [ ecx * 4 + rw-data ] al
mov [ ecx * 4 + rw-data ] al
mov [ ecx * 4 + rw-data ] al
test dl dl
je r-xdata
xor eax eax
movzx eax [ ebp + ecx - 0x104 ]
movzx eax [ ebp + eax - 0x216 ]
jmp r-xdata
mov [ ebx * 4 + rw-data ] al
mov [ ebx * 4 + rw-data ] al
mov [ ebx * 4 + rw-data ] al
mov [ ebx * 4 + rw-data ] al
mov [ ecx * 4 + rw-data ] al
mov [ ecx * 4 + rw-data ] al
mov [ ecx * 4 + rw-data ] al
mov [ ecx * 4 + rw-data ] al
test dl dl
je r-xdata
xor eax eax
movzx eax [ ebp + ecx - 0x104 ]
movzx eax [ ebp + eax - 0x225 ]
jmp r-xdata
mov [ ebx * 4 + rw-data ] al
mov [ ebx * 4 + rw-data ] al
mov [ ebx * 4 + rw-data ] al
mov [ ebx * 4 + rw-data ] al
mov [ ecx * 4 + rw-data ] al
mov [ ecx * 4 + rw-data ] al
mov [ ecx * 4 + rw-data ] al
mov [ ecx * 4 + rw-data ] al
test dl dl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx * 4 + rw-data ] al
mov [ ebx * 4 + rw-data ] al
mov [ ebx * 4 + rw-data ] al
mov [ ebx * 4 + rw-data ] al
inc ebx
mov [ ecx * 4 + rw-data ] al
mov [ ecx * 4 + rw-data ] al
mov [ ecx * 4 + rw-data ] al
mov [ ecx * 4 + rw-data ] al
cmp ebx 0x100
jl r-xdata
sub_40d0a7
sub esp 0x24
push ebx
xor eax eax
push ebp
push esi
inc eax
lea esi [ esp + 0x10 ]
push edi
mov edi ecx
xor ecx ecx
cpuid
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edx
mov eax [ esp + 0x1c ]
shr eax 0x19
and al 0x1
mov [ esp + 0x10 ] edi
mov [ edi ] al
mov eax [ esp + 0x40 ]
sub eax 0x80
je r-xdata
push 0x10
mov [ edi + 0x4 ] 0xa
sub eax 0x40
je r-xdata
mov ecx [ esp + 0x44 ]
test ecx ecx
jne r-xdata
mov edi [ esp + 0x3c ]
push 0x18
xor esi esi
mov [ edi + 0x4 ] 0xc
pop ebx
mov ebp esi
jmp r-xdata
sub eax 0x40
jne r-xdata
mov al [ esi + ecx ]
mov [ edi + esi + 0x8 ] al
inc esi
cmp esi 0x10
jl r-xdata
push 0x10
lea eax [ edi + 0x8 ]
push esi
push eax
call sub_41d1e0
add esp 0xc
jmp r-xdata
mov eax ebp
lea ecx [ esp + 0x14 ]
and eax 0x3
mov edx ebp
add ecx eax
shr edx 0x2
mov al [ edi + ebp ]
inc ebp
mov [ ecx + edx * 4 ] al
cmp ebp ebx
jb r-xdata
mov edi [ esp + 0x10 ]
mov ebx [ esp + 0x38 ]
jmp r-xdata
push 0x20
mov [ edi + 0x4 ] 0xe
jmp r-xdata
lea eax [ esp + 0x14 ]
mov ecx edi
push eax
call sub_40d7ba
cmp [ esp + 0x38 ] 0x0
jne r-xdata
xor esi esi
mov ebp esi
test ebx ebx
je r-xdata
pop ebx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x24
retn 0x10
mov ecx edi
call sub_40d706
sub_40d18a
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
mov eax [ esi ]
xor eax [ edx ]
mov [ ecx ] eax
mov eax [ esi + 0x4 ]
xor eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ esi + 0x8 ]
xor eax [ edx + 0x8 ]
mov [ ecx + 0x8 ] eax
mov eax [ esi + 0xc ]
xor eax [ edx + 0xc ]
mov [ ecx + 0xc ] eax
pop esi
retn 0xc
sub_40d1bc
sub esp 0x54
push ebp
push edi
mov edi [ esp + 0x64 ]
mov ebp ecx
mov [ esp + 0x1c ] ebp
test edi edi
je r-xdata
pop edi
pop ebp
add esp 0x54
retn 0xc
shr edi 0x4
cmp [ ebp ] 0x0
mov [ esp + 0x64 ] edi
je r-xdata
lea eax [ ebp + 0x8 ]
push 0x10
push eax
mov [ esp + 0x30 ] eax
lea eax [ esp + 0x54 ]
push eax
call sub_41ee90
add esp 0xc
test edi edi
je r-xdata
push [ esp + 0x68 ]
push edi
push [ esp + 0x68 ]
call sub_40d67e
jmp r-xdata
push 0x10
lea eax [ esp + 0x50 ]
push eax
push [ esp + 0x30 ]
call sub_41ee90
add esp 0xc
mov edx [ esp + 0x60 ]
push ebx
push esi
lea eax [ edx + 0x8 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x70 ]
sub edx eax
mov [ esp + 0x2c ] edx
lea ecx [ eax + 0x8 ]
mov [ esp + 0x20 ] ecx
mov eax [ ebp + 0x28 ]
xor eax [ esp + 0x68 ]
mov [ esp + 0x6c ] eax
mov [ esp + 0x44 ] eax
movzx eax al
mov ecx [ ebp + 0x34 ]
xor ecx [ esp + 0x14 ]
mov edx [ ebp + 0x30 ]
mov al [ eax + rw-data ]
mov [ esp + 0x34 ] al
mov eax ecx
shr eax 0x8
movzx eax al
xor edx [ esp + 0x10 ]
mov ebx [ ebp + 0x2c ]
xor ebx [ esp + 0x70 ]
mov al [ eax + rw-data ]
mov [ esp + 0x35 ] al
mov eax edx
shr eax 0x10
movzx eax al
mov esi [ esp + 0x6c ]
mov [ esp + 0x4c ] edx
mov [ esp + 0x48 ] ebx
mov al [ eax + rw-data ]
mov [ esp + 0x36 ] al
mov eax ebx
shr eax 0x18
mov [ esp + 0x50 ] ecx
mov al [ eax + rw-data ]
mov [ esp + 0x37 ] al
movzx eax bl
mov al [ eax + rw-data ]
mov [ esp + 0x38 ] al
mov eax esi
shr eax 0x8
movzx eax al
mov al [ eax + rw-data ]
mov [ esp + 0x39 ] al
mov eax ecx
shr eax 0x10
movzx eax al
mov al [ eax + rw-data ]
mov [ esp + 0x3a ] al
mov eax edx
shr eax 0x18
mov al [ eax + rw-data ]
mov [ esp + 0x3b ] al
movzx eax dl
shr edx 0x8
mov al [ eax + rw-data ]
mov [ esp + 0x3c ] al
mov eax ebx
shr eax 0x8
movzx eax al
shr ebx 0x10
mov al [ eax + rw-data ]
mov [ esp + 0x3d ] al
mov eax esi
shr eax 0x10
movzx eax al
shr esi 0x18
mov al [ eax + rw-data ]
mov [ esp + 0x3e ] al
mov eax ecx
shr eax 0x18
mov al [ eax + rw-data ]
mov [ esp + 0x3f ] al
movzx eax cl
mov al [ eax + rw-data ]
mov [ esp + 0x40 ] al
movzx eax dl
mov edx [ esp + 0x34 ]
xor edx [ ebp + 0x18 ]
mov al [ eax + rw-data ]
mov [ esp + 0x41 ] al
movzx eax bl
mov al [ eax + rw-data ]
mov [ esp + 0x42 ] al
mov al [ esi + rw-data ]
mov [ esp + 0x43 ] al
mov esi [ esp + 0x38 ]
mov ebx [ esp + 0x3c ]
mov eax [ esp + 0x40 ]
xor eax [ ebp + 0x24 ]
xor esi [ ebp + 0x1c ]
xor ebx [ ebp + 0x20 ]
cmp [ ebp + 0x1 ] 0x0
mov [ esp + 0x6c ] eax
je r-xdata
mov edi [ esp + 0x68 ]
lea eax [ esi + 0x2 ]
shl eax 0x4
add eax ebp
dec esi
mov [ esp + 0x14 ] eax
mov ebp eax
mov [ esp + 0x18 ] esi
mov eax [ esp + 0x28 ]
mov eax [ eax ]
mov [ esp + 0x54 ] eax
mov eax [ esp + 0x1c ]
mov ecx [ eax - 0x4 ]
mov [ esp + 0x58 ] ecx
mov ecx [ eax ]
mov [ esp + 0x5c ] ecx
mov ecx [ eax + 0x4 ]
add eax 0x10
mov [ esp + 0x60 ] ecx
mov ecx [ esp + 0x20 ]
mov [ esp + 0x1c ] eax
mov [ ecx - 0x8 ] edx
mov edx [ esp + 0x6c ]
mov [ ecx + 0x4 ] edx
mov edx [ esp + 0x2c ]
mov [ ecx - 0x4 ] esi
mov [ ecx ] ebx
add ecx 0x10
sub edi 0x1
mov [ esp + 0x20 ] ecx
mov [ esp + 0x6c ] edi
jne r-xdata
xor edx [ esp + 0x54 ]
xor esi [ esp + 0x58 ]
xor ebx [ esp + 0x5c ]
xor eax [ esp + 0x60 ]
mov [ esp + 0x6c ] eax
mov eax [ ebp - 0x8 ]
xor eax edi
mov edx [ ebp ]
mov [ esp + 0x68 ] eax
lea ebp [ ebp - 0x10 ]
mov eax [ ebp + 0x14 ]
xor eax ecx
xor edx [ esp + 0x10 ]
mov [ esp + 0x14 ] eax
shr eax 0x8
movzx ecx al
mov eax edx
mov ebx [ ebp + 0xc ]
xor ebx [ esp + 0x70 ]
shr eax 0x10
mov edi [ ecx * 4 + rw-data ]
mov ecx edx
movzx eax al
shr ecx 0x18
xor edi [ eax * 4 + rw-data ]
mov eax ebx
shr eax 0x18
xor edi [ eax * 4 + rw-data ]
mov eax [ esp + 0x68 ]
movzx eax al
xor edi [ eax * 4 + rw-data ]
mov eax [ esp + 0x14 ]
shr eax 0x10
movzx eax al
mov [ esp + 0x34 ] edi
mov eax [ eax * 4 + rw-data ]
xor eax [ ecx * 4 + rw-data ]
mov [ esp + 0x70 ] eax
mov eax [ esp + 0x68 ]
mov ecx [ esp + 0x70 ]
shr eax 0x8
movzx eax al
xor ecx [ eax * 4 + rw-data ]
movzx eax bl
xor ecx [ eax * 4 + rw-data ]
mov eax ebx
mov [ esp + 0x70 ] ecx
mov [ esp + 0x38 ] ecx
mov ecx [ esp + 0x14 ]
shr eax 0x8
shr ecx 0x18
movzx eax al
shr ebx 0x10
mov ecx [ ecx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov eax [ esp + 0x68 ]
shr eax 0x10
movzx eax al
xor ecx [ eax * 4 + rw-data ]
movzx eax dl
shr edx 0x8
xor ecx [ eax * 4 + rw-data ]
mov [ esp + 0x10 ] ecx
mov [ esp + 0x3c ] ecx
movzx ecx dl
movzx eax bl
mov ecx [ ecx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov eax [ esp + 0x68 ]
shr eax 0x18
xor ecx [ eax * 4 + rw-data ]
mov eax [ esp + 0x14 ]
movzx eax al
xor ecx [ eax * 4 + rw-data ]
sub [ esp + 0x18 ] 0x1
mov [ esp + 0x40 ] ecx
jne r-xdata
mov ebp [ esp + 0x24 ]
mov [ esp + 0x68 ] edi
mov edi [ esp + 0x6c ]
mov [ esp + 0x14 ] ecx
mov esi [ ebp + 0x4 ]
add edx 0xfffffff8
mov eax esi
add ecx edx
shl eax 0x4
add eax 0x18
mov [ esp + 0x28 ] ecx
add eax ebp
push eax
push ecx
lea eax [ esp + 0x4c ]
push eax
call sub_40d18a
mov edx [ esp + 0x44 ]
movzx ecx [ esp + 0x4b ]
movzx eax dl
mov ebx [ eax * 4 + rw-data ]
xor ebx [ ecx * 4 + rw-data ]
movzx eax [ esp + 0x4e ]
xor ebx [ eax * 4 + rw-data ]
mov [ esp + 0x68 ] ebx
mov ebx [ esp + 0x50 ]
mov ecx [ esp + 0x68 ]
movzx eax bh
xor ecx [ eax * 4 + rw-data ]
mov [ esp + 0x68 ] ecx
mov [ esp + 0x34 ] ecx
movzx ecx dh
mov edx [ esp + 0x48 ]
movzx eax dl
mov ecx [ ecx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
movzx eax [ esp + 0x4f ]
xor ecx [ eax * 4 + rw-data ]
movzx eax [ esp + 0x52 ]
xor ecx [ eax * 4 + rw-data ]
movzx eax [ esp + 0x46 ]
mov [ esp + 0x70 ] ecx
mov [ esp + 0x38 ] ecx
movzx ecx dh
mov eax [ eax * 4 + rw-data ]
mov edx [ esp + 0x4c ]
xor eax [ ecx * 4 + rw-data ]
mov [ esp + 0x10 ] eax
mov ecx [ esp + 0x10 ]
movzx eax dl
xor ecx [ eax * 4 + rw-data ]
movzx eax [ esp + 0x53 ]
xor ecx [ eax * 4 + rw-data ]
movzx eax [ esp + 0x47 ]
mov [ esp + 0x10 ] ecx
mov [ esp + 0x3c ] ecx
movzx ecx [ esp + 0x4a ]
mov eax [ eax * 4 + rw-data ]
xor eax [ ecx * 4 + rw-data ]
mov [ esp + 0x14 ] eax
mov ecx [ esp + 0x14 ]
movzx eax dh
xor ecx [ eax * 4 + rw-data ]
movzx eax bl
xor ecx [ eax * 4 + rw-data ]
dec esi
mov [ esp + 0x14 ] ecx
mov [ esp + 0x40 ] ecx
cmp esi 0x1
jle r-xdata
pop esi
pop ebx
sub_40d67e
mov edx ecx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x14 ]
lea eax [ edx + 0x18 ]
mov [ esp + 0x14 ] eax
movups xmm2 [ edx + 0x8 ]
test esi esi
je r-xdata
pop edi
movups [ edx + 0x8 ] xmm2
pop esi
retn 0xc
mov ecx [ esp + 0xc ]
mov eax ecx
add ecx 0x10
mov [ esp + 0xc ] ecx
mov ecx [ edx + 0x4 ]
movups xmm3 [ eax ]
mov eax ecx
shl eax 0x4
add eax [ esp + 0x14 ]
dec ecx
movups xmm1 [ eax ]
pxor xmm1 xmm3
test ecx ecx
jle r-xdata
cmp [ edx + 0x1 ] 0x0
movups xmm0 [ edx + 0x18 ]
aesdeclast xmm1 xmm0
je r-xdata
mov eax ecx
shl eax 0x4
add eax [ esp + 0x14 ]
mov eax edi
movaps xmm2 xmm3
add edi 0x10
movups [ eax ] xmm1
sub esi 0x1
jne r-xdata
pxor xmm1 xmm2
movups xmm0 [ eax ]
dec ecx
lea eax [ eax - 0x10 ]
aesdec xmm1 xmm0
test ecx ecx
jg r-xdata
sub_40d706
sub esp 0x20
push ebp
push edi
mov ebp ecx
xor edi edi
inc edi
mov [ esp + 0x14 ] ebp
mov [ esp + 0x8 ] edi
cmp [ ebp + 0x4 ] edi
jle r-xdata
pop edi
pop ebp
add esp 0x20
retn
push ebx
lea ebx [ ebp + 0x28 ]
push esi
mov [ esp + 0x14 ] ebx
movzx eax [ ebp + 0x1 ]
movzx ecx [ ebp - 0x1 ]
mov dl [ esi + eax * 4 + rw-data ]
movzx eax [ ebp - 0x2 ]
xor dl [ esi + ecx * 4 + rw-data ]
xor dl [ esi + eax * 4 + rw-data ]
movzx eax [ ebp ]
lea ebp [ ebp + 0x4 ]
xor dl [ esi + eax * 4 + rw-data ]
mov [ edi ] dl
lea edi [ edi + 0x4 ]
sub ebx 0x1
jne r-xdata
mov eax [ esp + 0x18 ]
inc esi
cmp esi 0x4
jl r-xdata
lea edi [ esp + 0x20 ]
mov ebp eax
push 0x4
add edi esi
pop ebx
mov ebx [ esp + 0x14 ]
lea eax [ esp + 0x20 ]
push 0x10
push eax
push ebx
call sub_41ee90
mov edi [ esp + 0x1c ]
add esp 0xc
mov ebp [ esp + 0x1c ]
inc edi
add ebx 0x10
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] ebx
cmp edi [ ebp + 0x4 ]
jl r-xdata
lea eax [ ebx + 0x2 ]
xor esi esi
mov [ esp + 0x18 ] eax
pop esi
pop ebx
sub_40d7ba
sub esp 0x28
push ebx
push ebp
push esi
mov ebp ecx
lea eax [ esp + 0x14 ]
push edi
push 0x20
push [ esp + 0x40 ]
mov esi [ ebp + 0x4 ]
sub esi 0x6
mov [ esp + 0x18 ] ebp
push eax
mov [ esp + 0x20 ] esi
call sub_41ee90
add esp 0xc
xor ebx ebx
xor edi edi
xor edx edx
test esi esi
jle r-xdata
cmp ebx [ ebp + 0x4 ]
jg r-xdata
cmp ebx [ ebp + 0x4 ]
jg r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn 0x4
mov edx rw-data
cmp edx esi
jge r-xdata
lea ecx [ esp + 0x1c ]
mov [ esp + 0x3c ] 0x3
cmp esi 0x1
jle r-xdata
cmp edi 0x4
jne r-xdata
lea ebp [ esp + 0x18 ]
lea ebp [ ebp + edx * 4 ]
mov al [ ecx - 0x4 ]
xor [ ecx ] al
inc ecx
sub edx 0x1
jne r-xdata
sub [ esp + 0x3c ] 0x1
jne r-xdata
xor edx edx
test esi esi
jle r-xdata
lea eax [ esi - 0x1 ]
lea edx [ esp + 0x1c ]
mov [ esp + 0x3c ] eax
cmp edx esi
jl r-xdata
inc ebx
xor edi edi
mov ebp [ esp + 0x10 ]
mov esi [ esp + 0x10 ]
lea ecx [ edi + ebx * 4 ]
mov eax [ ebp ]
inc edx
add ebp 0x4
inc edi
mov [ esi + ecx * 4 + 0x18 ] eax
mov esi [ esp + 0x14 ]
cmp edx esi
jl r-xdata
push 0x4
pop edx
movzx eax [ esp + 0x24 ]
lea ecx [ esp + 0x2c ]
mov [ esp + 0x3c ] 0x3
mov al [ eax + rw-data ]
xor [ esp + 0x28 ] al
movzx eax [ esp + 0x25 ]
mov al [ eax + rw-data ]
xor [ esp + 0x29 ] al
movzx eax [ esp + 0x26 ]
mov al [ eax + rw-data ]
xor [ esp + 0x2a ] al
movzx eax [ esp + 0x27 ]
mov al [ eax + rw-data ]
xor [ esp + 0x2b ] al
cmp ebx [ ebp + 0x4 ]
cmp ebx [ ebp + 0x4 ]
jg r-xdata
mov al [ edx + ecx - 0x4 ]
xor [ edx + ecx ] al
inc ecx
cmp ecx 0x4
jl r-xdata
add edx 0x4
sub [ esp + 0x3c ] 0x1
jne r-xdata
cmp edi 0x4
jge r-xdata
mov al [ ecx - 0x4 ]
xor [ ecx ] al
inc ecx
sub edx 0x1
jne r-xdata
sub [ esp + 0x3c ] 0x1
jne r-xdata
movzx eax [ esp + esi * 4 + 0x15 ]
mov cl [ esp + 0x18 ]
xor cl [ eax + rw-data ]
mov [ esp + 0x18 ] cl
movzx eax [ esp + esi * 4 + 0x16 ]
mov al [ eax + rw-data ]
xor [ esp + 0x19 ] al
movzx eax [ esp + esi * 4 + 0x17 ]
mov al [ eax + rw-data ]
xor [ esp + 0x1a ] al
movzx eax [ esp + esi * 4 + 0x14 ]
mov al [ eax + rw-data ]
xor [ esp + 0x1b ] al
mov al [ edx ]
xor [ esp + 0x18 ] al
inc edx
mov [ esp + 0x14 ] edx
cmp esi 0x8
je r-xdata
mov edx [ esp + 0x14 ]
jle r-xdata
cmp edx esi
jge r-xdata
xor ecx ecx
jmp r-xdata
push 0x4
pop edx
cmp edi 0x4
lea eax [ esp + 0x18 ]
lea eax [ eax + edx * 4 ]
mov [ esp + 0x3c ] eax
cmp edx esi
jl r-xdata
inc ebx
xor edi edi
jne r-xdata
mov eax [ eax ]
lea ecx [ edi + ebx * 4 ]
mov [ ebp + ecx * 4 + 0x18 ] eax
inc edx
mov eax [ esp + 0x3c ]
add eax 0x4
inc edi
mov [ esp + 0x3c ] eax
cmp edx esi
jl r-xdata
cmp edi 0x4
jge r-xdata
sub_40d9d3
push ebp
mov ebp esp
sub esp 0x200
lea eax [ ebp - 0x100 ]
push esi
mov esi 0x80
push esi
push eax
call sub_40da58
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x200 ]
push esi
push eax
call sub_40da58
lea eax [ ebp - 0x200 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
call sub_4216e0
mov edx eax
mov eax esi
neg edx
pop ecx
pop ecx
sbb dl dl
lea ecx [ ebp - 0x100 ]
inc dl
mov [ ecx ] 0x0
inc ecx
sub eax 0x1
jne r-xdata
lea eax [ ebp - 0x200 ]
mov [ eax ] 0x0
inc eax
sub esi 0x1
jne r-xdata
mov al dl
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40da58
cmp [ ecx + 0x100 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
xor ecx ecx
mov [ eax ] cx
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
push 0x0
push edi
push esi
push 0x80
push ecx
call sub_40dacf
xor eax eax
mov [ esi + edi * 2 - 0x2 ] ax
pop edi
pop esi
jmp r-xdata
retn 0x8
sub_40da91
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0x0
jne r-xdata
pop edi
retn
push r--data
call sub_40e9b3
mov [ edi ] eax
test eax eax
je r-xdata
mov [ edi + 0x4 ] 0x1
push r--data
push eax
call [ GetProcAddress@IAT ]
push r--data
push [ edi ]
mov [ edi + 0x8 ] eax
call [ GetProcAddress@IAT ]
mov [ edi + 0xc ] eax
sub_40dacf
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi ecx
cmp eax esi
jb r-xdata
add eax eax
push eax
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
call sub_41ee90
movzx eax [ edi + 0x101 ]
add esp 0xc
push eax
push [ ebp + 0x18 ]
lea eax [ esi + esi ]
push eax
push [ ebp + 0x10 ]
call sub_40db10
pop edi
pop esi
pop ebp
retn 0x14
mov eax esi
sub_40db10
push ebp
mov ebp esp
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
mov eax esi
and eax 0xf
mov edx esi
sub edx eax
xor eax eax
cmp [ ebp + 0x14 ] al
setne al
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx rw-data
call sub_40da91
mov ecx [ rw-data ]
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
push ebx
call [ GetCurrentProcessId@IAT ]
xor edx edx
mov ebx eax
test esi esi
je r-xdata
push eax
push edx
push [ ebp + 0x8 ]
call ecx
test eax eax
jne r-xdata
push eax
push edx
push [ ebp + 0x8 ]
call ecx
test eax eax
jne r-xdata
pop ebx
push edi
mov edi [ ebp + 0x8 ]
add bl 0x4b
pop esi
pop ebp
retn 0x10
push r--data
jmp r-xdata
push r--data
lea ecx [ edx + edi ]
lea eax [ edx + ebx ]
xor [ ecx ] al
inc edx
cmp edx esi
jb r-xdata
pop edi
mov esi rw-data
push esi
call sub_4069e4
pop ecx
pop ecx
mov ecx esi
call sub_420f99
push 0x2
mov ecx esi
call j_sub_406b14
jmp r-xdata
sub_40dbc1
push esi
push edi
mov edi [ esp + 0xc ]
xor eax eax
mov esi ecx
cmp [ edi ] ax
jne r-xdata
push 0x1
push 0x80
push esi
push edi
mov [ esi + 0x100 ] 0x1
call sub_4216b5
pop ecx
inc eax
mov ecx esi
push eax
push edi
call sub_40dacf
push 0x100
push eax
push esi
mov [ esi + 0x100 ] al
call sub_41d1e0
add esp 0xc
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_40dc24
sub esp 0x18
cmp [ esp + 0x28 ] 0x0
push ebx
push ebp
push esi
push edi
je r-xdata
mov ebp [ esp + 0x34 ]
mov [ esp + 0x30 ] ebp
mov ebp [ esp + 0x30 ]
push 0x40
push [ esp + 0x38 ]
push ebp
call sub_41ee90
add esp 0xc
jmp r-xdata
mov esi [ esp + 0x2c ]
lea edi [ esp + 0x14 ]
mov ecx ebx
mov eax rw-data
[ edi ] [ esi ]
mov ecx ebp
mov [ esp + 0x38 ] eax
mov [ esp + 0x34 ] ecx
mov ebp rw-data
xor ecx ecx
mov esi rw-data
cmp [ rw-data ] 0x0
push 0x5
pop ebx
jne r-xdata
mov eax [ ecx ]
mov ebx eax
mov edi [ ebp - 0x8 ]
rol eax 0x8
and eax 0xff00ff
mov esi [ ebp + 0x4 ]
ror ebx 0x8
and ebx 0xff00ff00
or ebx eax
mov eax [ ebp ]
mov [ ecx ] ebx
mov edx [ esp + eax * 4 + 0x14 ]
mov eax [ ebp - 0xc ]
mov ecx [ esp + eax * 4 + 0x14 ]
mov eax [ ebp - 0x4 ]
add ebp 0x14
rol ecx 0x5
add ecx 0x5a827999
add ecx ebx
mov eax [ esp + eax * 4 + 0x14 ]
xor eax edx
and eax [ esp + edi * 4 + 0x14 ]
xor eax edx
add eax ecx
mov ecx [ esp + 0x34 ]
add [ esp + esi * 4 + 0x14 ] eax
add ecx 0x4
ror [ esp + edi * 4 + 0x14 ] 0x2
mov edi rw-data
mov [ esp + 0x34 ] ecx
cmp ebp edi
jl r-xdata
mov ebp [ esp + 0x30 ]
push 0x10
pop eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x34 ] rw-data
push 0x4
pop ecx
dec ecx
jmp r-xdata
lea edx [ eax - 0x3 ]
mov esi eax
lea ecx [ edx - 0x5 ]
and esi 0xf
and ecx 0xf
lea eax [ edx + 0x5 ]
and eax 0xf
and edx 0xf
mov ebx [ ebp + ecx * 4 ]
xor ebx [ ebp + eax * 4 ]
mov eax [ edi ]
xor ebx [ ebp + edx * 4 ]
xor ebx [ ebp + esi * 4 ]
mov edi [ edi - 0x8 ]
mov edx [ esp + eax * 4 + 0x14 ]
mov eax [ esp + 0x38 ]
rol ebx 0x1
mov [ ebp + esi * 4 ] ebx
mov esi [ eax + 0x4 ]
mov eax [ eax - 0xc ]
mov ecx [ esp + eax * 4 + 0x14 ]
mov eax [ esp + 0x38 ]
rol ecx 0x5
add ecx 0x5a827999
add ecx ebx
mov eax [ eax - 0x4 ]
mov eax [ esp + eax * 4 + 0x14 ]
xor eax edx
and eax [ esp + edi * 4 + 0x14 ]
xor eax edx
add eax ecx
add [ esp + esi * 4 + 0x14 ] eax
ror [ esp + edi * 4 + 0x14 ] 0x2
mov edi [ esp + 0x38 ]
mov eax [ esp + 0x10 ]
add edi 0x14
inc eax
mov [ esp + 0x38 ] edi
mov [ esp + 0x10 ] eax
cmp edi rw-data
jl r-xdata
push 0x14
pop ecx
mov [ esp + 0x38 ] ecx
lea eax [ ecx + 0x1 ]
mov [ esi - 0x4 ] ecx
cdq
idiv ebx
lea eax [ ecx + 0x2 ]
mov [ esi ] edx
cdq
idiv ebx
lea eax [ ecx + 0x3 ]
mov [ esi + 0x4 ] edx
cdq
idiv ebx
lea eax [ ecx + 0x4 ]
mov [ esi + 0x8 ] edx
cdq
idiv ebx
mov [ esi + 0xc ] edx
add esi 0x14
test ecx ecx
je r-xdata
mov [ rw-data ] 0x1
cmp esi rw-data
jl r-xdata
lea edx [ ecx - 0x3 ]
mov esi ecx
lea ecx [ edx - 0x5 ]
push 0xf
pop edi
and ecx edi
lea eax [ edx + 0x5 ]
and eax edi
and edx edi
and esi edi
mov ebx [ ebp + ecx * 4 ]
xor ebx [ ebp + eax * 4 ]
mov ecx [ esp + 0x34 ]
xor ebx [ ebp + edx * 4 ]
xor ebx [ ebp + esi * 4 ]
rol ebx 0x1
mov eax [ ecx - 0xc ]
mov edi [ ecx - 0x8 ]
mov [ ebp + esi * 4 ] ebx
mov esi [ ecx + 0x4 ]
mov edx [ esp + eax * 4 + 0x14 ]
mov eax [ ecx - 0x4 ]
mov ecx [ ecx ]
rol edx 0x5
add edx ebx
mov eax [ esp + eax * 4 + 0x14 ]
xor eax [ esp + ecx * 4 + 0x14 ]
xor eax [ esp + edi * 4 + 0x14 ]
mov ecx [ esp + 0x38 ]
add eax 0x6ed9eba1
add eax edx
add [ esp + esi * 4 + 0x14 ] eax
mov eax [ esp + 0x34 ]
ror [ esp + edi * 4 + 0x14 ] 0x2
add eax 0x14
inc ecx
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] ecx
cmp eax rw-data
jl r-xdata
push 0x28
pop eax
mov ebx rw-data
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] ebx
lea edx [ eax - 0x3 ]
mov esi eax
lea ecx [ edx - 0x5 ]
lea eax [ edx + 0x5 ]
push 0xf
pop edi
and ecx edi
and eax edi
and edx edi
and esi edi
mov ecx [ ebp + ecx * 4 ]
xor ecx [ ebp + eax * 4 ]
xor ecx [ ebp + edx * 4 ]
xor ecx [ ebp + esi * 4 ]
mov eax [ ebx ]
rol ecx 0x1
mov [ ebp + esi * 4 ] ecx
mov ebp [ ebx - 0x4 ]
mov esi [ esp + eax * 4 + 0x14 ]
mov ebx [ ebx + 0x8 ]
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0x38 ]
mov edi [ esp + ebp * 4 + 0x14 ]
mov eax [ ecx - 0x8 ]
mov edx [ esp + eax * 4 + 0x14 ]
mov eax [ ecx + 0x4 ]
mov ecx edi
rol edx 0x5
or ecx esi
and edi esi
add edx 0x8f1bbcdc
add edx [ esp + 0x10 ]
mov eax [ esp + eax * 4 + 0x14 ]
and eax ecx
or eax edi
add eax edx
add [ esp + ebx * 4 + 0x14 ] eax
mov ebx [ esp + 0x38 ]
ror [ esp + ebp * 4 + 0x14 ] 0x2
add ebx 0x14
mov eax [ esp + 0x34 ]
mov ebp [ esp + 0x30 ]
inc eax
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] ebx
cmp ebx rw-data
jl r-xdata
push 0x3c
pop ecx
mov eax rw-data
mov [ esp + 0x34 ] ecx
mov [ esp + 0x38 ] eax
lea edx [ ecx - 0x3 ]
mov esi ecx
lea ecx [ edx - 0x5 ]
push 0xf
pop edi
and ecx edi
lea eax [ edx + 0x5 ]
and eax edi
and edx edi
and esi edi
mov ebx [ ebp + ecx * 4 ]
xor ebx [ ebp + eax * 4 ]
mov ecx [ esp + 0x38 ]
xor ebx [ ebp + edx * 4 ]
xor ebx [ ebp + esi * 4 ]
rol ebx 0x1
mov eax [ ecx - 0xc ]
mov edi [ ecx - 0x8 ]
mov [ ebp + esi * 4 ] ebx
mov esi [ ecx + 0x4 ]
mov edx [ esp + eax * 4 + 0x14 ]
mov eax [ ecx - 0x4 ]
mov ecx [ ecx ]
rol edx 0x5
add edx ebx
mov eax [ esp + eax * 4 + 0x14 ]
xor eax [ esp + ecx * 4 + 0x14 ]
xor eax [ esp + edi * 4 + 0x14 ]
mov ecx [ esp + 0x34 ]
add eax 0xca62c1d6
add eax edx
add [ esp + esi * 4 + 0x14 ] eax
mov eax [ esp + 0x38 ]
ror [ esp + edi * 4 + 0x14 ] 0x2
add eax 0x14
inc ecx
mov [ esp + 0x38 ] eax
mov [ esp + 0x34 ] ecx
cmp eax rw-data
jl r-xdata
mov ecx [ esp + 0x2c ]
lea edx [ esp + 0x14 ]
push 0x5
sub edx ecx
pop esi
mov eax [ edx + ecx ]
add [ ecx ] eax
lea ecx [ ecx + 0x4 ]
sub esi 0x1
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn 0x10
sub_40dfac
push ebp
mov ebp esp
sub esp 0xc
xor edx edx
push esi
mov esi [ ebp + 0x8 ]
mov eax edx
and eax 0x3
push 0x3
pop ecx
sub ecx eax
shl ecx 0x3
cmp edx 0x4
sbb eax eax
neg eax
mov eax [ esi + eax * 4 + 0x14 ]
shr eax cl
mov [ ebp + edx - 0xc ] al
inc edx
cmp edx 0x8
jb r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
lea eax [ ebp + 0xb ]
push edi
push ebx
push 0x1
push eax
push esi
mov [ ebp - 0x4 ] edx
mov [ ebp + 0xb ] 0x80
call sub_40e0c9
lea edi [ esi + 0x14 ]
jmp r-xdata
mov eax [ edi ]
and eax 0x1f8
push ebx
cmp eax 0x1c0
jne r-xdata
push 0x1
lea eax [ ebp + 0xb ]
mov [ ebp + 0xb ] 0x0
push eax
push esi
call sub_40e0c9
push 0x8
lea eax [ ebp - 0xc ]
push eax
push esi
call sub_40e0c9
mov edx [ ebp + 0xc ]
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov eax [ esi + ecx * 4 ]
mov [ edx + ecx * 4 ] eax
mov ecx [ ebp - 0x4 ]
inc ecx
mov [ ebp - 0x4 ] ecx
cmp ecx 0x5
jb r-xdata
push 0x4
lea eax [ ebp - 0x4 ]
push eax
call sub_40dc0c
push 0x4
lea eax [ ebp + 0x10 ]
push eax
call sub_40dc0c
push 0x40
lea eax [ esi + 0x1c ]
push eax
call sub_40dc0c
push 0x14
push esi
call sub_40dc0c
push 0x8
push edi
call sub_40dc0c
push 0x8
lea eax [ ebp - 0xc ]
push eax
call sub_40dc0c
pop edi
test bl bl
pop ebx
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0xc
push 0x40
lea eax [ esi + 0x5c ]
push 0x0
push eax
call sub_41d1e0
add esp 0xc
sub_40e0c9
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x18 ]
mov ecx edi
shl ecx 0x3
mov eax [ esi + 0x14 ]
mov edx eax
shr edx 0x3
add eax ecx
and edx 0x3f
mov [ esi + 0x14 ] eax
cmp eax ecx
jae r-xdata
mov eax edi
shr eax 0x1d
add [ esi + 0x18 ] eax
lea eax [ edx + edi ]
cmp eax 0x3f
jbe r-xdata
inc [ esi + 0x18 ]
xor ebx ebx
push ebp
push 0x40
pop ebx
sub ebx edx
lea eax [ esi + 0x1c ]
push ebx
push [ esp + 0x1c ]
add eax edx
push eax
call sub_41ee90
add esp 0xc
lea eax [ esi + 0x1c ]
lea ecx [ esi + 0x5c ]
push [ esp + 0x20 ]
push eax
push ecx
push esi
call sub_40dc24
lea ebp [ ebx + 0x3f ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x10
mov eax [ esp + 0x14 ]
sub edi ebx
add eax ebx
push edi
push eax
lea eax [ esi + 0x1c ]
add eax edx
push eax
call sub_41ee90
add esp 0xc
cmp ebp edi
jb r-xdata
push [ esp + 0x20 ]
mov eax [ esp + 0x1c ]
add eax 0xffffffc1
add eax ebp
push eax
lea eax [ esi + 0x5c ]
push eax
push esi
call sub_40dc24
add ebx 0x40
add ebp 0x40
xor edx edx
pop ebp
jmp r-xdata
cmp edi ebx
jbe r-xdata
sub_40e17b
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
mov ebx [ edi + 0x20 ]
lea eax [ edi + 0x2c ]
mov ebp [ edi + 0x24 ]
mov esi [ edi + 0x20 ]
shld ebp ebx 0x3
mov [ edi + 0x28 ] eax
shl ebx 0x3
and esi 0x3f
mov [ esi + edi + 0x2c ] 0x80
jmp r-xdata
inc esi
cmp esi 0x38
jne r-xdata
and esi 0x3f
jne r-xdata
lea ecx [ edi + 0x2c ]
push 0x8
add ecx esi
pop edx
mov [ eax + esi ] 0x0
push edi
call sub_40e2e1
lea eax [ edi + 0x2c ]
mov eax ebp
shr eax 0x18
shld ebp ebx 0x8
mov [ ecx ] al
inc ecx
shl ebx 0x8
sub edx 0x1
jne r-xdata
push edi
call sub_40e2e1
mov esi [ esp + 0x18 ]
xor edx edx
mov eax edx
and eax 0x3
push 0x3
pop ecx
sub ecx eax
mov eax edx
shr eax 0x2
shl ecx 0x3
mov eax [ edi + eax * 4 ]
shr eax cl
mov [ edx + esi ] al
inc edx
cmp edx 0x20
jb r-xdata
push edi
call sub_40e222
push 0x0
call sub_40e2e1
push 0x40
lea eax [ edi + 0x2c ]
push eax
call sub_40dc0c
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
sub_40e268
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi [ esp + 0x10 ]
mov ebx [ esi + 0x20 ]
and ebx 0x3f
add [ esi + 0x20 ] ebp
adc [ esi + 0x24 ] 0x0
test ebp ebp
je r-xdata
push 0x0
call sub_40e2e1
pop esi
pop ebp
pop ebx
retn 0xc
push edi
cmp edi 0x40
jne r-xdata
mov edi ebp
lea eax [ esi + 0x2c ]
push edi
push [ esp + 0x1c ]
mov [ esi + 0x28 ] eax
add eax ebx
push eax
call sub_41ee90
mov eax [ esp + 0x24 ]
add esp 0xc
mov eax [ esp + 0x18 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
test ebp ebp
jne r-xdata
push esi
xor ebx ebx
call sub_40e2e1
add eax edi
add ebx edi
sub ebp edi
mov [ esp + 0x18 ] eax
cmp ebx 0x40
jne r-xdata
push 0x40
pop edi
sub edi ebx
cmp ebp edi
ja r-xdata
pop edi
sub_40e2e1
sub esp 0x140
push edi
mov edi [ esp + 0x148 ]
test edi edi
jne r-xdata
mov eax [ edi + 0x28 ]
push ebx
push ebp
push esi
push [ eax ]
call sub_422ce8
mov [ esp + 0x34 ] eax
mov eax [ edi + 0x28 ]
push [ eax + 0x4 ]
call sub_422ce8
mov [ esp + 0x3c ] eax
mov eax [ edi + 0x28 ]
push [ eax + 0x8 ]
call sub_422ce8
mov [ esp + 0x44 ] eax
mov eax [ edi + 0x28 ]
push [ eax + 0xc ]
call sub_422ce8
mov [ esp + 0x4c ] eax
mov eax [ edi + 0x28 ]
push [ eax + 0x10 ]
call sub_422ce8
mov [ esp + 0x54 ] eax
mov eax [ edi + 0x28 ]
push [ eax + 0x14 ]
call sub_422ce8
mov [ esp + 0x5c ] eax
mov eax [ edi + 0x28 ]
push [ eax + 0x18 ]
call sub_422ce8
mov [ esp + 0x64 ] eax
mov eax [ edi + 0x28 ]
push [ eax + 0x1c ]
call sub_422ce8
mov [ esp + 0x6c ] eax
mov eax [ edi + 0x28 ]
push [ eax + 0x20 ]
call sub_422ce8
mov [ esp + 0x74 ] eax
mov eax [ edi + 0x28 ]
push [ eax + 0x24 ]
call sub_422ce8
mov [ esp + 0x7c ] eax
mov eax [ edi + 0x28 ]
push [ eax + 0x28 ]
call sub_422ce8
mov [ esp + 0x84 ] eax
mov eax [ edi + 0x28 ]
push [ eax + 0x2c ]
call sub_422ce8
mov [ esp + 0x8c ] eax
mov eax [ edi + 0x28 ]
push 0x30
pop ebp
push [ eax + ebp ]
call sub_422ce8
mov [ esp + 0x94 ] eax
mov eax [ edi + 0x28 ]
push [ eax + 0x34 ]
call sub_422ce8
mov [ esp + 0x9c ] eax
mov eax [ edi + 0x28 ]
push [ eax + 0x38 ]
call sub_422ce8
mov [ esp + 0xa4 ] eax
mov eax [ edi + 0x28 ]
push [ eax + 0x3c ]
call sub_422ce8
add esp 0x40
mov [ esp + 0x6c ] eax
lea ebx [ esp + 0x68 ]
push 0x20
lea eax [ esp + 0x128 ]
push eax
call sub_40dc0c
push 0x100
lea eax [ esp + 0x28 ]
push eax
call sub_40dc0c
jmp r-xdata
mov ecx [ ebx - 0x34 ]
mov esi ecx
mov edx [ ebx ]
mov eax ecx
rol esi 0xe
lea ebx [ ebx + 0x4 ]
ror eax 0x7
xor esi eax
shr ecx 0x3
xor esi ecx
mov eax edx
mov ecx edx
rol eax 0xd
rol ecx 0xf
xor ecx eax
shr edx 0xa
xor ecx edx
add esi ecx
add esi [ ebx - 0x3c ]
add esi [ ebx - 0x18 ]
mov [ ebx + 0x4 ] esi
sub ebp 0x1
jne r-xdata
mov eax [ edi ]
xor edx edx
mov ebx [ edi + 0x10 ]
mov ebp eax
mov [ esp + 0x2c ] eax
mov eax [ edi + 0x4 ]
mov [ esp + 0x1c ] eax
mov eax [ edi + 0x8 ]
mov [ esp + 0x18 ] eax
mov eax [ edi + 0xc ]
mov [ esp + 0x20 ] eax
mov eax [ edi + 0x14 ]
mov [ esp + 0x10 ] eax
mov eax [ edi + 0x18 ]
mov [ esp + 0x14 ] eax
mov eax [ edi + 0x1c ]
mov edi [ esp + 0x1c ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] edx
pop edi
add esp 0x140
retn 0x4
mov esi ebx
mov eax ebx
rol eax 0x7
mov ecx ebx
ror esi 0xb
not ecx
and ecx [ esp + 0x14 ]
xor esi eax
mov eax ebx
ror eax 0x6
xor esi eax
mov eax [ esp + 0x10 ]
and eax ebx
xor ecx eax
mov eax [ esp + 0x14 ]
add esi ecx
add esi [ edx + r--data ]
add esi [ esp + edx + 0x30 ]
mov edx ebp
add esi [ esp + 0x24 ]
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x14 ] eax
mov eax ebp
rol eax 0xa
ror edx 0xd
xor edx eax
mov [ esp + 0x10 ] ebx
mov ebx [ esp + 0x20 ]
mov eax ebp
ror eax 0x2
add ebx esi
xor edx eax
mov eax [ esp + 0x18 ]
mov ecx eax
and eax edi
xor ecx edi
and ecx ebp
xor ecx eax
mov eax [ esp + 0x18 ]
add edx ecx
mov [ esp + 0x20 ] eax
mov ecx edi
mov edi ebp
mov [ esp + 0x18 ] ecx
lea ebp [ edx + esi ]
mov edx [ esp + 0x28 ]
add edx 0x4
mov [ esp + 0x28 ] edx
cmp edx 0x100
jb r-xdata
mov eax [ esp + 0x2c ]
mov [ esp + 0x1c ] edi
add eax ebp
mov edi [ esp + 0x154 ]
pop esi
pop ebp
add [ edi + 0x8 ] ecx
mov ecx [ esp + 0x18 ]
add [ edi + 0xc ] ecx
mov ecx [ esp + 0x8 ]
add [ edi + 0x14 ] ecx
mov ecx [ esp + 0xc ]
add [ edi + 0x18 ] ecx
add [ edi + 0x10 ] ebx
mov ecx [ esp + 0x1c ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
add [ edi + 0x4 ] eax
add [ edi + 0x1c ] ecx
pop ebx
sub_40e57d
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
cmp [ ebp + 0x14 ] ecx
jg r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push ecx
push eax
call sub_40e5a8
jl r-xdata
push 0x64
pop eax
jmp r-xdata
cmp [ ebp + 0x10 ] eax
jae r-xdata
pop ebp
retn 0x10
sub_40e5a8
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
or eax [ ebp + 0x14 ]
je r-xdata
pop ebp
retn 0x10
push 0x0
push 0x64
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c6c0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edx
push eax
call sub_41c190
sub_40e5d3
push ebp
mov ebp esp
sub esp 0x800
cmp [ ebp + 0x14 ] 0x2
push esi
push edi
jne r-xdata
cmp [ ebp + 0x14 ] 0x1
jne r-xdata
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
push esi
push edi
push [ ebp + 0x8 ]
call sub_40fd55
jmp r-xdata
mov eax [ ebp + 0x8 ]
push 0x800
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0x8 ]
call sub_40e6f0
lea eax [ ebp - 0x800 ]
jmp r-xdata
test esi esi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ edi + esi * 2 - 0x2 ] ax
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
push esi
push edi
push eax
call sub_40fc9f
sub_40e63c
push esi
mov esi [ esp + 0x8 ]
push edi
jmp r-xdata
movzx eax [ esi ]
push eax
call sub_40e733
test al al
jne r-xdata
add esi 0x2
movzx edi [ esi ]
test di di
jne r-xdata
push ebx
push ebp
mov ebp [ esp + 0x18 ]
xor ebx ebx
mov al bl
push 0x22
mov [ esp + 0x18 ] al
pop edx
xor eax eax
jmp r-xdata
cmp di dx
jne r-xdata
movzx eax di
push eax
call sub_40e733
test al al
jne r-xdata
pop edi
pop esi
retn 0xc
test ebp ebp
je r-xdata
cmp [ esi + 0x2 ] dx
jne r-xdata
test ebp ebp
je r-xdata
mov al [ esp + 0x14 ]
push 0x22
pop edx
add esi 0x2
movzx edi [ esi ]
test di di
jne r-xdata
mov eax [ esp + 0x1c ]
dec eax
cmp ebx eax
jae r-xdata
test al al
sete al
mov [ esp + 0x14 ] al
jmp r-xdata
test ebp ebp
je r-xdata
pop ebp
mov eax esi
pop ebx
xor eax eax
mov [ ebp + ebx * 2 ] ax
test al al
jne r-xdata
mov al [ esp + 0x14 ]
mov [ ebp + ebx * 2 ] di
inc ebx
add esi 0x2
jmp r-xdata
mov eax [ esp + 0x1c ]
dec eax
cmp ebx eax
jae r-xdata
mov [ ebp + ebx * 2 ] dx
inc ebx
sub_40e6f0
push esi
push edi
push [ esp + 0xc ]
call sub_421720
mov edi [ esp + 0x18 ]
inc eax
pop ecx
cmp edi eax
jbe r-xdata
mov esi [ esp + 0x10 ]
push edi
push esi
push [ esp + 0x14 ]
call [ OemToCharBuffA@IAT ]
mov [ esi + edi - 0x1 ] 0x0
pop edi
pop esi
retn 0xc
mov edi eax
sub_40e767
sub esp 0x74
mov edx [ esp + 0x7c ]
xor ecx ecx
push ebx
mov ebx [ esp + 0x7c ]
inc ecx
push ebp
push esi
xor esi esi
mov [ esp + 0xc ] ecx
push edi
mov edi esi
cmp edx esi
jg r-xdata
mov ebp esi
mov [ esp + 0x14 ] esi
jl r-xdata
mov ebp [ esp + 0x14 ]
test ebp ebp
je r-xdata
push esi
push 0xa
push edx
push ebx
call sub_41c700
add ecx 0x30
mov [ esp + 0x1c ] ebx
mov [ esp + edi * 2 + 0x20 ] cx
mov ebx eax
mov ecx [ esp + 0x10 ]
inc edi
inc ecx
or eax edx
mov [ esp + 0x10 ] ecx
jne r-xdata
neg ebx
mov ebp ecx
mov [ esp + 0x14 ] ebp
adc edx esi
neg edx
jmp r-xdata
cmp ebx esi
jae r-xdata
mov edx [ esp + 0x90 ]
test edi edi
je r-xdata
push 0x2d
pop eax
mov [ esp + edi * 2 + 0x20 ] ax
inc edi
cmp ecx ebp
jae r-xdata
sub [ esp + 0x94 ] ebp
mov ebp [ esp + 0x94 ]
xor eax eax
mov [ edx + edi * 2 ] ax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x74
retn 0x10
lea ecx [ esp + edi * 2 + 0x1e ]
mov ax [ ecx ]
lea ecx [ ecx - 0x2 ]
mov [ edx + esi * 2 ] ax
inc esi
cmp esi edi
jb r-xdata
sub_40e81b
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4216b5
pop ecx
mov ecx [ ebp + 0x10 ]
sub ecx eax
dec ecx
test ecx ecx
jle r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn 0xc
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4230d4
add esp 0xc
sub_40e847
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0xc ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
retn 0xc
lea ecx [ esi - 0x1 ]
push ecx
push [ esp + 0x14 ]
push edi
call sub_422b91
add esp 0xc
xor eax eax
mov [ edi + esi * 2 - 0x2 ] ax
sub_40e874
push ecx
push esi
mov esi ecx
xor eax eax
mov [ esp + 0x4 ] esi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
call sub_40e946
mov eax esi
pop esi
pop ecx
retn
sub_40e893
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov ebx ecx
test edi edi
jne r-xdata
mov esi [ ebx + 0x4 ]
push edi
call sub_4216b5
pop ecx
inc eax
mov ecx ebx
push eax
call sub_4018b1
mov eax [ ebx ]
push edi
lea eax [ eax + esi * 2 ]
push eax
call sub_421693
inc [ ebx + 0x14 ]
pop ecx
pop ecx
pop edi
pop esi
pop ebx
retn 0x4
mov edi r--data
sub_40e8e3
push esi
mov esi ecx
mov ecx [ esi + 0x10 ]
cmp ecx [ esi + 0x4 ]
jb r-xdata
mov eax [ esi ]
push edi
lea edi [ eax + ecx * 2 ]
push edi
call sub_4216b5
inc eax
add [ esi + 0x10 ] eax
mov eax [ esp + 0x10 ]
pop ecx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
mov al 0x1
pop edi
mov [ eax ] edi
xor al al
jmp r-xdata
and [ eax ] 0x0
pop esi
retn 0x4
sub_40e91f
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
call sub_40e8e3
test al al
je r-xdata
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_40e847
mov al 0x1
sub_40e961
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor eax eax
xor ecx ecx
push esi
lea esi [ ebp - 0x10 ]
inc eax
cpuid
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edx
test [ ebp - 0x8 ] 0x80000
pop esi
pop ebx
je r-xdata
test [ ebp - 0x8 ] 0x200
je r-xdata
push 0x4
mov eax [ ebp - 0x4 ]
test eax 0x4000000
je r-xdata
push 0x3
jmp r-xdata
mov esp ebp
pop ebp
retn
shr eax 0x19
and eax 0x1
push 0x2
jmp r-xdata
pop eax
jmp r-xdata
sub_40e9b3
push ebp
mov ebp esp
mov eax 0x1000
call sub_41c240
push esi
mov esi 0x800
lea eax [ ebp - 0x1000 ]
push esi
push eax
call [ GetSystemDirectoryW@IAT ]
test eax eax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
lea eax [ ebp - 0x1000 ]
push eax
push [ ebp + 0x8 ]
push eax
call sub_40af10
lea eax [ ebp - 0x1000 ]
push eax
call [ LoadLibraryW@IAT ]
sub_40e9fd
mov eax 0xb3cc
call sub_41c240
push ebx
push ebp
push esi
push edi
push r--data
mov [ esp + 0x17 ] 0x0
call [ GetModuleHandleW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ rw-data ]
or ebp 0xffffffff
mov ebx [ GetModuleFileNameW@IAT ]
mov esi 0x800
mov [ esp + 0x18 ] r--data
mov [ esp + 0x1c ] r--data
cmp [ eax ] 0x78
mov [ esp + 0x20 ] r--data
mov [ esp + 0x24 ] r--data
mov [ esp + 0x28 ] r--data
mov [ esp + 0x2c ] r--data
mov [ esp + 0x30 ] r--data
mov [ esp + 0x34 ] r--data
mov [ esp + 0x38 ] r--data
mov [ esp + 0x3c ] r--data
mov [ esp + 0x40 ] r--data
mov [ esp + 0x44 ] r--data
mov [ esp + 0x48 ] r--data
mov [ esp + 0x4c ] r--data
mov [ esp + 0x50 ] r--data
mov [ esp + 0x54 ] r--data
mov [ esp + 0x58 ] r--data
mov [ esp + 0x5c ] r--data
mov [ esp + 0x60 ] r--data
mov [ esp + 0x64 ] r--data
mov [ esp + 0x68 ] r--data
mov [ esp + 0x6c ] r--data
mov [ esp + 0x70 ] r--data
mov [ esp + 0x74 ] r--data
mov [ esp + 0x78 ] r--data
mov [ esp + 0x7c ] r--data
mov [ esp + 0x80 ] r--data
mov [ esp + 0x84 ] r--data
mov [ esp + 0x88 ] r--data
mov [ esp + 0x8c ] r--data
mov [ esp + 0x90 ] r--data
mov [ esp + 0x94 ] r--data
mov [ esp + 0x98 ] r--data
mov [ esp + 0x9c ] r--data
mov [ esp + 0xa0 ] r--data
mov [ esp + 0xa4 ] r--data
mov [ esp + 0xa8 ] r--data
mov [ esp + 0xac ] r--data
mov [ esp + 0xb0 ] r--data
mov [ esp + 0xb4 ] r--data
mov [ esp + 0xb8 ] r--data
mov [ esp + 0xbc ] r--data
mov [ esp + 0xc0 ] r--data
mov [ esp + 0xc4 ] r--data
mov [ esp + 0xc8 ] r--data
mov [ esp + 0xcc ] r--data
mov [ esp + 0xd0 ] r--data
mov [ esp + 0xd4 ] r--data
mov [ esp + 0xd8 ] r--data
mov [ esp + 0xdc ] r--data
mov [ esp + 0xe0 ] r--data
mov [ esp + 0xe4 ] r--data
mov [ esp + 0xe8 ] r--data
mov [ esp + 0xec ] r--data
mov [ esp + 0xf0 ] r--data
mov [ esp + 0xf4 ] r--data
mov [ esp + 0xf8 ] r--data
mov [ esp + 0xfc ] r--data
mov [ esp + 0x100 ] r--data
mov [ esp + 0x104 ] r--data
mov [ esp + 0x108 ] r--data
je r-xdata
mov edi [ GetProcAddress@IAT ]
push r--data
push esi
call edi
mov bl [ esp + 0xb3e0 ]
test eax eax
je r-xdata
push esi
lea eax [ esp + 0x318 ]
push eax
push 0x0
call ebx
push esi
lea eax [ esp + 0x318 ]
push eax
call sub_40b1d0
push eax
lea eax [ esp + 0x23e4 ]
push eax
call sub_40e847
mov ebx [ GetFileAttributesW@IAT ]
xor edi edi
xor esi esi
push eax
call sub_423eea
mov edi eax
pop ecx
test edi edi
je r-xdata
push r--data
push esi
call edi
test eax eax
je r-xdata
movzx ecx bl
neg ecx
sbb ecx ecx
and ecx r--data
push ecx
call eax
xor eax eax
push [ esp + esi * 4 + 0x18 ]
call sub_40e9b3
jmp r-xdata
push esi
lea eax [ esp + 0x1318 ]
push eax
push 0x0
call ebx
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x1
push 0x80000000
lea eax [ esp + 0x132c ]
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi ebp
je r-xdata
xor ecx ecx
test bl bl
sete cl
dec ecx
and ecx 0xfffff800
add ecx 0x1000
push ecx
call eax
mov [ esp + 0x13 ] 0x1
push 0x800
push [ esp + esi * 4 + 0x1c ]
lea eax [ esp + 0x31c ]
push eax
call sub_40b23f
lea eax [ esp + 0x314 ]
push eax
call ebx
cmp eax ebp
jne r-xdata
push ebp
push r--data
push ebp
push [ esp + esi * 4 + 0x24 ]
push 0x1001
push 0x400
call [ CompareStringW@IAT ]
cmp eax 0x2
jne r-xdata
test eax eax
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov esi 0x800
push 0x0
push 0x0
push edi
push esi
call [ SetFilePointer@IAT ]
cmp eax edi
jne r-xdata
mov edi [ esp + esi * 4 + 0x18 ]
inc esi
cmp esi 0x8
jb r-xdata
push 0x0
lea eax [ esp + 0x18 ]
push eax
push 0x7ffe
lea eax [ esp + 0x33e8 ]
push eax
push esi
call [ ReadFile@IAT ]
test eax eax
je r-xdata
test edi edi
je r-xdata
xor esi esi
call sub_40a2fa
cmp eax 0x600
jb r-xdata
jmp r-xdata
mov eax [ esp + 0x14 ]
shr eax 0x1
xor ecx ecx
push 0x104
mov [ esp + eax * 2 + 0x33e0 ] cx
lea eax [ esp + 0x110 ]
push eax
lea eax [ esp + 0x33e4 ]
push eax
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0xb3cc
retn 0x4
lea eax [ esp + 0x314 ]
push eax
call sub_40b213
call sub_40a2fa
cmp eax 0x600
jb r-xdata
mov edi [ esp + esi * 4 + 0x38 ]
inc esi
cmp esi 0x35
jb r-xdata
cmp [ esp + 0x13 ] 0x0
jne r-xdata
call sub_40e63c
mov edi eax
test edi edi
jne r-xdata
lea eax [ esp + 0x23dc ]
push eax
lea eax [ esp + 0x318 ]
push eax
push edi
push r--data
lea eax [ esp + 0x1324 ]
push 0x864
push eax
call sub_403ce2
add esp 0x18
call [ AllocConsole@IAT ]
test eax eax
je r-xdata
push r--data
call sub_40e9b3
push r--data
call sub_40e9b3
lea eax [ esp + 0x23dc ]
push eax
lea eax [ esp + 0x318 ]
push eax
push edi
push 0xf1
call sub_40cd14
push eax
lea eax [ esp + 0x1324 ]
push 0x864
push eax
call sub_403ce2
add esp 0x18
push 0x30
push 0xf0
call sub_40cd14
push eax
lea eax [ esp + 0x131c ]
push eax
push 0x0
call sub_4181fe
jmp r-xdata
push 0x800
push [ esp + esi * 4 + 0x3c ]
lea eax [ esp + 0x31c ]
push eax
call sub_40b23f
lea eax [ esp + 0x314 ]
push eax
call ebx
cmp eax ebp
jne r-xdata
jmp r-xdata
lea eax [ esp + 0x10c ]
push eax
call sub_40e9b3
push 0x104
lea eax [ esp + 0x110 ]
push eax
push edi
push 0x0
call [ ExitProcess@IAT ]
call [ GetCurrentProcessId@IAT ]
push eax
call [ AttachConsole@IAT ]
push 0x0
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x131c ]
push eax
call sub_4216b5
pop ecx
push eax
lea eax [ esp + 0x1320 ]
push eax
push 0xfffffff4
call [ GetStdHandle@IAT ]
push eax
call [ WriteConsoleW@IAT ]
push 0x2710
call [ Sleep@IAT ]
call [ FreeConsole@IAT ]
sub_40ef9c
push esi
push edi
call j_sub_418e03
call sub_40fc78
mov esi 0xff
mov edi rw-data
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push esi
mov ecx edi
call j_sub_406b14
push 0x1
call [ SetThreadExecutionState@IAT ]
pop edi
pop esi
retn
push esi
mov ecx edi
call j_sub_406b14
sub_40efda
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push 0x20
pop edi
mov [ esi ] eax
cmp eax edi
jbe r-xdata
xor ebp ebp
xor ebx ebx
inc ebp
cmp [ esi ] ebx
jne r-xdata
mov [ esi ] edi
mov [ esi + 0x84 ] ebx
cmp [ esi ] edi
jbe r-xdata
mov [ esi ] ebp
lea eax [ esi + 0x1a0 ]
mov [ esi + 0x194 ] bl
push eax
call [ InitializeCriticalSection@IAT ]
push ebx
push edi
push ebx
push ebx
call [ CreateSemaphoreW@IAT ]
push ebx
push ebp
push ebp
push ebx
mov [ esi + 0x198 ] eax
call [ CreateEventW@IAT ]
mov [ esi + 0x19c ] eax
cmp [ esi + 0x198 ] ebx
je r-xdata
mov [ esi ] edi
push r--data
mov edi rw-data
push edi
call sub_4069e4
pop ecx
pop ecx
push 0x2
mov ecx edi
call j_sub_406b14
test eax eax
jne r-xdata
pop edi
mov [ esi + 0x18c ] ebx
mov eax esi
mov [ esi + 0x190 ] ebx
mov [ esi + 0x88 ] ebx
pop esi
pop ebp
pop ebx
retn 0x4
sub_40f07b
push ebp
mov ebp esp
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_42eb81
push eax
mov [ fs : 0x0 ] esp
push ebx
push esi
push edi
mov esi ecx
call sub_40f473
xor edi edi
mov [ esi + 0x194 ] 0x1
push edi
push 0x20
push [ esi + 0x198 ]
call [ ReleaseSemaphore@IAT ]
cmp [ esi + 0x84 ] edi
jbe r-xdata
lea eax [ esi + 0x1a0 ]
push eax
call [ DeleteCriticalSection@IAT ]
push [ esi + 0x198 ]
call [ CloseHandle@IAT ]
push [ esi + 0x19c ]
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
lea ebx [ esi + 0x4 ]
push [ ebx ]
call sub_40f171
push [ ebx ]
call [ CloseHandle@IAT ]
inc edi
lea ebx [ ebx + 0x4 ]
cmp edi [ esi + 0x84 ]
jb r-xdata
sub_40f111
push esi
mov esi ecx
cmp [ esi + 0x84 ] 0x0
jne r-xdata
mov eax [ esi + 0x18c ]
inc eax
and eax 0x1f
cmp eax [ esi + 0x190 ]
jne r-xdata
call sub_40f25b
mov ecx [ esi + 0x18c ]
mov eax [ esp + 0x8 ]
mov [ esi + ecx * 8 + 0x8c ] eax
mov ecx [ esi + 0x18c ]
mov eax [ esp + 0xc ]
mov [ esi + ecx * 8 + 0x90 ] eax
mov eax [ esi + 0x18c ]
inc eax
and eax 0x1f
mov [ esi + 0x18c ] eax
pop esi
retn 0x8
mov ecx esi
call sub_40f473
sub_40f171
push 0xffffffff
push [ esp + 0x8 ]
call [ WaitForSingleObject@IAT ]
cmp eax 0xffffffff
jne r-xdata
retn 0x4
push esi
call [ GetLastError@IAT ]
push eax
push 0xffffffff
push r--data
mov esi rw-data
push esi
call sub_4069e4
add esp 0x10
mov ecx esi
push 0x2
call j_sub_406b14
pop esi
sub_40f1ac
mov eax sub_42ee26
call sub_41c16c
push ecx
push esi
push edi
mov edi rw-data
push edi
call [ EnterCriticalSection@IAT ]
mov ecx [ rw-data ]
xor esi esi
mov eax ecx
inc ecx
mov [ rw-data ] ecx
test eax eax
jne r-xdata
cmp ecx 0x1
jbe r-xdata
push 0x1b8
call sub_41c12b
pop ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] esi
test eax eax
je r-xdata
push edi
call [ LeaveCriticalSection@IAT ]
mov eax [ rw-data ]
push 0x1b8
call sub_41c12b
pop ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov eax esi
push 0x20
mov ecx eax
call sub_40efda
jmp r-xdata
push edi
call [ LeaveCriticalSection@IAT ]
mov eax esi
jmp r-xdata
push 0x20
mov ecx eax
call sub_40efda
mov esi eax
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ rw-data ]
mov [ rw-data ] eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_40f25b
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi ] ebx
jbe r-xdata
pop esi
pop ebx
pop ecx
retn
push ebp
push edi
lea edi [ esi + 0x4 ]
mov [ edi ] ebp
inc [ esi + 0x84 ]
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
push rw-data
call sub_4069e4
pop ecx
pop ecx
mov ecx rw-data
call sub_420f99
push 0x2
mov ecx rw-data
call j_sub_406b14
inc ebx
add edi 0x4
cmp ebx [ esi ]
jb r-xdata
push eax
push [ edi ]
call [ SetThreadPriority@IAT ]
lea eax [ esp + 0x10 ]
push eax
push 0x0
push esi
push sub_40f40b
push 0x10000
push 0x0
call [ CreateThread@IAT ]
mov ebp eax
test ebp ebp
jne r-xdata
pop edi
pop ebp
sub_40f2da
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn 0x4
push ebx
push ebp
push edi
mov ebx rw-data
push ebx
call [ EnterCriticalSection@IAT ]
mov edi [ rw-data ]
mov ebp 0x1b8
cmp esi edi
jne r-xdata
mov ecx esi
call sub_40f07b
push ebp
push esi
call sub_41c15e
pop ecx
pop ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp esi edi
je r-xdata
sub eax 0x1
mov [ rw-data ] eax
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
pop edi
pop ebp
pop ebx
test edi edi
je r-xdata
mov ecx edi
call sub_40f07b
push ebp
push edi
call sub_41c15e
mov edi [ rw-data ]
pop ecx
pop ecx
sub_40f350
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call [ GetProcessAffinityMask@IAT ]
test eax eax
jne r-xdata
xor eax eax
xor ecx ecx
inc eax
push esi
mov esi [ ebp - 0x4 ]
mov edx eax
inc eax
jmp r-xdata
add edx edx
jne r-xdata
inc ecx
mov esp ebp
pop ebp
retn
test esi edx
je r-xdata
pop esi
cmp ecx eax
jb r-xdata
mov eax ecx
sub_40f3a7
push edi
mov edi ecx
push [ edi + 0x198 ]
call sub_40f171
cmp [ edi + 0x194 ] 0x0
je r-xdata
push esi
lea esi [ edi + 0x1a0 ]
push esi
call [ EnterCriticalSection@IAT ]
mov edx [ edi + 0x190 ]
mov ecx [ esp + 0xc ]
push esi
mov eax [ edi + edx * 8 + 0x8c ]
mov [ ecx ] eax
mov eax [ edi + edx * 8 + 0x90 ]
mov [ ecx + 0x4 ] eax
mov eax [ edi + 0x190 ]
inc eax
and eax 0x1f
mov [ edi + 0x190 ] eax
call [ LeaveCriticalSection@IAT ]
mov al 0x1
pop esi
xor al al
jmp r-xdata
pop edi
retn 0x4
sub_40f419
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x8 ]
mov esi ecx
push eax
call sub_40f3a7
test al al
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
push edi
lea edi [ esi + 0x1a0 ]
push edi
call [ LeaveCriticalSection@IAT ]
lea eax [ ebp - 0x8 ]
mov ecx esi
push eax
call sub_40f3a7
test al al
jne r-xdata
push [ esi + 0x19c ]
call [ SetEvent@IAT ]
push [ ebp - 0x4 ]
call [ ebp - 0x8 ]
push edi
call [ EnterCriticalSection@IAT ]
sub [ esi + 0x88 ] 0x1
jne r-xdata
pop edi
sub_40f473
push esi
mov esi ecx
mov eax [ esi + 0x18c ]
sub eax [ esi + 0x190 ]
and eax 0x1f
mov [ esi + 0x88 ] eax
je r-xdata
pop esi
retn
push [ esi + 0x19c ]
call [ ResetEvent@IAT ]
push 0x0
push [ esi + 0x88 ]
push [ esi + 0x198 ]
call [ ReleaseSemaphore@IAT ]
push [ esi + 0x19c ]
call sub_40f171
sub_40f4cd
mov edx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
add edx 0xb6109100
push esi
push 0x0
push 0x989680
adc eax 0x2
mov esi ecx
push eax
push edx
call sub_41c6c0
mov [ esi ] eax
mov eax esi
mov [ esi + 0x4 ] edx
pop esi
retn 0x8
sub_40f4fa
sub esp 0x50
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
push ebx
push ebp
push esi
push edi
mov [ esp + 0x18 ] edx
mov [ esp + 0x1c ] eax
call sub_40a2fa
mov esi [ FileTimeToSystemTime@IAT ]
xor ebx ebx
mov ebp [ SystemTimeToFileTime@IAT ]
cmp eax 0x600
jae r-xdata
lea eax [ esp + 0x40 ]
push eax
lea eax [ esp + 0x1c ]
push eax
call esi
lea eax [ esp + 0x50 ]
push eax
lea eax [ esp + 0x44 ]
push eax
push ebx
call [ SystemTimeToTzSpecificLocalTime@IAT ]
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x54 ]
push eax
call ebp
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x44 ]
push eax
call ebp
mov ecx [ esp + 0x14 ]
xor eax eax
sub eax ebx
sbb ecx [ esp + 0x24 ]
add eax ebx
adc ecx [ esp + 0x1c ]
sub eax [ esp + 0x20 ]
sbb ecx ebx
add eax [ esp + 0x10 ]
adc ecx ebx
add eax [ esp + 0x18 ]
mov [ esp + 0x10 ] eax
adc ecx ebx
mov eax ecx
mov [ esp + 0x14 ] ecx
sar eax 0x1f
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x1c ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
jmp r-xdata
cmp ebx 0x2
jbe r-xdata
push 0x4
mov edx rw-data
pop ecx
lea eax [ esp + 0x30 ]
push eax
lea eax [ esp + 0x14 ]
push eax
call esi
mov esi [ esp + 0x64 ]
xor edi edi
movzx eax [ esp + 0x38 ]
inc edi
movzx ecx [ esp + 0x36 ]
movzx ebx [ esp + 0x32 ]
movzx edx [ esp + 0x30 ]
mov [ esi + 0xc ] eax
movzx eax [ esp + 0x3a ]
mov [ esi + 0x10 ] eax
movzx eax [ esp + 0x3c ]
mov [ esi + 0x14 ] eax
movzx eax [ esp + 0x34 ]
mov [ esi + 0x1c ] eax
lea eax [ ecx - 0x1 ]
mov [ esi ] edx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ esi + 0x20 ] eax
cmp ebx edi
jbe r-xdata
xor eax eax
mov [ esp + 0x3e ] ax
lea eax [ esp + 0x28 ]
push eax
lea eax [ esp + 0x34 ]
push eax
call ebp
mov eax [ esp + 0x2c ]
xor ecx ecx
sub ecx [ esp + 0x28 ]
add ecx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
pop edi
mov [ esi + 0x18 ] ecx
pop esi
pop ebp
pop ebx
add esp 0x50
retn 0x4
push edx
call sub_40f66b
test al al
je r-xdata
movzx edx [ esp + 0x30 ]
mov eax [ edx ]
add ecx 0x4
add [ esi + 0x20 ] eax
add edx 0x4
inc edi
cmp edi ebx
jb r-xdata
inc [ esi + 0x20 ]
cmp ecx 0x30
ja r-xdata
sub_40f66b
test [ esp + 0x4 ] 0x3
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov ecx 0x190
cdq
idiv ecx
test edx edx
jne r-xdata
retn 0x4
sub_40f69a
push ebp
mov ebp esp
sub esp 0x18
push esi
lea eax [ ebp - 0x18 ]
mov esi ecx
push eax
call [ GetSystemTime@IAT ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ SystemTimeToFileTime@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ esi ] eax
mov [ esi + 0x4 ] ecx
pop esi
mov esp ebp
pop ebp
retn
sub_40f6cb
push ebp
mov ebp esp
sub esp 0x24
mov edx [ ebp + 0x8 ]
mov eax edx
and eax 0x1f
and [ ebp - 0xc ] 0x0
add eax eax
mov [ ebp - 0x10 ] eax
mov eax edx
shr eax 0x5
and eax 0x3f
mov [ ebp - 0x14 ] eax
mov eax edx
shr eax 0xb
and eax 0x1f
mov [ ebp - 0x18 ] eax
mov eax edx
shr eax 0x10
and eax 0x1f
mov [ ebp - 0x1c ] eax
mov eax edx
shr eax 0x15
and eax 0xf
shr edx 0x19
mov [ ebp - 0x20 ] eax
add edx 0x7bc
lea eax [ ebp - 0x24 ]
mov [ ebp - 0x24 ] edx
push eax
call sub_40f729
mov esp ebp
pop ebp
retn 0x4
sub_40f729
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx [ SystemTimeToFileTime@IAT ]
push edi
mov edi ecx
mov ax [ esi ]
mov [ ebp - 0x28 ] ax
mov ax [ esi + 0x4 ]
mov [ ebp - 0x26 ] ax
mov ax [ esi + 0x8 ]
mov [ ebp - 0x22 ] ax
mov ax [ esi + 0xc ]
mov [ ebp - 0x20 ] ax
mov ax [ esi + 0x10 ]
mov [ ebp - 0x1e ] ax
mov ax [ esi + 0x14 ]
mov [ ebp - 0x1c ] ax
xor eax eax
mov [ ebp - 0x1a ] ax
mov [ ebp - 0x24 ] ax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call ebx
test eax eax
je r-xdata
xor esi esi
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov eax [ ebp - 0x8 ]
add eax [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
cmp eax [ esi + 0x18 ]
jae r-xdata
call sub_40a2fa
cmp eax 0x600
jae r-xdata
inc [ ebp - 0x4 ]
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call [ FileTimeToSystemTime@IAT ]
lea eax [ ebp - 0x48 ]
xor esi esi
push eax
lea eax [ ebp - 0x38 ]
push eax
push esi
call [ TzSpecificLocalTimeToSystemTime@IAT ]
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call ebx
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call ebx
mov ecx [ ebp - 0xc ]
xor edx edx
sub edx esi
sbb ecx [ ebp - 0x14 ]
add edx esi
adc ecx [ ebp - 0x4 ]
sub edx [ ebp - 0x18 ]
sbb ecx esi
add edx [ ebp - 0x10 ]
adc ecx esi
add edx [ ebp - 0x8 ]
adc ecx esi
mov eax ecx
sar eax 0x1f
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call [ LocalFileTimeToFileTime@IAT ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ edi ] edx
mov [ edi + 0x4 ] ecx
jmp r-xdata
sub_40f838
push esi
mov esi ecx
mov eax [ esi + 0x48 ]
cmp eax 0x6a
jg r-xdata
pop esi
retn
je r-xdata
push 0x456
cmp eax 0x15
jg r-xdata
cmp eax 0x37
jg r-xdata
je r-xdata
sub eax 0x38
je r-xdata
je r-xdata
push [ esi ]
push 0xdd
jmp r-xdata
cmp eax 0x14
ja r-xdata
push 0x8c
jmp r-xdata
sub eax 0x1
je r-xdata
push 0x67
jmp r-xdata
sub eax 0x16
cmp eax 0xa
ja r-xdata
call sub_40cd14
push eax
jmp r-xdata
jmp [ eax * 4 + jump_table_40fa18 ]
call sub_40cd14
push eax
push [ esi ]
push 0x6f
jmp r-xdata
sub eax 0x1
je r-xdata
jmp [ eax * 4 + jump_table_40fa6c ]
push 0x0
push [ esi ]
push r--data
push [ esi ]
push r--data
push r--data
jmp r-xdata
push 0x0
call sub_4187ec
jmp r-xdata
push [ esi + 0x4 ]
push 0x7b
push [ esi + 0x4 ]
push 0x7a
jmp r-xdata
push [ esi + 0x4 ]
push 0x7c
jmp r-xdata
push 0xc9
jmp r-xdata
push 0x70
push [ esi + 0x4 ]
push 0x72
jmp r-xdata
push [ esi + 0x4 ]
push 0x78
jmp r-xdata
push [ esi ]
push 0x85
push [ esi ]
push 0x204
jmp r-xdata
push [ esi + 0x4 ]
push 0x84
jmp r-xdata
push [ esi + 0x4 ]
push 0x83
jmp r-xdata
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push 0xd2
call sub_40cd14
push eax
push [ esi ]
call sub_418f58
add esp 0x10
pop esi
retn
push [ esi + 0x4 ]
push 0x79
jmp r-xdata
push [ esi + 0x4 ]
push 0xdc
jmp r-xdata
push [ esi + 0x4 ]
push 0x406
jmp r-xdata
sub eax 0x9
je r-xdata
push 0xe1
jmp r-xdata
push 0xb4
jmp r-xdata
push 0x69
jmp r-xdata
push 0x6a
jmp r-xdata
push [ esi + 0x4 ]
push 0x68
jmp r-xdata
push 0x46f
jmp r-xdata
push 0x470
jmp r-xdata
push [ esi + 0x4 ]
push 0x471
jmp r-xdata
push [ esi + 0x4 ]
push 0x71
jmp r-xdata
push [ esi + 0x4 ]
push 0xc8
jmp r-xdata
call sub_418f58
add esp 0xc
pop esi
retn
pop ecx
call sub_40cd14
push eax
push [ esi ]
jmp r-xdata
call sub_418f58
pop ecx
push 0x343
jmp r-xdata
sub eax 0x1
jne r-xdata
call sub_40cd14
push eax
push 0x0
jmp r-xdata
push 0x86
jmp r-xdata
sub_40fa9d
push ebp
mov ebp esp
mov eax 0x1200
call sub_41c240
push ebx
push esi
push [ ebp + 0x8 ]
push 0x83
call sub_40cd14
push eax
lea eax [ ebp - 0x1200 ]
push 0x900
push eax
call sub_403ce2
add esp 0x10
call [ GetLastError@IAT ]
push 0x35
push 0x96
mov esi eax
call sub_40cd14
push eax
lea eax [ ebp - 0x1200 ]
push eax
push [ rw-data ]
call sub_4181fe
cmp eax 0x4
push esi
sete bl
call [ SetLastError@IAT ]
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40fb0c
mov eax 0x1000
call sub_41c240
push ebx
push ebp
push esi
mov esi [ esp + 0x1010 ]
push edi
push 0x2
pop ebp
mov eax [ esi + 0x5130 ]
cmp eax ebp
jne r-xdata
cmp [ esi + 0x517c ] 0x0
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
push [ esp + 0x1018 ]
call sub_40993d
cmp eax 0x1
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1000
retn 0x1c
mov ebx [ esp + 0x1018 ]
lea eax [ esp + 0x10 ]
mov edi 0x800
push edi
push ebx
push eax
call sub_40e847
push [ esp + 0x102c ]
lea eax [ esp + 0x14 ]
push [ esp + 0x102c ]
push [ esp + 0x102c ]
push [ esp + 0x102c ]
push edi
push eax
call sub_41b2e4
mov edi eax
test edi edi
je r-xdata
push ebx
call sub_40993d
cmp edi ebp
jne r-xdata
cmp edi ebp
jne r-xdata
cmp edi 0x3
jne r-xdata
mov [ esi + 0x5130 ] 0x1
jmp r-xdata
cmp edi 0x4
jne r-xdata
mov [ esi + 0x5130 ] ebp
jmp r-xdata
xor eax eax
mov eax edi
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
call sub_40b1d0
mov edi [ esp + 0x101c ]
lea ecx [ esp + 0x10 ]
push edi
cmp eax ecx
mov eax ecx
push eax
push ebx
jne r-xdata
call sub_40e847
call sub_40b23f
jmp r-xdata
push [ esp + 0x102c ]
push [ esp + 0x102c ]
push [ esp + 0x102c ]
push [ esp + 0x102c ]
push edi
push ebx
push esi
call sub_40fb0c
jmp r-xdata
push ebx
call sub_409820
test al al
je r-xdata
sub_40fc39
push ebp
mov ebp esp
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41b374
pop ebp
retn 0x20
sub_40fc9f
push ebx
push esi
mov esi [ esp + 0x10 ]
xor eax eax
push edi
mov edi [ esp + 0x18 ]
mov bl 0x1
push edi
push esi
push 0xffffffff
push [ esp + 0x1c ]
mov [ esi ] ax
push eax
push eax
call [ MultiByteToWideChar@IAT ]
neg eax
sbb al al
and al bl
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn 0xc
xor ecx ecx
mov [ esi + edi * 2 - 0x2 ] cx
sub_40fcd8
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
lea eax [ ebp - 0x14 ]
xor esi esi
push eax
push esi
mov edi ecx
call [ GetCPInfo@IAT ]
cmp [ ebp - 0x14 ] 0x1
seta al
mov [ edi + 0x100 ] al
push esi
call [ IsDBCSLeadByte@IAT ]
test eax eax
setne al
mov [ esi + edi ] al
inc esi
cmp esi 0x100
jb r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_40fd1a
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax [ ebp + 0xc ]
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
sub edi edx
pop edi
inc esi
add edx 0x2
cmp esi [ ebp + 0x10 ]
jb r-xdata
movzx ecx [ edx + 0x1 ]
movzx eax [ edx ]
shl ecx 0x8
add eax ecx
mov [ edi + edx ] ax
test ax ax
je r-xdata
sub_40fd55
mov eax [ esp + 0xc ]
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
lea ebp [ eax - 0x1 ]
push edi
mov edi [ esp + 0x14 ]
mov bl 0x1
jmp r-xdata
mov al [ edi ]
test al al
jne r-xdata
movzx edx al
inc edi
cmp edx 0x80
jb r-xdata
jmp r-xdata
test esi esi
je r-xdata
mov eax edx
and eax 0xffffffe0
cmp eax 0xc0
jne r-xdata
test esi esi
je r-xdata
cmp edx 0xffff
jbe r-xdata
sub ebp 0x1
js r-xdata
mov eax edx
and eax 0xfffffff0
cmp eax 0xe0
jne r-xdata
mov cl [ edi ]
mov al cl
and al 0xc0
cmp al 0x80
jne r-xdata
pop edi
pop esi
pop ebp
mov al bl
pop ebx
retn 0xc
xor eax eax
mov [ esi ] ax
test esi esi
je r-xdata
test esi esi
je r-xdata
mov eax edx
and eax 0xfffffff8
cmp eax 0xf0
jne r-xdata
mov cl [ edi ]
mov al cl
and al 0xc0
cmp al 0x80
jne r-xdata
xor bl bl
and edx 0x1f
movsx eax cl
and eax 0x3f
shl edx 0x6
or edx eax
inc edi
jmp r-xdata
mov [ esi ] dx
add esi 0x2
cmp edx 0x10ffff
jbe r-xdata
sub ebp 0x1
js r-xdata
mov cl [ edi ]
mov al cl
and al 0xc0
cmp al 0x80
jne r-xdata
mov ah [ edi + 0x1 ]
mov al ah
and al 0xc0
cmp al 0x80
jne r-xdata
test esi esi
je r-xdata
xor bl bl
jmp r-xdata
mov ah [ edi + 0x1 ]
mov al ah
and al 0xc0
cmp al 0x80
jne r-xdata
movsx ecx cl
and edx 0xf
and ecx 0x3f
shl edx 0x6
or ecx edx
movsx eax ah
shl ecx 0x6
and eax 0x3f
or ecx eax
add edi 0x2
jmp r-xdata
lea eax [ edx - 0x10000 ]
and edx 0x3ff
shr eax 0xa
sub edx 0x2400
sub eax 0x2800
mov [ esi ] ax
mov [ esi + 0x2 ] dx
add esi 0x4
jmp r-xdata
mov bh [ edi + 0x2 ]
mov al bh
and al 0xc0
cmp al 0x80
jne r-xdata
mov edx ecx
movsx ecx cl
and edx 0x7
and ecx 0x3f
shl edx 0x6
or ecx edx
movsx eax ah
shl ecx 0x6
and eax 0x3f
or ecx eax
movsx eax bh
shl ecx 0x6
and eax 0x3f
or ecx eax
add edi 0x3
sub_40fed3
push ebx
push esi
mov esi [ esp + 0x10 ]
xor eax eax
push edi
mov edi [ esp + 0x18 ]
mov bl 0x1
push eax
push eax
push edi
push esi
push 0xffffffff
push [ esp + 0x24 ]
mov [ esi ] al
push eax
push eax
call [ WideCharToMultiByte@IAT ]
neg eax
sbb al al
and al bl
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn 0xc
mov [ esi + edi - 0x1 ] 0x0
sub_40ff0b
push esi
mov esi [ esp + 0xc ]
push edi
xor edi edi
mov ecx edi
cmp [ esp + 0x14 ] ecx
jbe r-xdata
pop edi
mov eax esi
pop esi
retn 0xc
mov edx [ esp + 0xc ]
inc ecx
add edx 0x2
cmp ecx [ esp + 0x14 ]
jb r-xdata
mov al [ edx ]
mov [ esi + ecx * 2 ] al
mov al [ edx + 0x1 ]
mov [ esi + ecx * 2 + 0x1 ] al
cmp [ edx ] di
je r-xdata
sub_40ff41
mov ecx [ esp + 0x8 ]
push ebx
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x10 ]
dec esi
pop edi
pop esi
mov [ ecx ] 0x0
pop ebx
retn 0xc
sub esi 0x1
js r-xdata
movzx edx ax
add edi 0x2
cmp edx 0x80
jae r-xdata
cmp edx 0x800
jae r-xdata
mov [ ecx ] dl
inc ecx
jmp r-xdata
lea eax [ edx - 0xd800 ]
cmp eax 0x3ff
ja r-xdata
sub esi 0x1
js r-xdata
movzx eax [ edi ]
test ax ax
je r-xdata
cmp edx 0x10000
jae r-xdata
movzx eax [ edi ]
mov ebx 0xdc00
cmp ax bx
jb r-xdata
mov eax edx
and dl 0x3f
shr eax 0x6
or dl 0x80
or al 0xc0
mov [ ecx ] al
mov [ ecx + 0x1 ] dl
add ecx 0x2
jmp r-xdata
cmp edx 0x200000
jae r-xdata
sub esi 0x2
js r-xdata
mov ebx 0xdfff
cmp ax bx
ja r-xdata
sub esi 0x3
js r-xdata
mov eax edx
shr eax 0xc
or al 0xe0
mov [ ecx ] al
mov eax edx
shr eax 0x6
and dl 0x3f
and al 0x3f
or dl 0x80
or al 0x80
mov [ ecx + 0x1 ] al
mov [ ecx + 0x2 ] dl
add ecx 0x3
jmp r-xdata
add edx 0xffff2809
shl edx 0xa
add edx eax
add edi 0x2
mov eax edx
shr eax 0x12
or al 0xf0
mov [ ecx ] al
mov eax edx
shr eax 0xc
and al 0x3f
or al 0x80
mov [ ecx + 0x1 ] al
mov eax edx
shr eax 0x6
and dl 0x3f
and al 0x3f
or dl 0x80
or al 0x80
mov [ ecx + 0x2 ] al
mov [ ecx + 0x3 ] dl
add ecx 0x4
jmp r-xdata
sub_410052
push ecx
push ebx
mov ebx [ esp + 0xc ]
push ebp
xor ebp ebp
inc ebp
cmp [ ebx ] 0x2d
push esi
mov [ esp + 0xc ] ebp
jne r-xdata
movzx eax [ ebx ]
xor esi esi
push 0x30
pop edx
xor ecx ecx
mov [ esp + 0x14 ] esi
cmp ax dx
jb r-xdata
add ebx 0x2
or ebp 0xffffffff
mov [ esp + 0xc ] ebp
push esi
mov eax ebp
cdq
push ecx
push edx
push eax
call sub_41c6c0
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
push edx
pop ebp
push edi
mov ebp [ esp + 0x10 ]
pop edi
push 0x0
movzx eax ax
push 0xa
push [ esp + 0x20 ]
sub eax ebp
cdq
push ecx
mov esi eax
mov edi edx
call sub_41c6c0
add esi eax
mov ecx esi
adc edi edx
add ebx 0x2
mov esi edi
mov [ esp + 0x18 ] esi
movzx eax [ ebx ]
cmp ax bp
jae r-xdata
cmp ax 0x39
ja r-xdata
sub_410101
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x8 ]
call sub_4216b5
mov esi [ ebp + 0x10 ]
inc eax
pop ecx
cmp eax esi
jae r-xdata
mov edi esi
push [ ebp + 0x8 ]
call sub_4216b5
pop ecx
lea edi [ eax + 0x1 ]
jmp r-xdata
push esi
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
push 0x1001
push 0x400
call [ CompareStringW@IAT ]
pop edi
sub eax 0x2
pop esi
pop ebp
retn 0xc
push [ ebp + 0xc ]
call sub_4216b5
pop ecx
lea esi [ eax + 0x1 ]
push [ ebp + 0xc ]
call sub_4216b5
inc eax
pop ecx
cmp eax esi
jae r-xdata
sub_410162
push esi
push edi
mov edi 0x80
mov esi ecx
push edi
push 0x0
push esi
call sub_41d1e0
push edi
lea eax [ esi + 0x80 ]
push 0x0
push eax
call sub_41d1e0
add esp 0x18
mov eax esi
pop edi
pop esi
retn
sub_4101ad
mov eax sub_42eebe
call sub_41c16c
push ecx
push ebx
push esi
push edi
mov esi ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
push edi
lea ecx [ esi + 0x4 ]
call sub_409e16
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x34 ] ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x3c ] ebx
mov [ esi + 0x40 ] ebx
mov [ esi + 0x44 ] ebx
mov [ esi + 0x48 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
lea ecx [ esi + 0x4b38 ]
call sub_410162
lea ecx [ esi + 0x98d0 ]
call sub_41018b
lea ecx [ esi + 0xe65c ]
mov [ ebp - 0x4 ] 0x5
call sub_40b2e1
push edi
lea ecx [ esi + 0xe694 ]
mov [ ebp - 0x4 ] 0x6
call sub_409e16
mov [ esi + 0xe6a4 ] ebx
mov [ esi + 0xe6a8 ] ebx
mov [ esi + 0xe6ac ] ebx
mov [ esi + 0xe6b0 ] ebx
mov [ esi + 0xe6b4 ] ebx
mov [ esi + 0xe6b8 ] ebx
mov [ esi + 0xe6bc ] ebx
mov [ esi + 0xe6c0 ] ebx
mov [ esi + 0xe6c4 ] ebx
mov [ esi + 0xe6c8 ] ebx
mov [ esi + 0xe6cc ] ebx
mov [ esi + 0xe6d0 ] ebx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xa
mov [ esi ] eax
mov [ esi + 0x4b34 ] ebx
mov [ esi + 0x4c38 ] bl
mov [ esi + 0x4c48 ] bx
mov [ esi + 0x4c4a ] bl
mov [ esi + 0x1c ] edi
call sub_40f1ac
push ebx
mov ecx esi
mov [ esi + 0x14 ] eax
mov [ esi + 0x20 ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0xe6d8 ] ebx
mov [ esi + 0xe6dc ] ebx
call sub_41302d
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_4102ec
push ecx
xor eax eax
mov [ esp ] ecx
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x18 ] eax
mov [ ecx + 0x1c ] eax
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x28 ] eax
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x30 ] eax
mov [ ecx + 0x34 ] eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x58 ] eax
mov [ ecx + 0x14 ] eax
mov eax ecx
pop ecx
retn
sub_41033a
push esi
mov esi ecx
lea eax [ esi + 0x4 ]
mov [ esi ] r--data
and [ eax ] 0x0
and [ eax + 0x4 ] 0x0
push eax
mov eax [ esp + 0xc ]
add eax 0x4
push eax
call sub_41fc64
pop ecx
pop ecx
mov eax esi
pop esi
retn 0x4
sub_410373
push ebp
mov ebp esp
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_42eb81
push eax
mov [ fs : 0x0 ] esp
push esi
push 0x0
mov esi ecx
call sub_411838
mov eax [ esi + 0x4b34 ]
test eax eax
je r-xdata
push [ esi + 0x14 ]
call sub_40f2da
push [ esi + 0x20 ]
call j_sub_4251ac#2
pop ecx
mov ecx [ esi + 0x18 ]
test ecx ecx
je r-xdata
push eax
call j_sub_4251ac#3
pop ecx
lea ecx [ esi + 0xe6c4 ]
call sub_40a6f4
lea ecx [ esi + 0xe6b4 ]
call sub_40a6f4
lea ecx [ esi + 0xe6a4 ]
call sub_40a6f4
lea ecx [ esi + 0xe694 ]
call sub_409e4c
lea ecx [ esi + 0xe65c ]
call sub_40b2f9
lea ecx [ esi + 0xe35c ]
call sub_412fcb
lea ecx [ esi + 0x4b38 ]
call sub_412c25
lea ecx [ esi + 0x44 ]
call sub_40a6f4
lea ecx [ esi + 0x34 ]
call sub_40a6f4
lea ecx [ esi + 0x24 ]
call sub_40a6f4
lea ecx [ esi + 0x4 ]
call sub_409e4c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop esi
mov esp ebp
pop ebp
retn
push 0x3
call sub_4104c2
sub_41048a
push esi
mov esi [ esp + 0x8 ]
cmp esi [ ecx + 0x80 ]
jae r-xdata
xor edx edx
lea eax [ ecx + 0x84 ]
inc edx
mov eax [ ecx ]
jmp r-xdata
mov eax [ ecx + edx * 4 ]
sub eax [ ecx + edx * 4 + 0x7c ]
inc edx
add eax 0x4
cmp edx 0x20
jb r-xdata
add eax esi
cmp esi [ eax ]
jb r-xdata
mov eax [ ecx ]
jmp r-xdata
pop esi
retn 0x4
sub_4104c2
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x2
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_42eb81
push eax
mov [ fs : 0x0 ] esp
push esi
push edi
mov esi ecx
je r-xdata
call sub_410441
test [ ebp + 0x8 ] 0x1
je r-xdata
push sub_410441
lea edi [ esi - 0x4 ]
push [ edi ]
push 0x4ae4
push esi
call sub_41c2d6
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
push 0x4ae4
push esi
call sub_41c15e
pop ecx
pop ecx
mov eax edi
jmp r-xdata
imul ecx [ edi ] 0x4ae4
add ecx 0x4
push ecx
push edi
call sub_41c848
pop ecx
pop ecx
mov ecx [ ebp - 0xc ]
pop edi
mov [ fs : 0x0 ] ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_410541
push esi
mov esi ecx
lea eax [ esi + 0x4 ]
mov [ esi ] r--data
push eax
call sub_41fcc7
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push 0xc
push esi
call sub_41c15e
pop ecx
pop ecx
sub_41056b
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
add [ esi + 0x4 ] eax
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jbe r-xdata
pop esi
retn 0x4
mov eax [ esi + 0xc ]
push ebx
push ebp
mov ebp rw-data
push edi
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
mov edi [ esi + 0x4 ]
shr eax 0x2
add eax 0x20
add eax [ esi + 0x8 ]
cmp edi eax
ja r-xdata
cmp ecx eax
jbe r-xdata
mov eax edi
shl eax 0x2
push eax
push [ esi ]
call sub_4216d5
mov ebx eax
pop ecx
pop ecx
test ebx ebx
jne r-xdata
mov edi eax
push eax
push r--data
push ebp
call sub_4069e4
add esp 0xc
mov ecx ebp
call sub_406a1c
mov [ esi + 0x8 ] edi
pop edi
pop ebp
mov [ esi ] ebx
pop ebx
mov ecx ebp
call sub_406a1c
sub_4105e3
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
add [ esi + 0x4 ] eax
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jbe r-xdata
pop esi
retn 0x4
mov eax [ esi + 0xc ]
push ebx
push ebp
mov ebp rw-data
push edi
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
mov edi [ esi + 0x4 ]
shr eax 0x2
add eax 0x20
add eax [ esi + 0x8 ]
cmp edi eax
ja r-xdata
cmp ecx eax
jbe r-xdata
mov eax edi
shl eax 0x4
push eax
push [ esi ]
call sub_4216d5
mov ebx eax
pop ecx
pop ecx
test ebx ebx
jne r-xdata
mov edi eax
push eax
push r--data
push ebp
call sub_4069e4
add esp 0xc
mov ecx ebp
call sub_406a1c
mov [ esi + 0x8 ] edi
pop edi
pop ebp
mov [ esi ] ebx
pop ebx
mov ecx ebp
call sub_406a1c
sub_41065b
push ebx
mov ebx ecx
xor ecx ecx
push esi
mov esi 0x2000
push edi
cmp [ ebx + 0x48 ] esi
jb r-xdata
mov eax [ ebx + 0x74 ]
mov esi [ esp + 0x10 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov ecx ebx
call sub_413638
xor ecx ecx
cmp [ ebx + 0x48 ] esi
jb r-xdata
mov [ esi + 0xd ] cl
sub esp 0x10
mov eax [ ebx + 0x70 ]
lea ecx [ ebx + 0x44 ]
add eax [ esi + 0x4 ]
mov edi esp
and eax [ ebx + 0xe6dc ]
mov [ esi + 0x4 ] eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_4121e2
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x4
sub eax [ ebx + 0x70 ]
and eax [ ebx + 0xe6dc ]
cmp eax [ esi + 0x4 ]
ja r-xdata
mov [ ebx + 0x48 ] ecx
xor ecx ecx
inc ecx
sub_4106c5
mov eax sub_42eed0
call sub_41c16c
sub esp 0x30
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi ecx
mov ecx 0x8000
push edi
xor edi edi
lea ebx [ esi + 0xe694 ]
mov [ ebp - 0x20 ] ebx
mov [ ebx + 0x4 ] edi
mov [ ebx ] edi
cmp eax ecx
jle r-xdata
push eax
push [ ebp + 0xc ]
push [ esi + 0xe6a0 ]
call sub_41ee90
lea eax [ esi + 0xe65c ]
add esp 0xc
mov ecx eax
mov [ ebp - 0x10 ] eax
call sub_40bb18
test [ ebp + 0x8 ] 0x80
je r-xdata
mov eax ecx
mov ebx [ esi + 0xe6d4 ]
push ebx
call sub_40bc7e
mov ebx eax
mov [ ebp - 0x18 ] ebx
test ebx ebx
jne r-xdata
xor al al
cmp ebx [ esi + 0xe6c8 ]
ja r-xdata
dec ebx
jmp r-xdata
push edi
mov ecx esi
call sub_411838
jmp r-xdata
cmp ebx eax
mov [ esi + 0xe6d4 ] ebx
push 0x70
sete [ ebp + 0x13 ]
call sub_41c12b
mov edi eax
mov [ ebp - 0x14 ] edi
pop ecx
test edi edi
je r-xdata
mov [ ebp - 0x18 ] ebx
mov eax [ esi + 0xe6a8 ]
cmp ebx eax
ja r-xdata
xor ecx ecx
mov edi ecx
mov [ ebp - 0x14 ] ecx
lea ecx [ edi + 0x14 ]
call sub_4102ec
xor ecx ecx
jmp r-xdata
mov eax [ esi + 0xe6a4 ]
mov eax [ eax + ebx * 4 ]
mov [ edi + 0x10 ] ebx
mov [ ebp + 0xc ] eax
inc [ eax + 0x8 ]
cmp ebx 0x2000
jbe r-xdata
cmp [ ebp + 0x13 ] 0x0
je r-xdata
cmp [ esi + 0xe6b8 ] 0x2000
ja r-xdata
lea ecx [ esi + 0xe6b4 ]
xor edi edi
mov ebx eax
lea ecx [ esi + 0xe6a4 ]
push 0x1
call sub_41056b
push 0x70
call sub_41c12b
mov [ ebp + 0xc ] eax
pop ecx
test eax eax
je r-xdata
test edi edi
je r-xdata
lea ecx [ edi + 0x14 ]
call sub_41045e
push 0x70
push edi
call sub_41c15e
pop ecx
lea ecx [ esi + 0xe6b4 ]
push 0x1
call sub_41056b
xor eax eax
inc eax
jmp r-xdata
test ebx ebx
jle r-xdata
inc ebx
and [ ebp + 0xc ] 0x0
lea ecx [ eax + 0x14 ]
call sub_4102ec
jmp r-xdata
mov ecx [ esi + 0xe6b8 ]
sub ecx eax
mov eax [ esi + 0xe6b4 ]
mov [ eax + ecx * 4 ] edi
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
mov [ edi + 0x8 ] eax
lea eax [ esi + 0xe694 ]
push eax
call sub_40bc7e
test [ ebp + 0x8 ] 0x40
mov edx eax
mov [ ebp - 0x24 ] eax
je r-xdata
inc eax
mov [ ebp - 0x24 ] eax
cmp eax [ esi + 0xe6b8 ]
jb r-xdata
mov [ edx + eax * 4 ] edi
cmp [ esi + 0xe6b8 ] 0x0
mov eax ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x24 ] ecx
jbe r-xdata
mov ecx [ esi + 0xe6a8 ]
mov eax [ esi + 0xe6a4 ]
mov edx [ ebp + 0xc ]
push 0x0
mov [ eax + ecx * 4 - 0x4 ] edx
lea ecx [ esi + 0xe6c4 ]
mov eax [ esi + 0xe6a8 ]
dec eax
mov [ edi + 0x10 ] eax
call sub_4121c7
mov eax [ ebp + 0xc ]
xor ecx ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
mov ecx [ esi + 0x70 ]
add ecx edx
and ecx [ esi + 0xe6dc ]
test [ ebp + 0x8 ] 0x20
mov [ edi ] ecx
je r-xdata
add edx 0x102
mov [ ebp - 0x24 ] edx
mov edx [ ecx ]
mov ecx eax
sub ecx ebx
mov eax [ edx + eax * 4 ]
mov [ edx + ecx * 4 ] eax
lea ecx [ esi + 0xe6b4 ]
mov edx [ ecx ]
mov eax [ ebp - 0x24 ]
cmp [ edx + eax * 4 ] edi
jne r-xdata
mov edi [ ebp - 0x14 ]
test ebx ebx
mov [ ebp - 0x1c ] ebx
mov ebx [ ebp - 0x18 ]
jne r-xdata
cmp ebx [ esi + 0xe6c8 ]
jae r-xdata
lea eax [ esi + 0xe694 ]
push eax
call sub_40bc7e
mov edx [ ebp - 0x24 ]
mov [ edi + 0x4 ] eax
mov ecx [ esi + 0xe6c4 ]
mov [ ecx + ebx * 4 ] eax
jmp r-xdata
mov eax [ ebp - 0x1c ]
xor eax eax
mov eax [ esi + 0xe6c4 ]
mov eax [ eax + ebx * 4 ]
jmp r-xdata
mov eax [ esi + 0x74 ]
cmp eax [ esi + 0x70 ]
je r-xdata
xor ebx ebx
mov eax ebx
sub eax [ esi + 0x70 ]
and eax [ esi + 0xe6dc ]
cmp eax edx
ja r-xdata
mov [ edi + 0x4 ] eax
cmp [ ebp + 0x13 ] 0x0
je r-xdata
mov ecx esi
call j_sub_409e9f
shr eax 0x9
mov ecx esi
push 0x7
mov [ ebp - 0x2c ] eax
call sub_409e83
mov edx [ ebp - 0x18 ]
mov ecx ebx
mov edi [ ebp - 0x2c ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x1c ] edx
xor eax eax
inc eax
xor ebx ebx
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x14 ]
mov [ edi + 0x24 ] eax
mov eax [ ecx + 0x28 ]
mov [ edi + 0x28 ] eax
mov ecx [ ecx + 0x40 ]
mov [ ebp + 0x10 ] ecx
lea eax [ ecx - 0x1 ]
cmp eax 0x1ffe
ja r-xdata
push esi
call sub_40bc7e
mov [ ebp - 0x1c ] eax
cmp eax 0x10000
jae r-xdata
inc ecx
add edx 0x4
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x1c ] edx
cmp ecx 0x7
jl r-xdata
push esi
call sub_40bc7e
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x24 ]
mov [ edx ] eax
push 0x1c
mov [ edi + 0xc ] al
lea eax [ edi + 0x4c ]
push ebx
push eax
mov [ ebp - 0x18 ] eax
call sub_41d1e0
mov esi [ ebp - 0x20 ]
add esp 0xc
test [ ebp + 0x8 ] 0x10
mov [ edi + 0x58 ] 0x3c000
mov eax [ edi + 0x4 ]
mov [ edi + 0x5c ] eax
mov eax [ edi + 0x8 ]
mov [ edi + 0x60 ] eax
mov [ ebp - 0x28 ] 0x7
je r-xdata
cmp [ edi + 0x30 ] 0x40
jae r-xdata
push ecx
lea ecx [ edi + 0x3c ]
call sub_40183e
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ eax + 0x3c ]
push [ edi + 0x3c ]
call sub_41ee90
add esp 0xc
test eax eax
je r-xdata
xor eax eax
inc eax
shl eax cl
test edi eax
je r-xdata
mov edi [ ebp - 0x14 ]
lea eax [ edi + 0x2c ]
mov esi [ eax ]
mov edi esi
mov [ ebp + 0xc ] esi
mov esi [ ebp - 0x18 ]
mov [ ebp + 0x10 ] eax
lea ecx [ edi + 0x2c ]
call sub_405bd9
push 0x40
lea ecx [ edi + 0x2c ]
call sub_40183e
push eax
lea ecx [ ebp - 0x3c ]
call sub_401571
cmp [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] ebx
mov [ ebp + 0x10 ] ebx
jbe r-xdata
push [ esi ]
mov ecx [ ebp - 0x10 ]
push edi
call sub_40bd20
add edi 0x4
lea esi [ esi + 0x4 ]
sub [ ebp - 0x28 ] 0x1
jne r-xdata
mov edi [ ebp - 0x14 ]
mov esi [ ebp + 0xc ]
mov ecx [ ebp - 0x10 ]
push [ edi + 0x4 ]
lea eax [ esi + 0x1c ]
push eax
call sub_40bd20
mov ecx [ ebp - 0x10 ]
lea eax [ esi + 0x20 ]
push ebx
push eax
call sub_40bd20
push [ edi + 0x8 ]
mov ecx [ ebp - 0x10 ]
lea eax [ esi + 0x2c ]
push eax
call sub_40bd20
push 0x10
lea eax [ esi + 0x30 ]
push ebx
push eax
call sub_41d1e0
add esp 0xc
test [ ebp + 0x8 ] 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov esi [ ebp - 0x3c ]
add eax 0x14
mov ecx [ ebp - 0x10 ]
push eax
push [ ebp - 0x1c ]
push esi
call sub_40bb72
or [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov eax [ esi ]
add eax 0x3
cmp eax 0x8000
jae r-xdata
mov al 0x1
jmp r-xdata
mov esi [ ebp - 0x20 ]
mov eax [ esi ]
add eax 0x3
cmp eax 0x8000
jae r-xdata
push esi
call j_sub_4251ac#3
pop ecx
mov eax [ ebp - 0x3c ]
test eax eax
je r-xdata
mov ecx esi
call j_sub_409e9f
mov ecx [ ebp - 0x3c ]
mov edx [ ebp + 0x10 ]
shr eax 0x8
push 0x8
mov [ ecx + edx ] al
mov ecx esi
call sub_409e83
mov ecx [ ebp + 0x10 ]
inc ecx
mov [ ebp + 0x10 ] ecx
cmp ecx [ ebp - 0x1c ]
jb r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
push esi
call sub_40bc7e
mov ecx eax
mov [ ebp + 0x8 ] ecx
cmp ecx 0x1fc0
ja r-xdata
push eax
call j_sub_4251ac#3
jmp r-xdata
lea eax [ ecx + 0x40 ]
cmp [ edi + 0x30 ] eax
jae r-xdata
pop ecx
mov edi [ ebp + 0x10 ]
mov eax ecx
sub eax [ edi + 0x30 ]
mov edi [ ebp + 0x10 ]
add eax 0x40
push eax
mov ecx edi
call sub_40183e
mov ecx [ ebp + 0x8 ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
add eax 0x40
mov [ ebp + 0x10 ] eax
test ecx ecx
je r-xdata
mov ecx esi
call j_sub_409e9f
mov ecx [ ebp + 0x10 ]
shr eax 0x8
push 0x8
mov [ ebx + ecx ] al
mov ecx esi
call sub_409e83
inc ebx
cmp ebx edi
jb r-xdata
mov eax [ esi ]
add eax 0x3
cmp eax 0x8000
jae r-xdata
sub_410bf3
mov edx ecx
mov eax [ edx + 0xb4 ]
cmp eax [ edx + 0xb0 ]
je r-xdata
mov eax [ edx + 0xb8 ]
test eax eax
je r-xdata
add eax 0xfffffff4
mov [ edx + 0xb4 ] eax
retn
push 0x0
call sub_410c84
retn
mov ecx [ eax ]
mov [ edx + 0xb8 ] ecx
retn
sub_410c28
mov eax [ esp + 0x4 ]
mov edx ecx
push esi
movzx esi [ eax + edx + 0x29 ]
mov eax [ edx + esi * 4 + 0xb8 ]
test eax eax
je r-xdata
movzx ecx [ esi + edx + 0x4 ]
mov eax [ edx + 0xb0 ]
imul ecx ecx 0xc
add ecx eax
mov [ edx + 0xb0 ] ecx
cmp ecx [ edx + 0xb4 ]
jbe r-xdata
mov ecx [ eax ]
mov [ edx + esi * 4 + 0xb8 ] ecx
jmp r-xdata
pop esi
retn 0x4
movzx eax [ esi + edx + 0x4 ]
imul eax eax 0xc
push esi
sub ecx eax
mov [ edx + 0xb0 ] ecx
mov ecx edx
call sub_410c84
sub_410c84
push ebx
mov ebx [ esp + 0x8 ]
push edi
mov edi ecx
cmp [ edi + 0xaa ] 0x0
jne r-xdata
lea ecx [ ebx + 0x2e ]
mov eax ebx
lea ecx [ edi + ecx * 4 ]
mov [ edi + 0xaa ] 0xff
call sub_411418
mov eax [ edi + ebx * 4 + 0xb8 ]
test eax eax
je r-xdata
dec [ edi + 0xaa ]
movzx eax [ ebx + edi + 0x4 ]
mov ecx [ edi + 0x15c ]
imul edx eax 0xc
mov eax ecx
sub eax [ edi + 0x150 ]
cmp eax edx
jle r-xdata
cmp [ ecx ] 0x0
je r-xdata
mov ecx [ eax ]
mov [ edi + ebx * 4 + 0xb8 ] ecx
jmp r-xdata
xor eax eax
sub ecx edx
sub [ edi + 0x154 ] edx
mov eax [ edi + 0x154 ]
mov [ edi + 0x15c ] ecx
jmp r-xdata
inc eax
lea ecx [ ecx + 0x4 ]
cmp eax 0x26
je r-xdata
push esi
mov esi [ edi + eax * 4 + 0xb8 ]
push ebx
push eax
push esi
mov ecx [ esi ]
mov [ edi + eax * 4 + 0xb8 ] ecx
mov ecx edi
call sub_412e5e
mov eax esi
pop esi
jmp r-xdata
pop edi
pop ebx
retn 0x4
sub_410d2a
push ecx
mov edx [ esp + 0x10 ]
push ebx
push ebp
push esi
mov bl [ edx ]
mov al bl
push edi
mov edi [ esp + 0x18 ]
mov [ esp + 0x10 ] edi
test al al
je r-xdata
push [ esp + 0x1c ]
movzx ebp [ edx + 0xc ]
lea esi [ ecx + 0x34 ]
mov ecx esi
xor ebx ebx
call sub_401f56
mov esi [ esi ]
xor ecx ecx
test ebp ebp
je r-xdata
cmp al 0x2
jbe r-xdata
mov eax esi
xor dl dl
mov eax ecx
cmp ecx [ esp + 0x1c ]
jae r-xdata
mov eax [ esp + 0x1c ]
cmp bl 0x2
mov esi [ ecx + 0x4c50 ]
sete cl
xor edx edx
add cl 0xe8
lea ebp [ eax - 0x4 ]
mov [ esp + 0x18 ] cl
test ebp ebp
jle r-xdata
cmp al 0x3
jne r-xdata
inc ecx
cmp ecx ebp
jb r-xdata
sub dl [ ebx + edi ]
inc ebx
mov [ eax + esi ] dl
add eax ebp
cmp eax [ esp + 0x1c ]
jb r-xdata
mov eax [ esp + 0x10 ]
jmp r-xdata
mov al [ edi ]
inc edi
inc edx
inc esi
cmp al 0xe8
je r-xdata
xor eax eax
jmp r-xdata
mov ebp [ esp + 0x1c ]
xor edx edx
mov esi [ ecx + 0x4c50 ]
add ebp 0xfffffffd
test ebp ebp
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0xc
mov ecx [ edi ]
mov ebx esi
and ebx 0xffffff
test ecx ecx
jns r-xdata
cmp al cl
jne r-xdata
mov eax edi
jmp r-xdata
sub esi edi
lea eax [ ecx - 0x1000000 ]
test eax eax
jns r-xdata
lea eax [ ecx + ebx ]
test eax eax
js r-xdata
cmp edx ebp
jl r-xdata
add edx 0x4
cmp edx ebp
jl r-xdata
movzx ecx [ edx + edi + 0x2 ]
movzx eax [ edx + edi + 0x1 ]
shl ecx 0x8
add ecx eax
lea eax [ esi + ebx ]
shr eax 0x2
shl ecx 0x8
sub ecx eax
movzx eax [ ebx ]
add ecx eax
mov eax ecx
mov [ ebx ] cl
shr eax 0x8
shr ecx 0x10
mov [ edx + edi + 0x1 ] al
mov [ edx + edi + 0x2 ] cl
mov cl [ esp + 0x18 ]
add edi 0x4
add edx 0x4
add esi 0x4
sub ecx ebx
mov [ edi ] ecx
lea eax [ ecx + 0x1000000 ]
mov [ edi ] eax
jmp r-xdata
lea ebx [ edx + edi ]
cmp [ ebx + 0x3 ] 0xeb
jne r-xdata
sub_410e69
push esi
push edi
mov edi ecx
lea esi [ edi + 0x4a8c ]
mov ecx esi
call sub_412fcb
push 0x1
mov ecx esi
call sub_412f6f
push 0x2
mov ecx edi
call sub_412ec1
pop edi
pop esi
retn
sub_410ead
push ebp
push edi
mov edi [ esp + 0x14 ]
mov ebp ecx
test edi edi
je r-xdata
pop edi
pop ebp
retn 0xc
push ebx
mov ebx [ esp + 0x14 ]
push esi
mov esi [ esp + 0x14 ]
sub ebx esi
lea eax [ ebx + esi ]
mov ecx ebp
push eax
call sub_41048a
mov al [ eax ]
mov [ esi ] al
inc esi
sub edi 0x1
jne r-xdata
pop esi
pop ebx
sub_410ee1
push ecx
push ebx
mov ebx [ esp + 0x14 ]
push ebp
mov ebp [ esp + 0x10 ]
push edi
mov edi [ ebx ]
sub edi [ esp + 0x18 ]
mov [ esp + 0xc ] ecx
test ebp ebp
je r-xdata
pop edi
pop ebp
pop ebx
pop ecx
retn 0x10
push esi
mov eax edi
and eax [ esp + 0x24 ]
push eax
call sub_41048a
push [ ebx ]
mov ecx [ esp + 0x14 ]
mov esi eax
call sub_41048a
mov cl [ esi ]
inc edi
mov [ eax ] cl
mov eax [ ebx ]
mov ecx [ esp + 0x10 ]
inc eax
and eax [ esp + 0x24 ]
mov [ ebx ] eax
sub ebp 0x1
jne r-xdata
pop esi
sub_410f34
sub esp 0x108
push ebx
mov ebx ecx
push ebp
xor ebp ebp
push esi
mov eax [ ebx + 0x650 ]
inc ebp
cmp [ esp + 0x118 ] 0x0
mov esi [ ebx + 0x644 ]
push edi
mov edx [ eax + 0x2 ]
lea edi [ esp + 0x18 ]
jne r-xdata
mov ecx [ esp + 0x120 ]
test ecx ecx
je r-xdata
cmp [ esi + 0x8 ] 0x0
lea edi [ esp + 0x1c ]
mov [ esp + 0x18 ] eax
je r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi ] bp
je r-xdata
mov esi [ esi + 0x8 ]
jmp r-xdata
movzx ebp [ esi ]
lea eax [ edx + 0x1 ]
mov cl [ edx ]
mov [ esp + 0x12 ] eax
xor eax eax
inc eax
mov [ esp + 0x10 ] cl
cmp bp ax
je r-xdata
lea ecx [ esi + 0x2 ]
mov eax [ ebx + 0x650 ]
mov ecx [ esi + 0x4 ]
mov al [ eax ]
jmp r-xdata
cmp [ ecx + 0x2 ] edx
jne r-xdata
mov al [ esi + 0x3 ]
cmp esi [ ebx + 0x4bdc ]
jbe r-xdata
mov esi [ ecx + 0x2 ]
mov [ edi ] ecx
add edi 0x4
cmp [ esi + 0x8 ] 0x0
jne r-xdata
cmp [ ecx ] al
jne r-xdata
xor eax eax
lea eax [ esp + 0x18 ]
cmp edi eax
jne r-xdata
mov eax [ esi + 0x4 ]
jmp r-xdata
mov eax esi
jmp r-xdata
jmp r-xdata
add ecx 0x6
jmp r-xdata
sub edi 0x4
lea eax [ esp + 0x10 ]
push eax
mov ecx esi
push [ edi ]
push ebx
call sub_41678b
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
cmp [ eax ] cl
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x108
retn 0x8
lea eax [ esp + 0x18 ]
cmp edi eax
jne r-xdata
add eax 0x6
movzx edx [ eax + 0x1 ]
movzx ecx [ esi + 0x2 ]
dec edx
sub ecx ebp
sub ecx edx
lea ebp [ edx + edx ]
cmp ebp ecx
ja r-xdata
imul eax ecx 0x3
xor edx edx
add ecx ecx
dec eax
add eax ebp
div ecx
imul eax edx 0x5
cmp ecx eax
sbb eax eax
neg eax
jmp r-xdata
mov [ esp + 0x11 ] al
inc al
jmp r-xdata
sub_411059
push ebp
push esi
mov esi ecx
mov ecx [ esi + 0x644 ]
mov edx [ esi + 0x4bdc ]
cmp ecx edx
jbe r-xdata
or eax 0xffffffff
mov eax [ esi + 0x4be4 ]
cmp ecx eax
ja r-xdata
cmp [ ecx ] 0x1
je r-xdata
push esi
call sub_4167cc
cmp [ ecx + 0x4 ] edx
jbe r-xdata
mov edx [ esi + 0x4a78 ]
mov eax edx
mov ecx [ esi + 0x4a7c ]
imul eax ecx
add [ esi + 0x4a70 ] eax
mov eax [ esi + 0x4a80 ]
sub eax ecx
imul eax edx
mov [ esi + 0x4a78 ] eax
cmp [ esi + 0x650 ] 0x0
je r-xdata
cmp [ ecx + 0x4 ] eax
ja r-xdata
mov ecx [ esi + 0x4a70 ]
mov edx [ esi + 0x4a78 ]
lea eax [ ecx + edx ]
xor eax ecx
cmp eax 0x1000000
jb r-xdata
cmp [ esi + 0x65c ] 0x0
mov eax [ esi + 0x650 ]
push edi
movzx edi [ eax ]
jne r-xdata
push esi
call sub_416900
test al al
jne r-xdata
mov ecx [ esi + 0x4a88 ]
call sub_4113f7
mov ecx [ esi + 0x4a74 ]
shl [ esi + 0x4a78 ] 0x8
shl ecx 0x8
or eax ecx
shl [ esi + 0x4a70 ] 0x8
mov [ esi + 0x4a74 ] eax
jmp r-xdata
cmp edx ebp
jae r-xdata
mov ecx esi
call sub_41649f
cmp [ esi + 0xa6c ] 0x0
jne r-xdata
mov eax [ eax + 0x2 ]
cmp eax [ esi + 0x4bdc ]
jbe r-xdata
mov ebp 0x8000
jmp r-xdata
mov eax [ esi + 0x644 ]
inc [ esi + 0x65c ]
mov ecx [ eax + 0x8 ]
mov [ esi + 0x644 ] ecx
cmp ecx [ esi + 0x4bdc ]
jbe r-xdata
neg ecx
and ecx 0x7fff
mov [ esi + 0x4a78 ] ecx
mov ecx [ esi + 0x4a70 ]
mov edx [ esi + 0x4a78 ]
lea eax [ ecx + edx ]
xor eax ecx
cmp eax 0x1000000
jb r-xdata
mov ecx esi
call sub_410e8f
mov [ esi + 0x64c ] eax
mov [ esi + 0x644 ] eax
jmp r-xdata
cmp ecx [ esi + 0x4be4 ]
ja r-xdata
mov ecx [ esi + 0x4a88 ]
call sub_4113f7
mov ecx [ esi + 0x4a74 ]
shl [ esi + 0x4a78 ] 0x8
shl ecx 0x8
or eax ecx
shl [ esi + 0x4a70 ] 0x8
mov [ esi + 0x4a74 ] eax
jmp r-xdata
cmp edx ebp
jae r-xdata
movzx eax [ ecx ]
cmp eax [ esi + 0x654 ]
je r-xdata
mov eax edi
pop edi
jmp r-xdata
neg ecx
and ecx 0x7fff
mov [ esi + 0x4a78 ] ecx
push esi
call sub_416a4f
test al al
je r-xdata
pop esi
pop ebp
retn
sub_411219
push ecx
push ebx
push ebp
push esi
mov esi ecx
mov ecx [ esp + 0x14 ]
call sub_4113f7
mov ebx eax
shr eax 0x5
and al 0x1
mov [ esp + 0xc ] eax
je r-xdata
cmp [ esi + 0x4a8c ] 0x0
jne r-xdata
mov ecx [ esp + 0x14 ]
call sub_4113f7
mov ebp eax
jmp r-xdata
mov ebp [ esp + 0x14 ]
xor al al
jmp r-xdata
test bl 0x40
je r-xdata
push [ esp + 0x14 ]
lea ecx [ esi + 0x4a70 ]
call sub_411802
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ecx [ esp + 0x14 ]
call sub_4113f7
mov ecx [ esp + 0x18 ]
mov [ ecx ] eax
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
xor eax eax
cmp [ esi + 0x644 ] eax
setne al
and ebx 0x1f
inc ebx
cmp ebx 0x10
jle r-xdata
lea ecx [ esi + 0x4a8c ]
cmp ebx 0x1
jne r-xdata
imul ebx ebx 0x3
sub ebx 0x20
lea eax [ ebp + 0x1 ]
push eax
call sub_412f6f
push ebx
mov ecx esi
call sub_412ec1
call sub_412fcb
jmp r-xdata
sub_4112c1
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x1d
je r-xdata
cmp [ ecx + 0x4c38 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x32
jne r-xdata
pop ebp
retn 0x8
push [ ebp + 0xc ]
call sub_413952
cmp [ ecx + 0x1c ] 0x1
jbe r-xdata
push [ ebp + 0xc ]
call sub_414658
jmp r-xdata
cmp [ ecx + 0x4c38 ] 0x0
jne r-xdata
push [ ebp + 0xc ]
call sub_415071
jmp r-xdata
sub_411308
push ebx
push edi
mov edi [ esp + 0xc ]
mov ebx ecx
cmp [ edi + 0x1c ] 0x0
jbe r-xdata
pop edi
pop ebx
retn 0x4
mov eax [ ebx + 0x4c50 ]
push esi
mov [ edi + 0x50 ] eax
lea esi [ ebx + 0xe65c ]
mov eax [ edi + 0x18 ]
mov ecx esi
push [ ebx + 0x4c50 ]
add eax 0x24
push eax
call sub_40bd20
mov eax [ ebx + 0x4c50 ]
mov cl 0x20
mov edx [ ebx + 0x4c54 ]
call sub_41c860
push eax
mov eax [ edi + 0x18 ]
mov ecx esi
add eax 0x28
push eax
call sub_40bd20
push edi
mov ecx esi
call sub_40b383
pop esi
sub_41136a
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi ecx
movzx ebp [ esi + edi + 0x29 ]
movzx eax [ esi + edi + 0x2a ]
cmp ebp eax
jne r-xdata
push ebx
lea eax [ esi + 0x1 ]
push eax
call sub_410c28
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ esp + 0x10 ]
jmp r-xdata
mov eax ebx
pop ebx
imul ecx esi 0xc
mov esi [ esp + 0x14 ]
push ecx
push esi
push ebx
call sub_41ee90
mov eax [ edi + ebp * 4 + 0xb8 ]
add esp 0xc
mov [ esi ] eax
mov [ edi + ebp * 4 + 0xb8 ] esi
pop edi
pop esi
pop ebp
retn 0x8
sub_4113c2
push esi
mov esi [ esp + 0x8 ]
lea edx [ ecx + 0x80 ]
xor eax eax
mov eax [ ecx + eax * 4 + 0x80 ]
sub eax esi
cmp eax [ esp + 0xc ]
jb r-xdata
inc eax
add edx 0x4
cmp eax 0x20
jb r-xdata
pop esi
retn 0x8
mov eax [ esp + 0xc ]
cmp esi [ edx ]
jb r-xdata
xor eax eax
jmp r-xdata
sub_411418
sub esp 0xc
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov eax [ esi + 0xb0 ]
cmp eax [ esi + 0xb4 ]
je r-xdata
lea eax [ esp + 0xc ]
mov edi ebx
push ebp
mov [ esp + 0x18 ] eax
lea edx [ esi + 0xb8 ]
mov [ esp + 0x14 ] eax
mov ebp 0xffff
jmp r-xdata
mov [ eax ] bl
cmp [ edx ] ebx
jne r-xdata
mov ecx [ edx ]
mov eax [ ecx ]
mov [ edx ] eax
lea eax [ esp + 0x10 ]
mov [ ecx + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x14 ]
mov [ eax + 0x8 ] ecx
mov [ esp + 0x14 ] ecx
mov [ ecx ] bp
movzx eax [ esi + edi + 0x4 ]
mov [ ecx + 0x2 ] ax
inc edi
add edx 0x4
cmp edi 0x26
jl r-xdata
mov edx [ esp + 0x14 ]
lea eax [ esp + 0x10 ]
cmp edx eax
je r-xdata
pop ebp
jmp r-xdata
jmp r-xdata
lea eax [ esp + 0xc ]
mov edi edx
cmp edx eax
jne r-xdata
movzx eax [ edx + 0x2 ]
imul edi eax 0xc
add edi edx
cmp [ edi ] bp
je r-xdata
mov ecx [ edx + 0x8 ]
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov ecx [ edx + 0x4 ]
mov eax [ edx + 0x8 ]
mov [ ecx + 0x8 ] eax
movzx ecx [ edi + 0x2 ]
cmp ecx 0x80
jle r-xdata
pop edi
pop esi
pop ebx
add esp 0xc
retn
movzx ecx [ edi + 0x2 ]
movzx eax [ edx + 0x2 ]
add ecx eax
cmp ecx 0x10000
jge r-xdata
mov edx [ edx + 0x4 ]
lea eax [ esp + 0x10 ]
cmp edx eax
jne r-xdata
movzx ebx [ esi + ecx + 0x29 ]
movzx eax [ esi + ebx + 0x4 ]
cmp eax ecx
je r-xdata
lea edx [ ecx - 0x81 ]
shr edx 0x7
inc edx
imul eax edx 0xffffff80
add ecx eax
mov ecx [ edi + 0x8 ]
mov eax [ edi + 0x4 ]
mov [ ecx + 0x4 ] eax
mov ecx [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
mov [ ecx + 0x8 ] eax
mov ax [ edi + 0x2 ]
add [ edx + 0x2 ] ax
mov edx [ esp + 0x14 ]
mov eax [ esi + ebx * 4 + 0xb8 ]
mov [ edi ] eax
mov edx [ esp + 0x10 ]
mov [ esi + ebx * 4 + 0xb8 ] edi
movzx eax [ esi + ebx + 0x3 ]
dec ebx
mov edx ecx
sub edx eax
sub ecx edx
imul ecx ecx 0xc
mov eax [ esi + edx * 4 + 0xb4 ]
add ecx edi
mov [ ecx ] eax
mov [ esi + edx * 4 + 0xb4 ] ecx
mov eax [ esi + 0x14c ]
mov [ edi ] eax
mov [ esi + 0x14c ] edi
add edi 0x600
sub edx 0x1
jne r-xdata
sub_411581
sub esp 0x14
push ebx
push ebp
mov eax ecx
push edi
mov [ esp + 0x10 ] eax
call sub_412c25
mov ebp [ esp + 0x24 ]
xor ebx ebx
xor edi edi
test ebp ebp
je r-xdata
pop edi
pop ebp
pop ebx
add esp 0x14
retn 0x4
push esi
cmp edi ebp
jae r-xdata
mov esi ebp
xor edx edx
push 0x20
sub esi edi
pop ecx
sub ecx ebx
mov eax esi
div ecx
mov ecx __pe_sfxrar_export_address_table
mov [ esp + 0x28 ] eax
cmp eax ecx
ja r-xdata
pop esi
and [ esp + 0x20 ] 0x0
lea eax [ esp + 0x18 ]
mov [ esp + 0x1c ] r--data
mov [ esp + 0x18 ] r--data
push r--data
jmp r-xdata
cmp esi eax
jb r-xdata
mov eax ecx
mov [ esp + 0x28 ] ecx
push eax
call sub_41f404
int3
and [ esp + 0x20 ] 0x0
lea eax [ esp + 0x18 ]
mov [ esp + 0x1c ] r--data
mov [ esp + 0x18 ] r--data
push r--data
push esi
call sub_422c59
mov [ esp + 0x14 ] eax
pop ecx
test eax eax
jne r-xdata
push esi
push 0x0
push eax
call sub_41d1e0
mov ecx [ esp + 0x20 ]
add edi esi
mov eax [ esp + 0x1c ]
add esp 0xc
mov [ ecx + ebx * 4 ] eax
mov [ ecx + ebx * 4 + 0x80 ] edi
inc ebx
cmp edi ebp
jb r-xdata
mov eax esi
shr eax 0x5
sub esi eax
cmp esi [ esp + 0x28 ]
jae r-xdata
cmp ebx 0x20
jae r-xdata
jmp r-xdata
sub_411660
sub esp 0xc
push ebx
mov ebx [ esp + 0x14 ]
push edi
mov edi ecx
test ebx ebx
jne r-xdata
mov eax 0x40000
cmp ebx eax
jae r-xdata
mov ecx rw-data
call sub_406a1c
cmp ebx [ edi + 0xe6d8 ]
jbe r-xdata
mov ebx eax
mov [ esp + 0x18 ] ebx
pop edi
pop ebx
add esp 0xc
retn 0x8
mov eax ebx
shr eax 0x10
cmp eax 0x10000
ja r-xdata
xor eax eax
cmp [ esp + 0x1c ] al
je r-xdata
mov [ esp + 0x1c ] al
cmp [ edi + 0x4b34 ] eax
jne r-xdata
push ebx
call sub_422c59
mov ebp eax
pop ecx
test ebp ebp
jne r-xdata
mov ebp eax
jmp r-xdata
mov [ esp + 0x1c ] 0x1
cmp [ edi + 0x4c38 ] al
je r-xdata
cmp [ edi + 0x4c38 ] al
je r-xdata
cmp [ edi + 0x4c38 ] 0x0
jne r-xdata
cmp [ esp + 0x20 ] 0x0
jne r-xdata
push ebp
cmp [ edi + 0x4c38 ] al
je r-xdata
jmp r-xdata
lea eax [ ebx - 0x1 ]
mov [ edi + 0xe6d8 ] ebx
mov [ edi + 0xe6dc ] eax
pop ebp
push ebx
push 0x0
push ebp
call sub_41d1e0
add esp 0xc
cmp [ esp + 0x20 ] 0x0
je r-xdata
mov [ esp + 0x14 ] eax
lea eax [ esp + 0xc ]
push r--data
push eax
mov [ esp + 0x18 ] r--data
mov [ esp + 0x14 ] r--data
call sub_41f404
int3
cmp ebx 0x1000000
jb r-xdata
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x8 ]
push r--data
push eax
mov [ esp + 0x14 ] r--data
mov [ esp + 0x10 ] r--data
call sub_41f404
mov eax [ edi + 0x4b34 ]
test eax eax
je r-xdata
cmp [ edi + 0xe6d8 ] 0x1
jb r-xdata
mov eax [ edi + 0x4b34 ]
test eax eax
je r-xdata
mov [ edi + 0x4b34 ] ebp
push eax
call j_sub_4251ac#3
pop ecx
lea ecx [ ebx - 0x1 ]
xor ebx ebx
mov [ esp + 0x20 ] ecx
inc ebx
push esi
push ebx
lea ecx [ edi + 0x4b38 ]
call sub_411581
mov [ edi + 0x4c38 ] 0x1
push eax
call j_sub_4251ac#3
and [ edi + 0x4b34 ] 0x0
pop ecx
mov esi [ edi + 0x70 ]
mov edx [ edi + 0xe6d8 ]
sub esi ebx
mov eax [ edi + 0x4b34 ]
dec edx
and edx esi
and ecx esi
inc ebx
mov al [ edx + eax ]
mov [ ecx + ebp ] al
mov ecx [ esp + 0x24 ]
cmp ebx [ edi + 0xe6d8 ]
jbe r-xdata
mov ebx [ esp + 0x20 ]
pop esi
sub_411802
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push edi
push 0x4
pop edi
and [ esi + 0x4 ] 0x0
and [ esi ] 0x0
or [ esi + 0x8 ] 0xffffffff
mov [ esi + 0x18 ] eax
mov ecx [ esi + 0x18 ]
call sub_4113f7
mov ecx [ esi + 0x4 ]
shl ecx 0x8
or ecx eax
mov [ esi + 0x4 ] ecx
sub edi 0x1
jne r-xdata
pop edi
pop esi
retn 0x4
sub_411838
push ebx
push ebp
push esi
xor ebp ebp
mov esi ecx
cmp [ esp + 0x10 ] 0x0
push edi
jne r-xdata
mov edi ebp
cmp [ esi + 0xe6b8 ] ebp
jbe r-xdata
mov edi ebp
mov [ esi + 0xe6c8 ] ebp
mov [ esi + 0xe6d4 ] ebp
cmp [ esi + 0xe6a8 ] ebp
jbe r-xdata
pop edi
mov [ esi + 0xe6b8 ] ebp
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ esi + 0xe6b4 ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
mov [ esi + 0xe6a8 ] ebp
mov eax [ esi + 0xe6a4 ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
inc edi
cmp edi [ esi + 0xe6b8 ]
jb r-xdata
lea ecx [ ebx + 0x14 ]
call sub_41045e
push 0x70
push ebx
call sub_41c15e
pop ecx
pop ecx
inc edi
cmp edi [ esi + 0xe6a8 ]
jb r-xdata
lea ecx [ ebx + 0x14 ]
call sub_41045e
push 0x70
push ebx
call sub_41c15e
pop ecx
pop ecx
sub_4118ca
mov eax sub_42ef05
call sub_41c16c
push ecx
push ecx
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0x20 ] ebx
jne r-xdata
cmp [ edi + 0x18 ] ebx
jne r-xdata
mov esi 0x400400
push esi
call sub_41c402
push esi
push ebx
push eax
mov [ edi + 0x20 ] eax
call sub_41d1e0
add esp 0x10
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov esi [ edi + 0x1c ]
xor ecx ecx
add esi esi
mov edx 0x4ae4
mov eax esi
mov [ ebp - 0x10 ] esi
mul edx
seto cl
neg ecx
or ecx eax
xor eax eax
add ecx 0x4
setb al
neg eax
or eax ecx
push eax
call sub_41c402
pop ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] ebx
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
imul eax esi 0x4ae4
mov [ edi + 0x18 ] ebx
push eax
push 0x0
push ebx
call sub_41d1e0
add esp 0xc
test esi esi
je r-xdata
push sub_410441
push sub_4102ce
push esi
lea ebx [ eax + 0x4 ]
mov [ eax ] esi
push 0x4ae4
push ebx
call sub_41c26d
xor eax eax
mov [ ebp - 0x10 ] eax
add eax 0x4ae4
mov [ ebp - 0x10 ] eax
sub esi 0x1
jne r-xdata
push 0x30c00
mov [ ebx + 0x4adc ] 0x4100
call sub_422c59
mov [ ebx + 0x4ad4 ] eax
pop ecx
test eax eax
jne r-xdata
mov ebx [ edi + 0x18 ]
add ebx eax
cmp [ ebx + 0x4ad4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx rw-data
call sub_406a1c
sub_4119d0
push ecx
push ecx
push ebx
push ebp
push esi
push edi
mov ebx ecx
xor eax eax
push 0x98
push eax
mov [ esp + 0x1c ] eax
lea eax [ ebx + 0xb8 ]
mov [ esp + 0x18 ] ebx
push eax
call sub_41d1e0
mov ebp [ ebx + 0xac ]
add esp 0xc
mov [ ebx + 0x150 ] ebp
mov ebx [ ebx ]
mov eax ebx
cdq
and edx 0x7
add eax edx
xor edx edx
sar eax 0x3
push 0xc
pop ecx
div ecx
xor edx edx
imul edi eax 0x54
push 0xc
sub ebx edi
mov eax ebx
div ecx
lea ecx [ ebx + ebp ]
xor edx edx
inc eax
imul esi eax 0xc
mov eax [ esp + 0x14 ]
mov ebx eax
add esi ebp
mov [ ebx + 0x15c ] ecx
mov [ eax + 0x154 ] esi
mov [ eax + 0xb0 ] esi
mov eax edi
pop edi
div edi
push 0x4
imul eax eax 0xc
pop edx
push edx
pop ecx
add eax esi
mov [ ebx + 0xb4 ] eax
xor eax eax
inc eax
mov [ ebx + eax + 0x3 ] al
inc eax
sub edx 0x1
jne r-xdata
inc eax
mov [ ebx + ecx + 0x4 ] al
inc ecx
add eax 0x2
cmp ecx 0x8
jl r-xdata
inc eax
jmp r-xdata
cmp ecx edi
jl r-xdata
mov [ ebx + ecx + 0x4 ] al
inc ecx
add eax 0x3
inc eax
jmp r-xdata
cmp ecx 0x26
jl r-xdata
mov [ ebx + ecx + 0x4 ] al
inc ecx
add eax 0x4
push 0xffffffd7
xor eax eax
lea esi [ ebx + 0x2a ]
pop edi
mov [ ebx + 0xaa ] al
sub edi ebx
mov ebp 0x80
movzx ecx [ ebx + eax + 0x4 ]
xor edx edx
lea eax [ edi + esi ]
cmp ecx eax
mov eax [ esp + 0x14 ]
setl dl
add eax edx
mov [ esi ] al
inc esi
mov [ esp + 0x14 ] eax
sub ebp 0x1
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
sub_411ad3
sub esp 0x84
lea eax [ esp + 0x4 ]
push ebx
mov ebx [ esp + 0x94 ]
push ebp
push esi
mov esi [ esp + 0x98 ]
push edi
push 0x40
xor edi edi
push edi
push eax
mov [ esi ] ebx
call sub_41d1e0
mov ebp [ esp + 0xa4 ]
add esp 0xc
mov ecx edi
test ebx ebx
je r-xdata
lea eax [ ebx + ebx ]
mov [ esp + 0x14 ] edi
push eax
lea eax [ esi + 0xc88 ]
push edi
push eax
call sub_41d1e0
lea edx [ esi + 0x44 ]
mov [ esi + 0x4 ] edi
xor ebp ebp
mov [ edx ] edi
add esp 0xc
mov esi edi
inc ebp
mov ebx edx
movzx eax [ ecx + ebp ]
and eax 0xf
inc [ esp + eax * 4 + 0x14 ]
inc ecx
cmp ecx ebx
jb r-xdata
add esi [ esp + ebp * 4 + 0x14 ]
push 0x10
pop ecx
sub ecx ebp
mov eax esi
shl eax cl
add esi esi
mov [ ebx - 0x3c ] eax
mov eax [ esp + ebp * 4 + 0x10 ]
add eax [ ebx ]
inc ebp
mov [ ebx + 0x4 ] eax
lea ebx [ ebx + 0x4 ]
cmp ebp 0x10
jb r-xdata
push 0x40
push edx
lea eax [ esp + 0x5c ]
push eax
call sub_41ee90
mov ebx [ esp + 0xac ]
add esp 0xc
mov esi [ esp + 0x9c ]
mov edx edi
mov ebp [ esp + 0x98 ]
test ebx ebx
je r-xdata
cmp ebx 0x12a
jb r-xdata
mov al [ edx + ebp ]
and al 0xf
je r-xdata
mov [ esi + 0x84 ] 0x7
cmp ebx 0x12b
jbe r-xdata
inc edx
cmp edx ebx
jb r-xdata
movzx ecx al
mov eax [ esp + ecx * 4 + 0x54 ]
mov [ esi + eax * 2 + 0xc88 ] dx
inc eax
mov [ esp + ecx * 4 + 0x54 ] eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x84
retn 0xc
lea ebp [ esi + 0x488 ]
mov [ esi + 0x84 ] 0xa
jmp r-xdata
cmp ebx 0x132
jne r-xdata
push 0x10
mov [ esi + edi + 0x88 ] dl
sub eax [ esi + edx * 4 ]
pop ecx
sub ecx edx
shr eax cl
add eax [ esi + edx * 4 + 0x44 ]
cmp eax ebx
jae r-xdata
lea ecx [ esi + 0x4 ]
lea ecx [ ecx + edx * 4 ]
mov ecx [ esi + 0x84 ]
xor edx edx
inc edx
mov eax edx
shl eax cl
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
xor eax eax
mov ax [ esi + eax * 2 + 0xc88 ]
jmp r-xdata
inc edx
add ecx 0x4
cmp edx 0x10
jb r-xdata
push 0x10
pop ecx
sub ecx [ esi + 0x84 ]
mov eax edi
shl eax cl
cmp edx 0x10
jae r-xdata
mov [ ebp ] ax
inc edi
add ebp 0x2
cmp edi [ esp + 0x10 ]
jb r-xdata
cmp eax [ ecx ]
jb r-xdata
sub_411c60
sub esp 0x1c
mov eax [ esp + 0x20 ]
push ebx
push ebp
push esi
mov esi ecx
mov ecx [ eax + 0x4ad4 ]
imul eax [ eax + 0x4ad8 ] 0xc
push edi
mov [ esp + 0x10 ] esi
mov [ esp + 0x30 ] ecx
add eax ecx
mov [ esp + 0x18 ] eax
cmp ecx eax
jae r-xdata
mov al 0x1
push 0x3
pop ebx
mov ecx [ esp + 0x30 ]
cmp [ ecx ] 0x0
jne r-xdata
cmp edx [ esi + 0x70 ]
je r-xdata
cmp [ ecx ] 0x1
jne r-xdata
cmp [ ecx + 0x4 ] bx
jne r-xdata
mov ecx esi
call sub_413638
mov eax [ esi + 0x4c54 ]
cmp eax [ esi + 0x4c44 ]
jg r-xdata
cmp [ ecx ] ebx
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov eax [ esi + 0x5c ]
mov edi [ esp + 0x30 ]
mov [ esi + 0x60 ] eax
mov eax [ esi + 0x58 ]
mov [ esi + 0x5c ] eax
mov eax [ esi + 0x54 ]
mov [ esi + 0x58 ] eax
mov [ esi + 0x54 ] ecx
movzx eax [ edi + 0x4 ]
mov ecx [ esi + 0x70 ]
mov ebp ecx
mov [ esi + 0x68 ] eax
mov edx [ edi + 0x8 ]
sub ebp edx
mov eax [ esi + 0xe6d8 ]
movzx edi [ edi + 0x4 ]
add eax 0xffffefff
cmp ebp eax
jae r-xdata
mov edi [ esp + 0x30 ]
xor ebx ebx
mov eax [ esi + 0xe6d8 ]
mov edx [ esi + 0x70 ]
sub eax 0x4
cmp edx eax
jae r-xdata
xor al al
jmp r-xdata
jl r-xdata
cmp [ ecx ] 0x2
jne r-xdata
mov edx [ ecx + 0x8 ]
mov ebp [ esi + edx * 4 + 0x54 ]
mov [ esp + 0x14 ] ebp
test edx edx
je r-xdata
test edi edi
je r-xdata
cmp ecx eax
jae r-xdata
mov edx [ esi + 0x70 ]
and edx [ esi + 0xe6dc ]
mov ecx [ esi + 0x4b34 ]
mov al [ edi + ebx + 0x8 ]
mov [ edx + ecx ] al
inc [ esi + 0x70 ]
inc ebx
movzx eax [ edi + 0x4 ]
cmp ebx eax
jbe r-xdata
push 0x3
mov edi [ esp + 0x30 ]
mov ecx [ esi + 0x4b34 ]
mov eax [ edi + 0x8 ]
mov [ edx + ecx ] eax
add [ esi + 0x70 ] 0x4
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x4
mov eax [ esi + 0x4c50 ]
cmp eax [ esi + 0x4c40 ]
ja r-xdata
cmp [ ecx ] 0x4
jne r-xdata
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
mov [ esi + 0x54 ] ebp
movzx eax [ ecx + 0x4 ]
mov [ esi + 0x68 ] eax
movzx edi [ ecx + 0x4 ]
mov ecx [ esi + 0x70 ]
mov ebx ecx
mov eax [ esi + 0xe6d8 ]
sub ebx ebp
add eax 0xffffefff
cmp ebx eax
jae r-xdata
lea edi [ edx + 0x15 ]
lea edi [ esi + edi * 4 ]
mov eax [ esp + 0x30 ]
add eax 0xc
mov [ esp + 0x30 ] eax
cmp eax [ esp + 0x18 ]
jb r-xdata
mov ebx [ esi + 0xe6dc ]
mov eax [ esi + 0x4b34 ]
lea ebx [ eax + ebp ]
lea ebp [ eax + ecx ]
lea eax [ ecx + edi ]
mov [ esi + 0x70 ] eax
cmp edx edi
jae r-xdata
mov ecx [ esi + 0xe6dc ]
mov edx [ esi + 0x4b30 ]
mov eax edx
and [ esi + 0x70 ] ecx
sub eax [ esi + 0x70 ]
and eax ecx
cmp eax 0x1004
jae r-xdata
mov al [ ecx + 0x4 ]
mov [ esp + 0x1c ] al
mov eax [ ecx + 0x8 ]
add ecx 0xc
mov [ esp + 0x20 ] eax
mov [ esp + 0x30 ] ecx
mov al [ ecx + 0x4 ]
mov [ esp + 0x28 ] al
mov eax [ ecx + 0x8 ]
mov ecx esi
mov [ esp + 0x24 ] eax
lea eax [ esp + 0x1c ]
push eax
call sub_41065b
jmp r-xdata
mov ecx [ esi + 0x70 ]
mov ebx ecx
mov eax [ esi + 0xe6d8 ]
mov edx [ esi + 0x54 ]
add eax 0xffffefff
sub ebx edx
cmp ebx eax
jae r-xdata
test edi edi
je r-xdata
cmp ecx eax
jae r-xdata
mov eax [ edi - 0x4 ]
mov [ edi ] eax
lea edi [ edi - 0x4 ]
sub edx 0x1
jne r-xdata
mov edx [ esi + 0x4b34 ]
and ebx ebp
mov ecx [ esi + 0x70 ]
inc ebp
mov al [ ebx + edx ]
mov [ edx + ecx ] al
mov eax [ esi + 0x70 ]
mov ebx [ esi + 0xe6dc ]
inc eax
and eax ebx
mov [ esi + 0x70 ] eax
sub edi 0x1
jne r-xdata
jmp r-xdata
cmp edi 0x8
jb r-xdata
cmp edi 0x8
jb r-xdata
test edi edi
je r-xdata
cmp ecx eax
jae r-xdata
mov ebp [ esi + 0xe6dc ]
mov eax [ esi + 0x4b34 ]
add ebx eax
lea ebp [ eax + ecx ]
lea eax [ ecx + edi ]
mov [ esi + 0x70 ] eax
cmp [ esp + 0x14 ] edi
jae r-xdata
test edi edi
je r-xdata
mov eax edi
shr eax 0x3
mov [ esp + 0x14 ] eax
mov esi eax
mov ecx edi
shr ecx 0x3
mov ebp [ esi + 0xe6dc ]
mov eax [ esi + 0x4b34 ]
add ebx eax
lea ebp [ eax + ecx ]
lea eax [ ecx + edi ]
mov [ esi + 0x70 ] eax
cmp edx edi
jae r-xdata
mov edx [ esi + 0x4b34 ]
and ebp ebx
mov ecx [ esi + 0x70 ]
inc ebx
mov al [ edx + ebp ]
mov [ edx + ecx ] al
mov eax [ esi + 0x70 ]
mov ebp [ esi + 0xe6dc ]
inc eax
and eax ebp
mov [ esi + 0x70 ] eax
sub edi 0x1
jne r-xdata
jmp r-xdata
cmp edi 0x8
jb r-xdata
cmp edi 0x8
jb r-xdata
mov al [ ebx ]
mov [ ebp ] al
cmp edi 0x1
jbe r-xdata
push 0x8
push ebx
push ebp
call sub_41ee90
add esp 0xc
add ebx 0x8
add ebp 0x8
sub edi 0x8
sub esi 0x1
jne r-xdata
mov esi [ esp + 0x10 ]
mov al [ ebx ]
sub edi 0x8
mov [ ebp ] al
mov al [ ebx + 0x1 ]
mov [ ebp + 0x1 ] al
mov al [ ebx + 0x2 ]
mov [ ebp + 0x2 ] al
mov al [ ebx + 0x3 ]
mov [ ebp + 0x3 ] al
mov al [ ebx + 0x4 ]
mov [ ebp + 0x4 ] al
mov al [ ebx + 0x5 ]
mov [ ebp + 0x5 ] al
mov al [ ebx + 0x6 ]
mov [ ebp + 0x6 ] al
mov al [ ebx + 0x7 ]
add ebx 0x8
mov [ ebp + 0x7 ] al
add ebp 0x8
sub ecx 0x1
jne r-xdata
jmp r-xdata
mov edx [ esi + 0x4b34 ]
and ebp ebx
mov ecx [ esi + 0x70 ]
inc ebx
mov al [ edx + ebp ]
mov [ edx + ecx ] al
mov eax [ esi + 0x70 ]
mov ebp [ esi + 0xe6dc ]
inc eax
and eax ebp
mov [ esi + 0x70 ] eax
sub edi 0x1
jne r-xdata
jmp r-xdata
cmp edi 0x8
jb r-xdata
cmp edi 0x8
jb r-xdata
test edi edi
je r-xdata
mov eax edi
shr eax 0x3
mov [ esp + 0x14 ] eax
mov esi eax
mov ecx edi
shr ecx 0x3
mov al [ ebx + 0x1 ]
mov [ ebp + 0x1 ] al
cmp edi 0x2
jbe r-xdata
mov eax edi
shr eax 0x3
mov [ esp + 0x14 ] eax
mov esi eax
mov ecx edi
shr ecx 0x3
mov al [ ebx ]
mov [ ebp ] al
cmp edi 0x1
jbe r-xdata
push 0x8
push ebx
push ebp
call sub_41ee90
add esp 0xc
add ebx 0x8
add ebp 0x8
sub edi 0x8
sub esi 0x1
jne r-xdata
mov esi [ esp + 0x10 ]
mov al [ ebx ]
sub edi 0x8
mov [ ebp ] al
mov al [ ebx + 0x1 ]
mov [ ebp + 0x1 ] al
mov al [ ebx + 0x2 ]
mov [ ebp + 0x2 ] al
mov al [ ebx + 0x3 ]
mov [ ebp + 0x3 ] al
mov al [ ebx + 0x4 ]
mov [ ebp + 0x4 ] al
mov al [ ebx + 0x5 ]
mov [ ebp + 0x5 ] al
mov al [ ebx + 0x6 ]
mov [ ebp + 0x6 ] al
mov al [ ebx + 0x7 ]
add ebx 0x8
mov [ ebp + 0x7 ] al
add ebp 0x8
sub ecx 0x1
jne r-xdata
jmp r-xdata
mov al [ ebx + 0x2 ]
mov [ ebp + 0x2 ] al
cmp edi 0x3
jbe r-xdata
push 0x8
push ebx
push ebp
call sub_41ee90
add esp 0xc
add ebx 0x8
add ebp 0x8
sub edi 0x8
sub esi 0x1
jne r-xdata
jmp r-xdata
mov al [ ebx ]
sub edi 0x8
mov [ ebp ] al
mov al [ ebx + 0x1 ]
mov [ ebp + 0x1 ] al
mov al [ ebx + 0x2 ]
mov [ ebp + 0x2 ] al
mov al [ ebx + 0x3 ]
mov [ ebp + 0x3 ] al
mov al [ ebx + 0x4 ]
mov [ ebp + 0x4 ] al
mov al [ ebx + 0x5 ]
mov [ ebp + 0x5 ] al
mov al [ ebx + 0x6 ]
mov [ ebp + 0x6 ] al
mov al [ ebx + 0x7 ]
add ebx 0x8
mov [ ebp + 0x7 ] al
add ebp 0x8
sub ecx 0x1
jne r-xdata
jmp r-xdata
mov al [ ebx + 0x1 ]
mov [ ebp + 0x1 ] al
cmp edi 0x2
jbe r-xdata
mov al [ ebx + 0x3 ]
mov [ ebp + 0x3 ] al
cmp edi 0x4
jbe r-xdata
mov al [ ebx + 0x2 ]
mov [ ebp + 0x2 ] al
cmp edi 0x3
jbe r-xdata
mov al [ ebx + 0x4 ]
mov [ ebp + 0x4 ] al
cmp edi 0x5
jbe r-xdata
mov al [ ebx + 0x3 ]
mov [ ebp + 0x3 ] al
cmp edi 0x4
jbe r-xdata
mov al [ ebx + 0x5 ]
mov [ ebp + 0x5 ] al
cmp edi 0x6
jbe r-xdata
mov al [ ebx + 0x4 ]
mov [ ebp + 0x4 ] al
cmp edi 0x5
jbe r-xdata
mov al [ ebx + 0x6 ]
mov [ ebp + 0x6 ] al
jmp r-xdata
mov al [ ebx + 0x5 ]
mov [ ebp + 0x5 ] al
push 0x3
cmp edi 0x6
jbe r-xdata
pop ebx
mov al [ ebx + 0x6 ]
mov [ ebp + 0x6 ] al
jmp r-xdata
sub_4121e2
push esi
push edi
push 0x1
mov esi ecx
call sub_4105e3
mov edx [ esi + 0x4 ]
mov edi [ esi ]
lea esi [ esp + 0xc ]
add edi 0xfffffff0
shl edx 0x4
add edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
retn 0x10
sub_412207
sub esp 0xc
push ebx
push ebp
push esi
mov esi [ esp + 0x1c ]
xor ebx ebx
push edi
mov edi [ esp + 0x24 ]
mov ebp ecx
mov [ esp + 0x14 ] ebp
mov [ edi + 0xc ] ebx
cmp [ esi + 0x8 ] bl
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx esi
neg eax
and eax 0x7
push eax
call sub_409e83
mov ecx esi
call j_sub_409e9f
shr eax 0x8
mov ecx esi
push 0x8
mov [ esp + 0x14 ] eax
call sub_409e83
mov eax [ esp + 0x10 ]
movzx ecx al
mov eax ecx
shr eax 0x3
and eax 0x3
inc eax
mov [ esp + 0x20 ] eax
cmp eax 0x4
je r-xdata
mov eax [ ebp + 0x78 ]
sub eax 0x7
cmp [ esi ] eax
jle r-xdata
xor al al
jmp r-xdata
and ecx 0x7
add eax 0x2
inc ecx
mov [ edi + 0xc ] eax
mov [ edi + 0x4 ] ecx
mov ecx esi
call j_sub_409e9f
shr eax 0x8
mov ecx esi
push 0x8
mov [ esp + 0x1c ] eax
call sub_409e83
cmp [ esp + 0x20 ] ebx
jbe r-xdata
call sub_41314c
test al al
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x8
mov edx [ esp + 0x10 ]
mov ecx ebx
sar ecx 0x10
mov eax ebx
sar eax 0x8
xor cl al
mov [ edi ] ebx
xor cl bl
xor cl dl
xor cl 0x5a
cmp cl [ esp + 0x18 ]
jne r-xdata
mov edi [ esp + 0x20 ]
mov ebp ebx
mov eax [ esi ]
mov [ edi + 0x8 ] eax
lea ecx [ eax - 0x1 ]
mov eax [ ebp + 0x7c ]
add ecx ebx
cmp eax ecx
jl r-xdata
mov ecx esi
call j_sub_409e9f
shr eax 0x8
mov ecx ebp
shl eax cl
add ebp 0x8
mov ecx [ esi + 0x4 ]
add ebx eax
add ecx 0x8
mov eax ecx
and ecx 0x7
shr eax 0x3
add [ esi ] eax
mov [ esi + 0x4 ] ecx
sub edi 0x1
jne r-xdata
mov edi [ esp + 0x24 ]
mov ebp [ esp + 0x14 ]
mov [ ebp + 0x7c ] eax
mov al dl
shr al 0x6
and al 0x1
shr dl 0x7
mov [ edi + 0x10 ] al
mov al 0x1
mov [ edi + 0x11 ] dl
mov eax ecx
sub_412338
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x4 ]
mov ecx esi
call sub_409e9f
mov ecx [ esi + 0x4 ]
mov edx eax
xor bl bl
test edx 0x8000
je r-xdata
shr edx 0xe
mov bl 0x1
and dl bl
add ecx 0x2
mov dl 0x1
inc ecx
jmp r-xdata
mov ecx edi
pop edi
pop esi
pop ebx
jmp sub_41246b
pop edi
pop esi
xor al al
pop ebx
retn
mov eax ecx
and ecx 0x7
shr eax 0x3
add [ esi ] eax
test dl dl
mov [ esi + 0x4 ] ecx
sete al
mov [ edi + 0xe658 ] al
test bl bl
je r-xdata
sub_412391
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
push ebx
push esi
mov ecx edi
call sub_412407
mov ebx [ esp + 0x14 ]
mov ecx edi
push esi
mov [ ebx + 0x4 ] eax
call sub_412407
mov ecx esi
mov [ ebx + 0x8 ] eax
call j_sub_409e9f
shr eax 0xd
mov ecx esi
push 0x3
mov [ ebx ] al
call sub_409e83
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ edi + 0x78 ]
sub eax 0x10
cmp [ esi ] eax
jle r-xdata
mov al 0x1
pop ebx
mov ecx esi
call j_sub_409e9f
shr eax 0xb
mov ecx esi
inc al
push 0x5
mov [ ebx + 0xc ] al
call sub_409e83
call sub_41314c
test al al
je r-xdata
pop edi
pop esi
retn 0x8
sub_412407
push ebx
push esi
mov esi [ esp + 0xc ]
mov ecx esi
push edi
call j_sub_409e9f
mov edx [ esi + 0x4 ]
mov edi eax
add edx 0x2
shr edi 0xe
mov ecx edx
xor ebx ebx
shr ecx 0x3
and edx 0x7
add [ esi ] ecx
mov [ esi + 0x4 ] edx
add edi 0x1
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
retn 0x4
push ebp
mov ebp ebx
mov ecx esi
call j_sub_409e9f
shr eax 0x8
mov ecx ebp
shl eax cl
add ebp 0x8
mov ecx [ esi + 0x4 ]
add ebx eax
add ecx 0x8
mov eax ecx
and ecx 0x7
shr eax 0x3
add [ esi ] eax
mov [ esi + 0x4 ] ecx
sub edi 0x1
jne r-xdata
pop ebp
sub_41246b
sub esp 0x1ac
push esi
mov esi ecx
push edi
mov eax [ esi + 0x78 ]
lea edi [ esi + 0x4 ]
sub eax 0x19
cmp [ edi ] eax
jle r-xdata
mov eax [ esi + 0x8 ]
mov ecx edi
neg eax
and eax 0x7
push eax
call sub_409e83
mov ecx edi
call j_sub_409e9f
test eax 0x8000
je r-xdata
call sub_4130d0
test al al
je r-xdata
push ebx
xor ebx ebx
mov [ esi + 0xe654 ] ebx
mov [ esi + 0x98c8 ] ebx
mov [ esi + 0x98cc ] ebx
test eax 0x4000
jne r-xdata
lea eax [ esi + 0xe4bc ]
mov [ esi + 0xe654 ] 0x1
push eax
push esi
lea ecx [ esi + 0x98d0 ]
call sub_411219
jmp r-xdata
pop edi
pop esi
add esp 0x1ac
retn
push 0x2
mov ecx edi
call sub_409e83
push ebp
push 0x194
lea eax [ esi + 0xe4c0 ]
push ebx
push eax
call sub_41d1e0
add esp 0xc
mov [ esp + ebx + 0x14 ] al
mov ecx edi
call j_sub_409e9f
shr eax 0xc
mov ecx edi
push 0x4
movzx ebp al
call sub_409e83
test ebp ebp
jne r-xdata
mov ecx edi
call j_sub_409e9f
shr eax 0xc
mov ecx edi
movzx eax al
push 0x4
mov [ esp + 0x14 ] eax
call sub_409e83
mov eax [ esp + 0x10 ]
cmp eax 0xf
jne r-xdata
push 0x14
lea ebp [ esi + 0x3c44 ]
mov ecx esi
push ebp
lea eax [ esp + 0x1c ]
push eax
call sub_411ad3
xor ebx ebx
add ebp 0x2
jmp r-xdata
mov [ esp + ebx + 0x14 ] 0xf
jmp r-xdata
mov ecx edi
call sub_409e9f
mov edx eax
mov eax [ ebp + 0x84 ]
and edx 0xfffe
cmp edx [ ebp + eax * 4 + 0x4 ]
jae r-xdata
mov ecx esi
call sub_4130d0
test al al
je r-xdata
test ebp ebp
jg r-xdata
inc ebx
cmp ebx 0x14
jb r-xdata
push 0xf
pop ecx
inc eax
mov [ esp + 0x10 ] ecx
cmp eax ecx
jae r-xdata
push 0x10
pop ecx
sub ecx eax
shr edx cl
movzx ecx [ edx + ebp + 0x88 ]
add ecx [ edi + 0x4 ]
mov eax ecx
shr eax 0x3
add [ edi ] eax
and ecx 0x7
mov [ edi + 0x4 ] ecx
movzx ecx [ ebp + edx * 2 + 0x488 ]
jmp r-xdata
xor al al
jmp r-xdata
dec ebp
cmp ebx 0x14
jae r-xdata
dec ebx
jmp r-xdata
mov ecx [ edi + 0x4 ]
add ecx [ esp + 0x10 ]
mov eax ecx
and ecx 0x7
shr eax 0x3
add [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] ecx
push 0x10
pop ecx
sub edx [ ebp + eax * 4 ]
sub ecx eax
shr edx cl
add edx [ ebp + eax * 4 + 0x44 ]
cmp edx [ ebp ]
sbb eax eax
and eax edx
movzx ecx [ ebp + eax * 2 + 0xc88 ]
lea ecx [ eax * 4 + 0x4 ]
add ecx ebp
cmp ecx 0x10
jge r-xdata
pop ebp
pop ebx
mov [ esp + ebx + 0x14 ] 0x0
inc ebx
cmp ecx 0x12
jge r-xdata
mov al [ ebx + esi + 0xe4c0 ]
add al cl
and al 0xf
mov [ esp + ebx + 0x28 ] al
inc ebx
jmp r-xdata
mov [ esp + 0x10 ] eax
inc eax
add ecx 0x4
cmp eax 0xf
jb r-xdata
mov ecx edi
jne r-xdata
cmp ecx 0x10
mov ecx edi
jne r-xdata
cmp ebx 0x194
jl r-xdata
cmp edx [ ecx ]
jb r-xdata
jmp r-xdata
call j_sub_409e9f
mov ebp eax
shr ebp 0x9
add ebp 0xb
push 0x7
call j_sub_409e9f
mov ebp eax
shr ebp 0xd
add ebp 0x3
push 0x3
jmp r-xdata
call j_sub_409e9f
mov ebp eax
shr ebp 0x9
add ebp 0xb
push 0x7
call j_sub_409e9f
mov ebp eax
shr ebp 0xd
add ebp 0x3
push 0x3
jmp r-xdata
mov eax [ esi + 0x78 ]
sub eax 0x5
cmp [ edi ] eax
jle r-xdata
mov eax [ edi ]
mov [ esi + 0xe658 ] 0x1
cmp eax [ esi + 0x78 ]
jle r-xdata
lea ebp [ esi + 0x3c44 ]
dec ebp
cmp ebx 0x194
jge r-xdata
mov ecx edi
call sub_409e83
test ebp ebp
jg r-xdata
mov ecx edi
call sub_409e83
test ebx ebx
jg r-xdata
push 0x12b
lea eax [ esi + 0x94 ]
mov ecx esi
push eax
lea eax [ esp + 0x30 ]
push eax
call sub_411ad3
push 0x3c
lea eax [ esi + 0xf80 ]
mov ecx esi
push eax
lea eax [ esp + 0x15b ]
push eax
call sub_411ad3
push 0x11
lea eax [ esi + 0x1e6c ]
mov ecx esi
push eax
lea eax [ esp + 0x197 ]
push eax
call sub_411ad3
push 0x1c
lea eax [ esi + 0x2d58 ]
mov ecx esi
push eax
lea eax [ esp + 0x1a8 ]
push eax
call sub_411ad3
push 0x194
lea ecx [ esp + 0x2c ]
push ecx
lea ecx [ esi + 0xe4c0 ]
push ecx
call sub_41ee90
add esp 0xc
mov al 0x1
mov [ esp + ebx + 0x28 ] 0x0
inc ebx
jmp r-xdata
dec ebp
cmp ebx 0x194
jge r-xdata
jmp r-xdata
test ebp ebp
jle r-xdata
mov al [ esp + ebx + 0x27 ]
mov [ esp + ebx + 0x28 ] al
inc ebx
sub_412795
mov eax [ esp + 0x8 ]
sub esp 0x1cc
cmp [ eax + 0x11 ] 0x0
push ebp
mov ebp ecx
jne r-xdata
push esi
mov esi [ esp + 0x1d8 ]
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
push edi
xor edi edi
push ebx
mov eax [ ebp + 0x78 ]
sub eax 0x19
cmp [ esi ] eax
jle r-xdata
pop ebp
add esp 0x1cc
retn 0xc
mov [ esp + edi + 0x18 ] bl
mov ecx esi
call j_sub_409e9f
shr eax 0xc
mov ecx esi
push 0x4
movzx ebx al
call sub_409e83
test ebx ebx
jne r-xdata
call sub_41314c
test al al
je r-xdata
mov ecx esi
call j_sub_409e9f
shr eax 0xc
mov ecx esi
push 0x4
movzx ebx al
call sub_409e83
cmp ebx 0xf
jne r-xdata
mov edi [ esp + 0x1e8 ]
lea eax [ esp + 0x18 ]
push 0x14
add edi 0x3bb0
mov ecx ebp
push edi
push eax
mov [ esp + 0x1c ] edi
call sub_411ad3
xor ebx ebx
add ebx 0x2
jmp r-xdata
mov [ esp + edi + 0x18 ] 0xf
jmp r-xdata
pop esi
mov ecx esi
call sub_409e9f
mov edx eax
mov eax [ edi + 0x84 ]
and edx 0xfffe
cmp edx [ edi + eax * 4 + 0x4 ]
jae r-xdata
mov eax [ ebp + 0x78 ]
sub eax 0x5
cmp [ esi ] eax
jle r-xdata
test ebx ebx
jg r-xdata
inc edi
cmp edi 0x14
jb r-xdata
push 0xf
pop ecx
inc eax
mov [ esp + 0x14 ] ecx
cmp eax ecx
jae r-xdata
push 0x10
pop ecx
sub ecx eax
shr edx cl
movzx ecx [ edx + edi + 0x88 ]
add ecx [ esi + 0x4 ]
mov eax ecx
shr eax 0x3
add [ esi ] eax
and ecx 0x7
mov [ esi + 0x4 ] ecx
movzx eax [ edi + edx * 2 + 0x488 ]
jmp r-xdata
mov ecx ebp
call sub_41314c
test al al
je r-xdata
dec ebx
cmp edi 0x14
jae r-xdata
dec edi
jmp r-xdata
mov ecx [ esi + 0x4 ]
add ecx [ esp + 0x14 ]
mov eax ecx
and ecx 0x7
shr eax 0x3
add [ esi ] eax
mov eax [ esp + 0x14 ]
mov [ esi + 0x4 ] ecx
push 0x10
pop ecx
sub edx [ edi + eax * 4 ]
sub ecx eax
shr edx cl
add edx [ edi + eax * 4 + 0x44 ]
cmp edx [ edi ]
sbb eax eax
and eax edx
movzx eax [ edi + eax * 2 + 0xc88 ]
lea ecx [ eax + 0x1 ]
lea ecx [ edi + ecx * 4 ]
cmp eax 0x10
jge r-xdata
xor al al
jmp r-xdata
mov [ esp + edi + 0x18 ] 0x0
inc edi
mov ecx esi
cmp eax 0x12
jge r-xdata
mov [ esp + ebx + 0x2c ] al
inc ebx
jmp r-xdata
mov [ esp + 0x14 ] eax
inc eax
add ecx 0x4
cmp eax 0xf
jb r-xdata
pop ebx
pop edi
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp ebx 0x1ae
jl r-xdata
cmp edx [ ecx ]
jb r-xdata
jmp r-xdata
call j_sub_409e9f
mov edi eax
shr edi 0x9
add edi 0xb
push 0x7
call j_sub_409e9f
mov edi eax
shr edi 0xd
add edi 0x3
push 0x3
jmp r-xdata
call j_sub_409e9f
mov edi eax
shr edi 0x9
add edi 0xb
push 0x7
call j_sub_409e9f
mov edi eax
shr edi 0xd
add edi 0x3
push 0x3
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edi [ esp + 0x10 ]
dec edi
cmp ebx 0x1ae
jge r-xdata
mov ecx esi
call sub_409e83
test edi edi
jg r-xdata
mov ecx esi
call sub_409e83
test ebx ebx
jg r-xdata
mov ebx [ esp + 0x1e8 ]
lea eax [ esp + 0x2c ]
push 0x132
push ebx
push eax
mov ecx ebp
call sub_411ad3
push 0x40
lea eax [ ebx + 0xeec ]
mov ecx ebp
push eax
lea eax [ esp + 0x166 ]
push eax
call sub_411ad3
push 0x10
lea eax [ ebx + 0x1dd8 ]
mov ecx ebp
push eax
lea eax [ esp + 0x1a6 ]
push eax
call sub_411ad3
push 0x2c
lea eax [ ebx + 0x2cc4 ]
mov ecx ebp
push eax
lea eax [ esp + 0x1b6 ]
push eax
call sub_411ad3
mov al 0x1
mov eax [ esi ]
cmp eax [ ebp + 0x78 ]
jle r-xdata
mov [ esp + ebx + 0x2c ] 0x0
inc ebx
jmp r-xdata
dec edi
cmp ebx 0x1ae
jge r-xdata
jmp r-xdata
test edi edi
jle r-xdata
mov al [ esp + ebx + 0x2b ]
mov [ esp + ebx + 0x2c ] al
inc ebx
sub_412a41
mov eax sub_42ef17
call sub_41c16c
sub esp 0x20
mov eax ecx
push ebx
push esi
push edi
lea edi [ eax + 0x4 ]
mov [ ebp - 0x14 ] eax
mov ecx edi
call sub_409e9f
mov edx [ edi + 0x4 ]
add edx 0x8
shr eax 0x8
mov ecx edx
mov [ ebp - 0x1c ] eax
push 0x7
pop ebx
shr ecx 0x3
mov esi eax
add [ edi ] ecx
and edx ebx
and esi ebx
mov [ edi + 0x4 ] edx
inc esi
cmp esi ebx
jne r-xdata
cmp esi 0x8
jne r-xdata
mov ecx edi
call sub_409e9f
mov ecx [ edi + 0x4 ]
mov esi eax
add ecx 0x8
shr esi 0x8
mov eax ecx
add esi ebx
shr eax 0x3
add [ edi ] eax
and ecx ebx
mov [ edi + 0x4 ] ecx
jmp r-xdata
push esi
lea ecx [ ebp - 0x2c ]
call sub_401571
mov ebx [ ebp - 0x2c ]
xor eax eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] eax
test esi esi
jle r-xdata
mov ecx edi
call sub_409e9f
mov edx [ edi + 0x4 ]
mov esi eax
add edx 0x10
mov ecx edx
shr ecx 0x3
add [ edi ] ecx
and edx ebx
mov [ edi + 0x4 ] edx
mov ecx [ ebp - 0x14 ]
push esi
push ebx
push [ ebp - 0x1c ]
call sub_4106c5
mov [ ebp - 0x18 ] al
mov ecx [ ebp - 0x14 ]
mov eax [ ecx + 0x78 ]
dec eax
cmp [ edi ] eax
jl r-xdata
mov ecx [ ebp - 0xc ]
mov al [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
push ebx
call j_sub_4251ac#3
pop ecx
mov ecx edi
call sub_409e9f
mov edx [ ebp - 0x10 ]
shr eax 0x8
mov [ ebx + edx ] al
mov ecx [ edi + 0x4 ]
add ecx 0x8
mov eax ecx
and ecx 0x7
shr eax 0x3
add [ edi ] eax
inc edx
mov [ edi + 0x4 ] ecx
mov [ ebp - 0x10 ] edx
cmp edx esi
jl r-xdata
call sub_4130d0
test al al
jne r-xdata
lea eax [ esi - 0x1 ]
cmp [ ebp - 0x10 ] eax
jl r-xdata
test ebx ebx
je r-xdata
sub_412b57
mov eax sub_42ef29
call sub_41c16c
sub esp 0x1c
push ebx
push edi
mov edi ecx
call sub_412dbc
or ebx 0xffffffff
mov [ ebp - 0x18 ] eax
cmp eax ebx
jne r-xdata
push esi
mov esi eax
and esi 0x7
inc esi
cmp esi 0x7
jne r-xdata
xor al al
jmp r-xdata
cmp esi 0x8
jne r-xdata
mov ecx edi
call sub_412dbc
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop ebx
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
push esi
lea ecx [ ebp - 0x28 ]
call sub_401571
mov ebx [ ebp - 0x28 ]
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] eax
test esi esi
jle r-xdata
mov ecx edi
call sub_412dbc
mov esi eax
cmp esi ebx
je r-xdata
xor al al
jmp r-xdata
lea esi [ eax + 0x7 ]
jmp r-xdata
push esi
push ebx
push [ ebp - 0x18 ]
mov ecx edi
call sub_4106c5
mov [ ebp - 0x14 ] al
mov ecx edi
call sub_412dbc
mov ecx eax
cmp ecx 0xffffffff
je r-xdata
mov ecx edi
call sub_412dbc
cmp eax ebx
jne r-xdata
pop esi
mov al [ ebp - 0x14 ]
push ebx
call j_sub_4251ac#3
pop ecx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebx + eax ] cl
inc eax
mov [ ebp - 0x10 ] eax
cmp eax esi
jl r-xdata
shl esi 0x8
add esi eax
sub_412c25
push esi
push edi
mov edi ecx
xor esi esi
inc esi
cmp esi 0x20
jb r-xdata
push [ edi + esi * 4 ]
call j_sub_4251ac#3
and [ edi + esi * 4 ] 0x0
pop ecx
cmp [ edi + esi * 4 ] 0x0
je r-xdata
pop edi
pop esi
retn
sub_412c47
sub esp 0xc
push ebx
push ebp
push esi
push edi
mov esi ecx
mov ebp 0x100
push ebp
xor ebx ebx
push ebx
lea eax [ esi + 0x66c ]
mov [ esp + 0x20 ] ebx
push eax
call sub_41d1e0
add esp 0xc
lea edi [ esi + 0x4a8c ]
mov ecx edi
call sub_4119d0
mov ecx [ esi + 0x660 ]
cmp ecx 0xc
jl r-xdata
or eax 0xffffffff
sub eax ecx
mov ecx edi
mov [ esi + 0x668 ] eax
call sub_410bf3
mov [ esi + 0x64c ] eax
mov ecx 0x101
mov [ esi + 0x644 ] eax
push 0x80
mov [ eax + 0x8 ] ebx
mov eax [ esi + 0x660 ]
mov [ esi + 0x65c ] eax
mov eax [ esi + 0x644 ]
mov [ eax ] bp
mov eax [ esi + 0x644 ]
mov [ eax + 0x2 ] cx
mov ecx edi
call sub_410c28
mov ecx [ esi + 0x644 ]
mov edx ebx
mov [ ecx + 0x4 ] eax
mov ecx ebx
mov [ esi + 0x650 ] eax
mov eax [ esi + 0x668 ]
mov [ esi + 0x664 ] eax
mov [ esi + 0xa6d ] bl
push 0xc
pop ecx
mov eax [ esi + 0x644 ]
mov eax [ eax + 0x4 ]
mov [ ecx + eax ] dl
inc edx
mov eax [ esi + 0x644 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x1 ] 0x1
mov eax [ esi + 0x644 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x2 ] ebx
add ecx 0x6
cmp ecx 0x600
jl r-xdata
lea eax [ esi + 0xa70 ]
mov edi ebx
mov [ esp + 0x10 ] eax
mov ecx 0x4000
sub ecx [ esp + 0x14 ]
mov [ edx ] cx
lea edx [ edx + 0x10 ]
sub eax 0x1
jne r-xdata
add ebp 0x2
add ebx 0x2
cmp ebp r--data
jl r-xdata
movzx eax [ ebp ]
lea ecx [ edi + 0x2 ]
cdq
idiv ecx
push 0x8
mov [ esp + 0x18 ] eax
mov edx ebx
pop eax
mov eax [ esp + 0x10 ]
mov ecx 0x80
inc edi
add eax ecx
mov [ esp + 0x10 ] eax
cmp edi ecx
jl r-xdata
mov ebp r--data
mov ebx eax
mov ebx [ esp + 0x18 ]
add esi 0x3
mov [ esi - 0x1 ] 0x403
mov [ esi - 0x3 ] cx
add esi 0x4
sub eax 0x1
jne r-xdata
inc ebx
cmp ebx 0x19
jl r-xdata
lea eax [ ebx + 0x2 ]
push 0x10
imul ecx eax 0x28
pop eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
sub_412dbc
push ebx
push esi
push edi
mov edi ecx
lea ebx [ edi + 0x98d0 ]
mov ecx ebx
call sub_411059
mov esi eax
cmp esi 0xffffffff
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
retn
mov ecx ebx
call sub_410e69
and [ edi + 0xe654 ] 0x0
sub_412de9
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
push ebx
push edi
mov edi ecx
movzx ebx [ eax + edi + 0x29 ]
movzx ecx [ edx + edi + 0x29 ]
cmp ebx ecx
jne r-xdata
push ebp
mov ebp [ edi + ecx * 4 + 0xb8 ]
test ebp ebp
je r-xdata
mov eax [ esp + 0xc ]
jmp r-xdata
push ecx
push ebx
push [ esp + 0x18 ]
mov ecx edi
call sub_412e5e
mov eax [ esp + 0x10 ]
mov eax [ ebp ]
mov [ edi + ecx * 4 + 0xb8 ] eax
imul eax edx 0xc
push esi
mov esi [ esp + 0x14 ]
push eax
push esi
push ebp
call sub_41ee90
mov ecx [ edi + ebx * 4 + 0xb8 ]
add esp 0xc
mov [ esi ] ecx
mov eax ebp
mov [ edi + ebx * 4 + 0xb8 ] esi
pop esi
jmp r-xdata
pop edi
pop ebx
retn 0xc
pop ebp
sub_412e5e
mov eax [ esp + 0xc ]
push esi
mov esi ecx
push edi
movzx edx [ eax + esi + 0x4 ]
mov eax [ esp + 0x10 ]
movzx edi [ eax + esi + 0x4 ]
sub edi edx
imul edx edx 0xc
movzx ecx [ edi + esi + 0x29 ]
add edx [ esp + 0xc ]
movzx eax [ ecx + esi + 0x4 ]
cmp eax edi
je r-xdata
movzx ecx [ edi + esi + 0x29 ]
pop edi
mov eax [ esi + ecx * 4 + 0xb8 ]
mov [ edx ] eax
mov [ esi + ecx * 4 + 0xb8 ] edx
pop esi
retn 0xc
mov eax [ esi + ecx * 4 + 0xb4 ]
mov [ edx ] eax
mov [ esi + ecx * 4 + 0xb4 ] edx
movzx ecx [ ecx + esi + 0x3 ]
imul eax ecx 0xc
add edx eax
sub edi ecx
sub_412ec1
mov eax [ esp + 0x4 ]
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
push edi
mov [ esi + 0xa6c ] bl
mov [ esi + 0x660 ] eax
call sub_412c47
push 0x9
lea eax [ esi + 0x86e ]
mov [ esi + 0x86c ] 0x200
push 0x4
push eax
call sub_41d1e0
push 0xf5
lea eax [ esi + 0x877 ]
push 0x6
push eax
call sub_41d1e0
add esp 0x18
xor eax eax
mov [ esi + eax + 0x76c ] al
inc eax
cmp eax 0x3
jl r-xdata
mov ecx eax
mov edx ebx
mov edi 0x100
jmp r-xdata
cmp eax edi
jl r-xdata
mov [ esi + eax + 0x76c ] cl
sub edx 0x1
jne r-xdata
push 0x40
lea eax [ esi + 0x96c ]
push 0x0
push eax
call sub_41d1e0
push 0xc0
lea eax [ esi + 0x9ac ]
push 0x8
push eax
call sub_41d1e0
add esp 0x18
mov [ esi + 0x642 ] 0x7
pop edi
pop esi
pop ebx
retn 0x4
inc eax
inc ebx
inc ecx
mov edx ebx
sub_412f6f
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi ecx
shl esi 0x14
cmp [ edi ] esi
jne r-xdata
push ebx
call sub_412fcb
push 0xc
pop ecx
xor edx edx
mov eax esi
div ecx
add eax 0x2
imul ebx eax 0xc
push ebx
call sub_422c59
mov [ edi + 0xac ] eax
pop ecx
test eax eax
jne r-xdata
mov al 0x1
jmp r-xdata
add eax 0xfffffff4
mov [ edi ] esi
add eax ebx
mov [ edi + 0x158 ] eax
mov al 0x1
mov ecx rw-data
call sub_406a1c
xor al al
jmp r-xdata
pop edi
pop esi
retn 0x4
pop ebx
sub_412fe0
push ebx
xor ebx ebx
push esi
mov esi ecx
cmp [ esp + 0xc ] bl
jne r-xdata
push [ esp + 0xc ]
mov ecx esi
call sub_411838
mov [ esi + 0x4c39 ] bl
pop esi
pop ebx
retn 0x4
push 0x194
lea eax [ esi + 0xe4c0 ]
mov [ esi + 0xe658 ] bl
push ebx
push eax
call sub_41d1e0
add esp 0xc
mov [ esi + 0xe4bc ] 0x2
mov [ esi + 0xe654 ] ebx
sub_41302d
push ebx
push esi
xor ebx ebx
push edi
mov edi ecx
cmp [ esp + 0x10 ] bl
jne r-xdata
push 0x14
mov [ edi + 0x48 ] ebx
lea esi [ edi + 0x80 ]
mov [ edi + 0x8 ] ebx
mov [ edi + 0x4 ] ebx
push ebx
push esi
mov [ edi + 0x4c50 ] ebx
mov [ edi + 0x4c54 ] ebx
mov [ edi + 0x78 ] ebx
mov [ edi + 0x7c ] ebx
call sub_41d1e0
or [ esi ] 0xffffffff
add esp 0xc
mov ecx edi
mov [ edi + 0x4c39 ] bl
push [ esp + 0x10 ]
call sub_412fe0
pop edi
pop esi
pop ebx
retn 0x4
push 0x10
lea eax [ edi + 0x54 ]
push ebx
push eax
call sub_41d1e0
push 0x4a9c
lea eax [ edi + 0x94 ]
mov [ edi + 0x64 ] ebx
push ebx
push eax
mov [ edi + 0x68 ] ebx
mov [ edi + 0x6c ] ebx
call sub_41d1e0
mov ecx [ edi + 0xe6d8 ]
mov eax __pe_sfxrar_export_address_table
add esp 0x18
mov [ edi + 0x74 ] ebx
mov [ edi + 0x70 ] ebx
cmp ecx eax
jb r-xdata
mov eax [ edi + 0xe6dc ]
and eax ecx
mov [ edi + 0x4b30 ] eax
mov ecx eax
sub_4130d0
push esi
mov esi ecx
push edi
mov edi [ esi + 0x78 ]
mov eax [ esi + 0x4 ]
sub edi eax
jns r-xdata
cmp eax 0x4000
jle r-xdata
xor al al
jmp r-xdata
mov edi [ esi + 0x78 ]
test edi edi
jle r-xdata
pop edi
pop esi
retn
cmp [ esi + 0x4c39 ] 0x0
mov eax [ esi + 0x78 ]
lea ecx [ eax - 0x1e ]
mov [ esi + 0x7c ] ecx
je r-xdata
add [ esi + 0x78 ] edx
and [ esi + 0x4 ] 0x0
mov [ esi + 0x78 ] edi
jmp r-xdata
mov ecx [ esi + 0x10 ]
add eax ecx
push edi
push eax
push ecx
call sub_41f6f0
add esp 0xc
xor eax eax
cmp edx 0xffffffff
setne al
add eax 0xfffffe0c
mov [ esi + 0x7c ] eax
mov ecx [ esi ]
mov eax 0x8000
sub eax edi
push eax
mov eax [ esi + 0x10 ]
add eax edi
push eax
call sub_40c248
mov edx eax
test edx edx
jle r-xdata
sub_41314c
push esi
mov esi ecx
push edi
mov edi [ esi + 0x78 ]
mov edx [ esi + 0x4 ]
sub edi edx
jns r-xdata
mov eax [ esi + 0x88 ]
sub eax edx
add [ esi + 0x80 ] eax
push ebx
xor ebx ebx
cmp edx 0x4000
jle r-xdata
xor al al
jmp r-xdata
mov edi [ esi + 0x78 ]
test edi edi
jle r-xdata
pop edi
pop esi
retn
cmp [ esi + 0x4c39 ] 0x0
mov eax [ esi + 0x78 ]
lea ecx [ eax - 0x1e ]
mov [ esi + 0x7c ] ecx
je r-xdata
mov ecx [ esi ]
sub eax edi
push eax
mov eax [ esi + 0x10 ]
add eax edi
push eax
call sub_40c248
mov ebx eax
test ebx ebx
jle r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi + 0x78 ] edi
jmp r-xdata
mov ecx [ esi + 0x10 ]
push edi
lea eax [ ecx + edx ]
push eax
push ecx
call sub_41f6f0
add esp 0xc
mov ecx [ esi + 0x80 ]
mov eax [ esi + 0x4 ]
mov [ esi + 0x88 ] eax
cmp ecx 0xffffffff
je r-xdata
add eax 0xfffffe0c
mov [ esi + 0x7c ] eax
add [ esi + 0x78 ] ebx
mov eax 0x8000
cmp edi eax
je r-xdata
xor eax eax
cmp ebx 0xffffffff
pop ebx
setne al
dec eax
add ecx eax
mov eax [ esi + 0x7c ]
cmp eax ecx
jl r-xdata
mov [ esi + 0x7c ] eax
mov eax ecx
sub_413205
push ebx
push ebp
mov ebp [ esp + 0xc ]
mov ebx ecx
push edi
mov edi [ esp + 0x14 ]
cmp edi ebp
je r-xdata
cmp [ ebx + 0x4c38 ] 0x0
je r-xdata
mov [ ebx + 0x4c4a ] 0x1
jae r-xdata
cmp edi ebp
jae r-xdata
sub edi ebp
and edi [ ebx + 0xe6dc ]
jbe r-xdata
mov [ ebx + 0x4c49 ] 0x1
mov eax [ ebx + 0x4b34 ]
sub edi ebp
push edi
add eax ebp
push eax
mov eax [ ebx + 0xe6d8 ]
sub eax ebp
push eax
mov eax [ ebx + 0x4b34 ]
add eax ebp
push eax
call sub_4138f5
push edi
push [ ebx + 0x4b34 ]
mov ecx ebx
jmp r-xdata
pop edi
pop ebp
pop ebx
retn 0x8
lea eax [ ebx + 0x4b38 ]
push esi
call sub_4138f5
push edi
push ebp
mov ecx eax
call sub_4113c2
mov esi eax
lea ecx [ ebx + 0x4b38 ]
push esi
push ebp
call sub_41048a
push eax
mov ecx ebx
call sub_4138f5
add ebp esi
lea eax [ ebx + 0x4b38 ]
and ebp [ ebx + 0xe6dc ]
sub edi esi
jne r-xdata
pop esi
jmp r-xdata
sub_4132b2
sub esp 0x14
push ebx
push ebp
push esi
push edi
mov edi ecx
xor ebx ebx
mov ecx [ edi + 0x70 ]
mov ebp [ edi + 0x74 ]
sub ecx ebp
and ecx [ edi + 0xe6dc ]
cmp [ edi + 0xe6b8 ] ebx
jbe r-xdata
push [ edi + 0x70 ]
mov ecx edi
push ebp
call sub_413205
mov eax [ edi + 0x70 ]
mov [ edi + 0x74 ] eax
mov eax [ edi + 0xe6b4 ]
mov esi [ eax + ebx * 4 ]
mov [ esp + 0x1c ] esi
test esi esi
je r-xdata
inc ebx
cmp ebx [ edi + 0xe6b8 ]
jb r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov [ esp + 0x14 ] eax
mov eax edx
sub eax ebp
mov [ esp + 0x18 ] edx
and eax [ edi + 0xe6dc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] 0x0
jmp r-xdata
cmp ebp edx
je r-xdata
mov eax [ edi + 0xe6dc ]
push edx
push ebp
mov ecx edi
call sub_413205
mov edx [ esp + 0x18 ]
mov ebp edx
mov ecx [ edi + 0x70 ]
mov eax [ edi + 0xe6dc ]
sub ecx edx
and ecx eax
jmp r-xdata
cmp ebx [ edi + 0xe6b8 ]
jb r-xdata
mov ecx [ esp + 0x14 ]
lea ebp [ ecx + edx ]
and ebp eax
mov [ esp + 0x20 ] ebp
cmp edx ebp
jb r-xdata
cmp [ esp + 0x14 ] ecx
ja r-xdata
mov eax [ edi + 0xe6b4 ]
mov eax [ eax + ebx * 4 ]
test eax eax
je r-xdata
mov [ edi + 0x74 ] ebp
jmp r-xdata
mov eax [ edi + 0x4b34 ]
push ecx
add eax edx
lea ecx [ edi + 0xe65c ]
push eax
push 0x0
call sub_40bd2d
test ebp ebp
je r-xdata
inc ebx
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
push esi
mov ecx edi
call sub_411308
mov eax [ esi + 0x1c ]
cmp eax 0x40
jbe r-xdata
push [ eax + 0x1c ]
lea ecx [ esi + 0x18 ]
call sub_401f56
mov ecx [ esp + 0x14 ]
mov eax [ ecx + 0x1c ]
sub eax 0x40
push eax
mov eax [ ecx + 0x18 ]
add eax 0x40
push eax
mov eax [ esi + 0x18 ]
add eax 0x40
push eax
call sub_41ee90
add esp 0xc
mov esi [ edi + 0xe6d8 ]
lea ecx [ edi + 0xe65c ]
mov eax [ edi + 0x4b34 ]
sub esi edx
push esi
add eax edx
push eax
push 0x0
call sub_40bd2d
push ebp
push [ edi + 0x4b34 ]
lea ecx [ edi + 0xe65c ]
push esi
call sub_40bd2d
mov esi [ esp + 0x1c ]
jmp r-xdata
mov [ eax + 0xc ] 0x0
mov ecx [ esp + 0x14 ]
add ecx 0x18
call sub_405bd9
mov esi [ esp + 0x14 ]
cmp [ esi + 0x1c ] eax
jae r-xdata
mov ecx [ esi + 0x10 ]
add esi 0x14
mov eax [ edi + 0xe6a4 ]
mov [ esp + 0x10 ] esi
mov eax [ eax + ecx * 4 ]
add eax 0x14
mov [ esp + 0x14 ] eax
cmp [ eax + 0x1c ] 0x40
jbe r-xdata
mov eax [ edi + 0xe6b4 ]
lea edx [ ebx + 0x1 ]
mov [ esp + 0x1c ] edx
and [ eax + ebx * 4 ] 0x0
cmp edx [ edi + 0xe6b8 ]
jae r-xdata
lea ecx [ esi + 0x14 ]
call sub_41045e
push 0x70
push esi
call sub_41c15e
pop ecx
pop ecx
mov ecx [ esp + 0x10 ]
mov ecx [ esp + 0x10 ]
mov eax [ ecx + 0x1c ]
sub eax 0x40
push eax
mov eax [ ecx + 0x18 ]
add eax 0x40
push eax
mov eax [ esi + 0x18 ]
add eax 0x40
push eax
call sub_41ee90
mov esi [ esp + 0x1c ]
add esp 0xc
jmp r-xdata
push eax
lea ecx [ esi + 0x18 ]
call sub_401f56
push ecx
push [ esp + 0x18 ]
mov ecx [ edi ]
call sub_40c3e5
mov eax [ esp + 0x10 ]
add [ edi + 0x4c50 ] eax
mov ecx [ edi + 0x70 ]
adc [ edi + 0x4c54 ] 0x0
sub ecx ebp
and ecx [ edi + 0xe6dc ]
mov [ edi + 0x4c4a ] 0x1
mov ebp [ esp + 0x18 ]
mov eax [ esi + 0x54 ]
mov ecx [ esi + 0x58 ]
mov [ esp + 0x14 ] eax
mov eax [ edi + 0xe6b4 ]
mov [ esp + 0x10 ] ecx
mov esi [ eax + ebx * 4 ]
test esi esi
je r-xdata
mov ebp [ esp + 0x20 ]
cmp [ esi ] ebp
jne r-xdata
cmp [ esi + 0x4 ] ecx
jne r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
push ecx
push [ esp + 0x18 ]
lea ecx [ edi + 0xe65c ]
push 0x0
call sub_40bd2d
mov ecx [ esi + 0x10 ]
add esi 0x14
mov eax [ edi + 0xe6a4 ]
mov [ esp + 0x18 ] esi
mov ebx [ eax + ecx * 4 ]
cmp [ ebx + 0x30 ] 0x40
jbe r-xdata
push esi
mov ecx edi
call sub_411308
mov eax [ esi + 0x1c ]
cmp eax 0x40
jbe r-xdata
push [ ebx + 0x30 ]
lea ecx [ esi + 0x18 ]
call sub_401f56
mov eax [ ebx + 0x30 ]
sub eax 0x40
push eax
mov eax [ ebx + 0x2c ]
add eax 0x40
push eax
mov eax [ esi + 0x18 ]
add eax 0x40
push eax
call sub_41ee90
add esp 0xc
lea ecx [ ebx + 0x2c ]
call sub_405bd9
cmp [ ebx + 0x30 ] eax
jae r-xdata
mov eax [ edi + 0xe6b4 ]
and [ eax + ebx * 4 ] 0x0
lea eax [ ebx + 0x1 ]
mov [ esp + 0x1c ] eax
cmp eax [ edi + 0xe6b8 ]
jb r-xdata
lea ecx [ esi + 0x14 ]
call sub_41045e
push 0x70
push esi
call sub_41c15e
pop ecx
pop ecx
mov ecx [ esp + 0x10 ]
mov eax [ esi + 0x1c ]
sub eax 0x40
push eax
mov eax [ esi + 0x18 ]
add eax 0x40
push eax
mov eax [ ebx + 0x2c ]
add eax 0x40
push eax
call sub_41ee90
add esp 0xc
jmp r-xdata
push eax
lea ecx [ ebx + 0x2c ]
call sub_401f56
mov eax [ edi + 0xe6b4 ]
mov esi [ eax + ebx * 4 + 0x4 ]
test esi esi
je r-xdata
mov eax [ esi + 0x54 ]
mov ebx [ esp + 0x1c ]
mov ecx [ esi + 0x58 ]
mov [ esp + 0x14 ] eax
mov eax [ edi + 0xe6b4 ]
mov [ esp + 0x10 ] ecx
mov esi [ eax + ebx * 4 ]
test esi esi
je r-xdata
sub_413638
sub esp 0x24
push ebx
mov ebx ecx
xor ecx ecx
push ebp
push esi
push edi
mov ebp [ ebx + 0x74 ]
mov esi ecx
mov edi [ ebx + 0x70 ]
sub edi ebp
mov [ esp + 0x24 ] ebp
and edi [ ebx + 0xe6dc ]
mov edx edi
mov [ esp + 0x20 ] edi
mov [ esp + 0x13 ] cl
mov [ esp + 0x30 ] esi
cmp [ ebx + 0x48 ] ecx
jbe r-xdata
mov [ esp + 0x30 ] ecx
cmp [ ebx + 0x48 ] ecx
jbe r-xdata
mov [ esp + 0x18 ] ecx
cmp [ esp + 0x13 ] 0x0
jne r-xdata
lea esi [ ebx + 0x44 ]
mov edx ecx
mov ebp ecx
add [ esp + 0x18 ] 0x10
inc esi
mov [ esp + 0x30 ] esi
cmp esi [ ebx + 0x48 ]
jb r-xdata
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax [ ebx + 0xe6d8 ]
mov ecx __pe_sfxrar_export_address_table
cmp eax ecx
jb r-xdata
push [ ebx + 0x70 ]
mov ecx ebx
push ebp
call sub_413205
mov eax [ ebx + 0x70 ]
mov [ ebx + 0x74 ] eax
mov eax [ esi ]
cmp [ edx + eax ] 0x8
jne r-xdata
mov eax [ esi ]
mov edi ebp
sub edi ecx
shl edi 0x4
add edi eax
lea esi [ edx + eax ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea esi [ ebx + 0x44 ]
mov eax [ ebx + 0x44 ]
add eax [ esp + 0x18 ]
mov [ esp + 0x2c ] eax
cmp [ eax ] 0x8
je r-xdata
jmp r-xdata
mov edi [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
mov [ esp + 0x14 ] eax
mov eax edi
sub eax ebp
and eax [ ebx + 0xe6dc ]
cmp eax edx
jae r-xdata
mov eax [ eax + 0x4 ]
sub eax [ ebx + 0x74 ]
and eax [ ebx + 0xe6dc ]
cmp eax edi
ja r-xdata
mov edx [ ebx + 0x70 ]
add eax edx
mov esi [ ebx + 0xe6dc ]
and eax esi
mov [ ebx + 0x4b30 ] eax
cmp eax edx
je r-xdata
mov eax ecx
inc ebp
add edx 0x10
cmp ebp [ ebx + 0x48 ]
jb r-xdata
inc ecx
mov edi [ esp + 0x20 ]
cmp ebp edi
je r-xdata
mov eax [ esp + 0x2c ]
mov [ eax + 0xd ] cl
jmp r-xdata
mov eax [ ebx + 0x74 ]
mov [ ebx + 0x4b30 ] eax
mov ecx [ ebx + 0x74 ]
cmp ecx edx
je r-xdata
test ecx ecx
je r-xdata
mov ebp [ esp + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x14 ]
cmp eax edx
ja r-xdata
push edi
push ebp
mov ecx ebx
call sub_413205
mov edx [ ebx + 0x70 ]
mov ebp edi
sub edx edi
mov [ esp + 0x24 ] ebp
and edx [ ebx + 0xe6dc ]
xor ecx ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x24
retn
sub ecx edx
sub eax edx
and ecx esi
and eax esi
cmp ecx eax
jae r-xdata
mov eax [ ebx + 0x48 ]
sub eax ecx
mov ecx esi
push eax
call sub_410bd9
mov [ ebx + 0x74 ] ebp
cmp esi [ ebx + 0x48 ]
jae r-xdata
test eax eax
je r-xdata
mov [ esp + 0x13 ] 0x1
mov eax esi
shl eax 0x4
lea ebp [ eax + edi ]
and ebp [ ebx + 0xe6dc ]
lea ecx [ ebx + 0x24 ]
push eax
mov [ esp + 0x28 ] ebp
call sub_401f56
mov ecx [ ebx + 0x24 ]
mov [ esp + 0x1c ] ecx
cmp edi ebp
jb r-xdata
inc esi
add eax 0x10
cmp esi [ ebx + 0x48 ]
jb r-xdata
mov [ edx + eax + 0xd ] cl
cmp [ ebx + 0x4c38 ] 0x0
mov eax [ esp + 0x14 ]
push eax
je r-xdata
test ebp ebp
je r-xdata
mov edx [ ebx + 0x44 ]
cmp [ edx + eax ] 0x8
je r-xdata
mov eax [ ebx + 0x4b34 ]
add eax edi
push eax
push ecx
call sub_41ee90
add esp 0xc
push edi
push ecx
lea ecx [ ebx + 0x4b38 ]
mov eax [ ebx + 0xe6d8 ]
sub eax edi
cmp [ ebx + 0x4c38 ] 0x0
mov [ esp + 0x28 ] eax
push eax
je r-xdata
add [ ebx + 0x4c50 ] edi
mov edx [ ebx + 0x70 ]
mov esi [ esp + 0x30 ]
push 0x0
pop ecx
adc [ ebx + 0x4c54 ] ecx
sub edx ebp
and edx [ ebx + 0xe6dc ]
mov [ ebx + 0x4c4a ] 0x1
mov ecx [ ebx ]
push edi
push eax
call sub_40c3e5
mov eax [ esp + 0x2c ]
mov ecx ebx
mov edi [ esp + 0x14 ]
push eax
push edi
push [ esp + 0x24 ]
call sub_410d2a
mov ecx [ ebx + 0x44 ]
mov edx [ esp + 0x18 ]
mov [ edx + ecx ] 0x8
test eax eax
je r-xdata
mov eax [ ebx + 0x4b34 ]
add eax edi
push eax
push ecx
call sub_41ee90
mov eax [ esp + 0x34 ]
add eax [ esp + 0x28 ]
push ebp
push [ ebx + 0x4b34 ]
push eax
call sub_41ee90
add esp 0x18
jmp r-xdata
push edi
lea esi [ ebx + 0x4b38 ]
push ecx
mov ecx esi
call sub_410ead
mov eax [ esp + 0x28 ]
mov ecx esi
add eax [ esp + 0x1c ]
push ebp
push 0x0
push eax
jmp r-xdata
call sub_410ead
jmp r-xdata
sub_4138f5
push ebx
push esi
mov esi ecx
push edi
mov ebx [ esi + 0x4c54 ]
mov edx [ esi + 0x4c44 ]
mov edi [ esi + 0x4c50 ]
mov eax [ esi + 0x4c40 ]
cmp ebx edx
jg r-xdata
pop edi
pop esi
pop ebx
retn 0x8
jl r-xdata
mov ecx [ esp + 0x14 ]
sub eax edi
mov edi ecx
sbb edx ebx
xor ebx ebx
cmp ebx edx
jl r-xdata
cmp edi eax
jae r-xdata
push ecx
push [ esp + 0x14 ]
mov ecx [ esi ]
call sub_40c3e5
add [ esi + 0x4c50 ] edi
adc [ esi + 0x4c54 ] ebx
jg r-xdata
mov ecx eax
cmp edi eax
jbe r-xdata
sub_413952
sub esp 0xc
cmp [ rw-data ] 0x0
push ebx
push ebp
push esi
mov esi ecx
push edi
mov [ esp + 0x10 ] esi
jne r-xdata
cmp [ esi + 0x4c48 ] 0x0
mov [ esi + 0x4c58 ] 0x1
jne r-xdata
and [ esp + 0x14 ] 0x0
xor edi edi
xor ebp ebp
mov eax [ esi + 0xe6dc ]
lea ebx [ esi + 0x4 ]
and [ esi + 0x70 ] eax
mov eax [ ebx ]
cmp eax [ esi + 0x7c ]
jle r-xdata
push [ esp + 0x20 ]
mov ecx esi
call sub_41302d
mov ecx esi
call sub_4130d0
test al al
je r-xdata
inc edi
cmp edi 0x13
jb r-xdata
xor eax eax
mov ecx edi
inc eax
shl eax cl
push ebx
mov [ esp + 0x1c ] eax
lea eax [ ebp + rw-data ]
push edi
push eax
call sub_41d1e0
mov eax [ esp + 0x20 ]
add esp 0xc
mov ecx [ esp + 0x18 ]
mov eax [ esi + 0x74 ]
mov ecx [ esi + 0x70 ]
sub eax ecx
and eax [ esi + 0xe6dc ]
cmp eax 0x104
jae r-xdata
mov ecx esi
call sub_4130d0
test al al
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x4
cmp [ esp + 0x20 ] 0x0
je r-xdata
mov ebx [ edi * 4 + rw-data ]
test ebx ebx
jle r-xdata
mov [ ebp * 4 + rw-data ] eax
inc ebp
add eax ecx
sub ebx 0x1
jne r-xdata
mov [ esp + 0x14 ] eax
cmp [ esi + 0xe654 ] 0x1
jne r-xdata
cmp [ esi + 0x74 ] ecx
je r-xdata
mov ecx esi
call sub_4132b2
mov ecx esi
call sub_41246b
test al al
je r-xdata
cmp [ esi + 0xe658 ] 0x0
jne r-xdata
mov ecx ebx
call sub_409e9f
mov edx eax
mov eax [ esi + 0x118 ]
and edx 0xfffe
cmp edx [ esi + eax * 4 + 0x98 ]
jae r-xdata
lea ecx [ esi + 0x98d0 ]
call sub_411059
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov ecx esi
call sub_4132b2
mov eax [ esi + 0x4c54 ]
cmp eax [ esi + 0x4c44 ]
jg r-xdata
push 0xf
pop edi
inc eax
cmp eax edi
jae r-xdata
push 0x10
pop ecx
sub ecx eax
shr edx cl
movzx ecx [ edx + esi + 0x11c ]
add ecx [ ebx + 0x4 ]
mov eax ecx
shr eax 0x3
add [ ebx ] eax
and ecx 0x7
lea eax [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
movzx edx [ esi + edx * 2 + 0x51c ]
jmp r-xdata
lea ecx [ esi + 0x98d0 ]
call sub_410e69
and [ esi + 0xe654 ] 0x0
cmp ebx [ esi + 0xe4bc ]
jne r-xdata
jl r-xdata
mov ecx [ ebx + 0x4 ]
add ecx edi
mov eax ecx
and ecx 0x7
mov [ ebx + 0x4 ] ecx
shr eax 0x3
add [ ebx ] eax
sub edx [ esi + edi * 4 + 0x94 ]
push 0x10
pop ecx
sub ecx edi
shr edx cl
add edx [ esi + edi * 4 + 0xd8 ]
cmp edx [ esi + 0x94 ]
sbb eax eax
and eax edx
movzx edx [ esi + eax * 2 + 0xd1c ]
lea eax [ esi + 0x4 ]
lea ecx [ eax + 0x26 ]
lea ecx [ esi + ecx * 4 ]
cmp edx 0x100
jge r-xdata
mov ecx [ esi + 0x4b34 ]
mov eax [ esi + 0x70 ]
mov [ ecx + eax ] bl
jmp r-xdata
mov ecx esi
call sub_412dbc
test eax eax
jne r-xdata
cmp [ esi + 0x4c48 ] 0x0
jne r-xdata
mov eax [ esi + 0x4c50 ]
cmp eax [ esi + 0x4c40 ]
ja r-xdata
cmp edx 0x10f
jl r-xdata
mov ecx [ esi + 0x4b34 ]
mov eax [ esi + 0x70 ]
mov [ ecx + eax ] dl
mov edi eax
inc eax
add ecx 0x4
cmp eax 0xf
jb r-xdata
inc [ esi + 0x70 ]
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx esi
call sub_41246b
mov [ esi + 0x4c58 ] 0x0
jmp r-xdata
cmp edx 0x100
jne r-xdata
movzx edi [ edx + 0x438fa5 ]
movzx ebx [ edx + 0x438fc1 ]
add edi 0x3
test ebx ebx
je r-xdata
cmp edx [ ecx ]
jb r-xdata
jmp r-xdata
cmp eax 0x2
je r-xdata
jmp r-xdata
cmp edx 0x101
jne r-xdata
mov ecx esi
call sub_412338
jmp r-xdata
lea ebx [ esi + 0x4 ]
mov ecx eax
call sub_409e9f
push 0x10
pop ecx
sub ecx ebx
shr eax cl
mov ecx [ esi + 0x8 ]
add edi eax
add ecx ebx
lea ebx [ esi + 0x4 ]
mov eax ecx
shr eax 0x3
add [ ebx ] eax
and ecx 0x7
mov [ ebx + 0x4 ] ecx
jmp r-xdata
cmp eax 0x3
jne r-xdata
cmp edx 0x102
jne r-xdata
mov ecx esi
call sub_412a41
jmp r-xdata
test al al
jne r-xdata
push 0xf
pop ebx
inc eax
cmp eax ebx
jae r-xdata
push 0x10
pop ecx
sub ecx eax
shr edx cl
movzx ecx [ edx + esi + 0x1008 ]
add ecx [ ebx + 0x4 ]
mov eax ecx
shr eax 0x3
add [ ebx ] eax
and ecx 0x7
mov [ ebx + 0x4 ] ecx
movzx eax [ esi + edx * 2 + 0x1408 ]
jmp r-xdata
mov ecx ebx
call sub_409e9f
mov edx eax
mov eax [ esi + 0x1004 ]
and edx 0xfffe
cmp edx [ esi + eax * 4 + 0xf84 ]
jae r-xdata
cmp eax 0x4
jne r-xdata
mov ecx esi
call sub_412b57
jmp r-xdata
cmp edx 0x107
jge r-xdata
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
mov ecx [ esi + 0x8 ]
add ecx ebx
mov eax ecx
and ecx 0x7
mov [ esi + 0x8 ] ecx
shr eax 0x3
add [ esi + 0x4 ] eax
sub edx [ esi + ebx * 4 + 0xf80 ]
push 0x10
pop ecx
sub ecx ebx
shr edx cl
add edx [ esi + ebx * 4 + 0xfc4 ]
cmp edx [ esi + 0xf80 ]
sbb eax eax
and eax edx
movzx eax [ esi + eax * 2 + 0x1c08 ]
lea ecx [ eax + 0x3e1 ]
lea ecx [ esi + ecx * 4 ]
mov ebx [ eax * 4 + rw-data ]
movzx ebp [ eax + rw-data ]
inc ebx
mov [ esp + 0x20 ] ebx
test ebp ebp
je r-xdata
cmp eax 0x5
jne r-xdata
xor al al
xor edi edi
mov [ esp + 0x20 ] al
xor ebx ebx
cmp edx 0x110
jge r-xdata
add edx 0xfffffefd
lea ecx [ edx + 0x15 ]
lea ecx [ esi + ecx * 4 ]
mov ebp [ ecx ]
mov [ esp + 0x20 ] ebp
jmp r-xdata
mov ecx [ esi + 0x70 ]
mov ebx ecx
mov eax [ esi + 0xe6d8 ]
mov edx [ esi + 0x54 ]
add eax 0xffffefff
sub ebx edx
cmp ebx eax
jae r-xdata
cmp ebx 0x2000
jb r-xdata
cmp eax 0x9
jle r-xdata
mov ebx eax
inc eax
add ecx 0x4
cmp eax 0xf
jb r-xdata
mov ecx esi
call sub_412dbc
cmp eax 0xffffffff
je r-xdata
mov ecx esi
call sub_412dbc
cmp eax 0xffffffff
jne r-xdata
movzx ebx [ edx + rw-data ]
movzx edi [ edx + rw-data ]
inc ebx
test edi edi
je r-xdata
test edx edx
jg r-xdata
test edi edi
je r-xdata
cmp ecx eax
jae r-xdata
mov eax [ esi + 0x5c ]
mov [ esi + 0x60 ] eax
mov eax [ esi + 0x58 ]
mov [ esi + 0x5c ] eax
mov eax [ esi + 0x54 ]
mov [ esi + 0x58 ] eax
mov [ esi + 0x54 ] ebx
mov ecx [ esi + 0x70 ]
mov ebp ecx
mov eax [ esi + 0xe6d8 ]
sub ebp ebx
add eax 0xffffefff
mov [ esi + 0x68 ] edi
cmp ebp eax
jae r-xdata
inc edi
cmp ebx 0x40000
jb r-xdata
lea ecx [ esi + 0x4 ]
call sub_409e9f
push 0x10
pop ecx
sub ecx ebp
shr eax cl
mov ecx [ esi + 0x8 ]
add ebx eax
add ecx ebp
mov eax ecx
shr eax 0x3
add [ esi + 0x4 ] eax
and ecx 0x7
mov [ esi + 0x8 ] ecx
cmp ebp 0x4
jbe r-xdata
cmp edx [ ecx ]
jb r-xdata
jmp r-xdata
mov ebx [ esi + 0x70 ]
lea edi [ eax + 0x4 ]
mov eax [ esi + 0xe6d8 ]
add eax 0xffffefff
lea ebp [ ebx - 0x1 ]
cmp ebp eax
jae r-xdata
cmp ebx 0x3
jne r-xdata
mov al 0x1
mov [ esp + 0x20 ] al
jmp r-xdata
mov eax [ esi + 0x5c ]
mov [ esi + 0x60 ] eax
mov eax [ esi + 0x58 ]
mov [ esi + 0x5c ] eax
mov eax [ esi + 0x54 ]
mov [ esi + 0x58 ] eax
mov [ esi + 0x54 ] ebx
mov edx [ esi + 0x70 ]
mov edi edx
mov eax [ esi + 0xe6d8 ]
sub edi ebx
add eax 0xffffefff
mov [ esi + 0x68 ] 0x2
push 0x2
pop ebp
cmp edi eax
jae r-xdata
mov ecx eax
call sub_409e9f
push 0x10
pop ecx
sub ecx edi
shr eax cl
mov ecx [ esi + 0x8 ]
add ebx eax
add ecx edi
mov eax ecx
shr eax 0x3
add [ esi + 0x4 ] eax
and ecx 0x7
mov [ esi + 0x8 ] ecx
mov eax [ ecx - 0x4 ]
dec edx
mov [ ecx ] eax
lea ecx [ ecx - 0x4 ]
lea ebx [ esi + 0x4 ]
mov [ esi + 0x54 ] ebp
mov ecx ebx
call sub_409e9f
mov edx eax
mov eax [ esi + 0x2ddc ]
and edx 0xfffe
cmp edx [ esi + eax * 4 + 0x2d5c ]
jae r-xdata
mov ecx [ esi + 0xe6dc ]
mov eax [ esi + 0x4b34 ]
add ebx eax
lea ebp [ eax + ecx ]
lea eax [ edi + ecx ]
mov [ esi + 0x70 ] eax
cmp edx edi
jae r-xdata
test edi edi
je r-xdata
cmp ecx eax
jae r-xdata
inc edi
lea ebp [ esi + 0x4 ]
lea ecx [ esi + 0x4 ]
call sub_409e9f
push 0x14
pop ecx
sub ecx ebp
shr eax cl
lea ecx [ ebp - 0x4 ]
add ecx [ esi + 0x8 ]
lea ebp [ esi + 0x4 ]
shl eax 0x4
add ebx eax
mov eax ecx
shr eax 0x3
add [ ebp ] eax
and ecx 0x7
mov [ ebp + 0x4 ] ecx
jmp r-xdata
test edi edi
je r-xdata
cmp ebx eax
jae r-xdata
movzx eax al
shl edi 0x8
add edi eax
mov al [ esp + 0x20 ]
movzx ecx al
mov al [ esp + 0x20 ]
mov [ esp + 0x14 ] ecx
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov ecx [ esi + 0xe6dc ]
cmp edx eax
jae r-xdata
push 0xf
pop edi
inc eax
cmp eax edi
jae r-xdata
push 0x10
pop ecx
sub ecx eax
shr edx cl
movzx ecx [ edx + esi + 0x2de0 ]
add ecx [ ebx + 0x4 ]
mov eax ecx
shr eax 0x3
add [ ebx ] eax
and ecx 0x7
mov [ ebx + 0x4 ] ecx
movzx eax [ esi + edx * 2 + 0x31e0 ]
jmp r-xdata
mov edx [ esi + 0x4b34 ]
mov eax ebx
and eax ecx
mov ecx [ esi + 0x70 ]
inc ebx
mov al [ eax + edx ]
mov [ edx + ecx ] al
mov eax [ esi + 0x70 ]
mov ecx [ esi + 0xe6dc ]
inc eax
and eax ecx
mov [ esi + 0x70 ] eax
sub edi 0x1
jne r-xdata
jmp r-xdata
cmp edi 0x8
jb r-xdata
cmp edi 0x8
jb r-xdata
mov ecx [ esi + 0xe6dc ]
mov eax [ esi + 0x4b34 ]
lea ebx [ eax + ebp ]
lea ebp [ eax + ecx ]
lea eax [ edi + ecx ]
mov [ esi + 0x70 ] eax
cmp [ esp + 0x20 ] edi
jae r-xdata
mov ecx ebp
call sub_409e9f
mov edx eax
mov eax [ esi + 0x1ef0 ]
and edx 0xfffe
cmp edx [ esi + eax * 4 + 0x1e70 ]
jae r-xdata
dec eax
mov [ esi + 0x98cc ] eax
mov eax [ esi + 0x98cc ]
test eax eax
jle r-xdata
mov ecx [ esi + 0xe6dc ]
mov eax [ esi + 0x4b34 ]
lea ecx [ eax + ebp ]
lea edx [ eax + ebx ]
lea eax [ edi + ebx ]
mov [ esi + 0x70 ] eax
cmp edi 0x1
jbe r-xdata
test al al
jne r-xdata
test al al
jne r-xdata
inc ebx
cmp ebx 0x4
jl r-xdata
mov edx [ esi + 0x4b34 ]
mov eax edi
and eax ecx
mov ecx [ esi + 0x70 ]
inc edi
mov al [ eax + edx ]
mov [ edx + ecx ] al
mov eax [ esi + 0x70 ]
mov ecx [ esi + 0xe6dc ]
inc eax
and eax ecx
mov [ esi + 0x70 ] eax
sub ebp 0x1
jne r-xdata
jmp r-xdata
mov ecx [ esi + 0x4b34 ]
lea eax [ edx + 0x2 ]
mov [ esi + 0x70 ] eax
mov al [ edi + ecx ]
mov [ ecx + edx ] al
mov al [ edi + ecx + 0x1 ]
mov [ ecx + edx + 0x1 ] al
jmp r-xdata
mov ecx [ ebx + 0x4 ]
add ecx edi
mov eax ecx
and ecx 0x7
mov [ ebx + 0x4 ] ecx
shr eax 0x3
add [ ebx ] eax
sub edx [ esi + edi * 4 + 0x2d58 ]
push 0x10
pop ecx
sub ecx edi
shr edx cl
add edx [ esi + edi * 4 + 0x2d9c ]
cmp edx [ esi + 0x2d58 ]
sbb eax eax
and eax edx
movzx eax [ esi + eax * 2 + 0x39e0 ]
lea ecx [ eax + 0xb57 ]
lea ecx [ esi + ecx * 4 ]
movzx edi [ eax + rw-data ]
movzx ebx [ eax + rw-data ]
add edi 0x2
test ebx ebx
je r-xdata
test edi edi
je r-xdata
mov eax edi
shr eax 0x3
mov [ esp + 0x20 ] eax
mov esi eax
mov ecx edi
shr ecx 0x3
mov edx [ esi + 0x4b34 ]
mov eax ebp
and eax ecx
mov ecx [ esi + 0x70 ]
inc ebp
mov al [ eax + edx ]
mov [ edx + ecx ] al
mov eax [ esi + 0x70 ]
mov ecx [ esi + 0xe6dc ]
inc eax
and eax ecx
mov [ esi + 0x70 ] eax
sub edi 0x1
jne r-xdata
jmp r-xdata
cmp edi 0x8
jb r-xdata
cmp edi 0x8
jb r-xdata
push 0xf
pop ebp
inc eax
cmp eax ebp
jae r-xdata
push 0x10
pop ecx
sub ecx eax
shr edx cl
movzx ecx [ edx + esi + 0x1ef4 ]
add ecx [ ebp + 0x4 ]
mov eax ecx
shr eax 0x3
add [ ebp ] eax
and ecx 0x7
mov [ ebp + 0x4 ] ecx
movzx eax [ esi + edx * 2 + 0x22f4 ]
jmp r-xdata
mov [ esp + 0x20 ] ebx
mov edx [ esi + 0x4b34 ]
mov eax ebp
and eax ecx
mov ecx [ esi + 0x70 ]
inc ebp
mov al [ eax + edx ]
mov [ edx + ecx ] al
mov eax [ esi + 0x70 ]
mov ecx [ esi + 0xe6dc ]
inc eax
and eax ecx
mov [ esi + 0x70 ] eax
sub edi 0x1
jne r-xdata
jmp r-xdata
test edi edi
je r-xdata
push 0x8
pop ebp
cmp edi ebp
jb r-xdata
mov eax [ esi + 0xe6d8 ]
lea edx [ edi + 0x2 ]
lea edi [ ecx + 0x20 ]
add eax 0xffffefff
mov ecx [ esi + 0x70 ]
mov ebx ecx
sub ebx edx
cmp ebx eax
jae r-xdata
mov ecx [ esi + 0x70 ]
mov ebx ecx
mov eax [ esi + 0xe6d8 ]
sub ebx ebp
add eax 0xffffefff
mov [ esi + 0x68 ] edi
cmp ebx eax
jae r-xdata
lea ecx [ esi + 0x4 ]
call sub_409e9f
push 0x10
pop ecx
sub ecx ebx
shr eax cl
mov ecx [ esi + 0x8 ]
add edi eax
add ecx ebx
mov eax ecx
shr eax 0x3
add [ esi + 0x4 ] eax
and ecx 0x7
mov [ esi + 0x8 ] ecx
mov edi eax
inc eax
add ecx 0x4
cmp eax 0xf
jb r-xdata
mov al [ ebx ]
mov [ ebp ] al
cmp edi 0x1
jbe r-xdata
push 0x8
push ebx
push ebp
call sub_41ee90
add esp 0xc
add ebx 0x8
add ebp 0x8
sub edi 0x8
sub esi 0x1
jne r-xdata
jmp r-xdata
mov al [ ebx ]
sub edi 0x8
mov [ ebp ] al
mov al [ ebx + 0x1 ]
mov [ ebp + 0x1 ] al
mov al [ ebx + 0x2 ]
mov [ ebp + 0x2 ] al
mov al [ ebx + 0x3 ]
mov [ ebp + 0x3 ] al
mov al [ ebx + 0x4 ]
mov [ ebp + 0x4 ] al
mov al [ ebx + 0x5 ]
mov [ ebp + 0x5 ] al
mov al [ ebx + 0x6 ]
mov [ ebp + 0x6 ] al
mov al [ ebx + 0x7 ]
add ebx 0x8
mov [ ebp + 0x7 ] al
add ebp 0x8
sub ecx 0x1
jne r-xdata
jmp r-xdata
mov eax edi
shr eax 0x3
mov [ esp + 0x20 ] eax
mov esi eax
mov ecx edi
shr ecx 0x3
mov ecx [ esi + 0x8 ]
add ecx ebp
mov eax ecx
and ecx 0x7
mov [ esi + 0x8 ] ecx
shr eax 0x3
add [ esi + 0x4 ] eax
sub edx [ esi + ebp * 4 + 0x1e6c ]
push 0x10
pop ecx
sub ecx ebp
shr edx cl
add edx [ esi + ebp * 4 + 0x1eb0 ]
cmp edx [ esi + 0x1e6c ]
sbb eax eax
and eax edx
movzx eax [ esi + eax * 2 + 0x2af4 ]
lea ecx [ eax + 0x79c ]
lea ecx [ esi + ecx * 4 ]
cmp eax 0x10
jne r-xdata
mov al [ ecx ]
mov [ edx ] al
cmp edi 0x1
jbe r-xdata
mov ebx edi
shr ebx 0x3
test edi edi
je r-xdata
cmp ecx eax
jae r-xdata
test edi edi
je r-xdata
cmp ecx eax
jae r-xdata
cmp edx [ ecx ]
jb r-xdata
jmp r-xdata
mov al [ ebx + 0x1 ]
mov [ ebp + 0x1 ] al
cmp edi 0x2
jbe r-xdata
mov esi [ esp + 0x10 ]
push 0x8
push ebx
push ebp
call sub_41ee90
add esp 0xc
add ebx 0x8
add ebp 0x8
sub edi 0x8
sub esi 0x1
jne r-xdata
jmp r-xdata
mov al [ ebx ]
sub edi 0x8
mov [ ebp ] al
mov al [ ebx + 0x1 ]
mov [ ebp + 0x1 ] al
mov al [ ebx + 0x2 ]
mov [ ebp + 0x2 ] al
mov al [ ebx + 0x3 ]
mov [ ebp + 0x3 ] al
mov al [ ebx + 0x4 ]
mov [ ebp + 0x4 ] al
mov al [ ebx + 0x5 ]
mov [ ebp + 0x5 ] al
mov al [ ebx + 0x6 ]
mov [ ebp + 0x6 ] al
mov al [ ebx + 0x7 ]
add ebx 0x8
mov [ ebp + 0x7 ] al
add ebp 0x8
sub ecx 0x1
jne r-xdata
jmp r-xdata
add ebx eax
mov [ esi + 0x98c8 ] eax
jmp r-xdata
mov [ esi + 0x98cc ] 0xf
jmp r-xdata
mov ebp eax
inc eax
add ecx 0x4
cmp eax 0xf
jb r-xdata
mov al [ ecx + 0x1 ]
mov [ edx + 0x1 ] al
cmp edi 0x2
jbe r-xdata
mov al [ ecx ]
sub edi ebp
mov [ edx ] al
mov al [ ecx + 0x1 ]
mov [ edx + 0x1 ] al
mov al [ ecx + 0x2 ]
mov [ edx + 0x2 ] al
mov al [ ecx + 0x3 ]
mov [ edx + 0x3 ] al
mov al [ ecx + 0x4 ]
mov [ edx + 0x4 ] al
mov al [ ecx + 0x5 ]
mov [ edx + 0x5 ] al
mov al [ ecx + 0x6 ]
mov [ edx + 0x6 ] al
mov al [ ecx + 0x7 ]
add ecx ebp
mov [ edx + 0x7 ] al
add edx ebp
sub ebx 0x1
jne r-xdata
mov ecx [ esi + 0xe6dc ]
mov eax [ esi + 0x4b34 ]
add ebx eax
lea ebp [ eax + ecx ]
lea eax [ edi + ecx ]
mov [ esi + 0x70 ] eax
cmp edx edi
jae r-xdata
mov ecx [ esi + 0xe6dc ]
mov eax [ esi + 0x4b34 ]
add ebx eax
lea ebp [ eax + ecx ]
lea eax [ edi + ecx ]
mov [ esi + 0x70 ] eax
cmp [ esp + 0x20 ] edi
jae r-xdata
mov al [ ebx + 0x2 ]
mov [ ebp + 0x2 ] al
cmp edi 0x3
jbe r-xdata
add ebx [ esi + 0x98c8 ]
jmp r-xdata
cmp edx [ ecx ]
jb r-xdata
jmp r-xdata
mov al [ ecx + 0x2 ]
mov [ edx + 0x2 ] al
cmp edi 0x3
jbe r-xdata
mov edx [ esi + 0x4b34 ]
mov eax ebx
and eax ecx
mov ecx [ esi + 0x70 ]
inc ebx
mov al [ eax + edx ]
mov [ edx + ecx ] al
mov eax [ esi + 0x70 ]
mov ecx [ esi + 0xe6dc ]
inc eax
and eax ecx
mov [ esi + 0x70 ] eax
sub edi 0x1
jne r-xdata
jmp r-xdata
cmp edi 0x8
jb r-xdata
cmp edi 0x8
jb r-xdata
mov edx [ esi + 0x4b34 ]
mov eax ebx
and eax ecx
mov ecx [ esi + 0x70 ]
inc ebx
mov al [ eax + edx ]
mov [ edx + ecx ] al
mov eax [ esi + 0x70 ]
mov ecx [ esi + 0xe6dc ]
inc eax
and eax ecx
mov [ esi + 0x70 ] eax
sub edi 0x1
jne r-xdata
jmp r-xdata
cmp edi 0x8
jb r-xdata
cmp edi 0x8
jb r-xdata
mov al [ ebx + 0x3 ]
mov [ ebp + 0x3 ] al
cmp edi 0x4
jbe r-xdata
mov al [ ecx + 0x3 ]
mov [ edx + 0x3 ] al
cmp edi 0x4
jbe r-xdata
mov eax edi
shr eax 0x3
mov [ esp + 0x20 ] eax
mov esi eax
mov ecx edi
shr ecx 0x3
mov eax edi
shr eax 0x3
mov [ esp + 0x20 ] eax
mov esi eax
mov ecx edi
shr ecx 0x3
mov al [ ebx + 0x4 ]
mov [ ebp + 0x4 ] al
cmp edi 0x5
jbe r-xdata
mov al [ ecx + 0x4 ]
mov [ edx + 0x4 ] al
cmp edi 0x5
jbe r-xdata
push 0x8
push ebx
push ebp
call sub_41ee90
add esp 0xc
add ebx 0x8
add ebp 0x8
sub edi 0x8
sub esi 0x1
jne r-xdata
mov al [ ebx ]
sub edi 0x8
mov [ ebp ] al
mov al [ ebx + 0x1 ]
mov [ ebp + 0x1 ] al
mov al [ ebx + 0x2 ]
mov [ ebp + 0x2 ] al
mov al [ ebx + 0x3 ]
mov [ ebp + 0x3 ] al
mov al [ ebx + 0x4 ]
mov [ ebp + 0x4 ] al
mov al [ ebx + 0x5 ]
mov [ ebp + 0x5 ] al
mov al [ ebx + 0x6 ]
mov [ ebp + 0x6 ] al
mov al [ ebx + 0x7 ]
add ebx 0x8
mov [ ebp + 0x7 ] al
add ebp 0x8
sub ecx 0x1
jne r-xdata
jmp r-xdata
push 0x8
push ebx
push ebp
call sub_41ee90
add esp 0xc
add ebx 0x8
add ebp 0x8
sub edi 0x8
sub esi 0x1
jne r-xdata
jmp r-xdata
mov al [ ebx ]
sub edi 0x8
mov [ ebp ] al
mov al [ ebx + 0x1 ]
mov [ ebp + 0x1 ] al
mov al [ ebx + 0x2 ]
mov [ ebp + 0x2 ] al
mov al [ ebx + 0x3 ]
mov [ ebp + 0x3 ] al
mov al [ ebx + 0x4 ]
mov [ ebp + 0x4 ] al
mov al [ ebx + 0x5 ]
mov [ ebp + 0x5 ] al
mov al [ ebx + 0x6 ]
mov [ ebp + 0x6 ] al
mov al [ ebx + 0x7 ]
add ebx 0x8
mov [ ebp + 0x7 ] al
add ebp 0x8
sub ecx 0x1
jne r-xdata
jmp r-xdata
mov al [ ebx + 0x5 ]
mov [ ebp + 0x5 ] al
cmp edi 0x6
jbe r-xdata
mov al [ ecx + 0x5 ]
mov [ edx + 0x5 ] al
cmp edi 0x6
jbe r-xdata
mov al [ ebx + 0x6 ]
mov [ ebp + 0x6 ] al
jmp r-xdata
mov al [ ecx + 0x6 ]
mov [ edx + 0x6 ] al
jmp r-xdata
sub_414658
sub esp 0x14
push ebx
push esi
mov esi ecx
push edi
mov [ esp + 0xc ] esi
cmp [ esi + 0x4c48 ] 0x0
mov [ esi + 0x4c58 ] 0x1
jne r-xdata
push ebp
push [ esp + 0x24 ]
call sub_41302d
mov ecx esi
call sub_41314c
test al al
je r-xdata
mov ecx [ esi + 0x4b30 ]
mov eax ecx
sub eax [ edx ]
and eax [ esi + 0xe6dc ]
cmp eax 0x1004
jae r-xdata
lea edi [ esi + 0x80 ]
pop edi
pop esi
pop ebx
add esp 0x14
retn 0x4
lea edi [ esi + 0x80 ]
mov ecx esi
push edi
lea ebx [ esi + 0x4 ]
push ebx
call sub_412207
test al al
je r-xdata
mov ecx ebp
call sub_409e9f
mov edx eax
mov eax [ esi + 0x118 ]
and edx 0xfffe
cmp edx [ esi + eax * 4 + 0x98 ]
jae r-xdata
cmp ecx [ edx ]
je r-xdata
cmp [ esi + 0x90 ] 0x0
jne r-xdata
jne r-xdata
lea eax [ esi + 0x94 ]
mov ecx esi
push eax
push edi
push ebx
call sub_412795
test al al
je r-xdata
push 0xf
pop edi
inc eax
cmp eax edi
jae r-xdata
push 0x10
pop ecx
sub ecx eax
shr edx cl
movzx ecx [ edx + esi + 0x11c ]
add ecx [ ebp + 0x4 ]
mov eax ecx
shr eax 0x3
add [ ebp ] eax
and ecx 0x7
mov [ ebp + 0x4 ] ecx
movzx ebx [ esi + edx * 2 + 0x51c ]
jmp r-xdata
mov ecx esi
call sub_413638
mov eax [ esi + 0x4c54 ]
cmp eax [ esi + 0x4c44 ]
jg r-xdata
mov ecx esi
call sub_413638
push edi
push ebp
mov ecx esi
call sub_412207
test al al
je r-xdata
mov ecx esi
call sub_41314c
test al al
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0x84 ]
jl r-xdata
mov ecx [ ebp + 0x4 ]
add ecx edi
mov eax ecx
and ecx 0x7
mov [ ebp + 0x4 ] ecx
shr eax 0x3
add [ ebp ] eax
sub edx [ esi + edi * 4 + 0x94 ]
push 0x10
pop ecx
sub ecx edi
shr edx cl
add edx [ esi + edi * 4 + 0xd8 ]
cmp edx [ esi + 0x94 ]
sbb eax eax
and eax edx
movzx ebx [ esi + eax * 2 + 0xd1c ]
lea ecx [ eax + 0x26 ]
lea ecx [ esi + ecx * 4 ]
cmp ebx 0x100
jae r-xdata
pop ebp
jl r-xdata
lea eax [ esi + 0x94 ]
mov ecx esi
push eax
push edi
push ebp
call sub_412795
test al al
jne r-xdata
lea edx [ esi + 0x70 ]
cmp ebx 0x106
jb r-xdata
cmp [ esi + 0x4c38 ] 0x0
je r-xdata
mov edi eax
inc eax
add ecx 0x4
cmp eax 0xf
jb r-xdata
cmp [ esi + 0x4c48 ] 0x0
jne r-xdata
mov eax [ esi + 0x4c50 ]
cmp eax [ esi + 0x4c40 ]
ja r-xdata
mov eax [ esi + 0x88 ]
dec eax
add eax [ edi ]
cmp [ ebp ] eax
jg r-xdata
jmp r-xdata
cmp ebx 0x100
jne r-xdata
lea edi [ ebx - 0x106 ]
cmp edi 0x8
jae r-xdata
mov ecx [ esi + 0x4b34 ]
lea edx [ esi + 0x70 ]
mov eax [ edx ]
mov [ ecx + eax ] bl
inc [ edx ]
jmp r-xdata
mov ecx [ esi + 0x70 ]
push ecx
lea eax [ ecx + 0x1 ]
lea ecx [ esi + 0x4b38 ]
mov [ esi + 0x70 ] eax
call sub_41048a
mov [ eax ] bl
jmp r-xdata
cmp edx [ ecx ]
jb r-xdata
jmp r-xdata
mov [ esi + 0x4c58 ] 0x0
jmp r-xdata
cmp ebx 0x101
jne r-xdata
lea eax [ esp + 0x14 ]
mov ecx esi
push eax
push ebp
call sub_412391
test al al
je r-xdata
mov ebx edi
and edi 0x3
shr ebx 0x2
or edi 0x4
dec ebx
mov ecx ebx
shl edi cl
add edi 0x2
test ebx ebx
je r-xdata
add edi 0x2
jmp r-xdata
mov eax [ esi + 0xe6dc ]
and [ edx ] eax
mov eax [ ebp ]
cmp eax [ esi + 0x7c ]
jl r-xdata
lea edx [ esi + 0x70 ]
add ebx 0xfffffefe
lea ecx [ ebx + 0x15 ]
lea ecx [ esi + ecx * 4 ]
mov edx [ ecx ]
mov [ esp + 0x28 ] edx
je r-xdata
mov edi [ esi + 0x68 ]
lea edx [ esi + 0x70 ]
test edi edi
je r-xdata
lea eax [ esp + 0x14 ]
mov ecx esi
push eax
call sub_41065b
test al al
jne r-xdata
mov ecx ebp
call sub_409e9f
mov edx eax
mov eax [ esi + 0x1004 ]
and edx 0xfffe
cmp edx [ esi + eax * 4 + 0xf84 ]
jae r-xdata
mov ecx ebp
call sub_409e9f
push 0x10
pop ecx
sub ecx ebx
shr eax cl
mov ecx [ ebp + 0x4 ]
add edi eax
add ecx ebx
mov eax ecx
shr eax 0x3
add [ ebp ] eax
and ecx 0x7
mov [ ebp + 0x4 ] ecx
mov ecx ebp
mov [ esi + 0x54 ] edx
call sub_409e9f
mov edx eax
mov eax [ esi + 0x2ddc ]
and edx 0xfffe
cmp edx [ esi + eax * 4 + 0x2d5c ]
jae r-xdata
mov eax [ ecx - 0x4 ]
mov [ ecx ] eax
lea ecx [ ecx - 0x4 ]
sub ebx 0x1
jne r-xdata
cmp [ esi + 0x4c38 ] 0x0
je r-xdata
push 0xf
pop ebx
inc eax
cmp eax ebx
jae r-xdata
push 0x10
pop ecx
sub ecx eax
shr edx cl
movzx ecx [ edx + esi + 0x1008 ]
add ecx [ ebp + 0x4 ]
mov eax ecx
shr eax 0x3
add [ ebp ] eax
and ecx 0x7
mov [ ebp + 0x4 ] ecx
movzx ebx [ esi + edx * 2 + 0x1408 ]
jmp r-xdata
push 0xf
pop edi
inc eax
cmp eax edi
jae r-xdata
push 0x10
pop ecx
sub ecx eax
shr edx cl
movzx ecx [ edx + esi + 0x2de0 ]
add ecx [ ebp + 0x4 ]
mov eax ecx
shr eax 0x3
add [ ebp ] eax
and ecx 0x7
mov [ ebp + 0x4 ] ecx
movzx edi [ esi + edx * 2 + 0x31e0 ]
jmp r-xdata
mov ecx [ esi + 0x70 ]
mov ebx ecx
mov eax [ esi + 0xe6d8 ]
mov edx [ esi + 0x54 ]
add eax 0xffffefff
sub ebx edx
cmp ebx eax
jae r-xdata
push [ esi + 0xe6dc ]
lea ecx [ esi + 0x70 ]
push ecx
push [ esi + 0x54 ]
jmp r-xdata
mov ecx [ ebp + 0x4 ]
add ecx ebx
mov eax ecx
and ecx 0x7
mov [ ebp + 0x4 ] ecx
shr eax 0x3
add [ ebp ] eax
sub edx [ esi + ebx * 4 + 0xf80 ]
push 0x10
pop ecx
sub ecx ebx
shr edx cl
add edx [ esi + ebx * 4 + 0xfc4 ]
cmp edx [ esi + 0xf80 ]
sbb eax eax
and eax edx
movzx ebx [ esi + eax * 2 + 0x1c08 ]
lea ecx [ eax + 0x3e1 ]
lea ecx [ esi + ecx * 4 ]
cmp ebx 0x4
jae r-xdata
mov ecx [ ebp + 0x4 ]
add ecx edi
mov eax ecx
and ecx 0x7
mov [ ebp + 0x4 ] ecx
shr eax 0x3
add [ ebp ] eax
sub edx [ esi + edi * 4 + 0x2d58 ]
push 0x10
pop ecx
sub ecx edi
shr edx cl
add edx [ esi + edi * 4 + 0x2d9c ]
cmp edx [ esi + 0x2d58 ]
sbb eax eax
and eax edx
movzx edi [ esi + eax * 2 + 0x39e0 ]
lea ecx [ eax + 0xb57 ]
lea ecx [ esi + ecx * 4 ]
cmp edi 0x8
jae r-xdata
test edi edi
je r-xdata
cmp ecx eax
jae r-xdata
push edi
lea ecx [ esi + 0x4b38 ]
call sub_410ee1
jmp r-xdata
mov ebp ebx
and ebx 0x1
shr ebp 0x1
or ebx 0x2
dec ebp
mov ecx ebp
shl ebx cl
inc ebx
test ebp ebp
je r-xdata
inc ebx
jmp r-xdata
mov ebx eax
inc eax
add ecx 0x4
cmp eax 0xf
jb r-xdata
mov ebx edi
and edi 0x3
shr ebx 0x2
or edi 0x4
dec ebx
mov ecx ebx
shl edi cl
add edi 0x2
test ebx ebx
je r-xdata
add edi 0x2
jmp r-xdata
mov edi eax
inc eax
add ecx 0x4
cmp eax 0xf
jb r-xdata
mov ebp [ esi + 0xe6dc ]
mov eax [ esi + 0x4b34 ]
add ebx eax
lea ebp [ eax + ecx ]
lea eax [ ecx + edi ]
mov [ esi + 0x70 ] eax
cmp edx edi
jae r-xdata
lea ebp [ esi + 0x4 ]
cmp ebp 0x4
jb r-xdata
cmp ebx 0x100
jbe r-xdata
cmp edx [ ecx ]
jb r-xdata
jmp r-xdata
cmp [ esi + 0x4c38 ] 0x0
mov edx [ esp + 0x28 ]
mov [ esi + 0x68 ] edi
je r-xdata
mov ecx ebp
call sub_409e9f
push 0x10
pop ecx
sub ecx ebx
shr eax cl
mov ecx [ ebp + 0x4 ]
add edi eax
add ecx ebx
mov eax ecx
shr eax 0x3
add [ ebp ] eax
and ecx 0x7
mov [ ebp + 0x4 ] ecx
cmp edx [ ecx ]
jb r-xdata
jmp r-xdata
mov edx [ esi + 0x4b34 ]
and ebp ebx
mov ecx [ esi + 0x70 ]
inc ebx
mov al [ edx + ebp ]
mov [ edx + ecx ] al
lea edx [ esi + 0x70 ]
mov eax [ edx ]
mov ebp [ esi + 0xe6dc ]
inc eax
and eax ebp
mov [ edx ] eax
sub edi 0x1
jne r-xdata
jmp r-xdata
cmp edi 0x8
jb r-xdata
push 0x8
pop edx
cmp edi edx
jb r-xdata
mov eax [ esi + 0x5c ]
lea ecx [ esi + 0x70 ]
mov [ esi + 0x60 ] eax
mov eax [ esi + 0x58 ]
mov [ esi + 0x5c ] eax
mov eax [ esi + 0x54 ]
mov [ esi + 0x58 ] eax
mov [ esi + 0x54 ] ebx
cmp [ esi + 0x4c38 ] 0x0
mov [ esi + 0x68 ] edi
je r-xdata
inc edi
cmp ebx 0x2000
jbe r-xdata
lea ecx [ esi + 0x4 ]
call sub_416b93
push 0x20
pop ecx
sub ecx ebp
shr eax cl
mov ecx [ esi + 0x8 ]
add ebx eax
add ecx ebp
lea ebp [ esi + 0x4 ]
mov eax ecx
shr eax 0x3
add [ ebp ] eax
and ecx 0x7
mov [ ebp + 0x4 ] ecx
jmp r-xdata
jbe r-xdata
mov ecx [ esi + 0x70 ]
mov ebx ecx
mov eax [ esi + 0xe6d8 ]
sub ebx edx
add eax 0xffffefff
cmp ebx eax
jae r-xdata
push [ esi + 0xe6dc ]
lea eax [ esi + 0x70 ]
push eax
push edx
jmp r-xdata
lea ebp [ esi + 0x4 ]
jmp r-xdata
lea edx [ esi + 0x70 ]
test edi edi
je r-xdata
mov eax edi
shr eax 0x3
mov [ esp + 0x28 ] eax
mov esi eax
mov ecx edi
shr ecx 0x3
mov edx [ ecx ]
mov ebp edx
mov eax [ esi + 0xe6d8 ]
sub ebp ebx
add eax 0xffffefff
cmp ebp eax
jae r-xdata
push [ esi + 0xe6dc ]
push ecx
push ebx
inc edi
cmp ebx 0x40000
jbe r-xdata
lea ebp [ esi + 0x4 ]
lea ecx [ esi + 0x4 ]
call sub_416b93
push 0x24
pop ecx
sub ecx ebp
shr eax cl
lea ecx [ ebp - 0x4 ]
add ecx [ esi + 0x8 ]
lea ebp [ esi + 0x4 ]
shl eax 0x4
add ebx eax
mov eax ecx
shr eax 0x3
add [ ebp ] eax
and ecx 0x7
mov [ ebp + 0x4 ] ecx
jmp r-xdata
test edi edi
je r-xdata
cmp ecx eax
jae r-xdata
mov al [ ebx ]
lea edx [ esi + 0x70 ]
mov [ ebp ] al
cmp edi 0x1
jbe r-xdata
push 0x8
push ebx
push ebp
call sub_41ee90
add esp 0xc
add ebx 0x8
add ebp 0x8
sub edi 0x8
sub esi 0x1
jne r-xdata
mov esi [ esp + 0x10 ]
mov al [ ebx ]
sub edi edx
mov [ ebp ] al
mov al [ ebx + 0x1 ]
mov [ ebp + 0x1 ] al
mov al [ ebx + 0x2 ]
mov [ ebp + 0x2 ] al
mov al [ ebx + 0x3 ]
mov [ ebp + 0x3 ] al
mov al [ ebx + 0x4 ]
mov [ ebp + 0x4 ] al
mov al [ ebx + 0x5 ]
mov [ ebp + 0x5 ] al
mov al [ ebx + 0x6 ]
mov [ ebp + 0x6 ] al
mov al [ ebx + 0x7 ]
add ebx edx
mov [ ebp + 0x7 ] al
add ebp edx
sub ecx 0x1
jne r-xdata
jmp r-xdata
test edi edi
je r-xdata
cmp edx eax
jae r-xdata
inc edi
push 0xf
pop ecx
inc eax
mov [ esp + 0x28 ] ecx
cmp eax ecx
jae r-xdata
push 0x10
pop ecx
sub ecx eax
shr edx cl
movzx ecx [ edx + esi + 0x1ef4 ]
add ecx [ ebp + 0x4 ]
mov eax ecx
shr eax 0x3
add [ ebp ] eax
and ecx 0x7
mov [ ebp + 0x4 ] ecx
movzx eax [ esi + edx * 2 + 0x22f4 ]
jmp r-xdata
mov ecx ebp
call sub_409e9f
mov edx eax
mov eax [ esi + 0x1ef0 ]
and edx 0xfffe
cmp edx [ esi + eax * 4 + 0x1e70 ]
jae r-xdata
mov ebp [ esi + 0xe6dc ]
mov eax [ esi + 0x4b34 ]
add ebx eax
lea ebp [ eax + ecx ]
lea eax [ ecx + edi ]
mov [ esi + 0x70 ] eax
cmp edx edi
jae r-xdata
mov al [ ebx + 0x1 ]
lea edx [ esi + 0x70 ]
mov [ ebp + 0x1 ] al
cmp edi 0x2
jbe r-xdata
lea ebp [ esi + 0x4 ]
mov ebx [ esi + 0xe6dc ]
jmp r-xdata
mov eax [ esi + 0x4b34 ]
add ebp eax
lea ecx [ eax + edx ]
mov [ esp + 0x28 ] ecx
lea eax [ edx + edi ]
lea edx [ esi + 0x70 ]
mov [ edx ] eax
cmp ebx edi
jae r-xdata
mov ecx [ ebp + 0x4 ]
add ecx [ esp + 0x28 ]
mov eax ecx
and ecx 0x7
shr eax 0x3
add [ ebp ] eax
mov eax [ esp + 0x28 ]
mov [ ebp + 0x4 ] ecx
push 0x10
pop ecx
sub edx [ esi + eax * 4 + 0x1e6c ]
sub ecx eax
shr edx cl
add edx [ esi + eax * 4 + 0x1eb0 ]
cmp edx [ esi + 0x1e6c ]
sbb eax eax
and eax edx
movzx eax [ esi + eax * 2 + 0x2af4 ]
lea ecx [ eax + 0x79c ]
lea ecx [ esi + ecx * 4 ]
add ebx eax
jmp r-xdata
mov edx [ esi + 0x4b34 ]
and ebp ebx
mov ecx [ esi + 0x70 ]
inc ebx
mov al [ edx + ebp ]
mov [ edx + ecx ] al
lea edx [ esi + 0x70 ]
mov eax [ edx ]
mov ebp [ esi + 0xe6dc ]
inc eax
and eax ebp
mov [ edx ] eax
sub edi 0x1
jne r-xdata
cmp edi 0x8
jb r-xdata
push 0x8
pop edx
cmp edi edx
jb r-xdata
mov al [ ebx + 0x2 ]
lea edx [ esi + 0x70 ]
mov [ ebp + 0x2 ] al
cmp edi 0x3
jbe r-xdata
mov edx [ esi + 0x4b34 ]
and ebx ebp
mov ecx [ ecx ]
inc ebp
mov al [ ebx + edx ]
mov [ edx + ecx ] al
lea edx [ esi + 0x70 ]
mov eax [ edx ]
mov ebx [ esi + 0xe6dc ]
inc eax
and eax ebx
mov [ edx ] eax
sub edi 0x1
jne r-xdata
cmp edi 0x8
jb r-xdata
cmp edi 0x8
jb r-xdata
mov [ esp + 0x28 ] eax
inc eax
add ecx 0x4
cmp eax 0xf
jb r-xdata
mov eax edi
shr eax 0x3
mov [ esp + 0x28 ] eax
mov esi eax
mov ecx edi
shr ecx 0x3
mov al [ ebx + 0x3 ]
lea edx [ esi + 0x70 ]
mov [ ebp + 0x3 ] al
cmp edi 0x4
jbe r-xdata
lea ecx [ esi + 0x70 ]
jmp r-xdata
test edi edi
je r-xdata
mov ebx edi
shr ebx 0x3
mov edx edi
shr edx 0x3
cmp edx [ ecx ]
jb r-xdata
jmp r-xdata
push 0x8
push ebx
push ebp
call sub_41ee90
add esp 0xc
add ebx 0x8
add ebp 0x8
sub edi 0x8
sub esi 0x1
jne r-xdata
jmp r-xdata
mov al [ ebx ]
sub edi edx
mov [ ebp ] al
mov al [ ebx + 0x1 ]
mov [ ebp + 0x1 ] al
mov al [ ebx + 0x2 ]
mov [ ebp + 0x2 ] al
mov al [ ebx + 0x3 ]
mov [ ebp + 0x3 ] al
mov al [ ebx + 0x4 ]
mov [ ebp + 0x4 ] al
mov al [ ebx + 0x5 ]
mov [ ebp + 0x5 ] al
mov al [ ebx + 0x6 ]
mov [ ebp + 0x6 ] al
mov al [ ebx + 0x7 ]
add ebx edx
mov [ ebp + 0x7 ] al
add ebp edx
sub ecx 0x1
jne r-xdata
jmp r-xdata
mov al [ ebx + 0x4 ]
lea edx [ esi + 0x70 ]
mov [ ebp + 0x4 ] al
cmp edi 0x5
jbe r-xdata
mov al [ ebp ]
mov [ ecx ] al
cmp edi 0x1
jbe r-xdata
push 0x8
push ebp
push ecx
call sub_41ee90
mov ecx [ esp + 0x34 ]
add esp 0xc
add ecx 0x8
add ebp 0x8
sub edi 0x8
mov [ esp + 0x28 ] ecx
sub ebx 0x1
jne r-xdata
lea edx [ esi + 0x70 ]
mov al [ ebp ]
sub edi 0x8
mov [ ecx ] al
mov al [ ebp + 0x1 ]
mov [ ecx + 0x1 ] al
mov al [ ebp + 0x2 ]
mov [ ecx + 0x2 ] al
mov al [ ebp + 0x3 ]
mov [ ecx + 0x3 ] al
mov al [ ebp + 0x4 ]
mov [ ecx + 0x4 ] al
mov al [ ebp + 0x5 ]
mov [ ecx + 0x5 ] al
mov al [ ebp + 0x6 ]
mov [ ecx + 0x6 ] al
mov al [ ebp + 0x7 ]
add ebp 0x8
mov [ ecx + 0x7 ] al
add ecx 0x8
sub edx 0x1
jne r-xdata
jmp r-xdata
mov al [ ebx + 0x5 ]
lea edx [ esi + 0x70 ]
mov [ ebp + 0x5 ] al
cmp edi 0x6
jbe r-xdata
mov al [ ebp + 0x1 ]
mov [ ecx + 0x1 ] al
cmp edi 0x2
jbe r-xdata
mov al [ ebx + 0x6 ]
mov [ ebp + 0x6 ] al
jmp r-xdata
mov al [ ebp + 0x2 ]
mov [ ecx + 0x2 ] al
cmp edi 0x3
jbe r-xdata
mov al [ ebp + 0x3 ]
mov [ ecx + 0x3 ] al
cmp edi 0x4
jbe r-xdata
mov al [ ebp + 0x4 ]
mov [ ecx + 0x4 ] al
cmp edi 0x5
jbe r-xdata
mov al [ ebp + 0x5 ]
mov [ ecx + 0x5 ] al
cmp edi 0x6
jbe r-xdata
mov al [ ebp + 0x6 ]
mov [ ecx + 0x6 ] al
jmp r-xdata
sub_415071
sub esp 0x124
push ebx
push ebp
push esi
push edi
mov ebx ecx
call sub_4118ca
push [ esp + 0x138 ]
mov ecx ebx
call sub_41302d
mov eax [ ebx + 0x1c ]
xor edx edx
add eax eax
je r-xdata
mov edi [ ebx + 0x18 ]
lea eax [ ebx + 0x94 ]
push 0x5
pop ecx
push 0x4a9c
push eax
lea esi [ ebx + 0x80 ]
add edi 0x18
[ edi ] [ esi ]
mov eax [ ebx + 0x18 ]
add eax 0x30
push eax
call sub_41ee90
xor eax eax
add esp 0xc
xor esi esi
mov [ esp + 0x28 ] eax
xor ebp ebp
mov [ esp + 0x13 ] al
mov [ esp + 0x18 ] ebp
mov [ esp + 0x12 ] al
xor ecx ecx
mov eax [ ebx + 0xe6dc ]
mov ecx ebx
and [ ebx + 0x70 ] eax
call sub_413638
imul edx [ esp + 0x28 ] 0x4ae4
lea edi [ ebx + 0x80 ]
mov eax [ ebx + 0x18 ]
push 0x5
pop ecx
push 0x4a9c
lea esi [ edx + 0x18 ]
add edx 0x30
add esi eax
add eax edx
push eax
lea eax [ ebx + 0x94 ]
[ edi ] [ esi ]
push eax
call sub_41ee90
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x124
retn 0x4
add esi eax
mov [ esp + 0x20 ] esi
je r-xdata
mov eax [ ebx + 0x18 ]
lea ecx [ ecx + 0x4ae4 ]
inc edx
mov [ eax + ecx - 0x13 ] 0x0
mov [ eax + ecx - 0x11 ] 0x0
mov eax [ ebx + 0x1c ]
add eax eax
cmp edx eax
jb r-xdata
test eax eax
jle r-xdata
cmp ebp esi
jl r-xdata
cmp esi 0x400
jl r-xdata
mov eax [ ebx + 0x1c ]
xor ecx ecx
and [ esp + 0x14 ] ecx
mov [ esp + 0x1c ] ecx
add eax eax
je r-xdata
jmp r-xdata
mov ecx [ ebx ]
mov eax __pe_sfxrar_export_address_table
sub eax esi
and eax 0xfffffff0
push eax
mov eax [ ebx + 0x20 ]
add eax esi
push eax
call sub_40c248
mov [ esp + 0x2c ] eax
test eax eax
js r-xdata
jmp r-xdata
mov ecx [ esp + 0x14 ]
xor edx edx
mov eax ecx
div [ ebx + 0x1c ]
mov edi eax
test edx edx
je r-xdata
mov edx [ esp + 0x18 ]
xor ebp ebp
xor ebp ebp
test ecx ecx
je r-xdata
inc edi
mov eax [ ebx + 0x20 ]
lea ecx [ edi + 0x4 ]
add eax edx
push eax
call sub_409e5c
mov esi [ esp + 0x20 ]
xor ecx ecx
mov eax esi
mov [ edi + 0x8 ] ecx
sub eax [ esp + 0x18 ]
mov [ edi + 0x4 ] ecx
mov [ edi + 0x4acc ] eax
je r-xdata
mov [ edi + 0x4acc ] esi
jmp r-xdata
mov ebp [ esp + 0x1c ]
test ebp ebp
je r-xdata
xor edx edx
lea esi [ esp + 0x34 ]
imul eax edi 0x4ae4
mov [ esp + 0x24 ] edx
mov [ esp + 0x30 ] eax
mov [ edi + 0x4ad0 ] cl
mov [ edi + 0x14 ] cl
mov [ edi + 0x2c ] cl
mov ecx [ esp + 0x1c ]
cmp [ esp + 0x2c ] 0x0
mov [ edi + 0x4ad3 ] 0x0
sete al
mov [ edi + 0x4ae0 ] ecx
cmp [ edi + 0x14 ] 0x0
mov [ edi + 0x4ad2 ] al
jne r-xdata
mov ebp [ esp + 0x18 ]
mov ecx [ ebx + 0x14 ]
call sub_40f473
xor eax eax
mov [ esp + 0x14 ] eax
test ebp ebp
je r-xdata
cmp [ esp + 0x1c ] 0x1
mov [ ecx + 0x4 ] eax
jne r-xdata
mov eax edi
cmp [ esp + 0x13 ] 0x0
jne r-xdata
lea eax [ edi + 0x18 ]
mov [ edi + 0x14 ] 0x1
push eax
lea eax [ edi + 0x4 ]
mov ecx ebx
push eax
call sub_412207
test al al
je r-xdata
mov al [ esp + 0x12 ]
xor edi edi
push ecx
mov ecx [ ebx + 0x14 ]
push sub_415a72
call sub_40f111
push edx
mov ecx ebx
call sub_415490
jmp r-xdata
mov [ edi + 0x4ad1 ] 0x1
mov [ esp + 0x13 ] 0x1
cmp [ edi + 0x18 ] 0x20000
jg r-xdata
mov [ esp + 0x12 ] 0x1
mov ecx [ esp + 0x1c ]
mov ebp [ esp + 0x18 ]
sub esi ebp
cmp esi 0x400
jl r-xdata
push ebp
mov ecx ebx
call sub_415aa1
test al al
je r-xdata
push ebp
mov ecx ebx
call sub_411c60
test al al
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx esi
add edx [ ebx + 0x18 ]
sub eax ebp
add esi 0x8
mov [ ecx ] edx
cmp edi eax
jae r-xdata
mov esi [ esp + 0x20 ]
mov edx [ esp + 0x24 ]
add ebp edi
add edx [ esp + 0x30 ]
mov [ esp + 0x24 ] edx
cmp ebp [ esp + 0x14 ]
jb r-xdata
cmp eax 0x400
jl r-xdata
cmp [ edi + 0x28 ] 0x0
jne r-xdata
inc [ esp + 0x14 ]
jmp r-xdata
test esi esi
js r-xdata
mov esi [ esp + 0x20 ]
cmp [ ebp + 0x4ad0 ] 0x0
jne r-xdata
cmp [ ebp + 0x4ad1 ] 0x0
je r-xdata
mov eax [ ebx + 0x1c ]
add eax eax
cmp ecx eax
jb r-xdata
mov eax [ edi + 0x24 ]
add ebp 0x4ae4
add eax [ edi + 0x18 ]
mov edx [ esp + 0x18 ]
add edx eax
inc ecx
mov eax esi
mov [ esp + 0x18 ] edx
sub eax edx
mov [ esp + 0x1c ] ecx
js r-xdata
jle r-xdata
cmp [ ebp + 0x4ad3 ] 0x0
jne r-xdata
mov edi [ ebx + 0x18 ]
add edi ebp
mov [ esp + 0x28 ] ecx
cmp [ edi + 0x4ad3 ] 0x0
mov [ edi ] ebx
je r-xdata
jmp r-xdata
xor ebp ebp
mov [ esp + 0x18 ] ebp
jmp r-xdata
mov ecx [ ebx + 0x20 ]
push esi
lea eax [ ecx + ebp ]
push eax
push ecx
call sub_41f6f0
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebx + 0x20 ]
sub eax ecx
add eax [ ebp + 0x4 ]
cmp esi eax
jle r-xdata
cmp [ ebp + 0x28 ] 0x0
jne r-xdata
cmp [ esp + 0x12 ] 0x0
je r-xdata
add esp 0xc
sub esi eax
add eax ecx
push esi
push eax
push ecx
mov [ esp + 0x2c ] esi
call sub_41f6f0
mov eax [ ebp + 0x20 ]
add esp 0xc
sub eax [ ebp + 0x4 ]
add [ ebp + 0x18 ] eax
and [ ebp + 0x24 ] 0x0
and [ ebp + 0x20 ] 0x0
mov eax [ ebx + 0x20 ]
and [ ebp + 0x4 ] 0x0
mov [ ebp + 0x10 ] eax
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov al 0x1
mov [ esp + 0x12 ] al
jmp r-xdata
mov eax [ esp + 0x14 ]
add edi 0x4ae4
inc eax
mov [ esp + 0x14 ] eax
cmp eax [ esp + 0x1c ]
jb r-xdata
mov eax [ ebx + 0x18 ]
push 0x4ae4
push ebp
push eax
mov esi [ eax + 0x4ad4 ]
mov edi [ eax + 0x4adc ]
call sub_41ee90
mov eax [ ebx + 0x18 ]
mov [ eax + 0x4ad4 ] esi
mov eax [ ebx + 0x18 ]
mov esi [ esp + 0x2c ]
mov [ eax + 0x4adc ] edi
mov [ ebp + 0x4ad3 ] 0x0
test al al
jne r-xdata
mov ebp [ ebx + 0x18 ]
add ebp edi
cmp [ ebp + 0x4ad1 ] 0x0
jne r-xdata
sub_415490
sub esp 0x24
push esi
mov esi [ esp + 0x2c ]
mov [ esp + 0x14 ] ecx
cmp [ esi + 0x2c ] 0x0
jne r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x18 ]
add eax ecx
push edi
lea edi [ esi + 0x4 ]
cmp [ edi ] eax
jle r-xdata
lea eax [ esi + 0x30 ]
mov [ esi + 0x2c ] 0x1
push eax
lea eax [ esi + 0x18 ]
push eax
lea eax [ esi + 0x4 ]
push eax
call sub_412795
test al al
jne r-xdata
mov eax [ esi + 0x20 ]
mov edx [ esi + 0x4acc ]
dec eax
and [ esi + 0x4ad8 ] 0x0
add eax ecx
sub edx 0x10
mov [ esp + 0xc ] eax
mov [ esp + 0x8 ] edx
push ebx
cmp eax edx
jge r-xdata
mov [ esi + 0x4ad0 ] 0x1
jmp r-xdata
mov [ esi + 0x4ad0 ] 0x1
jmp r-xdata
mov ebx edx
mov [ esp + 0x34 ] edx
mov ebx eax
mov [ esp + 0x34 ] ebx
jmp r-xdata
pop edi
pop esi
add esp 0x24
retn 0x4
mov ecx [ esi + 0x4adc ]
lea eax [ ecx - 0x8 ]
cmp [ esi + 0x4ad8 ] eax
jbe r-xdata
cmp ecx eax
jg r-xdata
push ebp
mov eax [ esi + 0x4ad8 ]
mov ecx edi
imul ebp eax 0xc
add ebp [ esi + 0x4ad4 ]
inc eax
mov [ esp + 0x1c ] ebp
mov [ esi + 0x4ad8 ] eax
call sub_409e9f
mov edx eax
mov eax [ esi + 0xb4 ]
and edx 0xfffe
cmp edx [ esi + eax * 4 + 0x34 ]
jae r-xdata
lea eax [ ecx + ecx ]
mov [ esi + 0x4adc ] eax
imul eax eax 0xc
push eax
push [ esi + 0x4ad4 ]
call sub_4216d5
mov ebx eax
pop ecx
pop ecx
test ebx ebx
jne r-xdata
pop ebp
pop ebx
jne r-xdata
push 0xf
pop ebx
inc eax
cmp eax ebx
jae r-xdata
push 0x10
pop ecx
sub ecx eax
shr edx cl
movzx ecx [ edx + esi + 0xb8 ]
add ecx [ edi + 0x4 ]
mov eax ecx
shr eax 0x3
add [ edi ] eax
and ecx 0x7
mov [ edi + 0x4 ] ecx
movzx ecx [ esi + edx * 2 + 0x4b8 ]
jmp r-xdata
mov [ esi + 0x4ad4 ] ebx
mov ecx rw-data
call sub_406a1c
cmp ecx edx
jl r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0x1c ]
jge r-xdata
mov ecx [ edi + 0x4 ]
add ecx ebx
mov eax ecx
and ecx 0x7
mov [ edi + 0x4 ] ecx
shr eax 0x3
add [ edi ] eax
sub edx [ esi + ebx * 4 + 0x30 ]
push 0x10
pop ecx
sub ecx ebx
shr edx cl
add edx [ esi + ebx * 4 + 0x74 ]
cmp edx [ esi + 0x30 ]
sbb eax eax
and eax edx
movzx ecx [ esi + eax * 2 + 0xcb8 ]
lea ecx [ esi + 0x34 ]
lea ecx [ ecx + eax * 4 ]
mov eax 0x100
cmp ecx eax
jae r-xdata
cmp ecx [ esi + 0x4acc ]
jge r-xdata
cmp [ esi + 0x4ad2 ] 0x0
je r-xdata
cmp ecx 0x106
jb r-xdata
cmp [ esi + 0x4ad8 ] 0x1
jbe r-xdata
mov ebx eax
inc eax
add ecx 0x4
cmp eax 0xf
jb r-xdata
mov [ esi + 0x4ad3 ] 0x1
cmp ecx eax
jne r-xdata
lea ebp [ ecx - 0x106 ]
cmp ebp 0x8
jae r-xdata
and [ ebp ] 0x0
xor eax eax
mov [ ebp + 0x8 ] cl
mov [ ebp + 0x4 ] ax
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp edx [ ecx ]
jb r-xdata
jmp r-xdata
cmp ecx 0x101
jne r-xdata
mov ecx [ esp + 0x20 ]
lea eax [ esp + 0x24 ]
push eax
push edi
call sub_412391
movzx eax [ esp + 0x24 ]
mov [ ebp + 0x4 ] ax
mov eax [ esp + 0x28 ]
mov [ ebp + 0x8 ] eax
push 0x4
pop edx
mov [ ebp ] edx
mov eax [ esi + 0x4ad8 ]
imul ecx eax 0xc
add ecx [ esi + 0x4ad4 ]
inc eax
mov [ esi + 0x4ad8 ] eax
movzx eax [ esp + 0x30 ]
mov [ ecx + 0x4 ] ax
mov eax [ esp + 0x2c ]
mov [ ecx ] edx
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov ebx ebp
push 0x3
shr ebx 0x2
pop eax
and ebp eax
dec ebx
or ebp 0x4
mov ecx ebx
shl ebp cl
add ebp 0x2
test ebx ebx
je r-xdata
add ebp 0x2
jmp r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ebx [ esp + 0x38 ]
jmp r-xdata
movzx eax [ ebp - 0x8 ]
push 0x3
pop edx
cmp ax dx
jae r-xdata
push 0x3
pop eax
mov [ ebp ] eax
lea eax [ ecx - 0x102 ]
mov ecx edi
mov [ ebp + 0x8 ] eax
call sub_409e9f
mov edx eax
mov eax [ esi + 0x2d78 ]
and edx 0xfffe
cmp edx [ esi + eax * 4 + 0x2cf8 ]
jae r-xdata
mov [ ebp ] 0x2
jmp r-xdata
mov ecx edi
call sub_409e9f
mov edx eax
mov eax [ esi + 0xfa0 ]
and edx 0xfffe
cmp edx [ esi + eax * 4 + 0xf20 ]
jae r-xdata
mov ecx edi
call sub_409e9f
push 0x10
pop ecx
sub ecx ebx
shr eax cl
mov ecx [ edi + 0x4 ]
add ebp eax
add ecx ebx
mov eax ecx
shr eax 0x3
add [ edi ] eax
and ecx 0x7
mov [ edi + 0x4 ] ecx
mov ecx [ edi ]
cmp ecx ebx
jl r-xdata
inc eax
mov [ ebp - 0x8 ] ax
movzx eax ax
mov [ eax + ebp - 0x4 ] cl
dec [ esi + 0x4ad8 ]
push 0xf
pop ebx
inc eax
cmp eax ebx
jae r-xdata
push 0x10
pop ecx
sub ecx eax
shr edx cl
movzx ecx [ edx + esi + 0x2d7c ]
add ecx [ edi + 0x4 ]
mov eax ecx
shr eax 0x3
add [ edi ] eax
and ecx 0x7
mov [ edi + 0x4 ] ecx
movzx ebx [ esi + edx * 2 + 0x317c ]
jmp r-xdata
push 0xf
pop ebx
inc eax
cmp eax ebx
jae r-xdata
push 0x10
pop ecx
sub ecx eax
shr edx cl
movzx ecx [ edx + esi + 0xfa4 ]
add ecx [ edi + 0x4 ]
mov eax ecx
shr eax 0x3
add [ edi ] eax
and ecx 0x7
mov [ edi + 0x4 ] ecx
movzx ebx [ esi + edx * 2 + 0x13a4 ]
jmp r-xdata
mov ecx [ edi + 0x4 ]
add ecx ebx
mov eax ecx
and ecx 0x7
mov [ edi + 0x4 ] ecx
shr eax 0x3
add [ edi ] eax
sub edx [ esi + ebx * 4 + 0x2cf4 ]
push 0x10
pop ecx
sub ecx ebx
shr edx cl
add edx [ esi + ebx * 4 + 0x2d38 ]
cmp edx [ esi + 0x2cf4 ]
sbb eax eax
and eax edx
movzx ebx [ esi + eax * 2 + 0x397c ]
lea ecx [ esi + 0x2cf8 ]
lea ecx [ ecx + eax * 4 ]
cmp ebx 0x8
jae r-xdata
mov ecx [ edi + 0x4 ]
add ecx ebx
mov eax ecx
and ecx 0x7
mov [ edi + 0x4 ] ecx
shr eax 0x3
add [ edi ] eax
sub edx [ esi + ebx * 4 + 0xf1c ]
push 0x10
pop ecx
sub ecx ebx
shr edx cl
add edx [ esi + ebx * 4 + 0xf60 ]
cmp edx [ esi + 0xf1c ]
sbb eax eax
and eax edx
movzx ebx [ esi + eax * 2 + 0x1ba4 ]
lea ecx [ esi + 0xf20 ]
lea ecx [ ecx + eax * 4 ]
cmp ebx 0x4
jae r-xdata
mov eax ebx
push 0x3
shr eax 0x2
pop ecx
and ebx ecx
dec eax
or ebx 0x4
mov [ esp + 0x1c ] eax
mov ecx eax
shl ebx cl
add ebx 0x2
test eax eax
je r-xdata
add ebx 0x2
jmp r-xdata
mov ebx eax
inc eax
add ecx 0x4
cmp eax 0xf
jb r-xdata
mov eax ebx
and ebx 0x1
shr eax 0x1
or ebx 0x2
dec eax
mov ecx eax
mov [ esp + 0x18 ] eax
shl ebx cl
inc ebx
test eax eax
je r-xdata
inc ebx
jmp r-xdata
mov ebx eax
inc eax
add ecx 0x4
cmp eax 0xf
jb r-xdata
mov [ ebp + 0x4 ] bx
jmp r-xdata
mov ecx edi
call sub_409e9f
push 0x10
pop ecx
sub ecx [ esp + 0x1c ]
shr eax cl
mov ecx [ edi + 0x4 ]
add ebx eax
add ecx [ esp + 0x1c ]
mov eax ecx
shr eax 0x3
add [ edi ] eax
and ecx 0x7
mov [ edi + 0x4 ] ecx
cmp edx [ ecx ]
jb r-xdata
jmp r-xdata
cmp ebx 0x100
jbe r-xdata
cmp eax 0x4
jb r-xdata
cmp edx [ ecx ]
jb r-xdata
jmp r-xdata
mov eax [ esp + 0x1c ]
mov [ eax ] 0x1
mov [ eax + 0x4 ] bp
mov [ eax + 0x8 ] ebx
jmp r-xdata
inc ebp
cmp ebx 0x2000
jbe r-xdata
mov ecx edi
call sub_416b93
push 0x20
pop ecx
sub ecx [ esp + 0x18 ]
shr eax cl
mov ecx [ edi + 0x4 ]
add ebx eax
add ecx [ esp + 0x18 ]
mov eax ecx
shr eax 0x3
add [ edi ] eax
and ecx 0x7
mov [ edi + 0x4 ] ecx
jbe r-xdata
inc ebp
cmp ebx 0x40000
jbe r-xdata
mov ecx edi
call sub_409e9f
mov edx eax
mov eax [ esi + 0x1e8c ]
and edx 0xfffe
cmp edx [ esi + eax * 4 + 0x1e0c ]
jae r-xdata
mov ecx edi
call sub_416b93
mov edx [ esp + 0x18 ]
push 0x24
pop ecx
sub ecx edx
shr eax cl
lea ecx [ edx - 0x4 ]
add ecx [ edi + 0x4 ]
shl eax 0x4
add ebx eax
mov eax ecx
shr eax 0x3
add [ edi ] eax
and ecx 0x7
mov [ edi + 0x4 ] ecx
inc ebp
push 0xf
pop ecx
inc eax
mov [ esp + 0x18 ] ecx
cmp eax ecx
jae r-xdata
push 0x10
pop ecx
sub ecx eax
shr edx cl
movzx ecx [ edx + esi + 0x1e90 ]
add ecx [ edi + 0x4 ]
mov eax ecx
shr eax 0x3
add [ edi ] eax
and ecx 0x7
mov [ edi + 0x4 ] ecx
movzx eax [ esi + edx * 2 + 0x2290 ]
jmp r-xdata
mov ecx [ edi + 0x4 ]
add ecx [ esp + 0x18 ]
mov eax ecx
and ecx 0x7
shr eax 0x3
add [ edi ] eax
mov eax [ esp + 0x18 ]
mov [ edi + 0x4 ] ecx
push 0x10
pop ecx
sub edx [ esi + eax * 4 + 0x1e08 ]
sub ecx eax
shr edx cl
add edx [ esi + eax * 4 + 0x1e4c ]
cmp edx [ esi + 0x1e08 ]
sbb eax eax
and eax edx
movzx eax [ esi + eax * 2 + 0x2a90 ]
lea ecx [ esi + 0x1e0c ]
lea ecx [ ecx + eax * 4 ]
add ebx eax
jmp r-xdata
mov [ esp + 0x18 ] eax
inc eax
add ecx 0x4
cmp eax 0xf
jb r-xdata
cmp edx [ ecx ]
jb r-xdata
jmp r-xdata
sub_415a72
push esi
push edi
mov edi [ esp + 0xc ]
xor esi esi
cmp [ edi + 0x4 ] esi
jbe r-xdata
pop edi
pop esi
retn 0x4
push ebx
mov ebx esi
mov ecx [ edi ]
lea eax [ ebx + ecx ]
mov ecx [ ecx ]
push eax
call sub_415490
inc esi
lea ebx [ ebx + 0x4ae4 ]
cmp esi [ edi + 0x4 ]
jb r-xdata
pop ebx
sub_415aa1
sub esp 0x24
push ebx
mov ebx [ esp + 0x2c ]
push edi
mov edi ecx
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x24 ]
mov ecx [ ebx + 0x18 ]
add eax ecx
push ebp
lea ebp [ ebx + 0x4 ]
cmp [ ebp ] eax
jle r-xdata
lea eax [ ebx + 0x30 ]
mov [ ebx + 0x2c ] 0x1
push eax
lea eax [ ebx + 0x18 ]
push eax
lea eax [ ebx + 0x4 ]
push eax
call sub_412795
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
push esi
mov esi [ ebx + 0x4acc ]
dec eax
add eax ecx
sub esi 0x10
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] esi
cmp eax esi
jge r-xdata
mov [ ebx + 0x4ad0 ] 0x1
xor al al
jmp r-xdata
mov [ ebx + 0x4ad0 ] 0x1
jmp r-xdata
mov [ esp + 0x1c ] esi
jmp r-xdata
mov [ esp + 0x1c ] eax
jmp r-xdata
pop ebp
pop edi
pop ebx
add esp 0x24
retn 0x4
mov edx [ edi + 0xe6dc ]
and [ edi + 0x70 ] edx
mov ecx [ ebp ]
cmp ecx [ esp + 0x1c ]
jl r-xdata
mov ecx [ edi + 0x4b30 ]
mov eax ecx
sub eax [ edi + 0x70 ]
and eax edx
cmp eax 0x1004
jae r-xdata
cmp ecx eax
jg r-xdata
mov ecx ebp
call sub_409e9f
mov edx eax
mov eax [ ebx + 0xb4 ]
and edx 0xfffe
cmp edx [ ebx + eax * 4 + 0x34 ]
jae r-xdata
cmp ecx [ edi + 0x70 ]
je r-xdata
mov al 0x1
jne r-xdata
push 0xf
pop esi
inc eax
cmp eax esi
jae r-xdata
push 0x10
pop ecx
sub ecx eax
shr edx cl
movzx ecx [ edx + ebx + 0xb8 ]
add ecx [ ebp + 0x4 ]
mov eax ecx
shr eax 0x3
add [ ebp ] eax
and ecx 0x7
mov [ ebp + 0x4 ] ecx
movzx edx [ ebx + edx * 2 + 0x4b8 ]
jmp r-xdata
mov ecx edi
call sub_413638
mov eax [ edi + 0x4c54 ]
cmp eax [ edi + 0x4c44 ]
jg r-xdata
cmp ecx esi
jl r-xdata
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0x1c ]
jge r-xdata
mov ecx [ ebp + 0x4 ]
add ecx esi
mov eax ecx
and ecx 0x7
mov [ ebp + 0x4 ] ecx
shr eax 0x3
add [ ebp ] eax
sub edx [ ebx + esi * 4 + 0x30 ]
push 0x10
pop ecx
sub ecx esi
shr edx cl
add edx [ ebx + esi * 4 + 0x74 ]
cmp edx [ ebx + 0x30 ]
sbb eax eax
and eax edx
movzx edx [ ebx + eax * 2 + 0xcb8 ]
lea ecx [ eax + 0xd ]
lea ecx [ ebx + ecx * 4 ]
mov eax 0x100
cmp edx eax
jae r-xdata
xor al al
jmp r-xdata
jl r-xdata
cmp ecx [ ebx + 0x4acc ]
jge r-xdata
cmp [ ebx + 0x4ad2 ] 0x0
je r-xdata
cmp edx 0x106
jb r-xdata
mov eax [ edi + 0x70 ]
mov ecx [ edi + 0x4b34 ]
mov [ ecx + eax ] dl
inc [ edi + 0x70 ]
mov esi eax
inc eax
add ecx 0x4
cmp eax 0xf
jb r-xdata
pop esi
mov eax [ edi + 0x4c50 ]
cmp eax [ edi + 0x4c40 ]
ja r-xdata
mov [ ebx + 0x4ad3 ] 0x1
jmp r-xdata
cmp edx eax
jne r-xdata
lea esi [ edx - 0x106 ]
cmp esi 0x8
jae r-xdata
cmp edx [ ecx ]
jb r-xdata
jmp r-xdata
cmp edx 0x101
jne r-xdata
lea eax [ esp + 0x24 ]
mov ecx edi
push eax
push ebp
call sub_412391
test al al
je r-xdata
mov ebp esi
and esi 0x3
shr ebp 0x2
or esi 0x4
dec ebp
mov ecx ebp
shl esi cl
add esi 0x2
test ebp ebp
je r-xdata
add esi 0x2
jmp r-xdata
add edx 0xfffffefe
lea ecx [ edi + 0x54 ]
lea ecx [ ecx + edx * 4 ]
mov esi [ ecx ]
mov [ esp + 0x20 ] esi
je r-xdata
mov esi [ edi + 0x68 ]
mov eax [ esp + 0x14 ]
test esi esi
je r-xdata
lea eax [ esp + 0x24 ]
mov ecx edi
push eax
call sub_41065b
test al al
jne r-xdata
lea ebp [ ebx + 0x4 ]
lea ecx [ ebx + 0x4 ]
call sub_409e9f
push 0x10
pop ecx
sub ecx ebp
shr eax cl
mov ecx [ ebx + 0x8 ]
add esi eax
add ecx ebp
lea ebp [ ebx + 0x4 ]
mov eax ecx
shr eax 0x3
add [ ebp ] eax
and ecx 0x7
mov [ ebp + 0x4 ] ecx
jmp r-xdata
mov ecx ebp
call sub_409e9f
mov edx eax
mov eax [ ebx + 0xfa0 ]
and edx 0xfffe
cmp edx [ ebx + eax * 4 + 0xf20 ]
jae r-xdata
mov ecx ebp
mov [ edi + 0x54 ] esi
call sub_409e9f
mov edx eax
mov eax [ ebx + 0x2d78 ]
and edx 0xfffe
cmp edx [ ebx + eax * 4 + 0x2cf8 ]
jae r-xdata
mov eax [ ecx - 0x4 ]
mov [ ecx ] eax
lea ecx [ ecx - 0x4 ]
sub edx 0x1
jne r-xdata
mov esi [ esp + 0x10 ]
mov eax [ edi + 0x54 ]
mov edx [ edi + 0x70 ]
mov ebp edx
sub ebp eax
mov [ esp + 0x18 ] eax
mov eax [ edi + 0xe6d8 ]
add eax 0xffffefff
cmp ebp eax
jae r-xdata
mov esi [ esp + 0x10 ]
push 0xf
pop ecx
inc eax
mov [ esp + 0x18 ] ecx
cmp eax ecx
jae r-xdata
push 0x10
pop ecx
sub ecx eax
shr edx cl
movzx ecx [ edx + ebx + 0xfa4 ]
add ecx [ ebp + 0x4 ]
mov eax ecx
shr eax 0x3
add [ ebp ] eax
and ecx 0x7
mov [ ebp + 0x4 ] ecx
movzx ebp [ ebx + edx * 2 + 0x13a4 ]
jmp r-xdata
push 0xf
pop esi
inc eax
cmp eax esi
jae r-xdata
push 0x10
pop ecx
sub ecx eax
shr edx cl
movzx ecx [ edx + ebx + 0x2d7c ]
add ecx [ ebp + 0x4 ]
mov eax ecx
shr eax 0x3
add [ ebp ] eax
and ecx 0x7
mov [ ebp + 0x4 ] ecx
movzx esi [ ebx + edx * 2 + 0x317c ]
jmp r-xdata
mov eax [ esp + 0x14 ]
test esi esi
je r-xdata
cmp edx eax
jae r-xdata
mov ecx [ ebp + 0x4 ]
add ecx [ esp + 0x18 ]
mov eax ecx
and ecx 0x7
shr eax 0x3
add [ ebp ] eax
mov eax [ esp + 0x18 ]
mov [ ebp + 0x4 ] ecx
push 0x10
pop ecx
sub edx [ ebx + eax * 4 + 0xf1c ]
sub ecx eax
shr edx cl
add edx [ ebx + eax * 4 + 0xf60 ]
cmp edx [ ebx + 0xf1c ]
sbb eax eax
and eax edx
movzx ebp [ ebx + eax * 2 + 0x1ba4 ]
lea ecx [ eax + 0x3c8 ]
lea ecx [ ebx + ecx * 4 ]
cmp ebp 0x4
jae r-xdata
mov ecx [ ebp + 0x4 ]
add ecx esi
mov eax ecx
and ecx 0x7
mov [ ebp + 0x4 ] ecx
shr eax 0x3
add [ ebp ] eax
sub edx [ ebx + esi * 4 + 0x2cf4 ]
push 0x10
pop ecx
sub ecx esi
shr edx cl
add edx [ ebx + esi * 4 + 0x2d38 ]
cmp edx [ ebx + 0x2cf4 ]
sbb eax eax
and eax edx
movzx esi [ ebx + eax * 2 + 0x397c ]
lea ecx [ eax + 0xb3e ]
lea ecx [ ebx + ecx * 4 ]
cmp esi 0x8
jae r-xdata
lea ebp [ ebx + 0x4 ]
mov ebx [ edi + 0xe6dc ]
mov eax [ edi + 0x4b34 ]
add ebp eax
lea ecx [ eax + edx ]
lea eax [ edx + esi ]
mov [ esp + 0x20 ] ecx
mov [ edi + 0x70 ] eax
cmp [ esp + 0x18 ] esi
jae r-xdata
mov eax ebp
and ebp 0x1
shr eax 0x1
or ebp 0x2
dec eax
mov ecx eax
mov [ esp + 0x18 ] eax
shl ebp cl
inc ebp
test eax eax
je r-xdata
inc ebp
jmp r-xdata
mov [ esp + 0x18 ] eax
inc eax
add ecx 0x4
cmp eax 0xf
jb r-xdata
mov ebp esi
and esi 0x3
shr ebp 0x2
or esi 0x4
dec ebp
mov ecx ebp
shl esi cl
add esi 0x2
test ebp ebp
je r-xdata
add esi 0x2
jmp r-xdata
mov esi eax
inc eax
add ecx 0x4
cmp eax 0xf
jb r-xdata
mov edx [ edi + 0x4b34 ]
and ebx ebp
mov ecx [ edi + 0x70 ]
inc ebp
mov al [ ebx + edx ]
mov [ edx + ecx ] al
mov eax [ edi + 0x70 ]
mov ebx [ edi + 0xe6dc ]
inc eax
and eax ebx
mov [ edi + 0x70 ] eax
sub esi 0x1
jne r-xdata
jmp r-xdata
cmp esi 0x8
jb r-xdata
cmp esi 0x8
jb r-xdata
cmp ebp 0x100
jbe r-xdata
cmp eax 0x4
jb r-xdata
cmp edx [ ecx ]
jb r-xdata
jmp r-xdata
mov edx [ edi + 0x70 ]
mov ebp edx
mov eax [ edi + 0xe6d8 ]
sub ebp [ esp + 0x20 ]
add eax 0xffffefff
mov [ edi + 0x68 ] esi
cmp ebp eax
jae r-xdata
lea ecx [ ebx + 0x4 ]
call sub_409e9f
push 0x10
pop ecx
sub ecx ebp
shr eax cl
mov ecx [ ebx + 0x8 ]
add esi eax
add ecx ebp
mov eax ecx
shr eax 0x3
add [ ebx + 0x4 ] eax
and ecx 0x7
mov [ ebx + 0x8 ] ecx
cmp edx [ ecx ]
jb r-xdata
jmp r-xdata
mov ebx [ esp + 0x38 ]
lea ebp [ ebx + 0x4 ]
jmp r-xdata
mov eax [ esp + 0x14 ]
test esi esi
je r-xdata
mov eax esi
shr eax 0x3
mov ebx eax
mov edx esi
shr edx 0x3
mov eax [ edi + 0x5c ]
mov [ edi + 0x60 ] eax
mov eax [ edi + 0x58 ]
mov [ edi + 0x5c ] eax
mov eax [ edi + 0x54 ]
mov [ edi + 0x58 ] eax
mov [ edi + 0x54 ] ebp
mov edx [ edi + 0x70 ]
mov ecx edx
mov eax [ edi + 0xe6d8 ]
sub ecx ebp
add eax 0xffffefff
mov [ edi + 0x68 ] esi
mov [ esp + 0x20 ] ecx
cmp ecx eax
jae r-xdata
inc esi
cmp ebp 0x2000
jbe r-xdata
lea ecx [ ebx + 0x4 ]
call sub_416b93
push 0x20
pop ecx
sub ecx [ esp + 0x18 ]
shr eax cl
mov ecx [ ebx + 0x8 ]
add ebp eax
add ecx [ esp + 0x18 ]
mov eax ecx
shr eax 0x3
add [ ebx + 0x4 ] eax
and ecx 0x7
mov [ ebx + 0x8 ] ecx
jbe r-xdata
mov eax [ esp + 0x14 ]
test esi esi
je r-xdata
cmp edx eax
jae r-xdata
mov al [ ebp ]
mov [ ecx ] al
mov eax [ esp + 0x14 ]
cmp esi 0x1
jbe r-xdata
push 0x8
push ebp
push ecx
call sub_41ee90
mov ecx [ esp + 0x2c ]
add esp 0xc
add ecx 0x8
add ebp 0x8
sub esi 0x8
mov [ esp + 0x20 ] ecx
sub ebx 0x1
jne r-xdata
mov ebx [ esp + 0x38 ]
mov al [ ebp ]
sub esi 0x8
mov [ ecx ] al
mov al [ ebp + 0x1 ]
mov [ ecx + 0x1 ] al
mov al [ ebp + 0x2 ]
mov [ ecx + 0x2 ] al
mov al [ ebp + 0x3 ]
mov [ ecx + 0x3 ] al
mov al [ ebp + 0x4 ]
mov [ ecx + 0x4 ] al
mov al [ ebp + 0x5 ]
mov [ ecx + 0x5 ] al
mov al [ ebp + 0x6 ]
mov [ ecx + 0x6 ] al
mov al [ ebp + 0x7 ]
add ebp 0x8
mov [ ecx + 0x7 ] al
add ecx 0x8
sub edx 0x1
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x14 ]
lea ebp [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp edx eax
jae r-xdata
inc esi
cmp ebp 0x40000
jbe r-xdata
lea edx [ ebx + 0x4 ]
lea ecx [ ebx + 0x4 ]
call sub_416b93
mov edx [ esp + 0x18 ]
push 0x24
pop ecx
sub ecx edx
add edx 0xfffffffc
shr eax cl
mov ecx [ ebx + 0x8 ]
shl eax 0x4
add ecx edx
add ebp eax
lea edx [ ebx + 0x4 ]
mov eax ecx
shr eax 0x3
add [ edx ] eax
and ecx 0x7
mov [ edx + 0x4 ] ecx
jmp r-xdata
mov ebx [ edi + 0xe6dc ]
mov eax [ edi + 0x4b34 ]
add ebp eax
lea ecx [ eax + edx ]
lea eax [ edx + esi ]
mov [ esp + 0x18 ] ecx
mov [ edi + 0x70 ] eax
cmp [ esp + 0x20 ] esi
jae r-xdata
mov al [ ebp + 0x1 ]
mov [ ecx + 0x1 ] al
mov eax [ esp + 0x14 ]
cmp esi 0x2
jbe r-xdata
mov ebp [ edi + 0xe6dc ]
mov ebx [ esp + 0x20 ]
mov eax [ edi + 0x4b34 ]
add ecx eax
add [ edi + 0x70 ] esi
add edx eax
mov [ esp + 0x18 ] ecx
mov [ esp + 0x20 ] edx
cmp ebp esi
jae r-xdata
inc esi
push 0xf
pop ecx
inc eax
mov [ esp + 0x18 ] ecx
cmp eax ecx
jae r-xdata
push 0x10
pop ecx
sub ecx eax
shr edx cl
movzx ecx [ edx + ebx + 0x1e90 ]
add ecx [ ebx + 0x8 ]
mov eax ecx
shr eax 0x3
add [ ebx + 0x4 ] eax
and ecx 0x7
mov [ ebx + 0x8 ] ecx
movzx eax [ ebx + edx * 2 + 0x2290 ]
jmp r-xdata
mov ecx edx
call sub_409e9f
mov edx eax
mov eax [ ebx + 0x1e8c ]
and edx 0xfffe
cmp edx [ ebx + eax * 4 + 0x1e0c ]
jae r-xdata
mov edx [ edi + 0x4b34 ]
and ebx ebp
mov ecx [ edi + 0x70 ]
inc ebp
mov al [ ebx + edx ]
mov [ edx + ecx ] al
mov eax [ edi + 0x70 ]
mov ebx [ edi + 0xe6dc ]
inc eax
and eax ebx
mov [ edi + 0x70 ] eax
sub esi 0x1
jne r-xdata
cmp esi 0x8
jb r-xdata
cmp esi 0x8
jb r-xdata
mov al [ ebp + 0x2 ]
mov [ ecx + 0x2 ] al
mov eax [ esp + 0x14 ]
cmp esi 0x3
jbe r-xdata
mov edx [ edi + 0x4b34 ]
and ebp ebx
mov ecx [ edi + 0x70 ]
inc ebx
mov al [ edx + ebp ]
mov [ edx + ecx ] al
mov eax [ edi + 0x70 ]
mov ebp [ edi + 0xe6dc ]
inc eax
and eax ebp
mov [ edi + 0x70 ] eax
sub esi 0x1
jne r-xdata
jmp r-xdata
cmp esi 0x8
jb r-xdata
cmp esi 0x8
jb r-xdata
mov ecx [ ebx + 0x8 ]
add ecx [ esp + 0x18 ]
mov eax ecx
and ecx 0x7
shr eax 0x3
add [ ebx + 0x4 ] eax
mov eax [ esp + 0x18 ]
mov [ ebx + 0x8 ] ecx
push 0x10
pop ecx
sub edx [ ebx + eax * 4 + 0x1e08 ]
sub ecx eax
shr edx cl
add edx [ ebx + eax * 4 + 0x1e4c ]
cmp edx [ ebx + 0x1e08 ]
sbb eax eax
and eax edx
movzx eax [ ebx + eax * 2 + 0x2a90 ]
lea ecx [ eax + 0x783 ]
lea ecx [ ebx + ecx * 4 ]
add ebp eax
jmp r-xdata
mov eax esi
shr eax 0x3
mov [ esp + 0x20 ] eax
mov ebx eax
mov edx esi
shr edx 0x3
mov al [ ebp + 0x3 ]
mov [ ecx + 0x3 ] al
mov eax [ esp + 0x14 ]
cmp esi 0x4
jbe r-xdata
mov eax [ esp + 0x14 ]
lea ebp [ ebx + 0x4 ]
test esi esi
je r-xdata
mov ebp esi
shr ebp 0x3
mov ebp esi
shr ebp 0x3
mov [ esp + 0x18 ] eax
inc eax
add ecx 0x4
cmp eax 0xf
jb r-xdata
push 0x8
push ebp
push ecx
call sub_41ee90
mov ecx [ esp + 0x24 ]
add esp 0xc
add ecx 0x8
add ebp 0x8
sub esi 0x8
mov [ esp + 0x18 ] ecx
sub ebx 0x1
jne r-xdata
jmp r-xdata
mov al [ ebp ]
sub esi 0x8
mov [ ecx ] al
mov al [ ebp + 0x1 ]
mov [ ecx + 0x1 ] al
mov al [ ebp + 0x2 ]
mov [ ecx + 0x2 ] al
mov al [ ebp + 0x3 ]
mov [ ecx + 0x3 ] al
mov al [ ebp + 0x4 ]
mov [ ecx + 0x4 ] al
mov al [ ebp + 0x5 ]
mov [ ecx + 0x5 ] al
mov al [ ebp + 0x6 ]
mov [ ecx + 0x6 ] al
mov al [ ebp + 0x7 ]
add ebp 0x8
mov [ ecx + 0x7 ] al
add ecx 0x8
sub edx 0x1
jne r-xdata
jmp r-xdata
mov al [ ebp + 0x4 ]
mov [ ecx + 0x4 ] al
mov eax [ esp + 0x14 ]
cmp esi 0x5
jbe r-xdata
mov al [ ecx ]
lea ebp [ ebx + 0x4 ]
mov [ edx ] al
mov eax [ esp + 0x14 ]
cmp esi 0x1
jbe r-xdata
push 0x8
push ecx
push edx
call sub_41ee90
mov ecx [ esp + 0x24 ]
add esp 0xc
mov edx [ esp + 0x20 ]
add ecx 0x8
add edx 0x8
mov [ esp + 0x18 ] ecx
sub esi 0x8
mov [ esp + 0x20 ] edx
sub ebp 0x1
jne r-xdata
mov al [ ecx ]
sub esi 0x8
mov [ edx ] al
mov al [ ecx + 0x1 ]
mov [ edx + 0x1 ] al
mov al [ ecx + 0x2 ]
mov [ edx + 0x2 ] al
mov al [ ecx + 0x3 ]
mov [ edx + 0x3 ] al
mov al [ ecx + 0x4 ]
mov [ edx + 0x4 ] al
mov al [ ecx + 0x5 ]
mov [ edx + 0x5 ] al
mov al [ ecx + 0x6 ]
mov [ edx + 0x6 ] al
mov al [ ecx + 0x7 ]
add ecx 0x8
mov [ edx + 0x7 ] al
add edx 0x8
sub ebp 0x1
jne r-xdata
jmp r-xdata
cmp edx [ ecx ]
jb r-xdata
jmp r-xdata
mov al [ ebp + 0x5 ]
cmp esi 0x6
mov esi [ esp + 0x10 ]
mov [ ecx + 0x5 ] al
mov eax [ esp + 0x14 ]
jbe r-xdata
mov al [ ecx + 0x1 ]
lea ebp [ ebx + 0x4 ]
mov [ edx + 0x1 ] al
mov eax [ esp + 0x14 ]
cmp esi 0x2
jbe r-xdata
lea ebp [ ebx + 0x4 ]
jmp r-xdata
mov al [ ebp + 0x6 ]
mov [ ecx + 0x6 ] al
jmp r-xdata
mov al [ ecx + 0x2 ]
lea ebp [ ebx + 0x4 ]
mov [ edx + 0x2 ] al
mov eax [ esp + 0x14 ]
cmp esi 0x3
jbe r-xdata
lea ebp [ ebx + 0x4 ]
jmp r-xdata
mov al [ ecx + 0x3 ]
lea ebp [ ebx + 0x4 ]
mov [ edx + 0x3 ] al
mov eax [ esp + 0x14 ]
cmp esi 0x4
jbe r-xdata
mov eax [ esp + 0x14 ]
jmp r-xdata
mov al [ ecx + 0x4 ]
lea ebp [ ebx + 0x4 ]
mov [ edx + 0x4 ] al
mov eax [ esp + 0x14 ]
cmp esi 0x5
jbe r-xdata
mov al [ ecx + 0x5 ]
lea ebp [ ebx + 0x4 ]
mov [ edx + 0x5 ] al
cmp esi 0x6
mov esi [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
jbe r-xdata
mov al [ ecx + 0x6 ]
mov [ edx + 0x6 ] al
sub_41649f
sub esp 0x1c
push ebx
push ebp
push esi
push edi
mov edi ecx
xor esi esi
xor ebx ebx
inc esi
mov eax [ edi + 0x650 ]
mov edx [ eax ]
mov ax [ eax + 0x4 ]
mov [ esp + 0x24 ] edx
shr edx 0x8
mov [ esp + 0x28 ] ax
cmp dl 0x1f
jae r-xdata
cmp [ edi + 0x65c ] 0x0
jne r-xdata
mov eax [ edi + 0x644 ]
mov ebp [ eax + 0x8 ]
test ebp ebp
je r-xdata
mov eax [ edi + 0x4bdc ]
mov cl [ esp + 0x24 ]
mov [ eax ] cl
mov edx [ edi + 0x4bdc ]
inc edx
mov [ esp + 0x18 ] edx
mov [ edi + 0x4bdc ] edx
cmp edx [ edi + 0x4be8 ]
jae r-xdata
push ebx
push esi
mov ecx edi
call sub_410f34
mov ecx [ edi + 0x650 ]
mov [ ecx + 0x2 ] eax
mov [ edi + 0x64c ] eax
mov [ edi + 0x644 ] eax
test eax eax
jne r-xdata
cmp [ ebp ] si
je r-xdata
mov ecx edi
call sub_412c47
mov [ edi + 0xa6c ] 0x0
mov ebp [ esp + 0x26 ]
test ebp ebp
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn
lea ebx [ ebp + 0x2 ]
cmp [ ebx + 0x1 ] 0x20
setb al
add [ ebx + 0x1 ] al
mov ebx [ ebp + 0x4 ]
mov al [ esp + 0x24 ]
cmp [ ebx ] al
je r-xdata
mov eax [ edi + 0x650 ]
mov ebx edx
mov [ eax + 0x2 ] edx
mov ebp [ edi + 0x644 ]
jmp r-xdata
cmp ebp edx
ja r-xdata
mov al [ ebx + 0x1 ]
cmp al 0x73
jae r-xdata
add ebx 0x6
cmp [ ebx ] al
jne r-xdata
mov eax [ edi + 0x644 ]
movzx esi [ esp + 0x25 ]
mov [ esp + 0x1c ] esi
movzx ecx [ eax + 0x2 ]
movzx edx [ eax ]
sub ecx esi
mov esi [ edi + 0x64c ]
sub ecx edx
inc ecx
mov [ esp + 0x14 ] edx
mov [ esp + 0x20 ] ecx
cmp esi eax
je r-xdata
sub [ edi + 0x65c ] 0x1
jne r-xdata
push ebx
push 0x0
mov ecx edi
call sub_410f34
mov ebp eax
test ebp ebp
je r-xdata
add al 0x2
mov [ ebx + 0x1 ] al
add [ ebp + 0x2 ] 0x2
jmp r-xdata
mov al [ ebx + 0x1 ]
cmp al [ ebx - 0x5 ]
jb r-xdata
mov [ edi + 0x644 ] ebp
mov [ edi + 0x64c ] ebp
jmp r-xdata
movzx eax [ esi ]
mov [ esp + 0x10 ] eax
cmp eax 0x1
je r-xdata
mov ebx [ esp + 0x18 ]
mov ecx [ edi + 0x64c ]
xor eax eax
cmp ecx [ edi + 0x644 ]
mov ebx ebp
setne al
sub [ edi + 0x4bdc ] eax
jmp r-xdata
mov ecx [ ebx ]
lea esi [ ebx - 0x6 ]
mov eax [ esi ]
mov dx [ ebx + 0x4 ]
mov [ ebx ] eax
mov ax [ esi + 0x4 ]
mov [ ebx + 0x4 ] ax
mov ebx esi
mov [ esi ] ecx
mov [ esi + 0x4 ] dx
xor esi esi
inc esi
push 0x1
lea ecx [ edi + 0x4a8c ]
call sub_410c28
test eax eax
je r-xdata
test al 0x1
jne r-xdata
mov ecx [ esi + 0x2 ]
mov [ eax ] ecx
mov cx [ esi + 0x6 ]
mov [ eax + 0x4 ] cx
mov [ esi + 0x4 ] eax
mov cl [ eax + 0x1 ]
cmp cl 0x1e
jae r-xdata
movzx edx [ esi + 0x2 ]
mov ecx eax
mov eax [ esp + 0x10 ]
shl ecx 0x3
cmp ecx edx
sbb ecx ecx
shl eax 0x2
inc ecx
cmp [ esp + 0x14 ] eax
sbb eax eax
inc eax
and cx ax
mov eax [ esp + 0x10 ]
add eax eax
add cx cx
cmp eax [ esp + 0x14 ]
sbb eax eax
neg eax
add cx ax
add cx dx
jmp r-xdata
shr eax 0x1
lea ecx [ edi + 0x4a8c ]
push eax
push [ esi + 0x4 ]
call sub_41136a
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
mov [ eax + 0x1 ] 0x78
add cl cl
mov [ eax + 0x1 ] cl
jmp r-xdata
movzx eax cx
mov [ esi + 0x2 ] cx
mov ecx [ esp + 0x20 ]
add ecx eax
lea edx [ eax + 0x6 ]
mov [ esp + 0x18 ] ecx
imul edx [ esp + 0x1c ]
imul eax ecx 0x6
add edx edx
cmp edx eax
jae r-xdata
mov eax [ esp + 0x10 ]
imul eax ecx 0xf
cmp edx eax
sbb ecx ecx
imul eax [ esp + 0x18 ] 0xc
inc ecx
cmp edx eax
sbb eax eax
inc eax
add ecx eax
imul eax [ esp + 0x18 ] 0x9
cmp edx eax
sbb eax eax
add ecx 0x4
inc eax
add ecx eax
add [ esi + 0x2 ] cx
mov [ esp + 0x18 ] ecx
mov eax ecx
shl eax 0x2
cmp edx eax
sbb ecx ecx
inc ecx
cmp [ esp + 0x18 ] edx
sbb eax eax
neg eax
inc eax
add eax ecx
add [ esi + 0x2 ] 0x3
mov [ esp + 0x18 ] eax
jmp r-xdata
movzx eax [ eax + 0x1 ]
push 0x3
pop ecx
cmp ecx [ esp + 0x14 ]
sbb ecx ecx
neg ecx
add cx [ edi + 0x658 ]
add cx ax
mov ecx [ esp + 0x10 ]
mov dl [ esp + 0x24 ]
imul eax ecx 0x6
add eax [ esi + 0x4 ]
mov [ eax ] dl
mov edx [ esp + 0x18 ]
mov [ eax + 0x2 ] ebx
mov [ eax + 0x1 ] dl
lea eax [ ecx + 0x1 ]
mov [ esi ] ax
mov esi [ esi + 0x8 ]
cmp esi [ edi + 0x644 ]
jne r-xdata
sub_41678b
push esi
push edi
mov edi ecx
mov ecx [ esp + 0xc ]
lea ecx [ ecx + 0x4a8c ]
call sub_410bf3
mov esi eax
test esi esi
je r-xdata
pop edi
mov eax esi
pop esi
retn 0xc
mov edx [ esp + 0x14 ]
xor eax eax
inc eax
mov [ esi ] ax
mov ecx [ edx ]
mov [ esi + 0x2 ] ecx
mov ax [ edx + 0x4 ]
mov [ esi + 0x6 ] ax
mov eax [ esp + 0x10 ]
mov [ esi + 0x8 ] edi
mov [ eax + 0x2 ] esi
sub_4167cc
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
mov edx ecx
push edi
mov eax [ esi + 0x650 ]
lea ebp [ edx + 0x2 ]
movzx eax [ eax ]
mov bl [ eax + esi + 0x96c ]
mov [ esi + 0xa6e ] bl
movzx eax [ ebp ]
movzx ecx [ eax + esi + 0x96c ]
movzx eax [ ebp + 0x1 ]
shl eax 0x5
add ecx eax
mov eax [ edx + 0x8 ]
xor edx edx
movzx eax [ eax ]
movzx eax [ eax + esi + 0x86b ]
add eax 0x4f8
lea edi [ eax + ecx * 2 ]
mov eax [ esi + 0x664 ]
sar eax 0x1a
and eax 0x20
add edi eax
movzx eax [ esi + 0xa6d ]
shr [ esi + 0x4a78 ] 0xe
add edi eax
movzx eax bl
add edi eax
mov eax [ esi + 0x4a74 ]
sub eax [ esi + 0x4a70 ]
div [ esi + 0x4a78 ]
movzx ecx [ esi + edi * 2 ]
cmp eax ecx
jae r-xdata
mov [ esi + 0x4a7c ] ecx
movzx ecx [ esi + edi * 2 ]
lea eax [ ecx + 0x20 ]
sar eax 0x7
sub ecx eax
mov [ esi + edi * 2 ] cx
mov [ esi + 0x4a80 ] 0x4000
movzx eax [ esi + edi * 2 ]
shr eax 0xa
mov [ esi + 0x654 ] 0x1
movzx eax [ eax + r--data ]
mov [ esi + 0x658 ] eax
movzx ecx [ ebp ]
mov al [ esi + 0xa6c ]
mov [ ecx + esi + 0x66c ] al
and [ esi + 0x650 ] 0x0
mov [ esi + 0xa6d ] 0x0
mov [ esi + 0x650 ] ebp
cmp [ ebp + 0x1 ] 0x80
setb al
add [ ebp + 0x1 ] al
and [ esi + 0x4a7c ] 0x0
movzx eax [ esi + edi * 2 ]
mov [ esi + 0x4a80 ] eax
movzx ecx [ esi + edi * 2 ]
lea eax [ ecx + 0x20 ]
sar eax 0x7
sub ecx eax
sub ecx 0xffffff80
mov [ esi + edi * 2 ] cx
inc [ esi + 0x664 ]
mov [ esi + 0xa6d ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
sub_416900
push ebx
push ebp
mov ebx ecx
xor edx edx
push esi
mov esi [ esp + 0x10 ]
push edi
movzx eax [ ebx + 0x2 ]
mov [ esi + 0x4a84 ] eax
mov eax [ esi + 0x4a78 ]
div [ esi + 0x4a84 ]
xor edx edx
mov edi [ ebx + 0x4 ]
mov ecx eax
mov eax [ esi + 0x4a74 ]
sub eax [ esi + 0x4a70 ]
div ecx
mov [ esi + 0x4a78 ] ecx
mov edx [ esi + 0x4a84 ]
mov ebp eax
cmp ebp edx
jl r-xdata
movzx ecx [ edi + 0x1 ]
cmp ebp ecx
jge r-xdata
xor al al
jmp r-xdata
mov eax [ esi + 0x650 ]
test eax eax
je r-xdata
lea eax [ ecx + ecx ]
mov [ esi + 0x4a80 ] ecx
cmp eax edx
mov [ esi + 0x650 ] edi
push 0x4
seta al
mov [ esi + 0xa6d ] al
movzx eax al
add [ esi + 0x664 ] eax
pop eax
add ecx eax
mov [ edi + 0x1 ] cl
add [ ebx + 0x2 ] ax
cmp ecx 0x7c
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov [ esi + 0xa6d ] 0x0
movzx edx [ ebx ]
dec edx
jmp r-xdata
and [ esi + 0x4a7c ] 0x0
jmp r-xdata
push esi
mov ecx ebx
call sub_416c86
movzx eax [ edi + 0x7 ]
add edi 0x6
add ecx eax
cmp ecx ebp
jle r-xdata
mov al 0x1
sub edx 0x1
je r-xdata
mov [ esi + 0x4a80 ] ecx
movzx eax [ edi + 0x1 ]
sub ecx eax
push edi
mov [ esi + 0x4a7c ] ecx
mov ecx ebx
push esi
call sub_416e3b
mov eax [ esi + 0x650 ]
movzx eax [ eax ]
mov al [ eax + esi + 0x96c ]
mov [ esi + 0xa6e ] al
mov al [ esi + 0xa6c ]
mov [ esi + 0x4a7c ] ecx
movzx ecx [ edi ]
mov [ ecx + esi + 0x66c ] al
movzx eax [ ebx ]
and [ esi + 0x650 ] 0x0
mov [ esi + 0x654 ] eax
lea edx [ eax - 0x1 ]
mov al [ esi + 0xa6c ]
lea edi [ edi - 0x6 ]
movzx ecx [ edi ]
mov [ ecx + esi + 0x66c ] al
sub edx 0x1
jne r-xdata
mov eax [ esi + 0x4a84 ]
mov [ esi + 0x4a80 ] eax
jmp r-xdata
sub_416a4f
sub esp 0x410
push ebx
push ebp
push esi
mov esi [ esp + 0x420 ]
mov ebx ecx
push edi
mov [ esp + 0x18 ] ebx
movzx edi [ ebx ]
sub edi [ esi + 0x654 ]
push edi
push esi
call sub_416bd7
mov ecx [ ebx + 0x4 ]
lea edx [ esp + 0x20 ]
mov bl [ esi + 0xa6c ]
sub ecx 0x6
mov [ esp + 0x14 ] eax
xor ebp ebp
add ecx 0x6
movzx eax [ ecx ]
cmp [ eax + esi + 0x66c ] bl
je r-xdata
movzx eax [ ecx + 0x1 ]
mov [ edx ] ecx
add ebp eax
add edx 0x4
sub edi 0x1
jne r-xdata
add [ esi + 0x4a84 ] ebp
xor edx edx
mov eax [ esi + 0x4a78 ]
div [ esi + 0x4a84 ]
xor edx edx
mov ebx [ esp + 0x18 ]
mov ecx eax
mov eax [ esi + 0x4a74 ]
sub eax [ esi + 0x4a70 ]
div ecx
mov [ esi + 0x4a78 ] ecx
mov ecx [ esi + 0x4a84 ]
cmp eax ecx
jl r-xdata
mov edi [ esp + 0x20 ]
lea edx [ esp + 0x20 ]
cmp eax ebp
jge r-xdata
xor al al
jmp r-xdata
mov [ esi + 0x4a7c ] ebp
lea edx [ esp + 0x20 ]
mov [ esi + 0x4a80 ] ecx
movzx edi [ ebx ]
sub edi [ esi + 0x654 ]
sub edx 0x4
movzx ecx [ edi + 0x1 ]
cmp ecx eax
jg r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x410
retn 0x4
lea edx [ edx + 0x4 ]
mov eax [ edx ]
movzx ecx [ eax ]
mov al [ esi + 0xa6c ]
mov [ ecx + esi + 0x66c ] al
sub edi 0x1
jne r-xdata
mov ecx [ esp + 0x14 ]
mov ax [ esi + 0x4a84 ]
add [ ecx ] ax
movzx eax [ ebx ]
mov [ esi + 0x654 ] eax
mov [ esi + 0x4a80 ] ecx
movzx eax [ edi + 0x1 ]
sub ecx eax
mov [ esi + 0x4a7c ] ecx
mov ecx [ esp + 0x14 ]
call sub_416ed0
push edi
push esi
mov ecx ebx
call sub_416e96
jmp r-xdata
mov ebp eax
mov al 0x1
lea edx [ edx + 0x4 ]
mov edi [ edx ]
movzx eax [ edi + 0x1 ]
add ecx eax
cmp ecx ebp
jle r-xdata
sub_416b93
push ebx
mov ebx ecx
push esi
push edi
push 0x8
mov esi [ ebx + 0xc ]
mov edx [ ebx ]
movzx edi [ esi + edx ]
movzx eax [ esi + edx + 0x1 ]
movzx ecx [ esi + edx + 0x3 ]
shl edi 0x8
or edi eax
movzx eax [ esi + edx + 0x2 ]
movzx edx [ esi + edx + 0x4 ]
shl edi 0x8
or eax edi
shl eax 0x8
or eax ecx
mov ecx [ ebx + 0x4 ]
shl eax cl
pop ecx
sub cl [ ebx + 0x4 ]
pop edi
shr edx cl
pop esi
or eax edx
pop ebx
retn
sub_416bd7
push ecx
mov edx ecx
mov ecx 0x100
push esi
mov [ esp + 0x4 ] edx
movzx eax [ edx ]
cmp ax cx
je r-xdata
mov ecx [ esp + 0xc ]
lea esi [ ecx + 0x640 ]
mov [ ecx + 0x4a84 ] 0x1
push ebx
mov ebx [ esp + 0x14 ]
push ebp
mov ebp [ esp + 0x14 ]
push edi
mov edi eax
xor eax eax
cmp [ ebp + 0x654 ] ebx
movzx ecx [ ebx + ebp + 0x76b ]
setg al
lea esi [ eax + ecx * 4 ]
movzx ecx [ edx + 0x2 ]
imul eax edi 0xb
xor edx edx
cmp ecx eax
mov eax [ esp + 0x10 ]
setl dl
xor ecx ecx
mov eax [ eax + 0x8 ]
lea edx [ edx + esi * 2 ]
movzx eax [ eax ]
sub eax edi
cmp ebx eax
movzx eax [ ebp + 0xa6e ]
pop edi
setl cl
lea ecx [ ecx + edx * 2 ]
add ecx eax
lea esi [ ecx * 4 ]
add esi ebp
movzx eax [ esi ]
mov cl [ esi + 0x2 ]
mov edx eax
shr edx cl
sub eax edx
mov [ esi ] ax
xor eax eax
test edx edx
sete al
add eax edx
mov [ ebp + 0x4a84 ] eax
pop ebp
pop ebx
jmp r-xdata
mov eax esi
pop esi
pop ecx
retn 0x8
sub_416c86
sub esp 0x14
push ebx
push ebp
mov ebp [ esp + 0x20 ]
push esi
push edi
mov edi ecx
mov esi [ ebp + 0x650 ]
movzx eax [ edi ]
mov [ esp + 0x20 ] eax
lea ebx [ eax - 0x1 ]
cmp esi [ edi + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
add [ eax + 0x1 ] 0x4
xor eax eax
add [ edi + 0x2 ] 0x4
movzx ecx [ esi + 0x1 ]
movzx edx [ edi + 0x2 ]
sub edx ecx
cmp [ ebp + 0x65c ] eax
setne al
mov [ esp + 0x18 ] eax
add eax ecx
mov ebp [ esp + 0x18 ]
lea ecx [ edi + 0x2 ]
sar eax 0x1
mov [ esi + 0x1 ] al
movzx eax al
mov [ ecx ] ax
lea ebp [ esi - 0x6 ]
sub ebx 0x1
jne r-xdata
mov eax [ esi ]
mov ecx esi
mov [ esp + 0x14 ] eax
mov ax [ esi + 0x4 ]
mov ebp [ esp + 0x14 ]
mov [ esp + 0x12 ] ax
mov eax [ ebp ]
mov ecx [ esi ]
mov dx [ esi + 0x4 ]
mov [ esi ] eax
mov ax [ ebp + 0x4 ]
mov [ esi + 0x4 ] ax
sub esi 0x6
mov [ ebp ] ecx
lea ebp [ ebp - 0x6 ]
mov [ ebp + 0xa ] dx
cmp esi [ edi + 0x4 ]
jne r-xdata
mov ebp [ esp + 0x28 ]
movzx eax [ esi + 0x7 ]
add esi 0x6
sub edx eax
add eax ebp
sar eax 0x1
mov [ esi + 0x1 ] al
movzx eax al
add [ ecx ] ax
mov al [ esi + 0x1 ]
cmp al [ esi - 0x5 ]
jbe r-xdata
mov ebp [ esp + 0x28 ]
inc esi
cmp [ esi ] bl
jne r-xdata
mov eax [ esp + 0x14 ]
mov ebp [ esp + 0x18 ]
mov [ ecx ] eax
mov ax [ esp + 0x12 ]
mov [ ecx + 0x4 ] ax
lea ecx [ edi + 0x2 ]
mov eax ebp
shr eax 0x8
cmp al [ ecx - 0x5 ]
ja r-xdata
mov eax edx
sar eax 0x1
sub edx eax
movzx eax [ edi ]
add [ ecx ] dx
mov ecx [ esp + 0x20 ]
inc ecx
sar ecx 0x1
inc eax
sar eax 0x1
cmp ecx eax
je r-xdata
lea esi [ esi - 0x6 ]
inc ebx
cmp [ esi ] 0x0
je r-xdata
mov eax [ ecx - 0x6 ]
mov [ ecx ] eax
mov ax [ ecx - 0x2 ]
mov [ ecx + 0x4 ] ax
sub ecx 0x6
cmp ecx [ edi + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov [ ebp + 0x650 ] eax
push eax
push ecx
push [ edi + 0x4 ]
lea ecx [ ebp + 0x4a8c ]
call sub_412de9
mov [ edi + 0x4 ] eax
movzx eax [ edi ]
add edx ebx
sub eax ebx
xor ebx ebx
inc ebx
mov [ edi ] ax
cmp ax bx
jne r-xdata
mov esi [ edi + 0x4 ]
mov ecx [ esi ]
mov bx [ esi + 0x4 ]
mov [ esp + 0x18 ] ecx
mov eax [ esp + 0x20 ]
lea eax [ eax + 0x1 ]
sar eax 0x1
movzx ecx [ eax + ebp + 0x4ab5 ]
mov eax [ ebp + ecx * 4 + 0x4b44 ]
mov [ esi ] eax
mov eax [ esp + 0x18 ]
mov [ ebp + ecx * 4 + 0x4b44 ] esi
lea ecx [ edi + 0x2 ]
mov [ ebp + 0x650 ] ecx
mov [ ecx ] eax
mov [ ecx + 0x4 ] bx
jmp r-xdata
mov ecx [ esp + 0x18 ]
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x4
shr ecx 0x8
mov al cl
sar edx 0x1
shr al 0x1
sub cl al
mov [ esp + 0x19 ] cl
cmp edx 0x1
jle r-xdata
sub_416e3b
push ebx
push ebp
mov ebp [ esp + 0xc ]
mov ebx ecx
push edi
mov edi [ esp + 0x14 ]
mov [ ebp + 0x650 ] edi
add [ edi + 0x1 ] 0x4
add [ ebx + 0x2 ] 0x4
mov al [ edi + 0x1 ]
cmp al [ edi - 0x5 ]
jbe r-xdata
pop edi
pop ebp
pop ebx
retn 0x8
mov ecx [ edi ]
mov dx [ edi + 0x4 ]
push esi
lea esi [ edi - 0x6 ]
mov eax [ esi ]
mov [ edi ] eax
mov ax [ esi + 0x4 ]
mov [ edi + 0x4 ] ax
mov [ esi ] ecx
mov [ esi + 0x4 ] dx
mov [ ebp + 0x650 ] esi
cmp [ esi + 0x1 ] 0x7c
pop esi
jbe r-xdata
push ebp
mov ecx ebx
call sub_416c86
sub_416e96
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov [ esi + 0x650 ] eax
add [ eax + 0x1 ] 0x4
add [ ecx + 0x2 ] 0x4
cmp [ eax + 0x1 ] 0x7c
jbe r-xdata
mov eax [ esi + 0x668 ]
inc [ esi + 0xa6c ]
mov [ esi + 0x664 ] eax
pop esi
retn 0x8
push esi
call sub_416c86
sub_416ed0
mov edx ecx
mov cl [ edx + 0x2 ]
cmp cl 0x7
jae r-xdata
retn
sub [ edx + 0x3 ] 0x1
jne r-xdata
shl [ edx ] 0x1
mov al 0x3
shl al cl
inc cl
mov [ edx + 0x3 ] al
mov [ edx + 0x2 ] cl
sub_416efd
mov eax 0x2014
call sub_41c240
push ebx
push ebp
push esi
mov esi [ esp + 0x2024 ]
push edi
mov ebp [ esi + 0x21dc ]
mov eax [ esi + 0x21bc ]
mov [ esp + 0x18 ] eax
cmp ebp 0x3
jne r-xdata
lea ebx [ esi + 0x2280 ]
cmp ebp 0x2
jne r-xdata
lea ebx [ esi + 0x45c0 ]
jmp r-xdata
xor al al
cmp [ ebx + 0x1089 ] 0x0
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
mov [ esp + 0x20 ] eax
mov [ esp + 0x1c ] edx
test edi edi
je r-xdata
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov ecx esi
call sub_408ebf
lea eax [ esi + 0x1e ]
push eax
lea eax [ esp + 0x28 ]
push eax
call sub_421693
cmp [ esi + 0x6cf2 ] 0x0
pop ecx
pop ecx
sete al
movzx eax al
push eax
push 0x800
lea eax [ esp + 0x2c ]
push eax
call sub_40b046
mov eax [ esp + 0x18 ]
mov [ esp + 0x12 ] 0x0
movzx ecx [ eax + 0x5195 ]
neg ecx
sbb ecx ecx
and ecx 0x4
mov [ esp + 0x14 ] ecx
push ecx
jmp r-xdata
mov ecx esi
call sub_4090c9
add [ edi + 0x80 ] eax
adc [ edi + 0x84 ] edx
cmp [ esi + 0x6ce8 ] 0x3
je r-xdata
mov edi [ esp + 0x202c ]
mov [ esp + 0x13 ] al
test edi edi
je r-xdata
mov eax [ esi ]
lea ecx [ esp + 0x28 ]
push ecx
mov ecx esi
call [ eax + 0x4 ]
test al al
je r-xdata
movzx ecx [ ebx + 0x10ba ]
lea eax [ ebx + 0x10bb ]
neg ecx
sbb ecx ecx
and ecx eax
lea eax [ ebx + 0x1060 ]
push ecx
push eax
lea ecx [ edi + 0x90 ]
call sub_40a092
test al al
jne r-xdata
cmp [ ebx + 0x19 ] 0x14
jb r-xdata
test edi edi
je r-xdata
cmp [ esp + 0x2034 ] 0x54
lea eax [ esi + 0x1e ]
push eax
setne al
movzx eax al
push eax
call sub_40fc7e
push 0x1
mov ecx esi
call sub_401941
cmp [ esp + 0x13 ] 0x0
mov ecx esi
je r-xdata
lea eax [ ebx + 0x20 ]
push eax
lea eax [ esi + 0x1e ]
push eax
push 0x5
call sub_401f25
cmp [ ebx + 0x1064 ] 0xffffffff
je r-xdata
cmp [ esp + 0x12 ] 0x0
jne r-xdata
and [ edi + 0x88 ] 0x0
and [ edi + 0x8c ] 0x0
call sub_4037fd
push ebp
call sub_403b79
jmp r-xdata
mov eax [ esp + 0x18 ]
cmp [ eax + 0x517c ] 0x0
jne r-xdata
lea eax [ esi + 0x1e ]
push eax
lea eax [ esp + 0x1028 ]
push eax
call sub_421693
pop ecx
pop ecx
push 0x1
push 0x800
lea eax [ esp + 0x102c ]
push eax
call sub_40b046
push [ esp + 0x14 ]
mov eax [ esi ]
lea ecx [ esp + 0x1028 ]
push ecx
mov ecx esi
mov [ esp + 0x1a ] 0x1
call [ eax + 0x4 ]
test al al
jne r-xdata
test edi edi
je r-xdata
mov ecx esi
call sub_401f93
mov ecx [ esi + 0x6ce0 ]
sub ecx [ esi + 0x32c8 ]
mov eax [ esi + 0x6ce4 ]
sbb eax [ esi + 0x32cc ]
mov edx [ esi ]
push 0x0
push eax
push ecx
mov ecx esi
call [ edx + 0xc ]
cmp [ esi + 0x21dc ] 0x2
jne r-xdata
lea eax [ esp + 0x24 ]
push eax
push 0x44
call sub_401546
push [ esp + 0x14 ]
mov eax [ esi ]
lea ecx [ esi + 0x1e ]
push ecx
mov ecx esi
call [ eax + 0x4 ]
mov eax [ esi ]
mov ecx esi
push 0x0
push [ esp + 0x20 ]
push [ esp + 0x28 ]
call [ eax + 0xc ]
xor al al
jmp r-xdata
push 0x800
lea eax [ esp + 0x28 ]
push eax
call j_sub_41b2a7
test al al
je r-xdata
lea eax [ esp + 0x1024 ]
push eax
lea eax [ esp + 0x28 ]
push eax
call sub_421693
pop ecx
pop ecx
jmp r-xdata
mov al 0x1
cmp ebp 0x5
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2014
retn 0x10
push [ esp + 0x14 ]
mov al [ ebx + 0x1089 ]
mov [ edi + 0x4f ] al
mov eax [ ebx + 0x1048 ]
mov [ edi + 0x20 ] eax
mov eax [ ebx + 0x104c ]
mov [ edi + 0x24 ] eax
mov [ edi + 0x4f ] 0x0
jmp r-xdata
mov ecx esi
call sub_4090c9
and [ edi + 0x70 ] 0x0
lea ecx [ edi + 0x90 ]
and [ edi + 0x74 ] 0x0
mov [ edi + 0x58 ] eax
mov eax [ esp + 0x18 ]
mov [ edi + 0x5c ] edx
push [ eax + 0x7298 ]
push [ ebx + 0x1060 ]
call sub_40a0c4
sub_4171d9
push esi
mov esi ecx
xor eax eax
push 0x10
push eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
lea eax [ esi + 0x20 ]
push eax
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
mov [ esi + 0x10 ] r--data
mov [ esi + 0x14 ] 0x1
call sub_41d1e0
add esp 0xc
mov eax esi
pop esi
retn
sub_417220
xor eax eax
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] eax
mov [ ecx + 0x18 ] eax
mov [ ecx + 0x1c ] ax
mov [ ecx + 0x1e ] al
mov [ ecx + 0x20 ] eax
mov eax ecx
retn
sub_417243
push ebp
mov ebp esp
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_42eb81
push eax
mov [ fs : 0x0 ] esp
push esi
mov esi ecx
mov ecx [ esi + 0x1c ]
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
mov [ esi + 0x10 ] r--data
test ecx ecx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
and [ esi + 0x1c ] 0x0
sub_4172a0
push ebp
mov ebp esp
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_42eb81
push eax
mov [ fs : 0x0 ] esp
push esi
mov esi ecx
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
and [ esi + 0x10 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop esi
mov esp ebp
pop ebp
retn
call sub_417f00
mov eax [ esi + 0xc ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
and [ esi + 0xc ] 0x0
sub_4173b7
push esi
mov esi [ esp + 0x8 ]
push [ esi + 0x14 ]
call [ IsWindow@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esi + 0x14 ]
mov [ eax ] ecx
xor eax eax
inc eax
jmp r-xdata
pop esi
retn 0x8
sub_4173e5
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
lea eax [ edi - 0x4 ]
test eax eax
lea eax [ edi + 0x4 ]
jne r-xdata
mov esi [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
mov [ eax ] ebx
lea eax [ ebp - 0x10 ]
push eax
push [ edi + 0x14 ]
call [ GetClientRect@IAT ]
mov ecx [ ebp + 0x14 ]
mov eax [ ebp - 0x8 ]
push ecx
push [ ebp + 0x18 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ ecx ] ebx
mov [ ecx + 0x4 ] ebx
mov [ ecx + 0xc ] eax
call [ CopyRect@IAT ]
mov ecx [ ebp + 0x1c ]
mov [ ecx ] 0x14
mov [ ecx + 0x4 ] ebx
mov eax [ edi + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] ebx
mov [ ecx + 0x10 ] ebx
mov eax [ esi ]
push eax
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax ebx
sub_417467
mov eax [ esp + 0x4 ]
jmp r-xdata
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp cx 0x3c
jne r-xdata
xor al al
add eax 0x2
cmp [ eax + 0x2 ] 0x2f
jne r-xdata
push 0x2
pop ecx
mov al 0x1
jmp r-xdata
inc ecx
cmp ecx 0x14
jb r-xdata
retn 0x4
cmp [ eax + ecx * 2 ] 0x3e
je r-xdata
sub_41749e
sub esp 0x24
push ebx
mov ebx [ GetTickCount@IAT ]
xor eax eax
push ebp
push esi
push edi
mov edi ecx
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
call ebx
mov esi [ esp + 0x38 ]
mov ebp eax
call ebx
sub eax ebp
cmp eax 0x7d0
ja r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov eax [ esi ]
lea ecx [ esp + 0x10 ]
push ecx
push esi
call [ eax + 0x48 ]
mov esi eax
test esi esi
js r-xdata
xor eax eax
push eax
push eax
push eax
push eax
lea eax [ esp + 0x28 ]
push eax
call [ PeekMessageW@IAT ]
test eax eax
je r-xdata
xor ebp ebp
cmp [ edi + 0x8 ] ebp
je r-xdata
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
lea eax [ esp + 0x10 ]
push eax
push esi
call [ ecx + 0x48 ]
test eax eax
js r-xdata
xor eax eax
push eax
push eax
push eax
lea eax [ esp + 0x24 ]
push eax
call [ GetMessageW@IAT ]
lea eax [ esp + 0x18 ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ esp + 0x18 ]
push eax
call [ DispatchMessageW@IAT ]
jmp r-xdata
pop edi
xor eax eax
test esi esi
pop esi
pop ebp
setns al
pop ebx
add esp 0x24
retn 0x8
cmp [ edi + 0x18 ] ebp
jne r-xdata
test esi esi
js r-xdata
mov eax [ ecx ]
lea edx [ esp + 0x14 ]
push edx
push r--data
push ecx
call [ eax ]
mov esi eax
test esi esi
js r-xdata
cmp [ edi + 0x14 ] ebp
je r-xdata
test ecx ecx
jne r-xdata
mov eax [ esp + 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov esi eax
test esi esi
js r-xdata
push [ edi + 0x14 ]
mov ecx edi
call sub_417ad8
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ esp + 0x14 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ esp + 0x14 ]
push [ esp + 0x3c ]
push eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov esi eax
push 0x204
push ebp
push ebp
push ebp
push ebp
push 0x1
push [ edi + 0x4 ]
call [ SetWindowPos@IAT ]
push 0x5
push [ edi + 0x8 ]
call [ ShowWindow@IAT ]
push ebx
push [ edi + 0x8 ]
call [ SetWindowTextW@IAT ]
push ebx
call j_sub_4251ac#3
pop ecx
sub_4175ed
push ecx
push ecx
push ebx
mov ebx ecx
cmp [ ebx + 0x10 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
retn 0x4
and [ esp + 0x4 ] 0x0
push esi
push edi
mov edi [ esp + 0x18 ]
push edi
call sub_417467
push edi
mov [ esp + 0x1c ] al
call sub_4216b5
lea eax [ eax * 2 + 0x200 ]
push eax
call sub_422c59
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
pop edi
pop esi
push ebp
push r--data
push esi
call sub_421693
push r--data
push esi
call sub_422c19
push r--data
push esi
call sub_422c19
add esp 0x18
mov ebp edi
push 0x20
pop eax
cmp [ edi ] ax
jne r-xdata
push 0x6
push r--data
push ebp
call sub_410101
neg eax
sbb al al
add al 0x1
mov [ esp + 0x14 ] eax
je r-xdata
add ebp 0x2
cmp [ ebp ] ax
je r-xdata
push edi
push esi
call sub_422c19
cmp [ esp + 0x1c ] 0x0
pop ecx
pop ecx
jne r-xdata
lea edi [ ebp + 0xc ]
cmp [ esp + 0x1c ] 0x0
jne r-xdata
push r--data
push esi
call sub_422c19
pop ecx
pop ecx
push esi
call sub_4216b5
imul ebp eax 0x6
pop ecx
add ebp 0x9
push ebp
push 0x40
call [ GlobalAlloc@IAT ]
mov edi eax
test edi edi
je r-xdata
push esi
mov ecx ebx
call sub_4177fb
mov esi eax
push esi
call j_sub_4251ac#3
pop ecx
lea eax [ esp + 0x10 ]
push eax
push 0x1
push edi
call [ CreateStreamOnHGlobal@IAT ]
pop ebp
test eax eax
js r-xdata
xor eax eax
lea ecx [ ebp - 0x3 ]
push eax
push eax
push ecx
lea ecx [ edi + 0x3 ]
push ecx
push 0xffffffff
push esi
push eax
push 0xfde9
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
push [ esp + 0xc ]
mov ecx ebx
push [ ebx + 0x10 ]
call sub_41749e
mov eax [ esp + 0xc ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov [ edi ] 0x0
mov [ edi ] 0xbbef
mov [ edi + 0x2 ] 0xbf
jmp r-xdata
sub_417735
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi ecx
push 0x30
mov [ edi + 0x4 ] esi
call sub_41c12b
mov [ esp + 0x10 ] eax
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_4171d9
jmp r-xdata
pop edi
pop esi
retn 0x4
push ebx
push ebp
mov [ eax + 0x18 ] esi
mov ecx [ edi + 0xc ]
push r--data
call sub_417e33
mov ecx [ edi + 0xc ]
push 0x1
call sub_417fcc
mov ecx [ edi + 0xc ]
push 0x1
call sub_417f82
mov ecx [ edi + 0xc ]
call sub_417ee7
mov ebx eax
test ebx ebx
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
mov ecx [ edi + 0x10 ]
test ecx ecx
je r-xdata
mov ecx [ ebx ]
lea ebp [ edi + 0x10 ]
push ebp
push r--data
push ebx
call [ ecx ]
mov ecx [ ebx ]
mov esi eax
push ebx
call [ ecx + 0x8 ]
test esi esi
jns r-xdata
pop ebp
pop ebx
mov edx [ edi + 0x18 ]
xor ebx ebx
mov [ edi + 0x1d ] bl
mov eax [ ecx ]
push ebx
push ebx
push ebx
push ebx
test edx edx
je r-xdata
and [ ebp ] 0x0
jmp r-xdata
push r--data
push ecx
call [ eax + 0x2c ]
mov ecx edi
call sub_417eba
push edx
push ecx
call [ eax + 0x2c ]
jmp r-xdata
sub_4177fb
push ecx
push ecx
push ebp
mov ebp [ esp + 0x10 ]
push edi
push ebp
call sub_4216b5
imul ecx eax 0xc
add ecx 0x200
push ecx
call sub_422c59
mov edi eax
mov [ esp + 0x14 ] edi
pop ecx
pop ecx
test edi edi
jne r-xdata
push ebx
push esi
push r--data
push edi
call sub_421693
push edi
call sub_4216b5
mov ebx eax
add esp 0xc
xor eax eax
mov esi ebp
cmp [ ebp ] ax
je r-xdata
mov eax ebp
jmp r-xdata
xor eax eax
push ebp
mov [ edi + ebx * 2 ] ax
call j_sub_4251ac#3
pop ecx
pop esi
mov eax edi
pop ebx
push 0xd
pop ecx
push 0xa
pop edx
pop edi
pop ebp
pop ecx
pop ecx
retn 0x4
cmp esi ebp
jbe r-xdata
cmp [ esi + 0x2 ] dx
jne r-xdata
mov [ edi + ebx * 2 ] ax
inc ebx
push 0x20
pop ecx
cmp ax cx
jne r-xdata
push 0xd
pop edx
lea ecx [ esi + 0x4 ]
cmp [ ecx ] dx
push 0xa
mov [ esp + 0x14 ] ecx
pop edx
jne r-xdata
movzx eax [ esi ]
cmp ax cx
jne r-xdata
cmp [ esi - 0x2 ] cx
jne r-xdata
cmp [ esi + 0x6 ] dx
jne r-xdata
lea eax [ edi + ebx * 2 ]
push r--data
push eax
call sub_421693
pop ecx
pop ecx
add ebx 0x6
push edx
lea ebp [ edi + ebx * 2 ]
pop edi
add esi 0x2
xor eax eax
push 0xd
pop ecx
cmp [ esi ] ax
jne r-xdata
mov edi [ esp + 0x14 ]
add esi 0x2
mov ebp [ esp + 0x1c ]
jmp r-xdata
push r--data
push ebp
call sub_421693
mov esi [ esp + 0x18 ]
add ebx 0x4
pop ecx
pop ecx
push 0xd
lea eax [ esi + 0x4 ]
add ebp 0x8
pop ecx
mov [ esp + 0x10 ] eax
cmp [ eax ] cx
je r-xdata
push 0xa
pop edx
jmp r-xdata
cmp [ esi + 0x6 ] di
jne r-xdata
sub_417913
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push ebx
push edi
mov edi [ ebp + 0xc ]
push 0x10
pop ebx
push ebx
push r--data
push edi
call sub_41d710
add esp 0xc
test eax eax
je r-xdata
mov eax 0x80004003
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ esi ] ecx
push ebx
push r--data
push edi
call sub_41d710
add esp 0xc
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0xc
pop edi
pop ebx
push ebx
push r--data
push edi
call sub_41d710
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push ebx
push r--data
push edi
call sub_41d710
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor eax eax
lea eax [ ecx + 0x4 ]
jmp r-xdata
push ebx
push r--data
push edi
call sub_41d710
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
lea eax [ ecx + 0x8 ]
jmp r-xdata
mov eax [ ecx ]
push ecx
call [ eax + 0x4 ]
xor eax eax
jmp r-xdata
mov [ esi ] eax
jmp r-xdata
push ebx
push r--data
push edi
call sub_41d710
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
lea eax [ ecx + 0xc ]
jmp r-xdata
and [ esi ] 0x0
mov eax 0x80004002
lea eax [ ecx + 0x10 ]
jmp r-xdata
sub_417a22
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
push 0x7f00
push ebx
mov edi ecx
mov [ ebp - 0x30 ] 0x30
mov [ ebp - 0x2c ] 0x828
mov [ ebp - 0x28 ] sub_417de4
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] ebx
call [ LoadCursorW@IAT ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x10 ] 0x6
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] r--data
mov [ ebp - 0x4 ] ebx
call [ RegisterClassExW@IAT ]
mov [ edi ] esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_417a8b
push esi
mov esi [ esp + 0x8 ]
sub [ esi + 0x14 ] 0x1
mov eax [ esi + 0x14 ]
jne r-xdata
pop esi
retn 0x4
mov ecx esi
call sub_417243
push 0x30
push esi
call sub_41c15e
pop ecx
pop ecx
xor eax eax
sub_417ad8
sub esp 0xc
push ebp
push esi
mov esi [ esp + 0x18 ]
push edi
push esi
mov edi ecx
call sub_4216b5
lea eax [ eax * 2 + 0x2 ]
push eax
call sub_422c59
mov ebp eax
pop ecx
pop ecx
test ebp ebp
je r-xdata
pop edi
pop esi
pop ebp
add esp 0xc
retn 0x4
push esi
mov ecx edi
call sub_417467
movzx ecx [ esi ]
mov edi ebp
mov [ esp + 0x1c ] al
test cx cx
je r-xdata
mov eax ebp
push ebx
push 0x20
mov [ esp + 0x18 ] 0xd
xor ebx ebx
mov [ esp + 0x1c ] 0xa
pop edx
mov [ esp + 0x10 ] 0x3e
jmp r-xdata
test cx cx
jne r-xdata
cmp cx 0x3c
je r-xdata
push 0x4
push r--data
push esi
call sub_410101
mov ebx eax
neg ebx
sbb bl bl
add bl 0x1
jne r-xdata
test al al
je r-xdata
push 0xd
pop eax
push 0xa
mov [ edi ] ax
pop ecx
mov [ edi + 0x2 ] cx
add edi 0x4
test bl bl
je r-xdata
push 0x4
push r--data
push esi
call sub_410101
test eax eax
jne r-xdata
movzx eax [ esi ]
test ax ax
je r-xdata
cmp cx [ esp + 0x14 ]
je r-xdata
push 0x7
push r--data
xor eax eax
push esi
mov [ edi ] ax
call sub_410101
test eax eax
jne r-xdata
mov [ edi ] ax
mov [ edi + 0x2 ] cx
add edi 0x4
cmp ax dx
jne r-xdata
cmp edi ebp
je r-xdata
cmp cx [ esp + 0x18 ]
jne r-xdata
movzx eax [ esi ]
test ax ax
je r-xdata
xor ebx ebx
cmp [ esi ] bx
je r-xdata
mov [ edi ] ax
add edi 0x2
cmp edi ebp
je r-xdata
mov [ edi ] dx
add edi 0x2
cmp [ edi - 0x2 ] dx
je r-xdata
test al al
je r-xdata
mov eax [ esp + 0x10 ]
cmp [ esi ] ax
jne r-xdata
mov ecx [ esp + 0x10 ]
pop ebx
push 0x8
push r--data
push esi
call sub_410101
add esi 0x2
test eax eax
je r-xdata
cmp [ edi - 0x2 ] dx
je r-xdata
movzx ecx [ esi ]
add esi 0x2
jmp r-xdata
cmp cx 0x26
jne r-xdata
xor ebx ebx
add esi 0x2
add esi 0x2
movzx eax [ esi ]
test ax ax
jne r-xdata
add esi 0xe
jmp r-xdata
cmp [ esi ] bx
jne r-xdata
add esi 0x2
xor eax eax
cmp ax cx
je r-xdata
movzx ecx [ esi ]
mov al [ esp + 0x20 ]
push 0x20
pop edx
test cx cx
jne r-xdata
jmp r-xdata
push 0x20
pop edx
test bl bl
jne r-xdata
cmp ecx 0x3b
jne r-xdata
mov al [ esp + 0x20 ]
xor ebx ebx
add eax 0x2
cmp eax 0x28
jb r-xdata
lea esi [ edx + 0x2 ]
mov bl 0x1
lea edx [ eax + esi ]
movzx ecx [ edx ]
test cx cx
je r-xdata
sub_417cb5
mov al [ esp + 0x14 ]
sub esp 0x10
push ebx
push ebp
mov ebp [ esp + 0x20 ]
mov ebx ecx
push esi
push 0x0
push ebp
mov [ ebx + 0x8 ] ebp
mov [ ebx + 0x1e ] al
call [ ShowWindow@IAT ]
push [ esp + 0x20 ]
mov ecx ebx
call sub_417a22
mov eax [ esp + 0x28 ]
mov [ ebx + 0x14 ] eax
mov eax [ esp + 0x2c ]
mov [ ebx + 0x18 ] eax
lea eax [ esp + 0xc ]
push eax
push ebp
call [ GetWindowRect@IAT ]
push 0x2
lea eax [ esp + 0x10 ]
push eax
push ebp
call [ GetParent@IAT ]
push eax
push 0x0
call [ MapWindowPoints@IAT ]
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ esp + 0xc ]
mov esi [ esp + 0x14 ]
push edi
push ebx
push [ ebx ]
sub esi eax
lea edi [ eax + 0x1 ]
push 0x0
push ebp
sub esi 0x2
call [ GetParent@IAT ]
push eax
mov eax [ esp + 0x2c ]
sub eax [ esp + 0x24 ]
push eax
push esi
push [ esp + 0x2c ]
xor esi esi
push edi
push 0x40000000
push esi
push r--data
push esi
call [ CreateWindowExW@IAT ]
mov [ ebx + 0x4 ] eax
pop edi
cmp [ ebx + 0x10 ] esi
jne r-xdata
push [ ebx + 0x4 ]
call [ DestroyWindow@IAT ]
test eax eax
je r-xdata
test ebp ebp
je r-xdata
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x14
push 0x5
push eax
call [ ShowWindow@IAT ]
push [ ebx + 0x4 ]
call [ UpdateWindow@IAT ]
cmp [ ebx + 0x18 ] esi
jne r-xdata
cmp [ ebx + 0x14 ] esi
je r-xdata
push [ ebx + 0x14 ]
mov ecx ebx
call sub_417ad8
mov esi eax
test esi esi
je r-xdata
push 0x5
push ebp
call [ ShowWindow@IAT ]
push esi
push ebp
call [ SetWindowTextW@IAT ]
push esi
call j_sub_4251ac#3
pop ecx
jmp r-xdata
sub_417de4
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
sub eax 0x1
je r-xdata
push 0xffffffeb
push [ ebp + 0x8 ]
call [ GetWindowLongW@IAT ]
push [ ebp + 0x8 ]
mov ecx eax
call sub_417735
sub eax 0x80
jne r-xdata
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ DefWindowProcW@IAT ]
pop edi
pop ebp
retn 0x10
push [ edi ]
push 0xffffffeb
push [ ebp + 0x8 ]
call [ SetWindowLongW@IAT ]
jmp r-xdata
sub_417e33
push ebp
mov ebp esp
sub esp 0x14
lea eax [ ebp - 0x14 ]
push esi
push edi
push eax
push [ ebp + 0x8 ]
mov edi ecx
call [ CLSIDFromString@IAT ]
lea esi [ edi + 0x1c ]
push esi
push r--data
push 0x5
push 0x0
lea eax [ ebp - 0x14 ]
push eax
call [ CoCreateInstance@IAT ]
mov ecx [ esi ]
test ecx ecx
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ ecx ]
lea edx [ ebp + 0x8 ]
push edx
push r--data
push ecx
call [ eax ]
test eax eax
js r-xdata
mov eax [ ebp + 0x8 ]
push edi
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ esi ]
lea edx [ ebp - 0x4 ]
push edx
push r--data
push eax
mov ecx [ eax ]
call [ ecx ]
test eax eax
js r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_417eba
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x0
jne r-xdata
cmp [ esi + 0x1e ] 0x0
mov [ esi + 0x1d ] 0x1
je r-xdata
cmp [ esi + 0x1d ] 0x0
jne r-xdata
pop esi
retn
mov ecx [ esi + 0xc ]
push 0x1
call sub_417f82
push [ esi + 0x14 ]
call sub_4175ed
sub_417ee7
push esi
mov esi ecx
mov edx [ esi + 0x1c ]
test edx edx
jne r-xdata
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
mov eax [ esi + 0x1c ]
pop esi
retn
xor eax eax
pop esi
retn
sub_417f00
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
lea edx [ ebp - 0x4 ]
push edx
push r--data
push ecx
call [ eax ]
test eax eax
js r-xdata
mov eax [ esi + 0x1c ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
push eax
mov ecx [ eax ]
call [ ecx ]
test eax eax
js r-xdata
mov eax [ ebp - 0x4 ]
push 0x1
push eax
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebp - 0x4 ]
push 0x0
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ esi + 0x1c ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
and [ esi + 0x1c ] 0x0
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_417f82
push ebp
mov ebp esp
push esi
mov esi ecx
mov edx [ esi + 0x1c ]
test edx edx
je r-xdata
pop esi
pop ebp
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edx ]
lea ecx [ ebp + 0x8 ]
push ecx
push r--data
push edx
call [ eax ]
test eax eax
js r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ esi + 0x20 ]
push eax
push [ esi + 0x18 ]
mov edx [ ecx ]
push 0x0
push esi
push 0x0
push 0xfffffffc
push ecx
call [ edx + 0x2c ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_417fcc
push ebp
mov ebp esp
push ecx
push edi
mov edi ecx
mov ecx [ edi + 0x1c ]
test ecx ecx
je r-xdata
pop edi
mov esp ebp
pop ebp
retn 0x4
mov eax [ ecx ]
lea edx [ ebp - 0x4 ]
push edx
push r--data
push ecx
call [ eax ]
test eax eax
js r-xdata
mov eax [ ebp - 0x4 ]
push ebx
xor ebx ebx
mov ecx [ eax ]
cmp [ ebp + 0x8 ] ebx
je r-xdata
push ebx
push [ edi + 0x18 ]
push ebx
push edi
push ebx
push 0xfffffffd
push eax
call [ ecx + 0x2c ]
push esi
lea esi [ edi + 0x20 ]
push esi
push [ edi + 0x18 ]
push ebx
push edi
push ebx
push 0xfffffffb
push eax
call [ ecx + 0x2c ]
mov eax [ ebp - 0x4 ]
push esi
push [ edi + 0x18 ]
mov ecx [ eax ]
push ebx
push edi
push ebx
push 0xffffffff
push eax
call [ ecx + 0x2c ]
pop esi
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop ebx
sub_41803d
push ebp
mov ebp esp
push ecx
push ecx
push ebx
lea eax [ ebp - 0x4 ]
xor ebx ebx
push eax
push r--data
push 0x1
push ebx
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
js r-xdata
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
push eax
mov ecx [ eax ]
call [ ecx ]
test eax eax
js r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ecx ]
call [ edx + 0x8 ]
cmp [ ebp + 0x8 ] bl
je r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp + 0xc ]
push eax
mov ecx [ eax ]
call [ ecx + 0x50 ]
cmp [ ebp + 0x18 ] ebx
je r-xdata
mov eax [ ebp - 0x8 ]
push 0x2
push [ ebp + 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
push ebx
mov ecx [ eax ]
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp + 0x18 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp + 0x1c ]
push r--data
jmp r-xdata
cmp [ ebp + 0x14 ] ebx
je r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp + 0x20 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x2c ]
push eax
call [ ecx + 0x44 ]
cmp [ ebp + 0x20 ] ebx
je r-xdata
mov eax [ ebp - 0x8 ]
push 0x1
push [ ebp + 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
test eax eax
js r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov bl 0x1
sub_418117
push 0x64
call sub_418136
cmp eax 0x7d
jge r-xdata
xor eax eax
inc eax
retn
push 0x64
call sub_418179
cmp eax 0x7d
jge r-xdata
xor eax eax
retn
sub_418136
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
imul eax [ esp + 0x4 ]
push 0x60
pop ecx
cdq
idiv ecx
retn 0x4
push esi
push 0x0
call [ GetDC@IAT ]
mov esi eax
test esi esi
je r-xdata
pop esi
push 0x58
push esi
call [ GetDeviceCaps@IAT ]
push esi
push 0x0
mov [ rw-data ] eax
call [ ReleaseDC@IAT ]
sub_418179
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
imul eax [ esp + 0x4 ]
push 0x60
pop ecx
cdq
idiv ecx
retn 0x4
push esi
push 0x0
call [ GetDC@IAT ]
mov esi eax
test esi esi
je r-xdata
pop esi
push 0x5a
push esi
call [ GetDeviceCaps@IAT ]
push esi
push 0x0
mov [ rw-data ] eax
call [ ReleaseDC@IAT ]
sub_4181d3
push esi
push edi
push 0x0
call [ GetDC@IAT ]
mov esi eax
push 0xc
push esi
call [ GetDeviceCaps@IAT ]
push esi
push 0x0
mov edi eax
call [ ReleaseDC@IAT ]
xor eax eax
cmp edi 0x20
pop edi
setge al
pop esi
retn
sub_4181fe
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
mov eax [ ebp + 0x14 ]
je r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ MessageBoxW@IAT ]
pop ebp
retn 0x10
or eax 0x180000
sub_418226
sub esp 0x64
call sub_4181d3
test al al
jne r-xdata
push ebx
push ebp
push edi
mov edi [ esp + 0x74 ]
lea eax [ esp + 0x2c ]
push eax
push 0x18
push edi
call [ GetObjectW@IAT ]
mov eax [ esp + 0x34 ]
mov ebp [ esp + 0x78 ]
imul eax ebp
mov ebx [ esp + 0x7c ]
cdq
idiv [ esp + 0x30 ]
cmp eax ebx
jge r-xdata
push [ esp + 0x70 ]
push [ esp + 0x70 ]
push [ esp + 0x70 ]
call sub_41841d
jmp r-xdata
push esi
lea eax [ esp + 0x10 ]
xor esi esi
push eax
push r--data
xor eax eax
inc eax
push eax
push esi
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
js r-xdata
mov ebx eax
add esp 0x64
retn 0xc
pop esi
mov eax edi
pop edi
pop ebp
pop ebx
mov eax [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
push edx
push 0x2
push esi
mov ecx [ eax ]
push edi
push eax
call [ ecx + 0x54 ]
test eax eax
mov eax [ esp + 0x10 ]
jns r-xdata
mov [ esp + 0x18 ] esi
lea edx [ esp + 0x18 ]
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0x28 ]
test eax eax
jns r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
mov eax [ esp + 0x18 ]
fldz
push esi
mov ecx [ eax ]
push ecx
push ecx
fstp [ esp ]
push esi
push esi
push r--data
push [ esp + 0x2c ]
push eax
call [ ecx + 0x20 ]
test eax eax
jns r-xdata
mov eax [ esp + 0x14 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ esp + 0x10 ]
jmp r-xdata
push 0x2c
lea eax [ esp + 0x4c ]
push esi
push eax
call sub_41d1e0
add esp 0xc
mov [ esp + 0x48 ] 0x28
mov eax ebx
mov [ esp + 0x4c ] ebp
neg eax
mov [ esp + 0x58 ] esi
mov [ esp + 0x50 ] eax
xor eax eax
push 0x20
inc eax
mov [ esp + 0x58 ] ax
pop eax
push esi
push esi
mov [ esp + 0x5e ] ax
lea eax [ esp + 0x24 ]
push eax
push esi
lea eax [ esp + 0x58 ]
push eax
push esi
call [ CreateDIBSection@IAT ]
mov ebp eax
mov ecx ebp
neg ecx
sbb ecx ecx
and ecx 0x7ff8fff2
add ecx 0x8007000e
js r-xdata
mov eax [ esp + 0x18 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov eax [ esp + 0x14 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ esp + 0x18 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ esp + 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
test esi esi
je r-xdata
mov ecx [ esp + 0x10 ]
lea edx [ esp + 0x78 ]
push edx
push ecx
mov eax [ ecx ]
call [ eax + 0x2c ]
mov eax [ esp + 0x78 ]
push 0x3
push ebx
push [ esp + 0x84 ]
mov ecx [ eax ]
push [ esp + 0x20 ]
push eax
call [ ecx + 0x20 ]
mov eax [ esp + 0x7c ]
push [ esp + 0x1c ]
mov ecx [ esp + 0x7c ]
mov [ esp + 0x2c ] eax
imul eax ebx
mov [ esp + 0x24 ] esi
mov [ esp + 0x28 ] esi
mov [ esp + 0x30 ] ebx
mov edx [ ecx ]
shl eax 0x2
push eax
mov eax [ esp + 0x84 ]
shl eax 0x2
push eax
lea eax [ esp + 0x2c ]
push eax
push ecx
call [ edx + 0x1c ]
test eax eax
js r-xdata
mov edi esi
push ebp
call [ DeleteObject@IAT ]
mov esi ebp
jmp r-xdata
mov eax [ esp + 0x78 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_41841d
sub esp 0x24
push ebx
push ebp
push esi
push edi
push 0x0
call [ GetDC@IAT ]
mov esi [ CreateCompatibleDC@IAT ]
mov ebp eax
push ebp
mov [ esp + 0x1c ] ebp
call esi
mov ebx eax
push ebp
mov [ esp + 0x18 ] ebx
call esi
mov esi eax
lea eax [ esp + 0x1c ]
push eax
push 0x18
push [ esp + 0x40 ]
mov [ esp + 0x1c ] esi
call [ GetObjectW@IAT ]
mov eax [ esp + 0x24 ]
imul eax [ esp + 0x3c ]
cdq
idiv [ esp + 0x20 ]
mov ecx eax
mov eax [ esp + 0x40 ]
cmp ecx eax
jge r-xdata
push eax
push [ esp + 0x40 ]
push ebp
call [ CreateCompatibleBitmap@IAT ]
push [ esp + 0x38 ]
mov ebp eax
push ebx
mov ebx [ SelectObject@IAT ]
call ebx
push ebp
push esi
mov edi eax
call ebx
push 0xcc0020
push [ esp + 0x28 ]
mov esi eax
xor eax eax
push [ esp + 0x28 ]
push eax
push eax
push [ esp + 0x28 ]
push [ esp + 0x58 ]
push [ esp + 0x58 ]
push eax
push eax
push [ esp + 0x38 ]
call [ StretchBlt@IAT ]
push edi
mov edi [ esp + 0x18 ]
push edi
call ebx
push esi
push [ esp + 0x14 ]
call ebx
mov esi [ DeleteDC@IAT ]
push edi
call esi
push [ esp + 0x10 ]
call esi
push [ esp + 0x18 ]
push 0x0
call [ ReleaseDC@IAT ]
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
add esp 0x24
retn 0xc
mov eax ecx
mov [ esp + 0x40 ] eax
sub_4184fb
push ebp
mov ebp esp
sub esp 0xa0
lea eax [ ebp - 0xa0 ]
push esi
mov esi [ ebp + 0x8 ]
push 0x50
push eax
push esi
call [ GetClassNameW@IAT ]
test eax eax
je r-xdata
test esi esi
je r-xdata
push edi
mov edi r--data
lea eax [ ebp - 0xa0 ]
push edi
push eax
call sub_4100df
test eax eax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0x10
push esi
call [ SHAutoComplete@IAT ]
pop edi
push 0x0
push edi
push 0x0
push esi
call [ FindWindowExW@IAT ]
mov esi eax
sub_418569
push ebp
mov ebp esp
push ecx
push ecx
push esi
push r--data
mov esi ecx
call sub_40e9b3
push 0x0
mov [ esi ] eax
call [ OleInitialize@IAT ]
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] 0x8
push eax
mov [ ebp - 0x4 ] 0x7ff
call [ InitCommonControlsEx@IAT ]
push rw-data
call [ SHGetMalloc@IAT ]
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_4185af
push ebp
mov ebp esp
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_42eb81
push eax
mov [ fs : 0x0 ] esp
mov eax [ rw-data ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
call [ OleUninitialize@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4185e6
push esi
mov esi ecx
lea ecx [ esi + 0x9444 ]
call sub_40a6f4
lea ecx [ esi + 0x93e8 ]
call sub_40a6f4
lea ecx [ esi + 0x938c ]
call sub_40a6f4
lea ecx [ esi + 0x9330 ]
call sub_40a6f4
lea ecx [ esi + 0x92d4 ]
call sub_40a6f4
mov ecx esi
pop esi
jmp sub_40a702
sub_418628
push ebx
mov ebx [ esp + 0x14 ]
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x18 ]
push 0x0
push 0x0
push r--data
push ebx
push ebp
push edi
push esi
call sub_401506
test al al
jne r-xdata
xor eax eax
inc eax
sub edi 0x110
je r-xdata
push [ ebx ]
mov [ rw-data ] ebx
sub edi 0x1
jne r-xdata
xor eax eax
jmp r-xdata
movzx eax bp
sub eax 0x1
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x10
mov eax [ rw-data ]
push [ eax + 0x4 ]
push [ eax ]
push 0x65
push esi
call [ GetDlgItemTextW@IAT ]
push 0x1
jmp r-xdata
sub eax 0x1
je r-xdata
push esi
call [ EndDialog@IAT ]
jmp r-xdata
push 0x0
sub eax 0x64
je r-xdata
mov eax [ rw-data ]
push 0x0
push [ eax ]
call sub_40b1d0
push eax
mov eax [ rw-data ]
push [ eax ]
push 0x8e
call sub_40cd14
push eax
push esi
call sub_401310
test al al
je r-xdata
mov eax [ rw-data ]
push [ eax ]
jmp r-xdata
push 0x65
push esi
call [ SetDlgItemTextW@IAT ]
sub_4186ea
mov eax [ esp + 0x4 ]
mov ecx eax
push ebp
xor ebp ebp
cmp [ eax ] bp
je r-xdata
xor eax eax
mov [ ecx ] ax
pop ebp
retn 0x4
push ebx
push esi
push 0x5c
pop ebx
mov [ ecx ] dx
add ecx 0x2
add eax 0x2
movzx esi [ eax + 0x2 ]
cmp si bx
jne r-xdata
movzx edx [ eax ]
cmp dx bx
jne r-xdata
pop esi
pop ebx
cmp esi 0x6e
jne r-xdata
mov [ ecx ] bx
push 0xa
pop edx
mov [ ecx ] dx
jmp r-xdata
cmp [ eax ] bp
jne r-xdata
add ecx 0x2
add eax 0x4
jmp r-xdata
sub_41873f
push ebp
mov ebp esp
mov eax 0x1020
call sub_41c240
push 0x800
lea eax [ ebp - 0x1020 ]
push eax
call sub_4181bc
cmp [ rw-data ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
push 0x6
push [ rw-data ]
lea eax [ ebp - 0x1020 ]
push eax
call sub_40b1d0
push eax
call sub_410101
test eax eax
jne r-xdata
push r--data
call sub_418556
lea eax [ ebp - 0x1020 ]
push eax
call sub_4216b5
xor ecx ecx
push 0x1e
push ecx
mov [ ebp + eax * 2 - 0x101e ] cx
lea eax [ ebp - 0x20 ]
push eax
call sub_41d1e0
add esp 0x10
mov [ ebp - 0x1c ] 0x3
push 0x14
pop eax
mov [ ebp - 0x10 ] ax
lea eax [ ebp - 0x1020 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x20 ]
push eax
call [ SHFileOperationW@IAT ]
sub_4187ec
push ebp
mov ebp esp
mov eax 0x2800
call sub_41c240
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
inc [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
lea ecx [ ebp + 0xc ]
push ecx
push eax
lea eax [ ebp - 0x2800 ]
push eax
call [ wvsprintfW@IAT ]
lea eax [ ebp - 0x2800 ]
push eax
push 0x1
call sub_41ab1f
sub_418830
push ebp
mov ebp esp
sub esp 0x12c
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
mov ebx 0x400
jne r-xdata
push 0x32
lea eax [ ebp - 0x64 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e767
mov edi [ ebp + 0x10 ]
xor eax eax
mov esi [ ebp + 0x14 ]
push esi
push edi
push rw-data
mov [ edi ] ax
lea eax [ ebp - 0x64 ]
push eax
push 0x0
push ebx
call [ GetNumberFormatW@IAT ]
xor eax eax
mov [ edi + esi * 2 - 0x2 ] ax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push 0x64
lea eax [ ebp - 0x12c ]
push eax
push 0xf
push ebx
call [ GetLocaleInfoW@IAT ]
mov ax [ ebp - 0x12c ]
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] ax
mov [ rw-data ] rw-data
sub_4188bb
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
test esi esi
je r-xdata
mov eax [ esp + 0x18 ]
xor ecx ecx
mov [ eax ] cx
xor eax eax
movzx eax [ esi ]
test ax ax
je r-xdata
mov edi [ esp + 0x18 ]
mov ebp esi
push 0x22
pop edx
push 0x2c
xor cl cl
pop ebx
movzx eax [ esi ]
cmp ax bx
jne r-xdata
lea eax [ esi + 0x2 ]
cmp [ eax ] dx
jne r-xdata
mov [ edi ] ax
test cl cl
je r-xdata
mov bl cl
test cl cl
je r-xdata
test cl cl
jne r-xdata
xor eax eax
mov [ edi ] ax
jmp r-xdata
push 0x22
pop edx
jmp r-xdata
xor eax eax
mov [ edi ] ax
push edx
push eax
call sub_41f472
pop ecx
test eax eax
pop ecx
setne cl
xor cl cl
jmp r-xdata
mov esi eax
mov [ edi ] dx
jmp r-xdata
cmp esi ebp
jne r-xdata
mov eax esi
jmp r-xdata
cmp ax dx
jne r-xdata
add esi 0x2
movzx ecx [ esi ]
push ecx
call sub_40e733
test al al
jne r-xdata
add esi 0x2
movzx eax [ esi ]
test ax ax
je r-xdata
push 0x2c
cmp bl cl
pop ebx
jne r-xdata
add edi 0x2
movzx edx [ esi + 0x4 ]
push 0x22
cmp dx bx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
pop edx
test dx dx
pop edx
je r-xdata
sub_418986
mov eax sub_42ef46
call sub_41c16c
push ecx
mov eax 0x7d48
call sub_41c240
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] esp
push ebx
lea ecx [ ebp - 0x7d58 ]
mov [ ebp - 0x4 ] ebx
call sub_401590
push [ ebp + 0xc ]
lea ecx [ ebp - 0x7d58 ]
mov [ ebp - 0x4 ] 0x1
call sub_401eea
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x2
push eax
lea ecx [ ebp - 0x7d58 ]
call sub_4019a1
test al al
je r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov esi [ ebp - 0x1c ]
lea edi [ esi + esi ]
lea eax [ edi + 0x2 ]
push eax
call sub_422c59
pop ecx
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
test eax eax
jne r-xdata
lea ecx [ ebp - 0x7d58 ]
call sub_401774
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x10
push [ ebp - 0x20 ]
call j_sub_4251ac#3
pop ecx
xor ecx ecx
push edi
mov [ edi + eax ] cx
push [ ebp - 0x20 ]
push eax
call sub_41ee90
add esp 0xc
mov esi ebx
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] esi
sub_418a7c
push ebp
mov ebp esp
mov eax 0x200c
call sub_41c240
cmp [ rw-data ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x200c ]
push eax
push [ ebp + 0x8 ]
call sub_419e17
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push 0x0
push r--data
push 0x80000001
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0x1000
push eax
lea eax [ ebp - 0x100c ]
push eax
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea eax [ ebp - 0x200c ]
push eax
push [ ebp - 0x8 ]
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
mov eax [ ebp - 0x4 ]
mov ecx 0x7ff
shr eax 0x1
mov [ ebp - 0x4 ] eax
cmp eax ecx
jb r-xdata
push [ ebp + 0xc ]
xor ecx ecx
mov [ ebp + eax * 2 - 0x100c ] cx
lea eax [ ebp - 0x100c ]
push eax
push [ ebp + 0x8 ]
call sub_40e847
mov eax ecx
sub_418b2b
push ebp
mov ebp esp
sub esp 0x100
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
push 0x0
push 0x0
push r--data
push [ ebp + 0x14 ]
push ebx
push esi
push edi
call sub_401506
test al al
jne r-xdata
xor eax eax
inc eax
sub esi 0x110
je r-xdata
push [ ebp + 0x14 ]
push 0x66
push edi
call [ SetDlgItemTextW@IAT ]
sub esi 0x1
jne r-xdata
xor eax eax
jmp r-xdata
movzx eax bx
sub eax 0x1
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov esi 0x80
lea eax [ ebp - 0x100 ]
push esi
push eax
push 0x65
push edi
call [ GetDlgItemTextW@IAT ]
lea eax [ ebp - 0x100 ]
mov ecx rw-data
push eax
call sub_40dbc1
push esi
lea eax [ ebp - 0x100 ]
push eax
call sub_40dc0c
push 0x1
jmp r-xdata
sub eax 0x1
je r-xdata
push edi
call [ EndDialog@IAT ]
jmp r-xdata
push 0x0
sub_418bd1
mov eax 0x2004
call sub_41c240
mov ecx [ esp + 0x2014 ]
push ebx
xor ebx ebx
push esi
test ecx ecx
je r-xdata
mov edx [ esp + 0x2020 ]
test edx edx
je r-xdata
mov [ ecx ] bl
mov esi [ esp + 0x2010 ]
test esi esi
je r-xdata
mov [ edx ] bl
xor eax eax
movzx eax [ esi ]
test ax ax
je r-xdata
push ebp
mov ebp [ esp + 0x2018 ]
push edi
mov edi [ esp + 0x2020 ]
mov [ esp + 0x10 ] ebx
cmp eax 0xd
je r-xdata
test edi edi
je r-xdata
add esi 0x2
cmp eax 0xa
je r-xdata
mov [ ebp ] ax
add ebp 0x2
mov eax [ esp + 0x202c ]
add eax 0xfffffffe
cmp [ esp + 0x10 ] eax
jge r-xdata
test ebx ebx
jne r-xdata
pop edi
mov eax esi
pop ebp
jmp r-xdata
mov [ edi ] ax
test ebx ebx
je r-xdata
xor eax eax
mov [ ebp ] ax
test edi edi
je r-xdata
mov [ edx ] 0x1
jmp r-xdata
movzx eax [ esi ]
inc [ esp + 0x10 ]
test ax ax
jne r-xdata
test ecx ecx
je r-xdata
pop esi
pop ebx
add esp 0x2004
retn 0x18
push 0x1000
lea eax [ esp + 0x18 ]
push eax
push ebx
call [ ExpandEnvironmentStringsW@IAT ]
push [ esp + 0x202c ]
lea eax [ esp + 0x18 ]
push eax
push edi
call sub_40e847
xor eax eax
mov [ ebx ] ax
movzx eax ax
add esi 0x2
cmp eax 0x3d
jne r-xdata
jmp r-xdata
mov ebx ebp
jmp r-xdata
mov [ ecx ] 0x1
sub_418cc9
push ebp
mov ebp esp
push ecx
push ecx
push ebx
lea eax [ ebp - 0x8 ]
push eax
call [ SHGetMalloc@IAT ]
lea eax [ ebp - 0x4 ]
push eax
xor eax eax
push eax
push eax
push [ ebp + 0xc ]
push eax
call [ SHGetFolderLocation@IAT ]
mov ebx eax
neg ebx
sbb bl bl
add bl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ eax ] cx
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call [ SHGetPathFromIDListW@IAT ]
push [ ebp - 0x4 ]
dec eax
neg eax
sbb al al
lea ebx [ eax + 0x1 ]
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
jmp r-xdata
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_418d29
mov eax 0x2004
call sub_41c240
push ebx
push ebp
push esi
push edi
push 0x80000
call sub_422c59
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov ebx [ esp + 0x2018 ]
xor eax eax
xor ebp ebp
mov [ esi ] ax
mov edi ebp
jmp r-xdata
mov ecx rw-data
call sub_406a1c
push 0x1000
lea eax [ esp + 0x17 ]
push eax
push ebp
push ebp
lea eax [ esp + 0x24 ]
push eax
push [ ebx ]
call sub_418bd1
mov [ ebx ] eax
test eax eax
jne r-xdata
cmp [ esi ] bp
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
add esp 0x2004
retn 0x4
cmp [ esp + 0x14 ] 0x7d
je r-xdata
cmp [ esp + 0x14 ] 0x7b
je r-xdata
lea eax [ esp + 0x14 ]
push eax
call sub_4216b5
add eax edi
pop ecx
cmp eax 0x3fffb
ja r-xdata
lea eax [ esp + 0x14 ]
push eax
push esi
call sub_422c19
push esi
call sub_4216b5
mov edi eax
add esp 0xc
test edi edi
je r-xdata
cmp [ esp + 0x13 ] 0x0
jne r-xdata
lea eax [ edi - 0x1 ]
lea eax [ esi + eax * 2 ]
lea eax [ esi + edi * 2 ]
push r--data
push eax
call sub_421693
pop ecx
pop ecx
sub eax 0x2
sub edi 0x1
jne r-xdata
cmp [ eax ] 0x20
jne r-xdata
sub_418e03
push ebp
mov ebp esp
sub esp 0x1c
lea eax [ ebp - 0x1c ]
push esi
xor esi esi
push esi
push esi
push esi
push esi
push eax
call [ PeekMessageW@IAT ]
test eax eax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
push esi
push esi
push esi
lea eax [ ebp - 0x1c ]
push eax
call [ GetMessageW@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageW@IAT ]
sub_418e44
push ebx
mov ebx [ esp + 0x10 ]
push ebp
push esi
mov esi [ esp + 0x10 ]
xor ebp ebp
push edi
mov edi [ esp + 0x18 ]
push ebp
push ebp
push r--data
push [ esp + 0x2c ]
push ebx
push edi
push esi
call sub_401506
test al al
jne r-xdata
xor eax eax
inc eax
sub edi 0x110
je r-xdata
mov eax [ rw-data ]
mov edi [ SendMessageW@IAT ]
test eax eax
je r-xdata
sub edi 0x1
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
push 0x1
push 0x80
push esi
call edi
xor eax eax
jmp r-xdata
movzx eax bx
sub eax 0x1
je r-xdata
push esi
call sub_41acc3
push 0x65
push esi
call [ GetDlgItem@IAT ]
push 0x10000
push ebp
mov ebx eax
push 0x435
push ebx
call edi
push 0xf
call [ GetSysColor@IAT ]
push eax
push ebp
push 0x443
push ebx
call edi
push 0x3
push [ rw-data ]
push esi
call sub_419e5a
cmp [ rw-data ] ebp
je r-xdata
push eax
push ebp
push 0x172
push 0x66
push esi
call [ SendDlgItemMessageW@IAT ]
pop edi
pop esi
pop ebp
pop ebx
retn 0x10
push 0x1
sub eax 0x1
je r-xdata
push esi
call [ SetForegroundWindow@IAT ]
mov ecx [ rw-data ]
push ebp
push ebp
push [ rw-data ]
push ebx
push [ rw-data ]
call sub_417cb5
push [ rw-data ]
call j_sub_4251ac#3
pop ecx
jmp r-xdata
push ebp
jmp r-xdata
push esi
call [ EndDialog@IAT ]
sub_418f58
cmp [ rw-data ] 0x0
jne r-xdata
retn
mov eax [ esp + 0x8 ]
push edi
xor edi edi
cmp [ eax ] di
je r-xdata
pop edi
push esi
call [ GetLastError@IAT ]
mov esi eax
lea eax [ esp + 0x14 ]
push eax
push edi
push [ esp + 0x18 ]
mov edi rw-data
push 0x1000
push edi
call sub_403cb5
push edi
push r--data
call sub_4187ec
add esp 0x1c
test esi esi
je r-xdata
pop esi
push esi
call [ SetLastError@IAT ]
sub_418fac
mov eax sub_42ef5b
call sub_41c16c
mov eax 0x9c94
call sub_41c240
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
push 0x0
push 0x0
push r--data
push [ ebp + 0x14 ]
push ebx
push esi
push edi
call sub_401506
test al al
je r-xdata
sub esi 0x110
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ rw-data ]
xor ebx ebx
inc ebx
mov [ rw-data ] edi
mov [ rw-data ] edi
test eax eax
je r-xdata
sub esi 0x1
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x10
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
push ebx
push 0x80
push edi
call [ SendMessageW@IAT ]
xor eax eax
jmp r-xdata
movzx eax bx
sub eax 0x1
je r-xdata
push edi
call sub_41acc3
mov esi [ GetDlgItem@IAT ]
push 0x68
push edi
call esi
push __pe_sfxrar_export_address_table
push 0x0
push 0x435
push eax
mov [ ebp + 0x14 ] eax
call [ SendMessageW@IAT ]
push 0x800
lea eax [ ebp - 0x1164 ]
push eax
call sub_4181bc
push 0x66
push edi
call esi
cmp [ rw-data ] 0x0
mov esi eax
mov [ ebp + 0x10 ] esi
mov ecx rw-data
jne r-xdata
push eax
push 0x0
push 0x172
push 0x6c
push edi
call [ SendDlgItemMessageW@IAT ]
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x1
je r-xdata
push ecx
push esi
call [ SetWindowTextW@IAT ]
push esi
call sub_4184fb
push rw-data
push rw-data
push rw-data
push edi
mov [ rw-data ] 0x0
call sub_418986
cmp [ rw-data ] 0x0
jbe r-xdata
lea ecx [ ebp - 0x1164 ]
mov esi 0x800
lea eax [ ebp - 0x2164 ]
push esi
push eax
push 0x66
push edi
call [ GetDlgItemTextW@IAT ]
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
sete al
xor ecx ecx
test al al
mov [ rw-data ] al
setne cl
add ecx 0xe6
push ecx
call sub_40cd14
xor ebx ebx
push eax
inc ebx
push ebx
push edi
call [ SetDlgItemTextW@IAT ]
jmp r-xdata
xor ebx ebx
inc ebx
cmp [ rw-data ] 0x0
mov [ rw-data ] bl
je r-xdata
sub eax 0x65
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x7
push [ rw-data ]
push edi
call sub_419e5a
cmp [ rw-data ] 0x0
je r-xdata
xor ebx ebx
inc ebx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x1164 ]
push eax
push 0x64
call sub_40cd14
push eax
push edi
call sub_401446
test al al
je r-xdata
cmp [ rw-data ] 0x0
jbe r-xdata
push 0xbf
call sub_40cd14
push eax
push 0x6b
push edi
call [ SetDlgItemTextW@IAT ]
push 0xbe
call sub_40cd14
push eax
push ebx
push edi
call [ SetDlgItemTextW@IAT ]
push 0x68
push edi
call [ GetDlgItem@IAT ]
cmp [ rw-data ] 0x0
mov ebx eax
jne r-xdata
xor ebx ebx
inc ebx
mov al bl
mov [ rw-data ] al
jmp r-xdata
push ebx
jmp r-xdata
mov [ rw-data ] bl
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
mov eax ebx
lea eax [ ebp - 0x1164 ]
push eax
push 0x66
push edi
call [ SetDlgItemTextW@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ rw-data ]
push edi
call sub_419e5a
mov eax [ rw-data ]
test eax eax
je r-xdata
push ebx
call [ SetFocus@IAT ]
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ SendMessageW@IAT ]
push 0xffffffff
push 0x0
push 0xb1
push ebx
call esi
push r--data
push 0x0
push 0xc2
push ebx
call esi
mov esi 0x800
cmp [ rw-data ] 0x0
jle r-xdata
push edi
call [ EndDialog@IAT ]
jmp r-xdata
xor eax eax
push eax
push eax
push eax
lea eax [ ebp - 0x64 ]
push eax
call [ GetMessageW@IAT ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x2164 ]
push eax
lea eax [ ebp - 0x1164 ]
push eax
call sub_40e847
push esi
lea eax [ ebp - 0x1164 ]
push eax
call sub_41aa9e
lea eax [ ebp - 0x1164 ]
push eax
push 0xb9
call sub_40cd14
push eax
lea eax [ ebp - 0x4288 ]
push 0x880
push eax
call sub_403ce2
add esp 0x10
lea eax [ ebp - 0x4288 ]
push 0xba
call sub_40cd14
jmp r-xdata
test al al
jne r-xdata
lea eax [ ebp - 0x64 ]
push eax
push edi
call [ IsDialogMessageW@IAT ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
push esi
call [ EnableWindow@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push ebx
push [ rw-data ]
push edi
call sub_419e5a
push edi
call [ SetForegroundWindow@IAT ]
cmp [ rw-data ] ebx
je r-xdata
mov ecx [ rw-data ]
push 0x0
push 0x0
push eax
push [ ebp + 0x14 ]
push [ rw-data ]
call sub_417cb5
push [ rw-data ]
call j_sub_4251ac#3
pop ecx
push 0x0
lea eax [ ebp - 0x2164 ]
xor cl cl
push eax
mov [ ebp + 0x17 ] cl
call sub_4096ef
mov esi [ GetLastError@IAT ]
xor ebx ebx
inc ebx
test al al
jne r-xdata
lea eax [ ebp - 0x2164 ]
push eax
call sub_41b147
push eax
push 0x0
call sub_41ab1f
cmp [ rw-data ] 0x0
jne r-xdata
push 0x90
mov [ rw-data ] bl
call sub_40cd14
push eax
push ebx
push edi
call [ SetDlgItemTextW@IAT ]
mov ecx [ rw-data ]
cmp ecx 0x9
jne r-xdata
lea eax [ ebp - 0x64 ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x64 ]
push eax
call [ DispatchMessageW@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
push 0x67
push edi
call sub_4014c3
push 0x0
push 0x66
push edi
call sub_4014c3
xor eax eax
mov esi 0xaa
mov [ ebp - 0x9688 ] ax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x2164 ]
push eax
call sub_418556
mov dl al
mov [ ebp + 0x13 ] dl
test dl dl
jne r-xdata
call esi
cmp eax 0x5
je r-xdata
xor eax eax
cmp ecx 0x3
setne al
dec eax
and eax 0xa
add eax 0x97
mov [ ebp + 0x14 ] eax
mov esi eax
mov esi 0xa0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp esi 0xab
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
push sub_418e44
push 0x0
push r--data
push [ rw-data ]
call [ DialogBoxParamW@IAT ]
test eax eax
je r-xdata
mov al [ ebp + 0x17 ]
call esi
mov dl [ ebp + 0x13 ]
cmp eax 0x5
jne r-xdata
mov cl bl
mov [ ebp + 0x17 ] cl
cmp eax 0x3
jne r-xdata
push 0x30
push 0x96
call sub_40cd14
push eax
push esi
call sub_40cd14
push eax
push edi
call sub_4181fe
jmp r-xdata
push 0x90
call sub_40cd14
push eax
push ebx
push edi
call [ SetDlgItemTextW@IAT ]
push 0x0
push ebx
push 0x111
push edi
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x9688 ]
push r--data
push eax
call sub_422c19
pop ecx
pop ecx
push esi
call sub_40cd14
push eax
lea eax [ ebp - 0x9688 ]
push eax
call sub_422c19
pop ecx
pop ecx
cmp [ rw-data ] 0x0
jne r-xdata
inc esi
cmp esi 0xb0
jle r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
test dl dl
je r-xdata
mov al bl
mov [ ebp + 0x17 ] al
jmp r-xdata
call [ PostMessageW@IAT ]
call [ SendMessageW@IAT ]
jmp r-xdata
cmp esi 0xaa
jne r-xdata
mov ecx [ rw-data ]
lea eax [ ebp - 0x9688 ]
push 0x0
push 0x0
push eax
push [ ebp + 0x14 ]
push [ rw-data ]
call sub_417cb5
mov esi [ ebp + 0x10 ]
push 0x0
push 0x67
push edi
mov [ rw-data ] ebx
call sub_4014e1
push 0x0
push 0x66
push edi
call sub_4014e1
push 0xe6
call sub_40cd14
mov esi [ SetDlgItemTextW@IAT ]
push eax
push ebx
push edi
call esi
push ebx
push 0x69
push edi
call sub_4014e1
push r--data
push 0x65
push edi
call esi
push 0x65
push edi
call [ GetDlgItem@IAT ]
mov esi eax
test esi esi
je r-xdata
test cl cl
setne al
dec al
and al [ ebp + 0x17 ]
test al al
sete al
mov [ ebp + 0x17 ] al
test al al
jne r-xdata
call [ GetTickCount@IAT ]
push eax
push r--data
lea eax [ ebp - 0x1164 ]
push 0x800
push eax
call sub_403ce2
add esp 0x10
lea ecx [ ebp - 0x3188 ]
call sub_408e1d
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x1164 ]
push 0x11
push eax
lea ecx [ ebp - 0x3188 ]
call sub_408f0d
mov [ ebp + 0x13 ] al
test al al
jne r-xdata
mov cl [ rw-data ]
test cl cl
jne r-xdata
push 0x5
push [ rw-data ]
push edi
call sub_419e5a
push 0x2
push [ rw-data ]
push edi
call sub_419e5a
push rw-data
push edi
mov [ rw-data ] bl
call sub_41b04a
push 0x6
push [ rw-data ]
mov [ rw-data ] 0x0
push edi
call sub_419e5a
cmp [ rw-data ] 0x0
jne r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongW@IAT ]
or eax 0x80
push eax
push 0xfffffff0
push esi
call [ SetWindowLongW@IAT ]
push 0x9a
call sub_40cd14
push eax
lea eax [ ebp - 0x2164 ]
push eax
push r--data
lea eax [ ebp - 0x5688 ]
push 0xa00
push eax
call sub_403ce2
add esp 0x14
mov ecx rw-data
push ebx
call sub_406acc
push 0x30
push 0x96
call sub_40cd14
push eax
lea eax [ ebp - 0x5688 ]
push eax
push edi
call sub_4181fe
inc [ rw-data ]
jmp r-xdata
push 0x800
lea eax [ ebp - 0x1164 ]
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
push 0x80
lea eax [ ebp - 0x164 ]
mov ecx rw-data
push eax
call sub_40da58
push rw-data
lea eax [ ebp - 0x164 ]
push eax
lea eax [ ebp - 0x2164 ]
push eax
push r--data
lea eax [ ebp - 0x9ca0 ]
push 0x230c
push eax
call sub_403ce2
add esp 0x18
mov [ ebp - 0x48 ] 0x3c
lea eax [ ebp - 0x1164 ]
mov [ ebp - 0x44 ] 0x40
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x9ca0 ]
mov [ ebp - 0x34 ] eax
xor eax eax
push r--data
push 0x7002
push eax
push 0x8000004
push eax
push 0xffffffff
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x3c ] r--data
mov [ ebp - 0x30 ] r--data
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
call [ CreateFileMappingW@IAT ]
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x3188 ]
call sub_408e53
mov cl [ rw-data ]
call esi
cmp eax 0x5
jne r-xdata
push ebx
push ebx
push edi
call sub_4014c3
and [ rw-data ] 0x0
mov al [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp + 0x10 ] eax
mov [ rw-data ] 0x0
call [ GetCommandLineW@IAT ]
test eax eax
je r-xdata
mov [ ebp + 0x17 ] bl
cmp [ rw-data ] 0x0
jne r-xdata
mov esi [ ebp + 0x10 ]
mov [ ebp + 0x17 ] bl
push 0x2710
push [ ebp - 0x10 ]
call [ WaitForInputIdle@IAT ]
and [ ebp + 0xc ] 0x0
mov esi [ ebp + 0x10 ]
push 0x7
push rw-data
call sub_418cc9
push 0x2
push rw-data
call sub_418cc9
push 0x10
push rw-data
call sub_418cc9
xor eax eax
push eax
push eax
push eax
push 0x2
push esi
call [ MapViewOfFile@IAT ]
push 0x7002
push rw-data
push eax
mov [ ebp + 0x10 ] eax
call sub_41ee90
add esp 0xc
jmp r-xdata
push 0x2000
push eax
push rw-data
call sub_40e847
push 0x4
push [ rw-data ]
push edi
call sub_419e5a
cmp [ ebp + 0x17 ] 0x0
je r-xdata
push esi
call [ UnmapViewOfFile@IAT ]
push [ ebp + 0x8 ]
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
jmp r-xdata
push 0x64
call [ Sleep@IAT ]
mov eax [ ebp + 0xc ]
inc eax
mov [ ebp + 0xc ] eax
cmp eax 0x64
jl r-xdata
lea eax [ ebp - 0x48 ]
push eax
call [ ShellExecuteExW@IAT ]
mov esi eax
lea eax [ ebp - 0x164 ]
push 0x80
push eax
call sub_40dc0c
push 0x230c
lea eax [ ebp - 0x9ca0 ]
push eax
call sub_40dc0c
test esi esi
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
sub_41994e
mov eax 0x1a50
call sub_41c240
push ebx
mov ebx [ esp + 0x1a60 ]
push ebp
push esi
mov esi [ esp + 0x1a64 ]
xor ebp ebp
push edi
mov edi [ esp + 0x1a64 ]
push ebp
push ebp
push r--data
push [ esp + 0x1a7c ]
push ebx
push esi
push edi
call sub_401506
test al al
je r-xdata
sub esi 0x110
je r-xdata
xor eax eax
inc eax
jmp r-xdata
push 0x6c
push edi
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
mov esi 0x800
lea eax [ esp + 0xa60 ]
push esi
push [ esp + 0x1a74 ]
push eax
call sub_40e847
push esi
lea eax [ esp + 0xa64 ]
push eax
push eax
call sub_40b29f
mov ebx [ SetDlgItemTextW@IAT ]
lea eax [ esp + 0xa60 ]
push eax
push 0x65
push edi
call ebx
push 0x100
push 0x2b4
lea eax [ esp + 0x7b4 ]
push eax
push ebp
lea eax [ esp + 0xa70 ]
push eax
call [ SHGetFileInfoW@IAT ]
push ebp
push [ esp + 0x7b0 ]
push 0x170
push 0x66
push edi
call [ SendDlgItemMessageW@IAT ]
lea eax [ esp + 0x15c ]
push eax
lea eax [ esp + 0xa64 ]
push eax
call [ FindFirstFileW@IAT ]
mov ebp eax
cmp ebp 0xffffffff
je r-xdata
sub esi 0x1
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1a50
retn 0x10
xor eax eax
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x174 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x14 ]
push eax
call [ FileTimeToSystemTime@IAT ]
push 0x32
lea eax [ esp + 0x34 ]
push eax
push 0x0
lea eax [ esp + 0x24 ]
push eax
push 0x2
pop esi
push esi
push 0x400
call [ GetTimeFormatW@IAT ]
push 0x32
lea eax [ esp + 0x98 ]
push eax
push 0x0
lea eax [ esp + 0x24 ]
push eax
push 0x0
push 0x400
call [ GetDateFormatW@IAT ]
lea eax [ esp + 0x30 ]
push eax
lea eax [ esp + 0x98 ]
push eax
push 0x99
call sub_40cd14
push eax
push r--data
lea eax [ esp + 0x3bc ]
push 0x200
push eax
call sub_403ce2
add esp 0x18
lea eax [ esp + 0x3ac ]
push eax
push 0x6a
push edi
call ebx
push ebp
call [ FindClose@IAT ]
test [ esp + 0x15c ] 0x10
jne r-xdata
push 0x2
movzx eax bx
pop esi
sub eax esi
je r-xdata
xor ebp ebp
push 0x32
lea eax [ esp + 0xfc ]
xor ecx ecx
add ecx [ esp + 0x180 ]
push eax
mov eax [ esp + 0x180 ]
push 0x0
pop ebp
adc eax ebp
push eax
push ecx
call sub_418830
push 0x98
call sub_40cd14
push eax
lea eax [ esp + 0xfc ]
push eax
push r--data
lea eax [ esp + 0x3b8 ]
push 0x200
push eax
call sub_403ce2
add esp 0x14
lea eax [ esp + 0x3ac ]
push eax
push 0x68
push edi
call ebx
jmp r-xdata
push 0x6
sub eax 0x6a
je r-xdata
push 0x32
lea eax [ esp + 0xfc ]
push eax
push ecx
push edx
call sub_418830
push 0x98
call sub_40cd14
push eax
lea eax [ esp + 0xfc ]
push eax
push r--data
lea eax [ esp + 0x3b8 ]
push ebp
push eax
call sub_403ce2
add esp 0x14
lea eax [ esp + 0x3ac ]
push eax
push 0x69
push edi
call ebx
mov eax edx
or eax ecx
je r-xdata
push ebp
push [ esp + 0x7b0 ]
push 0x170
push 0x67
push edi
call [ SendDlgItemMessageW@IAT ]
mov ecx [ rw-data ]
lea eax [ esp + 0x28 ]
push eax
call sub_40f65a
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x2c ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x14 ]
push eax
call [ FileTimeToSystemTime@IAT ]
push 0x32
lea eax [ esp + 0x34 ]
push eax
push ebp
lea eax [ esp + 0x24 ]
push eax
push esi
mov esi 0x400
push esi
call [ GetTimeFormatW@IAT ]
push 0x32
lea eax [ esp + 0x98 ]
push eax
push ebp
lea eax [ esp + 0x24 ]
push eax
push ebp
push esi
call [ GetDateFormatW@IAT ]
lea eax [ esp + 0x30 ]
push eax
lea eax [ esp + 0x98 ]
push eax
push 0x99
call sub_40cd14
push eax
push r--data
mov ebp 0x200
lea eax [ esp + 0x3bc ]
push ebp
push eax
call sub_403ce2
add esp 0x18
lea eax [ esp + 0x3ac ]
push eax
push 0x6b
push edi
call ebx
test [ esp + 0x15c ] 0x10
mov ecx [ rw-data ]
mov edx [ rw-data ]
je r-xdata
push esi
push edi
call [ EndDialog@IAT ]
jmp r-xdata
push eax
call [ DestroyIcon@IAT ]
mov esi ebp
jmp r-xdata
sub eax 0x1
je r-xdata
push ebp
push ebp
push 0x171
push 0x66
push edi
call [ SendDlgItemMessageW@IAT ]
test eax eax
je r-xdata
xor esi esi
inc esi
jmp r-xdata
sub eax 0x1
je r-xdata
push 0x4
jmp r-xdata
sub eax 0x1
je r-xdata
pop esi
sub eax 0x1
je r-xdata
push 0x3
jmp r-xdata
sub eax 0x1
jne r-xdata
sub_419ceb
mov eax 0x2000
call sub_41c240
push esi
push edi
push 0x1000
lea eax [ esp + 0xc ]
xor esi esi
push eax
push [ esp + 0x2014 ]
call sub_40e63c
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
add esp 0x2000
retn 0x4
push ebp
mov ebp 0x800
push 0x1000
lea eax [ esp + 0x10 ]
push eax
push edi
call sub_40e63c
mov edi eax
test edi edi
jne r-xdata
cmp [ esp + 0xc ] 0x2f
je r-xdata
inc esi
cmp esi 0x1
je r-xdata
pop ebp
movzx eax [ esp + 0xe ]
push eax
call CharUpperW
sub eax 0x44
je r-xdata
cmp [ esp + 0xc ] 0x2d
jne r-xdata
push ebp
lea eax [ esp + 0x14 ]
push eax
push rw-data
sub eax 0x1
je r-xdata
movzx eax [ esp + 0x10 ]
push eax
call CharUpperW
cmp eax 0x4c
jne r-xdata
sub eax 0xb
je r-xdata
cmp [ esp + 0x12 ] 0x0
jne r-xdata
lea eax [ esp + 0x10 ]
mov ecx rw-data
push eax
call sub_40dbc1
jmp r-xdata
sub eax 0x3
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
movzx eax [ esp + 0x10 ]
push eax
call CharUpperW
sub eax 0x0
je r-xdata
mov [ rw-data ] 0x1
sub eax 0x31
je r-xdata
sub eax 0x1
je r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
sub eax 0x1e
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push ebp
lea eax [ esp + 0x16 ]
push eax
push rw-data
jmp r-xdata
call sub_40e847
sub_419e17
push esi
mov esi [ esp + 0xc ]
push edi
push [ esp + 0xc ]
push esi
call sub_421693
pop ecx
xor edi edi
pop ecx
mov ecx edi
cmp [ esi ] di
je r-xdata
pop edi
pop esi
retn 0x8
mov eax esi
push 0x25
pop edx
mov [ eax ] dx
cmp edx 0x5c
je r-xdata
movzx edx [ eax ]
cmp edx 0x3a
je r-xdata
cmp edx 0x2f
jne r-xdata
inc ecx
lea eax [ esi + ecx * 2 ]
cmp [ eax ] di
jne r-xdata
sub_419e5a
mov eax sub_42ef70
call sub_41c16c
mov eax 0x1bc80
call sub_41c240
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
push 0x1000
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0xd ]
push eax
lea eax [ ebp - 0x5c84 ]
push eax
lea eax [ ebp - 0xfc8c ]
push eax
push [ ebp + 0xc ]
call sub_418bd1
mov ecx eax
mov [ ebp + 0xc ] ecx
test ecx ecx
je r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
push esi
push eax
call sub_4188bb
add esi 0x2000
sub edi 0x1
jne r-xdata
mov esi edi
cmp esi 0xd
ja r-xdata
inc esi
cmp esi 0xe
jb r-xdata
push 0x1000
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0xd ]
push eax
lea eax [ ebp - 0x5c84 ]
push eax
lea eax [ ebp - 0xfc8c ]
push eax
push [ ebp + 0xc ]
call sub_418bd1
mov ebx [ ebp + 0x10 ]
mov [ ebp + 0xc ] eax
test eax eax
jne r-xdata
jmp [ esi * 4 + jump_table_41aa66 ]
push [ esi * 4 + rw-data ]
lea eax [ ebp - 0xfc8c ]
push eax
call sub_4100df
test eax eax
je r-xdata
jmp r-xdata
push 0x6
lea eax [ ebp - 0x5c84 ]
lea esi [ ebp - 0x1bc8c ]
pop edi
pop edi
pop esi
pop ebx
cmp ebx 0x2
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
cmp [ rw-data ] 0x1
je r-xdata
movzx eax [ ebp - 0x5c84 ]
xor ecx ecx
sub eax ecx
je r-xdata
movzx eax [ ebp - 0x5c84 ]
push eax
call sub_4230a4
pop ecx
cmp eax 0x46
je r-xdata
cmp ebx 0x4
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp ebx 0x1
jne r-xdata
cmp ebx 0x3
jne r-xdata
cmp ebx 0x5
jne r-xdata
cmp ebx 0x6
jne r-xdata
cmp ebx 0x7
jne r-xdata
mov esi 0x800
lea eax [ ebp - 0x7c84 ]
push esi
push eax
call sub_4181bc
push esi
lea eax [ ebp - 0xdc8c ]
push eax
lea eax [ ebp - 0x5c84 ]
push eax
lea eax [ ebp - 0x7c84 ]
push eax
call sub_40af10
lea ecx [ ebp - 0x8c8c ]
call sub_409b3d
lea eax [ ebp - 0xdc8c ]
mov [ ebp - 0x4 ] edi
push eax
lea ecx [ ebp - 0x8c8c ]
call sub_409c77
lea ecx [ ebp - 0x3c84 ]
call sub_406ba0
push edi
lea eax [ ebp - 0x3c84 ]
push eax
lea ecx [ ebp - 0x8c8c ]
call sub_409bca
test al al
je r-xdata
mov eax [ rw-data ]
test eax eax
sete bl
test bl bl
jne r-xdata
lea eax [ ebp - 0x5c84 ]
push eax
push [ ebp + 0x8 ]
call [ SetWindowTextW@IAT ]
jmp r-xdata
cmp [ rw-data ] di
jne r-xdata
movzx eax [ ebp - 0x5c84 ]
push eax
call sub_40e721
test al al
je r-xdata
mov [ rw-data ] cl
mov [ rw-data ] 0x1
jmp r-xdata
sub eax 0x30
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp eax 0x55
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
lea eax [ ebp - 0x5c84 ]
push r--data
push eax
call sub_4216e0
pop ecx
pop ecx
test eax eax
je r-xdata
cmp ebx 0x7
jne r-xdata
lea eax [ ebp - 0x7c84 ]
mov edi 0x800
push eax
push edi
call [ GetTempPathW@IAT ]
push edi
lea eax [ ebp - 0x7c84 ]
push eax
call sub_40a7a3
xor eax eax
push eax
push [ rw-data ]
mov esi eax
lea eax [ ebp - 0x7c84 ]
push eax
push r--data
lea eax [ ebp - 0x103c ]
push edi
push eax
call sub_403ce2
mov edi [ GetFileAttributesW@IAT ]
jmp r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x5c84 ] di
je r-xdata
push 0x1
jmp r-xdata
xor eax eax
mov [ ebp - 0x2c3c ] ax
movzx eax [ ebp - 0x1bc8c ]
push eax
call sub_4230a4
pop ecx
push 0x800
cmp eax 0x50
je r-xdata
mov [ rw-data ] 0x1
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x8c8c ]
call sub_409b53
jmp r-xdata
mov ebx [ GetFileAttributesW@IAT ]
jmp r-xdata
mov bh [ ebp - 0xd ]
test bh bh
je r-xdata
push r--data
push eax
call sub_422c19
mov eax [ rw-data ]
pop ecx
pop ecx
xor eax eax
lea edi [ ebp - 0x5c84 ]
push 0x22
mov [ ebp - 0x103c ] ax
pop eax
cmp [ ebp - 0x5c84 ] ax
jne r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
movzx eax [ ebp - 0x5c84 ]
sub eax 0x30
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] cl
sub eax 0x1
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
mov [ rw-data ] al
mov [ rw-data ] al
jmp r-xdata
push edi
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0x18
lea eax [ ebp - 0x103c ]
push eax
call edi
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebp + 0xc ]
push eax
call sub_418d29
mov [ rw-data ] eax
lea eax [ ebp - 0x5c84 ]
push eax
push [ ebp + 0x8 ]
call [ SetWindowTextW@IAT ]
lea eax [ ebp - 0x5c84 ]
push eax
push [ ebp + 0x8 ]
call sub_41adb9
push rw-data
lea eax [ ebp - 0x2c3c ]
push eax
call sub_40e847
mov [ ebp - 0x14 ] 0x2
cmp eax 0x54
lea eax [ ebp - 0x2c3c ]
je r-xdata
push edi
lea eax [ ebp - 0x3c84 ]
push eax
call [ SetFileAttributesW@IAT ]
cmp [ ebp - 0x2c78 ] 0x0
je r-xdata
lea eax [ ebp + 0xc ]
push eax
call sub_418d29
mov esi eax
mov eax [ rw-data ]
lea esi [ ebp - 0x5c84 ]
jmp r-xdata
push edi
call sub_4216b5
pop ecx
cmp eax 0x800
jae r-xdata
lea edi [ ebp - 0x5c82 ]
sub eax 0x1
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov [ rw-data ] 0x2
inc esi
lea eax [ ebp - 0x7c84 ]
push esi
push [ rw-data ]
push eax
push r--data
lea eax [ ebp - 0x103c ]
push 0x800
push eax
call sub_403ce2
lea eax [ ebp - 0x103c ]
push eax
push 0x66
push [ ebp + 0x8 ]
call [ SetDlgItemTextW@IAT ]
cmp [ ebp - 0x5c84 ] 0x0
je r-xdata
lea eax [ ebp - 0x6c84 ]
push eax
call sub_409820
test al al
jne r-xdata
lea eax [ ebp - 0x19c8a ]
push eax
lea eax [ ebp - 0x6c84 ]
push eax
call sub_421693
lea eax [ ebp - 0x6c82 ]
push ebx
push eax
call sub_41f472
add esp 0x10
test eax eax
je r-xdata
push rw-data
push eax
call sub_40e847
mov [ ebp - 0x14 ] 0x7
jmp r-xdata
push rw-data
push eax
call sub_40e847
mov [ ebp - 0x14 ] 0x10
jmp r-xdata
lea eax [ ebp - 0x3c84 ]
push eax
call ebx
cmp eax 0xffffffff
je r-xdata
push esi
lea eax [ ebp - 0x103c ]
push eax
lea eax [ ebp - 0x7c84 ]
push eax
call sub_40aaae
push esi
lea eax [ ebp - 0x103c ]
push eax
call sub_40a7a3
lea eax [ ebp - 0x7c84 ]
push eax
call sub_4216b5
mov esi eax
pop ecx
cmp esi 0x4
jb r-xdata
push esi
call sub_4216b5
add eax edi
lea eax [ eax * 2 + 0xa ]
push eax
push [ rw-data ]
call sub_4216d5
add esp 0xc
test eax eax
je r-xdata
push eax
call sub_4216b5
pop ecx
mov edi eax
test bl bl
jne r-xdata
movzx eax [ edi ]
push 0x5c
pop esi
cmp eax 0x2e
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x11c8c ] 0x0
mov ebx 0x800
je r-xdata
mov ebx edi
lea esi [ ebp - 0x6c84 ]
cmp [ ebp - 0x6c84 ] bx
je r-xdata
xor ecx ecx
mov [ eax ] cx
add eax 0x2
push eax
lea eax [ ebp - 0x1c3c ]
push eax
call sub_421693
pop ecx
pop ecx
jmp r-xdata
xor eax eax
mov [ ebp - 0x9c8c ] ax
mov [ ebp - 0x1c3c ] ax
lea eax [ ebp - 0x19c8c ]
push eax
lea eax [ ebp - 0x6c84 ]
push eax
call sub_421693
pop ecx
pop ecx
push 0x22
pop ebx
cmp [ ebp - 0x6c84 ] bx
jne r-xdata
push edi
lea eax [ ebp - 0x3c84 ]
push eax
lea ecx [ ebp - 0x8c8c ]
call sub_409bca
test al al
jne r-xdata
lea eax [ ebp - 0x3c84 ]
push eax
call [ DeleteFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x5c84 ]
push eax
call sub_40aeec
test al al
jne r-xdata
lea eax [ ebp - 0x103c ]
push eax
call sub_4216b5
pop ecx
cmp esi eax
ja r-xdata
test bh bh
jne r-xdata
mov [ rw-data ] eax
test bl bl
je r-xdata
cmp ax si
je r-xdata
cmp [ edi + 0x2 ] si
jne r-xdata
mov [ rw-data ] cl
jmp r-xdata
xor eax eax
mov [ ebp - 0x143c ] ax
lea eax [ ebp - 0x5c84 ]
push 0x2c
push eax
call sub_41f472
pop ecx
pop ecx
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0xbc8c ]
push eax
lea eax [ ebp - 0x6c84 ]
push eax
call sub_40a7d3
cmp [ ebp - 0x2c3c ] 0x0
jne r-xdata
push ebx
lea eax [ ebp - 0x9c8c ]
push eax
lea eax [ ebp - 0x11c8c ]
push eax
call sub_40a7d3
push 0x20
pop ecx
mov esi 0x800
mov esi edi
push edi
jmp r-xdata
lea eax [ ebp - 0x3c84 ]
push eax
call sub_4216b5
xor ecx ecx
push 0x1e
push edi
mov [ ebp + eax * 2 - 0x3c82 ] cx
lea eax [ ebp - 0x3c ]
push eax
call sub_41d1e0
add esp 0x10
mov [ ebp - 0x38 ] 0x3
push 0x14
pop eax
mov [ ebp - 0x2c ] ax
lea eax [ ebp - 0x3c84 ]
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x3c ]
push eax
call [ SHFileOperationW@IAT ]
push esi
call j_sub_4251ac#3
pop ecx
jmp r-xdata
push esi
push eax
call sub_422c19
pop ecx
pop ecx
xor ecx ecx
mov [ eax ] cx
lea eax [ ebp - 0x103c ]
push edi
push eax
call sub_421693
xor ebx ebx
test ax ax
je r-xdata
add edi 0x4
xor ebx ebx
cmp [ edi ] bx
je r-xdata
cmp [ ebp - 0x143c ] 0x0
jne r-xdata
xor edi edi
mov esi edi
cmp [ ebp - 0x5c84 ] si
je r-xdata
push ebx
lea eax [ ebp - 0x2c3c ]
push eax
call sub_40a7a3
cmp [ ebp - 0x17c8c ] 0x0
je r-xdata
push [ ebp - 0x14 ]
lea eax [ ebp - 0x2c3c ]
push eax
call sub_418cc9
mov edi eax
xor eax eax
mov [ esi ] ax
lea eax [ ebp - 0x6c84 ]
push eax
call sub_409820
test al al
je r-xdata
push 0x2f
pop edx
cmp ax dx
jne r-xdata
lea eax [ ebp - 0x3c84 ]
push eax
push r--data
lea eax [ ebp - 0x103c ]
push 0x800
push eax
call sub_403ce2
add esp 0x14
lea eax [ ebp - 0x103c ]
push eax
call ebx
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebp - 0x103c ]
mov edi rw-data
push eax
push edi
call sub_421693
pop ecx
pop ecx
push 0x800
lea eax [ ebp - 0x103c ]
push eax
call sub_418a7c
push 0x66
push [ ebp + 0x8 ]
call [ GetDlgItem@IAT ]
mov esi eax
lea eax [ ebp - 0x103c ]
push eax
push esi
call [ SetWindowTextW@IAT ]
push edi
push ebx
mov ebx [ SendMessageW@IAT ]
push 0x143
push esi
call ebx
lea eax [ ebp - 0x103c ]
push eax
push edi
call sub_4216e0
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ eax + 0x2 ] bx
jne r-xdata
lea eax [ ebp - 0x18 ]
xor ebx ebx
push eax
push 0x1
push ebx
push r--data
push 0x80000002
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
cmp [ edi + 0x2 ] 0x3a
je r-xdata
lea eax [ ebp - 0x103c ]
push edi
push eax
call sub_421693
jmp r-xdata
lea eax [ ebp - 0x5c84 ]
push eax
call sub_4186ea
xor eax eax
mov [ ebp - 0x4c84 ] ax
lea eax [ ebp - 0x143c ]
push 0x24
push eax
lea eax [ ebp - 0x5c84 ]
push eax
push [ ebp + 0x8 ]
call sub_4181fe
cmp eax 0x6
je r-xdata
lea eax [ ebp - 0x1bc8c ]
push eax
lea eax [ ebp - 0x5c84 ]
push eax
call sub_421693
lea eax [ ebp - 0x19c8c ]
push eax
lea eax [ ebp - 0x143c ]
push eax
call sub_421693
add esp 0x10
lea eax [ ebp - 0x5c84 ]
lea eax [ ebp - 0x2c3c ]
push eax
lea eax [ ebp - 0xcc8c ]
push eax
call sub_421693
cmp [ ebp - 0x13c8c ] 0x0
lea eax [ ebp - 0x13c8c ]
pop ecx
pop ecx
jne r-xdata
push ebx
lea eax [ ebp - 0x17c8c ]
push eax
lea eax [ ebp - 0x2c3c ]
push eax
call sub_40e81b
push ebx
lea eax [ ebp - 0x2c3c ]
push eax
call sub_40a7a3
mov [ esi ] di
push 0x2f
pop eax
mov ebx esi
cmp di ax
jne r-xdata
add esi 0x2
cmp [ esi ] di
jne r-xdata
inc esi
push esi
lea eax [ ebp - 0x103c ]
push eax
lea eax [ ebp - 0x3c84 ]
push eax
call [ MoveFileW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x103c ]
push eax
xor eax eax
push eax
push 0x143
push esi
call ebx
jmp r-xdata
xor ecx ecx
mov [ eax ] cx
cmp [ ebp - 0x103c ] bx
je r-xdata
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] 0x1000
push eax
lea eax [ ebp - 0x103c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push ebx
push r--data
push [ ebp - 0x18 ]
call [ RegQueryValueExW@IAT ]
push [ ebp - 0x18 ]
call [ RegCloseKey@IAT ]
mov eax [ ebp - 0x14 ]
mov ecx 0x7ff
shr eax 0x1
cmp eax ecx
jb r-xdata
pop ecx
pop ecx
push 0x1
push [ ebp + 0x8 ]
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
call [ EndDialog@IAT ]
lea eax [ ebp - 0x5c82 ]
lea eax [ eax + esi * 2 ]
push eax
lea eax [ ebp - 0x143c ]
push eax
call sub_421693
pop ecx
xor eax eax
pop ecx
mov [ ebp + esi * 2 - 0x5c84 ] ax
inc esi
lea eax [ ebp - 0x5c84 ]
lea eax [ eax + esi * 2 ]
cmp [ eax ] di
jne r-xdata
push ebx
push eax
call sub_40b1d0
push eax
lea eax [ ebp - 0x2c3c ]
push eax
call sub_40e81b
lea eax [ ebp - 0x2c3c ]
push eax
call sub_40aa4a
test eax eax
je r-xdata
lea eax [ ebp - 0x19c8c ]
movzx eax [ esi ]
cmp ax cx
je r-xdata
test ebx ebx
je r-xdata
push 0x20
pop eax
mov [ ebp - 0x1c3c ] ax
lea eax [ esi + 0x2 ]
push eax
lea eax [ ebp - 0x1c3a ]
jmp r-xdata
push 0x4
push edi
lea eax [ ebp - 0x103c ]
push eax
call [ MoveFileExW@IAT ]
push edi
call sub_4216b5
mov esi eax
lea eax [ ebp - 0x103c ]
push eax
call sub_4216b5
add esi eax
pop ecx
pop ecx
cmp esi 0x7ff
jae r-xdata
lea eax [ ebp - 0x103c ]
push eax
call sub_4216b5
pop ecx
cmp [ ebp + eax * 2 - 0x103e ] si
je r-xdata
xor ecx ecx
mov [ ebp + eax * 2 - 0x103c ] cx
mov eax ecx
cmp [ eax ] 0x40
je r-xdata
jmp r-xdata
push ebx
push r--data
lea eax [ ebp - 0x2c3c ]
push eax
call sub_40e81b
push r--data
push eax
call sub_4100df
test eax eax
je r-xdata
xor eax eax
mov [ ebx ] ax
add esi 0x2
cmp [ esi ] ax
je r-xdata
push esi
lea eax [ ebp - 0x1c3c ]
push eax
call sub_421693
pop ecx
pop ecx
mov [ ebx ] di
jmp r-xdata
push 0x22
pop eax
push eax
lea eax [ ebp - 0x103c ]
push eax
call sub_41f64b
pop ecx
pop ecx
test eax eax
je r-xdata
lea eax [ ebp - 0x103c ]
push edi
push eax
call sub_422c19
jmp r-xdata
lea eax [ ebp - 0x103c ]
push r--data
push eax
call sub_422c19
pop ecx
pop ecx
push edi
lea eax [ ebp - 0xcc8c ]
push eax
push 0x5
push 0x1000
call [ SHChangeNotify@IAT ]
jmp r-xdata
push 0x1
lea eax [ ebp - 0x2c3c ]
push eax
call sub_4096ef
lea eax [ ebp - 0xbc8c ]
push eax
lea eax [ ebp - 0xac8c ]
push eax
call sub_421693
pop ecx
pop ecx
lea eax [ ebp - 0xac8c ]
push eax
call sub_40b213
movzx ecx [ ebp - 0x1c3c ]
lea eax [ ebp - 0x1c3c ]
neg ecx
lea edx [ ebp - 0x9c8c ]
lea esi [ ebp - 0xac8c ]
sbb ecx ecx
and ecx eax
movzx eax [ ebp - 0x9c8c ]
neg eax
push ecx
sbb eax eax
and eax edx
movzx edx [ ebp - 0xac8c ]
neg edx
push eax
lea eax [ ebp - 0x15c8c ]
sbb edx edx
push eax
and edx esi
call sub_4187d8
push eax
push edx
lea eax [ ebp - 0x2c3c ]
push eax
lea eax [ ebp - 0xbc8c ]
push eax
push edi
call sub_41803d
cmp [ ebp - 0xcc8c ] 0x0
je r-xdata
push 0x20
pop ecx
xor edi edi
sub_41aa9e
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push 0x20
push ebx
call sub_41f472
pop ecx
pop ecx
test eax eax
je r-xdata
pop ebp
mov eax ebx
pop ebx
retn 0x8
push 0x22
pop ebp
cmp [ ebx ] bp
jne r-xdata
push esi
push edi
push ebx
call sub_4216b5
mov edi eax
xor ecx ecx
push 0x2
pop edx
lea eax [ edi + 0x3 ]
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41c402
mov esi eax
push ebx
lea ecx [ esi + 0x2 ]
push ecx
call sub_421693
add esp 0x10
mov [ esi + edi * 2 + 0x2 ] bp
xor eax eax
mov [ esi ] bp
mov [ esi + edi * 2 + 0x4 ] ax
push [ esp + 0x18 ]
push esi
push ebx
call sub_40e847
push esi
call j_sub_4251ac#2
pop ecx
pop edi
pop esi
push ebx
call sub_40b1b4
cmp [ eax ] bp
je r-xdata
sub_41ab1f
sub esp 0x5c
push ebx
push ebp
push esi
push edi
push 0x68
push [ rw-data ]
call [ GetDlgItem@IAT ]
mov edi [ SendMessageW@IAT ]
xor ebx ebx
mov esi eax
mov ebp 0xc2
cmp [ rw-data ] bl
jne r-xdata
mov eax 0x5f5e100
push eax
push eax
push 0xb1
push esi
call edi
lea eax [ esp + 0x10 ]
mov [ esp + 0x10 ] 0x5c
push eax
push ebx
push 0x43a
push esi
call edi
xor ecx ecx
mov [ esp + 0x29 ] bl
mov bl [ esp + 0x70 ]
inc ecx
mov [ esp + 0x14 ] ecx
test bl bl
je r-xdata
mov ecx [ rw-data ]
call sub_41732a
push 0x5
push esi
call [ ShowWindow@IAT ]
push 0xffffffff
push ebx
push 0xb1
push esi
call edi
push r--data
push ebx
push ebp
push esi
call edi
mov [ rw-data ] 0x1
lea eax [ esp + 0x10 ]
push eax
push ecx
push 0x444
push esi
call edi
push [ esp + 0x74 ]
push 0x0
push ebp
push esi
call edi
mov eax 0x5f5e100
push eax
push eax
push 0xb1
push esi
call edi
test bl bl
je r-xdata
mov eax [ esp + 0x18 ]
and eax 0xbfffffff
mov [ esp + 0x24 ] 0xa0
or eax ecx
mov [ esp + 0x14 ] 0x40000001
mov [ esp + 0x18 ] eax
push r--data
push 0x0
push ebp
push esi
call edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x5c
retn 0x8
mov eax [ esp + 0x18 ]
and eax 0xfffffffe
or eax 0x40000000
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x10 ]
push eax
push 0x1
push 0x444
push esi
call edi
sub_41ac31
push ebx
mov ebx [ esp + 0x14 ]
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x14 ]
push 0x0
push 0x0
push r--data
push ebx
push ebp
push esi
push edi
call sub_401506
test al al
jne r-xdata
xor eax eax
inc eax
sub esi 0x110
je r-xdata
mov esi [ SetDlgItemTextW@IAT ]
push ebx
push 0x65
push edi
mov [ rw-data ] ebx
call esi
push [ rw-data ]
push 0x66
push edi
call esi
sub esi 0x1
jne r-xdata
xor eax eax
jmp r-xdata
movzx eax bp
sub eax 0x1
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x10
push 0x800
push [ rw-data ]
push 0x66
push edi
call [ GetDlgItemTextW@IAT ]
push 0x1
jmp r-xdata
sub eax 0x1
je r-xdata
push edi
call [ EndDialog@IAT ]
jmp r-xdata
push 0x0
sub_41acc3
push ebp
mov ebp esp
mov eax 0x1018
call sub_41c240
call sub_418117
test al al
je r-xdata
mov esp ebp
pop ebp
retn 0x4
push ebx
push esi
push 0x5
push [ ebp + 0x8 ]
call [ GetWindow@IAT ]
mov esi eax
xor ebx ebx
mov [ ebp + 0x8 ] esi
test esi esi
je r-xdata
pop esi
pop ebx
push edi
pop edi
push 0x800
lea eax [ ebp - 0x1018 ]
push eax
push esi
call [ GetClassNameW@IAT ]
push r--data
lea eax [ ebp - 0x1018 ]
push eax
call sub_4100df
test eax eax
jne r-xdata
push 0x2
push esi
call [ GetWindow@IAT ]
mov esi eax
cmp esi [ ebp + 0x8 ]
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongW@IAT ]
and eax 0x1f
cmp al 0xe
jne r-xdata
inc ebx
test esi esi
jne r-xdata
push 0x0
push 0x0
push 0x173
push esi
call [ SendMessageW@IAT ]
mov edi eax
test edi edi
je r-xdata
cmp ebx 0x200
jge r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x18
push edi
call [ GetObjectW@IAT ]
push [ ebp - 0x10 ]
call sub_418179
push eax
push [ ebp - 0x14 ]
call sub_418136
push eax
push edi
call sub_418226
push eax
push 0x0
push 0x172
push esi
call [ SendMessageW@IAT ]
cmp edi [ rw-data ]
je r-xdata
push edi
call [ DeleteObject@IAT ]
sub_41adb9
mov eax 0x1040
call sub_41c240
push ebx
push esi
mov esi [ esp + 0x1050 ]
xor ebx ebx
cmp [ esi ] bx
je r-xdata
pop esi
pop ebx
add esp 0x1040
retn 0xc
push esi
call sub_4216b5
pop ecx
cmp eax 0x7f6
jae r-xdata
push ebp
push edi
push 0x3c
pop edi
push edi
lea eax [ esp + 0x18 ]
push ebx
push eax
call sub_41d1e0
movzx ecx [ esi ]
lea edx [ esi + 0x2 ]
add esp 0xc
mov [ esp + 0x14 ] edi
mov [ esp + 0x18 ] 0x1c0
push 0x22
pop ebp
cmp cx bp
je r-xdata
mov [ esp + 0x24 ] edx
mov eax ebx
test cx cx
je r-xdata
mov edx esi
mov eax [ esp + 0x28 ]
push 0x20
mov ecx esi
pop edi
cmp [ esp + 0x105c ] bl
jne r-xdata
cmp [ eax ] bx
jne r-xdata
cmp [ esi + eax * 2 ] di
je r-xdata
jmp r-xdata
push edx
mov [ esp + 0x34 ] 0x1
call sub_40aa4a
mov esi eax
test esi esi
je r-xdata
cmp [ rw-data ] bx
je r-xdata
xor ecx ecx
mov [ esi + eax * 2 ] cx
cmp [ esi + eax * 2 + 0x2 ] 0x2f
je r-xdata
inc eax
cmp [ esi + eax * 2 ] bx
jne r-xdata
push [ esp + 0x24 ]
call sub_409820
test al al
je r-xdata
push r--data
push esi
call sub_4100df
test eax eax
jne r-xdata
mov [ esp + 0x28 ] rw-data
test eax eax
je r-xdata
cmp [ esi + eax * 2 ] di
jne r-xdata
inc eax
lea ecx [ esi + eax * 2 ]
cmp [ ecx ] bx
jne r-xdata
cmp [ esi + eax * 2 ] bp
je r-xdata
jmp r-xdata
lea eax [ esp + 0x14 ]
push eax
call [ ShellExecuteExW@IAT ]
test eax eax
je r-xdata
push 0x800
lea eax [ esp + 0x54 ]
push eax
push [ esp + 0x2c ]
call sub_40a7d3
lea eax [ esp + 0x50 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x20 ] r--data
inc eax
lea eax [ esi + eax * 2 ]
mov [ esp + 0x28 ] eax
jmp r-xdata
cmp [ ecx ] bp
jne r-xdata
mov [ esi + eax * 2 ] di
pop edi
pop ebp
mov edi [ esp + 0x1054 ]
mov ebp [ ShowWindow@IAT ]
cmp [ rw-data ] bl
jne r-xdata
test edi edi
je r-xdata
cmp [ esp + 0x105c ] bl
jne r-xdata
push 0x7d0
push [ esp + 0x50 ]
call [ WaitForInputIdle@IAT ]
push [ esp + 0x4c ]
call sub_41b266
cmp [ rw-data ] 0x0
je r-xdata
push edi
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
cmp [ rw-data ] bl
je r-xdata
push [ esp + 0x4c ]
call [ CloseHandle@IAT ]
test esi esi
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esp + 0x50 ]
call [ GetExitCodeProcess@IAT ]
test eax eax
je r-xdata
push ebx
push edi
call ebp
mov bl 0x1
cmp [ rw-data ] 0x0
mov al [ esp + 0x105c ]
je r-xdata
push r--data
push esi
call sub_4100df
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
add eax 0x3e8
cmp eax [ rw-data ]
jbe r-xdata
test bl bl
je r-xdata
test al al
jne r-xdata
mov al [ esp + 0x105c ]
mov [ rw-data ] eax
test al al
je r-xdata
mov [ rw-data ] 0x1b58
jmp r-xdata
push 0x1
push edi
call ebp
sub_41afeb
and [ rw-data ] 0x0
push 0x1
push [ esp + 0x8 ]
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
call [ ShowWindow@IAT ]
push 0x0
push 0x2
push [ esp + 0xc ]
call sub_4014c3
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
retn 0x4
push 0x0
push 0x1
push 0x111
push [ esp + 0x10 ]
call [ SendMessageW@IAT ]
sub_41b04a
mov eax sub_42ef85
call sub_41c16c
push ecx
mov eax 0x20f8
call sub_41c240
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
push r--data
push rw-data
call sub_421693
pop ecx
pop ecx
push r--data
mov ecx rw-data
call sub_40e893
push [ ebp + 0xc ]
push rw-data
call sub_421693
pop ecx
pop ecx
push [ ebp + 0xc ]
mov esi rw-data
mov ecx esi
call sub_405938
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x2108 ]
push 0x4
pop eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov al [ rw-data ]
mov [ rw-data ] al
mov al [ rw-data ]
push esi
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] al
call sub_407581
lea ecx [ ebp - 0x2108 ]
mov [ ebp - 0x4 ] 0x1
call sub_4076dd
lea ecx [ ebp - 0x2108 ]
call sub_407611
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41b147
push ebp
mov ebp esp
mov eax 0x1008
call sub_41c240
cmp [ rw-data ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
je r-xdata
push esi
lea eax [ ebp - 0x1008 ]
push eax
push rw-data
call sub_419e17
lea eax [ ebp - 0x8 ]
xor esi esi
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push 0x20006
push esi
push esi
push esi
push r--data
push 0x80000001
call [ RegCreateKeyExW@IAT ]
test eax eax
jne r-xdata
pop esi
push [ ebp + 0x8 ]
call sub_4216b5
pop ecx
lea eax [ eax * 2 + 0x2 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1008 ]
push 0x1
push esi
push eax
push [ ebp - 0x4 ]
call [ RegSetValueExW@IAT ]
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
sub_41b1d7
push ebp
mov ebp esp
mov eax 0x2000
call sub_41c240
push esi
push [ ebp + 0x8 ]
push r--data
call [ SetEnvironmentVariableW@IAT ]
push 0x1000
lea eax [ ebp - 0x2000 ]
push eax
push [ ebp + 0x8 ]
call sub_40e63c
mov esi eax
test esi esi
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
movzx ecx [ esi ]
push ecx
jmp r-xdata
call sub_40e733
test al al
jne r-xdata
add esi 0x2
movzx eax [ esi ]
push eax
push esi
push r--data
call [ SetEnvironmentVariableW@IAT ]
sub_41b236
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
cmp eax 0xf4240
jbe r-xdata
test ecx ecx
jne r-xdata
shr eax 0x8
shr ecx 0x8
cmp ecx eax
jae r-xdata
xor eax eax
jmp r-xdata
imul eax eax 0x64
xor edx edx
div ecx
push 0x64
pop eax
jmp r-xdata
retn 0x8
sub_41b266
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push 0xa
push [ ebp + 0x8 ]
call [ WaitForSingleObject@IAT ]
mov ebx 0x102
jmp r-xdata
cmp eax ebx
je r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call [ PeekMessageW@IAT ]
push 0xa
push [ ebp + 0x8 ]
call [ WaitForSingleObject@IAT ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41b2a7
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push sub_418628
push [ rw-data ]
push r--data
push [ rw-data ]
call [ DialogBoxParamW@IAT ]
dec eax
neg eax
sbb eax eax
inc eax
mov esp ebp
pop ebp
retn 0x8
sub_41b2e4
cmp [ rw-data ] 0x0
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x14 ]
mov [ rw-data ] eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
push ebx
push ebp
push esi
push edi
mov edi [ DialogBoxParamW@IAT ]
mov ebx sub_41994e
mov ebp r--data
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
retn 0x18
push [ esp + 0x14 ]
push ebx
push [ rw-data ]
push ebp
push [ rw-data ]
call edi
mov esi eax
cmp esi 0x4
je r-xdata
push [ esp + 0x14 ]
push sub_41ac31
push [ rw-data ]
push r--data
push [ rw-data ]
call edi
test eax eax
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
sub_41b39f
push ebp
mov ebp esp
mov eax 0x1000
call sub_41c240
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
je r-xdata
cmp [ ebp + 0x8 ] 0x2
mov esi [ rw-data ]
jne r-xdata
mov ebx [ ebp + 0x14 ]
mov esi rw-data
mov edi ebx
jmp r-xdata
push 0x800
lea eax [ ebp - 0x1000 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40abc3
cmp [ rw-data ] 0x0
jne r-xdata
push esi
call [ IsWindowVisible@IAT ]
neg eax
sbb eax eax
and esi eax
push 0x40
pop ecx
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ebx [ ebp + 0x14 ]
mov esi rw-data
push 0x40
pop ecx
mov edi ebx
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea eax [ ebp - 0x1000 ]
push eax
push sub_418b2b
push esi
push r--data
push [ rw-data ]
call [ DialogBoxParamW@IAT ]
test eax eax
jne r-xdata
mov al [ ebx + 0x100 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov esi ebx
mov edi rw-data
mov ebx [ ebp + 0x14 ]
mov ecx ebx
push r--data
call sub_40dbc1
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebx + 0x100 ] 0x0
je r-xdata
sub_41b471
push ebp
mov ebp esp
mov eax 0x1400
call sub_41c240
push ebx
push [ ebp + 0xc ]
xor ebx ebx
cmp [ ebp + 0x8 ] 0x54
sete bl
dec ebx
and ebx 0xfffffe82
add ebx 0x20b
call sub_40b1d0
push eax
push ebx
call sub_40cd14
push eax
lea eax [ ebp - 0x1400 ]
push 0xa00
push eax
call sub_403ce2
add esp 0x10
lea eax [ ebp - 0x1400 ]
push eax
push 0x0
call sub_41ab1f
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41b4ce
push ebp
mov ebp esp
mov eax 0x1400
call sub_41c240
cmp [ ebp + 0x14 ] 0x0
push [ ebp + 0x8 ]
je r-xdata
push 0x65
push 0x66
jmp r-xdata
call sub_40cd14
push eax
lea eax [ ebp - 0x1400 ]
push 0xa00
push eax
call sub_403ce2
add esp 0x10
lea eax [ ebp - 0x1400 ]
push eax
push 0x65
push [ rw-data ]
call [ SetDlgItemTextW@IAT ]
call sub_418e03
xor eax eax
cmp [ rw-data ] al
sete al
mov esp ebp
pop ebp
retn 0x10
sub_41b52f
sub esp 0xc0
push ebp
push esi
push edi
push 0x1
call sub_40e9fd
xor ebp ebp
push ebp
call [ OleInitialize@IAT ]
mov ecx rw-data
call sub_40fcd8
push 0x7002
push ebp
push rw-data
call sub_41d1e0
add esp 0xc
call [ GetCommandLineW@IAT ]
mov esi eax
test esi esi
je r-xdata
push 0x800
mov edi rw-data
push edi
push ebp
call [ GetModuleFileNameW@IAT ]
mov esi [ SetEnvironmentVariableW@IAT ]
push edi
push r--data
call esi
lea eax [ esp + 0x10 ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ esp + 0x1e ]
push eax
movzx eax [ esp + 0x20 ]
push eax
movzx eax [ esp + 0x22 ]
push eax
movzx eax [ esp + 0x24 ]
push eax
movzx eax [ esp + 0x26 ]
push eax
movzx eax [ esp + 0x26 ]
push eax
movzx eax [ esp + 0x28 ]
push eax
push r--data
lea eax [ esp + 0x88 ]
push 0x32
push eax
call sub_403ce2
add esp 0x28
lea eax [ esp + 0x68 ]
push eax
push r--data
call esi
push ebp
call [ GetModuleHandleW@IAT ]
mov esi eax
push 0x64
push esi
mov [ rw-data ] esi
mov [ rw-data ] esi
call [ LoadIconW@IAT ]
push 0x65
push [ rw-data ]
mov [ rw-data ] eax
call [ LoadBitmapW@IAT ]
lea ecx [ esp + 0xc ]
mov [ rw-data ] eax
call sub_418569
push edi
mov ecx rw-data
call sub_40c677
lea ecx [ esp + 0x44 ]
call sub_417220
lea ecx [ esp + 0x20 ]
call sub_417220
push ebp
push sub_418fac
push ebp
lea eax [ esp + 0x50 ]
mov [ rw-data ] eax
lea eax [ esp + 0x2c ]
push r--data
push esi
mov [ rw-data ] eax
call [ DialogBoxParamW@IAT ]
lea ecx [ esp + 0x20 ]
mov [ rw-data ] ebp
mov [ rw-data ] ebp
call sub_4172a0
lea ecx [ esp + 0x44 ]
call sub_4172a0
lea ecx [ esp + 0xc ]
call sub_4185af
mov eax [ rw-data ]
test eax eax
je r-xdata
push esi
call sub_419ceb
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push eax
call [ Sleep@IAT ]
push esi
call sub_41b1d7
push r--data
push ebp
mov esi 0xf001f
push esi
call [ OpenFileMappingW@IAT ]
mov edi eax
test edi edi
je r-xdata
mov ecx rw-data
call sub_40da45
cmp [ rw-data ] ebp
jbe r-xdata
call sub_41873f
push edi
call [ CloseHandle@IAT ]
jmp r-xdata
push 0x7002
push ebp
push ebp
push esi
push edi
call [ MapViewOfFile@IAT ]
mov esi eax
test esi esi
je r-xdata
push [ rw-data ]
mov esi [ DeleteObject@IAT ]
call esi
mov eax [ rw-data ]
test eax eax
je r-xdata
push [ rw-data ]
call j_sub_4251ac#3
pop ecx
push esi
call [ UnmapViewOfFile@IAT ]
push 0x7002
push esi
push rw-data
call sub_41ee90
add esp 0xc
mov [ esi ] 0x1
push rw-data
call sub_41b1d7
cmp [ rw-data ] 0x0
pop edi
pop esi
pop ebp
jne r-xdata
push eax
call esi
mov eax [ rw-data ]
mov [ rw-data ] 0x1
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call [ OleUninitialize@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push eax
call sub_41b266
push [ rw-data ]
call [ CloseHandle@IAT ]
push 0xff
mov ecx rw-data
call sub_406acc
add esp 0xc0
retn 0x10
mov eax [ rw-data ]
sub_41bbb4
test [ r--data ] 0x1000
je r-xdata
retn
call sub_41bc62
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
cmp eax 0x1
jne r-xdata
jmp sub_41be5c
push rw-data
push 0x4
call sub_41bdb4
sub_41bbe7
mov eax [ rw-data ]
push ebx
xor ebx ebx
inc ebx
cmp eax ebx
jne r-xdata
test eax eax
je r-xdata
xor al al
pop ebx
retn
push esi
push r--data
call [ GetModuleHandleW@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov al bl
pop ebx
retn
push r--data
push esi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
mov esi ebx
jmp r-xdata
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
mov ecx esi
mov edx rw-data
xor eax eax
[ edx ] ecx
test eax eax
jne r-xdata
mov [ rw-data ] eax
cmp eax ebx
jne r-xdata
cmp esi ebx
je r-xdata
mov al bl
xor al al
jmp r-xdata
pop esi
pop ebx
retn
sub_41bc62
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
call sub_41bbe7
test al al
je r-xdata
mov edx rw-data
jmp r-xdata
push esi
mov esi [ rw-data ]
mov ecx esi
push rw-data
call [ r--data ]
call esi
pop esi
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_41cabf
mov esp ebp
pop ebp
retn
pause
xor ecx ecx
inc ecx
[ edx ] ecx
test eax eax
jne r-xdata
sub_41bcbf
mov edi edi
push ebp
mov ebp esp
sub esp 0x40
lea eax [ ebp - 0x1c ]
push 0x1c
push eax
push [ ebp + 0x8 ]
call [ VirtualQuery@IAT ]
test eax eax
jne r-xdata
test [ ebp - 0x8 ] 0x44
je r-xdata
push 0x19
pop ecx
int 0x29
mov esp ebp
pop ebp
retn 0x8
push esi
push edi
lea eax [ ebp - 0x40 ]
push eax
call [ GetSystemInfo@IAT ]
mov edi [ ebp - 0x3c ]
xor edx edx
lea eax [ edi - 0x1 ]
mov ecx eax
lea esi [ edi - 0x1 ]
and eax [ ebp + 0xc ]
not esi
and ecx [ ebp + 0x8 ]
dec eax
add ecx edi
and esi [ ebp + 0x8 ]
add eax ecx
div edi
xor edx edx
mov ecx eax
mov eax [ ebp + 0xc ]
div edi
add ecx eax
je r-xdata
pop edi
pop esi
xor eax eax
[ esi ] eax
add esi edi
sub ecx 0x1
jne r-xdata
sub_41bd31
mov edi edi
push ebp
mov ebp esp
mov ecx [ r--data ]
cmp [ ecx + r--data ] 0xd
ja r-xdata
push esi
mov esi [ ecx + r--data ]
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
movzx eax [ ecx + r--data ]
lea edx [ ecx + r--data ]
movzx ecx [ ecx + r--data ]
add edx eax
push edi
mov edi [ esi + r--data ]
xor esi esi
test ecx ecx
je r-xdata
xor eax eax
jmp r-xdata
pop ebp
retn 0x8
xor eax eax
cmp edi [ edx + 0xc ]
jb r-xdata
pop esi
inc esi
add edx 0x28
cmp esi ecx
jb r-xdata
mov eax [ edx + 0x8 ]
add eax [ edx + 0xc ]
cmp edi eax
jb r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x8 ]
mov [ eax ] ecx
mov eax [ ebp + 0xc ]
mov ecx [ edx + 0x24 ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
add eax __pe_sfxrar_export_address_table
jmp r-xdata
pop edi
sub_41bdb4
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_41bd31
mov esi eax
test esi esi
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x4
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push esi
call [ VirtualProtect@IAT ]
test eax eax
jne r-xdata
test [ ebp - 0x8 ] 0x80000000
mov [ rw-data ] 0x1
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x8
push 0x19
pop ecx
int 0x29
push [ ebp - 0x4 ]
push esi
call sub_41bcbf
push 0x19
pop ecx
int 0x29
sub_41be24
mov edi edi
push ebp
mov ebp esp
push ecx
test [ r--data ] 0x1000
je r-xdata
mov esp ebp
pop ebp
retn
call sub_41bc62
sub [ rw-data ] 0x1
jne r-xdata
call sub_41be5c
lea eax [ ebp - 0x4 ]
push eax
push [ rw-data ]
call sub_41bdb4
sub_41be5c
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
call sub_41bbe7
test al al
je r-xdata
mov [ rw-data ] 0x0
push esi
mov esi [ rw-data ]
mov ecx esi
push rw-data
call [ r--data ]
call esi
pop esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_41cabf
mov esp ebp
pop ebp
retn
sub_41bea6
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
call sub_41bbb4
mov ecx [ ebp + 0x8 ]
mov edi __pe_sfxrar_export_address_table
mov [ ebp - 0x30 ] 0x24
mov [ ebp - 0x2c ] ecx
mov eax [ ecx + 0x4 ]
mov ebx [ ecx + 0x8 ]
add eax edi
mov edx [ ecx + 0xc ]
add ebx edi
mov esi [ ecx + 0x10 ]
add edx edi
add esi edi
mov [ ebp - 0x8 ] ebx
mov edi [ ecx + 0x14 ]
add edi __pe_sfxrar_export_address_table
mov [ ebp - 0x24 ] eax
mov [ ebp - 0xc ] edi
mov edi [ ecx + 0x1c ]
mov [ ebp - 0x34 ] edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x28 ] edi
xor edi edi
test [ ecx ] 0x1
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] edi
jne r-xdata
mov eax [ ebp + 0xc ]
mov edi [ ebx ]
sub eax edx
sar eax 0x2
mov [ ebp - 0x38 ] eax
mov ecx [ esi + eax * 4 ]
mov eax ecx
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x20 ] eax
lea eax [ ecx + r--data ]
jne r-xdata
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x8 ] eax
call sub_41be24
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push edi
push 0xc06d0057
call [ RaiseException@IAT ]
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
xor esi esi
mov [ ebp - 0x1c ] eax
test ebx ebx
je r-xdata
movzx eax cx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41cabf
mov esp ebp
pop ebp
retn 0x8
test edi edi
jne r-xdata
lea eax [ ebp - 0x30 ]
mov ecx ebx
push eax
push esi
call [ r--data ]
call ebx
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0x18 ] edi
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
test esi esi
jne r-xdata
lea eax [ ebp - 0x30 ]
mov ecx ebx
push eax
push 0x2
call [ r--data ]
call ebx
mov esi eax
xor ebx ebx
push ebx
push ebx
push [ ebp - 0x24 ]
call [ LoadLibraryExA@IAT ]
mov edi eax
test edi edi
jne r-xdata
lea eax [ ebp - 0x30 ]
mov ecx ebx
push eax
push 0x1
call [ r--data ]
call ebx
mov edi eax
test edi edi
jne r-xdata
call sub_41be24
mov eax esi
and [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x30 ]
push eax
push 0x5
mov ecx ebx
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] esi
call [ r--data ]
call ebx
mov eax [ ebp + 0xc ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp [ eax + 0x14 ] ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
mov eax edi
xchg [ ecx ] eax
cmp eax edi
jne r-xdata
call [ GetLastError@IAT ]
mov edi [ rw-data ]
mov [ ebp - 0x10 ] eax
test edi edi
je r-xdata
push [ ebp - 0x1c ]
push edi
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
cmp [ eax + 0x1c ] ebx
je r-xdata
mov ebx [ rw-data ]
push edi
call [ FreeLibrary@IAT ]
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x8 ] eax
call sub_41be24
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push ebx
push 0xc06d007e
call [ RaiseException@IAT ]
mov eax [ ebp - 0x14 ]
jmp r-xdata
lea eax [ ebp - 0x30 ]
mov ecx edi
push eax
push 0x3
call [ r--data ]
call edi
mov edi eax
test edi edi
jne r-xdata
call [ GetLastError@IAT ]
mov esi [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
mov eax [ edi + 0x3c ]
cmp [ eax + edi ] 0x4550
jne r-xdata
lea eax [ ebp - 0x30 ]
mov [ ebp - 0xc ] eax
call sub_41be24
lea eax [ ebp - 0xc ]
push eax
push 0x1
push ebx
push 0xc06d007f
call [ RaiseException@IAT ]
call sub_41bbb4
mov esi [ ebp - 0x14 ]
lea eax [ ebp - 0x30 ]
mov ecx esi
push eax
push 0x4
call [ r--data ]
call esi
mov esi eax
test esi esi
jne r-xdata
mov ecx [ ebp - 0x34 ]
cmp [ eax + edi + 0x8 ] ecx
jne r-xdata
cmp edi [ eax + edi + 0x34 ]
jne r-xdata
mov esi [ ebp - 0x38 ]
mov eax [ ebp - 0xc ]
mov esi [ eax + esi * 4 ]
test esi esi
jne r-xdata
sub_41c12b
push ebp
mov ebp esp
jmp r-xdata
push [ ebp + 0x8 ]
call sub_422c59
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_423f28
pop ecx
test eax eax
jne r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
call sub_41cb1b
call sub_41cb38
sub_41c190
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_41c240
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax

cmp ecx eax
r-xdata
sub_41c26d
push 0x10
push r--data
call sub_41cb60
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x19 ] bl
mov [ ebp - 0x4 ] ebx
mov al 0x1
mov [ ebp - 0x19 ] al
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41c2c2
call sub_41cba6
retn 0x14
mov ecx [ ebp + 0x14 ]
call j_sub_420f99
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
add [ ebp + 0x8 ] eax
inc ebx
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp ebx [ ebp + 0x10 ]
je r-xdata
sub_41c2d6
push 0xc
push r--data
call sub_41cb60
mov [ ebp - 0x19 ] 0x0
mov ebx [ ebp + 0xc ]
mov eax ebx
mov edi [ ebp + 0x10 ]
imul eax edi
mov esi [ ebp + 0x8 ]
add esi eax
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
mov al 0x1
mov [ ebp - 0x19 ] al
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41c340
call sub_41cba6
retn 0x10
sub esi ebx
mov [ ebp + 0x8 ] esi
mov ecx [ ebp + 0x14 ]
call j_sub_420f99
mov ecx esi
call [ ebp + 0x14 ]
jmp r-xdata
mov eax edi
dec edi
mov [ ebp + 0x10 ] edi
test eax eax
je r-xdata
sub_41c350
push 0x18
push r--data
call sub_41cb60
xor esi esi
mov [ ebp - 0x4 ] esi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41cba6
retn 0x10
sub edi [ ebp + 0xc ]
mov [ ebp + 0x8 ] edi
mov ecx [ ebp + 0x14 ]
call j_sub_420f99
mov ecx edi
call [ ebp + 0x14 ]
inc esi
jmp r-xdata
mov [ ebp - 0x1c ] esi
cmp esi [ ebp + 0x10 ]
je r-xdata
sub_41c3c0
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_41c3df
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0xc
push esi
call sub_41c15e
pop ecx
pop ecx
sub_41c42d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
lea edx [ ecx + 0x18 ]
add edx eax
movzx eax [ ecx + 0x6 ]
imul esi eax 0x28
add esi edx
cmp edx esi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
add edx 0x28
cmp edx esi
jne r-xdata
mov eax [ edx + 0x8 ]
add eax [ edx + 0xc ]
cmp ecx eax
jb r-xdata
cmp ecx [ edx + 0xc ]
jb r-xdata
mov eax edx
jmp r-xdata
pop esi
pop ebp
retn
sub_41c471
call sub_41cd60
test eax eax
jne r-xdata
mov eax [ fs : 0x18 ]
push esi
mov esi rw-data
mov edx [ eax + 0x4 ]
jmp r-xdata
xor al al
retn
xor eax eax
mov ecx edx
[ esi ] ecx
test eax eax
jne r-xdata
cmp edx eax
je r-xdata
xor al al
pop esi
retn
mov al 0x1
pop esi
retn
sub_41c4a6
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
call sub_41cbbb
call sub_41fe8a
test al al
jne r-xdata
mov [ rw-data ] 0x1
call sub_424e04
test al al
jne r-xdata
xor al al
pop ebp
retn
mov al 0x1
pop ebp
retn
push 0x0
call sub_41feb8
pop ecx
jmp r-xdata
sub_41c4df
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_41cd60
test eax eax
je r-xdata
cmp esi 0x1
jne r-xdata
mov eax [ rw-data ]
lea esi [ ebp - 0xc ]
push edi
and eax 0x1f
mov edi rw-data
push 0x20
pop ecx
sub ecx eax
or eax 0xffffffff
ror eax cl
xor eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi rw-data
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
lea esi [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov al 0x1
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
test esi esi
jne r-xdata
push 0x5
call sub_41cd6c
int3
push rw-data
call sub_424caf
pop ecx
test eax eax
je r-xdata
push rw-data
call sub_424caf
neg eax
pop ecx
sbb al al
inc al
jmp r-xdata
xor al al
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_41c576
push 0x8
push r--data
call sub_41cb60
and [ ebp - 0x4 ] 0x0
mov eax 0x5a4d
cmp [ __pe_sfxrar_export_address_table ] ax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor al al
mov eax [ r--data ]
cmp [ eax + __pe_sfxrar_export_address_table ] 0x4550
jne r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx __pe_sfxrar_export_address_table
sub eax ecx
push eax
push ecx
call sub_41c42d
pop ecx
pop ecx
test eax eax
je r-xdata
test [ eax + 0x24 ] 0x80000000
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov al 0x1
jmp r-xdata
call sub_41cba6
retn
sub_41c620
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
push [ ebp + 0x8 ]
call sub_424e16
push [ ebp + 0x8 ]
call sub_41feb8
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov al 0x1
pop ebp
retn
sub_41c648
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx eax
xor eax [ rw-data ]
and ecx 0x1f
push [ ebp + 0x8 ]
ror eax cl
cmp eax 0xffffffff
jne r-xdata
push rw-data
call sub_424cec
pop ecx
call sub_424c7c
jmp r-xdata
neg eax
pop ecx
sbb eax eax
not eax
and eax [ ebp + 0x8 ]
pop ebp
retn
sub_41c6a0
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_41c6c0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_41c700
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_41c7e0
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_41c860
cmp cl 0x40
jae r-xdata
sar edx 0x1f
mov eax edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
sar edx 0x1f
and cl 0x1f
sar eax cl
retn
shrd eax edx cl
sar edx cl
retn
sub_41c881
push esi
push 0x2
call sub_424e2e
call sub_41cff2
push eax
call sub_424fbc
call sub_4250ed
mov esi eax
call sub_41cfef
push 0x1
mov [ esi ] eax
call sub_41c4df
add esp 0xc
pop esi
test al al
je r-xdata
push 0x7
call sub_41cd6c
int3
fnclex
call sub_41d061
push sub_41d08c
call sub_41c683
call sub_41cd5c
push eax
call sub_4246c3
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_41cff9
call sub_41d049
test eax eax
je r-xdata
call sub_420f99
call sub_420f99
call sub_41d005
call sub_41cfef
push eax
call sub_425056
pop ecx
call sub_424d3c
test al al
je r-xdata
push sub_41cfef
call sub_424eb3
pop ecx
call sub_41cfef
xor eax eax
retn
call j_sub_4246ce
sub_41c93f
push 0x14
push r--data
call sub_41cb60
push 0x1
call sub_41c4a6
pop ecx
test al al
jne r-xdata
xor bl bl
mov [ ebp - 0x19 ] bl
and [ ebp - 0x4 ] 0x0
call sub_41c471
mov [ ebp - 0x24 ] al
mov eax [ rw-data ]
xor ecx ecx
inc ecx
cmp eax ecx
je r-xdata
push 0x7
call sub_41cd6c
test eax eax
jne r-xdata
mov bl cl
mov [ ebp - 0x19 ] bl
mov [ rw-data ] ecx
push r--data
push r--data
call sub_424f77
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41d05b
mov esi eax
cmp [ esi ] edi
je r-xdata
push esi
call sub_41c576
pop ecx
test al al
je r-xdata
push r--data
push r--data
call sub_424f1b
pop ecx
pop ecx
mov [ rw-data ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax 0xff
jmp r-xdata
push edi
call sub_41ff16
pop ecx
call sub_41ce87
movzx eax ax
push eax
call sub_424ec8
push eax
push edi
push __pe_sfxrar_export_address_table
call sub_41b52f
mov esi eax
push edi
call sub_41ffb2
pop ecx
call sub_41ceba
test al al
jne r-xdata
push esi
call sub_41c576
pop ecx
test al al
je r-xdata
push edi
push 0x2
push edi
mov esi [ esi ]
mov ecx esi
call j_sub_420f99
call esi
push [ ebp - 0x24 ]
call sub_41c603
pop ecx
call sub_41d055
mov esi eax
xor edi edi
cmp [ esi ] edi
je r-xdata
call sub_41cba6
retn
test bl bl
jne r-xdata
push esi
call sub_4243bf
push [ esi ]
call sub_424387
pop ecx
push edi
push 0x1
call sub_41c620
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
mov eax esi
jmp r-xdata
call sub_424362
sub_41ca86
mov esp [ ebp - 0x18 ]
call sub_41ceba
test al al
jne r-xdata
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
push [ ebp - 0x20 ]
call sub_424371
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_41cba6
retn
call sub_424353
sub_41cb60
push sub_41fd30
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax

sub_41cbbb
push ebp
mov ebp esp
and [ rw-data ] 0x0
sub esp 0x2c
push ebx
xor ebx ebx
inc ebx
or [ rw-data ] ebx
push 0xa
call IsProcessorFeaturePresent
test eax eax
je r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
and [ ebp - 0x14 ] 0x0
xor eax eax
or [ rw-data ] 0x2
xor ecx ecx
push esi
push edi
mov [ rw-data ] ebx
lea edi [ ebp - 0x2c ]
push ebx
cpuid
mov esi ebx
pop ebx
mov [ edi ] eax
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0xc ] eax
xor ecx 0x49656e69
mov eax [ ebp - 0x24 ]
xor eax 0x6c65746e
or ecx eax
mov eax [ ebp - 0x28 ]
xor eax 0x756e6547
or ecx eax
neg ecx
push 0x1
pop eax
sbb cl cl
push 0x0
add cl 0x1
pop ecx
push ebx
cpuid
mov esi ebx
pop ebx
mov [ edi ] eax
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
je r-xdata
mov edi [ rw-data ]
mov eax [ ebp - 0x2c ]
and eax 0xfff3ff0
cmp eax 0x106c0
je r-xdata
pop edi
pop esi
test eax 0x100000
je r-xdata
push 0x7
pop eax
xor ecx ecx
push ebx
cpuid
mov esi ebx
pop ebx
lea ebx [ ebp - 0x2c ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] edx
mov eax [ ebp - 0x28 ]
test eax 0x200
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
je r-xdata
mov edi [ rw-data ]
or edi 0x1
mov [ rw-data ] edi
jmp r-xdata
cmp eax 0x20660
je r-xdata
or [ rw-data ] 0x4
mov [ rw-data ] 0x2
test eax 0x8000000
je r-xdata
or edi 0x2
mov [ rw-data ] edi
cmp [ ebp - 0xc ] 0x7
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x18 ] eax
jl r-xdata
cmp eax 0x20670
je r-xdata
test eax 0x10000000
je r-xdata
cmp eax 0x30650
je r-xdata
xor ecx ecx
xgetbv
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
and eax 0x6
xor ecx ecx
cmp eax 0x6
jne r-xdata
cmp eax 0x30660
je r-xdata
test ecx ecx
jne r-xdata
cmp eax 0x30670
jne r-xdata
mov eax [ rw-data ]
or eax 0x8
mov [ rw-data ] 0x3
test [ ebp - 0x14 ] 0x20
mov [ rw-data ] eax
je r-xdata
or eax 0x20
mov [ rw-data ] 0x5
mov [ rw-data ] eax
sub_41cd6c
push ebp
mov ebp esp
sub esp 0x324
push ebx
push esi
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
xor esi esi
lea eax [ ebp - 0x324 ]
push 0x2cc
push esi
push eax
mov [ rw-data ] esi
call sub_41d1e0
add esp 0xc
mov [ ebp - 0x274 ] eax
mov [ ebp - 0x278 ] ecx
mov [ ebp - 0x27c ] edx
mov [ ebp - 0x280 ] ebx
mov [ ebp - 0x284 ] esi
mov [ ebp - 0x288 ] edi
mov [ ebp - 0x25c ] ss
mov [ ebp - 0x268 ] cs
mov [ ebp - 0x28c ] ds
mov [ ebp - 0x290 ] es
mov [ ebp - 0x294 ] fs
mov [ ebp - 0x298 ] gs
pushfd
pop [ ebp - 0x264 ]
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x26c ] eax
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x260 ] eax
mov [ ebp - 0x324 ] 0x10001
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x270 ] eax
lea eax [ ebp - 0x58 ]
push esi
push eax
call sub_41d1e0
mov eax [ ebp + 0x4 ]
add esp 0xc
mov [ ebp - 0x58 ] 0x40000015
mov [ ebp - 0x54 ] 0x1
mov [ ebp - 0x4c ] eax
call [ IsDebuggerPresent@IAT ]
push esi
lea ebx [ eax - 0x1 ]
neg ebx
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x324 ]
sbb bl bl
mov [ ebp - 0x4 ] eax
inc bl
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
int 0x29
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bl
neg eax
sbb eax eax
and [ rw-data ] eax
sub_41ce87
push ebp
mov ebp esp
sub esp 0x44
push 0x44
lea eax [ ebp - 0x44 ]
push 0x0
push eax
call sub_41d1e0
add esp 0xc
lea eax [ ebp - 0x44 ]
push eax
call [ GetStartupInfoW@IAT ]
test [ ebp - 0x18 ] 0x1
je r-xdata
push 0xa
pop eax
movzx eax [ ebp - 0x14 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_41ceba
push 0x0
call [ GetModuleHandleW@IAT ]
mov ecx eax
test ecx ecx
jne r-xdata
mov eax 0x5a4d
cmp [ ecx ] ax
jne r-xdata
xor al al
retn
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
jne r-xdata
cmp [ eax + 0x74 ] 0xe
jbe r-xdata
cmp [ eax + 0xe8 ] 0x0
setne al
retn
sub_41cf0a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_423fbe
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
je r-xdata
sub_41cf53
push ebp
mov ebp esp
sub esp 0x14
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
mov eax [ rw-data ]
push esi
push edi
mov edi 0xbb40e64e
mov esi 0xffff0000
cmp eax edi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
xor eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
call [ GetCurrentThreadId@IAT ]
xor [ ebp - 0x4 ] eax
call [ GetCurrentProcessId@IAT ]
xor [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
xor ecx [ ebp - 0x14 ]
xor ecx [ ebp - 0x4 ]
xor ecx eax
cmp ecx edi
jne r-xdata
test esi eax
je r-xdata
test esi ecx
jne r-xdata
mov ecx 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] ecx
not ecx
mov [ rw-data ] ecx
mov eax ecx
or eax 0x4711
shl eax 0x10
or ecx eax
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_41d061
push ebx
push esi
mov esi r--data
mov ebx r--data
cmp esi ebx
jae r-xdata
pop esi
pop ebx
retn
push edi
add esi 0x4
cmp esi ebx
jb r-xdata
mov ecx edi
call j_sub_420f99
call edi
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
sub_41d08c
push ebx
push esi
mov esi r--data
mov ebx r--data
cmp esi ebx
jae r-xdata
pop esi
pop ebx
retn
push edi
add esi 0x4
cmp esi ebx
jb r-xdata
mov ecx edi
call j_sub_420f99
call edi
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
sub_41d0df
push ebp
mov ebp esp
sub esp 0x324
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x324 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov [ eax + rw-data ] 0x2
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push 0x4
pop eax
shl eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push r--data
call sub_41d0b7
mov esp ebp
pop ebp
retn
push 0x2
pop ecx
int 0x29
sub_41d1e0
mov ecx [ esp + 0xc ]
movzx eax [ esp + 0x8 ]
mov edx edi
mov edi [ esp + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x4 ]
mov edi edx
retn
imul eax eax 0x1010101
cmp ecx 0x20
jle r-xdata
test ecx 0x3
je r-xdata
cmp ecx 0x80
jl r-xdata
test ecx 0x4
je r-xdata
mov [ edi ] al
inc edi
sub ecx 0x1
test ecx 0x3
jne r-xdata
bt [ rw-data ] 0x1
jae r-xdata
bt [ rw-data ] 0x1
jae r-xdata
test ecx 0xfffffff8
je r-xdata
mov [ edi ] eax
add edi 0x4
sub ecx 0x4
movd xmm0 eax
pshufd xmm0 xmm0 0x0
bt [ rw-data ] 0x1
jae r-xdata
[ edi ]
mov eax [ esp + 0x4 ]
mov edi edx
retn
lea esp [ esp ]
lea ebx [ ebx ]
lea edi [ ecx + edi - 0x20 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm0
mov eax [ esp + 0x4 ]
mov edi edx
retn
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm0
add edi 0x20
sub ecx 0x20
cmp ecx 0x20
jae r-xdata
movd xmm0 eax
pshufd xmm0 xmm0 0x0
add ecx edi
movups [ edi ] xmm0
add edi 0x10
and edi 0xfffffff0
sub ecx edi
cmp ecx 0x80
jle r-xdata
mov [ edi ] eax
mov [ edi + 0x4 ] eax
add edi 0x8
sub ecx 0x8
test ecx 0xfffffff8
jne r-xdata
test ecx 0x1f
je r-xdata
lea esp [ esp ]
lea esp [ esp ]
nop
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
sub ecx 0x80
test ecx 0xffffff00
jne r-xdata
jmp r-xdata
cmp ecx 0x20
jb r-xdata
sub_41d33a
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
lea ecx [ ebp - 0x18 ]
and [ ebp - 0x18 ] 0x0
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_41d576
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_4201c0
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
mov esp ebp
pop ebp
retn
sub_41d39a
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x34 ] sub_41d63b
mov eax [ rw-data ]
lea ecx [ ebp - 0x38 ]
xor eax ecx
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x20 ] eax
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x1c ] esp
mov [ ebp - 0x18 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x8 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
call sub_4200c5
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
call [ r--data ]
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x4 ]
pop ecx
pop ecx
and [ ebp - 0x8 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x38 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
sub_41d477
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0xc ]
mov edx ecx
mov ebx [ edi + 0x10 ]
mov [ ebp - 0x4 ] ecx
test esi esi
js r-xdata
mov eax [ ebp + 0x14 ]
inc ecx
mov [ eax ] ecx
mov eax [ ebp + 0x18 ]
mov [ eax ] edx
cmp edx [ edi + 0xc ]
ja r-xdata
imul eax ecx 0x14
add eax 0x8
add eax ebx
call sub_423fbe
cmp ecx edx
ja r-xdata
mov edi [ ebp + 0x10 ]
sub eax 0x14
dec ecx
cmp [ eax - 0x4 ] edi
mov edi [ ebp + 0x8 ]
jge r-xdata
imul eax ecx 0x14
pop edi
pop esi
add eax ebx
pop ebx
mov esp ebp
pop ebp
retn
cmp ecx 0xffffffff
jne r-xdata
mov edi [ ebp + 0x10 ]
cmp edi [ eax ]
mov edi [ ebp + 0x8 ]
jle r-xdata
test esi esi
jns r-xdata
mov edx [ ebp - 0x4 ]
dec esi
mov [ ebp - 0x4 ] ecx
cmp ecx 0xffffffff
je r-xdata
sub_41d4ef
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_41d521
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call [ RtlUnwind@IAT ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41d576
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_41cabf
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_420e0f
add esp 0x20
pop esi
pop ebp
retn
sub_41d5a7
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] ecx
call sub_4200c5
mov ecx [ eax + 0x24 ]
mov [ esi + 0x4 ] ecx
call sub_4200c5
mov [ eax + 0x24 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_41d5cb
push ebp
mov ebp esp
push esi
call sub_4200c5
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x24 ]
jne r-xdata
call sub_4200c5
mov ecx [ eax + 0x24 ]
jmp r-xdata
call sub_4200c5
lea ecx [ eax + 0x24 ]
mov eax [ esi + 0x4 ]
mov [ ecx ] eax
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp esi eax
je r-xdata
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx eax
call sub_423fbe
pop esi
pop ebp
retn
sub_41d615
push ebp
mov ebp esp
call sub_4200c5
mov eax [ eax + 0x24 ]
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_41d63b
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_41cabf
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_420e0f
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_41d39a
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41d521
pop ebx
mov esp ebp
pop ebp
retn
sub_41d6da
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420e0f
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_41d710
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
mov eax ebx
push esi
sub eax 0x0
je r-xdata
xor eax eax
sub eax 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
mov eax [ ebp + 0xc ]
movzx eax [ eax ]
jmp r-xdata
sub eax 0x1
je r-xdata
sub ecx eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx ecx [ edx ]
movzx eax [ esi ]
sub ecx eax
je r-xdata
sub eax 0x1
je r-xdata
mov eax ecx
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
movzx ecx [ edx + 0x1 ]
movzx eax [ esi + 0x1 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx ecx [ edx ]
movzx eax [ esi ]
sub ecx eax
je r-xdata
mov edx [ ebp + 0xc ]
sub eax 0x1
je r-xdata
pop esi
pop ebx
pop ebp
retn
movzx ecx [ edx + 0x1 ]
movzx eax [ esi + 0x1 ]
sub ecx eax
je r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx eax [ edx ]
movzx esi [ ecx ]
sub esi eax
je r-xdata
mov esi [ ebp + 0x8 ]
push edi
cmp ebx 0x20
jb r-xdata
movzx ecx [ edx + 0x2 ]
movzx eax [ esi + 0x2 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1 ]
movzx eax [ edx + 0x1 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
add esi ebx
add edx ebx
cmp ebx 0x1f
ja r-xdata
mov eax [ esi ]
cmp eax [ edx ]
je r-xdata
movzx esi [ ecx + 0x2 ]
movzx eax [ edx + 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
jmp [ ebx * 4 + jump_table_41ee10 ]
xor ecx ecx
movzx edi al
movzx eax [ edx ]
sub edi eax
je r-xdata
movzx ecx [ ecx + 0x3 ]
movzx eax [ edx + 0x3 ]
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ esi - 0x1c ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ esi - 0x18 ]
cmp eax [ edx - 0x18 ]
je r-xdata
mov eax [ esi - 0x14 ]
cmp eax [ edx - 0x14 ]
je r-xdata
mov eax [ esi - 0x10 ]
cmp eax [ edx - 0x10 ]
je r-xdata
mov eax [ esi - 0xc ]
cmp eax [ edx - 0xc ]
je r-xdata
mov eax [ esi - 0x8 ]
cmp eax [ edx - 0x8 ]
je r-xdata
mov eax [ esi - 0x4 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ esi - 0x1d ]
cmp eax [ edx - 0x1d ]
je r-xdata
mov eax [ esi - 0x19 ]
cmp eax [ edx - 0x19 ]
je r-xdata
mov eax [ esi - 0x15 ]
cmp eax [ edx - 0x15 ]
je r-xdata
mov eax [ esi - 0x11 ]
cmp eax [ edx - 0x11 ]
je r-xdata
mov eax [ esi - 0xd ]
cmp eax [ edx - 0xd ]
je r-xdata
mov eax [ esi - 0x9 ]
cmp eax [ edx - 0x9 ]
je r-xdata
mov eax [ esi - 0x5 ]
cmp eax [ edx - 0x5 ]
je r-xdata
movzx eax [ edx - 0x1 ]
movzx ecx [ esi - 0x1 ]
sub ecx eax
je r-xdata
mov eax [ esi - 0x1e ]
cmp eax [ edx - 0x1e ]
je r-xdata
mov eax [ esi - 0x1a ]
cmp eax [ edx - 0x1a ]
je r-xdata
mov eax [ esi - 0x16 ]
cmp eax [ edx - 0x16 ]
je r-xdata
mov eax [ esi - 0x12 ]
cmp eax [ edx - 0x12 ]
je r-xdata
mov eax [ esi - 0xe ]
cmp eax [ edx - 0xe ]
je r-xdata
mov eax [ esi - 0xa ]
cmp eax [ edx - 0xa ]
je r-xdata
mov eax [ esi - 0x6 ]
cmp eax [ edx - 0x6 ]
je r-xdata
mov ax [ esi - 0x2 ]
cmp ax [ edx - 0x2 ]
je r-xdata
mov eax [ esi - 0x1f ]
cmp eax [ edx - 0x1f ]
je r-xdata
mov eax [ esi - 0x1b ]
cmp eax [ edx - 0x1b ]
je r-xdata
mov eax [ esi - 0x17 ]
cmp eax [ edx - 0x17 ]
je r-xdata
mov eax [ esi - 0x13 ]
cmp eax [ edx - 0x13 ]
je r-xdata
mov eax [ esi - 0xf ]
cmp eax [ edx - 0xf ]
je r-xdata
mov eax [ esi - 0xb ]
cmp eax [ edx - 0xb ]
je r-xdata
mov eax [ esi - 0x7 ]
cmp eax [ edx - 0x7 ]
je r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
mov eax ecx
pop edi
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
movzx edi [ esi + 0x1 ]
movzx eax [ edx + 0x1 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xc ]
movzx edi [ esi - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0x9 ]
movzx edi [ esi - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xa ]
movzx edi [ esi - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
jmp r-xdata
xor ecx ecx
movzx eax [ edx - 0x1f ]
movzx edi [ esi - 0x1f ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xf ]
movzx edi [ esi - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
movzx eax [ edx - 0x2 ]
movzx edi [ esi - 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x4 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x2 ]
movzx eax [ edx + 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1d ]
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx eax [ edx - 0x9 ]
movzx edi [ esi - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1e ]
movzx eax [ edx - 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ edx + 0x8 ]
je r-xdata
movzx edi [ esi + 0x5 ]
movzx eax [ edx + 0x5 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x3 ]
movzx eax [ edx + 0x3 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x2 ]
movzx eax [ edx - 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx eax [ edx - 0x8 ]
movzx edi [ esi - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1d ]
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x8 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x6 ]
movzx eax [ edx + 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
movzx ecx [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1 ]
movzx eax [ edx - 0x1 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x2 ]
movzx eax [ edx - 0x2 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx eax [ edx - 0x7 ]
movzx ecx [ esi - 0x7 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax [ edx + 0xc ]
je r-xdata
movzx edi [ esi + 0x9 ]
movzx eax [ edx + 0x9 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x7 ]
movzx eax [ edx + 0x7 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0xc ]
sub edi eax
je r-xdata
movzx edi [ esi + 0xa ]
movzx eax [ edx + 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ edx + 0x10 ]
je r-xdata
movzx edi [ esi + 0xd ]
movzx eax [ edx + 0xd ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0xb ]
movzx eax [ edx + 0xb ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx eax [ edx + 0x10 ]
movzx edi [ esi + 0x10 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0xe ]
movzx eax [ edx + 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax [ edx + 0x14 ]
je r-xdata
movzx edi [ esi + 0x11 ]
movzx eax [ edx + 0x11 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0xf ]
movzx eax [ edx + 0xf ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x14 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x12 ]
movzx eax [ edx + 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax [ edx + 0x18 ]
je r-xdata
movzx edi [ esi + 0x15 ]
movzx eax [ edx + 0x15 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x13 ]
movzx eax [ edx + 0x13 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x18 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x16 ]
movzx eax [ edx + 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x1c ]
cmp eax [ edx + 0x1c ]
je r-xdata
movzx edi [ esi + 0x19 ]
movzx eax [ edx + 0x19 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x17 ]
movzx eax [ edx + 0x17 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x1c ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x1a ]
movzx eax [ edx + 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
push 0x20
pop ecx
sub ebx ecx
add esi ecx
add edx ecx
cmp ebx ecx
jae r-xdata
movzx edi [ esi + 0x1d ]
movzx eax [ edx + 0x1d ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x1b ]
movzx eax [ edx + 0x1b ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi + 0x1e ]
movzx eax [ edx + 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
movzx ecx [ esi + 0x1f ]
movzx eax [ edx + 0x1f ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
sub_41ee90
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x20
jb r-xdata
cmp edi eax
jb r-xdata
and ecx 0x1f
je r-xdata
cmp ecx 0x80
jae r-xdata
lea esi [ ecx + esi ]
lea edi [ ecx + edi ]
cmp ecx 0x20
jb r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax ecx
shr ecx 0x2
je r-xdata
bt [ rw-data ] 0x1
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
test ecx 0xfffffffc
je r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
add edi 0x4
add esi 0x4
sub ecx 0x1
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
[ edi ] [ esi ]
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test ecx ecx
je r-xdata
jmp r-xdata
test ecx ecx
je r-xdata
sub edi 0x4
sub esi 0x4
mov eax [ esi ]
mov [ edi ] eax
sub ecx 0x4
test ecx 0xfffffffc
jne r-xdata
test edi 0xf
je r-xdata
test edi 0x3
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov edx ecx
shr edx 0x5
test edx edx
je r-xdata
test edi 0x3
je r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
sub edi 0x1
sub esi 0x1
mov al [ esi ]
mov [ edi ] al
sub ecx 0x1
jne r-xdata
cmp ecx 0x80
jb r-xdata
dec ecx
dec esi
dec edi
mov al [ esi ]
mov [ edi ] al
test edi 0xf
jne r-xdata
cmp ecx 0x20
jb r-xdata
mov edx edi
and edx 0x3
sub ecx edx
lea esp [ esp ]
lea ecx [ ecx ]
test edi 0x3
jne r-xdata
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
lea ebx [ ebx ]
mov edx ecx
cmp ecx 0x20
jb r-xdata
mov al [ esi ]
mov [ edi ] al
dec ecx
add esi 0x1
add edi 0x1
test edi 0x3
jne r-xdata
cmp ecx 0x20
jb r-xdata
sub esi 0x80
sub edi 0x80
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu xmm2 [ esi + 0x20 ]
movdqu xmm3 [ esi + 0x30 ]
movdqu xmm4 [ esi + 0x40 ]
movdqu xmm5 [ esi + 0x50 ]
movdqu xmm6 [ esi + 0x60 ]
movdqu xmm7 [ esi + 0x70 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
movdqu [ edi + 0x20 ] xmm2
movdqu [ edi + 0x30 ] xmm3
movdqu [ edi + 0x40 ] xmm4
movdqu [ edi + 0x50 ] xmm5
movdqu [ edi + 0x60 ] xmm6
movdqu [ edi + 0x70 ] xmm7
sub ecx 0x80
test ecx 0xffffff80
jne r-xdata
mov edx ecx
shr ecx 0x2
and edx 0x3
sub esi 0x4
sub edi 0x4
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + r-xdata ]
mov al [ esi - 0x1 ]
mov [ edi - 0x1 ] al
dec esi
dec edi
sub edx 0x1
jne r-xdata
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
lea esi [ esi + 0x20 ]
lea edi [ edi + 0x20 ]
dec edx
jne r-xdata
shr ecx 0x2
[ edi ] [ esi ]
and edx 0x3
jmp [ edx * 4 + r-xdata ]
sub esi 0x20
sub edi 0x20
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
sub ecx 0x20
test ecx 0xffffffe0
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
lea esp [ esp ]
mov edi edi
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov edi edi
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + r-xdata ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_41f404
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] edi
test edi edi
je r-xdata
test [ edi ] 0x10
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test [ edi ] 0x8
je r-xdata
mov ecx [ ebx ]
sub ecx 0x4
push ecx
mov eax [ ecx ]
mov esi [ eax + 0x20 ]
mov ecx esi
mov edi [ eax + 0x18 ]
call j_sub_420f99
call esi
mov [ ebp - 0xc ] 0x1994000
sub_41f472
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
mov ecx [ ebx + 0x8 ]
sub esp 0x20
cmp [ rw-data ] 0x1
mov dx [ ebx + 0xc ]
jl r-xdata
movzx eax [ ecx ]
test ax ax
jne r-xdata
movzx eax dx
movd xmm0 eax
pshuflw xmm0 xmm0 0x0
pshufd xmm2 xmm0 0x0
cmp ax dx
je r-xdata
xor eax eax
cmp [ ecx ] dx
setne al
dec eax
and eax ecx
jmp r-xdata
movzx eax [ ecx ]
cmp ax dx
je r-xdata
movups xmm0 [ ecx ]
pxor xmm1 xmm1
pcmpeqw xmm1 xmm0
pcmpeqw xmm0 xmm2
por xmm1 xmm0
pmovmskb eax xmm1
test eax eax
jne r-xdata
add ecx 0x2
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
mov eax ecx
test ax ax
je r-xdata
bsf eax eax
mov [ ebp - 0x4 ] eax
add ecx eax
jmp r-xdata
add ecx 0x10
jmp r-xdata
xor eax eax
jmp r-xdata
add ecx 0x2
jmp r-xdata
mov eax ecx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
sub_41f520
cmp [ rw-data ] 0x1
jb r-xdata
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
movzx eax [ esp + 0x8 ]
mov edx eax
shl eax 0x8
or edx eax
movd xmm3 edx
pshuflw xmm3 xmm3 0x0
movlhps xmm3 xmm3
mov edx [ esp + 0x4 ]
mov ecx 0xf
or eax 0xffffffff
and ecx edx
shl eax cl
sub edx ecx
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
bsf eax ecx
add eax edx
movd edx xmm3
xor ecx ecx
cmp dl [ eax ]
cmovne eax ecx
retn
or eax 0xffffffff
add edx 0x10
jmp r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
movdqu xmm1 [ edx ]
pxor xmm2 xmm2
pcmpeqb xmm2 xmm1
pcmpeqb xmm1 xmm3
por xmm2 xmm1
pmovmskb ecx xmm2
and ecx eax
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_41f64b
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] 0x2
jge r-xdata
mov edx [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx ecx
lea eax [ edx + 0x1 ]
test al 0xe
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
mov ax [ ebp + 0xc ]
movzx eax [ edx ]
cmp ax cx
jne r-xdata
xor eax eax
cmp ax cx
jne r-xdata
cmp [ ecx ] ax
jne r-xdata
cmp [ ecx ] ax
jne r-xdata
test ax ax
je r-xdata
mov esi edx
movzx eax cx
movd xmm0 eax
mov eax 0xffff0001
movd xmm1 eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ecx
jmp r-xdata
sub ecx 0x2
cmp ecx edx
je r-xdata
mov eax esi
add edx 0x2
je r-xdata
lea esi [ edx + ecx * 2 ]
movups xmm0 [ edx ]
pcmpistri xmm1 xmm0 0x15
jne r-xdata
pop esi
pop ebp
retn
add edx 0x10
jmp r-xdata
add edx 0x10
lea eax [ edx + ecx * 2 ]
jmp r-xdata
pcmpistri xmm0 [ edx ] 0x41
jae r-xdata
sub_41f6f0
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x20
jb r-xdata
cmp edi eax
jb r-xdata
and ecx 0x1f
je r-xdata
cmp ecx 0x80
jae r-xdata
lea esi [ ecx + esi ]
lea edi [ ecx + edi ]
cmp ecx 0x20
jb r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax ecx
shr ecx 0x2
je r-xdata
bt [ rw-data ] 0x1
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
test ecx 0xfffffffc
je r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
add edi 0x4
add esi 0x4
sub ecx 0x1
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
[ edi ] [ esi ]
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test ecx ecx
je r-xdata
jmp r-xdata
test ecx ecx
je r-xdata
sub edi 0x4
sub esi 0x4
mov eax [ esi ]
mov [ edi ] eax
sub ecx 0x4
test ecx 0xfffffffc
jne r-xdata
test edi 0xf
je r-xdata
test edi 0x3
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov edx ecx
shr edx 0x5
test edx edx
je r-xdata
test edi 0x3
je r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
sub edi 0x1
sub esi 0x1
mov al [ esi ]
mov [ edi ] al
sub ecx 0x1
jne r-xdata
cmp ecx 0x80
jb r-xdata
dec ecx
dec esi
dec edi
mov al [ esi ]
mov [ edi ] al
test edi 0xf
jne r-xdata
cmp ecx 0x20
jb r-xdata
mov edx edi
and edx 0x3
sub ecx edx
lea esp [ esp ]
lea ecx [ ecx ]
test edi 0x3
jne r-xdata
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
lea ebx [ ebx ]
mov edx ecx
cmp ecx 0x20
jb r-xdata
mov al [ esi ]
mov [ edi ] al
dec ecx
add esi 0x1
add edi 0x1
test edi 0x3
jne r-xdata
cmp ecx 0x20
jb r-xdata
sub esi 0x80
sub edi 0x80
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu xmm2 [ esi + 0x20 ]
movdqu xmm3 [ esi + 0x30 ]
movdqu xmm4 [ esi + 0x40 ]
movdqu xmm5 [ esi + 0x50 ]
movdqu xmm6 [ esi + 0x60 ]
movdqu xmm7 [ esi + 0x70 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
movdqu [ edi + 0x20 ] xmm2
movdqu [ edi + 0x30 ] xmm3
movdqu [ edi + 0x40 ] xmm4
movdqu [ edi + 0x50 ] xmm5
movdqu [ edi + 0x60 ] xmm6
movdqu [ edi + 0x70 ] xmm7
sub ecx 0x80
test ecx 0xffffff80
jne r-xdata
mov edx ecx
shr ecx 0x2
and edx 0x3
sub esi 0x4
sub edi 0x4
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + r-xdata ]
mov al [ esi - 0x1 ]
mov [ edi - 0x1 ] al
dec esi
dec edi
sub edx 0x1
jne r-xdata
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
lea esi [ esi + 0x20 ]
lea edi [ edi + 0x20 ]
dec edx
jne r-xdata
shr ecx 0x2
[ edi ] [ esi ]
and edx 0x3
jmp [ edx * 4 + r-xdata ]
sub esi 0x20
sub edi 0x20
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
sub ecx 0x20
test ecx 0xffffffe0
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
lea esp [ esp ]
mov edi edi
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov edi edi
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + r-xdata ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_41fc64
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ edi ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] 0x0
mov ecx [ edi ]
test ecx ecx
je r-xdata
lea edx [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ebx
push esi
lea ebx [ ecx + 0x1 ]
push ebx
call sub_422c59
mov esi eax
pop ecx
test esi esi
je r-xdata
push esi
call j_sub_4251ac#3
pop ecx
pop esi
pop ebx
jmp r-xdata
push [ edi ]
push ebx
push esi
call sub_425152
mov eax [ ebp + 0xc ]
mov ecx esi
add esp 0xc
xor esi esi
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop edi
pop ebp
retn
sub_41fcc7
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
pop esi
pop ebp
retn
push [ esi ]
call j_sub_4251ac#3
pop ecx
sub_41fcf0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0xc ]
add ecx edi
xor ecx [ eax + edi ]
pop edi
pop esi
pop ebp
jmp sub_41cabf
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_41cabf
sub_41fd30
push ebp
mov ebp esp
sub esp 0x1c
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov eax [ ebx + 0x8 ]
lea esi [ ebx + 0x10 ]
xor eax [ rw-data ]
push esi
push eax
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x8 ] eax
call sub_41fcf0
mov edi [ ebp + 0x10 ]
push edi
call sub_420f99
mov eax [ ebp + 0x8 ]
add esp 0xc
test [ eax + 0x4 ] 0x66
jne r-xdata
cmp [ ebx + 0xc ] 0xfffffffe
je r-xdata
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
mov [ ebp - 0x18 ] edi
mov edi [ ebx + 0xc ]
mov [ ebx - 0x4 ] eax
cmp edi 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push esi
mov ecx ebx
mov edx 0xfffffffe
call sub_4210e7
mov ecx [ ebp - 0x8 ]
lea eax [ edi + 0x2 ]
lea eax [ edi + eax * 2 ]
mov ebx [ ecx + eax * 4 ]
lea eax [ ecx + eax * 4 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x14 ] eax
test ecx ecx
je r-xdata
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_42109e
mov cl 0x1
mov [ ebp - 0x1 ] cl
test eax eax
js r-xdata
test cl cl
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jle r-xdata
jmp r-xdata
push esi
push [ ebp - 0x8 ]
call sub_41fcf0
add esp 0x8
mov edi ebx
cmp ebx 0xfffffffe
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_4210ce
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] edi
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
push esi
push [ ebp - 0x8 ]
mov [ eax + 0xc ] ebx
call sub_41fcf0
mov ecx [ ebp - 0x14 ]
add esp 0x8
mov edx esi
mov ecx [ ecx + 0x8 ]
call sub_4210b5
int3
jmp r-xdata
push r--data
call sub_42e6d0
add esp 0x4
test eax eax
je r-xdata
push rw-data
push esi
mov edx edi
mov ecx eax
call sub_4210e7
mov eax [ ebp + 0xc ]
mov esi [ r--data ]
mov ecx esi
push 0x1
push [ ebp + 0x8 ]
call j_sub_420f99
call esi
mov esi [ ebp - 0x10 ]
add esp 0x8
sub_41fe8a
call sub_421517
call sub_4214c1
call sub_4210fe
test al al
jne r-xdata
call sub_420165
test al al
jne r-xdata
xor al al
retn
call sub_42004e
mov al 0x1
retn
call sub_42113a
jmp r-xdata
sub_41feb8
push ebp
mov ebp esp
call sub_420061
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov al 0x1
pop ebp
retn
call sub_420198
call sub_42113a
push 0x0
call sub_4214e5
pop ecx
sub_41fedc
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
push esi
push edi
push [ ebp + 0x8 ]
call [ GetModuleFileNameW@IAT ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
retn
test eax eax
jne r-xdata
cmp eax esi
jne r-xdata
xor ecx ecx
mov [ edi ] cx
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ edi + esi * 2 - 0x2 ] ax
sub_41ff16
push ebp
mov ebp esp
sub esp 0x24c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20c ]
push 0x104
push ecx
push eax
call sub_41fedc
add esp 0xc
cmp [ rw-data ] 0x5
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_41cabf
mov esp ebp
pop ebp
retn
push edi
push 0x2000
push 0x0
mov edi rw-data
push edi
call sub_40119b
add esp 0xc
test al al
je r-xdata
pop edi
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_4010a7
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x21c ]
push eax
call sub_4010df
lea eax [ ebp - 0x24c ]
push eax
push 0x4
push 0x0
push 0x0
push r--data
push edi
call sub_4011d7
add esp 0x28
sub_41ffb2
push ebp
mov ebp esp
sub esp 0x24c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20c ]
push 0x104
push ecx
push eax
call sub_41fedc
add esp 0xc
cmp [ rw-data ] 0x5
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_41cabf
mov esp ebp
pop ebp
retn
push edi
push 0x2000
push 0x0
mov edi rw-data
push edi
call sub_40119b
add esp 0xc
test al al
je r-xdata
pop edi
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_4010a7
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x21c ]
push eax
call sub_4010df
lea eax [ ebp - 0x24c ]
push eax
push 0x4
push 0x0
push 0x0
push r--data
push edi
call sub_4011d7
add esp 0x28
sub_42006d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
cmp eax ecx
jne r-xdata
add ecx 0x5
add eax 0x5
xor eax eax
pop ebp
retn
sbb eax eax
or eax 0x1
pop ebp
retn
test dl dl
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
jmp r-xdata
sub_4200d3
cmp [ rw-data ] 0xffffffff
jne r-xdata
push ebx
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_421404
mov ebx eax
pop ecx
cmp ebx 0xffffffff
je r-xdata
xor eax eax
retn
xor ebx ebx
jmp r-xdata
test ebx ebx
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax ebx
pop ebx
retn
push 0xffffffff
push [ rw-data ]
call sub_42143e
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push 0x28
push 0x1
call sub_425277
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
xor ebx ebx
push ebx
push [ rw-data ]
call sub_42143e
pop ecx
pop ecx
jmp r-xdata
push esi
push [ rw-data ]
call sub_42143e
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_4251ac
pop ecx
pop esi
mov ebx esi
xor esi esi
sub_420165
push sub_4200a9
call sub_421390
mov [ rw-data ] eax
pop ecx
cmp eax 0xffffffff
jne r-xdata
push rw-data
push eax
call sub_42143e
pop ecx
pop ecx
test eax eax
jne r-xdata
xor al al
retn
mov al 0x1
retn
call sub_420198
jmp r-xdata
sub_4201c0
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_42164c
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_42164c
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_42020c
push 0x8
push r--data
call sub_41cb60
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_41cba6
retn
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
mov edx [ ecx + 0x4 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
test [ ecx ] 0x10
je r-xdata
and [ ebp - 0x4 ] 0x0
push edx
push [ eax + 0x18 ]
call sub_420b12
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
mov eax [ eax + 0x18 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ecx
mov esi [ eax + 0x8 ]
mov ecx esi
call j_sub_420f99
call esi
sub_4202d3
push ebp
mov ebp esp
push esi
mov esi ecx
lea eax [ esi + 0x4 ]
mov [ esi ] r--data
push eax
call sub_41fcc7
test [ ebp + 0x8 ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0xc
push esi
call sub_41c15e
pop ecx
pop ecx
sub_420300
push 0x38
push r--data
call sub_41cb60
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
and [ ebp - 0x3c ] 0x0
mov ebx [ ebp + 0xc ]
mov eax [ ebx - 0x4 ]
mov [ ebp - 0x2c ] eax
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_41d5a7
pop ecx
pop ecx
mov [ ebp - 0x30 ] eax
call sub_4200c5
mov eax [ eax + 0x10 ]
mov [ ebp - 0x34 ] eax
call sub_4200c5
mov eax [ eax + 0x14 ]
mov [ ebp - 0x38 ] eax
call sub_4200c5
mov [ eax + 0x10 ] edi
call sub_4200c5
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x14 ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
call sub_41d33a
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x40 ] 0x0
call sub_42043b
mov eax ebx
call sub_41cba6
retn
sub_420394
mov esp [ ebp - 0x18 ]
call sub_4200c5
and [ eax + 0x20 ] 0x0
mov edx [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
cmp [ edx + 0x4 ] 0x80
jg r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ ebx + 0x8 ]
jmp r-xdata
push eax
push edx
push 0x0
push ebx
call sub_420d47
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x40 ] 0x0
call sub_42043b
mov eax ebx
call sub_41cba6
retn
imul ebx ecx 0x14
mov [ ebp - 0x24 ] ebx
cmp eax [ ebx + edi + 0x4 ]
mov ebx [ ebp + 0xc ]
jle r-xdata
mov [ ebp - 0x20 ] eax
mov edi [ edx + 0x10 ]
xor ecx ecx
mov [ ebp - 0x28 ] ecx
cmp [ edx + 0xc ] ecx
jbe r-xdata
inc ecx
mov [ ebp - 0x28 ] ecx
cmp ecx [ edx + 0xc ]
jb r-xdata
mov ebx [ ebp - 0x24 ]
cmp eax [ ebx + edi + 0x8 ]
mov ebx [ ebp + 0xc ]
jg r-xdata
imul eax ecx 0x14
mov eax [ eax + edi + 0x4 ]
inc eax
mov [ ebp - 0x20 ] eax
mov ecx [ edx + 0x8 ]
mov eax [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
sub_42043b
mov eax [ ebp - 0x2c ]
mov [ ebx - 0x4 ] eax
push [ ebp - 0x30 ]
call sub_41d5cb
pop ecx
call sub_4200c5
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x10 ] ecx
call sub_4200c5
mov ecx [ ebp - 0x38 ]
mov [ eax + 0x14 ] ecx
cmp [ edi ] 0xe06d7363
jne r-xdata
mov ebx [ ebp - 0x1c ]
cmp [ edi + 0x10 ] 0x3
jne r-xdata
cmp [ edi + 0x14 ] 0x19930520
je r-xdata
mov ebx [ ebp - 0x1c ]
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
cmp [ edi + 0x14 ] 0x19930521
je r-xdata
retn
test ebx ebx
je r-xdata
cmp [ edi + 0x14 ] 0x19930522
jne r-xdata
push [ edi + 0x18 ]
call sub_41d615
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x40 ] 0x0
setne al
movzx eax al
push eax
push edi
call sub_42020c
pop ecx
pop ecx
jmp r-xdata
sub_4204f6
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push edi
push [ ebp + 0x8 ]
call sub_420b3e
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop ebp
retn
push edi
push eax
call sub_41d4ef
call sub_41d521
push esi
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_420d47
mov eax [ esi + 0x4 ]
inc eax
push 0x100
push [ ebp + 0x28 ]
mov [ edi + 0x8 ] eax
mov eax [ ebp + 0x1c ]
push [ eax + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_420300
add esp 0x2c
pop esi
test eax eax
je r-xdata
sub_420571
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_4200c5
xor ecx ecx
inc ecx
mov [ eax + 0x20 ] ecx
mov eax ecx
pop ebp
retn
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
sub_4205bb
push ebp
mov ebp esp
sub esp 0x44
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x1 ] 0x0
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ ebx + 0x8 ]
jmp r-xdata
call sub_423fbe
cmp eax [ edi + 0x4 ]
jge r-xdata
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0xe06d7363
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_4200c5
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push eax
push edi
push [ ebp + 0x14 ]
push ecx
push ebx
push esi
call sub_42091c
add esp 0x20
cmp [ esi ] 0xe06d7363
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_4200c5
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
call sub_4200c5
mov esi [ eax + 0x10 ]
call sub_4200c5
mov [ ebp - 0x24 ] 0x1
mov eax [ eax + 0x14 ]
mov [ ebp - 0xc ] eax
test esi esi
je r-xdata
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ esi ] 0xe06d7363
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ ebp - 0x14 ]
push ecx
push eax
push [ ebp + 0x20 ]
push edi
call sub_41d477
mov edx [ ebp - 0x14 ]
add esp 0x14
cmp edx [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
call sub_4200c5
cmp [ eax + 0x1c ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_42020c
pop ecx
pop ecx
lea ecx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4200c5
mov eax [ eax + 0x1c ]
mov [ ebp - 0x20 ] eax
call sub_4200c5
push [ ebp - 0x20 ]
push esi
and [ eax + 0x1c ] 0x0
call sub_420a37
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc edx
add ecx 0x14
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x20 ] ecx
cmp edx [ ebp - 0x2c ]
jb r-xdata
cmp eax [ ecx - 0xc ]
jg r-xdata
push [ ebp - 0x20 ]
call sub_420ad3
pop ecx
test al al
je r-xdata
cmp [ esi + 0x1c ] 0x0
je r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0x1c ] 0x0
jne r-xdata
lea edi [ ecx - 0x10 ]
mov [ ebp - 0x38 ] edi
mov edi [ ebp + 0x18 ]
cmp [ ecx - 0x10 ] eax
jg r-xdata
mov ebx [ ecx ]
mov [ ebp - 0x10 ] ebx
mov ebx [ ecx - 0x4 ]
test ebx ebx
mov [ ebp - 0x18 ] ebx
mov ebx [ ebp + 0xc ]
jle r-xdata
jmp r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
test [ edi + 0x20 ] 0x4
jne r-xdata
test [ edi + 0x20 ] 0x4
je r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
mov ecx [ eax ]
lea edx [ eax + 0x4 ]
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] edx
push 0x1
push esi
call sub_42020c
pop ecx
pop ecx
lea ecx [ ebp - 0x44 ]
call sub_4202bb
push r--data
lea eax [ ebp - 0x44 ]
push eax
call sub_41f404
push [ edi + 0x1c ]
push esi
call sub_420a37
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
add [ ebp - 0x10 ] 0x10
dec eax
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
push [ esi + 0x1c ]
push [ edx ]
push [ ebp - 0x10 ]
call sub_420f0b
add esp 0xc
test eax eax
jne r-xdata
call sub_4200c5
call sub_4200c5
call sub_4200c5
mov [ eax + 0x10 ] esi
call sub_4200c5
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp - 0xc ]
push esi
mov [ eax + 0x14 ] ecx
jne r-xdata
mov edx [ ebp - 0x14 ]
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x34 ]
jmp r-xdata
push [ ebp - 0x24 ]
mov eax [ ebp - 0x1c ]
push [ ebp + 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x20 ]
push [ ebp - 0x38 ]
push [ eax ]
push [ ebp - 0x10 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push ebx
push esi
call sub_4204f6
add esp 0x2c
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x1c ]
dec eax
add edx 0x4
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x1c ] edx
test eax eax
jg r-xdata
push [ ebp + 0x24 ]
push ebx
jmp r-xdata
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x28 ] ecx
test ecx ecx
jle r-xdata
mov eax [ ebp - 0x18 ]
call sub_41d521
push 0xffffffff
push edi
push [ ebp + 0x14 ]
push ebx
call sub_420d47
add esp 0x10
push [ edi + 0x1c ]
call sub_4204bc
sub_42091c
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x80000003
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push ebx
push esi
call sub_4200c5
mov ebx [ ebp + 0x18 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
push 0x0
call [ EncodePointer@IAT ]
mov esi eax
call sub_4200c5
cmp [ eax + 0x8 ] esi
je r-xdata
call sub_423fbe
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x20 ]
push ebx
call sub_41d477
mov ecx [ ebp - 0x8 ]
add esp 0x14
mov edx [ ebp - 0x4 ]
cmp ecx edx
jae r-xdata
cmp [ edi ] 0xe0434f4d
je r-xdata
pop esi
pop ebx
lea esi [ eax + 0xc ]
mov eax [ ebp + 0x1c ]
cmp [ edi ] 0xe0434352
je r-xdata
inc ecx
add esi 0x14
mov [ ebp - 0x8 ] ecx
cmp ecx edx
jb r-xdata
cmp eax [ esi - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_41d39a
add esp 0x1c
test eax eax
jne r-xdata
cmp eax [ esi - 0xc ]
jl r-xdata
mov eax [ esi ]
mov edi [ esi + 0x4 ]
shl eax 0x4
mov edi [ edi + eax - 0xc ]
test edi edi
je r-xdata
mov edi [ esi + 0x4 ]
add edi 0xfffffff0
add eax edi
mov edi [ ebp + 0x8 ]
test [ eax ] 0x40
jne r-xdata
mov edx [ esi + 0x4 ]
mov ebx [ edx + eax - 0xc ]
mov edx [ ebp - 0x4 ]
cmp [ ebx + 0x8 ] 0x0
mov ebx [ ebp + 0x18 ]
jne r-xdata
mov eax [ ebp + 0x1c ]
push 0x1
push [ ebp + 0x24 ]
lea ecx [ esi - 0xc ]
push [ ebp + 0x20 ]
push ecx
push 0x0
push eax
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_4204f6
mov edx [ ebp - 0x4 ]
add esp 0x2c
mov ecx [ ebp - 0x8 ]
sub_420a37
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
call sub_423fbe
mov edi [ esi ]
xor ebx ebx
test edi edi
jle r-xdata
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov [ ebp - 0x4 ] ebx
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ecx [ eax ]
add eax 0x4
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
add edx 0x10
mov [ ebp - 0x4 ] edx
sub edi 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
add eax edx
mov [ ebp - 0x14 ] eax
mov ecx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
test eax eax
jle r-xdata
mov bl 0x1
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
dec eax
add ecx 0x4
mov [ ebp - 0x8 ] eax
test eax eax
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0x14 ]
jg r-xdata
mov edx [ ebp + 0x8 ]
push [ edx + 0x1c ]
push [ ecx ]
push eax
call sub_420f0b
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
sub_420ad3
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp [ edi ] esi
jle r-xdata
xor al al
mov ebx esi
mov al 0x1
jmp r-xdata
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi + 0x4 ]
push rw-data
mov eax [ ebx + eax + 0x4 ]
add eax 0x4
push eax
call sub_42006d
pop ecx
pop ecx
test eax eax
je r-xdata
sub_420b19
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
mov eax [ ecx ]
mov esi [ ecx + 0x4 ]
add eax edx
test esi esi
js r-xdata
pop esi
pop ebp
retn
mov ecx [ ecx + 0x8 ]
mov edx [ esi + edx ]
mov ecx [ edx + ecx ]
add ecx esi
add eax ecx
sub_420b3e
push 0x8
push r--data
call sub_41cb60
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
test [ edx ] 0x80000000
je r-xdata
lea edi [ ecx + 0xc ]
add edi [ edx + 0x8 ]
mov edi ecx
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_420b19
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_420b12
sub eax 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push edx
push ecx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_420bd0
add esp 0x10
sub eax 0x1
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41cba6
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_420b19
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_420b12
jmp r-xdata
sub_420bd0
push 0x10
push r--data
call sub_41cb60
xor ebx ebx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] bl
je r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ eax ]
mov esi [ ebp + 0xc ]
test ecx ecx
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] ebx
mov edi [ ebp + 0x14 ]
test cl cl
jns r-xdata
add esi 0xc
add esi edx
mov eax [ ebp + 0x8 ]
test cl 0x8
je r-xdata
test [ edi ] 0x10
je r-xdata
test [ edi ] 0x1
je r-xdata
mov ecx [ eax + 0x18 ]
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
cmp [ edi + 0x18 ] ebx
jne r-xdata
cmp [ eax + 0x18 ] 0x0
je r-xdata
call sub_423fbe
test esi esi
je r-xdata
mov ecx eax
call j_sub_420f99
call [ ebp - 0x1c ]
mov ecx eax
jmp r-xdata
cmp [ eax + 0x18 ] ebx
je r-xdata
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
test esi esi
je r-xdata
mov [ esi ] ecx
lea eax [ edi + 0x8 ]
push eax
push ecx
jmp r-xdata
test ecx ecx
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
push [ edi + 0x14 ]
push [ eax + 0x18 ]
push esi
call sub_41f6f0
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
call sub_420b19
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
test [ edi ] 0x4
push 0x0
pop ebx
setne bl
inc ebx
mov [ ebp - 0x20 ] ebx
push [ edi + 0x14 ]
lea eax [ edi + 0x8 ]
push eax
push ecx
call sub_420b19
pop ecx
pop ecx
push eax
push esi
call sub_41f6f0
add esp 0xc
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax ebx
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
call sub_41cba6
retn
lea eax [ edi + 0x8 ]
push eax
push [ esi ]
sub_420d02
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe0434352
je r-xdata
call sub_4200c5
cmp [ eax + 0x18 ] 0x0
jle r-xdata
cmp [ eax ] 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_4200c5
dec [ eax + 0x18 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
call sub_4200c5
and [ eax + 0x18 ] 0x0
jmp sub_423fbe
sub_420d47
push 0x10
push r--data
call sub_41cb60
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x4 ] 0x80
mov eax [ ebp + 0x8 ]
jg r-xdata
mov esi [ eax + 0x8 ]
movsx esi [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_420dfb
cmp esi [ ebp + 0x14 ]
jne r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_4200c5
inc [ eax + 0x18 ]
and [ ebp - 0x4 ] 0x0
call sub_423fbe
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] esi
call sub_41cba6
retn
mov ecx [ ebp + 0x10 ]
cmp esi [ ecx + 0x4 ]
jge r-xdata
mov eax [ ecx + 0x8 ]
mov edx [ eax + esi * 8 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] 0x1
cmp [ eax + esi * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] edx
push 0x103
push eax
mov eax [ ecx + 0x8 ]
push [ eax + esi * 8 + 0x4 ]
call sub_4201c0
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_420e0f
push ebp
mov ebp esp
push ebx
push esi
push edi
push [ ebp + 0x10 ]
call sub_420f99
pop ecx
call sub_4200c5
mov ecx [ ebp + 0x18 ]
xor esi esi
mov edx [ ebp + 0x8 ]
mov ebx 0x1fffffff
mov edi 0x19930522
cmp [ eax + 0x20 ] esi
jne r-xdata
test [ edx + 0x4 ] 0x66
je r-xdata
cmp [ edx ] 0xe06d7363
je r-xdata
cmp [ ecx + 0xc ] esi
jne r-xdata
cmp [ ecx + 0x4 ] esi
je r-xdata
cmp [ edx ] 0x80000026
je r-xdata
cmp [ edx ] 0xe06d7363
jne r-xdata
mov eax [ ecx ]
and eax ebx
cmp eax 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] esi
jne r-xdata
mov eax [ ecx ]
and eax ebx
cmp eax edi
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call sub_4205bb
add esp 0x20
cmp [ edx + 0x10 ] 0x3
jb r-xdata
cmp eax edi
jb r-xdata
cmp [ ecx + 0x1c ] esi
jne r-xdata
push 0xffffffff
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_420d47
add esp 0x10
jmp r-xdata
test [ ecx + 0x20 ] 0x1
jne r-xdata
cmp [ edx + 0x14 ] edi
jbe r-xdata
test [ ecx + 0x20 ] 0x4
je r-xdata
mov eax [ edx + 0x1c ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
movzx eax [ ebp + 0x24 ]
push eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ecx
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call j_sub_420f99
call esi
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_420f0b
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ edx + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea ecx [ eax + 0x8 ]
cmp [ ecx ] 0x0
je r-xdata
test [ edx ] 0x80
mov edi [ ebp + 0xc ]
je r-xdata
mov ebx [ edi + 0x4 ]
xor esi esi
cmp eax ebx
je r-xdata
test [ edi ] 0x10
jne r-xdata
test [ edi ] 0x2
je r-xdata
lea eax [ ebx + 0x8 ]
mov eax [ ebp + 0x10 ]
test [ eax ] 0x1
je r-xdata
test [ edx ] 0x8
je r-xdata
sbb eax eax
or eax 0x1
test bl bl
je r-xdata
test [ eax ] 0x2
je r-xdata
test [ edx ] 0x1
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax esi
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ eax + 0x1 ]
jne r-xdata
xor esi esi
inc esi
test [ edx ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test eax eax
je r-xdata
add ecx 0x2
add eax 0x2
test bl bl
jne r-xdata
mov bl [ ecx ]
cmp bl [ eax ]
jne r-xdata
sub_420fa0
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_421030
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_421655
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_421674
jmp r-xdata
sub_421030
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_41cabf
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_420fa0
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_421076
push ebp
push [ esp + 0x8 ]
call sub_420f99
add esp 0x4
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_420fa0
add esp 0xc
pop ebp
retn 0x4
sub_42109e
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_4210ce
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4210fe
push esi
push edi
mov edi rw-data
xor esi esi
call sub_42113a
xor al al
inc [ rw-data ]
add esi 0x18
add edi 0x18
cmp esi 0x18
jb r-xdata
push 0x0
push 0xfa0
push edi
call sub_42147b
add esp 0xc
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
pop edi
pop esi
retn
sub_42113a
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov al 0x1
pop esi
retn
imul eax esi 0x18
push edi
lea edi [ eax + rw-data ]
push edi
call [ DeleteCriticalSection@IAT ]
dec [ rw-data ]
sub edi 0x18
sub esi 0x1
jne r-xdata
pop edi
sub_421169
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
push esi
push edi
lea ebx [ eax * 4 + rw-data ]
xor eax eax
[ ebx ] ecx
mov edx [ rw-data ]
or edi 0xffffffff
mov ecx edx
mov esi edx
and ecx 0x1f
xor esi eax
ror esi cl
cmp esi edi
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov esi [ ebp + 0x10 ]
cmp esi [ ebp + 0x14 ]
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
push [ esi ]
call sub_421209
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax edx
push 0x20
and eax 0x1f
pop ecx
sub ecx eax
ror edi cl
xor edi edx
xchg [ ebx ] edi
push [ ebp + 0xc ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
add esi 0x4
cmp esi [ ebp + 0x14 ]
jne r-xdata
mov edx [ rw-data ]
push esi
call sub_41c410
pop ecx
xchg [ ebx ] eax
jmp r-xdata
test eax eax
je r-xdata
mov edx [ rw-data ]
sub_421209
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
xor ecx ecx
push edi
xor eax eax
lea edi [ ebx * 4 + rw-data ]
[ edi ] ecx
mov ecx eax
test ecx ecx
je r-xdata
mov ebx [ ebx * 4 + r--data ]
push esi
push 0x800
push 0x0
push ebx
call [ LoadLibraryExW@IAT ]
mov esi eax
test esi esi
jne r-xdata
lea eax [ ecx + 0x1 ]
neg eax
sbb eax eax
and eax ecx
jmp r-xdata
mov eax esi
xchg [ edi ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
pop edi
pop ebx
pop ebp
retn
mov eax esi
push esi
call [ FreeLibrary@IAT ]
xor esi esi
push esi
push esi
push ebx
call [ LoadLibraryExW@IAT ]
mov esi eax
jmp r-xdata
or eax 0xffffffff
xchg [ edi ] eax
xor eax eax
jmp r-xdata
test esi esi
jne r-xdata
pop esi
sub_42128a
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x0
call sub_421169
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x32
pop eax
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_420f99
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_4212ca
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x1
call sub_421169
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x32
pop eax
push [ ebp + 0x18 ]
mov ecx esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_420f99
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_42130d
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x2
call sub_421169
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x32
pop eax
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call j_sub_420f99
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_421347
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x3
call sub_421169
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x32
pop eax
push [ ebp + 0x20 ]
mov ecx esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_420f99
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_421390
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x4
call sub_421169
mov esi eax
add esp 0x10
test esi esi
je r-xdata
pop esi
pop ebp
jmp [ TlsAlloc@IAT ]
push [ ebp + 0x8 ]
mov ecx esi
call j_sub_420f99
call esi
pop esi
pop ebp
retn
sub_4213ca
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x5
call sub_421169
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsFree@IAT ]
mov ecx esi
call j_sub_420f99
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_421404
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x6
call sub_421169
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsGetValue@IAT ]
mov ecx esi
call j_sub_420f99
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_42143e
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x7
call sub_421169
add esp 0x10
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsSetValue@IAT ]
mov ecx esi
call j_sub_420f99
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_42147b
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x8
call sub_421169
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_420f99
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_4214c1
mov eax [ rw-data ]
push edi
push 0x20
and eax 0x1f
mov edi rw-data
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
push 0x9
pop ecx
[ edi ]
pop edi
retn
sub_4214e5
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push esi
mov esi rw-data
add esi 0x4
cmp esi rw-data
jne r-xdata
cmp [ esi ] 0xffffffff
je r-xdata
cmp [ esi ] 0x0
je r-xdata
pop esi
and [ esi ] 0x0
push [ esi ]
call [ FreeLibrary@IAT ]
sub_421540
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421560
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_41cabf
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_4215a5
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4215a5
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_421560
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_421655
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_421674
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_42164c
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_421655
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_421693
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push esi
mov esi eax
sub esi edx
movzx ecx [ edx ]
mov [ esi + edx ] cx
lea edx [ edx + 0x2 ]
test cx cx
jne r-xdata
pop esi
pop ebp
retn
sub_4216b5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_4216e0
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx edi [ edx ]
movzx ecx [ esi ]
sub ecx edi
jne r-xdata
pop edi
pop esi
test ecx ecx
jns r-xdata
sub esi edx
xor eax eax
test ecx ecx
setg al
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
add edx 0x2
movzx edi [ edx ]
movzx ecx [ esi + edx ]
sub ecx edi
je r-xdata
test di di
je r-xdata
sub_421720
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_4217ab
mov edi edi
push ebp
mov ebp esp
sub esp 0x484
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x18 ] 0x0
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ ebp - 0x460 ] eax
jne r-xdata
test ebx ebx
je r-xdata
call sub_425628
mov [ eax ] 0x16
call sub_425507
or eax 0xffffffff
jmp r-xdata
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x484 ]
call sub_421c26
mov ecx [ ebp + 0x8 ]
lea edi [ ebp - 0x470 ]
xor eax eax
xor edx edx
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax ecx
mov edi [ ebp - 0x460 ]
and eax 0x2
mov [ ebp - 0x474 ] eax
or eax edx
mov [ ebp - 0x470 ] edi
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x468 ] edx
jne r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_41cabf
mov esp ebp
pop ebp
retn
mov [ ebp - 0x464 ] 0x1
mov [ ebp - 0x464 ] dl
test edi edi
jne r-xdata
lea ecx [ ebp - 0x41c ]
call sub_421ca9
cmp [ ebp - 0x478 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
and eax 0x1
or eax 0x0
je r-xdata
push [ ebp + 0x20 ]
lea eax [ ebp - 0x470 ]
mov [ ebp - 0x460 ] eax
lea eax [ ebp - 0x480 ]
push eax
push [ ebp + 0x18 ]
lea eax [ ebp - 0x460 ]
push [ ebp + 0xc ]
push ecx
push eax
lea ecx [ ebp - 0x45c ]
call sub_421bf1
lea ecx [ ebp - 0x45c ]
call sub_421e2c
mov esi eax
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov ecx [ ebp - 0x484 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax [ ebp - 0x474 ]
or eax 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
or esi 0xffffffff
jmp r-xdata
test esi esi
jns r-xdata
xor ecx ecx
mov [ edi + eax * 2 ] cx
test esi esi
js r-xdata
push 0xfffffffe
pop esi
mov eax [ ebp - 0x468 ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ edi ] ax
jmp r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
mov [ edi + ebx * 2 - 0x2 ] ax
jmp r-xdata
jmp r-xdata
sub_421948
mov edi edi
push ebp
mov ebp esp
push ecx
or eax 0xffffffff
xor edx edx
push esi
mov esi [ ebp + 0x8 ]
div esi
push edi
and eax 0xfffffffe
mov edi ecx
cmp eax 0x2
jae r-xdata
push ebx
xor ebx ebx
add esi esi
cmp [ edi + 0x404 ] ebx
jne r-xdata
call sub_425628
mov [ eax ] 0xc
xor al al
jmp r-xdata
cmp esi [ edi + 0x400 ]
ja r-xdata
cmp esi 0x400
jbe r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_4251e6
mov [ ebp - 0x4 ] eax
pop ecx
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
push eax
call sub_4251ac
pop ecx
mov al bl
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ edi + 0x404 ]
call sub_421cc3
mov eax [ ebp - 0x4 ]
mov bl 0x1
mov [ edi + 0x400 ] esi
pop ebx
sub_4219ce
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
dec eax
sub eax 0x1
je r-xdata
xor al al
pop ebp
retn
sub eax 0x1
je r-xdata
mov al 0x1
pop ebp
retn
sub eax 0x9
je r-xdata
cmp [ ebp + 0x14 ] 0xd
je r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
and eax 0x4
mov dl 0x1
or eax ecx
jne r-xdata
cmp [ ebp + 0x10 ] 0x63
je r-xdata
mov dl cl
mov cl 0x1
cmp [ ebp + 0x10 ] 0x73
jne r-xdata
xor eax eax
cmp dl cl
sete al
pop ebp
retn
sub_421a1d
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x404 ]
call sub_421930
test edi edi
jne r-xdata
add eax edi
add eax esi
jmp r-xdata
pop edi
pop esi
retn
sub_421a3b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_421930
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_421ab0
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_421930
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_42e800
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_421b38
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x10 ] esi
jle r-xdata
pop esi
pop ebp
retn
push ebx
movsx bx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
pop edi
pop ebx
inc esi
cmp esi [ ebp + 0x10 ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push ebx
call sub_422963
cmp [ edi ] 0xffffffff
je r-xdata
sub_421b69
mov edi edi
push ebp
mov ebp esp
push ecx
xor edx edx
mov [ ebp - 0x4 ] ecx
xor eax eax
mov [ ecx ] edx
mov [ ecx + 0x32 ] ax
mov eax ecx
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] edx
mov [ ecx + 0x10 ] edx
mov [ ecx + 0x14 ] edx
mov [ ecx + 0x18 ] edx
mov [ ecx + 0x1c ] edx
mov [ ecx + 0x20 ] edx
mov [ ecx + 0x24 ] edx
mov [ ecx + 0x28 ] edx
mov [ ecx + 0x30 ] dl
mov [ ecx + 0x38 ] edx
mov [ ecx + 0x3c ] dl
mov [ ecx + 0x440 ] edx
mov [ ecx + 0x444 ] edx
mov esp ebp
pop ebp
retn
sub_421bb5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_421b69
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ esi + 0x448 ] eax
mov eax [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ esi + 0x14 ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_421bf1
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x1c ]
mov esi ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421bb5
and [ esi + 0x450 ] 0x0
call sub_425628
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_421c26
mov edi edi
push ebp
mov ebp esp
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
mov [ edi + 0xc ] 0x0
test ecx ecx
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ ecx ]
mov [ edi + 0x4 ] eax
mov eax [ ecx + 0x4 ]
jmp r-xdata
push esi
call sub_425b08
lea edx [ edi + 0x4 ]
mov [ edi ] eax
push edx
lea esi [ edi + 0x8 ]
mov ecx [ eax + 0x4c ]
mov [ edx ] ecx
mov ecx [ eax + 0x48 ]
push eax
mov [ esi ] ecx
call sub_425c57
push esi
push [ edi ]
call sub_425c84
mov ecx [ edi ]
add esp 0x10
mov eax [ ecx + 0x350 ]
pop esi
test al 0x2
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x4 ] eax
mov eax [ rw-data ]
mov [ edi + 0x8 ] eax
jmp r-xdata
mov eax edi
pop edi
pop ebp
retn 0x4
or eax 0x2
mov [ ecx + 0x350 ] eax
mov [ edi + 0xc ] 0x1
sub_421cc3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push [ esi ]
call sub_4251ac
mov edx [ ebp + 0x8 ]
and [ esi ] 0x0
pop ecx
mov eax [ edx ]
mov [ esi ] eax
mov eax esi
and [ edx ] 0x0
pop esi
pop ebp
retn 0x4
sub_421ce7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
mov eax [ eax ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov bl [ eax ]
jmp r-xdata
mov al [ ecx ]
test al al
jne r-xdata
cmp al bl
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
inc ecx
pop ebx
pop ebp
retn
jmp r-xdata
mov al [ ecx ]
test al al
jne r-xdata
cmp al 0x65
je r-xdata
mov edx ecx
cmp al 0x45
je r-xdata
dec ecx
cmp [ ecx ] 0x30
je r-xdata
cmp [ ecx ] bl
jne r-xdata
inc ecx
mov al [ edx ]
inc ecx
inc edx
mov [ ecx ] al
test al al
jne r-xdata
dec ecx
sub_421d3e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp ax 0x5a
ja r-xdata
xor ecx ecx
movzx eax cx
movzx ecx [ eax + r--data ]
and ecx 0xf
jmp r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + ecx * 8 + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_421d72
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_423074
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_425582
test eax eax
movsx eax [ esi ]
push eax
call sub_423074
pop ecx
cmp eax 0x78
jne r-xdata
mov eax [ ebp + 0xc ]
mov cl [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
inc esi
add esi 0x2
mov al [ esi ]
mov [ esi ] cl
mov cl al
mov al [ esi ]
inc esi
test al al
jne r-xdata
pop esi
pop ebp
retn
sub_421dce
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
sub eax 0x2
push eax
call sub_425656
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_421e2c
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_423ecf
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
inc [ esi + 0x450 ]
cmp [ esi + 0x450 ] 0x2
jne r-xdata
call sub_425628
mov [ eax ] 0x16
call sub_425507
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov eax [ esi + 0x18 ]
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
movzx eax [ eax ]
mov [ esi + 0x32 ] ax
test ax ax
jne r-xdata
add [ esi + 0x10 ] 0x2
cmp [ esi + 0x18 ] ebx
jl r-xdata
add [ esi + 0x10 ] 0x2
push [ esi + 0x1c ]
movzx eax [ esi + 0x32 ]
mov ecx esi
push eax
call sub_421d3e
mov [ esi + 0x1c ] eax
cmp eax 0x8
je r-xdata
cmp eax 0x7
ja r-xdata
or eax 0xffffffff
jmp r-xdata
jmp [ eax * 4 + jump_table_421f2c ]
mov ecx esi
call sub_421f89
jmp r-xdata
or [ esi + 0x28 ] 0xffffffff
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_421f4c
jmp r-xdata
mov ecx esi
call sub_4223c5
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_421fc3
jmp r-xdata
mov ecx esi
call sub_421fec
jmp r-xdata
mov ecx esi
call sub_422168
test al al
je r-xdata
sub_421f4c
movzx eax [ ecx + 0x32 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_421fc3
cmp [ ecx + 0x32 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x28 ]
push eax
call sub_421dce
retn
mov al 0x1
retn
or [ ecx + 0x28 ] 0xffffffff
sub_421fec
movzx eax [ ecx + 0x32 ]
cmp eax 0x46
jne r-xdata
cmp eax 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_422168
call sub_425628
mov [ eax ] 0x16
call sub_425507
xor al al
retn
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
push 0x6c
pop edx
cmp eax edx
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
add eax 0x2
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
movzx eax [ edx ]
cmp eax 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp eax 0x36
jne r-xdata
cmp [ edx + 0x2 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp eax 0x64
je r-xdata
cmp [ edx + 0x2 ] 0x34
jne r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
push 0x68
pop edx
cmp eax edx
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp eax 0x69
je r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
add eax 0x2
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp eax 0x75
je r-xdata
cmp eax 0x78
je r-xdata
cmp eax 0x58
jne r-xdata
sub_422168
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
xor ebx ebx
push 0x41
pop edx
push 0x58
movzx eax [ esi + 0x32 ]
pop ecx
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_4228af
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_422897
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
cmp [ esi + 0x30 ] bl
jne r-xdata
xor al al
jmp r-xdata
push ebx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_4224b0
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_42244d
jmp r-xdata
sub eax 0x7
je r-xdata
push 0x1
cmp eax edx
je r-xdata
mov al 0x1
mov edx [ esi + 0x20 ]
xor ecx ecx
push edi
mov eax edx
mov [ ebp - 0xc ] ebx
shr eax 0x4
inc ecx
mov [ ebp - 0x8 ] bx
push 0x20
pop edi
test cl al
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_41cabf
mov esp ebp
pop ebp
retn
push ebx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_4226ba
jmp r-xdata
cmp eax 0x43
je r-xdata
movzx ecx [ esi + 0x32 ]
cmp ecx 0x78
je r-xdata
mov eax edx
shr eax 0x6
test cl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_422804
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ebx
mov ecx esi
call sub_422622
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x58
pop eax
cmp cx ax
jne r-xdata
test cl dl
je r-xdata
push 0x2d
mov ecx esi
call sub_422878
jmp r-xdata
cmp eax 0x47
jle r-xdata
xor ah ah
mov ah 0x1
jmp r-xdata
mov eax edx
shr eax 0x1
test cl al
je r-xdata
push 0x2b
jmp r-xdata
mov ebx ecx
cmp eax 0x53
jne r-xdata
mov al 0x1
push 0x41
pop edi
cmp cx di
je r-xdata
cmp ecx 0x61
je r-xdata
mov [ ebp - 0xc ] di
pop eax
mov [ ebp - 0xc ] ax
jmp r-xdata
push 0x58
pop eax
mov [ ebp + ebx * 2 - 0xc ] di
cmp cx ax
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
push 0x41
pop eax
cmp cx ax
je r-xdata
mov edi [ esi + 0x24 ]
sub edi [ esi + 0x38 ]
sub edi ebx
test dl 0xc
jne r-xdata
push 0x30
pop edi
test ah ah
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ ebp - 0xc ]
lea ecx [ esi + 0x448 ]
push eax
call sub_422a33
mov ecx [ esi + 0x20 ]
lea ebx [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_421b38
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_4229a8
cmp [ ebx ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
cbw
mov [ ebp + ebx * 2 - 0xa ] ax
add ebx 0x2
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_421b38
add esp 0x10
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_421b38
add esp 0x10
sub_4223c5
cmp [ ecx + 0x32 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x24 ]
push eax
call sub_421dce
retn
mov al 0x1
retn
or [ ecx + 0x20 ] 0x4
neg [ ecx + 0x24 ]
sub_4223f1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xb
ja r-xdata
xor eax eax
pop ebp
retn
jmp [ eax * 4 + jump_table_42241d ]
push 0x4
xor eax eax
inc eax
pop ebp
retn
push 0x2
jmp r-xdata
push 0x8
jmp r-xdata
pop eax
pop ebp
retn
sub_42244d
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_4219ce
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop esi
mov al 0x1
pop ebx
retn
sub_4224b0
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov esi ecx
push 0x67
pop ecx
push 0x47
or [ esi + 0x20 ] 0x10
mov eax [ esi + 0x28 ]
pop edx
test eax eax
jns r-xdata
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp eax 0x61
je r-xdata
mov eax [ esi + 0x28 ]
lea edi [ esi + 0x40 ]
push ebx
mov ebx 0x15d
mov ecx edi
add eax ebx
push eax
call sub_421948
test al al
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp ax cx
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp eax 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_421930
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp ax dx
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
add [ esi + 0x14 ] 0x8
mov ecx [ esi + 0x14 ]
mov eax [ ecx - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx - 0x4 ]
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_421930
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
mov eax edi
push [ esi + 0x8 ]
movsx eax [ esi + 0x32 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_421a1d
push eax
mov ecx edi
call sub_421930
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_42657c
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
pop ebx
test al 0x1
je r-xdata
mov ebx edi
movzx eax [ esi + 0x32 ]
push 0x67
pop ecx
cmp ax cx
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
push 0x47
pop ecx
cmp ax cx
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_421d72
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_421ce7
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
push 0x73
pop eax
mov [ esi + 0x32 ] ax
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] edx
pop esi
mov esp ebp
pop ebp
retn
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_422622
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ esi + 0x3c ] 0x1
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
push [ esi + 0x2c ]
movzx ebx [ eax - 0x4 ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_4219ce
add esp 0x10
lea edi [ esi + 0x40 ]
test al al
jne r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx [ edi + 0x404 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] al
test ecx ecx
jne r-xdata
mov [ eax ] bx
mov eax edi
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
call sub_425682
add esp 0x10
test eax eax
jns r-xdata
mov ecx edi
mov [ esi + 0x34 ] edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_4226ba
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_4223f1
pop ecx
mov ebx eax
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x1
je r-xdata
movzx eax [ eax - 0x4 ]
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
cdq
mov ecx eax
movzx eax [ eax - 0x4 ]
jmp r-xdata
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x4
je r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov ecx [ eax - 0x4 ]
xor edx edx
jmp r-xdata
mov eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x8
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
jmp r-xdata
call sub_425628
mov [ eax ] 0x16
call sub_425507
xor al al
jmp r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_421a3b
push edx
push ecx
mov ecx esi
call sub_421ab0
jmp r-xdata
mov al 0x1
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_422804
mov edi edi
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
call sub_426828
test eax eax
jne r-xdata
push [ esi + 0x2c ]
call sub_4223f1
pop ecx
sub eax 0x1
je r-xdata
call sub_425628
mov [ eax ] 0x16
call sub_425507
xor al al
jmp r-xdata
mov al [ esi + 0x18 ]
mov [ edi ] al
sub eax 0x1
je r-xdata
pop edi
pop esi
retn
mov ax [ esi + 0x18 ]
mov [ edi ] ax
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov al 0x1
mov eax [ esi + 0x18 ]
mov [ edi ] eax
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
cdq
mov [ edi ] eax
mov [ edi + 0x4 ] edx
jmp r-xdata
sub_4228af
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ esi + 0x28 ]
mov ebx [ eax - 0x4 ]
mov [ esi + 0x34 ] ebx
cmp edi 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_4219ce
add esp 0x10
test al al
je r-xdata
mov edi 0x7fffffff
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
push 0x0
push edi
mov ecx esi
call sub_422923
mov [ esi + 0x34 ] r--data
push edi
push [ esi + 0x34 ]
mov [ esi + 0x3c ] 0x1
call sub_423384
pop ecx
pop ecx
jmp r-xdata
mov [ esi + 0x34 ] r--data
pop edi
mov [ esi + 0x38 ] eax
mov al 0x1
pop esi
pop ebx
retn
sub_422923
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
xor esi esi
mov edx [ edi + 0x34 ]
cmp [ ebp + 0x8 ] esi
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push ebx
pop ebx
movzx ecx al
mov ebx 0x8000
mov eax [ edi + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
test [ eax + ecx * 2 ] bx
je r-xdata
inc edx
inc esi
cmp esi [ ebp + 0x8 ]
jl r-xdata
inc edx
mov al [ edx ]
test al al
je r-xdata
sub_422963
mov edi edi
push ebp
mov ebp esp
mov edx ecx
mov ecx [ edx ]
mov eax [ ecx + 0x8 ]
cmp eax [ ecx + 0x4 ]
mov eax [ ebp + 0xc ]
jne r-xdata
inc [ eax ]
mov eax [ edx ]
inc [ eax + 0x8 ]
mov eax [ edx ]
mov ecx [ eax ]
mov ax [ ebp + 0x8 ]
mov [ ecx ] ax
mov eax [ edx ]
add [ eax ] 0x2
mov al 0x1
cmp [ ecx + 0xc ] 0x0
je r-xdata
or [ eax ] 0xffffffff
inc [ eax ]
jmp r-xdata
pop ebp
retn 0x8
mov eax [ edx ]
mov al [ eax + 0xc ]
jmp r-xdata
sub_4229a8
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_422a33
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov ebx [ esi + 0x34 ]
xor edi edi
test eax eax
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x4 ] ax
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push ebx
push eax
call sub_425682
add esp 0x10
mov [ ebp - 0x8 ] eax
test eax eax
jle r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x18 ]
push ecx
push [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
call sub_422963
add ebx [ ebp - 0x8 ]
inc edi
cmp edi [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_422a33
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x14 ]
mov eax ecx
push edi
mov [ ebp - 0x8 ] eax
mov ecx [ ebx ]
and [ ebx ] 0x0
mov edx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edi [ edx + 0x4 ]
cmp [ edx + 0x8 ] edi
jne r-xdata
sub edi [ edx + 0x8 ]
mov eax [ ebp + 0xc ]
cmp edi eax
jb r-xdata
cmp [ edx + 0xc ] 0x0
je r-xdata
push esi
lea esi [ edi + edi ]
push esi
push [ ebp + 0x8 ]
push [ edx ]
call sub_41ee90
mov ecx [ ebp - 0x8 ]
add esp 0xc
mov eax [ ecx ]
add [ eax ] esi
mov eax [ ecx ]
pop esi
add [ eax + 0x8 ] edi
mov eax [ ecx ]
cmp [ eax + 0xc ] 0x0
mov eax [ ebp + 0x10 ]
je r-xdata
mov edi eax
mov eax [ ebp + 0x10 ]
or [ eax ] 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
cmp edi [ ebp + 0xc ]
je r-xdata
mov ecx [ ebp + 0xc ]
add [ eax ] ecx
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
add [ eax ] edi
or [ eax ] 0xffffffff
jmp r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x10
test ecx ecx
je r-xdata
mov [ ebx ] ecx
sub_422acd
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4217ab
add esp 0x1c
pop ebp
retn
sub_422af1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x8 ]
push eax
call [ QueryPerformanceFrequency@IAT ]
test eax eax
je r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x8 ]
mov eax ecx
mov edx [ ebp - 0x4 ]
or eax edx
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0xc ]
mov [ rw-data ] ecx
mov [ rw-data ] edx
jmp r-xdata
mov [ rw-data ] eax
xor eax eax
mov esp ebp
pop ebp
retn
sub_422b57
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
pop ebp
retn
movzx eax [ edx ]
movzx ecx [ ecx ]
sub eax ecx
pop esi
pop ebp
retn
movzx esi [ edx ]
test si si
je r-xdata
cmp si [ ecx ]
jne r-xdata
add edx 0x2
add ecx 0x2
jmp r-xdata
sub eax 0x1
je r-xdata
sub_422b91
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop ebp
retn
mov edx [ ebp + 0xc ]
sub edx edi
test ecx ecx
je r-xdata
sub ecx 0x1
jne r-xdata
sub ecx 0x1
je r-xdata
movzx eax [ edx + edi ]
mov [ edi ] ax
add edi 0x2
test ax ax
je r-xdata
xor eax eax
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
sub_422bd4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
push esi
push edi
cmp [ eax ] cx
je r-xdata
xor eax eax
mov esi [ ebp + 0xc ]
movzx edi [ esi ]
add eax 0x2
xor ecx ecx
cmp [ eax ] cx
jne r-xdata
movzx ebx [ eax ]
mov edx edi
mov ecx esi
test di di
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
add ecx 0x2
movzx edx [ ecx ]
test dx dx
jne r-xdata
cmp dx bx
je r-xdata
sub_422c19
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov edx eax
cmp [ eax ] cx
je r-xdata
push esi
mov esi [ ebp + 0xc ]
sub edx esi
add edx 0x2
cmp [ edx ] cx
jne r-xdata
movzx ecx [ esi ]
mov [ edx + esi ] cx
lea esi [ esi + 0x2 ]
test cx cx
jne r-xdata
pop esi
pop ebp
retn
sub_422c70
push ebx
push esi
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
test ebx 0xffffffff
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub ecx edx
test edx 0x3
je r-xdata
lea eax [ edx + ecx ]
and eax 0xfff
cmp eax 0xffc
ja r-xdata
movzx eax [ edx + ecx ]
cmp al [ edx ]
jne r-xdata
mov eax [ edx + ecx ]
cmp eax [ edx ]
jne r-xdata
sbb eax eax
or eax 0x1
pop esi
pop ebx
retn
test eax eax
je r-xdata
sub ebx 0x4
jbe r-xdata
inc edx
sub ebx 0x1
jbe r-xdata
lea esi [ eax - 0x1010101 ]
add edx 0x4
not eax
and eax esi
test eax 0x80808080
je r-xdata
test dl 0x3
jne r-xdata
sub_422ce8
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax edx
push esi
mov esi 0xff00
mov ecx edx
and eax esi
shl ecx 0x10
add eax ecx
mov ecx edx
shr ecx 0x8
and ecx esi
shl eax 0x8
add eax ecx
shr edx 0x18
add eax edx
pop esi
pop ebp
retn
sub_422d15
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
lea ecx [ ebp - 0x1c ]
push ebx
push [ ebp + 0x10 ]
call sub_421c26
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
xor eax eax
mov [ ebp - 0x4 ] ax
mov [ ebp - 0x2 ] al
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call sub_422fa9
pop ecx
pop ecx
test al al
je r-xdata
call sub_425628
xor ecx ecx
mov [ eax ] 0x2a
xor eax eax
mov [ ebp - 0x4 ] bl
inc ecx
mov [ ebp - 0x3 ] al
mov eax ebx
lea ecx [ ebp - 0x18 ]
sar eax 0x8
mov [ ebp - 0xc ] eax
push ecx
movzx eax al
push eax
call sub_426a8c
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x98 ]
movzx ecx [ eax + ebx ]
je r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x10 ] al
je r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] al
xor eax eax
push 0x2
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] al
pop ecx
jmp r-xdata
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
movzx edx [ ebp - 0x8 ]
movzx eax [ ebp - 0x7 ]
shl edx 0x8
or edx eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
movzx eax [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
jmp r-xdata
mov [ ebp - 0x8 ] ax
lea edx [ ebp - 0x8 ]
mov [ ebp - 0x6 ] al
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp + 0xc ]
push [ eax + 0xa8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_426db4
add esp 0x24
test eax eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax edx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
jmp r-xdata
sub_422e5f
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
lea ecx [ ebp - 0x1c ]
push ebx
push [ ebp + 0x10 ]
call sub_421c26
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
xor eax eax
mov [ ebp - 0x4 ] ax
mov [ ebp - 0x2 ] al
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call sub_422fc6
pop ecx
pop ecx
test al al
je r-xdata
call sub_425628
xor ecx ecx
mov [ eax ] 0x2a
xor eax eax
mov [ ebp - 0x4 ] bl
inc ecx
mov [ ebp - 0x3 ] al
mov eax ebx
lea ecx [ ebp - 0x18 ]
sar eax 0x8
mov [ ebp - 0xc ] eax
push ecx
movzx eax al
push eax
call sub_426a8c
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x94 ]
movzx ecx [ eax + ebx ]
je r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x10 ] al
je r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] al
xor eax eax
push 0x2
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] al
pop ecx
jmp r-xdata
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
movzx edx [ ebp - 0x8 ]
movzx eax [ ebp - 0x7 ]
shl edx 0x8
or edx eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
movzx eax [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
jmp r-xdata
mov [ ebp - 0x8 ] ax
lea edx [ ebp - 0x8 ]
mov [ ebp - 0x6 ] al
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp + 0xc ]
push [ eax + 0xa8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_426db4
add esp 0x24
test eax eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax edx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
jmp r-xdata
sub_422fa9
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x2
push [ ebp + 0x8 ]
call sub_42300d
add esp 0xc
neg eax
sbb eax eax
neg eax
pop ebp
retn
sub_422fc6
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_42300d
add esp 0xc
neg eax
sbb eax eax
neg eax
pop ebp
retn
sub_422fe3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_426a66
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
mov eax [ eax ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
and eax [ ebp + 0xc ]
pop ebp
retn
sub_42300d
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422fe3
mov eax [ ecx ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_426ac5
jmp r-xdata
add esp 0xc
pop ebp
retn
sub_423074
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x41 ]
cmp eax 0x19
ja r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_423040
pop ecx
pop ecx
mov ecx eax
jmp r-xdata
mov eax ecx
pop ebp
retn
add ecx 0x20
sub_4230a4
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x61 ]
cmp eax 0x19
ja r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_42305a
pop ecx
pop ecx
mov ecx eax
jmp r-xdata
mov eax ecx
pop ebp
retn
add ecx 0xffffffe0
sub_4230d4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor edx edx
push edi
mov ecx esi
cmp [ esi ] dx
je r-xdata
cmp [ ebp + 0x10 ] edx
je r-xdata
add ecx 0x2
cmp [ ecx ] dx
jne r-xdata
xor eax eax
mov [ ecx ] ax
mov edi [ ebp + 0xc ]
sub edi ecx
pop edi
mov eax esi
pop esi
pop ebp
retn
inc edx
cmp edx [ ebp + 0x10 ]
jne r-xdata
movzx eax [ edi + ecx ]
mov [ ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
sub_423120
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov edi [ esp + 0x8 ]
push esi
test edi 0x3
push ebx
je r-xdata
mov eax [ edi ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add edi 0x4
test eax 0x81010100
je r-xdata
mov al [ edi ]
add edi 0x1
test al al
je r-xdata
mov eax [ edi - 0x4 ]
test al al
je r-xdata
sub edi 0x1
jmp r-xdata
test edi 0x3
jne r-xdata
sub edi 0x4
test ah ah
je r-xdata
mov esi [ esp + 0x14 ]
test esi 0x3
jne r-xdata
mov dl [ esi ]
add esi 0x1
test dl dl
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
sub edi 0x3
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
mov [ edi ] dl
add edi 0x1
sub ecx 0x1
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
sub edi 0x2
jmp r-xdata
test eax 0xff000000
jne r-xdata
mov [ edi ] cl
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
sub ecx 0x1
je r-xdata
test dl dl
je r-xdata
mov ecx ebx
and ecx 0x3
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
test dh dh
je r-xdata
mov dl [ esi ]
add esi 0x1
mov [ edi ] dl
add edi 0x1
test dl dl
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edx 0xff0000
je r-xdata
pop ebx
pop esi
sub ecx 0x1
jne r-xdata
mov [ edi ] dx
xor edx edx
mov eax [ esp + 0x10 ]
mov [ edi + 0x2 ] dl
pop ebx
pop esi
pop edi
retn
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
sub_423260
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
sub ecx 0x1
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
sub ebx 0x1
jne r-xdata
sub ebx 0x1
jne r-xdata
xor eax eax
mov [ edi ] al
add edi 0x1
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
sub ecx 0x1
jne r-xdata
add edi 0x4
xor eax eax
sub ecx 0x1
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_423384
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
push esi
push edi
cmp eax 0x5
jl r-xdata
cmp eax 0x1
jl r-xdata
test cl 0x1
je r-xdata
mov eax [ ebp + 0xc ]
mov edx ecx
lea eax [ ecx + eax * 2 ]
cmp ecx eax
je r-xdata
test cl 0x1
je r-xdata
mov esi ecx
and esi 0x1f
push 0x20
pop eax
sub eax esi
neg esi
sbb esi esi
and esi eax
mov eax [ ebp + 0xc ]
shr esi 0x1
cmp eax esi
jae r-xdata
mov eax [ ebp + 0xc ]
mov edx ecx
lea eax [ ecx + eax * 2 ]
cmp ecx eax
je r-xdata
sub edx ecx
xor edi edi
mov esi ecx
and esi 0xf
push 0x10
pop eax
sub eax esi
neg esi
sbb esi esi
and esi eax
mov eax [ ebp + 0xc ]
shr esi 0x1
cmp eax esi
jae r-xdata
mov eax [ ebp + 0xc ]
mov edx ecx
lea eax [ ecx + eax * 2 ]
cmp ecx eax
je r-xdata
lea edx [ ecx + esi * 2 ]
xor edi edi
mov [ ebp - 0x4 ] edx
mov edx ecx
cmp ecx [ ebp - 0x4 ]
je r-xdata
mov esi eax
xor edi edi
add edx 0x2
cmp edx eax
jne r-xdata
lea edx [ ecx + esi * 2 ]
xor edi edi
mov [ ebp - 0x4 ] edx
mov edx ecx
cmp ecx [ ebp - 0x4 ]
je r-xdata
mov esi eax
xor edi edi
sub edx ecx
sar edx 0x1
cmp edx esi
jne r-xdata
cmp [ edx ] di
je r-xdata
add edx 0x2
cmp edx eax
jne r-xdata
cmp [ edx ] di
je r-xdata
sub edx ecx
sar edx 0x1
cmp edx esi
jne r-xdata
cmp [ edx ] di
je r-xdata
add edx 0x2
cmp edx eax
jne r-xdata
pop edi
mov eax edx
pop esi
mov esp ebp
pop ebp
retn
lea edx [ ecx + edx * 2 ]
mov ecx eax
sub ecx esi
mov eax ecx
and eax 0x1f
sub ecx eax
vxorps ymm1 ymm1 ymm1
lea ecx [ edx + ecx * 2 ]
jmp r-xdata
add edx 0x2
cmp edx [ ebp - 0x4 ]
jne r-xdata
cmp [ edx ] di
je r-xdata
jmp r-xdata
lea edx [ ecx + edx * 2 ]
pxor xmm1 xmm1
mov ecx eax
sub ecx esi
mov eax ecx
and eax 0xf
sub ecx eax
lea ecx [ edx + ecx * 2 ]
jmp r-xdata
add edx 0x2
cmp edx [ ebp - 0x4 ]
jne r-xdata
cmp [ edx ] di
je r-xdata
jmp r-xdata
cmp edx ecx
jne r-xdata
cmp edx ecx
jne r-xdata
vpcmpeqw ymm0 ymm1 [ edx ]
vpmovmskb eax ymm0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
lea ecx [ eax + ecx * 2 ]
jmp r-xdata
movaps xmm0 [ edx ]
pcmpeqw xmm0 xmm1
pmovmskb eax xmm0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
lea ecx [ eax + ecx * 2 ]
jmp r-xdata
add edx 0x20
cmp edx ecx
jne r-xdata
add edx 0x10
cmp edx ecx
jne r-xdata
cmp [ edx ] di
je r-xdata
sub edx eax
sar edx 0x1
vzeroupper
jmp r-xdata
cmp [ edx ] di
je r-xdata
sub edx eax
jmp r-xdata
add edx 0x2
add edx 0x2
sar edx 0x1
sub_42353b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test al 0x4
je r-xdata
test al 0x1
je r-xdata
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
and eax 0x2
je r-xdata
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x80000000
ja r-xdata
cmp [ ebp + 0xc ] 0x7fffffff
ja r-xdata
sub_42356e
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
lea ecx [ ebp + 0xc ]
push ebx
push edi
call sub_423ecf
test al al
je r-xdata
xor ebx ebx
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ edx ] ecx
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x28 ]
call sub_421c26
mov eax [ ebp + 0xc ]
xor esi esi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp edi 0x2
jl r-xdata
mov bl [ eax ]
inc eax
mov [ ebp + 0xc ] eax
lea eax [ ebp - 0x24 ]
push eax
movzx eax bl
push 0x8
push eax
mov [ ebp - 0x4 ] bl
call sub_42300d
add esp 0xc
test eax eax
jne r-xdata
call sub_425628
mov [ eax ] 0x16
call sub_425507
cmp edi 0x24
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x18 ] al
setne al
mov [ ebp - 0x8 ] eax
cmp bl 0x2d
jne r-xdata
cmp bl 0x2b
jne r-xdata
or eax 0x2
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov esi [ ebp + 0xc ]
mov esi [ ebp + 0xc ]
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
jmp r-xdata
mov al bl
sub al 0x30
cmp al 0x9
ja r-xdata
cmp edi 0x10
jne r-xdata
test edi edi
je r-xdata
mov al bl
sub al 0x61
cmp al 0x19
ja r-xdata
movsx eax bl
add eax 0xffffffd0
jmp r-xdata
xor edx edx
or eax 0xffffffff
div edi
mov [ ebp - 0x14 ] edx
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov al bl
sub al 0x41
cmp al 0x19
ja r-xdata
movsx eax bl
add eax 0xffffffa9
jmp r-xdata
test eax eax
je r-xdata
mov al bl
sub al 0x61
cmp al 0x19
ja r-xdata
movsx ecx bl
add ecx 0xffffffd0
jmp r-xdata
or eax 0xffffffff
movsx eax bl
add eax 0xffffffc9
jmp r-xdata
mov al [ esi ]
inc esi
mov [ ebp - 0x10 ] al
mov [ ebp + 0xc ] esi
cmp al 0x78
je r-xdata
test edi edi
jne r-xdata
mov al bl
sub al 0x41
cmp al 0x19
ja r-xdata
movsx ecx bl
add ecx 0xffffffa9
jmp r-xdata
cmp ecx 0xffffffff
je r-xdata
test edi edi
jne r-xdata
cmp al 0x58
je r-xdata
push 0xa
pop edi
jmp r-xdata
or ecx 0xffffffff
movsx ecx bl
add ecx 0xffffffc9
jmp r-xdata
push [ ebp - 0x4 ]
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] edx
call sub_423e7b
mov ebx [ ebp - 0x8 ]
test bl 0x8
jne r-xdata
cmp ecx edi
jae r-xdata
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
push 0x10
pop edi
test edi edi
jne r-xdata
mov esi [ ebp - 0xc ]
push esi
push ebx
call sub_42353b
pop ecx
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x18 ]
xor ebx ebx
mov [ ebp + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
or edx 0x8
mov ebx [ ebp - 0x10 ]
cmp eax ebx
jb r-xdata
push [ ebp - 0x10 ]
lea ecx [ ebp + 0xc ]
call sub_423e7b
mov esi [ ebp + 0xc ]
jmp r-xdata
push 0x8
pop edi
test bl 0x2
je r-xdata
call sub_425628
mov [ eax ] 0x22
test bl 0x1
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
pop esi
je r-xdata
imul eax edi
add eax ecx
mov [ ebp - 0xc ] eax
jne r-xdata
mov ebx esi
neg esi
test bl 0x2
je r-xdata
or esi 0xffffffff
jmp r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x28 ]
and [ eax + 0x350 ] 0xfffffffd
jmp r-xdata
lea ecx [ ebx - 0x30 ]
cmp cl 0x9
ja r-xdata
or edx 0x4
jmp r-xdata
cmp ecx [ ebp - 0x14 ]
jbe r-xdata
mov ebx 0x7fffffff
jmp r-xdata
mov ebx 0x80000000
jmp r-xdata
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
jmp r-xdata
sub_423796
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
lea ecx [ ebp + 0xc ]
push ebx
push edi
call sub_423ecf
test al al
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x14 ]
push 0x2
pop edi
test eax eax
je r-xdata
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ edx ] ecx
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_421c26
mov eax [ ebp + 0xc ]
xor esi esi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp eax edi
jl r-xdata
movzx esi [ eax ]
add eax edi
push 0x8
push esi
mov [ ebp + 0xc ] eax
call sub_426e1f
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_425628
mov [ eax ] 0x16
call sub_425507
cmp eax 0x24
jle r-xdata
mov eax [ ebp + 0xc ]
xor ebx ebx
cmp [ ebp + 0x18 ] bl
setne bl
cmp si 0x2d
jne r-xdata
cmp si 0x2b
jne r-xdata
or ebx edi
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edi [ ebp + 0xc ]
movzx esi [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
jmp r-xdata
cmp si ax
jb r-xdata
cmp ecx edx
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x19
push 0x30
pop eax
push 0x10
pop edx
test ecx ecx
je r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
push 0x3a
pop eax
cmp si ax
jae r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov ecx eax
lea eax [ esi - 0x61 ]
cmp ax [ ebp - 0x4 ]
ja r-xdata
push 0x5a
pop eax
cmp si ax
jbe r-xdata
mov eax 0xff10
cmp si ax
jae r-xdata
movzx eax si
sub eax 0x30
jmp r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
push 0x3a
pop eax
cmp si ax
jae r-xdata
or eax 0xffffffff
lea eax [ esi - 0x61 ]
cmp ax [ ebp - 0x4 ]
movzx eax si
ja r-xdata
mov eax 0xff1a
cmp si ax
jae r-xdata
mov eax 0x660
cmp si ax
jb r-xdata
cmp eax 0xffffffff
jne r-xdata
lea eax [ esi - 0x61 ]
cmp ax [ ebp - 0x4 ]
ja r-xdata
push 0x5a
pop eax
cmp si ax
jbe r-xdata
mov eax 0xff10
cmp si ax
jae r-xdata
movzx eax si
sub eax 0x30
jmp r-xdata
movzx eax [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
cmp eax 0x78
je r-xdata
test ecx ecx
jne r-xdata
add eax 0xffffffc9
jmp r-xdata
sub eax 0x20
or eax 0xffffffff
movzx eax si
sub eax 0xff10
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
test eax eax
je r-xdata
or eax 0xffffffff
lea eax [ esi - 0x61 ]
cmp ax [ ebp - 0x4 ]
movzx eax si
ja r-xdata
mov eax 0xff1a
cmp si ax
jae r-xdata
mov eax 0x660
cmp si ax
jb r-xdata
cmp eax 0xffffffff
jne r-xdata
test ecx ecx
jne r-xdata
cmp eax 0x58
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
mov eax 0x6f0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x660
jmp r-xdata
push esi
lea ecx [ ebp + 0xc ]
call sub_423ea3
test bl 0x8
jne r-xdata
cmp eax [ ebp + 0x14 ]
jae r-xdata
add eax 0xffffffc9
jmp r-xdata
sub eax 0x20
or eax 0xffffffff
movzx eax si
sub eax 0xff10
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
cmp eax 0xffffffff
je r-xdata
movzx esi [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
mov [ ebp + 0x14 ] edx
test ecx ecx
jne r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov esi [ ebp - 0x8 ]
push esi
push ebx
call sub_42353b
pop ecx
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0xc ]
xor ebx ebx
mov [ ebp + 0xc ] eax
jmp r-xdata
mov esi [ ebp - 0x8 ]
or ebx 0x8
cmp esi ecx
jb r-xdata
mov eax 0x6f0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x660
jmp r-xdata
push eax
lea ecx [ ebp + 0xc ]
call sub_423ea3
mov edi [ ebp + 0xc ]
jmp r-xdata
mov [ ebp + 0x14 ] 0x8
mov eax 0x966
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x6f0
jmp r-xdata
test bl 0x2
je r-xdata
call sub_425628
mov [ eax ] 0x22
test bl 0x1
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
pop esi
je r-xdata
imul esi [ ebp + 0x14 ]
add esi eax
mov [ ebp - 0x8 ] esi
jne r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov ebx esi
neg esi
test bl 0x2
je r-xdata
or esi 0xffffffff
jmp r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
jmp r-xdata
push 0x30
pop eax
cmp si ax
jb r-xdata
or ebx 0x4
jmp r-xdata
cmp eax edx
jbe r-xdata
mov eax 0x966
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x6f0
jmp r-xdata
mov eax 0x9e6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x966
jmp r-xdata
mov ebx 0x7fffffff
jmp r-xdata
mov ebx 0x80000000
jmp r-xdata
movzx esi [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0x9e6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x966
jmp r-xdata
mov eax 0xa66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x9e6
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xa66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x9e6
jmp r-xdata
mov eax 0xae6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xa66
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xae6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xa66
jmp r-xdata
mov eax 0xb66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xae6
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xb66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xae6
jmp r-xdata
mov eax 0xc66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xb66
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xc66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xb66
jmp r-xdata
mov eax 0xce6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xc66
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xce6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xc66
jmp r-xdata
mov eax 0xd66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xce6
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xd66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xce6
jmp r-xdata
mov eax 0xe50
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xd66
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xe50
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xd66
jmp r-xdata
mov eax 0xed0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xe50
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xed0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xe50
jmp r-xdata
mov eax 0xf20
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xed0
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xf20
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xed0
jmp r-xdata
mov eax 0x1040
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xf20
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0x1040
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xf20
jmp r-xdata
mov eax 0x17e0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x1040
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0x17e0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x1040
jmp r-xdata
mov eax 0x1810
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x17e0
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0x1810
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x17e0
jmp r-xdata
movzx eax si
sub eax 0x1810
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
movzx eax si
sub eax 0x1810
jmp r-xdata
sub_423e7b
mov edi edi
push ebp
mov ebp esp
dec [ ecx ]
mov al [ ebp + 0x8 ]
mov ecx [ ecx ]
test al al
je r-xdata
pop ebp
retn 0x4
cmp [ ecx ] al
je r-xdata
call sub_425628
mov [ eax ] 0x16
call sub_425507
sub_423ea3
mov edi edi
push ebp
mov ebp esp
add [ ecx ] 0xfffffffe
mov ax [ ebp + 0x8 ]
mov ecx [ ecx ]
test ax ax
je r-xdata
pop ebp
retn 0x4
cmp [ ecx ] ax
je r-xdata
call sub_425628
mov [ eax ] 0x16
call sub_425507
sub_423eea
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
push ecx
push ecx
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42563b
add esp 0xc
push 0x0
call sub_42356e
add esp 0x14
mov esp ebp
pop ebp
retn
sub_423f28
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_423f6c
mov esi eax
test esi esi
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_41cabf
mov esp ebp
pop ebp
retn
sub_423f6c
push 0xc
push r--data
call sub_41cb60
and [ ebp - 0x1c ] 0x0
push 0x0
call sub_426ebf
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx esi
and ecx 0x1f
xor esi [ rw-data ]
ror esi cl
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_423fb5
mov eax esi
call sub_41cba6
retn
sub_423fbe
push 0xc
push r--data
call sub_42e8a0
call sub_425b08
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
call sub_425234
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_423ffa
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_425b8c
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_41cabf
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov ecx edx
push ebx
xor ebx ebx
push edi
lea eax [ edx + 0x90 ]
cmp edx eax
je r-xdata
mov ecx ebx
mov edi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
mov edi [ ecx + 0x8 ]
test edi edi
jne r-xdata
test ecx ecx
je r-xdata
add ecx 0xc
cmp ecx eax
jne r-xdata
pop edi
pop ebx
cmp edi 0x5
jne r-xdata
cmp [ ecx ] edi
je r-xdata
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ecx + 0x8 ] ebx
inc eax
jmp r-xdata
or eax 0xffffffff
mov eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
cmp [ ecx + 0x4 ] 0x8
jne r-xdata
push [ ecx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx edi
call [ r--data ]
call edi
lea eax [ edx + 0x24 ]
lea edx [ eax + 0x6c ]
jmp r-xdata
cmp eax edx
jne r-xdata
mov [ eax + 0x8 ] ebx
add eax 0xc
mov ebx [ esi + 0x8 ]
mov eax 0xc0000091
cmp [ ecx ] eax
ja r-xdata
cmp [ ecx ] 0xc0000092
je r-xdata
je r-xdata
mov [ esi + 0x8 ] 0x8a
cmp [ ecx ] 0xc0000093
je r-xdata
mov [ esi + 0x8 ] 0x84
jmp r-xdata
cmp [ ecx ] 0xc000008d
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x85
jmp r-xdata
cmp [ ecx ] 0xc00002b4
je r-xdata
push [ esi + 0x8 ]
mov ecx edi
push 0x8
call [ r--data ]
call edi
pop ecx
mov [ esi + 0x8 ] ebx
jmp r-xdata
mov [ esi + 0x8 ] 0x82
jmp r-xdata
cmp [ ecx ] 0xc000008e
je r-xdata
mov [ esi + 0x8 ] 0x8e
jmp r-xdata
cmp [ ecx ] 0xc00002b5
jne r-xdata
mov [ esi + 0x8 ] 0x83
jmp r-xdata
cmp [ ecx ] 0xc000008f
je r-xdata
mov [ esi + 0x8 ] 0x8d
jmp r-xdata
mov [ esi + 0x8 ] 0x86
jmp r-xdata
cmp [ ecx ] 0xc0000090
jne r-xdata
mov [ esi + 0x8 ] 0x81
jmp r-xdata
sub_424180
push 0xc
push r--data
call sub_42e8a0
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push 0x2
call sub_426ebf
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
call sub_41ceba
test al al
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42428a
test esi esi
jne r-xdata
xor eax eax
inc eax
mov ecx rw-data
xchg [ ecx ] eax
mov [ ebp - 0x4 ] 0x1
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
push [ ebp + 0x8 ]
call sub_4242da
pop ecx
call sub_42e8e9
retn
push [ ebp + 0x8 ]
call sub_424299
cmp edi 0x1
jne r-xdata
mov ebx [ rw-data ]
mov edx ebx
and edx 0x1f
push 0x20
pop ecx
sub ecx edx
xor eax eax
ror eax cl
xor eax ebx
mov ecx [ rw-data ]
cmp ecx eax
je r-xdata
and [ ebp - 0x4 ] 0x0
test edi edi
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
xor ebx ecx
xor eax eax
push eax
push eax
push eax
mov ecx edx
ror ebx cl
mov ecx ebx
call [ r--data ]
call ebx
push r--data
push r--data
call sub_424f1b
pop ecx
pop ecx
test esi esi
jne r-xdata
push r--data
push r--data
call sub_424f1b
pop ecx
pop ecx
call sub_424c92
pop ecx
mov [ rw-data ] 0x1
sub_424299
mov edi edi
push ebp
mov ebp esp
call sub_4272fc
test al al
je r-xdata
push [ ebp + 0x8 ]
call sub_4242da
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
mov eax [ fs : 0x30 ]
mov eax [ eax + 0x68 ]
shr eax 0x8
test al 0x1
jne r-xdata
push [ ebp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
sub_4242da
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push r--data
push 0x0
call [ GetModuleHandleExW@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push esi
push r--data
push [ ebp - 0x8 ]
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_41cabf
mov esp ebp
pop ebp
retn
push [ ebp - 0x8 ]
call [ FreeLibrary@IAT ]
pop esi
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
sub_424387
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
cmp [ rw-data ] eax
jne sub_423fbe
push [ ebp + 0x8 ]
call sub_4249fc
pop ecx
mov [ rw-data ] eax
pop ebp
retn
sub_4243d5
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x2
push esi
je r-xdata
push ebx
push edi
call sub_427d41
push 0x104
mov esi rw-data
xor edi edi
push esi
push edi
call [ GetModuleFileNameA@IAT ]
mov ebx [ rw-data ]
mov [ rw-data ] esi
test ebx ebx
je r-xdata
cmp [ ebp + 0x8 ] 0x1
je r-xdata
mov ebx esi
cmp [ ebx ] 0x0
jne r-xdata
call sub_425628
push 0x16
pop esi
mov [ eax ] esi
call sub_425507
mov eax esi
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push ebx
call sub_4244f9
add esp 0x14
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
call sub_425628
push 0xc
pop edi
mov [ eax ] edi
jmp r-xdata
lea eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] edi
push eax
lea eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] edi
push eax
push edi
push edi
push ebx
call sub_4244f9
push 0x1
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
call sub_42466e
mov esi eax
add esp 0x20
test esi esi
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edi
push eax
push esi
call sub_42785c
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
dec eax
mov [ rw-data ] eax
mov eax esi
mov esi edi
mov [ rw-data ] eax
mov ebx edi
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx edi
mov eax edx
cmp [ edx ] edi
je r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
push esi
call sub_4251ac
pop ecx
pop edi
mov eax ebx
pop ebx
mov eax edi
mov [ rw-data ] ecx
mov [ ebp - 0x8 ] eax
mov ebx edi
mov [ rw-data ] edx
lea eax [ eax + 0x4 ]
inc ecx
cmp [ eax ] edi
jne r-xdata
push eax
call sub_4251ac
pop ecx
mov [ ebp - 0x8 ] edi
sub_4244f9
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
and [ ebx ] 0x0
mov edi [ ebp + 0x10 ]
mov [ eax ] 0x1
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
xor cl cl
mov [ ebp - 0x1 ] cl
mov [ eax ] edi
add eax 0x4
mov [ ebp + 0xc ] eax
inc [ ebx ]
test edi edi
je r-xdata
test cl cl
mov al 0x22
sete cl
inc esi
mov [ ebp - 0x1 ] cl
jmp r-xdata
mov al [ esi ]
inc esi
mov [ ebp - 0x2 ] al
movsx eax al
push eax
call sub_4280cc
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc edi
test cl cl
jne r-xdata
mov al [ ebp - 0x2 ]
test al al
je r-xdata
inc [ ebx ]
test edi edi
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x20
je r-xdata
dec esi
mov cl [ ebp - 0x1 ]
inc esi
mov al [ esi ]
mov [ edi ] al
inc edi
test edi edi
je r-xdata
cmp al 0x9
jne r-xdata
mov ecx [ ebp + 0xc ]
pop edi
pop esi
pop ebx
test ecx ecx
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov [ edi - 0x1 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc [ eax ]
mov esp ebp
pop ebp
retn
and [ ecx ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x14 ]
inc [ eax ]
mov [ ecx ] edi
add ecx 0x4
mov [ ebp + 0xc ] ecx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc eax
cmp [ esi ] 0x22
jne r-xdata
test eax eax
jne r-xdata
test al 0x1
jne r-xdata
dec eax
test edi edi
je r-xdata
mov al [ esi ]
test al al
je r-xdata
shr eax 0x1
jmp r-xdata
mov cl [ ebp - 0x1 ]
test cl cl
je r-xdata
inc [ ebx ]
mov [ edi ] 0x5c
inc edi
test edi edi
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
xor edx edx
test cl cl
sete [ ebp - 0x1 ]
lea ecx [ esi + 0x1 ]
cmp [ ecx ] 0x22
jne r-xdata
inc [ ebx ]
jmp r-xdata
mov [ edi ] 0x0
inc edi
test edx edx
je r-xdata
cmp al 0x20
je r-xdata
mov cl [ ebp - 0x1 ]
mov esi ecx
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
test edi edi
je r-xdata
cmp al 0x9
je r-xdata
xor edx edx
inc edx
xor eax eax
jmp r-xdata
movsx eax [ esi ]
push eax
call sub_4280cc
pop ecx
test eax eax
je r-xdata
mov [ edi ] al
inc edi
inc [ ebx ]
inc esi
inc [ ebx ]
test edi edi
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc edi
sub_42466e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0x3fffffff
jb r-xdata
push edi
or edi 0xffffffff
mov ecx [ ebp + 0xc ]
xor edx edx
mov eax edi
div [ ebp + 0x10 ]
cmp ecx eax
jae r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
imul ecx [ ebp + 0x10 ]
shl esi 0x2
sub edi esi
cmp edi ecx
ja r-xdata
pop esi
pop ebp
retn
pop edi
lea eax [ ecx + esi ]
push 0x1
push eax
call sub_425277
push 0x0
mov esi eax
call sub_4251ac
add esp 0xc
mov eax esi
sub_4246ce
cmp [ rw-data ] 0x0
je r-xdata
push esi
push edi
call sub_427d41
call sub_428134
mov esi eax
test esi esi
jne r-xdata
xor eax eax
retn
push esi
call sub_424727
pop ecx
test eax eax
jne r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
mov ecx rw-data
mov [ rw-data ] eax
call sub_42489d
xor edi edi
or edi 0xffffffff
jmp r-xdata
push esi
call sub_4251ac
pop ecx
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_4251ac
pop ecx
sub_424727
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor edx edx
mov esi edi
mov al [ edi ]
jmp r-xdata
test al al
jne r-xdata
cmp al 0x3d
je r-xdata
lea eax [ edx + 0x1 ]
push 0x4
push eax
call sub_425277
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
mov ecx esi
lea ebx [ ecx + 0x1 ]
inc edx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx ebx
inc esi
add esi ecx
mov al [ esi ]
cmp [ edi ] 0x0
jne r-xdata
mov ecx edi
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
cmp [ edi ] 0x3d
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x8 ] eax
je r-xdata
push 0x0
call sub_4251ac
pop ecx
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
add edi eax
push 0x1
push eax
call sub_425277
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push ebx
call sub_4247f8
push 0x0
call sub_4251ac
pop ecx
pop ecx
push edi
push [ ebp - 0x8 ]
push esi
call sub_425152
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_425517
int3
mov eax [ ebp - 0x4 ]
push 0x0
mov [ eax ] esi
add eax 0x4
mov [ ebp - 0x4 ] eax
call sub_4251ac
mov eax [ ebp - 0x8 ]
pop ecx
sub_4247f8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
push edi
mov edi esi
jmp r-xdata
test eax eax
jne r-xdata
push eax
call sub_4251ac
lea edi [ edi + 0x4 ]
mov eax [ edi ]
pop ecx
push esi
call sub_4251ac
pop ecx
pop edi
sub_424827
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
lea edi [ esi + 0x4 ]
jmp r-xdata
cmp esi edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
push esi
call [ r--data ]
call [ ebp + 0x8 ]
pop ecx
add esi 0x4
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_41cabf
mov esp ebp
pop ebp
retn 0x4
sub_42489d
mov edi edi
push ebp
mov ebp esp
lea eax [ ecx + 0x4 ]
mov edx eax
sub edx ecx
add edx 0x3
push esi
xor esi esi
shr edx 0x2
cmp eax ecx
sbb eax eax
not eax
and eax edx
je r-xdata
pop esi
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
inc esi
mov [ ecx ] edx
lea ecx [ ecx + 0x4 ]
cmp esi eax
jne r-xdata
sub_4248ce
push sub_424867
mov ecx rw-data
call sub_424827
push sub_424882
mov ecx rw-data
call sub_424827
push [ rw-data ]
call sub_4247f8
push [ rw-data ]
call sub_4247f8
pop ecx
pop ecx
retn
sub_42490a
push 0xc
push r--data
call sub_41cb60
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_426ebf
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_424b3b
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42494f
mov eax esi
call sub_41cba6
retn 0xc
sub_42495b
push 0xc
push r--data
call sub_41cb60
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_426ebf
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_424a1b
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4249a0
mov eax esi
call sub_41cba6
retn 0xc
sub_4249ac
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_42495b
mov esp ebp
pop ebp
retn
sub_4249d4
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_42490a
mov esp ebp
pop ebp
retn
sub_4249fc
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov eax [ ebp + 0x8 ]
ror eax cl
xor eax [ rw-data ]
pop ebp
retn
sub_424a1b
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax ecx
mov [ ebp - 0x18 ] eax
push ebx
mov eax [ eax ]
mov ebx [ eax ]
test ebx ebx
jne r-xdata
mov edx [ rw-data ]
push esi
push edi
mov edi [ ebx ]
mov esi edx
mov ebx [ ebx + 0x4 ]
and esi 0x1f
xor edi edx
mov [ ebp - 0x14 ] esi
mov ecx esi
xor ebx edx
ror edi cl
ror ebx cl
test edi edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop edi
xor eax eax
pop esi
cmp edi 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_41cabf
mov esp ebp
pop ebp
retn
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ebx
cmp edi 0xffffffff
je r-xdata
cmp [ ebx ] eax
je r-xdata
mov eax edx
xor edx edx
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
ror edx cl
mov ecx [ ebp - 0x18 ]
xor edx [ rw-data ]
mov eax [ ecx ]
mov eax [ eax ]
mov [ eax ] edx
mov eax [ ecx ]
mov eax [ eax ]
mov [ eax + 0x4 ] edx
mov eax [ ecx ]
mov eax [ eax ]
mov [ eax + 0x8 ] edx
push edi
call sub_4251ac
mov edx [ rw-data ]
pop ecx
sub ebx 0x4
cmp ebx edi
jb r-xdata
mov esi [ ebx ]
mov ecx [ ebp - 0x14 ]
xor esi edx
ror esi cl
mov ecx esi
mov [ ebx ] eax
call [ r--data ]
call esi
mov eax [ ebp - 0x18 ]
mov edx [ rw-data ]
mov esi edx
and esi 0x1f
mov [ ebp - 0x14 ] esi
mov eax [ eax ]
mov eax [ eax ]
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
xor ecx edx
mov [ ebp - 0x8 ] ecx
xor eax edx
mov ecx esi
ror [ ebp - 0x8 ] cl
ror eax cl
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jne r-xdata
mov [ ebp - 0xc ] ecx
mov edi ecx
mov [ ebp - 0x10 ] eax
mov ebx eax
jmp r-xdata
push 0x20
pop ecx
cmp eax [ ebp - 0x10 ]
je r-xdata
push 0x20
pop ecx
sub ecx esi
xor eax eax
ror eax cl
xor eax edx
mov ecx [ ebp - 0x8 ]
sub_424b3b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax ecx
mov [ ebp - 0x8 ] eax
push esi
mov eax [ eax ]
mov esi [ eax ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov ecx eax
push ebx
mov ebx [ esi ]
and ecx 0x1f
push edi
mov edi [ esi + 0x4 ]
xor ebx eax
mov esi [ esi + 0x8 ]
xor edi eax
xor esi eax
ror edi cl
ror esi cl
ror ebx cl
cmp edi esi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push [ eax ]
call sub_4249fc
push ebx
mov [ edi ] eax
call sub_41c410
mov ebx [ ebp - 0x8 ]
mov ecx [ ebx ]
mov ecx [ ecx ]
mov [ ecx ] eax
lea eax [ edi + 0x4 ]
push eax
call sub_41c410
mov ecx [ ebx ]
push esi
mov ecx [ ecx ]
mov [ ecx + 0x4 ] eax
call sub_41c410
mov ecx [ ebx ]
add esp 0x10
mov ecx [ ecx ]
mov [ ecx + 0x8 ] eax
xor eax eax
sub esi ebx
mov eax 0x200
sar esi 0x2
cmp esi eax
ja r-xdata
pop esi
mov esp ebp
pop ebp
retn
lea edi [ eax + esi ]
test edi edi
jne r-xdata
mov eax esi
cmp edi esi
jb r-xdata
push 0x20
pop edi
push 0x4
lea edi [ esi + 0x4 ]
push edi
push ebx
call sub_4281b7
push 0x0
mov [ ebp - 0x4 ] eax
call sub_4251ac
mov ecx [ ebp - 0x4 ]
add esp 0x10
test ecx ecx
jne r-xdata
push 0x4
push edi
push ebx
call sub_4281b7
push 0x0
mov [ ebp - 0x4 ] eax
call sub_4251ac
mov ecx [ ebp - 0x4 ]
add esp 0x10
test ecx ecx
jne r-xdata
lea eax [ ecx + esi * 4 ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
lea esi [ ecx + edi * 4 ]
mov eax [ rw-data ]
mov edi [ ebp - 0x4 ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
mov ecx edi
xor eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov eax esi
sub eax edi
add eax 0x3
shr eax 0x2
cmp esi edi
sbb edx edx
not edx
and edx eax
mov [ ebp - 0x4 ] edx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0xc ]
xor eax eax
pop edi
pop ebx
inc eax
mov [ ecx ] edx
lea ecx [ ecx + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_424c92
mov edi edi
push ebp
mov ebp esp
push ecx
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x2
call sub_4249ac
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_424caf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
pop ebp
retn
sub_424cec
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x2
call sub_4249d4
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_424d47
mov eax [ rw-data ]
push esi
push 0x20
and eax 0x1f
xor esi esi
pop ecx
sub ecx eax
ror esi cl
xor esi [ rw-data ]
push esi
call sub_425478
push esi
call sub_423f14
push esi
call sub_42841d
push esi
call sub_424e56
push esi
call sub_424344
add esp 0x14
mov al 0x1
pop esi
retn
sub_424d8d
mov eax [ rw-data ]
or ecx 0xffffffff
push esi
[ eax ] ecx
jne r-xdata
push [ rw-data ]
call sub_4251ac
push [ rw-data ]
xor esi esi
mov [ rw-data ] esi
call sub_4251ac
push [ rw-data ]
mov [ rw-data ] esi
call sub_4251ac
push [ rw-data ]
mov [ rw-data ] esi
call sub_4251ac
add esp 0x10
mov [ rw-data ] esi
mov al 0x1
pop esi
retn
mov eax [ rw-data ]
mov esi rw-data
cmp eax esi
je r-xdata
push eax
call sub_4251ac
pop ecx
mov [ rw-data ] esi
sub_424e6a
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ rw-data ]
mov ecx esi
xor esi [ rw-data ]
and ecx 0x1f
ror esi cl
test esi esi
jne r-xdata
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
pop ecx
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_41cabf
mov esp ebp
pop ebp
retn
sub_424ec8
mov edi edi
push ebx
push esi
call sub_427d41
mov esi [ rw-data ]
test esi esi
jne r-xdata
xor bl bl
mov esi rw-data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movsx eax al
push eax
call sub_4280cc
pop ecx
test eax eax
je r-xdata
test bl bl
sete bl
mov eax esi
pop esi
pop ebx
retn
test bl bl
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
mov al [ esi ]
cmp al 0x20
jg r-xdata
cmp al 0x20
jg r-xdata
inc esi
sub_424f1b
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
sub eax esi
add eax 0x3
push edi
xor edi edi
shr eax 0x2
cmp [ ebp + 0xc ] esi
sbb ebx ebx
not ebx
and ebx eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41cabf
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
add esi 0x4
inc edi
cmp edi ebx
jne r-xdata
mov ecx eax
call [ r--data ]
call [ ebp - 0x8 ]
sub_424f77
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push edi
jmp r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
xor eax eax
add esi 0x4
mov ecx edi
call [ r--data ]
call edi
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_41cabf
mov esp ebp
pop ebp
retn
sub_424fbc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x4000
je r-xdata
mov ecx rw-data
xchg [ ecx ] eax
xor eax eax
pop ebp
retn
cmp eax 0x8000
je r-xdata
cmp eax 0x10000
je r-xdata
call sub_425628
mov [ eax ] 0x16
call sub_425507
push 0x16
pop eax
pop ebp
retn
sub_425004
push 0x8
push r--data
call sub_41cb60
mov esi rw-data
cmp [ rw-data ] esi
je r-xdata
call sub_41cba6
retn
push 0x4
call sub_426ebf
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push rw-data
call sub_428fd6
pop ecx
pop ecx
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42504d
sub_425056
mov edi edi
push ebp
mov ebp esp
push esi
call sub_425b08
mov edx [ ebp + 0x8 ]
mov esi eax
push 0x0
pop eax
mov ecx [ esi + 0x350 ]
test cl 0x2
sete al
inc eax
cmp edx 0xffffffff
je r-xdata
or [ rw-data ] 0xffffffff
test edx edx
je r-xdata
pop esi
pop ebp
retn
cmp edx 0x1
je r-xdata
or ecx 0x2
cmp edx 0x2
je r-xdata
and ecx 0xfffffffd
jmp r-xdata
call sub_425628
mov [ eax ] 0x16
call sub_425507
or eax 0xffffffff
jmp r-xdata
mov [ esi + 0x350 ] ecx
jmp r-xdata
sub_4250be
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx rw-data
xchg [ ecx ] eax
pop ebp
retn
cmp eax 0x1
je r-xdata
call sub_425628
mov [ eax ] 0x16
call sub_425507
or eax 0xffffffff
pop ebp
retn
sub_4250f3
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
and ecx 0xfff7ffff
and eax ecx
push esi
mov esi [ ebp + 0x8 ]
test eax 0xfcf0fce0
je r-xdata
push ecx
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_4291af
call sub_4291af
mov [ esi ] eax
jmp r-xdata
call sub_425628
push 0x16
pop esi
mov [ eax ] esi
call sub_425507
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_4291af
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_425152
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
test edx edx
je r-xdata
call sub_425628
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push edi
mov edi edx
sub esi edx
mov [ edx ] 0x0
pop edi
test ecx ecx
jne r-xdata
sub ecx 0x1
jne r-xdata
xor esi esi
jmp r-xdata
mov [ edx ] cl
call sub_425628
push 0x22
jmp r-xdata
mov al [ esi + edi ]
mov [ edi ] al
inc edi
test al al
je r-xdata
mov eax esi
pop esi
pop ebp
retn
pop esi
mov [ eax ] esi
call sub_425507
sub_4251ac
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_425628
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_4255af
pop ecx
mov [ esi ] eax
pop esi
sub_4251e6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
call sub_425628
mov [ eax ] 0xc
xor eax eax
test esi esi
jne r-xdata
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
call sub_4250b8
test eax eax
je r-xdata
jmp r-xdata
push esi
call sub_423f28
pop ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn
sub_425234
call sub_428406
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_428461
pop ecx
push 0x3
call sub_424371
int3
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push 0x1
push 0x40000015
push 0x3
call sub_42533d
add esp 0xc
push 0x7
pop ecx
int 0x29
sub_425277
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
imul esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0xc ]
jb r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
call sub_425628
mov [ eax ] 0xc
xor eax eax
call sub_4250b8
test eax eax
je r-xdata
jmp r-xdata
push esi
call sub_423f28
pop ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn
sub_4252d4
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_4251e6
pop ecx
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
push edi
call sub_4251ac
pop ecx
jmp r-xdata
pop edi
pop ebp
retn
push esi
push edi
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
test eax eax
je r-xdata
call sub_425628
mov [ eax ] 0xc
xor eax eax
call sub_4250b8
test eax eax
je r-xdata
jmp r-xdata
push esi
call sub_423f28
pop ecx
test eax eax
je r-xdata
pop esi
sub_42533d
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0xffffffff
push edi
je r-xdata
push 0x50
lea eax [ ebp - 0x320 ]
push 0x0
push eax
call sub_41d1e0
push 0x2cc
lea eax [ ebp - 0x2d0 ]
push 0x0
push eax
call sub_41d1e0
lea eax [ ebp - 0x320 ]
add esp 0x18
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x218 ] eax
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov eax [ eax - 0x4 ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x320 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x31c ] eax
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_41cf4b
pop ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_41cabf
mov esp ebp
pop ebp
retn
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
call sub_41cf4b
pop ecx
sub_42548c
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_425b8c
test eax eax
je r-xdata
push [ ebp + 0x18 ]
mov esi [ rw-data ]
mov ecx esi
push [ ebp + 0x14 ]
xor esi [ rw-data ]
and ecx 0x1f
push [ ebp + 0x10 ]
ror esi cl
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov esi [ eax + 0x35c ]
test esi esi
je r-xdata
mov ecx esi
call [ r--data ]
call esi
mov ecx [ ebp - 0x4 ]
add esp 0x14
xor ecx ebp
pop esi
call sub_41cabf
mov esp ebp
pop ebp
retn
call sub_425517
int3
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
sub_425517
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_42533d
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
push 0x5
pop ecx
int 0x29
sub_42554a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_421c26
lea eax [ ebp - 0xc ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_42300d
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_425582
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_42554a
pop ecx
pop ecx
pop ebp
retn
sub_4255af
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x2d
jb r-xdata
cmp ecx [ eax * 8 + r--data ]
je r-xdata
lea eax [ ecx - 0x13 ]
cmp eax 0x11
ja r-xdata
lea eax [ ecx - 0xbc ]
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_4255f2
mov edi edi
push ebp
mov ebp esp
push esi
call sub_425615
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_4255af
pop ecx
mov esi eax
call sub_425628
mov [ eax ] esi
pop esi
pop ebp
retn
sub_42563b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
test ecx ecx
je r-xdata
pop ebp
retn
mov [ ecx ] edx
sub_425656
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_42563b
add esp 0xc
push 0x0
call sub_423796
add esp 0x14
mov esp ebp
pop ebp
retn
sub_425682
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_421c26
mov eax [ ebp - 0xc ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
movzx eax [ esi ]
push eax
call sub_426a8c
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
xor edi edi
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
inc edi
push edi
push esi
push 0x9
push [ eax + 0x8 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov edi [ ebp - 0xc ]
cmp [ edi + 0x4 ] 0x1
jle r-xdata
xor edi edi
inc edi
jmp r-xdata
movzx eax [ esi ]
mov [ ecx ] ax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_425628
or edi 0xffffffff
mov [ eax ] 0x2a
cmp ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x4 ]
jl r-xdata
mov eax edi
pop edi
jmp r-xdata
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
cmp [ esi + 0x1 ] 0x0
je r-xdata
jb r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push [ edi + 0x4 ]
push esi
push 0x9
push [ edi + 0x8 ]
call [ MultiByteToWideChar@IAT ]
mov edi [ ebp - 0xc ]
test eax eax
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ edi + 0x4 ]
jmp r-xdata
sub_425796
push 0x8
push r--data
call sub_41cb60
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_426ebf
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x4 ]
mov eax [ eax ]
push [ eax ]
mov eax [ ecx ]
push [ eax ]
call sub_425abd
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4257da
call sub_41cba6
retn 0xc
sub_4257e6
push 0x8
push r--data
call sub_41cb60
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_426ebf
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov ecx [ eax + 0x48 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42583b
call sub_41cba6
retn 0xc
or eax 0xffffffff
[ ecx ] eax
jne r-xdata
cmp ecx rw-data
je r-xdata
push ecx
call sub_4251ac
pop ecx
sub_425847
push 0x8
push r--data
call sub_41cb60
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_426ebf
pop ecx
and [ ebp - 0x4 ] 0x0
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
push [ eax ]
call sub_425abd
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_425886
call sub_41cba6
retn 0xc
sub_425892
push 0x8
push r--data
call sub_41cb60
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_426ebf
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
[ eax ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4258ce
call sub_41cba6
retn 0xc
sub_4258da
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_4257e6
mov esp ebp
pop ebp
retn
sub_425902
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_425796
mov esp ebp
pop ebp
retn
sub_42592a
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_425847
mov esp ebp
pop ebp
retn
sub_425952
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_425892
mov esp ebp
pop ebp
retn
sub_42597a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
inc ecx
push 0x43
mov [ eax + 0x18 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] r--data
mov eax [ ebp + 0x8 ]
mov [ eax + 0x350 ] ecx
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax + 0x48 ] rw-data
mov eax [ ebp + 0x8 ]
mov [ eax + 0x6c ] cx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x172 ] cx
mov eax [ ebp + 0x8 ]
and [ eax + 0x34c ] 0x0
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x5
call sub_425952
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x4
call sub_425902
add esp 0x10
mov esp ebp
pop ebp
retn
sub_4259f3
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn 0x4
push [ ebp + 0x8 ]
call sub_425a14
push [ ebp + 0x8 ]
call sub_4251ac
pop ecx
pop ecx
sub_425a14
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp ecx r--data
je r-xdata
push [ eax + 0x3c ]
call sub_4251ac
mov eax [ ebp + 0x8 ]
push [ eax + 0x30 ]
call sub_4251ac
mov eax [ ebp + 0x8 ]
push [ eax + 0x34 ]
call sub_4251ac
mov eax [ ebp + 0x8 ]
push [ eax + 0x38 ]
call sub_4251ac
mov eax [ ebp + 0x8 ]
push [ eax + 0x28 ]
call sub_4251ac
mov eax [ ebp + 0x8 ]
push [ eax + 0x2c ]
call sub_4251ac
mov eax [ ebp + 0x8 ]
push [ eax + 0x40 ]
call sub_4251ac
mov eax [ ebp + 0x8 ]
push [ eax + 0x44 ]
call sub_4251ac
mov eax [ ebp + 0x8 ]
push [ eax + 0x360 ]
call sub_4251ac
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x5
call sub_4258da
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x4
call sub_42592a
add esp 0x34
mov esp ebp
pop ebp
retn
push ecx
call sub_4251ac
mov eax [ ebp + 0x8 ]
pop ecx
sub_425abd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4c ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov [ esi + 0x4c ] eax
pop esi
test eax eax
je r-xdata
push [ esi + 0x4c ]
call sub_428ede
mov eax [ esi + 0x4c ]
pop ecx
cmp eax [ rw-data ]
je r-xdata
pop ebp
retn
push eax
call sub_428c95
pop ecx
cmp eax rw-data
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
push eax
call sub_428d12
pop ecx
sub_425b08
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
mov esi eax
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push 0x364
push 0x1
call sub_425277
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
push eax
call sub_4270e1
mov edi eax
test edi edi
jne r-xdata
push edi
push [ rw-data ]
call sub_427137
test eax eax
jne r-xdata
push eax
push esi
call [ SetLastError@IAT ]
mov eax edi
pop edi
pop esi
retn
push rw-data
push edi
call sub_42597a
push 0x0
call sub_4251ac
add esp 0xc
test edi edi
je r-xdata
push edi
jmp r-xdata
push esi
call [ SetLastError@IAT ]
call sub_425234
call sub_4251ac
pop ecx
jmp r-xdata
sub_425b8c
mov edi edi
push ebx
push esi
push edi
call [ GetLastError@IAT ]
mov esi eax
xor ebx ebx
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push 0x364
push 0x1
call sub_425277
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
push eax
call sub_4270e1
mov edi eax
test edi edi
jne r-xdata
push edi
push [ rw-data ]
call sub_427137
test eax eax
jne r-xdata
push ebx
push esi
call [ SetLastError@IAT ]
mov ebx edi
push rw-data
push edi
call sub_42597a
push ebx
call sub_4251ac
add esp 0xc
test edi edi
jne r-xdata
push edi
jmp r-xdata
push esi
call [ SetLastError@IAT ]
jmp r-xdata
call sub_4251ac
pop ecx
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
retn
sub_425c11
push sub_4259f3
call sub_427035
mov [ rw-data ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_425b8c
test eax eax
jne r-xdata
xor al al
retn
mov al 0x1
retn
push eax
call sub_425c3d
pop ecx
jmp r-xdata
sub_425c57
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
test [ ecx + 0x350 ] eax
jne r-xdata
call sub_428f5f
mov [ esi ] eax
sub_425c84
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
test [ ecx + 0x350 ] eax
jne r-xdata
call sub_427d5f
mov [ esi ] eax
sub_425cb1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x7ff
push ebx
push esi
xor edx edx
mov ebx [ eax ]
mov esi [ eax + 0x4 ]
mov eax esi
shr eax 0x14
and eax ecx
push edi
cmp eax ecx
jne r-xdata
xor eax eax
cmp edx edx
jne r-xdata
mov edi esi
mov eax ebx
and edi 0xfffff
or eax edi
jne r-xdata
mov ecx esi
mov eax edx
and ecx 0x80000000
or eax ecx
mov eax 0x80000
je r-xdata
inc eax
jmp r-xdata
and esi eax
or edx esi
je r-xdata
cmp ebx edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x3
jmp r-xdata
push 0x2
jmp r-xdata
cmp edi eax
jne r-xdata
pop eax
jmp r-xdata
push 0x4
sub_425d1d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
mov ecx [ eax + 0x4 ]
mov eax edx
and ecx 0x80000000
or eax ecx
je r-xdata
mov al dl
pop ebp
retn
inc edx
sub_425d3b
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
mov edi [ ebp + 0x1c ]
xor ebx ebx
test edi edi
jns r-xdata
mov esi [ ebp + 0xc ]
lea ecx [ ebp - 0x30 ]
push [ ebp + 0x28 ]
mov [ esi ] bl
call sub_421c26
lea eax [ edi + 0xb ]
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov edi ebx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov eax ecx
shr eax 0x14
and eax 0x7ff
cmp eax 0x7ff
jne r-xdata
call sub_425628
push 0x22
pop edi
mov [ eax ] edi
call sub_425507
jmp r-xdata
and ecx 0x80000000
mov eax ebx
or eax ecx
je r-xdata
cmp ebx ebx
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov ecx [ edx + 0x4 ]
xor ebx ebx
cmp [ ebp + 0x20 ] bl
push 0x30
sete bl
mov [ ebp - 0xc ] 0x3ff
dec ebx
xor eax eax
and ebx 0xffffffe0
and ecx 0x7ff00000
add ebx 0x27
or eax ecx
mov [ ebp - 0x1c ] ebx
pop eax
jne r-xdata
mov [ esi ] 0x2d
inc esi
push ebx
push [ ebp + 0x24 ]
push ebx
push edi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
push edx
call sub_42603e
mov edi eax
add esp 0x24
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x30 ]
and [ ecx + 0x350 ] 0xfffffffd
mov [ esi ] 0x31
inc esi
mov [ esi ] al
inc esi
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
and eax 0xfffff
or ecx eax
jne r-xdata
push 0x65
push esi
call sub_42e9f0
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] bl
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov al [ eax ]
mov [ ecx ] al
mov [ ecx ] 0x0
jmp r-xdata
mov [ ebp - 0xc ] 0x3fe
jmp r-xdata
and [ ebp - 0xc ] ecx
jmp r-xdata
mov edi ebx
jmp r-xdata
cmp [ ebp + 0x20 ] bl
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] bl
and [ ebp - 0x4 ] 0x0
mov ecx 0xf0000
push 0x30
pop eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x10 ] ecx
cmp [ edx ] 0x0
jbe r-xdata
mov eax [ edx + 0x4 ]
and eax 0xfffff
mov [ ebp - 0x10 ] eax
ja r-xdata
mov ecx esi
inc esi
mov [ ebp - 0x18 ] ecx
test edi edi
jne r-xdata
test ax ax
js r-xdata
mov eax [ edx ]
mov edx [ edx + 0x4 ]
and eax [ ebp - 0x4 ]
and edx ecx
mov ecx [ ebp - 0x8 ]
and edx 0xfffff
movsx ecx cx
call sub_41c3c0
push 0x30
pop ecx
add ax cx
movzx eax ax
cmp eax 0x39
jbe r-xdata
test edi edi
jle r-xdata
mov eax [ edx ]
mov edx [ edx + 0x4 ]
and eax [ ebp - 0x4 ]
and edx ecx
mov ecx [ ebp - 0x8 ]
and edx 0xfffff
movsx ecx cx
call sub_41c3c0
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ esi ] al
inc esi
mov eax [ ebp - 0x4 ]
shrd eax ecx 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
shr ecx 0x4
sub eax 0x4
dec edi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] eax
test ax ax
jns r-xdata
add eax ebx
mov eax [ ebp - 0x18 ]
cmp [ eax ] 0x0
jne r-xdata
push edi
push 0x30
pop eax
push eax
push esi
call sub_41d1e0
add esp 0xc
add esi edi
push 0x30
lea eax [ esi - 0x1 ]
pop ebx
test edi edi
jle r-xdata
cmp [ ebp + 0x20 ] 0x0
mov cl 0x34
mov edx [ ebp + 0x8 ]
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edx ]
mov edx [ edx + 0x4 ]
call sub_41c3c0
mov ecx eax
xor ebx ebx
and ecx 0x7ff
sub ecx [ ebp - 0xc ]
sbb ebx ebx
js r-xdata
mov esi eax
mov [ eax ] bl
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg ecx
adc ebx 0x0
neg ebx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
mov ebx [ ebp - 0x1c ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp esi edi
jne r-xdata
mov eax 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
test ecx ecx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
push 0x0
push 0xa
push ebx
push ecx
call sub_41c700
add al 0x30
mov [ ebp - 0x1c ] edx
mov [ esi ] al
inc esi
test ebx ebx
jl r-xdata
push 0x0
push eax
push ebx
push ecx
call sub_41c700
add al 0x30
mov [ ebp - 0x1c ] edx
mov [ esi ] al
inc esi
cmp esi edi
jne r-xdata
cmp ecx eax
jb r-xdata
mov edi esi
push 0x30
pop eax
mov [ esi ] al
test ebx ebx
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x30
pop eax
add cl al
xor edi edi
mov [ esi ] cl
mov [ esi + 0x1 ] 0x0
jg r-xdata
push 0x0
push 0x64
push ebx
push ecx
call sub_41c700
add al 0x30
mov [ ebp - 0x1c ] edx
mov [ esi ] al
inc esi
test ebx ebx
jl r-xdata
cmp ecx 0xa
jb r-xdata
jg r-xdata
cmp ecx 0x64
jb r-xdata
sub_42603e
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0xc ]
push esi
mov esi [ ebp + 0x1c ]
push edi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
lea edi [ esi + 0x1 ]
push eax
mov eax [ ebp + 0x8 ]
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_429ade
or ecx 0xffffffff
add esp 0x18
cmp [ ebp + 0x10 ] ecx
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push edi
mov edi [ ebp + 0xc ]
push ecx
xor ecx ecx
cmp [ ebp - 0xc ] 0x2d
sete cl
xor eax eax
test esi esi
setg al
add ecx edi
add eax ecx
push eax
call sub_42954a
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
xor eax eax
cmp [ ebp - 0xc ] 0x2d
sete al
sub ecx eax
xor eax eax
test esi esi
setg al
sub ecx eax
push [ ebp + 0x28 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push esi
push [ ebp + 0x10 ]
push edi
call sub_4260d9
add esp 0x20
mov [ edi ] 0x0
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_4260d9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ ebp + 0x10 ]
test edi edi
jle r-xdata
xor eax eax
mov eax edi
jmp r-xdata
push ebx
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
call sub_421c26
mov dl [ ebp + 0x20 ]
mov ebx [ ebp + 0x8 ]
test dl dl
je r-xdata
call sub_425628
push 0x22
pop esi
mov [ eax ] esi
call sub_425507
mov eax esi
add eax 0x9
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax [ ebp + 0x1c ]
mov esi ebx
cmp [ eax ] 0x2d
jne r-xdata
mov ecx [ ebp + 0x1c ]
xor eax eax
test edi edi
setg al
push eax
xor eax eax
cmp [ ecx ] 0x2d
sete al
add eax ebx
push eax
push [ ebp + 0xc ]
push ebx
call sub_426548
mov dl [ ebp + 0x20 ]
add esp 0x10
test edi edi
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
test dl dl
sete al
add eax edi
add esi eax
or eax 0xffffffff
cmp [ ebp + 0xc ] eax
je r-xdata
mov al [ esi + 0x1 ]
mov [ esi ] al
inc esi
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
push r--data
push eax
push esi
call sub_425152
add esp 0xc
pop ebx
test eax eax
jne r-xdata
mov eax ebx
sub eax esi
add eax [ ebp + 0xc ]
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_425517
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x14 ] al
je r-xdata
mov edx [ ebp + 0x1c ]
mov eax [ edx + 0x8 ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
cmp [ ebp + 0x18 ] 0x2
jne r-xdata
mov edx [ edx + 0x4 ]
sub edx 0x1
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
push 0x64
pop edi
cmp edx edi
jl r-xdata
neg edx
mov [ esi + 0x1 ] 0x2d
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x350 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_41f6f0
add esp 0xc
push 0xa
pop edi
cmp edx edi
jl r-xdata
mov eax edx
cdq
idiv edi
add [ esi + 0x2 ] al
pop edi
pop esi
mov esp ebp
pop ebp
retn
add [ esi + 0x4 ] dl
mov eax edx
cdq
idiv edi
add [ esi + 0x3 ] al
sub_426224
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push esi
push edi
push [ ebp + 0x18 ]
lea edi [ ebp - 0xc ]
push [ ebp + 0x14 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0xc ]
mov edi [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_429ade
or ecx 0xffffffff
add esp 0x18
cmp [ ebp + 0x10 ] ecx
je r-xdata
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
add eax edi
push eax
xor eax eax
cmp [ ebp - 0xc ] 0x2d
push ecx
sete al
add eax esi
push eax
call sub_42954a
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
xor eax eax
cmp [ ebp - 0xc ] 0x2d
sete al
sub ecx eax
push [ ebp + 0x20 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
push edi
push [ ebp + 0x10 ]
push esi
call sub_4262b1
add esp 0x18
mov [ esi ] 0x0
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_4262b1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push edi
push [ ebp + 0x1c ]
call sub_421c26
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
dec ecx
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ edx ] 0x2d
mov esi ebx
jne r-xdata
cmp ecx edi
jne r-xdata
mov eax [ edx + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ edx ] 0x2d
sete al
add eax ecx
mov [ eax + ebx ] 0x30
add esi eax
push 0x1
push esi
push [ ebp + 0xc ]
push ebx
call sub_426548
add esp 0x10
mov [ esi ] 0x30
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
push 0x1
push esi
push [ ebp + 0xc ]
push ebx
call sub_426548
mov eax [ ebp - 0xc ]
add esp 0x10
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
inc esi
mov eax [ ebp + 0x14 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
jns r-xdata
test edi edi
jle r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
and [ eax + 0x350 ] 0xfffffffd
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov edi ecx
neg edi
mov eax ecx
neg eax
cmp eax edi
jge r-xdata
push edi
push esi
push [ ebp + 0xc ]
push ebx
call sub_426548
push edi
push 0x30
push esi
call sub_41d1e0
add esp 0x1c
sub_426388
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x18 ]
xor eax eax
lea edi [ ebp - 0x10 ]
push [ ebp + 0x14 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x10 ]
mov edi [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_429ade
mov eax [ ebp - 0xc ]
xor ecx ecx
mov ebx [ ebp + 0xc ]
add esp 0x18
cmp [ ebp - 0x10 ] 0x2d
sete cl
dec eax
mov [ ebp - 0x4 ] eax
or eax 0xffffffff
lea esi [ ecx + ebx ]
cmp [ ebp + 0x10 ] eax
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
push edi
push eax
push esi
call sub_42954a
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
sub eax ecx
mov eax [ ebp - 0xc ]
dec eax
cmp [ ebp - 0x4 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ ebx ] 0x0
jmp r-xdata
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push edi
push [ ebp + 0x10 ]
push ebx
call sub_4260d9
add esp 0x20
cmp eax edi
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test cl cl
je r-xdata
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push edi
push [ ebp + 0x10 ]
push ebx
call sub_4262b1
add esp 0x18
jmp r-xdata
mov al [ esi ]
inc esi
test al al
jne r-xdata
mov [ esi - 0x2 ] al
sub_426450
mov edi edi
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
push ebx
mov bl [ ebp + 0xc ]
movzx eax bl
add eax 0x4
cmp edx eax
jae r-xdata
test bl bl
je r-xdata
push 0xc
mov [ ecx ] 0x0
pop eax
mov eax r--data
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x44 ] eax
xor ebx ebx
cmp [ ebp + 0x18 ] bl
mov [ ebp - 0x40 ] eax
mov eax r--data
mov [ ebp - 0x3c ] eax
setne bl
mov [ ebp - 0x38 ] eax
dec ebx
mov eax r--data
mov [ ebp - 0x1c ] r--data
mov [ ebp - 0x2c ] eax
and ebx 0x2
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi r--data
mov [ ebp - 0x14 ] r--data
push edi
lea edi [ eax * 4 - 0x4 ]
mov [ ebp - 0x34 ] esi
lea eax [ edi + ebx ]
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] r--data
mov esi [ ebp + eax * 4 - 0x44 ]
lea eax [ esi + 0x1 ]
mov [ ebp - 0x48 ] eax
mov [ ecx ] 0x2d
inc ecx
dec edx
mov [ ecx ] 0x0
mov al [ esi ]
inc esi
test al al
jne r-xdata
sub esi [ ebp - 0x48 ]
cmp esi edx
sbb eax eax
inc edi
add eax edi
add eax ebx
push [ ebp + eax * 4 - 0x44 ]
push edx
push ecx
call sub_425152
add esp 0xc
pop edi
pop esi
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_41cabf
mov esp ebp
pop ebp
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_425517
int3
sub_426548
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
test edx edx
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0x10 ]
mov ecx esi
push edi
lea edi [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
lea eax [ ecx + 0x1 ]
push eax
lea eax [ esi + edx ]
push esi
push eax
call sub_41f6f0
add esp 0xc
pop edi
pop esi
sub_42657c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
call sub_425628
push 0x16
pop esi
mov [ eax ] esi
call sub_425507
mov eax esi
jmp r-xdata
call sub_425628
push 0x16
pop esi
mov [ eax ] esi
call sub_425507
mov eax esi
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
pop ebx
cmp [ ebp + 0x18 ] 0x0
ja r-xdata
mov esi [ ebp + 0x1c ]
cmp esi 0x41
je r-xdata
mov [ ebp - 0x4 ] 0x1
cmp esi 0x45
je r-xdata
mov eax [ ebp + 0x24 ]
and eax 0x10
or eax 0x0
je r-xdata
push [ ebp + 0x8 ]
call sub_425cb1
mov [ ebp - 0x8 ] eax
pop ecx
test eax eax
je r-xdata
cmp esi 0x46
je r-xdata
push 0x2
push 0x3
jmp r-xdata
push [ ebp - 0x4 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_425d1d
pop ecx
movzx eax al
push eax
push [ ebp - 0x8 ]
call sub_426450
add esp 0x14
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
cmp esi 0x47
jne r-xdata
sub esi 0x65
je r-xdata
pop eax
cmp esi 0x61
jg r-xdata
mov eax [ ebp + 0x24 ]
and eax 0x8
or eax 0x0
jne r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_42603e
sub esi 0x1
je r-xdata
push [ ebp + 0x2c ]
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_425d3b
jmp r-xdata
sub esi 0x41
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_426224
add esp 0x1c
jmp r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_426388
jmp r-xdata
add esp 0x24
sub esi 0x4
jmp r-xdata
push [ ebp + 0x2c ]
je r-xdata
sub_4266c6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_425628
mov [ eax ] 0x16
call sub_425507
or eax 0xffffffff
pop ebp
retn
sub_4266ec
mov eax [ rw-data ]
push esi
push 0x3
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_425277
push 0x0
mov [ rw-data ] eax
call sub_4251ac
add esp 0xc
cmp [ rw-data ] 0x0
jne r-xdata
mov eax esi
mov [ rw-data ] eax
push edi
xor edi edi
mov esi rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_425277
push 0x0
mov [ rw-data ] eax
call sub_4251ac
add esp 0xc
cmp [ rw-data ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0xfffffffe
cmp eax 0xfffffffe
je r-xdata
or eax 0xffffffff
pop esi
retn
push 0x0
push 0xfa0
lea eax [ esi + 0x20 ]
push eax
call sub_427190
mov eax [ rw-data ]
mov edx edi
sar edx 0x6
mov [ eax + edi * 4 ] esi
mov eax edi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
mov eax [ eax + ecx + 0x18 ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add esi 0x38
inc edi
cmp esi rw-data
jne r-xdata
sub_4267b6
push esi
call sub_42afc7
call sub_42ae7a
xor esi esi
mov eax [ rw-data ]
push [ esi + eax ]
call sub_42b0a8
mov eax [ rw-data ]
pop ecx
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
add esi 0x4
cmp esi 0xc
jne r-xdata
push [ rw-data ]
call sub_4251ac
and [ rw-data ] 0x0
pop ecx
pop esi
retn
sub_42683d
mov edi edi
push ebp
mov ebp esp
sub esp 0x48
lea eax [ ebp - 0x48 ]
push eax
call [ GetStartupInfoW@IAT ]
cmp [ ebp - 0x16 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
push ebx
push esi
mov esi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + esi ]
mov [ ebp - 0x4 ] eax
mov eax 0x2000
cmp esi eax
jl r-xdata
push esi
call sub_428718
mov eax [ rw-data ]
pop ecx
cmp esi eax
jle r-xdata
mov esi eax
push edi
xor edi edi
test esi esi
je r-xdata
mov esi eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x4 ]
inc edi
add eax 0x4
inc ebx
mov [ ebp - 0x4 ] eax
cmp edi esi
jne r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
mov dl [ ebx ]
test dl 0x1
je r-xdata
test dl 0x8
jne r-xdata
mov eax edi
mov ecx edi
and eax 0x3f
sar ecx 0x6
imul edx eax 0x30
mov eax [ ebp - 0x4 ]
add edx [ ecx * 4 + rw-data ]
mov eax [ eax ]
mov [ edx + 0x18 ] eax
mov al [ ebx ]
mov [ edx + 0x28 ] al
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
sub_4268f3
mov edi edi
push ebx
push esi
push edi
xor edi edi
mov eax edi
mov [ esi + 0x28 ] 0x81
sub eax 0x0
je r-xdata
cmp [ esi + 0x18 ] 0xfffffffe
je r-xdata
push 0xfffffff6
sub eax 0x1
je r-xdata
or [ esi + 0x28 ] 0x80
jmp r-xdata
xor eax eax
test ebx ebx
je r-xdata
push 0xfffffff5
jmp r-xdata
push 0xfffffff4
sub eax 0x1
jmp r-xdata
inc edi
cmp edi 0x3
jne r-xdata
or [ esi + 0x28 ] 0x40
mov [ esi + 0x18 ] 0xfffffffe
mov eax [ rw-data ]
test eax eax
je r-xdata
and eax 0xff
mov [ esi + 0x18 ] ebx
cmp eax 0x2
jne r-xdata
push ebx
call [ GetFileType@IAT ]
jmp r-xdata
pop eax
push eax
call [ GetStdHandle@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov eax edi
mov ecx edi
and eax 0x3f
sar ecx 0x6
imul esi eax 0x30
add esi [ ecx * 4 + rw-data ]
cmp [ esi + 0x18 ] 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + edi * 4 ]
mov [ eax + 0x10 ] 0xfffffffe
cmp eax 0x3
jne r-xdata
or [ esi + 0x28 ] 0x40
jmp r-xdata
test eax eax
je r-xdata
or [ esi + 0x28 ] 0x8
jmp r-xdata
sub_4269a9
push 0xc
push r--data
call sub_41cb60
push 0x7
call sub_426ebf
pop ecx
xor ebx ebx
mov [ ebp - 0x19 ] bl
mov [ ebp - 0x4 ] ebx
push ebx
call sub_428718
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4269f6
mov al bl
call sub_41cba6
retn
call sub_42683d
call sub_4268f3
mov bl 0x1
mov [ ebp - 0x19 ] bl
sub_426a01
push esi
xor esi esi
add esi 0x4
cmp esi 0x200
jb r-xdata
push eax
call sub_4286e3
and [ esi + rw-data ] 0x0
pop ecx
mov eax [ esi + rw-data ]
test eax eax
je r-xdata
mov al 0x1
pop esi
retn
sub_426a2b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x10 ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
add eax 0xc
xchg [ eax ] ecx
pop ebp
retn
sub_426a66
mov edi edi
push ebp
mov ebp esp
push ecx
call sub_425b08
mov ecx [ eax + 0x4c ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
call sub_425c57
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
mov eax [ eax ]
mov esp ebp
pop ebp
retn
sub_426a8c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_421c26
mov eax [ ebp - 0xc ]
movzx ecx [ ebp + 0x8 ]
mov eax [ eax ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_426ac5
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
call sub_421c26
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov eax ebx
lea ecx [ ebp - 0x1c ]
sar eax 0x8
mov [ ebp - 0x24 ] eax
push ecx
movzx eax al
push eax
call sub_426a8c
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] bl
xor ecx ecx
mov [ ebp - 0xf ] al
inc ecx
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x10 ] al
xor eax eax
push 0x2
mov [ ebp - 0xf ] bl
mov [ ebp - 0xe ] al
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0x14 ] 0x0
je r-xdata
movzx eax [ ebp - 0xc ]
cmp [ ebp - 0x14 ] al
je r-xdata
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ax
mov eax [ ebp - 0x1c ]
push 0x1
push [ eax + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x1c ]
push 0x1
push eax
call sub_428b78
add esp 0x1c
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_41cabf
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x20 ]
and [ ecx + 0x350 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
and [ eax + 0x350 ] 0xfffffffd
sub_426b97
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x18 ]
push edi
test esi esi
jle r-xdata
mov edi [ ebp + 0x24 ]
test edi edi
jne r-xdata
push esi
push [ ebp + 0x14 ]
call sub_42b13c
pop ecx
cmp eax esi
pop ecx
lea esi [ eax + 0x1 ]
jl r-xdata
xor eax eax
cmp [ ebp + 0x28 ] eax
push 0x0
push 0x0
push esi
push [ ebp + 0x14 ]
setne al
lea eax [ eax * 8 + 0x1 ]
push eax
push edi
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov edi [ eax + 0x8 ]
mov [ ebp + 0x24 ] edi
mov esi eax
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_41cabf
mov esp ebp
pop ebp
retn
lea edx [ eax + eax ]
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
test ecx eax
je r-xdata
xor ebx ebx
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
and eax ecx
lea ecx [ edx + 0x8 ]
cmp eax 0x400
ja r-xdata
xor esi esi
push [ ebp - 0x8 ]
push ebx
push esi
push [ ebp + 0x14 ]
push 0x1
push edi
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
push eax
call sub_4251e6
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
call sub_42e900
mov ebx esp
test ebx ebx
je r-xdata
mov edi [ ebp - 0x8 ]
xor eax eax
push eax
push eax
push eax
push eax
push eax
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4271f2
mov esi eax
test esi esi
je r-xdata
mov [ ebx ] 0xdddd
mov [ ebx ] 0xcccc
jmp r-xdata
test [ ebp + 0x10 ] 0x400
je r-xdata
test ebx ebx
je r-xdata
add ebx 0x8
jmp r-xdata
lea edx [ esi + esi ]
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
test ecx eax
je r-xdata
mov eax [ ebp + 0x20 ]
test eax eax
je r-xdata
xor edi edi
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
and eax ecx
lea ecx [ edx + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_426dff
pop ecx
mov eax esi
cmp esi eax
jg r-xdata
push edi
call sub_426dff
pop ecx
push 0x0
push 0x0
push 0x0
push esi
push edi
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4271f2
test eax eax
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
push eax
call sub_4251e6
mov edi eax
pop ecx
test edi edi
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
call sub_42e900
mov edi esp
test edi edi
je r-xdata
xor ecx ecx
push ecx
push ecx
push ecx
push eax
push [ ebp + 0x1c ]
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4271f2
mov esi eax
test esi esi
jne r-xdata
xor eax eax
push eax
push eax
cmp [ ebp + 0x20 ] eax
jne r-xdata
mov [ edi ] 0xdddd
mov [ edi ] 0xcccc
jmp r-xdata
jmp r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
jmp r-xdata
push eax
push eax
test edi edi
je r-xdata
add edi 0x8
jmp r-xdata
push esi
push edi
push eax
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
jne r-xdata
push edi
call sub_426dff
pop ecx
jmp r-xdata
sub_426db4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_421c26
push [ ebp + 0x28 ]
lea eax [ ebp - 0xc ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_426b97
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_426dff
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_4251ac
pop ecx
sub_426e1f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ax [ ebp + 0x8 ]
mov ecx 0xffff
cmp ax cx
jne r-xdata
mov ecx 0x100
cmp ax cx
jae r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ax
xor eax eax
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp - 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
movzx ecx ax
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
movzx eax [ ebp - 0x4 ]
movzx ecx [ ebp + 0xc ]
and eax ecx
sub_426e7e
mov edi edi
push esi
push edi
mov edi rw-data
xor esi esi
push 0x0
call sub_426ed6
pop ecx
xor al al
inc [ rw-data ]
add esi 0x18
add edi 0x18
cmp esi 0x138
jb r-xdata
push 0x0
push 0xfa0
push edi
call sub_427190
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
pop edi
pop esi
retn
sub_426ed6
mov edi edi
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov al 0x1
pop esi
retn
imul eax esi 0x18
push edi
lea edi [ eax + rw-data ]
push edi
call [ DeleteCriticalSection@IAT ]
dec [ rw-data ]
sub edi 0x18
sub esi 0x1
jne r-xdata
pop edi
sub_426f1e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
mov edx [ rw-data ]
or edi 0xffffffff
mov ecx edx
mov esi edx
and ecx 0x1f
xor esi eax
ror esi cl
cmp esi edi
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov esi [ ebp + 0x10 ]
cmp esi [ ebp + 0x14 ]
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
push [ esi ]
call sub_426fba
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax edx
push 0x20
and eax 0x1f
pop ecx
sub ecx eax
ror edi cl
xor edi edx
xchg [ ebx ] edi
push [ ebp + 0xc ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
add esi 0x4
cmp esi [ ebp + 0x14 ]
jne r-xdata
mov edx [ rw-data ]
push esi
call sub_41c410
pop ecx
xchg [ ebx ] eax
jmp r-xdata
test eax eax
je r-xdata
mov edx [ rw-data ]
sub_426fba
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push edi
lea edi [ eax * 4 + rw-data ]
mov ecx [ edi ]
test ecx ecx
je r-xdata
push ebx
mov ebx [ eax * 4 + r--data ]
push esi
push 0x800
push 0x0
push ebx
call [ LoadLibraryExW@IAT ]
mov esi eax
test esi esi
jne r-xdata
lea eax [ ecx + 0x1 ]
neg eax
sbb eax eax
and eax ecx
jmp r-xdata
mov eax esi
xchg [ edi ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
pop edi
pop ebp
retn
mov eax esi
push esi
call [ FreeLibrary@IAT ]
xor esi esi
push esi
push esi
push ebx
call [ LoadLibraryExW@IAT ]
mov esi eax
jmp r-xdata
or eax 0xffffffff
xchg [ edi ] eax
xor eax eax
jmp r-xdata
test esi esi
jne r-xdata
pop esi
pop ebx
sub_427035
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x3
call sub_426f1e
mov esi eax
add esp 0x10
test esi esi
je r-xdata
call [ TlsAlloc@IAT ]
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_41cabf
mov esp ebp
pop ebp
retn 0x4
sub_42708b
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x4
call sub_426f1e
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsFree@IAT ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_41cabf
mov esp ebp
pop ebp
retn 0x4
sub_4270e1
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x5
call sub_426f1e
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsGetValue@IAT ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_41cabf
mov esp ebp
pop ebp
retn 0x4
sub_427137
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x6
call sub_426f1e
add esp 0x10
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsSetValue@IAT ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_41cabf
mov esp ebp
pop ebp
retn 0x8
sub_427190
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x14
call sub_426f1e
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_41cabf
mov esp ebp
pop ebp
retn 0xc
sub_4271f2
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x16
call sub_426f1e
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_42727a
push eax
call [ LCMapStringW@IAT ]
push [ ebp + 0x28 ]
mov ecx esi
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_41cabf
mov esp ebp
pop ebp
retn 0x24
sub_42727a
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x18
call sub_426f1e
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0x8 ]
call sub_42b214
pop ecx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_41cabf
mov esp ebp
pop ebp
retn 0x8
sub_4272d6
mov eax [ rw-data ]
push edi
push 0x20
and eax 0x1f
mov edi rw-data
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
push 0x20
pop ecx
[ edi ]
mov al 0x1
pop edi
retn
sub_4272fc
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push esi
push r--data
push r--data
push r--data
push 0x8
call sub_426f1e
mov esi eax
add esp 0x10
test esi esi
je r-xdata
xor eax eax
cmp ecx 0x1
sete al
jmp r-xdata
push 0x2
pop eax
mov ecx rw-data
xchg [ ecx ] eax
xor al al
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push 0x0
push eax
mov ecx esi
call [ r--data ]
call esi
cmp eax 0x7a
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_41cabf
mov esp ebp
pop ebp
retn
xor ecx ecx
mov edx rw-data
inc ecx
xchg [ edx ] ecx
mov al 0x1
jmp r-xdata
pop esi
sub_427383
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov al 0x1
pop ebp
retn
push esi
mov esi rw-data
add esi 0x4
cmp esi rw-data
jne r-xdata
cmp [ esi ] 0xffffffff
je r-xdata
cmp [ esi ] 0x0
je r-xdata
pop esi
and [ esi ] 0x0
push [ esi ]
call [ FreeLibrary@IAT ]
sub_4273b9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x8 ]
jbe r-xdata
sbb eax eax
neg eax
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
sub_4273d1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x20
push esi
test eax eax
jne r-xdata
mov esi [ ebp + 0x8 ]
xor ecx ecx
push ebx
push edi
mov [ eax ] ecx
mov edi ecx
mov ebx ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ecx
cmp [ esi ] ecx
je r-xdata
call sub_425628
push 0x16
pop esi
mov [ eax ] esi
call sub_425507
mov eax esi
jmp r-xdata
and [ ebp - 0x8 ] 0x0
mov eax ebx
sub eax edi
mov [ ebp - 0x4 ] ecx
mov edx eax
add eax 0x3
sar edx 0x2
inc edx
shr eax 0x2
cmp ebx edi
mov [ ebp - 0xc ] edx
sbb esi esi
not esi
and esi eax
je r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0x3f2a
push eax
push [ esi ]
mov [ ebp - 0x2 ] cl
call sub_42b780
pop ecx
pop ecx
test eax eax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
push 0x1
push [ ebp - 0x4 ]
push edx
call sub_42466e
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov edx edi
mov ebx ecx
lea ecx [ ebp - 0x20 ]
push ecx
push eax
push [ esi ]
call sub_4275f7
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push [ esi ]
call sub_427561
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0xc ]
lea eax [ esi + eax * 4 ]
mov [ ebp - 0x10 ] eax
mov edx eax
mov [ ebp - 0xc ] edx
cmp edi ebx
je r-xdata
or edi 0xffffffff
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx [ ebp - 0x4 ]
inc ebx
mov eax [ ebp - 0x8 ]
add ebx ecx
add edx 0x4
inc eax
mov [ ebp - 0x8 ] eax
cmp eax esi
jne r-xdata
lea ecx [ ebp - 0x20 ]
call sub_42777b
mov eax edi
pop edi
pop ebx
add esi 0x4
xor ecx ecx
cmp [ esi ] ecx
jne r-xdata
mov edi eax
test edi edi
jne r-xdata
mov eax [ ebp + 0xc ]
xor edi edi
mov [ eax ] esi
mov eax esi
sub eax edi
mov [ ebp - 0x14 ] eax
push 0x0
call sub_4251ac
pop ecx
mov ecx [ edx ]
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp - 0x1c ]
mov ebx [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx [ ebp - 0x8 ]
lea eax [ ecx + 0x1 ]
push eax
push [ edi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
sub eax edx
add eax [ ebp - 0x4 ]
push eax
push edx
call sub_42b76b
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_425517
int3
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov [ eax + edi ] edx
add edi 0x4
add edx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
cmp edi ebx
jne r-xdata
mov ecx [ edi ]
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x8 ] eax
sub_427561
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
or eax 0xffffffff
push edi
mov edi [ ebp + 0x10 ]
inc ecx
sub eax edi
mov [ ebp - 0x4 ] ecx
cmp ecx eax
jbe r-xdata
push ebx
push esi
lea ebx [ edi + 0x1 ]
add ebx ecx
push 0x1
push ebx
call sub_425277
mov esi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push 0xc
pop eax
jmp r-xdata
push [ ebp - 0x4 ]
sub ebx edi
lea eax [ esi + edi ]
push [ ebp + 0x8 ]
push ebx
push eax
call sub_42b76b
add esp 0x10
test eax eax
jne r-xdata
push edi
push [ ebp + 0xc ]
push ebx
push esi
call sub_42b76b
add esp 0x10
test eax eax
jne r-xdata
pop edi
mov esp ebp
pop ebp
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_425517
int3
mov ecx [ ebp + 0x14 ]
push esi
call sub_4277a0
push 0x0
mov esi eax
call sub_4251ac
pop ecx
mov eax esi
pop esi
pop ebx
sub_4275f7
mov edi edi
push ebp
mov ebp esp
sub esp 0x150
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov [ ebp - 0x148 ] esi
jmp r-xdata
cmp ecx ebx
jne r-xdata
mov al [ ecx ]
cmp al 0x2f
je r-xdata
mov dl [ ecx ]
cmp dl 0x3a
jne r-xdata
cmp al 0x5c
je r-xdata
xor edi edi
cmp dl 0x2f
je r-xdata
lea eax [ ebx + 0x1 ]
cmp ecx eax
je r-xdata
cmp al 0x3a
je r-xdata
xor eax eax
inc eax
cmp dl 0x5c
je r-xdata
push esi
xor edi edi
push edi
push edi
push ebx
call sub_427561
add esp 0x10
jmp r-xdata
push ecx
push ebx
call sub_42b7c0
pop ecx
pop ecx
mov ecx eax
mov ecx [ eax + 0x4 ]
sub ecx [ eax ]
sar ecx 0x2
mov [ ebp - 0x150 ] ecx
push eax
push edi
push edi
push ebx
call sub_427561
add esp 0x10
cmp dl 0x3a
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41cabf
mov esp ebp
pop ebp
retn
push eax
push [ ebp - 0x14c ]
lea eax [ ebp - 0x118 ]
push ebx
push eax
call sub_427561
add esp 0x10
test eax eax
jne r-xdata
mov cl [ ebp - 0x117 ]
test cl cl
je r-xdata
mov eax edi
push esi
call [ FindClose@IAT ]
mov eax edi
jmp r-xdata
mov edi eax
lea eax [ ebp - 0x144 ]
push eax
push esi
call [ FindNextFileA@IAT ]
test eax eax
mov eax [ ebp - 0x148 ]
jne r-xdata
cmp cl 0x2e
jne r-xdata
movzx eax al
sub ecx ebx
inc ecx
neg eax
push 0x140
sbb eax eax
and eax ecx
mov [ ebp - 0x14c ] eax
lea eax [ ebp - 0x144 ]
push edi
push eax
call sub_41d1e0
add esp 0xc
lea eax [ ebp - 0x144 ]
push edi
push edi
push edi
push eax
push edi
push ebx
call [ FindFirstFileExA@IAT ]
mov esi eax
mov eax [ ebp - 0x148 ]
cmp esi 0xffffffff
jne r-xdata
cmp [ ebp - 0x118 ] 0x2e
jne r-xdata
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x150 ]
sub eax edx
sar eax 0x2
cmp ecx eax
je r-xdata
cmp [ ebp - 0x116 ] 0x0
je r-xdata
cmp esi 0xffffffff
je r-xdata
push sub_4273b9
sub eax ecx
push 0x4
push eax
lea eax [ edx + ecx * 4 ]
push eax
call sub_42b320
add esp 0x10
jmp r-xdata
sub_42777b
mov edi edi
push esi
push edi
mov edi ecx
mov esi [ edi ]
jmp r-xdata
cmp esi [ edi + 0x4 ]
jne r-xdata
push [ esi ]
call sub_4251ac
pop ecx
add esi 0x4
push [ edi ]
call sub_4251ac
pop ecx
pop edi
pop esi
retn
sub_4277a0
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
call sub_4277d5
mov edi eax
test edi edi
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
add [ esi + 0x4 ] 0x4
xor eax eax
push [ ebp + 0x8 ]
call sub_4251ac
pop ecx
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_4277d5
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x8 ]
cmp [ esi + 0x4 ] edi
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
sub edi [ esi ]
sar edi 0x2
cmp edi 0x7fffffff
ja r-xdata
push 0x4
push 0x4
call sub_425277
push 0x0
mov [ esi ] eax
call sub_4251ac
mov eax [ esi ]
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
retn
push 0xc
pop eax
jmp r-xdata
push ebx
push 0x4
lea ebx [ edi + edi ]
push ebx
push [ esi ]
call sub_4281b7
add esp 0xc
test eax eax
jne r-xdata
mov [ esi + 0x4 ] eax
add eax 0x10
mov [ esi + 0x8 ] eax
jmp r-xdata
mov [ esi ] eax
lea ecx [ eax + edi * 4 ]
lea eax [ eax + ebx * 4 ]
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] eax
xor esi esi
push 0xc
pop esi
jmp r-xdata
push 0x0
call sub_4251ac
pop ecx
mov eax esi
pop ebx
sub_427867
push 0x8
push r--data
call sub_41cb60
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_426ebf
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_4278d2
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42789e
call sub_41cba6
retn 0xc
sub_4278aa
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_427867
mov esp ebp
pop ebp
retn
sub_4278d2
mov edi edi
push esi
mov esi ecx
push 0xc
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] eax
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x8 ]
mov [ rw-data ] eax
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x21c ]
mov [ rw-data ] eax
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
add eax 0xc
push eax
push 0xc
push rw-data
call sub_427ff2
mov eax [ esi ]
mov ecx 0x101
push ecx
mov eax [ eax ]
mov eax [ eax + 0x48 ]
add eax 0x18
push eax
push ecx
push rw-data
call sub_427ff2
mov eax [ esi ]
mov ecx 0x100
push ecx
mov eax [ eax ]
mov eax [ eax + 0x48 ]
add eax 0x119
push eax
push ecx
push rw-data
call sub_427ff2
mov eax [ rw-data ]
add esp 0x30
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
mov [ rw-data ] eax
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
[ eax ]
pop esi
retn
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
push eax
call sub_4251ac
pop ecx
sub_427996
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax 0x3a4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0x4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0xd
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0x1
je r-xdata
mov eax [ r--data ]
pop ebp
retn
xor eax eax
pop ebp
retn
sub_4279d4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push 0x0
call sub_421c26
and [ rw-data ] 0x0
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
jmp r-xdata
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ rw-data ] 0x1
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_427a47
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x101
xor edi edi
lea esi [ ebx + 0x18 ]
push edi
push esi
call sub_41d1e0
mov [ ebx + 0x4 ] edi
xor eax eax
mov [ ebx + 0x8 ] edi
add esp 0xc
mov [ ebx + 0x21c ] edi
mov ecx 0x101
lea edi [ ebx + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov edi rw-data
sub edi ebx
mov al [ edi + esi ]
mov [ esi ] al
inc esi
sub ecx 0x1
jne r-xdata
lea ecx [ ebx + 0x119 ]
mov edx 0x100
mov al [ ecx + edi ]
mov [ ecx ] al
inc ecx
sub edx 0x1
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_427aac
mov edi edi
push ebp
mov ebp esp
sub esp 0x720
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x718 ]
push edi
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
xor ebx ebx
mov edi 0x100
test eax eax
je r-xdata
push 0xffffff9f
lea edx [ esi + 0x119 ]
mov ecx ebx
pop eax
sub eax edx
mov [ ebp - 0x720 ] eax
mov eax ebx
cmp [ ebp - 0x71c ] 0x19
ja r-xdata
or [ esi + ecx + 0x19 ] 0x10
lea eax [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x712 ]
lea ecx [ ebp - 0x712 ]
mov [ ebp - 0x104 ] 0x20
jmp r-xdata
mov [ edx ] bl
lea eax [ esi + ecx ]
or [ eax + 0x19 ] 0x20
lea eax [ ecx - 0x20 ]
mov [ edx ] al
jmp r-xdata
test al al
jne r-xdata
add edx ecx
add eax edx
mov [ ebp - 0x71c ] eax
add eax 0x20
cmp eax 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41cabf
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x720 ]
lea edx [ esi + 0x119 ]
inc ecx
cmp ecx edi
jb r-xdata
movzx edx [ ecx + 0x1 ]
movzx eax al
jmp r-xdata
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x704 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push ebx
call sub_428b78
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0x21c ]
push ebx
call sub_426db4
add esp 0x40
lea eax [ ebp - 0x304 ]
push ebx
push [ esi + 0x4 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0x21c ]
push ebx
call sub_426db4
add esp 0x24
mov ecx ebx
cmp eax edx
jbe r-xdata
test al 0x2
je r-xdata
or [ esi + ecx + 0x19 ] 0x10
mov al [ ebp + ecx - 0x204 ]
jmp r-xdata
cmp eax edi
jae r-xdata
add ecx 0x2
mov al [ ecx ]
mov [ esi + ecx + 0x119 ] bl
or [ esi + ecx + 0x19 ] 0x20
mov al [ ebp + ecx - 0x304 ]
mov [ esi + ecx + 0x119 ] al
jmp r-xdata
mov [ ebp + eax - 0x104 ] 0x20
inc eax
movzx eax [ ebp + ecx * 2 - 0x704 ]
test al 0x1
je r-xdata
jmp r-xdata
inc ecx
cmp ecx edi
jb r-xdata
sub_427c40
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
call sub_425b08
mov [ ebp - 0x4 ] eax
call sub_427d5f
push [ ebp + 0x8 ]
call sub_4279d4
pop ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov ecx [ ecx + 0x48 ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
push ebx
push esi
push edi
push 0x220
call sub_4251e6
mov edi eax
or ebx 0xffffffff
pop ecx
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov esi ebx
mov esi [ ebp - 0x4 ]
mov ecx 0x88
mov esi [ esi + 0x48 ]
[ edi ] [ esi ]
mov edi eax
push edi
push [ ebp - 0xc ]
and [ edi ] 0x0
call sub_427e01
mov esi eax
pop ecx
pop ecx
cmp esi ebx
jne r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_425628
mov [ eax ] 0x16
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
[ eax ] ebx
dec ebx
jne r-xdata
call sub_424ff9
mov [ edi ] 0x1
mov ecx edi
mov eax [ ebp - 0x4 ]
xor edi edi
mov [ eax + 0x48 ] ecx
mov eax [ ebp - 0x4 ]
test [ eax + 0x350 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] rw-data
je r-xdata
push edi
call sub_4251ac
pop ecx
pop edi
mov eax esi
pop esi
pop ebx
test [ rw-data ] 0x1
jne r-xdata
push [ eax + 0x48 ]
call sub_4251ac
pop ecx
lea eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x5
call sub_4278aa
cmp [ ebp + 0xc ] 0x0
pop ecx
pop ecx
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
jmp r-xdata
sub_427d5f
push 0xc
push r--data
call sub_41cb60
xor esi esi
mov [ ebp - 0x1c ] esi
call sub_425b08
mov edi eax
mov ecx [ rw-data ]
test [ edi + 0x350 ] ecx
je r-xdata
push 0x5
call sub_426ebf
pop ecx
mov [ ebp - 0x4 ] esi
mov esi [ edi + 0x48 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x4c ] esi
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_427df0
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x48 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x48 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
[ esi ]
or eax 0xffffffff
[ esi ] eax
jne r-xdata
mov eax esi
call sub_41cba6
retn
call sub_425234
cmp esi rw-data
je r-xdata
push esi
call sub_4251ac
pop ecx
sub_427e01
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
call sub_4279d4
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
push edi
xor edi edi
mov ecx edi
mov eax edi
mov [ ebp - 0x1c ] ecx
push esi
call sub_427a47
pop ecx
xor eax eax
jmp r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_41d1e0
add esp 0xc
imul eax [ ebp - 0x1c ] 0x30
mov [ ebp - 0x20 ] eax
lea eax [ eax + rw-data ]
mov [ ebp - 0x1c ] eax
inc ecx
add eax 0x30
mov [ ebp - 0x1c ] ecx
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_41cabf
mov esp ebp
pop ebp
retn
inc edi
add eax 0x8
mov [ ebp - 0x1c ] eax
cmp edi 0x4
jb r-xdata
mov al [ ecx + 0x1 ]
test al al
je r-xdata
cmp [ eax + rw-data ] ebx
je r-xdata
cmp ebx 0xfde8
je r-xdata
cmp [ eax ] 0x0
mov ecx eax
je r-xdata
push ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x1
call sub_427996
add esp 0x4
mov [ esi + 0x21c ] eax
mov eax [ ebp - 0x20 ]
lea ecx [ esi + 0xc ]
push 0x6
lea edx [ eax + rw-data ]
pop edi
mov eax [ ebp - 0x1c ]
movzx edx [ ecx ]
movzx eax al
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ebx 0xfde9
je r-xdata
mov ax [ edx ]
lea edx [ edx + 0x2 ]
mov [ ecx ] ax
lea ecx [ ecx + 0x2 ]
sub edi 0x1
jne r-xdata
push esi
call sub_427aac
cmp edx eax
jbe r-xdata
pop edi
movzx eax bx
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edx 0x100
jae r-xdata
add ecx 0x2
cmp [ ecx ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov al [ edi + rw-data ]
or [ esi + edx + 0x19 ] al
inc edx
movzx eax [ ecx + 0x1 ]
cmp [ rw-data ] edi
je r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_41d1e0
mov [ esi + 0x4 ] ebx
add esp 0xc
xor ebx ebx
mov [ esi + 0x21c ] edi
inc ebx
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
push esi
call sub_427a47
jmp r-xdata
mov [ esi + 0x8 ] edi
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
pop ecx
xor eax eax
lea eax [ esi + 0x1a ]
mov ecx 0xfe
mov cl [ eax + 0x1 ]
test cl cl
je r-xdata
or [ eax ] 0x8
inc eax
sub ecx 0x1
jne r-xdata
push [ esi + 0x4 ]
call sub_427996
add esp 0x4
mov [ esi + 0x21c ] eax
mov [ esi + 0x8 ] ebx
jmp r-xdata
movzx edx cl
movzx ecx [ eax ]
jmp r-xdata
xor eax eax
lea edi [ esi + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp ecx edx
jbe r-xdata
or [ esi + ecx + 0x19 ] 0x4
inc ecx
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
sub_427ff2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_425628
push 0x16
pop esi
mov [ eax ] esi
call sub_425507
mov eax esi
jmp r-xdata
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push eax
call sub_41d1e0
add esp 0xc
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
call sub_425628
push 0x16
jmp r-xdata
push esi
push edi
push eax
call sub_41ee90
add esp 0xc
xor eax eax
jmp r-xdata
push 0x16
pop eax
call sub_425628
push 0x22
pop esi
mov [ eax ] esi
call sub_425507
mov eax esi
jmp r-xdata
pop edi
sub_428073
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_421c26
movzx esi [ ebp + 0xc ]
mov eax [ ebp - 0x8 ]
mov cl [ ebp + 0x14 ]
test [ eax + esi + 0x19 ] cl
jne r-xdata
xor edx edx
inc edx
xor edx edx
cmp [ ebp + 0x10 ] edx
je r-xdata
mov eax edx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax edx
mov eax [ ebp - 0xc ]
mov eax [ eax ]
movzx eax [ eax + esi * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
test eax eax
je r-xdata
sub_4280fd
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ edx ] di
je r-xdata
lea eax [ edx + 0x2 ]
pop edi
pop ebp
retn
push esi
mov ax [ ecx ]
add ecx 0x2
cmp ax di
jne r-xdata
sub ecx esi
sar ecx 0x1
lea edx [ edx + ecx * 2 ]
add edx 0x2
cmp [ edx ] di
jne r-xdata
mov ecx edx
lea esi [ ecx + 0x2 ]
pop esi
sub_428134
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
call [ GetEnvironmentStringsW@IAT ]
mov esi eax
xor edi edi
test esi esi
je r-xdata
mov ebx edi
push esi
call sub_4280fd
pop ecx
push edi
push edi
push edi
mov ebx eax
push edi
sub ebx esi
sar ebx 0x1
push ebx
push esi
push edi
push edi
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
push esi
call [ FreeEnvironmentStringsW@IAT ]
push eax
call sub_4251e6
mov edi eax
pop ecx
test edi edi
je r-xdata
xor ebx ebx
xor eax eax
push eax
push eax
push [ ebp - 0x4 ]
push edi
push ebx
push esi
push eax
push eax
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov ebx edi
xor edi edi
jmp r-xdata
push edi
call sub_4251ac
pop ecx
jmp r-xdata
sub_4281c2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push edi
test ebx ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0x10 ]
jae r-xdata
xor edi edi
push ebx
call sub_42b873
pop ecx
mov edi eax
jmp r-xdata
call sub_425628
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
pop edi
mov eax ebx
pop ebx
cmp edi esi
jae r-xdata
imul esi [ ebp + 0x10 ]
push esi
push ebx
call sub_4252d4
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
pop esi
pop ebp
retn
sub esi edi
lea eax [ ebx + edi ]
push esi
push 0x0
push eax
call sub_41d1e0
add esp 0xc
sub_42824a
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi [ ebp + 0x8 ]
cmp edi [ ebp + 0xc ]
jne r-xdata
push esi
mov esi edi
push ebx
mov al 0x1
jmp r-xdata
add esi 0x8
cmp esi [ ebp + 0xc ]
jne r-xdata
mov ecx ebx
call [ r--data ]
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_41cabf
mov esp ebp
pop ebp
retn
mov ebx [ esi ]
test ebx ebx
je r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
cmp esi edi
je r-xdata
mov al 0x1
jmp r-xdata
xor al al
add esi 0xfffffffc
pop ebx
pop esi
sub esi 0x8
lea eax [ esi + 0x4 ]
cmp eax edi
jne r-xdata
mov ebx [ esi ]
test ebx ebx
je r-xdata
cmp [ esi - 0x4 ] 0x0
je r-xdata
push 0x0
mov ecx ebx
call [ r--data ]
call ebx
pop ecx
sub_4282cd
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0xc ]
cmp [ ebp + 0x8 ] esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov al 0x1
xor ecx ebp
pop esi
call sub_41cabf
mov esp ebp
pop ebp
retn
add esi 0xfffffffc
push edi
sub esi 0x8
lea eax [ esi + 0x4 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
mov ecx edi
call [ r--data ]
call edi
pop ecx
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
sub_42831a
push 0xc
push r--data
call sub_41cb60
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_426ebf
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx esi
and ecx 0x1f
xor esi [ rw-data ]
ror esi cl
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_428368
mov eax esi
call sub_41cba6
retn 0xc
sub_428374
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_42831a
mov esp ebp
pop ebp
retn
sub_42839c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec eax
sub eax 0x1
je r-xdata
mov eax rw-data
pop ebp
retn
sub eax 0x4
je r-xdata
mov eax rw-data
pop ebp
retn
sub eax 0x9
je r-xdata
mov eax rw-data
pop ebp
retn
sub eax 0x6
je r-xdata
mov eax rw-data
pop ebp
retn
sub eax 0x1
je r-xdata
xor eax eax
pop ebp
retn
sub_4283de
mov edi edi
push ebp
mov ebp esp
imul ecx [ r--data ] 0xc
mov eax [ ebp + 0xc ]
add ecx eax
cmp eax ecx
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
pop ebp
retn
add eax 0xc
cmp eax ecx
jne r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
sub_428406
mov edi edi
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
push eax
push 0x3
call sub_428374
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_42841d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_42489d
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_42489d
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_42489d
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_42489d
pop ebp
retn
sub_428461
push 0x2c
push r--data
call sub_42e8a0
xor ebx ebx
mov [ ebp - 0x2c ] ebx
and [ ebp - 0x34 ] ebx
mov cl 0x1
mov [ ebp - 0x1d ] cl
mov esi [ ebp + 0x8 ]
push 0x8
pop edi
cmp esi edi
jg r-xdata
cmp esi 0xb
je r-xdata
je r-xdata
call sub_425b8c
mov ebx eax
mov [ ebp - 0x2c ] ebx
test ebx ebx
jne r-xdata
cmp esi 0xf
je r-xdata
lea eax [ esi - 0x1 ]
sub eax 0x1
je r-xdata
push [ ebx ]
push esi
call sub_4283de
pop ecx
pop ecx
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push esi
call sub_42839c
add esp 0x4
jmp r-xdata
cmp esi 0x14
jle r-xdata
dec eax
sub eax 0x1
je r-xdata
add eax 0x8
xor cl cl
mov [ ebp - 0x1d ] cl
call sub_425628
mov [ eax ] 0x16
call sub_425507
jmp r-xdata
call sub_42e8e9
retn
mov [ ebp - 0x28 ] eax
and [ ebp - 0x30 ] 0x0
test cl cl
je r-xdata
cmp esi 0x16
jg r-xdata
dec eax
sub eax 0x1
jne r-xdata
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x1e ] 0x0
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x28 ]
test cl cl
je r-xdata
push 0x3
call sub_426ebf
pop ecx
mov cl [ ebp - 0x1d ]
jmp r-xdata
mov edx [ eax ]
mov edx [ rw-data ]
mov ecx edx
and ecx 0x1f
xor edx [ eax ]
ror edx cl
mov cl [ ebp - 0x1d ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_428621
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
test eax eax
jne r-xdata
mov eax edx
mov [ ebp - 0x24 ] eax
xor edx edx
cmp eax 0x1
sete dl
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x1e ] dl
test dl dl
jne r-xdata
xor eax eax
cmp esi edi
jne r-xdata
cmp esi edi
je r-xdata
test cl cl
je r-xdata
push esi
mov ecx [ ebp - 0x24 ]
call [ r--data ]
call [ ebp - 0x24 ]
call sub_425b08
push [ eax + 0x8 ]
push edi
mov ecx [ ebp - 0x24 ]
call [ r--data ]
call [ ebp - 0x24 ]
pop ecx
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x30 ] eax
and [ ebx + 0x4 ] 0x0
cmp esi edi
jne r-xdata
cmp esi 0xb
je r-xdata
push 0x3
call sub_424371
push 0x3
call sub_426f07
pop ecx
mov eax [ ebp - 0x30 ]
mov [ ebx + 0x4 ] eax
cmp esi edi
jne r-xdata
cmp esi 0xb
je r-xdata
pop ecx
cmp esi edi
je r-xdata
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
mov ecx [ ebp - 0x28 ]
mov [ ecx ] eax
call sub_428458
mov eax [ eax ]
mov [ ebp - 0x34 ] eax
call sub_428458
mov [ eax ] 0x8c
cmp esi 0x4
jne r-xdata
call sub_425b08
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x8 ] ecx
cmp esi 0x4
jne r-xdata
imul eax [ r--data ] 0xc
add eax [ ebx ]
imul ecx [ r--data ] 0xc
add ecx eax
cmp esi edi
jne r-xdata
and [ eax + 0x8 ] 0x0
add eax 0xc
jmp r-xdata
mov [ ebp - 0x3c ] eax
cmp eax ecx
je r-xdata
sub_428669
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push edi
push 0x30
push 0x40
call sub_425277
mov edi eax
xor ebx ebx
mov [ ebp - 0x8 ] edi
pop ecx
pop ecx
test edi edi
jne r-xdata
lea eax [ edi + 0xc00 ]
cmp edi eax
je r-xdata
mov edi ebx
jmp r-xdata
push ebx
call sub_4251ac
pop ecx
mov eax edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea esi [ edi + 0x20 ]
mov edi eax
push ebx
push 0xfa0
lea eax [ esi - 0x20 ]
push eax
call sub_427190
or [ esi - 0x8 ] 0xffffffff
mov [ esi ] ebx
lea esi [ esi + 0x30 ]
mov [ esi - 0x2c ] ebx
lea eax [ esi - 0x20 ]
mov [ esi - 0x28 ] 0xa0a0000
mov [ esi - 0x24 ] 0xa
and [ esi - 0x23 ] 0xf8
mov [ esi - 0x22 ] bl
cmp eax edi
jne r-xdata
mov edi [ ebp - 0x8 ]
pop esi
sub_4286e3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push ebx
lea ebx [ esi + 0xc00 ]
push edi
mov edi esi
cmp esi ebx
je r-xdata
push esi
call sub_4251ac
pop ecx
pop edi
pop ebx
push edi
call [ DeleteCriticalSection@IAT ]
add edi 0x30
cmp edi ebx
jne r-xdata
sub_428718
push 0x14
push r--data
call sub_41cb60
cmp [ ebp + 0x8 ] 0x2000
sbb eax eax
neg eax
jne r-xdata
xor esi esi
mov [ ebp - 0x1c ] esi
push 0x7
call sub_426ebf
pop ecx
mov [ ebp - 0x4 ] esi
mov edi esi
mov eax [ rw-data ]
call sub_425628
push 0x9
pop esi
mov [ eax ] esi
call sub_425507
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4287a7
jmp r-xdata
cmp [ edi * 4 + rw-data ] esi
jne r-xdata
mov eax esi
call sub_41cba6
retn
inc edi
jmp r-xdata
call sub_428669
mov [ edi * 4 + rw-data ] eax
test eax eax
jne r-xdata
mov [ ebp - 0x20 ] edi
cmp [ ebp + 0x8 ] eax
jl r-xdata
mov eax [ rw-data ]
add eax 0x40
mov [ rw-data ] eax
push 0xc
pop esi
mov [ ebp - 0x1c ] esi
sub_4287b0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_4287d3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_4287f6
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
js r-xdata
call sub_425628
mov [ eax ] 0x9
call sub_425615
and [ eax ] 0x0
or eax 0xffffffff
cmp esi [ rw-data ]
jae r-xdata
mov eax esi
mov edi esi
and eax 0x3f
sar edi 0x6
imul ebx eax 0x30
mov eax [ edi * 4 + rw-data ]
test [ ebx + eax + 0x28 ] 0x1
je r-xdata
cmp [ ebx + eax + 0x18 ] 0xffffffff
je r-xdata
call sub_424e28
cmp eax 0x1
jne r-xdata
mov eax [ edi * 4 + rw-data ]
or [ ebx + eax + 0x18 ] 0xffffffff
xor eax eax
jmp r-xdata
xor eax eax
sub esi eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
push 0xfffffff6
sub esi 0x1
je r-xdata
push eax
push 0xfffffff5
jmp r-xdata
sub esi 0x1
jne r-xdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp r-xdata
sub_428887
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_425615
and [ eax ] 0x0
call sub_425628
mov [ eax ] 0x9
jmp r-xdata
call sub_425615
and [ eax ] 0x0
call sub_425628
mov [ eax ] 0x9
call sub_425507
cmp ecx [ rw-data ]
jae r-xdata
or eax 0xffffffff
pop ebp
retn
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
mov eax [ eax + ecx + 0x18 ]
pop ebp
retn
sub_4288f1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4251ac
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4251ac
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4251ac
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4251ac
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4251ac
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4251ac
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4251ac
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4251ac
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4251ac
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4251ac
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4251ac
pop ecx
mov eax [ esi + 0x4c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4251ac
pop ecx
push eax
call sub_4251ac
pop ecx
sub_4289ef
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4251ac
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4251ac
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4251ac
pop ecx
mov eax [ esi + 0x34 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4251ac
pop ecx
push eax
call sub_4251ac
pop ecx
sub_428a58
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
lea eax [ esi + eax * 4 ]
mov ecx eax
sub ecx esi
add ecx 0x3
shr ecx 0x2
cmp eax esi
sbb ebx ebx
not ebx
and ebx ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push [ esi ]
call sub_4251ac
inc edi
lea esi [ esi + 0x4 ]
pop ecx
cmp edi ebx
jne r-xdata
sub_428a94
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push 0x7
push esi
call sub_428a58
lea eax [ esi + 0x1c ]
push 0x7
push eax
call sub_428a58
lea eax [ esi + 0x38 ]
push 0xc
push eax
call sub_428a58
lea eax [ esi + 0x68 ]
push 0xc
push eax
call sub_428a58
lea eax [ esi + 0x98 ]
push 0x2
push eax
call sub_428a58
push [ esi + 0xa0 ]
call sub_4251ac
push [ esi + 0xa4 ]
call sub_4251ac
push [ esi + 0xa8 ]
call sub_4251ac
lea eax [ esi + 0xb4 ]
push 0x7
push eax
call sub_428a58
lea eax [ esi + 0xd0 ]
push 0x7
push eax
call sub_428a58
add esp 0x44
lea eax [ esi + 0xec ]
push 0xc
push eax
call sub_428a58
lea eax [ esi + 0x11c ]
push 0xc
push eax
call sub_428a58
lea eax [ esi + 0x14c ]
push 0x2
push eax
call sub_428a58
push [ esi + 0x154 ]
call sub_4251ac
push [ esi + 0x158 ]
call sub_4251ac
push [ esi + 0x15c ]
call sub_4251ac
push [ esi + 0x160 ]
call sub_4251ac
add esp 0x28
sub_428b78
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_421c26
mov ecx [ ebp + 0x1c ]
test ecx ecx
jne r-xdata
xor eax eax
xor edi edi
cmp [ ebp + 0x20 ] eax
push edi
push edi
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov ecx eax
mov [ ebp + 0x1c ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
lea ebx [ eax + eax ]
lea ecx [ ebx + 0x8 ]
cmp ebx ecx
sbb eax eax
test ecx eax
je r-xdata
mov eax edi
lea esp [ ebp - 0x24 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_41cabf
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x18 ]
and [ eax + 0x350 ] 0xfffffffd
mov esi edi
lea ecx [ ebx + 0x8 ]
cmp ebx ecx
sbb eax eax
and eax ecx
lea ecx [ ebx + 0x8 ]
cmp eax 0x400
ja r-xdata
push esi
call sub_426dff
pop ecx
push ebx
push edi
push esi
call sub_41d1e0
add esp 0xc
push [ ebp - 0x8 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
cmp ebx ecx
sbb eax eax
and eax ecx
push eax
call sub_4251e6
mov esi eax
pop ecx
test esi esi
je r-xdata
cmp ebx ecx
sbb eax eax
and eax ecx
call sub_42e900
mov esi esp
test esi esi
je r-xdata
push [ ebp + 0x18 ]
push eax
push esi
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov edi eax
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_428c95
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
[ eax + 0xc ]
mov ecx [ eax + 0x7c ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x84 ]
test ecx ecx
je r-xdata
[ ecx ]
mov ecx [ eax + 0x80 ]
test ecx ecx
je r-xdata
[ ecx ]
mov ecx [ eax + 0x8c ]
test ecx ecx
je r-xdata
[ ecx ]
push esi
push 0x6
lea ecx [ eax + 0x28 ]
pop esi
[ ecx ]
cmp [ ecx - 0xc ] 0x0
je r-xdata
mov edx [ ecx ]
test edx edx
je r-xdata
add ecx 0x10
sub esi 0x1
jne r-xdata
mov edx [ ecx - 0x4 ]
test edx edx
je r-xdata
[ edx ]
cmp [ ecx - 0x8 ] rw-data
je r-xdata
push [ eax + 0x9c ]
call sub_428e5c
pop ecx
pop esi
pop ebp
retn
[ edx ]
sub_428d12
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov eax [ esi + 0x8c ]
test eax eax
je r-xdata
cmp eax rw-data
je r-xdata
push [ esi + 0x9c ]
call sub_428e85
pop ecx
push 0x6
pop eax
lea ebx [ esi + 0xa0 ]
mov [ ebp - 0x4 ] eax
lea edi [ esi + 0x28 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0x7c ]
test eax eax
je r-xdata
cmp [ edi - 0xc ] 0x0
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ esi + 0x90 ]
sub eax 0xfe
push eax
call sub_4251ac
mov eax [ esi + 0x94 ]
mov edi 0x80
sub eax edi
push eax
call sub_4251ac
mov eax [ esi + 0x98 ]
sub eax edi
push eax
call sub_4251ac
push [ esi + 0x8c ]
call sub_4251ac
add esp 0x10
cmp [ eax ] 0x0
jne r-xdata
add ebx 0x4
add edi 0x10
sub eax 0x1
mov [ ebp - 0x4 ] eax
jne r-xdata
mov eax [ edi - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0x84 ]
test eax eax
je r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_4251ac
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_4251ac
push [ ebx ]
call sub_4251ac
pop ecx
pop ecx
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_4251ac
pop ecx
push [ esi + 0x7c ]
call sub_4251ac
push [ esi + 0x88 ]
call sub_4251ac
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_4251ac
push [ esi + 0x88 ]
call sub_4288f1
pop ecx
pop ecx
push eax
call sub_4251ac
push [ esi + 0x88 ]
call sub_4289ef
pop ecx
pop ecx
sub_428e5c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x7fffffff
pop ebp
retn
cmp ecx r--data
je r-xdata
xor eax eax
inc eax
[ ecx + 0xb0 ] eax
inc eax
pop ebp
retn
sub_428e85
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
cmp esi r--data
je r-xdata
mov eax [ esi + 0xb0 ]
test eax eax
jne r-xdata
push esi
call sub_428a94
push esi
call sub_4251ac
pop ecx
pop ecx
sub_428eb5
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x7fffffff
pop ebp
retn
cmp ecx r--data
je r-xdata
or eax 0xffffffff
[ ecx + 0xb0 ] eax
dec eax
pop ebp
retn
sub_428ede
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
[ eax + 0xc ]
mov ecx [ eax + 0x7c ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x84 ]
test ecx ecx
je r-xdata
[ ecx ]
mov ecx [ eax + 0x80 ]
test ecx ecx
je r-xdata
[ ecx ]
mov ecx [ eax + 0x8c ]
test ecx ecx
je r-xdata
[ ecx ]
push esi
push 0x6
lea ecx [ eax + 0x28 ]
pop esi
[ ecx ]
cmp [ ecx - 0xc ] 0x0
je r-xdata
mov edx [ ecx ]
test edx edx
je r-xdata
add ecx 0x10
sub esi 0x1
jne r-xdata
mov edx [ ecx - 0x4 ]
test edx edx
je r-xdata
[ edx ]
cmp [ ecx - 0x8 ] rw-data
je r-xdata
push [ eax + 0x9c ]
call sub_428eb5
pop ecx
pop esi
[ edx ]
sub_428f5f
push 0xc
push r--data
call sub_41cb60
and [ ebp - 0x1c ] 0x0
call sub_425b08
mov edi eax
mov ecx [ rw-data ]
test [ edi + 0x350 ] ecx
je r-xdata
push 0x4
call sub_426ebf
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
lea eax [ edi + 0x4c ]
push eax
call sub_428fd6
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_428fc5
test esi esi
jne r-xdata
mov esi [ edi + 0x4c ]
test esi esi
jne r-xdata
mov eax esi
call sub_41cba6
retn
call sub_425234
sub_428fd6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edi [ eax ]
cmp edi esi
jne r-xdata
push esi
mov [ eax ] esi
call sub_428c95
pop ecx
test edi edi
je r-xdata
mov eax esi
jmp r-xdata
push edi
call sub_428ede
cmp [ edi + 0xc ] 0x0
pop ecx
jne r-xdata
pop edi
pop esi
pop ebp
retn
cmp edi rw-data
je r-xdata
push edi
call sub_428d12
pop ecx
jmp r-xdata
sub_429026
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x10
je r-xdata
push ebx
push esi
push edi
mov edi 0x200
test cl 0x8
je r-xdata
mov eax 0x80
test cl 0x4
je r-xdata
or eax edi
test cl 0x2
je r-xdata
or eax 0x400
test cl 0x1
je r-xdata
or eax 0x800
mov esi 0x100
test ecx 0x80000
je r-xdata
or eax 0x1000
mov edx ecx
mov ebx 0x300
and edx ebx
je r-xdata
or eax esi
mov edx 0x3000000
pop edi
and ecx edx
pop esi
pop ebx
cmp ecx 0x1000000
je r-xdata
cmp edx esi
je r-xdata
or eax 0x8040
cmp ecx 0x2000000
je r-xdata
or eax 0x2000
cmp edx edi
je r-xdata
or eax 0x40
pop ebp
retn
cmp ecx edx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp edx ebx
jne r-xdata
pop ebp
retn
or eax 0x8000
pop ebp
retn
or eax 0x6000
jmp r-xdata
sub_4290d1
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
fnstsw [ ebp - 0x4 ]
fnclex
cmp [ rw-data ] 0x1
jl r-xdata
mov cx [ ebp - 0x4 ]
xor eax eax
test cl 0x3f
je r-xdata
mov ax [ ebp - 0x4 ]
xor ecx ecx
mov edx ecx
push edi
mov edi 0x80000
test al 0x3f
je r-xdata
mov esp ebp
pop ebp
retn
test cl 0x1
je r-xdata
stmxcsr [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
and eax 0xffffffc0
mov [ ebp - 0xc ] eax
ldmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
test al 0x3f
je r-xdata
test al 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
or ecx edx
mov eax ecx
pop edi
jmp r-xdata
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop edx
test cl 0x8
je r-xdata
or eax 0x8
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or edx 0x8
test cl 0x10
je r-xdata
or eax 0x4
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or edx 0x4
test cl 0x20
je r-xdata
or eax 0x2
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or edx 0x2
test cl 0x2
je r-xdata
or eax 0x1
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or edx 0x1
or eax 0x80000
test al 0x2
je r-xdata
or ecx 0x1
or edx edi
or ecx edi
sub_4291af
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
fwait
fnstcw [ ebp - 0x8 ]
mov ax [ ebp - 0x8 ]
xor ecx ecx
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or ecx 0x1
push ebx
push esi
movzx esi ax
mov ebx 0xc00
mov edx esi
push edi
mov edi 0x200
and edx ebx
je r-xdata
or ecx 0x80000
and esi 0x300
je r-xdata
cmp edx 0x400
je r-xdata
or ecx 0x20000
cmp esi edi
jne r-xdata
or ecx 0x100
cmp edx 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov esi edi
mov eax [ ebp + 0x8 ]
not esi
and esi ecx
and eax edi
or esi eax
cmp esi ecx
je r-xdata
or ecx 0x40000
mov edx 0x1000
test dx ax
je r-xdata
or ecx 0x10000
jmp r-xdata
or ecx edi
jmp r-xdata
cmp edx ebx
jne r-xdata
cmp [ rw-data ] 0x1
jl r-xdata
push esi
call sub_4294b1
pop ecx
mov [ ebp - 0x4 ] ax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ax [ ebp - 0x4 ]
xor esi esi
test al 0x1
je r-xdata
or ecx 0x300
jmp r-xdata
mov eax esi
and edi 0x308031f
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
xor ecx ecx
test al al
jns r-xdata
test al 0x4
je r-xdata
push 0x10
pop esi
test eax 0x200
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or esi 0x8
test eax 0x400
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or esi 0x4
test eax 0x800
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or esi 0x2
test edx eax
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or esi 0x1
test eax 0x100
je r-xdata
or ecx 0x1
movzx edx ax
mov ecx edx
and ecx ebx
je r-xdata
or esi 0x80000
mov edx eax
mov ebx 0x6000
and edx ebx
je r-xdata
or ecx 0x80000
and edx 0x300
je r-xdata
cmp ecx 0x400
je r-xdata
push 0x40
and eax 0x8040
pop ebx
sub eax ebx
je r-xdata
cmp edx 0x2000
je r-xdata
or esi 0x20000
cmp edx 0x200
jne r-xdata
or esi 0x100
cmp ecx 0x800
je r-xdata
or ecx 0x2000000
sub eax 0x7fc0
je r-xdata
or ecx 0x100
cmp edx 0x4000
je r-xdata
or esi 0x40000
mov edx 0x1000
test dx ax
je r-xdata
or esi 0x10000
jmp r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
mov eax ecx
or ecx esi
xor eax esi
test eax 0x8031f
je r-xdata
push eax
call sub_429026
push eax
mov [ ebp - 0xc ] eax
call sub_42b8a6
pop ecx
pop ecx
stmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
xor ecx ecx
test al al
jns r-xdata
or ecx 0x3000000
jmp r-xdata
sub eax ebx
jne r-xdata
or ecx 0x200
jmp r-xdata
cmp edx ebx
jne r-xdata
or esi 0x300
jmp r-xdata
mov eax ecx
jmp r-xdata
or ecx 0x80000000
test eax 0x200
je r-xdata
push 0x10
pop ecx
mov eax edi
and edi [ ebp + 0x8 ]
not eax
and eax ecx
or eax edi
cmp eax ecx
je r-xdata
or ecx 0x1000000
jmp r-xdata
or ecx 0x300
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test eax 0x400
je r-xdata
or ecx 0x8
test eax 0x800
je r-xdata
or ecx 0x4
test eax 0x1000
je r-xdata
or ecx 0x2
test eax 0x100
je r-xdata
or ecx 0x1
mov edx eax
mov edi 0x6000
and edx edi
je r-xdata
or ecx 0x80000
and eax 0x8040
sub eax ebx
je r-xdata
cmp edx 0x2000
je r-xdata
or ecx 0x2000000
sub eax 0x7fc0
je r-xdata
or ecx 0x100
cmp edx 0x4000
je r-xdata
or ecx 0x3000000
jmp r-xdata
sub eax ebx
jne r-xdata
or ecx 0x200
jmp r-xdata
cmp edx edi
jne r-xdata
or ecx 0x1000000
jmp r-xdata
or ecx 0x300
jmp r-xdata
sub_4294b1
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x10
je r-xdata
test cl 0x8
je r-xdata
inc eax
test cl 0x4
je r-xdata
or eax 0x4
test cl 0x2
je r-xdata
or eax 0x8
test cl 0x1
je r-xdata
or eax 0x10
test ecx 0x80000
je r-xdata
or eax 0x20
push esi
mov edx ecx
mov esi 0x300
push edi
mov edi 0x200
and edx esi
je r-xdata
or eax 0x2
mov edx ecx
and edx 0x30000
je r-xdata
cmp edx 0x100
je r-xdata
or eax esi
cmp edx 0x10000
jne r-xdata
or eax 0x400
cmp edx edi
je r-xdata
pop ebp
retn
or eax 0x1000
pop edi
pop esi
test ecx 0x40000
je r-xdata
or eax edi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp edx esi
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_42954a
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
call sub_425628
push 0x16
mov ecx [ ebp + 0x10 ]
mov [ edx ] 0x0
test ecx ecx
jle r-xdata
pop esi
pop ebp
retn
xor eax eax
mov eax ecx
jmp r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
je r-xdata
call sub_425628
push 0x22
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
push ebx
lea ebx [ edx + 0x1 ]
mov eax ebx
push edi
mov edi [ esi + 0x8 ]
mov [ edx ] 0x30
test ecx ecx
jle r-xdata
pop esi
mov [ eax ] esi
call sub_425507
mov eax esi
jmp r-xdata
mov [ eax ] 0x0
test ecx ecx
js r-xdata
mov bl [ edi ]
test bl bl
je r-xdata
cmp [ edx ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
mov bl 0x30
inc edi
jmp r-xdata
mov ecx ebx
lea esi [ ecx + 0x1 ]
inc [ esi + 0x4 ]
jmp r-xdata
jmp r-xdata
lea ebx [ edx + 0x1 ]
mov [ eax ] bl
inc eax
dec ecx
test ecx ecx
jg r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx esi
lea eax [ ecx + 0x1 ]
push eax
push ebx
push edx
call sub_41f6f0
add esp 0xc
pop edi
xor eax eax
pop ebx
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_429606
mov edi edi
push esi
mov esi ecx
push esi
call sub_42b9c8
mov eax [ esi ]
and eax 0x1f
pop ecx
cmp al 0x1f
jne r-xdata
push esi
call sub_42ba2e
pop ecx
mov [ esi + 0x8 ] 0x1
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov eax esi
pop esi
retn
sub_429630
mov edi edi
push ebp
mov ebp esp
sub esp 0x21c
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
test eax eax
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
mov ecx [ edi ]
test ecx ecx
jne r-xdata
xor edx edx
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea esi [ eax - 0x1 ]
lea eax [ ecx - 0x1 ]
mov [ ebp - 0xc ] esi
test eax eax
jne r-xdata
pop edi
xor eax eax
xor edx edx
pop ebx
mov esp ebp
pop ebp
retn
cmp eax esi
ja r-xdata
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x28 ] ecx
cmp ecx 0x1
jne r-xdata
pop esi
pop edi
xor eax eax
xor edx edx
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
lea ecx [ eax + 0x1 ]
sub edx eax
mov [ ebp - 0x38 ] ecx
mov ecx esi
cmp esi edx
jl r-xdata
test esi esi
jne r-xdata
mov esi [ ebx + 0x4 ]
lea ecx [ ebx + 0x4 ]
push eax
mov [ ebp - 0x21c ] eax
mov [ ebx ] eax
lea eax [ ebp - 0x218 ]
push eax
push 0x1cc
push ecx
call sub_427ff2
add esp 0x10
mov eax esi
xor edx edx
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
inc edx
mov eax ecx
inc esi
sub eax edx
lea esi [ ebx + esi * 4 ]
lea edi [ edi + eax * 4 ]
add edi 0x4
xor edi edi
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] edi
cmp esi 0xffffffff
je r-xdata
mov esi [ ebx + 0x4 ]
lea eax [ ebp - 0x218 ]
push 0x0
push eax
lea edi [ ebx + 0x4 ]
mov [ ebp - 0x21c ] 0x0
push 0x1cc
push edi
mov [ ebx ] 0x0
call sub_427ff2
xor edx edx
mov eax esi
div [ ebp - 0x28 ]
add esp 0x10
xor ecx ecx
cmp ecx edx
mov [ edi ] edx
sbb ecx ecx
pop esi
neg ecx
xor edx edx
pop edi
mov [ ebx ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x38 ]
mov eax [ ebp + 0xc ]
mov esi [ eax + edi * 4 ]
mov eax [ eax + edi * 4 - 0x4 ]
mov [ ebp - 0x20 ] eax
bsr eax esi
mov [ ebp - 0x34 ] esi
je r-xdata
mov esi [ ebp + 0xc ]
mov eax ecx
sub eax edx
mov eax [ esi + eax * 4 + 0x4 ]
cmp eax [ ebx + ecx * 4 + 0x4 ]
jae r-xdata
dec ecx
sub edi 0x4
sub esi 0x4
cmp ecx edx
jge r-xdata
push 0x0
lea eax [ ebp - 0x218 ]
mov [ ebp - 0x21c ] 0x0
push eax
lea esi [ ebx + 0x4 ]
mov [ ebx ] 0x0
push 0x1cc
push esi
call sub_427ff2
mov eax [ ebp - 0x10 ]
add esp 0x10
mov edx [ ebp - 0x4 ]
xor ecx ecx
cmp ecx eax
mov [ esi ] edi
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x8 ]
sbb ecx ecx
neg ecx
pop esi
inc ecx
pop edi
mov [ ebx ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
inc esi
inc eax
mov [ ebp - 0x1c ] eax
lea esi [ ebx + esi * 4 ]
lea esp [ esp ]
mov ecx 0x20
mov ecx 0x1f
sub ecx eax
jmp r-xdata
test edx edx
jne r-xdata
mov eax [ edi ]
cmp eax [ esi ]
jne r-xdata
jmp r-xdata
push 0x0
push ecx
xor eax eax
or eax [ esi ]
push edi
push eax
call sub_42e800
mov [ ebp - 0x40 ] edx
lea esi [ esi - 0x4 ]
xor edx edx
mov [ ebp - 0x10 ] ebx
mov edi ecx
add edx eax
mov ecx [ ebp - 0x8 ]
adc ecx 0x0
mov [ ebp - 0x8 ] edx
sub [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x28 ]
jne r-xdata
mov ebx [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x48 ] 0x0
add edx 0xffffffff
mov [ ebp - 0x1c ] edx
js r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x3c ]
shr eax cl
mov ecx [ ebp - 0x24 ]
shl [ ebp - 0x20 ] cl
shl esi cl
or esi eax
mov [ ebp - 0x34 ] esi
cmp edi 0x2
jbe r-xdata
mov eax 0x20
mov [ ebp - 0x24 ] ecx
sub eax ecx
mov [ ebp - 0x3c ] eax
test ecx ecx
je r-xdata
xor edi edi
lea ecx [ ebx + 0x4 ]
lea ecx [ ecx + edx * 4 ]
mov [ ebp - 0x10 ] ecx
lea eax [ edx + edi ]
lea ecx [ ebx - 0x4 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ecx + eax * 4 ]
mov [ ebp - 0x4c ] ecx
mov esi [ ebp + 0xc ]
mov ecx [ ebp - 0x3c ]
mov eax [ esi + edi * 4 - 0x8 ]
shr eax cl
or [ ebp - 0x20 ] eax
mov [ ebx ] edx
test edx edx
je r-xdata
lea ecx [ eax + 0x1 ]
lea ecx [ ebx + ecx * 4 ]
jmp r-xdata
xor eax eax
mov eax [ ecx + 0x8 ]
jmp r-xdata
mov edx esi
mov eax edi
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx ]
cmp [ ebx + ecx * 4 ] 0x0
jne r-xdata
mov [ ecx ] 0x0
lea ecx [ ecx + 0x4 ]
inc eax
cmp eax [ ebx ]
jb r-xdata
push 0x0
push [ ebp - 0x34 ]
push eax
push edx
call sub_42e800
mov [ ebp - 0x28 ] ebx
xor esi esi
mov ebx eax
mov [ ebp - 0x28 ] esi
mov eax edx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x18 ] eax
mov edi ecx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x40 ] eax
test eax eax
jne r-xdata
mov edi ecx
mov eax edx
mov ecx [ ebp - 0x3c ]
xor esi esi
mov edx [ ebp - 0x4 ]
shr edi cl
mov ecx [ ebp - 0x24 ]
call sub_41c6a0
mov ecx [ ebp - 0x24 ]
or esi edx
or edi eax
mov eax esi
mov esi [ ebp - 0x14 ]
mov edx edi
shl esi cl
cmp [ ebp - 0x8 ] 0x3
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] esi
jb r-xdata
cmp [ ebp - 0x24 ] 0x0
mov edx [ ecx + 0x4 ]
mov ecx [ ecx ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] ecx
jbe r-xdata
add ecx 0xffffffff
mov [ ebx ] ecx
jne r-xdata
push 0x0
push [ ebp - 0x34 ]
add ebx 0x1
adc eax 0xffffffff
push eax
push ebx
call sub_41c6c0
add edi eax
adc esi edx
or ebx 0xffffffff
xor eax eax
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x40 ] eax
cmp ebx 0xffffffff
jbe r-xdata
mov eax [ ebp - 0x38 ]
add eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x3c ]
mov eax [ ebx + eax * 4 - 0x8 ]
shr eax cl
or esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] esi
test eax eax
jne r-xdata
jb r-xdata
test esi esi
ja r-xdata
mov ecx [ ebp - 0x38 ]
xor edi edi
xor esi esi
test ecx ecx
je r-xdata
test ebx ebx
je r-xdata
push eax
push ebx
xor ecx ecx
mov esi edi
or ecx [ ebp - 0x14 ]
push 0x0
push [ ebp - 0x20 ]
mov [ ebp - 0x4 ] ecx
call sub_41c6c0
cmp edx esi
jb r-xdata
cmp edi 0xffffffff
ja r-xdata
xor eax eax
cmp eax esi
ja r-xdata
mov eax [ ebp + 0xc ]
mov ebx [ ebp - 0x10 ]
add eax 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] ecx
mov esi [ ebp - 0x48 ]
xor eax eax
mov edx [ ebp - 0x1c ]
add eax ebx
mov ecx [ ebp - 0x4c ]
mov edi eax
mov eax [ ebp - 0x8 ]
adc esi 0x0
sub [ ebp - 0x10 ] 0x4
dec edx
mov ebx [ ebp + 0x8 ]
sub ecx 0x4
dec eax
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x8 ] eax
test edx edx
jns r-xdata
mov eax [ ebp - 0x18 ]
ja r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov [ ebp - 0xc ] eax
jb r-xdata
sub eax ecx
mov [ ebx ] eax
add ebx 0x4
mov eax [ ebp - 0x14 ]
add eax 0x4
sub [ ebp - 0xc ] 0x1
mov [ ebp - 0x14 ] eax
jne r-xdata
add edi 0x1
adc esi esi
cmp eax [ ebp - 0xc ]
ja r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
add ebx 0xffffffff
mov [ ebp - 0x44 ] ebx
adc eax 0xffffffff
add edi [ ebp - 0x34 ]
mov [ ebp - 0x18 ] eax
adc [ ebp - 0x28 ] 0x0
mov [ ebp - 0x40 ] eax
jne r-xdata
cmp eax [ ebp - 0x4 ]
jbe r-xdata
test ecx ecx
je r-xdata
cmp [ ebp - 0x30 ] edi
jae r-xdata
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x40 ]
mul [ ebp - 0x28 ]
mov ecx eax
mov eax [ ebp - 0x44 ]
mul [ ebp - 0x28 ]
add edx ecx
add edi eax
mov eax [ ebx ]
mov ecx edi
adc esi edx
mov edi esi
xor esi esi
cmp eax ecx
jae r-xdata
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0xc ]
inc edx
mov eax edx
cmp eax [ ebx ]
jae r-xdata
mov [ ebp - 0x4 ] ebx
cmp edi 0xffffffff
jbe r-xdata
add ebx 0xffffffff
adc [ ebp - 0x18 ] 0xffffffff
mov esi [ ebp + 0xc ]
mov edi ecx
mov edx [ ebp - 0x10 ]
add esi 0x4
mov ebx eax
lea esp [ esp ]
jmp r-xdata
mov ecx [ edx ]
lea esi [ esi + 0x4 ]
xor eax eax
lea edx [ edx + 0x4 ]
add ecx [ esi - 0x4 ]
adc eax eax
add ecx ebx
mov [ edx - 0x4 ] ecx
adc eax 0x0
mov ebx eax
sub edi 0x1
jne r-xdata
mov ebx [ ebp - 0x4 ]
sub_429ade
mov edi edi
push ebp
mov ebp esp
sub esp 0x964
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x18 ]
lea ecx [ ebp - 0x794 ]
push esi
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x780 ] edi
mov [ ebp - 0x77c ] ebx
call sub_429606
mov esi [ ebp + 0xc ]
xor eax eax
mov ecx esi
and ecx 0x80000000
or eax ecx
mov al 0x2d
jne r-xdata
movsx eax al
mov ecx esi
mov [ edi ] eax
and ecx 0x7ff00000
xor eax eax
mov [ edi + 0x8 ] ebx
or eax ecx
mov edi [ ebp + 0x8 ]
jne r-xdata
add al 0xf3
lea eax [ ebp + 0x8 ]
push eax
call sub_425cb1
pop ecx
test eax eax
je r-xdata
mov ecx esi
mov eax edi
and ecx 0xfffff
or eax ecx
jne r-xdata
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0x780 ]
mov [ ecx + 0x4 ] 0x1
mov eax [ ebp - 0x780 ]
push r--data
and [ eax + 0x4 ] 0x0
jmp r-xdata
push r--data
sub eax 0x1
je r-xdata
push [ ebp + 0x1c ]
push ebx
call sub_425152
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_425517
int3
cmp [ ebp - 0x78c ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
push r--data
jmp r-xdata
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_41cabf
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x794 ]
push eax
call sub_42b9e5
pop ecx
push r--data
jmp r-xdata
sub eax 0x1
je r-xdata
push r--data
jmp r-xdata
mov eax [ ebp + 0x10 ]
and esi 0x7fffffff
and [ ebp - 0x784 ] 0x0
inc eax
mov [ ebp + 0x8 ] edi
mov [ ebp + 0xc ] esi
fld [ ebp + 0x8 ]
fst [ ebp - 0x768 ]
mov edi [ ebp - 0x764 ]
mov ecx edi
mov [ ebp - 0x778 ] eax
shr ecx 0x14
mov eax ecx
and eax 0x7ff
or eax 0x0
jne r-xdata
xor dl dl
mov esi 0x100000
xor eax eax
mov dl 0x1
xor esi esi
jmp r-xdata
xor eax eax
mov [ ebp - 0x76c ] eax
cmp eax 0x80000000
jne r-xdata
mov ebx [ ebp - 0x768 ]
and edi 0xfffff
add ebx eax
adc edi esi
xor eax eax
test dl dl
setne al
and ecx 0x7ff
inc eax
lea esi [ ecx - 0x434 ]
add esi eax
mov [ ebp - 0x74c ] esi
call sub_42bac0
push ecx
push ecx
fstp [ esp ]
call sub_42bbd0
pop ecx
pop ecx
call sub_42e930
mov [ ebp - 0x76c ] eax
cmp eax 0x7fffffff
je r-xdata
cmp esi 0xfffffc02
je r-xdata
and [ ebp - 0x570 ] 0x0
push 0x2
pop esi
mov [ ebp - 0x56c ] 0x100000
mov [ ebp - 0x574 ] esi
cmp ebx esi
jne r-xdata
mov [ ebp - 0x1d0 ] ebx
xor ebx ebx
test edi edi
mov [ ebp - 0x1cc ] edi
setne bl
inc ebx
mov [ ebp - 0x1d4 ] ebx
test esi esi
js r-xdata
mov eax [ ebp + ebx * 4 - 0x1d4 ]
and [ ebp - 0x764 ] 0x0
bsr eax eax
je r-xdata
and [ ebp - 0x570 ] 0x0
push 0x2
pop ecx
mov [ ebp - 0x56c ] 0x100000
mov [ ebp - 0x574 ] ecx
cmp ebx ecx
jne r-xdata
mov eax [ ebp - 0x74c ]
xor edx edx
inc eax
mov edi eax
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov [ ebp - 0x750 ] eax
xor eax eax
shr edi 0x5
inc eax
mov [ ebp - 0x74c ] edi
mov [ ebp - 0x770 ] ecx
call sub_41c6a0
mov ecx [ ebp + ebx * 4 - 0x1d4 ]
dec eax
and [ ebp - 0x764 ] 0x0
bsr ecx ecx
mov [ ebp - 0x758 ] eax
not eax
mov [ ebp - 0x774 ] eax
je r-xdata
xor ecx ecx
xor ecx ecx
lea ecx [ eax + 0x1 ]
jmp r-xdata
xor edx edx
xor ecx ecx
inc ecx
jmp r-xdata
add ecx 0x4
cmp ecx 0x8
jne r-xdata
xor al al
test al al
je r-xdata
push 0x20
pop eax
sub eax ecx
cmp eax 0x1
setb al
cmp ebx 0x73
mov [ ebp - 0x745 ] al
seta cl
cmp ebx 0x73
jne r-xdata
add edx 0x4
cmp edx 0x8
jne r-xdata
xor al al
test al al
je r-xdata
push 0x20
pop eax
sub eax ecx
lea edx [ ebx + edi ]
cmp [ ebp - 0x750 ] eax
mov [ ebp - 0x760 ] edx
seta al
cmp edx 0x73
mov [ ebp - 0x745 ] al
seta cl
cmp edx 0x73
jne r-xdata
mov eax [ ebp + ecx - 0x570 ]
cmp eax [ ebp + ecx - 0x1d0 ]
jne r-xdata
mov eax [ ebp - 0x74c ]
xor edx edx
add eax 0x2
mov esi eax
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov [ ebp - 0x75c ] eax
xor eax eax
shr esi 0x5
inc eax
mov [ ebp - 0x750 ] esi
mov [ ebp - 0x770 ] ecx
call sub_41c6a0
and [ ebp - 0x764 ] 0x0
dec eax
bsr ecx edi
mov [ ebp - 0x758 ] eax
not eax
mov [ ebp - 0x774 ] eax
je r-xdata
and [ ebp - 0x574 ] 0x0
lea eax [ ebp - 0x570 ]
and [ ebp - 0x1d4 ] 0x0
push 0x0
push eax
lea eax [ ebp - 0x1d0 ]
push 0x1cc
push eax
call sub_427ff2
add esp 0x10
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + edx - 0x570 ]
cmp eax [ ebp + edx - 0x1d0 ]
jne r-xdata
and [ ebp - 0x764 ] 0x0
bsr eax edi
je r-xdata
xor eax eax
mov ebx 0x1cc
push eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x570 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_427ff2
add esp 0x10
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
xor ecx ecx
inc ecx
jmp r-xdata
neg eax
div ecx
mov [ ebp - 0x754 ] eax
mov ecx edx
mov [ ebp - 0x758 ] ecx
test eax eax
je r-xdata
div ecx
mov [ ebp - 0x770 ] eax
mov ecx edx
mov [ ebp - 0x764 ] ecx
test eax eax
je r-xdata
push 0x72
pop ecx
cmp ebx ecx
jae r-xdata
test cl cl
jne r-xdata
xor edx edx
lea edx [ eax + 0x1 ]
jmp r-xdata
lea eax [ ebp - 0x570 ]
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_427ff2
add esp 0x10
jmp r-xdata
push 0x72
pop ecx
cmp edx ecx
jb r-xdata
test cl cl
jne r-xdata
xor al al
test al al
je r-xdata
push 0x20
pop eax
sub eax ecx
lea edx [ esi + 0x2 ]
cmp [ ebp - 0x75c ] eax
mov [ ebp - 0x754 ] edx
seta al
cmp edx 0x73
mov [ ebp - 0x745 ] al
seta cl
cmp edx 0x73
jne r-xdata
test ecx ecx
je r-xdata
cmp eax 0x26
jbe r-xdata
test ecx ecx
je r-xdata
cmp eax 0x26
jbe r-xdata
cmp ecx 0xffffffff
je r-xdata
mov ecx ebx
and [ ebp - 0x750 ] 0x0
mov edx [ edi ]
mov [ ebp - 0x750 ] edx
jmp r-xdata
push 0x20
pop eax
sub eax edx
mov esi ecx
cmp eax ecx
lea eax [ ebp - 0x1c8 ]
mov [ ebp - 0x754 ] eax
mov edi eax
setb [ ebp - 0x745 ]
mov eax [ ebp - 0x76c ]
xor edx edx
push 0xa
pop ecx
mov [ ebp - 0x774 ] ecx
test eax eax
js r-xdata
mov eax edx
mov [ ebp - 0x754 ] eax
cmp edx 0xffffffff
je r-xdata
mov edx ecx
mov [ ebp - 0x760 ] ecx
xor eax eax
mov ebx 0x1cc
push eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x570 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_427ff2
add esp 0x10
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
mov edi [ ebp - 0x77c ]
mov esi edi
mov ecx [ ebp - 0x1d4 ]
mov [ ebp - 0x74c ] esi
test ecx ecx
je r-xdata
mov eax [ ecx * 4 + r--data ]
mov [ ebp - 0x764 ] eax
test eax eax
je r-xdata
movzx ecx [ eax * 4 + r--data ]
movzx esi [ eax * 4 + r--data ]
mov edi ecx
mov [ ebp - 0x74c ] eax
shl edi 0x2
push edi
lea eax [ ecx + esi ]
mov [ ebp - 0x574 ] eax
lea eax [ ebp - 0x570 ]
push 0x0
push eax
call sub_41d1e0
mov eax esi
shl eax 0x2
push eax
mov eax [ ebp - 0x74c ]
movzx eax [ eax * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
push eax
lea eax [ ebp - 0x570 ]
add eax edi
push eax
call sub_41ee90
mov ecx [ ebp - 0x574 ]
add esp 0x18
mov [ ebp - 0x760 ] ecx
cmp ecx 0x1
ja r-xdata
push 0x26
pop eax
mov edi [ ecx * 4 + r--data ]
test edi edi
jne r-xdata
movzx ecx [ eax * 4 + r--data ]
movzx esi [ eax * 4 + r--data ]
mov edi ecx
mov [ ebp - 0x75c ] eax
shl edi 0x2
push edi
lea eax [ ecx + esi ]
mov [ ebp - 0x574 ] eax
lea eax [ ebp - 0x570 ]
push 0x0
push eax
call sub_41d1e0
mov eax esi
shl eax 0x2
push eax
mov eax [ ebp - 0x75c ]
movzx eax [ eax * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
push eax
lea eax [ ebp - 0x570 ]
add eax edi
push eax
call sub_41ee90
mov ecx [ ebp - 0x574 ]
add esp 0x18
mov [ ebp - 0x760 ] ecx
cmp ecx 0x1
ja r-xdata
push 0x26
pop eax
cmp [ ebp - 0x745 ] 0x0
je r-xdata
lea edi [ ebp - 0x1d0 ]
mov esi ecx
lea edi [ edi + ecx * 4 ]
mov [ ebp - 0x754 ] edi
xor edx edx
mov edx [ edi - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
test edi edi
je r-xdata
mov esi edx
lea ecx [ ebp - 0x1d0 ]
mov edx [ ebp - 0x74c ]
sub esi edx
lea ecx [ ecx + esi * 4 ]
mov [ ebp - 0x75c ] ecx
push 0x72
pop ecx
cmp edx ecx
jb r-xdata
test cl cl
jne r-xdata
lea eax [ ebp - 0x3a4 ]
push eax
lea eax [ ebp - 0x1d4 ]
push eax
call sub_429630
pop ecx
pop ecx
push 0xa
pop edx
cmp eax edx
jne r-xdata
xor esi esi
xor edi edi
xor eax eax
push eax
mov [ ebp - 0x1d4 ] eax
mov [ ebp - 0x964 ] eax
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x1d4 ] 0x1
ja r-xdata
mov edi [ ebp - 0x570 ]
test edi edi
jne r-xdata
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x3a4 ] eax
push eax
jmp r-xdata
cmp [ ebp - 0x3a4 ] 0x1
ja r-xdata
mov edi [ ebp - 0x570 ]
test edi edi
jne r-xdata
mov [ ebp - 0x1d4 ] ecx
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
and [ ebp - 0x750 ] 0x0
mov edx [ edi ]
mov [ ebp - 0x750 ] edx
jmp r-xdata
xor eax eax
cmp [ ebp - 0x745 ] al
setne al
add eax ecx
sub ecx [ ebp - 0x74c ]
mov edi ecx
mov [ ebp - 0x1d4 ] eax
shr edi 0x5
lea eax [ ebp - 0x570 ]
mov esi edi
mov [ ebp - 0x758 ] ecx
shl esi 0x2
push esi
push 0x0
push eax
call sub_41d1e0
mov ecx [ ebp - 0x758 ]
xor eax eax
inc eax
and ecx 0x1f
shl eax cl
mov [ ebp + esi - 0x570 ] eax
lea eax [ edi + 0x1 ]
jmp r-xdata
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
mov eax [ ebp - 0x750 ]
sub edi 0x4
shl eax 0x2
shr edx 0x1e
xor edx eax
mov eax [ ebp - 0x754 ]
dec esi
mov [ eax ] edx
sub eax 0x4
mov [ ebp - 0x754 ] eax
cmp esi 0xffffffff
je r-xdata
cmp [ ebp - 0x745 ] 0x0
mov ebx 0x1cc
je r-xdata
mov ecx edi
xor eax eax
lea edi [ ebp - 0x1d0 ]
[ edi ]
mov edx [ ebp - 0x760 ]
mov edi [ ebp - 0x74c ]
push 0x2
pop esi
cmp esi ebx
jae r-xdata
mov ecx edx
mov [ ebp - 0x760 ] ecx
cmp edx 0xffffffff
je r-xdata
mov edx ecx
mov [ ebp - 0x754 ] ecx
test eax eax
jne r-xdata
inc [ ebp - 0x76c ]
lea esi [ edi + 0x1 ]
mov eax [ ebp - 0x3a4 ]
mov [ edi ] 0x31
mov [ ebp - 0x74c ] esi
test eax eax
je r-xdata
mov eax [ ebp + edi * 4 - 0x1d0 ]
push 0xa
pop edx
mul edx
add eax esi
mov [ ebp + edi * 4 - 0x1d0 ] eax
adc edx 0x0
inc edi
mov esi edx
cmp edi ecx
jne r-xdata
mov [ ebp - 0x764 ] esi
test esi esi
mov esi [ ebp - 0x74c ]
je r-xdata
mov ecx [ ebp - 0x1d4 ]
test ecx ecx
je r-xdata
cmp ecx [ ebp - 0x1d4 ]
lea edi [ ebp - 0x570 ]
setb al
test al al
jne r-xdata
mov edi [ ebp - 0x1d0 ]
mov eax ecx
shl eax 0x2
push eax
lea eax [ ebp - 0x570 ]
mov [ ebp - 0x1d4 ] ecx
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_427ff2
add esp 0x10
test edi edi
je r-xdata
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x1d4 ] eax
push eax
lea eax [ ebp - 0x960 ]
jmp r-xdata
mov eax [ ebp - 0x3a4 ]
mov [ ebp - 0x764 ] eax
test eax eax
je r-xdata
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x3a0 ]
jmp r-xdata
cmp ecx [ ebp - 0x3a4 ]
lea edi [ ebp - 0x570 ]
setb al
test al al
jne r-xdata
mov edi [ ebp - 0x3a0 ]
mov eax ecx
shl eax 0x2
push eax
lea eax [ ebp - 0x570 ]
mov [ ebp - 0x3a4 ] ecx
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_427ff2
add esp 0x10
test edi edi
jne r-xdata
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x744 ] eax
mov [ ebp - 0x3a4 ] eax
jmp r-xdata
xor edi edi
lea eax [ ebp - 0x570 ]
inc edi
sub edi esi
mov ebx edi
shr ebx 0x5
mov esi ebx
shl esi 0x2
push esi
push 0x0
push eax
call sub_41d1e0
xor eax eax
and edi 0x1f
inc eax
mov ecx edi
shl eax cl
mov [ ebp + esi - 0x570 ] eax
lea eax [ ebx + 0x1 ]
xor edx edx
mov edx [ edi - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
mov [ ebp - 0x574 ] eax
mov ebx 0x1cc
mov [ ebp - 0x3a4 ] eax
shl eax 0x2
push eax
lea eax [ ebp - 0x570 ]
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_427ff2
add esp 0x1c
cmp esi ebx
jae r-xdata
mov [ ebp - 0x1d4 ] edx
jmp r-xdata
lea eax [ edx + 0x1 ]
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
xor edi edi
mov edi [ ecx ]
jmp r-xdata
test esi esi
je r-xdata
mov esi edx
lea eax [ ebp - 0x1d0 ]
mov edx [ ebp - 0x750 ]
sub esi edx
lea eax [ eax + esi * 4 ]
mov [ ebp - 0x74c ] eax
add al 0x30
lea esi [ edi + 0x1 ]
mov [ edi ] al
mov [ ebp - 0x74c ] esi
mov eax [ ebp - 0x76c ]
dec eax
jmp r-xdata
mov eax [ ebp - 0x76c ]
xor edi edi
mov esi eax
xor ecx ecx
mov edi esi
mov ecx [ ebp - 0x1d4 ]
cmp ecx 0x73
jae r-xdata
xor edi edi
xor esi esi
lea edx [ ebp - 0x1d0 ]
jmp r-xdata
lea edi [ ebp - 0x1d0 ]
lea edx [ ebp - 0x570 ]
cmp edi 0x1
je r-xdata
mov al 0x1
cmp [ ebp - 0x1d4 ] 0x0
je r-xdata
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_427ff2
add esp 0x10
xor esi esi
xor ecx ecx
push ebx
push eax
call sub_427ff2
add esp 0x10
lea edx [ ebp - 0x3a0 ]
jmp r-xdata
lea edi [ ebp - 0x3a0 ]
lea edx [ ebp - 0x570 ]
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x3a4 ] eax
push eax
lea eax [ ebp - 0x570 ]
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x3a4 ] 0x0
je r-xdata
push eax
lea eax [ ebp - 0x740 ]
mov esi [ ebp - 0x74c ]
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
mov eax [ ebp - 0x750 ]
sub edi 0x4
add eax eax
shr edx 0x1f
xor edx eax
mov eax [ ebp - 0x754 ]
dec esi
mov [ eax ] edx
sub eax 0x4
mov [ ebp - 0x754 ] eax
cmp esi 0xffffffff
je r-xdata
and [ ebp - 0x56c ] 0x0
xor eax eax
inc eax
mov [ ebp - 0x570 ] esi
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x3a4 ] eax
push 0x4
jmp r-xdata
xor eax eax
mov eax [ ecx - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
cmp [ ebp - 0x745 ] 0x0
mov ebx 0x1cc
je r-xdata
mov ecx esi
lea edi [ ebp - 0x1d0 ]
xor eax eax
[ edi ]
mov edx [ ebp - 0x754 ]
mov esi [ ebp - 0x750 ]
cmp esi ebx
jae r-xdata
mov eax [ ebp + 0x1c ]
dec eax
cmp eax ecx
jb r-xdata
cmp ecx 0x7fffffff
ja r-xdata
mov ecx [ ebp - 0x780 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x778 ]
test eax eax
js r-xdata
mov eax [ ebp + ecx * 4 - 0x3a0 ]
mul edx
push 0xa
add eax edi
mov [ ebp + ecx * 4 - 0x3a0 ] eax
adc edx 0x0
inc ecx
mov edi edx
pop edx
cmp ecx esi
jne r-xdata
mov esi [ ebp - 0x74c ]
test edi edi
je r-xdata
xor eax eax
push eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_427ff2
add esp 0x10
mov eax edx
mov [ ebp + ecx * 4 - 0x1d0 ] eax
inc [ ebp - 0x1d4 ]
jmp r-xdata
mul [ ebp + esi * 4 - 0x1d0 ]
add eax edi
mov [ ebp + esi * 4 - 0x1d0 ] eax
mov eax [ ebp - 0x764 ]
adc edx 0x0
inc esi
mov edi edx
cmp esi ecx
jne r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x770 ] edx
test al al
jne r-xdata
mov [ ebp - 0x750 ] ecx
test al al
je r-xdata
mov ecx [ ebp - 0x1d4 ]
cmp [ ebp - 0x1d4 ] 0x0
je r-xdata
and [ ebp - 0x964 ] 0x0
and [ ebp - 0x1d4 ] 0x0
push 0x0
jmp r-xdata
mov eax [ ebp - 0x754 ]
sub eax [ ebp - 0x74c ]
mov [ ebp - 0x754 ] eax
jne r-xdata
mov eax [ ebp - 0x1d4 ]
xor ecx ecx
mov [ ebp - 0x764 ] eax
xor esi esi
mov eax edi
mul [ ebp + ecx * 4 - 0x3a0 ]
add eax esi
mov [ ebp + ecx * 4 - 0x3a0 ] eax
adc edx 0x0
inc ecx
mov esi edx
cmp ecx [ ebp - 0x764 ]
jne r-xdata
test esi esi
je r-xdata
mov [ ebp - 0x750 ] edx
test al al
jne r-xdata
mov [ ebp - 0x754 ] ecx
test al al
je r-xdata
mov ecx [ ebp - 0x3a4 ]
cmp [ ebp - 0x3a4 ] 0x0
je r-xdata
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_427ff2
add esp 0x10
and [ ebp - 0x964 ] 0x0
and [ ebp - 0x3a4 ] 0x0
push 0x0
mov eax [ ebp - 0x770 ]
sub eax [ ebp - 0x75c ]
mov [ ebp - 0x770 ] eax
jne r-xdata
mov eax [ ebp - 0x3a4 ]
xor ecx ecx
mov [ ebp - 0x758 ] eax
xor esi esi
cmp esi ebx
jae r-xdata
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
and edi [ ebp - 0x758 ]
and eax [ ebp - 0x774 ]
mov ecx [ ebp - 0x750 ]
shl edi cl
mov ecx [ ebp - 0x770 ]
shr eax cl
mov ecx [ ebp - 0x75c ]
or edi eax
mov eax [ ebp - 0x754 ]
sub ecx 0x4
mov [ ebp - 0x75c ] ecx
mov [ ebp + eax * 4 - 0x1d0 ] edi
dec eax
dec esi
mov [ ebp - 0x754 ] eax
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x1d4 ] edx
jmp r-xdata
lea eax [ edx + 0x1 ]
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
xor edi edi
mov edi [ eax ]
jmp r-xdata
add eax [ ebp - 0x77c ]
mov [ ebp - 0x778 ] eax
cmp esi eax
je r-xdata
mov eax ecx
add ecx eax
mov eax [ ebp - 0x3a4 ]
cmp eax 0x73
jae r-xdata
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
xor edx edx
xor esi esi
mov [ ebp - 0x744 ] edx
test ecx ecx
je r-xdata
mov eax [ ebp - 0x1d4 ]
mov [ ebp - 0x760 ] eax
mov eax [ ebp - 0x1d4 ]
xor ecx ecx
mov [ ebp - 0x764 ] eax
xor esi esi
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x1d0 ]
mov ecx [ ebp - 0x758 ]
mov eax edi
mul [ ebp + esi * 4 - 0x1d0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x1d0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi [ ebp - 0x764 ]
jne r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp - 0x3a4 ]
cmp eax 0x73
jae r-xdata
xor edx edx
xor esi esi
mov [ ebp - 0x744 ] edx
test ecx ecx
je r-xdata
mov eax [ ebp - 0x3a4 ]
mov [ ebp - 0x760 ] eax
mov eax [ ebp - 0x3a4 ]
xor ecx ecx
mov [ ebp - 0x758 ] eax
xor esi esi
mov ecx [ ebp - 0x764 ]
mov eax edi
mul [ ebp + esi * 4 - 0x3a0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x3a0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi [ ebp - 0x758 ]
jne r-xdata
jmp r-xdata
cmp eax edx
jb r-xdata
and [ ebp - 0x56c ] 0x0
xor ecx ecx
push 0x4
pop eax
inc ecx
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x574 ] ecx
mov [ ebp - 0x3a4 ] ecx
push eax
xor eax eax
mov eax [ ebp - 0x74c ]
mov eax [ eax - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1d4 ]
test eax eax
je r-xdata
xor eax eax
push eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x3a4 ] eax
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_427ff2
add esp 0x10
jmp r-xdata
mov [ ebp + eax * 4 - 0x3a0 ] edi
inc [ ebp - 0x3a4 ]
jmp r-xdata
mov [ ebp + eax * 4 - 0x1d0 ] edi
inc [ ebp - 0x1d4 ]
jmp r-xdata
mov eax edx
mov [ ebp - 0x1d4 ] edx
shl eax 0x2
push eax
lea eax [ ebp - 0x740 ]
lea eax [ ebp - 0x740 ]
sub edi eax
mov [ ebp - 0x784 ] edi
mov eax edi
mul [ ebp + esi * 4 - 0x1d0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x1d0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi [ ebp - 0x764 ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
mov [ ebp + eax * 4 - 0x3a0 ] esi
inc [ ebp - 0x3a4 ]
jmp r-xdata
mov eax edx
mov [ ebp - 0x3a4 ] edx
shl eax 0x2
lea eax [ ebp - 0x740 ]
sub edi eax
mov [ ebp - 0x784 ] edi
mov eax edi
mul [ ebp + esi * 4 - 0x3a0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x3a0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi [ ebp - 0x758 ]
jne r-xdata
test ecx ecx
je r-xdata
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
and eax [ ebp - 0x774 ]
and edi [ ebp - 0x758 ]
mov ecx [ ebp - 0x770 ]
shr eax cl
mov ecx [ ebp - 0x75c ]
shl edi cl
mov ecx [ ebp - 0x760 ]
or eax edi
mov [ ebp + ecx * 4 - 0x1d0 ] eax
dec ecx
mov eax [ ebp - 0x74c ]
dec esi
sub eax 0x4
mov [ ebp - 0x760 ] ecx
mov [ ebp - 0x74c ] eax
cmp ecx 0xffffffff
je r-xdata
xor edi edi
mov esi eax
xor ecx ecx
xor eax eax
xor edi edi
mov ecx esi
mov [ ebp - 0x75c ] eax
cmp [ ebp - 0x760 ] eax
je r-xdata
cmp esi edx
jne r-xdata
xor eax eax
push eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_427ff2
add esp 0x10
xor al al
jmp r-xdata
mov [ ebp + eax * 4 - 0x1d0 ] ecx
inc [ ebp - 0x1d4 ]
jmp r-xdata
xor eax eax
xor edi edi
mov ecx esi
mov [ ebp - 0x74c ] eax
cmp [ ebp - 0x760 ] eax
je r-xdata
cmp esi edx
jne r-xdata
mov eax [ ebp - 0x3a4 ]
cmp eax 0x73
jb r-xdata
cmp ecx edx
jb r-xdata
mov eax [ ebp + ecx * 4 - 0x1d0 ]
mov edx 0x3b9aca00
mul edx
add eax edi
mov [ ebp + ecx * 4 - 0x1d0 ] eax
adc edx 0x0
inc ecx
mov edi edx
cmp ecx esi
jne r-xdata
mov esi [ ebp - 0x74c ]
test edi edi
je r-xdata
cmp ecx 0x73
je r-xdata
cmp ecx 0x73
je r-xdata
inc esi
cmp esi ecx
jne r-xdata
and [ ebp + esi * 4 - 0x740 ] eax
lea edx [ esi + 0x1 ]
mov [ ebp - 0x744 ] edx
jmp r-xdata
test al al
je r-xdata
cmp ecx 0x73
je r-xdata
cmp ecx 0x73
je r-xdata
inc esi
cmp esi ecx
jne r-xdata
and [ ebp + esi * 4 - 0x740 ] eax
lea edx [ esi + 0x1 ]
mov [ ebp - 0x744 ] edx
jmp r-xdata
mov [ ebp + eax * 4 - 0x3a0 ] ecx
inc [ ebp - 0x3a4 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x3a4 ] eax
push eax
lea eax [ ebp - 0x570 ]
jmp r-xdata
lea eax [ ebp - 0x3a4 ]
push eax
lea eax [ ebp - 0x1d4 ]
push eax
call sub_429630
pop ecx
pop ecx
mov ecx [ ebp - 0x778 ]
push 0x8
pop edi
sub ecx esi
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
mov edi [ ebp - 0x784 ]
mov ecx [ ebp - 0x750 ]
test edi edi
je r-xdata
cmp ecx edx
jne r-xdata
lea eax [ edi + esi * 4 ]
mov eax [ ebp + eax - 0x740 ]
mov [ ebp - 0x764 ] eax
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x3a4 ] eax
push eax
lea eax [ ebp - 0x960 ]
mov edi [ ebp - 0x784 ]
mov ecx [ ebp - 0x754 ]
test edi edi
je r-xdata
cmp ecx edx
jne r-xdata
lea eax [ edi + esi * 4 ]
mov eax [ ebp + eax - 0x740 ]
mov [ ebp - 0x758 ] eax
test eax eax
jne r-xdata
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_427ff2
add esp 0x10
xor al al
jmp r-xdata
dec edi
cmp edi 0xffffffff
jne r-xdata
mov [ edi + esi ] dl
xor eax eax
push eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_427ff2
add esp 0x10
mov [ ebp + eax * 4 - 0x1d0 ] edi
inc [ ebp - 0x1d4 ]
jmp r-xdata
cmp ecx 0x73
je r-xdata
mov edx [ ebp - 0x770 ]
mov eax [ edx + eax * 4 ]
mul [ ebp - 0x764 ]
add eax edi
adc edx 0x0
add [ ebp + ecx * 4 - 0x740 ] eax
mov eax [ ebp - 0x75c ]
adc edx 0x0
inc eax
inc ecx
mov [ ebp - 0x75c ] eax
mov edi edx
mov edx [ ebp - 0x744 ]
cmp eax [ ebp - 0x760 ]
jne r-xdata
and [ ebp + ecx * 4 - 0x740 ] 0x0
inc eax
add eax esi
mov [ ebp - 0x744 ] eax
mov eax [ ebp - 0x75c ]
test al al
je r-xdata
cmp ecx 0x73
je r-xdata
mov edx [ ebp - 0x750 ]
mov eax [ edx + eax * 4 ]
mul [ ebp - 0x758 ]
add eax edi
adc edx 0x0
add [ ebp + ecx * 4 - 0x740 ] eax
mov eax [ ebp - 0x74c ]
adc edx 0x0
inc eax
inc ecx
mov [ ebp - 0x74c ] eax
mov edi edx
mov edx [ ebp - 0x744 ]
cmp eax [ ebp - 0x760 ]
jne r-xdata
and [ ebp + ecx * 4 - 0x740 ] 0x0
inc eax
add eax esi
mov [ ebp - 0x744 ] eax
mov eax [ ebp - 0x74c ]
xor edx edx
div [ ebp - 0x774 ]
add dl 0x30
cmp ecx edi
jb r-xdata
cmp ecx 0x9
jbe r-xdata
cmp ecx edx
jne r-xdata
cmp ecx edx
jne r-xdata
add esi ecx
mov [ ebp - 0x74c ] esi
cmp esi [ ebp - 0x778 ]
jne r-xdata
push 0x9
pop ecx
mov eax edi
xor edi edi
add [ ebp + ecx * 4 - 0x740 ] eax
mov edx [ ebp - 0x744 ]
adc edi edi
inc ecx
jmp r-xdata
and [ ebp + ecx * 4 - 0x740 ] 0x0
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x744 ] eax
mov eax edi
xor edi edi
add [ ebp + ecx * 4 - 0x740 ] eax
mov edx [ ebp - 0x744 ]
adc edi edi
inc ecx
jmp r-xdata
and [ ebp + ecx * 4 - 0x740 ] 0x0
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x744 ] eax
sub_42ae7a
push 0x10
push r--data
call sub_41cb60
and [ ebp - 0x1c ] 0x0
push 0x8
call sub_426ebf
pop ecx
and [ ebp - 0x4 ] 0x0
push 0x3
pop esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42af11
mov eax [ ebp - 0x1c ]
call sub_41cba6
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
mov eax [ eax + 0xc ]
shr eax 0xd
test al 0x1
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_4251ac
pop ecx
mov eax [ rw-data ]
and [ eax + esi * 4 ] 0x0
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_42c683
pop ecx
cmp eax 0xffffffff
je r-xdata
inc [ ebp - 0x1c ]
sub_42af1a
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
lea esi [ ecx + 0xc ]
mov eax [ esi ]
and al 0x3
cmp al 0x2
je r-xdata
mov eax [ esi ]
test al 0xc0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ecx + 0x4 ]
push edi
mov edi [ ecx ]
sub edi eax
mov [ ecx ] eax
and [ ecx + 0x8 ] 0x0
test edi edi
jle r-xdata
pop esi
pop ebp
retn
xor eax eax
push edi
push eax
push ecx
call sub_4266c6
pop ecx
push eax
call sub_42c27d
add esp 0xc
cmp edi eax
je r-xdata
mov eax [ esi ]
shr eax 0x2
test al 0x1
je r-xdata
push 0x10
pop eax
[ esi ] eax
or eax 0xffffffff
jmp r-xdata
push 0xfffffffd
pop eax
[ esi ] eax
pop edi
sub_42af80
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_42af1a
pop ecx
test eax eax
je r-xdata
push esi
call sub_42afd0
pop ecx
jmp r-xdata
mov eax [ esi + 0xc ]
shr eax 0xb
test al 0x1
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_4266c6
push eax
call sub_42c7c3
pop ecx
pop ecx
test eax eax
jne r-xdata
sub_42afd0
push 0x1c
push r--data
call sub_41cb60
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x24 ] 0x0
push 0x8
call sub_426ebf
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov eax [ rw-data ]
lea eax [ esi + eax * 4 ]
mov [ ebp - 0x2c ] eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42b09f
cmp ebx 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov edi [ esi ]
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
call sub_41cba6
retn
mov eax [ ebp - 0x24 ]
add esi 0x4
jmp r-xdata
push edi
call sub_426800
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0xc ]
shr eax 0xd
test al 0x1
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_42b075
mov eax [ ebp - 0x2c ]
cmp ebx 0x1
jne r-xdata
test ebx ebx
jne r-xdata
push edi
call sub_42af80
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ edi + 0xc ]
shr eax 0x1
test al 0x1
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push edi
call sub_42af80
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_42b0a8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ esi + 0xc ]
mov eax [ edi ]
shr eax 0xd
test al 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ edi ]
shr eax 0x6
test al 0x1
je r-xdata
push [ esi + 0x4 ]
call sub_4251ac
pop ecx
mov eax 0xfffffebf
[ edi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
mov [ esi + 0x8 ] eax
sub_42b0e6
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_425628
mov [ eax ] 0x9
jmp r-xdata
call sub_425628
mov [ eax ] 0x9
call sub_425507
cmp ecx [ rw-data ]
jae r-xdata
xor eax eax
pop ebp
retn
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
movzx eax [ eax + ecx + 0x28 ]
and eax 0x40
pop ebp
retn
sub_42b13c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp [ ecx ] al
je r-xdata
pop ebp
retn
cmp eax [ ebp + 0xc ]
je r-xdata
inc eax
cmp [ eax + ecx ] 0x0
jne r-xdata
sub_42b158
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
xor edi edi
mov ebx 0xe3
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] ebx
mov edx eax
cmp ax bx
ja r-xdata
add esi 0x2
sub [ ebp - 0x4 ] 0x1
je r-xdata
cmp ax bx
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edi [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
movzx eax ax
movzx edx dx
sub edx eax
je r-xdata
test dx dx
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ esi ]
cmp ax di
jb r-xdata
mov eax [ ecx * 8 + r--data ]
test edx edx
jns r-xdata
cmp dx ax
je r-xdata
lea edi [ ecx + 0x1 ]
mov [ ebp - 0xc ] edi
lea ebx [ ecx - 0x1 ]
mov [ ebp - 0x8 ] ebx
jmp r-xdata
movzx eax [ ecx + esi ]
cmp ax di
jb r-xdata
lea eax [ ebx + edi ]
mov [ ebp - 0x4 ] 0x55
cdq
sub eax edx
mov ecx eax
sar ecx 0x1
push 0x41
pop edi
mov [ ebp - 0x10 ] ecx
mov esi [ ecx * 8 + r--data ]
mov ecx [ ebp + 0x8 ]
push 0x5a
sub ecx esi
pop ebx
or eax 0xffffffff
jmp r-xdata
cmp edi ebx
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b214
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call sub_42b158
pop ecx
test eax eax
js r-xdata
cmp eax 0xe4
jae r-xdata
mov eax [ eax * 8 + r--data ]
pop ebp
retn
sub_42b240
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp ebx ecx
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_41cabf
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
push esi
push edi
lea edx [ ecx + eax ]
mov esi eax
mov edx ebx
cmp edi ebx
je r-xdata
jmp r-xdata
sub ebx eax
lea edx [ ecx + eax ]
cmp ebx ecx
ja r-xdata
test eax eax
je r-xdata
mov ecx [ ebp + 0x14 ]
push edi
push esi
call [ r--data ]
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jle r-xdata
mov esi edx
mov edi ecx
cmp esi ebx
ja r-xdata
pop edi
pop esi
sub edi ebx
mov eax [ ebp + 0x10 ]
add esi eax
cmp esi ebx
jbe r-xdata
mov edi esi
mov al [ edx ]
lea edx [ edx + 0x1 ]
mov cl [ edi + edx - 0x1 ]
mov [ edi + edx - 0x1 ] al
mov [ edx - 0x1 ] cl
sub esi 0x1
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
sub_42b2e0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
cmp edi eax
je r-xdata
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
pop esi
sub edi eax
lea ebx [ ebx ]
mov cl [ eax ]
lea eax [ eax + 0x1 ]
mov dl [ edi + eax - 0x1 ]
mov [ edi + eax - 0x1 ] cl
mov [ eax - 0x1 ] dl
sub esi 0x1
jne r-xdata
sub_42b320
mov edi edi
push ebp
mov ebp esp
sub esp 0x11c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ebp - 0x104 ] ecx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x100 ] esi
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xfc ] edi
test ecx ecx
jne r-xdata
test edi edi
je r-xdata
test edx edx
je r-xdata
call sub_425628
mov [ eax ] 0x16
call sub_425507
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_41cabf
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
mov [ ebp - 0x108 ] 0x0
cmp edx 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_41cabf
mov esp ebp
pop ebp
retn
dec edx
imul edx edi
push ebx
add edx ecx
shr ebx 0x1
imul ebx edi
add ebx ecx
push ebx
push ecx
mov ecx esi
mov [ ebp - 0x110 ] ebx
call [ r--data ]
call esi
add esp 0x8
test eax eax
jle r-xdata
push esi
push edi
push [ ebp - 0xf8 ]
push ecx
call sub_42b240
add esp 0x10
jmp r-xdata
push [ ebp - 0xf8 ]
mov ecx esi
push [ ebp - 0x104 ]
call [ r--data ]
call esi
add esp 0x8
test eax eax
jle r-xdata
push edi
push ebx
push [ ebp - 0x104 ]
call sub_42b2e0
add esp 0xc
mov eax [ ebp - 0x108 ]
sub eax 0x1
mov [ ebp - 0x108 ] eax
js r-xdata
push [ ebp - 0xf8 ]
mov ecx esi
push ebx
call [ r--data ]
call esi
add esp 0x8
test eax eax
jle r-xdata
push edi
push [ ebp - 0xf8 ]
push [ ebp - 0x104 ]
call sub_42b2e0
add esp 0xc
pop ebx
mov ecx [ ebp + eax * 4 - 0xf4 ]
mov edx [ ebp + eax * 4 - 0x7c ]
mov [ ebp - 0x104 ] ecx
jmp r-xdata
mov eax [ ebp - 0xf8 ]
mov edi eax
mov esi [ ebp - 0x104 ]
mov edx [ ebp - 0xfc ]
mov [ ebp - 0x114 ] eax
nop
push edi
push [ ebp - 0xf8 ]
push ebx
call sub_42b2e0
add esp 0xc
mov [ ebp - 0xf8 ] edx
mov edi [ ebp - 0x100 ]
add esi edx
mov [ ebp - 0x10c ] esi
cmp esi ebx
jae r-xdata
mov edi [ ebp - 0x114 ]
mov [ ebp - 0x10c ] esi
push ebx
push esi
mov ecx edi
call [ r--data ]
call edi
mov edx [ ebp - 0xfc ]
add esp 0x8
test eax eax
mov eax [ ebp - 0xf8 ]
jle r-xdata
mov eax [ ebp - 0xf8 ]
mov ecx [ ebp - 0x100 ]
push ebx
push esi
call [ r--data ]
call [ ebp - 0x100 ]
mov edx [ ebp - 0xfc ]
add esp 0x8
test eax eax
jle r-xdata
mov edx [ ebp - 0xfc ]
sub edi edx
cmp edi ebx
jbe r-xdata
add esi edx
cmp esi eax
ja r-xdata
cmp ebx esi
ja r-xdata
mov esi [ ebp - 0x10c ]
mov [ ebp - 0x114 ] edi
cmp edi esi
jb r-xdata
push ebx
push edi
mov ecx esi
call [ r--data ]
call esi
add esp 0x8
test eax eax
jg r-xdata
mov esi [ ebp - 0x100 ]
jmp r-xdata
add edi edx
cmp ebx edi
jae r-xdata
mov [ ebp - 0x118 ] edx
mov [ ebp - 0x11c ] edi
cmp esi edi
je r-xdata
mov edx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
lea esp [ esp ]
mov eax [ ebp - 0xf8 ]
cmp ebx edi
jne r-xdata
mov ebx esi
mov edx edi
mov esi [ ebp - 0x118 ]
sub ebx edi
mov esi [ ebp - 0x10c ]
push ebx
push edi
mov ecx esi
call [ r--data ]
call esi
mov edx [ ebp - 0xfc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x100 ]
push ebx
push edi
call [ r--data ]
call [ ebp - 0x100 ]
mov edx [ ebp - 0xfc ]
add esp 0x8
test eax eax
je r-xdata
cmp ebx esi
jbe r-xdata
mov ebx esi
mov [ ebp - 0x110 ] ebx
jmp r-xdata
mov al [ edx ]
lea edx [ edx + 0x1 ]
mov cl [ ebx + edx - 0x1 ]
mov [ ebx + edx - 0x1 ] al
mov [ edx - 0x1 ] cl
sub esi 0x1
jne r-xdata
mov esi [ ebp - 0x10c ]
mov ebx [ ebp - 0x110 ]
mov edx [ ebp - 0xfc ]
cmp esi edx
jae r-xdata
cmp ebx edi
jae r-xdata
sub edi edx
cmp edi [ ebp - 0x104 ]
jbe r-xdata
sub edi edx
cmp edi ebx
jbe r-xdata
cmp ebx edi
jb r-xdata
mov ecx [ ebp - 0x104 ]
mov esi [ ebp - 0x100 ]
cmp ecx edi
jae r-xdata
mov eax [ ebp - 0x108 ]
mov [ ebp + eax * 4 - 0xf4 ] esi
mov [ ebp + eax * 4 - 0x7c ] edx
inc eax
mov [ ebp - 0x108 ] eax
mov edi [ ebp - 0xfc ]
cmp esi edx
jae r-xdata
mov eax [ ebp - 0x108 ]
mov [ ebp + eax * 4 - 0xf4 ] ebx
mov [ ebp + eax * 4 - 0x7c ] edi
inc eax
mov [ ebp - 0x108 ] eax
mov edx [ ebp - 0xf8 ]
mov eax edi
mov ebx [ ebp - 0x104 ]
mov ecx edx
sub ecx esi
sub eax ebx
cmp eax ecx
jl r-xdata
mov edi [ ebp - 0xfc ]
mov edx edi
mov edi [ ebp - 0xfc ]
jmp r-xdata
mov esi [ ebp - 0x100 ]
jmp r-xdata
mov ecx esi
mov esi [ ebp - 0x100 ]
mov [ ebp - 0x104 ] ecx
jmp r-xdata
mov eax edx
xor edx edx
sub eax ecx
div edi
lea ebx [ eax + 0x1 ]
cmp ebx 0x8
ja r-xdata
sub_42b6ba
mov edi edi
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
call sub_425628
push 0x16
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
mov [ ecx ] dl
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebx
sub esi ecx
mov ebx eax
push edi
mov edi ecx
cmp edx 0xffffffff
jne r-xdata
mov [ ecx ] 0x0
mov al [ esi + edi ]
mov [ edi ] al
inc edi
test al al
je r-xdata
mov al [ esi + edi ]
mov [ edi ] al
inc edi
test al al
je r-xdata
test edx edx
mov edx [ ebp + 0x14 ]
jne r-xdata
sub ebx 0x1
je r-xdata
pop edi
test ebx ebx
pop ebx
jne r-xdata
sub ebx 0x1
jne r-xdata
mov [ edi ] 0x0
sub edx 0x1
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
jmp r-xdata
mov [ ecx ] 0x0
call sub_425628
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ ecx + eax - 0x1 ] 0x0
pop eax
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_425507
mov eax esi
sub_42b780
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_42b7d7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_425628
mov [ eax ] 0x16
call sub_425507
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] esi
jb r-xdata
call sub_425628
mov [ eax ] 0x16
call sub_425507
jmp r-xdata
mov esp ebp
pop ebp
retn
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_421c26
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
dec esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea ecx [ esi - 0x1 ]
pop esi
mov eax esi
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax esi
sub eax ecx
and eax 0x1
sub esi eax
movzx eax [ ecx ]
test [ eax + edx + 0x19 ] 0x4
jne r-xdata
dec ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
sub_42b873
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_425628
mov [ eax ] 0x16
call sub_425507
or eax 0xffffffff
pop ebp
retn
sub_42b8a6
push 0x8
push r--data
call sub_41cb60
cmp [ rw-data ] 0x1
jl r-xdata
call sub_41cba6
retn
mov eax [ ebp + 0x8 ]
test al 0x40
je r-xdata
and eax 0xffffffbf
mov [ ebp + 0x8 ] eax
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_42b92f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
not ecx
and cx [ ebp - 0x4 ]
and eax [ ebp + 0xc ]
or cx ax
mov [ ebp - 0x8 ] cx
fldcw [ ebp - 0x8 ]
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_42b95b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ r--data ]
fistp [ ebp - 0x4 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ r--data ]
fstp [ ebp - 0xc ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ r--data ]
fstp [ ebp - 0xc ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
mov esp ebp
pop ebp
retn
fldpi
fstp [ ebp - 0xc ]
fwait
sub_42b9c8
mov edi edi
push ebp
mov ebp esp
push esi
call sub_42cd09
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_42cd4c
mov [ esi + 0x4 ] eax
xor eax eax
pop esi
pop ebp
retn
sub_42b9e5
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push esi
mov esi [ ebp + 0x8 ]
push [ esi ]
call sub_42cdf4
push [ esi + 0x4 ]
call sub_42ce74
lea eax [ ebp - 0x8 ]
push eax
call sub_42b9c8
mov eax [ esi ]
add esp 0xc
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
inc eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
xor eax eax
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_42ba2e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
and [ ebp - 0x4 ] 0x0
push eax
call sub_42b9c8
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ecx ] edx
or edx 0x1f
push eax
mov [ ebp - 0x8 ] edx
call sub_42b9e5
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
call sub_4290d1
xor eax eax
mov esp ebp
pop ebp
retn
sub_42ba80
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ esp + 0x4 ]
call sub_42d5f5
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_42cf38
sub_42bac0
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_42d638
call sub_42bb18
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_42cf20
sub_42bb18
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
mov eax [ esp + 0xc ]
cmp [ esp ] 0x27f
je r-xdata
call sub_42d5dc
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
test eax 0x7ff00000
je r-xdata
fldcw [ r--data ]
cmp [ rw-data ] 0x0
jne r-xdata
and eax 0x80000000
je r-xdata
test eax 0xfffff
jne r-xdata
test eax 0x80000000
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
lea ecx [ r--data ]
mov edx 0x1b
call sub_42d757
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
jmp r-xdata
test eax 0x80000000
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
fldlg2
fxch st1
fyl2x
pop edx
retn
fldcw [ esp ]
lea ecx [ r--data ]
mov edx 0x1b
jmp r-xdata
jmp r-xdata
fstp st0
fld [ r--data ]
mov eax 0x2
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_42d757
pop edx
retn
sub_42bbd0
cmp [ rw-data ] 0x0
je r-xdata
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi 0xffff
push esi
push 0x1b3f
call sub_42b92f
fld [ ebp + 0x8 ]
mov ebx eax
pop ecx
pop ecx
movzx ecx [ ebp + 0xe ]
mov eax 0x7ff0
and ecx eax
push ecx
push ecx
fstp [ esp ]
cmp cx ax
jne r-xdata
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
call sub_42dd49
fst [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0x8
fucom st1
fnstsw ax
test ah 0x44
jpe r-xdata
call sub_42e529
dec eax
pop ecx
pop ecx
cmp eax 0x2
ja r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
test bl 0x20
jne r-xdata
push esi
fstp st1
push ebx
fstp st0
call sub_42b92f
fld [ ebp - 0x8 ]
pop ecx
pop ecx
jmp r-xdata
fld [ ebp + 0x8 ]
fld [ r--data ]
push ebx
sub esp 0x10
fadd st1
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0xc
push 0x8
jmp r-xdata
push esi
push ebx
call sub_42b92f
fld [ ebp + 0x8 ]
pop ecx
pop ecx
jmp r-xdata
jmp r-xdata
push ebx
sub esp 0x10
fxch st1
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0xc
push 0x10
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_42dd93
add esp 0x1c
movq xmm0 [ esp + 0x4 ]
movapd xmm2 [ r--data ]
movapd xmm1 xmm0
movapd xmm7 xmm0
psrlq xmm0 0x34
movd eax xmm0
andpd xmm0 [ r--data ]
psubd xmm2 xmm0
psrlq xmm1 xmm2
test eax 0x800
je r-xdata
movq xmm0 [ esp + 0x4 ]
psllq xmm1 xmm2
movapd xmm3 xmm0
cmppd xmm0 xmm1 0x6
cmp eax 0x3ff
jl r-xdata
cmp eax 0xbff
jl r-xdata
cmppd xmm3 [ r--data ] 0x6
andpd xmm3 [ r--data ]
movq [ esp + 0x4 ] xmm3
fld [ esp + 0x4 ]
retn
cmp eax 0x432
jg r-xdata
fld [ r--data ]
retn
psllq xmm1 xmm2
cmp eax 0xc32
jg r-xdata
ucomisd xmm7 xmm7
jpo r-xdata
andpd xmm0 [ r--data ]
addsd xmm1 xmm0
movq [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
retn
movq [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
retn
fld [ esp + 0x4 ]
retn
mov edx 0x3ec
sub esp 0x10
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x14
mov [ esp + 0x8 ] edx
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_42d793
add esp 0x10
sub_42bced
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
push ebx
imul ebx eax 0x30
push esi
mov eax [ ecx * 4 + rw-data ]
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] ecx
mov eax [ eax + ebx + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
add eax edi
mov [ ebp - 0x24 ] eax
call [ GetConsoleCP@IAT ]
mov esi [ ebp + 0x8 ]
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
cmp edi ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41cabf
mov esp ebp
pop ebp
retn
mov ch [ edi ]
xor eax eax
mov [ ebp - 0x18 ] ax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x1b ] ch
mov edx [ eax * 4 + rw-data ]
mov cl [ edx + ebx + 0x2d ]
test cl 0x4
je r-xdata
call sub_426a66
movzx ecx [ edi ]
mov edx 0x8000
test [ eax + ecx * 2 ] dx
je r-xdata
mov al [ edx + ebx + 0x2e ]
and cl 0xfb
mov [ ebp - 0xc ] al
lea eax [ ebp - 0xc ]
push 0x2
mov [ ebp - 0xb ] ch
mov [ edx + ebx + 0x2d ] cl
push eax
jmp r-xdata
push 0x1
push edi
cmp edi [ ebp - 0x24 ]
jae r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_42577c
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor ecx ecx
lea eax [ ebp - 0x14 ]
push ecx
push ecx
push 0x5
push eax
push 0x1
lea eax [ ebp - 0x18 ]
inc edi
push eax
push ecx
push [ ebp - 0x38 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x34 ] eax
test eax eax
je r-xdata
mov edx [ ebp - 0x2c ]
mov al [ edi ]
mov ecx [ edx * 4 + rw-data ]
mov [ ecx + ebx + 0x2e ] al
mov eax [ edx * 4 + rw-data ]
or [ eax + ebx + 0x2d ] 0x4
inc [ esi + 0x4 ]
jmp r-xdata
push 0x2
lea eax [ ebp - 0x18 ]
push edi
push eax
call sub_42577c
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push 0x0
lea ecx [ ebp - 0x20 ]
push ecx
push eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x28 ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc edi
jmp r-xdata
call [ GetLastError@IAT ]
mov [ esi ] eax
mov eax [ esi + 0x8 ]
sub eax [ ebp - 0x30 ]
add eax edi
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x20 ] eax
jb r-xdata
cmp [ ebp - 0x1b ] 0xa
jne r-xdata
cmp edi [ ebp - 0x24 ]
jb r-xdata
push 0xd
pop eax
push 0x0
mov [ ebp - 0x1c ] ax
lea eax [ ebp - 0x20 ]
push eax
push 0x1
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x28 ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
jmp r-xdata
cmp [ ebp - 0x20 ] 0x1
jb r-xdata
inc [ esi + 0x8 ]
inc [ esi + 0x4 ]
sub_42bea0
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0xc ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
add eax edi
mov [ ebp - 0x4 ] eax
cmp edi eax
jae r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx ebx [ edi ]
push ebx
call sub_42da64
pop ecx
cmp ax bx
jne r-xdata
call [ GetLastError@IAT ]
mov [ esi ] eax
add [ esi + 0x4 ] 0x2
cmp ebx 0xa
jne r-xdata
add edi 0x2
cmp edi [ ebp - 0x4 ]
jb r-xdata
push 0xd
pop ebx
push ebx
call sub_42da64
pop ecx
cmp ax bx
jne r-xdata
jmp r-xdata
inc [ esi + 0x4 ]
inc [ esi + 0x8 ]
sub_42bf0d
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_42b0e6
pop ecx
test eax eax
jne r-xdata
push edi
mov edi esi
and esi 0x3f
sar edi 0x6
imul esi esi 0x30
mov eax [ edi * 4 + rw-data ]
test [ eax + esi + 0x28 ] 0x80
je r-xdata
xor al al
jmp r-xdata
xor al al
jmp r-xdata
call sub_425b08
mov eax [ eax + 0x4c ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
pop edi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ edi * 4 + rw-data ]
push [ eax + esi + 0x18 ]
call [ GetConsoleMode@IAT ]
test eax eax
setne al
mov eax [ edi * 4 + rw-data ]
cmp [ eax + esi + 0x29 ] 0x0
jne r-xdata
sub_42bf83
mov edi edi
push ebp
mov ebp esp
mov eax 0x1410
call sub_41c240
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
push ebx
mov ebx [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx [ eax + ecx + 0x18 ]
mov eax [ ebp + 0x14 ]
and [ esi ] 0x0
add eax ebx
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
mov [ ebp - 0x1410 ] ecx
mov [ ebp - 0x1408 ] eax
jmp r-xdata
cmp ebx eax
jb r-xdata
lea edi [ ebp - 0x1404 ]
jmp r-xdata
lea eax [ ebp - 0x1404 ]
sub edi eax
lea eax [ ebp - 0x140c ]
push 0x0
push eax
push edi
lea eax [ ebp - 0x1404 ]
push eax
push ecx
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov al [ ebx ]
inc ebx
cmp al 0xa
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41cabf
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
mov [ esi ] eax
mov eax [ ebp - 0x140c ]
add [ esi + 0x4 ] eax
cmp eax edi
jb r-xdata
mov [ edi ] al
lea eax [ ebp - 0x5 ]
inc edi
cmp edi eax
mov eax [ ebp - 0x1408 ]
jb r-xdata
inc [ esi + 0x8 ]
mov [ edi ] 0xd
inc edi
mov eax [ ebp - 0x1408 ]
mov ecx [ ebp - 0x1410 ]
cmp ebx eax
jae r-xdata
sub_42c062
mov edi edi
push ebp
mov ebp esp
mov eax 0x1410
call sub_41c240
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
push ebx
mov ebx [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx [ eax + ecx + 0x18 ]
mov eax [ ebp + 0x14 ]
add eax ebx
mov [ ebp - 0x1410 ] ecx
xor edx edx
mov [ ebp - 0x1408 ] eax
mov [ esi ] edx
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
cmp ebx eax
jb r-xdata
lea edi [ ebp - 0x1404 ]
jmp r-xdata
lea eax [ ebp - 0x1404 ]
sub edi eax
lea eax [ ebp - 0x140c ]
push 0x0
push eax
and edi 0xfffffffe
lea eax [ ebp - 0x1404 ]
push edi
push eax
push ecx
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx eax [ ebx ]
add ebx 0x2
cmp eax 0xa
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41cabf
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
mov [ esi ] eax
mov eax [ ebp - 0x140c ]
add [ esi + 0x4 ] eax
cmp eax edi
jb r-xdata
mov [ edi ] ax
lea eax [ ebp - 0x6 ]
add edi 0x2
cmp edi eax
mov eax [ ebp - 0x1408 ]
jb r-xdata
add [ esi + 0x8 ] 0x2
push 0xd
pop edx
mov [ edi ] dx
add edi 0x2
mov eax [ ebp - 0x1408 ]
mov ecx [ ebp - 0x1410 ]
cmp ebx eax
jae r-xdata
sub_42c150
mov edi edi
push ebp
mov ebp esp
mov eax 0x1418
call sub_41c240
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
push ebx
push esi
mov eax [ eax * 4 + rw-data ]
xor ebx ebx
mov esi [ ebp + 0x8 ]
push edi
mov eax [ eax + ecx + 0x18 ]
mov ecx [ ebp + 0x10 ]
mov edi ecx
mov [ ebp - 0x1414 ] eax
mov eax [ ebp + 0x14 ]
add eax ecx
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x140c ] eax
mov [ esi + 0x8 ] ebx
cmp ecx eax
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41cabf
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x140c ]
lea eax [ ebp - 0x6b0 ]
push ebx
push ebx
push 0xd55
lea ecx [ ebp - 0x1408 ]
push ecx
lea ecx [ ebp - 0x6b0 ]
sub eax ecx
sar eax 0x1
push eax
mov eax ecx
push eax
push ebx
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1418 ] eax
test eax eax
je r-xdata
movzx ecx [ edi ]
add edi 0x2
cmp ecx 0xa
jne r-xdata
call [ GetLastError@IAT ]
mov [ esi ] eax
push 0x0
lea ecx [ ebp - 0x1410 ]
sub eax ebx
push ecx
push eax
lea eax [ ebp - 0x1408 ]
add eax ebx
push eax
push [ ebp - 0x1414 ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov [ eax ] cx
add eax 0x2
lea ecx [ ebp - 0x8 ]
cmp eax ecx
jb r-xdata
push 0xd
pop edx
mov [ eax ] dx
add eax 0x2
add ebx [ ebp - 0x1410 ]
mov eax [ ebp - 0x1418 ]
cmp ebx eax
jb r-xdata
cmp edi esi
jae r-xdata
mov eax edi
sub eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
cmp edi [ ebp - 0x140c ]
jae r-xdata
xor ebx ebx
jmp r-xdata
sub_42c27d
push 0x14
push r--data
call sub_41cb60
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_425615
and [ eax ] 0x0
call sub_425628
mov [ eax ] 0x9
jmp r-xdata
call sub_425615
and [ eax ] 0x0
call sub_425628
mov [ eax ] 0x9
call sub_425507
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x6
mov eax esi
and eax 0x3f
imul ecx eax 0x30
mov [ ebp - 0x20 ] ecx
mov eax [ ebx * 4 + rw-data ]
movzx eax [ eax + ecx + 0x28 ]
and eax 0x1
je r-xdata
push esi
call sub_4287b0
pop ecx
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
test [ eax + ecx + 0x28 ] 0x1
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_42c368
add esp 0xc
mov edi eax
mov [ ebp - 0x1c ] edi
call sub_425628
mov [ eax ] 0x9
call sub_425615
and [ eax ] 0x0
jmp r-xdata
call sub_41cba6
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42c33f
mov eax edi
jmp r-xdata
sub_42c368
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x30 ] edi
test ecx ecx
jne r-xdata
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
mov eax esi
mov ebx esi
sar ebx 0x6
and eax 0x3f
imul edx eax 0x30
mov [ ebp - 0x1c ] ebx
mov eax [ ebx * 4 + rw-data ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x18 ] edx
mov bl [ eax + edx + 0x29 ]
cmp bl 0x2
je r-xdata
call sub_425615
and [ eax ] edi
call sub_425628
mov [ eax ] 0x16
call sub_425507
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_41cabf
mov esp ebp
pop ebp
retn
mov eax ecx
not eax
test al 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x2c ]
call sub_425615
and [ eax ] 0x0
call sub_425628
mov [ eax ] 0x16
call sub_425507
jmp r-xdata
test [ eax + edx + 0x28 ] 0x20
je r-xdata
push esi
call sub_42bf0d
pop ecx
test al al
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_42c5f2
add esp 0x10
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x18 ]
test [ ecx + eax + 0x28 ] 0x80
je r-xdata
test bl bl
je r-xdata
pop ebx
mov eax [ ecx + eax + 0x18 ]
xor ecx ecx
push ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
lea ecx [ ebp - 0x10 ]
push ecx
push [ ebp - 0x8 ]
push edi
push eax
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
movsx eax bl
sub eax 0x0
je r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push esi
push eax
call sub_42bced
dec bl
cmp bl 0x1
ja r-xdata
lea esi [ ebp - 0x14 ]
call [ GetLastError@IAT ]
mov [ ebp - 0x14 ] eax
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push esi
push eax
call sub_42bf83
jmp r-xdata
sub eax 0x1
je r-xdata
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
mov eax [ eax * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x40
je r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push eax
call sub_42bea0
add esp 0xc
sub eax [ ebp - 0x20 ]
mov eax [ ebp - 0x28 ]
test eax eax
je r-xdata
add esp 0x10
jmp r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push esi
push eax
call sub_42c150
jmp r-xdata
sub eax 0x1
jne r-xdata
lea edi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x24 ]
test eax eax
jne r-xdata
call sub_425628
mov [ eax ] 0x1c
call sub_425615
and [ eax ] 0x0
cmp [ edi ] 0x1a
jne r-xdata
mov edi [ ebp - 0x30 ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push esi
push eax
call sub_42c062
jmp r-xdata
xor eax eax
jmp r-xdata
push eax
call sub_4255f2
pop ecx
jmp r-xdata
call sub_425628
mov [ eax ] 0x9
call sub_425615
mov [ eax ] esi
jmp r-xdata
sub_42c574
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_428887
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ SetFilePointerEx@IAT ]
test eax eax
jne r-xdata
call sub_425628
mov [ eax ] 0x9
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
and eax edx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_4255f2
pop ecx
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax edi
mov edx edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx esi
and esi 0x3f
sar ecx 0x6
imul esi esi 0x30
mov ecx [ ecx * 4 + rw-data ]
and [ ecx + esi + 0x28 ] 0xfd
sub_42c60d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
push edi
or edi 0xffffffff
shr eax 0xd
test al 0x1
je r-xdata
call sub_425628
mov [ eax ] 0x16
call sub_425507
or eax 0xffffffff
jmp r-xdata
push esi
call sub_426a2b
pop ecx
mov eax edi
pop edi
push esi
call sub_42af1a
push esi
mov edi eax
call sub_42b0a8
push esi
call sub_4266c6
push eax
call sub_42c94b
add esp 0x10
test eax eax
jns r-xdata
pop esi
pop ebp
retn
cmp [ esi + 0x1c ] 0x0
je r-xdata
or edi 0xffffffff
jmp r-xdata
push [ esi + 0x1c ]
call sub_4251ac
and [ esi + 0x1c ] 0x0
pop ecx
sub_42c683
push 0x10
push r--data
call sub_41cb60
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x20 ] esi
xor eax eax
test esi esi
setne al
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
shr eax 0xc
push esi
test al 0x1
je r-xdata
call sub_425628
mov [ eax ] 0x16
call sub_425507
and [ ebp - 0x1c ] 0x0
call sub_426800
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_42c60d
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42c6f9
mov eax esi
call sub_426a2b
pop ecx
jmp r-xdata
call sub_41cba6
retn
or eax 0xffffffff
jmp r-xdata
sub_42c703
push 0xc
push r--data
call sub_41cb60
xor esi esi
mov [ ebp - 0x1c ] esi
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4287b0
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov edi [ eax ]
mov edx edi
sar edx 0x6
mov eax edi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
call sub_425628
mov [ eax ] 0x9
or esi 0xffffffff
push edi
call sub_428887
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42c78f
mov eax esi
call sub_41cba6
retn 0xc
call sub_425615
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
sub_42c79b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_42c703
mov esp ebp
pop ebp
retn
sub_42c7c3
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_425628
mov [ eax ] 0x9
jmp r-xdata
call sub_425628
mov [ eax ] 0x9
call sub_425507
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax esi
mov edx esi
and eax 0x3f
sar edx 0x6
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push esi
call sub_42c79b
pop ecx
pop ecx
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_42c840
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_42c8a1
push 0xc
push r--data
call sub_41cb60
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4287b0
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov esi [ eax ]
mov edx esi
sar edx 0x6
mov eax esi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
call sub_425628
mov [ eax ] 0x9
or esi 0xffffffff
push esi
call sub_42c9ca
pop ecx
mov esi eax
jmp r-xdata
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42c917
mov eax esi
call sub_41cba6
retn 0xc
sub_42c923
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_42c8a1
mov esp ebp
pop ebp
retn
sub_42c94b
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_425615
and [ eax ] 0x0
call sub_425628
mov [ eax ] 0x9
jmp r-xdata
call sub_425615
and [ eax ] 0x0
call sub_425628
mov [ eax ] 0x9
call sub_425507
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax esi
mov edx esi
and eax 0x3f
sar edx 0x6
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push esi
call sub_42c923
pop ecx
pop ecx
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_42c9ca
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_428887
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ rw-data ]
cmp edi 0x1
jne r-xdata
xor esi esi
jmp r-xdata
cmp edi 0x2
jne r-xdata
test [ eax + 0x88 ] 0x1
jne r-xdata
push edi
call sub_4287f6
pop ecx
mov ecx edi
and edi 0x3f
sar ecx 0x6
imul edx edi 0x30
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + edx + 0x28 ] 0x0
test esi esi
je r-xdata
push edi
call sub_428887
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x58 ] 0x1
je r-xdata
push 0x2
call sub_428887
push 0x1
mov esi eax
call sub_428887
pop ecx
pop ecx
cmp eax esi
je r-xdata
xor eax eax
push esi
call sub_4255f2
pop ecx
or eax 0xffffffff
jmp r-xdata
call [ GetLastError@IAT ]
mov esi eax
pop edi
pop esi
pop ebp
retn
sub_42ca66
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx 0x7e80
je r-xdata
mov eax ecx
pop ebp
retn
test dl dl
jns r-xdata
push edi
mov edi 0x200
test edi edx
je r-xdata
push 0x10
pop ecx
test edx 0x400
je r-xdata
or ecx 0x8
test edx 0x800
je r-xdata
or ecx 0x4
test edx 0x1000
je r-xdata
or ecx 0x2
push esi
mov esi 0x6000
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x1
test edx 0x4000
je r-xdata
or ecx 0x300
jmp r-xdata
test edx 0x2000
je r-xdata
or ecx 0x100
jmp r-xdata
pop edi
or ecx edi
sub_42cae3
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx 0xc3d
je r-xdata
mov eax ecx
pop ebp
retn
test dl 0x1
je r-xdata
test dl 0x4
je r-xdata
push 0x10
pop ecx
test dl 0x8
je r-xdata
or ecx 0x8
test dl 0x10
je r-xdata
or ecx 0x4
test dl 0x20
je r-xdata
or ecx 0x2
push esi
mov esi 0xc00
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x1
test edx 0x800
je r-xdata
or ecx 0x300
jmp r-xdata
test edx 0x400
je r-xdata
or ecx 0x100
jmp r-xdata
or ecx 0x200
sub_42cb56
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx 0x31f
je r-xdata
mov eax ecx
pop ebp
retn
test dl 0x10
je r-xdata
test dl 0x8
je r-xdata
inc ecx
test dl 0x4
je r-xdata
or ecx 0x4
test dl 0x2
je r-xdata
or ecx 0x8
test dl 0x1
je r-xdata
or ecx 0x10
push esi
mov esi 0x300
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x20
test edx 0x200
je r-xdata
or ecx 0xc00
jmp r-xdata
test edx 0x100
je r-xdata
or ecx 0x400
jmp r-xdata
or ecx 0x800
sub_42cbc7
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx 0x31f
je r-xdata
mov eax ecx
pop ebp
retn
test dl 0x10
je r-xdata
push edi
mov edi 0x200
test dl 0x8
je r-xdata
mov ecx 0x80
test dl 0x4
je r-xdata
or ecx edi
test dl 0x2
je r-xdata
or ecx 0x400
test dl 0x1
je r-xdata
or ecx 0x800
push esi
mov esi 0x300
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x1000
test edi edx
je r-xdata
or ecx 0x6000
jmp r-xdata
test edx 0x100
je r-xdata
or ecx 0x2000
jmp r-xdata
pop edi
or ecx 0x4000
sub_42cc47
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test dl 0x1f
je r-xdata
mov eax ecx
pop ebp
retn
push esi
mov esi 0x10000010
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
mov esi 0x8000008
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
inc ecx
mov esi 0x4000004
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
or ecx 0x4
mov esi 0x2000002
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x8
mov eax 0x1000001
and edx eax
cmp edx eax
jne r-xdata
or ecx 0x10
or ecx 0x20
sub_42cca8
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test dl 0x1f
je r-xdata
mov eax ecx
pop ebp
retn
push esi
mov esi 0x100010
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
mov esi 0x80008
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
inc ecx
mov esi 0x40004
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
or ecx 0x4
mov esi 0x20002
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x8
mov eax 0x10001
and edx eax
cmp edx eax
jne r-xdata
or ecx 0x10
or ecx 0x20
sub_42cd09
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
xor eax eax
and [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ax
fnstcw [ ebp - 0x4 ]
cmp [ rw-data ] 0x1
jl r-xdata
movzx eax [ ebp - 0x4 ]
push esi
push eax
call sub_42cae3
push [ ebp - 0x8 ]
mov esi eax
call sub_42ca66
pop ecx
or eax esi
pop ecx
and eax 0x31f
pop esi
mov esp ebp
pop ebp
retn
stmxcsr [ ebp - 0x8 ]
sub_42cd4c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
xor eax eax
xor ecx ecx
mov [ ebp - 0x4 ] ax
mov [ ebp - 0x8 ] ecx
fnstsw [ ebp - 0x4 ]
cmp [ rw-data ] 0x1
jl r-xdata
movzx edx [ ebp - 0x4 ]
mov eax ecx
test dl 0x3d
je r-xdata
stmxcsr [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
test dl 0x3d
je r-xdata
test dl 0x1
je r-xdata
or eax ecx
and eax 0x1f1f001f
mov esp ebp
pop ebp
retn
test dl 0x1
je r-xdata
test dl 0x4
je r-xdata
mov eax 0x100010
test dl 0x4
je r-xdata
mov ecx 0x10000010
test dl 0x8
je r-xdata
or eax 0x80008
test dl 0x8
je r-xdata
or ecx 0x8000008
test dl 0x10
je r-xdata
or eax 0x40004
test dl 0x10
je r-xdata
or ecx 0x4000004
test dl 0x20
je r-xdata
or eax 0x20002
test dl 0x20
je r-xdata
or ecx 0x2000002
or eax 0x10001
or ecx 0x1000001
sub_42cdf4
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
fnstenv [ ebp - 0x20 ]
mov ebx 0x31f
push ebx
call sub_42cb56
push [ ebp + 0x8 ]
mov esi eax
not esi
and esi [ ebp - 0x20 ]
call sub_42cb56
pop ecx
or esi eax
pop ecx
mov [ ebp - 0x20 ] esi
fldenv [ ebp - 0x20 ]
cmp [ rw-data ] 0x1
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] edi
stmxcsr [ ebp - 0x4 ]
push ebx
call sub_42cbc7
push [ ebp + 0x8 ]
mov esi eax
not esi
and esi [ ebp - 0x4 ]
call sub_42cbc7
pop ecx
or esi eax
pop ecx
mov [ ebp - 0x4 ] esi
ldmxcsr [ ebp - 0x4 ]
sub_42ce74
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
fnstenv [ ebp - 0x20 ]
mov ebx 0x1f1f001f
push ebx
call sub_42cca8
push [ ebp + 0x8 ]
mov esi eax
not esi
and esi [ ebp - 0x1c ]
call sub_42cca8
pop ecx
or esi eax
pop ecx
mov [ ebp - 0x1c ] esi
fldenv [ ebp - 0x20 ]
cmp [ rw-data ] 0x1
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] edi
stmxcsr [ ebp - 0x4 ]
push ebx
call sub_42cc47
push [ ebp + 0x8 ]
mov esi eax
not esi
and esi [ ebp - 0x4 ]
call sub_42cc47
pop ecx
or esi eax
pop ecx
mov [ ebp - 0x4 ] esi
ldmxcsr [ ebp - 0x4 ]
sub_42cf3e
mov edx 0x0
movlpd xmm0 [ esp + 0x4 ]
movapd xmm1 [ r--data ]
cmpsd xmm1 xmm0 0x0
pextrw eax xmm1 0x0
cmp eax 0x0
ja r-xdata
sub ecx 0x3fe
add ecx edx
cvtsi2sd xmm6 ecx
unpcklpd xmm6 xmm6
shl ecx 0xa
add eax ecx
mov ecx 0x10
mov edx 0x0
cmp eax 0x0
cmove edx ecx
movapd xmm1 [ r--data ]
movapd xmm3 xmm0
movapd xmm2 [ r--data ]
mulpd xmm1 xmm0
mulpd xmm3 xmm3
addpd xmm1 xmm2
movapd xmm2 [ r--data ]
mulsd xmm3 xmm3
movapd xmm5 [ r--data ]
mulpd xmm6 xmm5
movapd xmm5 [ edx + r--data ]
andpd xmm4 xmm5
addpd xmm7 xmm6
addpd xmm7 xmm4
mulpd xmm1 xmm0
mulsd xmm3 xmm0
addpd xmm1 xmm2
movapd xmm2 [ r--data ]
mulpd xmm2 xmm0
movapd xmm6 xmm7
unpckhpd xmm6 xmm6
mulpd xmm1 xmm3
sub esp 0x10
movapd xmm0 xmm1
addpd xmm1 xmm2
unpckhpd xmm0 xmm0
addsd xmm0 xmm1
addsd xmm0 xmm6
addsd xmm0 xmm7
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
movlpd xmm2 [ r--data ]
divsd xmm2 xmm0
movlpd xmm1 [ r--data ]
mov edx 0x8
jmp r-xdata
cmp ecx 0xffffffff
je r-xdata
sub esp 0x1c
movlpd [ esp + 0x10 ] xmm1
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x10
mov [ esp + 0x8 ] edx
add edx 0x10
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_42d793
fld [ esp + 0x10 ]
add esp 0x1c
retn
movlpd xmm1 [ r--data ]
mulsd xmm0 xmm1
mov edx 0xffffffcc
jmp r-xdata
cmp ecx 0x7fe
ja r-xdata
movapd xmm5 xmm0
unpcklpd xmm0 xmm0
psrlq xmm5 0x34
pextrw ecx xmm5 0x0
movapd xmm1 [ r--data ]
movapd xmm2 [ r--data ]
movapd xmm3 [ r--data ]
movapd xmm4 [ r--data ]
movapd xmm6 [ r--data ]
andpd xmm0 xmm1
orpd xmm0 xmm3
addpd xmm4 xmm0
pextrw eax xmm4 0x0
and eax 0x7f0
movapd xmm4 [ eax + r--data ]
movapd xmm7 [ eax + r--data ]
andpd xmm6 xmm0
subpd xmm0 xmm6
mulpd xmm6 xmm4
subpd xmm6 xmm2
addsd xmm7 xmm6
mulpd xmm0 xmm4
movapd xmm4 xmm0
addpd xmm0 xmm6
and ecx 0xfff
sub ecx 0x1
cmp ecx 0x7fd
ja r-xdata
add ecx 0x1
and ecx 0x7ff
cmp ecx 0x7ff
jae r-xdata
movlpd xmm0 [ esp + 0x4 ]
movapd xmm1 [ r--data ]
movapd xmm2 [ r--data ]
andpd xmm0 xmm1
orpd xmm0 xmm2
cmpsd xmm2 xmm0 0x0
pextrw eax xmm2 0x0
cmp eax 0x0
je r-xdata
movlpd xmm2 [ esp + 0x4 ]
movlpd xmm0 [ esp + 0x4 ]
movd eax xmm2
psrlq xmm2 0x20
movd ecx xmm2
and ecx 0xfffff
or eax ecx
cmp eax 0x0
je r-xdata
xorpd xmm1 xmm1
divsd xmm1 xmm1
mov edx 0x9
mov edx 0x3e9
jmp r-xdata
fld [ r--data ]
retn
mov edx 0x3e9
jmp r-xdata
sub_42d1ab
jmp r-xdata
mov [ ebp - 0x90 ] 0xfe
or ch ch
jne r-xdata
call sub_42d341
or eax eax
je r-xdata
fxch st1
jmp sub_42d563
xor ch ch
cmp eax 0x2
je r-xdata
call sub_42d2fe
fld1
faddp st1
test [ ebp - 0x9f ] 0x1
je r-xdata
fxch st1
fabs
jmp r-xdata
not ch
test dl 0x40
jne r-xdata
fld1
fdivrp st1
fyl2x
jmp r-xdata
or ch ch
je r-xdata
fscale
jmp sub_42d4a8
fchs
sub_42d1c1
mov [ ebp - 0x90 ] 0xfe
xor ch ch
fldl2e
fmulp st1
call sub_42d2fe
fld1
faddp st1
test [ ebp - 0x9f ] 0x1
je r-xdata
test dl 0x40
jne r-xdata
fld1
fdivrp st1
or ch ch
je r-xdata
fscale
jmp sub_42d4a8
fchs
sub_42d26d
call sub_42d341
fstp st0
fstp st0
or cl cl
jne r-xdata
mov [ ebp - 0x90 ] 0x2
fld [ r--data ]
cmp eax 0x1
jne r-xdata
fldz
cmp eax 0x1
jne r-xdata
retn
or ch ch
je r-xdata
or ch ch
je r-xdata
fchs
jmp r-xdata
fchs
sub_42d2fe
fld st0
fabs
fld [ r--data ]
fcompp
fwait
fnstsw [ ebp - 0xa0 ]
fwait
test [ ebp - 0x9f ] 0x41
jne r-xdata
pop eax
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fwait
test [ ebp - 0x9f ] 0x1
jne r-xdata
fld st0
frndint
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fwait
mov dl [ ebp - 0x9f ]
fxch st1
fsub st1
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fabs
f2xm1
retn
mov [ ebp - 0x90 ] 0x4
jmp sub_42d4b6
fstp st0
fld [ r--data ]
or ch ch
je r-xdata
retn
fchs
sub_42d341
fld st0
frndint
fcomp st1
fwait
fnstsw ax
sahf
jne r-xdata
mov eax 0x0
jmp r-xdata
fld st0
fmul [ r--data ]
fld st0
frndint
fcompp
fwait
fnstsw ax
sahf
je r-xdata
retn
mov eax 0x2
jmp r-xdata
mov eax 0x1
sub_42d375
push esi
sub esp 0x74
mov esi esp
push esi
sub esp 0x8
fstp [ esp ]
sub esp 0x8
fstp [ esp ]
fwait
fnsave [ esi + 0x8 ]
call sub_42db13
add esp 0x14
frstor [ esi + 0x8 ]
fld [ esi ]
add esp 0x74
pop esi
test eax eax
je r-xdata
retn
jmp sub_42d576
sub_42d3b0
cmp [ edx + 0xe ] 0x5
jne r-xdata
mov bx 0x133f
mov bx [ ebp - 0xa4 ]
or bh 0x2
and bh 0xfe
mov bl 0x3f
jmp r-xdata
mov [ ebp - 0xa2 ] bx
fldcw [ ebp - 0xa2 ]
mov ebx r--data
fxam
mov [ ebp - 0x94 ] edx
fwait
fnstsw [ ebp - 0xa0 ]
mov [ ebp - 0x90 ] 0x0
fwait
mov cl [ ebp - 0x9f ]
shl cl 0x1
sar cl 0x1
rol cl 0x1
mov al cl
and al 0xf
xlat
movsx eax al
and ecx 0x404
mov ebx edx
add ebx eax
add ebx 0x10
jmp [ ebx ]
sub_42d524
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x1
fxch st1
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x0
jmp r-xdata
faddp st1
retn
sub_42d5f5
mov eax [ edx + 0x4 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ edx + 0x4 ]
sub esp 0xa
or eax 0x7fff0000
mov [ esp + 0x6 ] eax
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
shld eax ecx 0xb
shl ecx 0xb
mov [ esp + 0x4 ] eax
mov [ esp ] ecx
fld [ esp ]
add esp 0xa
test eax 0x0
mov eax [ edx + 0x4 ]
retn
fld [ edx ]
retn
sub_42d685
sub esp 0x8
fst [ esp ]
mov eax [ esp + 0x4 ]
add esp 0x8
and eax 0x7ff00000
jmp r-xdata
cmp eax 0x7ff00000
je r-xdata
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
mov eax 0x3
jbe r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
cmp edx 0x1d
je r-xdata
fmul [ r--data ]
jmp r-xdata
pop edx
retn
and ax 0x20
jne r-xdata
call sub_42d740
pop edx
retn
call sub_42d757
pop edx
retn
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
sub_42d740
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_42dc3e
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_42d757
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_42dc3e
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_42d793
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
push esi
push edi
je r-xdata
mov edi sub_424e6a
push [ rw-data ]
call [ DecodePointer@IAT ]
mov edi eax
jmp r-xdata
sub eax 0x1b
je r-xdata
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax 0x1a
jg r-xdata
mov [ ebp - 0x24 ] 0x2
sub eax 0x1
je r-xdata
fld1
cmp eax 0xe
jg r-xdata
fld [ ebp - 0xc ]
fstp [ esi ]
call sub_425628
mov [ eax ] 0x22
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x15
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_41cabf
mov esp ebp
pop ebp
retn
sub eax 0xf
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx edi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x24 ] 0x1
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x1c ]
fld [ eax ]
lea eax [ ebp - 0x24 ]
fstp [ ebp - 0x14 ]
fld [ esi ]
push eax
fstp [ ebp - 0xc ]
call [ r--data ]
call edi
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x24 ] 0x3
mov [ ebp - 0x20 ] r--data
jmp r-xdata
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_425628
mov [ eax ] 0x21
jmp r-xdata
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx edi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x24 ] 0x4
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x1c ]
fld [ eax ]
lea eax [ ebp - 0x24 ]
fstp [ ebp - 0x14 ]
fld [ esi ]
push eax
fstp [ ebp - 0xc ]
call [ r--data ]
call edi
pop ecx
jmp r-xdata
mov [ ebp - 0x24 ] 0x3
jmp r-xdata
sub eax 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx edi
mov esi [ ebp + 0x10 ]
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x1c ]
fld [ eax ]
lea eax [ ebp - 0x24 ]
fstp [ ebp - 0x14 ]
fld [ esi ]
push eax
fstp [ ebp - 0xc ]
call [ r--data ]
call edi
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x1
je r-xdata
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x3ab
je r-xdata
mov [ ebp - 0x20 ] r--data
mov [ ebp - 0x20 ] r--data
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebp + 0x8 ]
fld [ eax ]
jmp r-xdata
sub eax 0x1
jne r-xdata
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x1
jne r-xdata
mov eax [ ebp + 0x10 ]
fstp [ eax ]
jmp r-xdata
mov [ ebp - 0x20 ] r--data
sub_42da64
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
call sub_42e587
mov eax [ rw-data ]
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
jmp r-xdata
mov ax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_42daa9
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_42e5bd
pop ecx
pop ecx
test al 0x90
jne r-xdata
xor eax eax
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_42dd49
fld [ ebp + 0x8 ]
fucom st1
fnstsw ax
pop ecx
pop ecx
fstp st1
test ah 0x44
jpe r-xdata
fstp st0
fmul [ r--data ]
push ecx
push ecx
fst [ ebp - 0x8 ]
fstp [ esp ]
call sub_42dd49
fld [ ebp - 0x8 ]
fucompp
fnstsw ax
pop ecx
pop ecx
test ah 0x44
jpe r-xdata
xor eax eax
inc eax
jmp r-xdata
push 0x2
pop eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_42db13
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
mov ecx 0x7ff00000
fabs
mov eax 0xfff00000
cmp [ ebp + 0x14 ] ecx
jne r-xdata
cmp [ ebp + 0x14 ] eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
fstp st0
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
fld1
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
cmp [ ebp + 0xc ] eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
fld1
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
fcom st1
fnstsw ax
fstp st1
test ah 0x41
mov eax [ ebp + 0x18 ]
jne r-xdata
fstp st1
fstp st0
fld [ r--data ]
jmp r-xdata
xor eax eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
fldz
fld [ ebp + 0x10 ]
fcom st1
fnstsw ax
test ah 0x41
je r-xdata
fcom st1
fnstsw ax
fstp st1
test ah 0x41
mov eax [ ebp + 0x18 ]
jne r-xdata
fstp st1
fstp st0
fldz
jmp r-xdata
fstp [ eax ]
fstp st0
fldz
jmp r-xdata
mov eax [ ebp + 0x18 ]
fld [ ebp + 0x10 ]
push ecx
push ecx
fstp [ esp ]
call sub_42daa9
fldz
fld [ ebp + 0x10 ]
pop ecx
pop ecx
fcom st1
mov ecx eax
fnstsw ax
test ah 0x41
jne r-xdata
fcomp st1
fnstsw ax
test ah 0x5
mov eax [ ebp + 0x18 ]
jpo r-xdata
fstp st0
fld [ r--data ]
jmp r-xdata
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fld [ r--data ]
cmp ecx 0x1
jne r-xdata
fstp st0
fld1
jmp r-xdata
fstp st0
fld1
cmp ecx 0x1
jne r-xdata
fchs
jmp r-xdata
fstp st0
fld [ r--data ]
jmp r-xdata
sub_42dc3e
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x10 ]
push esi
mov esi [ ebx + 0xc ]
push edi
movzx ecx [ eax ]
mov [ ebp - 0x84 ] ecx
mov eax [ esi ]
sub eax 0x1
je r-xdata
push 0x8
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0x84 ]
mov ecx [ ebx + 0x8 ]
cmp ecx 0x10
je r-xdata
push 0x4
jmp r-xdata
sub eax 0x1
je r-xdata
push [ esi ]
call sub_42e355
pop ecx
call sub_424e3d
test al al
je r-xdata
mov eax [ ebp - 0x40 ]
fld [ esi + 0x10 ]
and eax 0xffffffe3
or eax 0x3
fstp [ ebp - 0x50 ]
mov [ ebp - 0x40 ] eax
cmp ecx 0x16
je r-xdata
pop edi
push ecx
lea eax [ esi + 0x18 ]
push eax
push edi
call sub_42de61
add esp 0xc
test eax eax
jne r-xdata
push 0x11
jmp r-xdata
sub eax 0x1
je r-xdata
push esi
call sub_424e6a
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x1d
je r-xdata
push 0x12
jmp r-xdata
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_41cabf
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
and [ ebp - 0x40 ] 0xfffffffe
jmp r-xdata
sub eax 0x3
jne r-xdata
lea eax [ esi + 0x18 ]
push eax
lea eax [ esi + 0x8 ]
push eax
push ecx
push edi
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_42e041
add esp 0x18
push 0xffff
push ecx
call sub_42b92f
cmp [ esi ] 0x8
pop ecx
pop ecx
je r-xdata
push 0x10
jmp r-xdata
sub_42dd5f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test al 0x20
je r-xdata
test al 0x8
je r-xdata
push 0x5
jmp r-xdata
test al 0x4
je r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
test al 0x1
je r-xdata
push 0x2
jmp r-xdata
movzx eax al
and eax 0x2
add eax eax
pop ebp
retn
push 0x3
sub_42dd93
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebx + 0x20 ]
lea eax [ ebx + 0x18 ]
push edi
push esi
push eax
push [ ebx + 0x8 ]
call sub_42de61
add esp 0xc
test eax eax
jne r-xdata
push [ ebx + 0x8 ]
call sub_42dd5f
pop ecx
mov edi eax
call sub_424e3d
test al al
je r-xdata
and [ ebp - 0x40 ] 0xfffffffe
push eax
lea eax [ ebx + 0x18 ]
push eax
lea eax [ ebx + 0x10 ]
push eax
push [ ebx + 0xc ]
lea eax [ ebx + 0x20 ]
push [ ebx + 0x8 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_42e064
mov esi [ ebx + 0x20 ]
add esp 0x1c
push edi
call sub_42e355
mov [ esp ] 0xffff
push esi
call sub_42b92f
fld [ ebx + 0x18 ]
pop ecx
pop ecx
test edi edi
je r-xdata
fld [ ebx + 0x18 ]
push esi
sub esp 0x18
fstp [ esp + 0x10 ]
fldz
fstp [ esp + 0x8 ]
fld [ ebx + 0x10 ]
fstp [ esp ]
push [ ebx + 0xc ]
push edi
call sub_42e384
add esp 0x24
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_41cabf
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
sub_42de61
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ebx
and esi 0x1f
test bl 0x8
je r-xdata
mov eax ebx
and eax [ ebp + 0x10 ]
test al 0x4
je r-xdata
test [ ebp + 0x10 ] 0x1
je r-xdata
test bl 0x1
je r-xdata
push 0x4
call sub_42b95b
pop ecx
and esi 0xfffffffb
jmp r-xdata
push 0x1
call sub_42b95b
pop ecx
and esi 0xfffffff7
jmp r-xdata
test bl 0x2
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
test bl 0x10
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0x8
call sub_42b95b
mov eax [ ebp + 0x10 ]
pop ecx
mov ecx 0xc00
and eax ecx
je r-xdata
xor eax eax
test esi esi
pop esi
sete al
pop ebx
mov esp ebp
pop ebp
retn
test [ ebp + 0x10 ] 0x20
je r-xdata
push edi
xor edi edi
test bl 0x10
je r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x400
je r-xdata
push 0x20
call sub_42b95b
pop ecx
and esi 0xffffffef
mov ecx [ ebp + 0xc ]
fld [ ecx ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
inc edi
fld [ r--data ]
fld [ r--data ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x800
je r-xdata
xor edi edi
inc edi
fld [ ecx ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_42e426
mov eax [ ebp - 0x4 ]
add esp 0xc
add eax 0xfffffa00
mov [ ebp - 0x4 ] eax
fst [ ebp - 0x10 ]
fldz
cmp eax 0xfffffbce
jge r-xdata
fstp [ ecx ]
fld [ r--data ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpo r-xdata
cmp eax ecx
jne r-xdata
and esi 0xfffffffd
push 0x10
call sub_42b95b
pop ecx
fcompp
xor edx edx
fnstsw ax
test ah 0x41
jne r-xdata
xor edi edi
fmulp st1
inc edi
jmp r-xdata
fld [ r--data ]
jmp r-xdata
and esi 0xfffffffe
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
fld [ r--data ]
test ah 0x5
jpo r-xdata
mov eax [ ebp - 0xa ]
mov ecx 0xfffffc03
and eax 0xf
or eax 0x10
mov [ ebp - 0xa ] ax
mov eax [ ebp - 0x4 ]
cmp eax ecx
jge r-xdata
inc edx
mov eax [ ebp + 0xc ]
fstp [ eax ]
jmp r-xdata
fchs
jmp r-xdata
fld [ ebp - 0x10 ]
test edx edx
je r-xdata
sub ecx eax
mov eax [ ebp - 0x10 ]
test edi edi
pop edi
je r-xdata
fchs
shr eax 0x1
test [ ebp - 0xc ] 0x1
mov [ ebp - 0x10 ] eax
je r-xdata
test edi edi
jne r-xdata
shr [ ebp - 0xc ] 0x1
sub ecx 0x1
jne r-xdata
or eax 0x80000000
mov [ ebp - 0x10 ] eax
inc edi
test [ ebp - 0x10 ] 0x1
je r-xdata
sub_42e041
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42e064
add esp 0x1c
pop ebp
retn
sub_42e064
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
xor ebx ebx
inc ebx
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push edi
mov edi 0xc000000d
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0x10 ]
test cl 0x10
je r-xdata
test cl 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc000008f
or [ eax + 0x4 ] ebx
test cl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000093
or [ eax + 0x4 ] 0x2
test cl 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000091
or [ eax + 0x4 ] 0x4
test cl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc000008e
or [ eax + 0x4 ] 0x8
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
shl eax 0x4
not eax
xor eax [ ecx + 0x8 ]
and eax 0x10
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
add eax eax
not eax
xor eax [ ecx + 0x8 ]
and eax 0x8
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
shr eax 0x1
not eax
xor eax [ ecx + 0x8 ]
and eax 0x4
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
shr eax 0x3
not eax
xor eax [ ecx + 0x8 ]
and eax 0x2
xor [ ecx + 0x8 ] eax
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
shr eax 0x5
not eax
xor eax [ ecx + 0x8 ]
and eax ebx
xor [ ecx + 0x8 ] eax
call sub_42b9b6
mov edx eax
test dl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000090
or [ eax + 0x4 ] 0x10
test dl 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x10
test dl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x8
test dl 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x4
test dl 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x2
mov eax [ esi ]
mov ecx 0xc00
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] ebx
mov eax [ ebp + 0x8 ]
and [ eax ] 0xfffffffc
cmp eax 0x400
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xffffffeb
or eax 0x8
cmp eax 0x200
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xfffffffd
or eax ebx
jmp r-xdata
cmp eax 0x800
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x20 ]
and eax 0xffffffe3
or eax 0x2
mov [ ecx + 0x20 ] eax
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov ecx [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
mov eax [ ecx + 0x60 ]
and eax 0xffffffe3
or eax 0x2
mov [ ecx + 0x60 ] eax
mov eax [ ebp + 0x8 ]
fld [ ebx ]
fstp [ eax + 0x50 ]
mov eax [ ebp + 0x8 ]
and [ eax + 0x20 ] 0xffffffe1
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
and [ eax + 0x60 ] 0xffffffe1
mov eax [ ebp + 0x8 ]
fld [ ebx ]
fstp [ eax + 0x50 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xffffffe7
or eax 0x4
jmp r-xdata
cmp eax ecx
jne r-xdata
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xfffffffe
or eax 0x2
cmp eax ecx
jne r-xdata
test [ ecx + 0x8 ] 0x8
je r-xdata
and [ esi ] 0xfffffffe
call sub_42b91c
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push 0x0
push edi
call [ RaiseException@IAT ]
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x8 ] 0x10
je r-xdata
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
shl ecx 0x5
xor ecx [ eax ]
and ecx 0x1ffe0
xor [ eax ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x20 ] ebx
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffffe3
jmp r-xdata
mov eax [ esi ]
mov ecx 0x300
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax ] 0x3
jmp r-xdata
test [ ecx + 0x8 ] 0x4
je r-xdata
and [ esi ] 0xfffffffb
test [ ecx + 0x8 ] 0x2
je r-xdata
and [ esi ] 0xfffffff7
test [ ecx + 0x8 ] 0x1
je r-xdata
and [ esi ] 0xffffffef
mov eax [ ecx ]
mov edx 0xfffff3ff
and eax 0x3
sub eax 0x0
je r-xdata
and [ esi ] 0xffffffdf
and [ esi ] edx
sub eax 0x1
je r-xdata
mov eax [ esi ]
and eax edx
or eax 0x300
sub eax 0x1
je r-xdata
mov eax [ esi ]
and eax 0xfffff7ff
or eax 0x400
jmp r-xdata
sub eax 0x1
je r-xdata
fld [ ecx + 0x50 ]
fstp [ ebx ]
fld [ ecx + 0x50 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ esi ]
and eax edx
or eax 0x200
jmp r-xdata
sub eax 0x1
jne r-xdata
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
and eax 0xfffffbff
or eax 0x800
sub eax 0x1
jne r-xdata
pop edi
pop ebx
pop ebp
retn
mov [ esi ] eax
cmp [ ebp + 0x20 ] 0x0
pop esi
je r-xdata
and [ esi ] edx
jmp r-xdata
mov eax [ ecx ]
shr eax 0x2
and eax 0x7
sub eax 0x0
je r-xdata
or [ esi ] 0xc00
jmp r-xdata
sub_42e355
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x1
je r-xdata
call sub_425628
mov [ eax ] 0x21
add eax 0xfffffffe
cmp eax 0x1
ja r-xdata
pop ebp
retn
call sub_425628
mov [ eax ] 0x22
pop ebp
retn
sub_42e384
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub esp 0x20
xor ecx ecx
mov eax ecx
mov ecx [ eax * 8 + r--data ]
inc eax
cmp eax 0x1d
jl r-xdata
push 0xffff
push [ ebp + 0x28 ]
call sub_42b92f
push [ ebp + 0x8 ]
call sub_42e355
fld [ ebp + 0x20 ]
add esp 0xc
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x20 ]
push 0xffff
push [ ebp + 0x28 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] eax
call sub_42b92f
lea eax [ ebp - 0x20 ]
push eax
call sub_424e6a
add esp 0xc
test eax eax
jne r-xdata
cmp [ eax * 8 + r--data ] edx
je r-xdata
jmp r-xdata
fld [ ebp - 0x8 ]
pop esi
jmp r-xdata
push esi
call sub_42e355
pop ecx
mov [ ebp - 0x1c ] ecx
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
sub_42e426
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
fldz
fucom st1
fnstsw ax
push edi
test ah 0x44
jpe r-xdata
push esi
mov si [ ebp + 0xe ]
movzx eax si
test eax 0x7ff0
jne r-xdata
fstp st1
xor edi edi
jmp r-xdata
push 0x0
push ecx
fstp st0
push ecx
fstp [ esp ]
call sub_42e4fa
movzx edi si
add esp 0xc
shr edi 0x4
and edi 0x7ff
sub edi 0x3fe
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
test ecx 0xfffff
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] edi
pop edi
pop ebp
retn
fcompp
mov edi 0xfffffc03
fnstsw ax
test ah 0x41
jne r-xdata
test edx edx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
mov ecx 0xffef
and si cx
mov [ ebp + 0xe ] si
test eax eax
je r-xdata
add ecx ecx
mov [ ebp + 0xc ] ecx
test edx edx
jns r-xdata
test [ ebp + 0xe ] 0x10
jne r-xdata
fld [ ebp + 0x8 ]
push 0x0
push ecx
push ecx
fstp [ esp ]
call sub_42e4fa
add esp 0xc
jmp r-xdata
mov eax 0x8000
or si ax
mov [ ebp + 0xe ] si
add edx edx
dec edi
test [ ebp + 0xe ] 0x10
je r-xdata
or ecx 0x1
mov [ ebp + 0xc ] ecx
pop esi
mov si [ ebp + 0xe ]
mov [ ebp + 0x8 ] edx
sub_42e4fa
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x10 ]
movzx eax [ ebp + 0xe ]
fld [ ebp + 0x8 ]
and eax 0x800f
fstp [ ebp - 0x8 ]
lea ecx [ ecx + 0x3fe ]
shl ecx 0x4
or ecx eax
mov [ ebp - 0x2 ] cx
fld [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_42e529
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x7ff00000
mov eax [ ebp + 0x8 ]
jne r-xdata
cmp [ ebp + 0xc ] 0xfff00000
jne r-xdata
test eax eax
jne r-xdata
mov cx [ ebp + 0xe ]
mov edx 0x7ff8
and cx dx
cmp cx dx
jne r-xdata
test eax eax
jne r-xdata
inc eax
pop ebp
retn
mov edx 0x7ff0
cmp cx dx
jne r-xdata
push 0x3
jmp r-xdata
push 0x2
xor eax eax
pop ebp
retn
test [ ebp + 0xc ] 0x7ffff
jne r-xdata
pop eax
pop ebp
retn
push 0x4
jmp r-xdata
test eax eax
je r-xdata
sub_42e5bd
mov edi edi
push ebp
mov ebp esp
mov cx [ ebp + 0xe ]
mov edx 0x7ff0
mov ax cx
and ax dx
cmp ax dx
jne r-xdata
movzx ecx cx
and ecx 0x8000
test ax ax
jne r-xdata
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_42e529
pop ecx
pop ecx
sub eax 0x1
je r-xdata
fld [ ebp + 0x8 ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpe r-xdata
test [ ebp + 0xc ] 0xfffff
jne r-xdata
mov eax 0x200
pop ebp
retn
sub eax 0x1
je r-xdata
neg ecx
sbb ecx ecx
and ecx 0xffffff08
lea eax [ ecx + 0x100 ]
pop ebp
retn
neg ecx
sbb ecx ecx
and ecx 0xffffffe0
lea eax [ ecx + 0x40 ]
pop ebp
retn
neg ecx
sbb ecx ecx
and ecx 0xffffff90
lea eax [ ecx + 0x80 ]
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x4
sub eax 0x1
je r-xdata
push 0x2
jmp r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
sub_42e680
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push ebx
push esi
push edi
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
movzx ebx [ ecx + 0x6 ]
add eax 0x18
add eax ecx
test ebx ebx
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx ebx
jb r-xdata
mov ecx [ eax + 0x8 ]
add ecx esi
cmp edi ecx
jb r-xdata
mov esi [ eax + 0xc ]
cmp edi esi
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_42e6d0
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_41fd30
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __pe_sfxrar_export_address_table
call sub_42e790
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __pe_sfxrar_export_address_table
push eax
push __pe_sfxrar_export_address_table
call sub_42e680
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42e790
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x5a4d
cmp [ eax ] cx
je r-xdata
mov ecx [ eax + 0x3c ]
add ecx eax
xor eax eax
cmp [ ecx ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov edx 0x10b
cmp [ ecx + 0x18 ] dx
sete al
sub_42e7c1
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax

sub_42e800
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_42e8a0
push sub_41fd30
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax

sub_42e930
cmp [ rw-data ] 0x0
je r-xdata
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_42e9f0
push ebp
mov ebp esp
push edi
cmp [ rw-data ] 0x1
jb r-xdata
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov edi [ ebp + 0x8 ]
ja r-xdata
mov eax edi
xor eax eax
jmp r-xdata
movzx edx [ ebp + 0xc ]
test edx edx
je r-xdata
movzx edx [ ebp + 0xc ]
mov eax edx
shl edx 0x8
or edx eax
movd xmm3 edx
pshuflw xmm3 xmm3 0x0
movlhps xmm3 xmm3
mov ecx 0xf
and ecx edi
or eax 0xffffffff
shl eax cl
sub edi ecx
xor edx edx
cld
pop edi
leave
retn
mov eax 0xfffffff0
and eax edi
pxor xmm0 xmm0
pcmpeqb xmm0 [ eax ]
mov ecx 0xf
and ecx edi
mov edx 0xffffffff
shl edx cl
pmovmskb edi xmm0
and edi edx
jne r-xdata
xor eax eax
test edi 0xf
je r-xdata
push ebx
pmovmskb ebx xmm1
and ebx eax
shl ecx 0x1
xor eax eax
sub eax ecx
and ecx eax
dec ecx
and ecx ebx
pop ebx
bsr eax ecx
add eax edi
test ecx ecx
cmove eax edx
pop edi
leave
retn
pmovmskb ecx xmm1
and ecx eax
bsr eax ecx
add eax edi
test ecx ecx
cmovne edx eax
or eax 0xffffffff
add edi 0x10
jmp r-xdata
bsf edx edi
add eax edx
jmp r-xdata
pxor xmm0 xmm0
pcmpeqb xmm0 [ eax + 0x10 ]
add eax 0x10
pmovmskb edi xmm0
test edi edi
je r-xdata
movd xmm0 edx
movzx ecx [ edi ]
cmp ecx edx
cmove eax edi
test ecx ecx
je r-xdata
movdqu xmm1 [ edi ]
pxor xmm2 xmm2
pcmpeqb xmm2 xmm1
pcmpeqb xmm1 xmm3
pmovmskb ecx xmm2
and ecx eax
jne r-xdata
pop edi
leave
retn
add edi 0x10
pcmpistri xmm0 [ edi - 0x10 ] 0x40
lea ecx [ edi + ecx - 0x10 ]
cmovb eax ecx
jne r-xdata
inc edi
test edi 0xf
jne r-xdata
sub_42eeda
xor ebx ebx
mov eax [ ebp - 0x10 ]
mov ecx 0x4ae4
mul ecx
seto bl
neg ebx
or ebx eax
xor eax eax
add ebx 0x4
setb al
neg eax
or eax ebx
push eax
push [ ebp - 0x14 ]
call sub_41c848
pop ecx
pop ecx
retn
sub_40125f
mov ecx rw-data
jmp sub_405bf6
sub_401269
mov ecx rw-data
jmp sub_40694f
sub_401273
mov ecx rw-data
call sub_40c44d
push sub_42efaa
call sub_41c683
pop ecx
retn
sub_401289
push sub_42efb4
call sub_41c683
pop ecx
retn
sub_401295
call sub_40e961
mov [ rw-data ] eax
retn
sub_4012a0
push rw-data
call [ InitializeCriticalSection@IAT ]
push sub_42efbe
call sub_41c683
pop ecx
retn
sub_4012b7
mov ecx rw-data
jmp sub_40fcd8
sub_4012c1
mov ecx rw-data
call sub_40d99a
push sub_42efca
call sub_41c683
pop ecx
retn
sub_4012d7
mov ecx rw-data
call sub_40d99a
push sub_42efd4
call sub_41c683
pop ecx
retn
sub_4012ed
mov ecx rw-data
call sub_4058b6
push sub_42efde
call sub_41c683
pop ecx
retn
sub_401571
push esi
push [ esp + 0x8 ]
mov esi ecx
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
call sub_40183e
mov eax esi
pop esi
retn 0x4
sub_4017da
add ecx 0x1020
jmp sub_40a6f4
sub_401f93
cmp [ ecx + 0x336c ] 0x0
je r-xdata
retn
xor eax eax
cmp [ ecx + 0x3361 ] al
sete al
dec eax
and eax 0xfffffff0
add eax 0x20
mov [ ecx + 0x229c ] eax
sub_403c6f
push [ esp + 0x4 ]
lea eax [ ecx + 0x1e ]
push eax
push 0x20
call sub_401f25
push 0x1
mov ecx rw-data
call sub_406acc
retn 0x4
sub_403c8d
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x4c ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] eax
call sub_40f838
mov esp ebp
pop ebp
retn 0x4
sub_403caf
mov eax rw-data
retn
sub_403cfe
mov ecx [ esp + 0x4 ]
call sub_403d0a
retn 0x4
sub_405893
push esi
push 0xf0
mov esi ecx
push 0x0
push esi
call sub_41d1e0
and [ esi + 0x100 ] 0x0
add esp 0xc
mov [ esi + 0x104 ] 0x0
pop esi
retn
j_sub_40a6f4
jmp sub_40a6f4
sub_405938
add ecx 0x93e8
jmp sub_40e893
sub_405e0c
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
call sub_40d99a
mov eax esi
pop esi
pop ecx
retn
j_sub_40da45#2
jmp j_sub_40da45
sub_405f0a
mov eax [ ecx + 0xa98 ]
add eax 0xfffffffc
cmp eax 0x1
ja r-xdata
retn 0x8
push [ esp + 0x4 ]
add ecx 0xa9c
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_40d1bc
sub_4067c4
xor eax eax
mov [ ecx + 0x4 ] al
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x10 ] eax
mov eax ecx
retn
sub_40694f
xor eax eax
mov [ ecx + 0x8 ] 0x1
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0xb ] ax
mov [ ecx + 0xa ] al
mov eax ecx
retn
sub_406966
xor al al
retn 0x4
sub_406991
push esi
mov esi ecx
cmp [ esi + 0xb ] 0x0
jne r-xdata
push 0x2
mov ecx esi
call sub_406b14
pop esi
retn 0x4
push [ esp + 0x8 ]
push 0xa
call sub_401546
sub_4069d1
push [ esp + 0x4 ]
push 0x0
call sub_4069b2
retn 0x4
sub_406a2f
push esi
push 0x7
mov esi ecx
call sub_403c8d
push 0x8
mov ecx esi
call sub_406acc
pop esi
retn
sub_406a44
push esi
push [ esp + 0xc ]
mov esi ecx
push [ esp + 0xc ]
push 0x8
call sub_401f25
push 0x6
mov ecx esi
call sub_406acc
pop esi
retn 0x8
sub_406a63
push [ esp + 0x4 ]
push 0x0
call sub_406a44
retn 0x4
sub_406a71
push esi
push [ esp + 0x8 ]
mov esi ecx
push 0x0
call sub_406a8c
push 0x2
mov ecx esi
call sub_406b14
pop esi
retn 0x4
sub_406a8c
push esi
push [ esp + 0xc ]
mov esi ecx
push [ esp + 0xc ]
push 0xc
call sub_401f25
push 0x2
mov ecx esi
call sub_406acc
pop esi
retn 0x8
sub_406b46
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push 0x1f
call sub_401f25
push 0x2
mov ecx rw-data
call sub_406acc
retn 0x8
sub_406b64
push esi
push [ esp + 0xc ]
mov esi ecx
push [ esp + 0xc ]
call sub_406b81
push 0x5
mov ecx esi
call sub_406b14
pop esi
retn 0x8
sub_406b81
push esi
push [ esp + 0xc ]
mov esi ecx
push [ esp + 0xc ]
push 0xd
call sub_401f25
push 0x5
mov ecx esi
call sub_406acc
pop esi
retn 0x8
sub_406ba0
xor eax eax
mov [ ecx + 0x1010 ] eax
mov [ ecx + 0x1014 ] eax
mov [ ecx + 0x1018 ] eax
mov [ ecx + 0x101c ] eax
mov [ ecx + 0x1020 ] eax
mov [ ecx + 0x1024 ] eax
mov eax ecx
retn
sub_40729a
mov eax [ esp + 0xc ]
cmp [ eax + 0x6ce8 ] 0x3
jne r-xdata
xor al al
add eax 0x2280
push eax
push [ esp + 0x14 ]
push [ esp + 0xc ]
call sub_406bc9
jmp r-xdata
retn 0x10
sub_40942d
retn 0x8
sub_409588
push [ ecx + 0x4 ]
call [ SetEndOfFile@IAT ]
dec eax
neg eax
sbb eax eax
inc eax
retn
sub_409598
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_408f0d
test al al
je r-xdata
push [ esp + 0x4 ]
mov ecx rw-data
call sub_4069d1
xor al al
mov al 0x1
jmp r-xdata
retn 0x8
sub_409882
cmp [ esp + 0x4 ] 0xffffffff
je r-xdata
xor eax eax
test [ esp + 0x4 ] 0x10
je r-xdata
xor eax eax
inc eax
jmp r-xdata
retn 0x4
sub_40989a
mov eax [ esp + 0x4 ]
shr eax 0xa
and eax 0x1
retn 0x4
sub_409b3d
or [ ecx + 0x1004 ] 0xffffffff
xor eax eax
mov [ ecx ] ax
mov eax ecx
mov [ ecx + 0x1000 ] 0x1
retn
sub_409b53
mov eax [ ecx + 0x1004 ]
cmp eax 0xffffffff
je r-xdata
retn
push eax
call [ FindClose@IAT ]
sub_409c77
push esi
push [ esp + 0x8 ]
mov esi ecx
push esi
call sub_421693
pop ecx
pop ecx
mov [ esi + 0x1000 ] 0x1
pop esi
retn 0x4
sub_40a66e
cmp [ esp + 0x8 ] 0x0
je r-xdata
push [ esp + 0x4 ]
call CharUpperW
mov eax [ esp + 0x4 ]
jmp r-xdata
retn 0x8
sub_40a702
push esi
push 0x72a8
mov esi ecx
push 0x0
push esi
call sub_41d1e0
add esp 0xc
lea ecx [ esi + 0x5168 ]
call sub_40a6f4
lea ecx [ esi + 0x4024 ]
pop esi
jmp j_sub_40da45
sub_40adc0
xor eax eax
cmp [ esp + 0x4 ] 0x3a
sete al
retn 0x4
sub_40b1b4
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_4216b5
pop ecx
test eax eax
je r-xdata
mov eax esi
pop esi
retn 0x4
lea esi [ esi + eax * 2 ]
add esi 0xfffffffe
sub_40b2e1
push ecx
push esi
mov esi ecx
push 0x1
mov [ esp + 0x8 ] esi
call sub_409e16
and [ esi + 0x10 ] 0x0
mov eax esi
pop esi
pop ecx
retn
sub_40b2f9
push esi
mov esi ecx
push [ esi + 0x10 ]
call j_sub_4251ac#2
pop ecx
mov ecx esi
pop esi
jmp sub_409e4c
sub_40bb18
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jne r-xdata
pop esi
retn
push 0x40004
call sub_41c402
pop ecx
mov [ esi + 0x10 ] eax
sub_40bd8f
mov edx [ ecx + 0x18 ]
cmp edx [ ecx + 0x14 ]
jae r-xdata
xor eax eax
retn
lea eax [ edx + 0x1 ]
mov [ ecx + 0x18 ] eax
mov eax [ ecx ]
movzx eax [ eax + edx ]
retn
sub_40c1b5
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
mov [ ecx + 0x2c ] eax
or [ ecx + 0x48 ] 0xffffffff
retn 0x8
mov [ ecx + 0x30 ] eax
sub_40c1d2
mov eax [ esp + 0x4 ]
mov [ ecx + 0x14 ] eax
mov eax [ esp + 0x8 ]
mov [ ecx + 0xc ] 0x1
mov [ ecx + 0x10 ] eax
retn 0x8
sub_40c44d
xor eax eax
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x10 ] al
mov eax ecx
retn
sub_40c45a
push [ ecx ]
call j_sub_4251ac#3
pop ecx
retn
sub_40c677
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_40c69c
mov ecx esi
call sub_40ca0c
cmp [ esi + 0x10 ] 0x0
pop esi
je r-xdata
retn 0x4
push 0x1
call [ SetProcessDefaultLayout@IAT ]
sub_40c999
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_40ca74
cmp [ ecx + 0x10 ] 0x0
je r-xdata
retn 0x4
push 0xffffffec
push [ esp + 0x8 ]
call [ GetWindowLongW@IAT ]
or eax __pe_sfxrar_export_address_table
push eax
push 0xffffffec
push [ esp + 0xc ]
call [ SetWindowLongW@IAT ]
sub_40cd8b
cmp [ rw-data ] 0x0
push esi
mov esi ecx
jne r-xdata
mov [ esi + 0x1 ] 0x1
mov eax esi
pop esi
retn
call sub_40cda4
sub_40d99a
push esi
mov esi ecx
push r--data
mov [ esi + 0x101 ] 0x0
call sub_40dbc1
mov eax esi
pop esi
retn
sub_40d9b2
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
pop esi
retn
push [ esi ]
call [ FreeLibrary@IAT ]
j_sub_40da45
jmp sub_40da45
sub_40da45
push 0x100
push ecx
mov [ ecx + 0x100 ] 0x0
call sub_40dc0c
retn
sub_40e098
mov eax [ esp + 0x4 ]
and [ eax + 0x18 ] 0x0
and [ eax + 0x14 ] 0x0
mov [ eax ] 0x67452301
mov [ eax + 0x4 ] 0xefcdab89
mov [ eax + 0x8 ] 0x98badcfe
mov [ eax + 0xc ] 0x10325476
mov [ eax + 0x10 ] 0xc3d2e1f0
retn 0x4
sub_40e222
mov eax [ esp + 0x4 ]
and [ eax + 0x20 ] 0x0
and [ eax + 0x24 ] 0x0
mov [ eax ] 0x6a09e667
mov [ eax + 0x4 ] 0xbb67ae85
mov [ eax + 0x8 ] 0x3c6ef372
mov [ eax + 0xc ] 0xa54ff53a
mov [ eax + 0x10 ] 0x510e527f
mov [ eax + 0x14 ] 0x9b05688c
mov [ eax + 0x18 ] 0x1f83d9ab
mov [ eax + 0x1c ] 0x5be0cd19
retn 0x4
sub_40e721
mov eax [ esp + 0x4 ]
add eax 0xffffffd0
push 0x9
pop ecx
cmp ecx eax
sbb eax eax
inc eax
retn 0x4
sub_40e733
cmp [ esp + 0x4 ] 0x20
je r-xdata
xor eax eax
inc eax
cmp [ esp + 0x4 ] 0x9
je r-xdata
xor eax eax
jmp r-xdata
retn 0x4
sub_40e74b
mov ax [ esp + 0x4 ]
cmp ax 0x69
jne r-xdata
movzx eax ax
push eax
call CharUpperW
push 0x49
pop eax
jmp r-xdata
retn 0x4
j_sub_4100df
jmp sub_4100df
sub_40e8cf
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
call sub_40e8e3
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40e946
push esi
mov esi ecx
and [ esi + 0x10 ] 0x0
call sub_405bd9
and [ esi + 0x14 ] 0x0
and [ esi + 0x58 ] 0x0
pop esi
retn
sub_40e95c
and [ ecx + 0x10 ] 0x0
retn
sub_40f390
call sub_40f350
cmp eax 0x1
jae r-xdata
cmp eax 0x20
jbe r-xdata
xor eax eax
inc eax
retn
retn
push 0x20
pop eax
sub_40f40b
mov ecx [ esp + 0x4 ]
call sub_40f419
xor eax eax
retn 0x4
sub_40f4ba
mov eax [ esp + 0x4 ]
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
mov [ ecx ] edx
retn 0x4
sub_40f65a
mov eax [ esp + 0x4 ]
mov edx [ ecx ]
mov ecx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
retn 0x4
sub_40f828
mov eax [ esp + 0x4 ]
mov [ ecx ] eax
mov eax [ esp + 0x8 ]
mov [ ecx + 0x4 ] eax
retn 0x8
j_sub_41b2a7
jmp sub_41b2a7
sub_40fc5d
push [ esp + 0xc ]
push [ esp + 0xc ]
push 0x0
push [ esp + 0x10 ]
call sub_41b39f
retn 0xc
j_sub_418e03
jmp sub_418e03
sub_40fc78
mov al [ rw-data ]
retn
sub_40fc7e
cmp [ esp + 0x4 ] 0x0
push [ esp + 0x8 ]
setne al
lea eax [ eax * 4 + 0x54 ]
push eax
call sub_41b471
retn 0x8
j_sub_41b4ce
jmp sub_41b4ce
j_sub_410052
jmp sub_410052
sub_41018b
push ecx
xor eax eax
mov [ esp ] ecx
mov [ ecx + 0x4a8c ] eax
mov [ ecx + 0x644 ] eax
mov [ ecx + 0x64c ] eax
mov [ ecx + 0x648 ] eax
mov eax ecx
pop ecx
retn
sub_4102ce
push ecx
push esi
mov esi ecx
push 0x0
mov [ esp + 0x8 ] esi
lea ecx [ esi + 0x4 ]
call sub_409e16
and [ esi + 0x4ad4 ] 0x0
mov eax esi
pop esi
pop ecx
retn
sub_410322
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_41033a
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
j_sub_412c25
jmp sub_412c25
sub_410368
add ecx 0x4a8c
jmp sub_412fcb
sub_410479
lea eax [ ecx + 0x4 ]
mov [ ecx ] r--data
push eax
call sub_41fcc7
pop ecx
retn
sub_410bd9
mov eax [ esp + 0x4 ]
cmp eax [ ecx + 0x8 ]
jbe r-xdata
mov [ ecx + 0x4 ] eax
sub eax [ ecx + 0x4 ]
push eax
call sub_4105e3
jmp r-xdata
retn 0x4
sub_410e8f
push 0x100
lea eax [ ecx + 0x66c ]
mov [ ecx + 0xa6c ] 0x1
push 0x0
push eax
call sub_41d1e0
add esp 0xc
retn
sub_4113f7
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x7fe2
jle r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x10 ]
movzx eax [ eax + ecx ]
inc ecx
mov [ esi + 0x4 ] ecx
pop esi
retn
call sub_41314c
sub_4121c7
push esi
push 0x1
mov esi ecx
call sub_41056b
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
mov eax [ esp + 0x8 ]
pop esi
mov [ ecx + edx * 4 - 0x4 ] eax
retn 0x4
sub_412fcb
cmp [ ecx ] 0x0
je r-xdata
retn
push [ ecx + 0xac ]
and [ ecx ] 0x0
call j_sub_4251ac#3
pop ecx
sub_416ef0
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_4172f4
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x14 ]
inc eax
mov [ ecx + 0x14 ] eax
retn 0x4
sub_417302
sub [ esp + 0x4 ] 0x4
jmp sub_4172f4
sub_41730c
sub [ esp + 0x4 ] 0x8
jmp sub_4172f4
sub_417316
sub [ esp + 0x4 ] 0x10
jmp sub_4172f4
sub_417320
sub [ esp + 0x4 ] 0xc
jmp sub_4172f4
sub_41732a
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
je r-xdata
pop esi
retn
push [ esi + 0x4 ]
call [ DestroyWindow@IAT ]
and [ esi + 0x4 ] 0x0
sub_417342
sub [ esp + 0x4 ] 0x4
jmp sub_41736b
sub_41734c
mov eax 0x80004001
retn 0x4
sub_417354
sub [ esp + 0x4 ] 0x8
jmp sub_41736b
sub_41735e
mov eax [ esp + 0xc ]
and [ eax ] 0x0
xor eax eax
inc eax
retn 0xc
sub_41736b
mov eax 0x80004001
retn 0x8
sub_417373
mov eax 0x80004002
retn 0x8
sub_41737b
mov eax [ esp + 0x8 ]
and [ eax ] 0x0
xor eax eax
inc eax
retn 0x8
sub_417388
mov eax [ esp + 0x8 ]
and [ eax + 0x8 ] 0x0
mov [ eax ] 0x14
mov [ eax + 0x4 ] 0x40000000
xor eax eax
retn 0x8
sub_4173a2
mov eax [ esp + 0x18 ]
or [ eax ] 0xffffffff
mov eax 0x80020006
retn 0x18
sub_4173b1
xor eax eax
inc eax
retn 0xc
sub_4173db
sub [ esp + 0x4 ] 0x4
jmp sub_4173b7
sub_41745f
mov eax 0x80020003
retn 0x24
sub_4177f1
xor eax eax
retn 0x8
sub_4177f6
xor eax eax
retn 0x4
sub_4179fa
sub [ esp + 0x4 ] 0x4
jmp sub_417913
sub_417a04
sub [ esp + 0x4 ] 0x8
jmp sub_417913
sub_417a0e
sub [ esp + 0x4 ] 0x10
jmp sub_417913
sub_417a18
sub [ esp + 0x4 ] 0xc
jmp sub_417913
sub_417ab0
sub [ esp + 0x4 ] 0x4
jmp sub_417a8b
sub_417aba
sub [ esp + 0x4 ] 0x8
jmp sub_417a8b
sub_417ac4
sub [ esp + 0x4 ] 0x10
jmp sub_417a8b
sub_417ace
sub [ esp + 0x4 ] 0xc
jmp sub_417a8b
sub_417ca0
xor eax eax
retn 0x10
sub_417ca5
mov eax 0x80004001
retn 0xc
sub_417cad
mov eax 0x80004001
retn 0x10
sub_417dc0
xor eax eax
inc eax
retn 0x14
sub_417dc6
xor eax eax
inc eax
retn 0x18
sub_417dcc
xor eax eax
retn 0xc
sub_417dd1
xor eax eax
inc eax
retn 0x10
sub_417dd7
mov eax [ esp + 0x10 ]
and [ eax ] 0x0
xor eax eax
inc eax
retn 0x10
sub_4181bc
push [ esp + 0x4 ]
push [ esp + 0xc ]
call [ GetCurrentDirectoryW@IAT ]
neg eax
sbb eax eax
neg eax
retn 0x8
sub_418556
push [ esp + 0x4 ]
call [ SetCurrentDirectoryW@IAT ]
neg eax
sbb eax eax
neg eax
retn 0x4
sub_4187d8
mov eax [ esp + 0x4 ]
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
cmp [ eax ] cx
jne r-xdata
retn 0x4
sub_418a49
mov esi rw-data
mov ecx esi
call sub_406a2f
push 0x8
mov ecx esi
call sub_406acc
push [ ebp + 0x8 ]
call sub_41afeb
mov eax r-xdata
retn
sub_418a6e
push [ ebp + 0x8 ]
call sub_41afeb
mov eax r-xdata
retn
sub_41b114
mov esi rw-data
mov ecx esi
call sub_406a2f
push 0x8
mov ecx esi
call sub_406acc
push [ ebp + 0x8 ]
call sub_41afeb
mov eax r-xdata
retn
sub_41b139
push [ ebp + 0x8 ]
call sub_41afeb
mov eax r-xdata
retn
sub_41b374
push 0x0
push [ esp + 0x20 ]
push [ esp + 0x1c ]
call sub_41b236
push eax
push 0x402
push 0x6a
push [ rw-data ]
call [ SendDlgItemMessageW@IAT ]
call sub_418e03
retn 0x20
sub_41b7bc
mov eax InitCommonControlsEx@IAT
jmp sub_41b7c6
sub_41b7c6
push ecx
push edx
push eax
push __delay_import_directory_entries
call sub_41bea6
pop edx
pop ecx
jmp eax
sub_41baa5
push ecx
push edx
push eax
push r--data
call sub_41bea6
pop edx
pop ecx
jmp eax
sub_41c15e
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call j_sub_4251ac
pop ecx
pop ebp
retn
sub_41c16c
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax

sub_41c2c2
test al al
jne r-xdata
retn
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c350
sub_41c340
test al al
jne r-xdata
retn
push [ ebp + 0x14 ]
push edi
push ebx
push esi
call sub_41c350
sub_41c382
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
cmp [ eax ] 0xe06d7363
je r-xdata
call sub_423fbe
mov [ ebp - 0x28 ] 0x0
mov eax [ ebp - 0x28 ]
retn
sub_41c402
push ebp
mov ebp esp
pop ebp
jmp sub_41c12b
j_sub_4251ac#2
jmp j_sub_4251ac
sub_41c5de
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
xor ecx ecx
cmp [ eax ] 0xc0000005
sete cl
mov eax ecx
retn
sub_41c603
push ebp
mov ebp esp
call sub_41cd60
test eax eax
je r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
mov ecx rw-data
xchg [ ecx ] eax
sub_41c683
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_41c648
neg eax
pop ecx
sbb eax eax
neg eax
dec eax
pop ebp
retn
sub_41c848
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call j_sub_4251ac#2
pop ecx
pop ebp
retn
sub_41ca72
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
push ecx
push eax
call sub_423ffa
pop ecx
pop ecx
retn
_start
call sub_41cf53
jmp sub_41c93f
sub_41cad0
and [ ecx + 0x4 ] 0x0
mov eax ecx
and [ ecx + 0x8 ] 0x0
mov [ ecx + 0x4 ] r--data
mov [ ecx ] r--data
retn
sub_41cae8
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_41033a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41cb03
and [ ecx + 0x4 ] 0x0
mov eax ecx
and [ ecx + 0x8 ] 0x0
mov [ ecx + 0x4 ] r--data
mov [ ecx ] r--data
retn
sub_41cb1b
push ebp
mov ebp esp
sub esp 0xc
lea ecx [ ebp - 0xc ]
call sub_41cad0
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_41f404
int3
sub_41cb38
push ebp
mov ebp esp
sub esp 0xc
lea ecx [ ebp - 0xc ]
call sub_41cb03
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_41f404
int3
j_sub_4251ac
jmp j_sub_4251ac#3
j_sub_420f99
jmp [ r--data ]
sub_41cba6
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx

sub_41cd5c
xor eax eax
inc eax
retn
sub_41cd60
xor eax eax
cmp [ rw-data ] eax
setne al
retn
sub_41cefe
push sub_41cf0a
call [ SetUnhandledExceptionFilter@IAT ]
retn
sub_41cfef
xor eax eax
retn
sub_41cff2
mov eax 0x4000
retn
sub_41cff9
push rw-data
call [ InitializeSListHead@IAT ]
retn
sub_41d005
push 0x30000
push 0x10000
push 0x0
call sub_4250f3
add esp 0xc
test eax eax
jne r-xdata
push 0x7
call sub_41cd6c
int3
retn
sub_41d026
mov eax rw-data
retn
sub_41d02c
call sub_403caf
mov ecx [ eax + 0x4 ]
or [ eax ] 0x4
mov [ eax + 0x4 ] ecx
call sub_41d026
mov ecx [ eax + 0x4 ]
or [ eax ] 0x2
mov [ eax + 0x4 ] ecx
retn
sub_41d049
xor eax eax
cmp [ rw-data ] eax
sete al
retn
sub_41d055
mov eax rw-data
retn
sub_41d05b
mov eax rw-data
retn
sub_41d0b7
push ebp
mov ebp esp
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push [ ebp + 0x8 ]
call [ UnhandledExceptionFilter@IAT ]
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop ebp
retn
sub_42004e
xor eax eax
push eax
push eax
push eax
push rw-data
call sub_401000
add esp 0x10
retn
sub_420061
push rw-data
call sub_401088
pop ecx
retn
sub_4200a9
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn 0x4
cmp eax rw-data
je r-xdata
push eax
call sub_4251ac
pop ecx
sub_420198
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov al 0x1
retn
push eax
call sub_4213ca
or [ rw-data ] 0xffffffff
pop ecx
sub_42026c
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_420275
mov esp [ ebp - 0x18 ]
call sub_423fbe
sub_4202a0
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_41033a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4202bb
and [ ecx + 0x4 ] 0x0
mov eax ecx
and [ ecx + 0x8 ] 0x0
mov [ ecx + 0x4 ] r--data
mov [ ecx ] r--data
retn
sub_42038a
push [ ebp - 0x14 ]
call sub_420571
pop ecx
retn
sub_4204bc
push 0x4
mov eax sub_42ef8f
call sub_42e7c1
call sub_4200c5
cmp [ eax + 0x1c ] 0x0
jne r-xdata
call sub_423fbe
and [ ebp - 0x4 ] 0x0
call sub_421677
sub_420bc3
xor eax eax
inc eax
retn
sub_420bc7
mov esp [ ebp - 0x18 ]
call sub_423fbe
sub_420cee
xor eax eax
inc eax
retn
sub_420dbd
push [ ebp - 0x14 ]
call sub_420d02
pop ecx
retn
sub_420dfb
call sub_4200c5
cmp [ eax + 0x18 ] 0x0
jle r-xdata
retn
call sub_4200c5
dec [ eax + 0x18 ]
sub_420f99
retn
sub_4210b5
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_421655
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_4210e7
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_420fa0
add esp 0xc
pop ebp
retn 0x8
sub_421517
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_421629
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_421560
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_421674
call eax
retn
sub_421677
push esi
call sub_4200c5
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
call sub_423fbe
mov ecx esi
call j_sub_420f99
call esi
j_sub_4251ac#3
jmp sub_4251ac
sub_4216d5
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4252d4
sub_421ca9
mov edi edi
push esi
mov esi ecx
push [ esi + 0x404 ]
call sub_4251ac
and [ esi + 0x404 ] 0x0
pop ecx
pop esi
retn
sub_421f89
call sub_421fa8
test al al
jne r-xdata
mov al 0x1
retn
call sub_425628
mov [ eax ] 0x16
call sub_425507
xor al al
retn
sub_421fa8
lea edx [ ecx + 0x18 ]
mov [ ecx + 0x3c ] 0x1
push edx
movzx edx [ ecx + 0x32 ]
add ecx 0x448
push edx
call sub_422963
mov al 0x1
retn
sub_422878
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_4226ba
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_422897
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_4226ba
retn
sub_422c4a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cdq
xor eax edx
sub eax edx
pop ebp
retn
sub_422c59
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4251e6
sub_423040
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x100
push [ ebp + 0x8 ]
call sub_422e5f
add esp 0xc
pop ebp
retn
sub_42305a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x200
push [ ebp + 0x8 ]
call sub_422d15
add esp 0xc
pop ebp
retn
sub_423ecf
cmp [ ecx ] 0x0
jne r-xdata
mov al 0x1
retn
call sub_425628
mov [ eax ] 0x16
call sub_425507
xor al al
retn
sub_423f14
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_42489d
pop ebp
retn
sub_423fb5
push 0x0
call sub_426f07
pop ecx
retn
sub_423fe6
xor eax eax
inc eax
retn
sub_42416d
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0xe06d7363
sete al
pop ebp
retn
sub_42427f
mov esp [ ebp - 0x18 ]
call sub_423fbe
sub_42428a
push 0x2
call sub_426f07
pop ecx
retn
sub_424344
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_424353
push 0x1
push 0x2
push 0x0
call sub_424180
add esp 0xc
retn
sub_424362
push 0x1
push 0x0
push 0x0
call sub_424180
add esp 0xc
retn
sub_424371
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x2
push [ ebp + 0x8 ]
call sub_424180
add esp 0xc
pop ebp
retn
sub_4243bf
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_424180
add esp 0xc
pop ebp
retn
sub_4246c3
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4243d5
sub_424867
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
pop ebp
retn
push eax
call sub_4247f8
pop ecx
sub_424882
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
pop ebp
retn
push eax
call sub_4247f8
pop ecx
j_sub_4246ce
jmp sub_4246ce
sub_42494f
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_426f07
pop ecx
retn
sub_4249a0
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_426f07
pop ecx
retn
sub_424c7c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push rw-data
call sub_424cec
pop ecx
pop ecx
pop ebp
retn
sub_424d10
push rw-data
mov ecx rw-data
call sub_42489d
mov al 0x1
retn
sub_424d22
push rw-data
call sub_424caf
mov [ esp ] rw-data
call sub_424caf
pop ecx
mov al 0x1
retn
sub_424d3c
mov al 0x1
retn
sub_424d3f
call sub_4248ce
mov al 0x1
retn
sub_424d84
push 0x0
call sub_41feb8
pop ecx
retn
sub_424e04
push r--data
push r--data
call sub_42824a
pop ecx
pop ecx
retn
sub_424e16
push r--data
push r--data
call sub_4282cd
pop ecx
pop ecx
retn
sub_424e28
mov eax [ rw-data ]
retn
sub_424e2e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_424e3d
mov eax [ rw-data ]
mov ecx eax
xor eax [ rw-data ]
and ecx 0x1f
ror eax cl
neg eax
sbb eax eax
neg eax
retn
sub_424e56
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_42489d
pop ebp
retn
sub_424eb3
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4249fc
pop ecx
mov [ rw-data ] eax
pop ebp
retn
sub_424ff9
xor eax eax
mov ecx rw-data
inc eax
xchg [ ecx ] eax
retn
sub_42504d
push 0x4
call sub_426f07
pop ecx
retn
sub_4250b8
mov eax [ rw-data ]
retn
sub_4250ed
mov eax rw-data
retn
sub_425478
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_42489d
pop ebp
retn
sub_4257da
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_426f07
pop ecx
retn
sub_42583b
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_426f07
pop ecx
retn
sub_425886
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_426f07
pop ecx
retn
sub_4258ce
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_426f07
pop ecx
retn
sub_425c3d
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov al 0x1
retn
push eax
call sub_42708b
or [ rw-data ] 0xffffffff
sub_426800
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_426814
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_426828
mov ecx [ rw-data ]
xor eax eax
or ecx 0x1
cmp [ rw-data ] ecx
sete al
retn
sub_4269f6
push 0x7
call sub_426f07
pop ecx
retn
sub_426ebf
mov edi edi
push ebp
mov ebp esp
imul eax [ ebp + 0x8 ] 0x18
add eax rw-data
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_426f07
mov edi edi
push ebp
mov ebp esp
imul eax [ ebp + 0x8 ] 0x18
add eax rw-data
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_42785c
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4273d1
sub_42789e
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_426f07
pop ecx
retn
sub_427d41
cmp [ rw-data ] 0x0
jne r-xdata
mov al 0x1
retn
push 0x1
push 0xfffffffd
call sub_427c40
pop ecx
pop ecx
mov [ rw-data ] 0x1
sub_427df0
push 0x5
call sub_426f07
pop ecx
retn
sub_4280cc
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_428073
add esp 0x10
pop ebp
retn
sub_4280e4
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call [ GetCommandLineW@IAT ]
mov [ rw-data ] eax
mov al 0x1
retn
sub_4281b7
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4281c2
sub_42822f
call [ GetProcessHeap@IAT ]
test eax eax
mov [ rw-data ] eax
setne al
retn
sub_428240
and [ rw-data ] 0x0
mov al 0x1
retn
sub_428368
mov ecx [ ebp + 0x10 ]
push [ ecx ]
call sub_426f07
pop ecx
retn
sub_428621
cmp [ ebp - 0x1d ] 0x0
je r-xdata
retn
push 0x3
call sub_426f07
pop ecx
sub_4287a7
push 0x7
call sub_426f07
pop ecx
retn
sub_428fc5
push 0x4
call sub_426f07
pop ecx
retn
sub_42af11
push 0x8
call sub_426f07
pop ecx
retn
sub_42afc7
push 0x1
call sub_42afd0
pop ecx
retn
sub_42b075
push [ ebp - 0x28 ]
call sub_426814
pop ecx
retn
sub_42b09f
push 0x8
call sub_426f07
pop ecx
retn
sub_42b76b
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_42b6ba
sub_42b7c0
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42b7d7
add esp 0xc
pop ebp
retn
sub_42b864
call sub_427d41
xor ecx ecx
test al al
sete cl
mov eax ecx
retn
sub_42b8d5
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
cmp [ eax ] 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp [ eax ] 0xc000001d
je r-xdata
xor eax eax
retn
sub_42b91c
mov edi edi
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_42b9b6
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x4 ]
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_42c33f
push esi
call sub_4287d3
pop ecx
retn
sub_42c5f2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42c574
add esp 0x10
pop ebp
retn
sub_42c6f9
push [ ebp - 0x20 ]
call sub_426814
pop ecx
retn
sub_42c78f
mov ecx [ ebp + 0x10 ]
push [ ecx ]
call sub_4287d3
pop ecx
retn
sub_42c917
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4287d3
pop ecx
retn
sub_42cef4
push 0xa
call IsProcessorFeaturePresent
mov [ rw-data ] eax
xor eax eax
retn
sub_42cf20
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_42cf3e
leave
retn
sub_42cf38
movlpd xmm0 [ esp + 0x4 ]
j_sub_42d4c8#2
jmp sub_42d4c8
sub_42d218
fstp st0
fstp st0
fld [ r--data ]
mov [ ebp - 0x90 ] 0x2
retn
sub_42d244
mov [ ebp - 0x90 ] 0x2
fstp st0
fld [ r--data ]
retn
sub_42d254
or cl cl
jne r-xdata
jmp r-xdata
retn
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_42d259
fldlg2
jmp r-xdata
fxch st1
or cl cl
jne r-xdata
jmp sub_42d563
fyl2x
retn
sub_42d25d
fldln2
fxch st1
or cl cl
jne r-xdata
jmp sub_42d563
fyl2x
retn
j_sub_42d4c8
jmp sub_42d4c8
sub_42d2a9
fstp st0
jmp r-xdata
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_42d2df
fstp st0
fstp st0
fld [ r--data ]
mov [ ebp - 0x90 ] 0x3
retn
sub_42d2f1
or cl cl
jne r-xdata
jmp sub_42d4b6
fstp st0
fld [ r--data ]
retn
sub_42d4a8
fxch st1
fstp st0
retn
sub_42d4b6
fstp st0
fldz
retn
sub_42d4bb
fstp st0
fstp st0
fldz
test ch ch
je r-xdata
retn
fchs
sub_42d4c8
fstp st0
fstp st0
fld1
retn
sub_42d4cf
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x0
fadd [ r--data ]
retn
mov [ ebp - 0x90 ] 0x0
retn
sub_42d4fa
fxch st1
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x0
mov [ ebp - 0x90 ] 0x0
jmp r-xdata
faddp st1
retn
sub_42d563
fstp st0
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_42d576
mov [ ebp - 0x90 ] 0x1
or cl cl
retn
sub_42d580
fstp st0
fstp st0
fld [ r--data ]
or ch ch
je r-xdata
or cl cl
je r-xdata
fchs
retn
fld [ r--data ]
fmulp st1
sub_42d59d
or cl cl
je r-xdata
retn
fchs
sub_42d5b0
fld st0
frndint
fsubr st1
fxch st1
fchs
f2xm1
fld1
faddp st1
fscale
fstp st1
retn
sub_42d5c5
mov edx [ esp + 0x4 ]
and edx 0x300
or edx 0x7f
mov [ esp + 0x6 ] dx
fldcw [ esp + 0x6 ]
retn
sub_42d5dc
test eax 0x80000
je r-xdata
fadd [ r--data ]
mov eax 0x0
retn
mov eax 0x0
retn
sub_42d638
mov eax [ esp + 0x8 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ esp + 0x8 ]
retn
retn
sub_42dd49
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fld [ ebp + 0x8 ]
frndint
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_42e587
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_42e5a6
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_42e66e
mov eax SystemFunction036@IAT
jmp sub_41baa5
sub_42e759
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
xor ecx ecx
cmp [ eax ] 0xc0000005
sete cl
mov eax ecx
retn
sub_42e8e9
mov ecx [ ebp - 0x1c ]
xor ecx ebp
sub_41cabf
sub_41cba6
sub_42e900
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_41c240
sub_42e916
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_41c240
sub_42eb27
mov ecx [ ebp - 0x10 ]
jmp sub_408e53
sub_42eb2f
mov ecx [ ebp - 0x10 ]
add ecx 0x1024
jmp sub_405e1e
sub_42eb3d
mov ecx [ ebp - 0x10 ]
add ecx 0x20e8
jmp sub_40c0a7
sub_42eb4b
mov ecx [ ebp - 0x10 ]
add ecx 0x2280
jmp sub_4017da
sub_42eb59
mov ecx [ ebp - 0x10 ]
add ecx 0x45c0
jmp sub_4017da
sub_42eb67
push 0x72a8
push [ ebp + 0x8 ]
call sub_41c15e
pop ecx
pop ecx
retn
sub_42eb77
mov eax r--data
jmp sub_41d6da
sub_42eb81
mov eax r--data
jmp sub_41d6da
sub_42eb8b
lea ecx [ ebp - 0x28 ]
jmp sub_40a6f4
sub_42eb93
lea ecx [ ebp - 0x28 ]
jmp sub_4017e5
sub_42eb9b
mov eax r--data
jmp sub_41d6da
sub_42eba5
lea ecx [ ebp + 0x48 ]
jmp j_sub_40a6f4
sub_42ebad
lea ecx [ ebp + 0x28 ]
jmp sub_4017e5
sub_42ebb5
mov eax r--data
jmp sub_41d6da
sub_42ebbf
lea ecx [ ebp + 0x34 ]
jmp j_sub_40a6f4
sub_42ebc7
mov eax r--data
jmp sub_41d6da
sub_42ebd1
lea ecx [ ebp - 0xe6ec ]
jmp sub_410373
sub_42ebdc
mov eax r--data
jmp sub_41d6da
sub_42ebe6
mov ecx [ ebp - 0x10 ]
jmp sub_40a702
sub_42ebee
mov ecx [ ebp - 0x10 ]
add ecx 0x92d4
jmp j_sub_40a6f4
sub_42ebfc
mov ecx [ ebp - 0x10 ]
add ecx 0x9330
jmp j_sub_40a6f4
sub_42ec0a
mov ecx [ ebp - 0x10 ]
add ecx 0x938c
jmp j_sub_40a6f4
sub_42ec18
mov ecx [ ebp - 0x10 ]
add ecx 0x93e8
jmp j_sub_40a6f4
sub_42ec26
mov ecx [ ebp - 0x10 ]
add ecx 0x9444
jmp j_sub_40a6f4
sub_42ec34
mov eax r--data
jmp sub_41d6da
sub_42ec3e
push j_sub_40da45#2
push 0x4
push 0x12c
push [ ebp - 0x10 ]
call sub_41c2d6
retn
sub_42ec53
push j_sub_40da45#2
push 0x4
push 0x178
mov eax [ ebp - 0x10 ]
add eax 0x4b4
push eax
call sub_41c2d6
retn
sub_42ec6e
mov eax r--data
jmp sub_41d6da
sub_42ec78
lea ecx [ ebp - 0x28 ]
jmp sub_40a6f4
sub_42ec80
lea ecx [ ebp - 0x304c ]
jmp sub_408e53
sub_42ec8b
mov eax r--data
jmp sub_41d6da
sub_42ec95
lea ecx [ ebp - 0x1c ]
jmp sub_40a6f4
sub_42ec9d
mov eax r--data
jmp sub_41d6da
sub_42eca7
lea ecx [ ebp - 0x2034 ]
jmp sub_408e53
sub_42ecb2
lea ecx [ ebp - 0x50a0 ]
jmp sub_408e53
sub_42ecbd
mov eax r--data
jmp sub_41d6da
sub_42ecc7
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_40c0a7
sub_42ecd2
push 0xe6e0
push [ ebp + 0x8 ]
call sub_41c15e
pop ecx
pop ecx
retn
sub_42ece2
mov eax r--data
jmp sub_41d6da
sub_42ecec
lea ecx [ ebp - 0x9d90 ]
jmp sub_401774
sub_42ecf7
mov eax r--data
jmp sub_41d6da
sub_42ed01
lea ecx [ ebp - 0x130 ]
jmp j_sub_40da45
sub_42ed0c
lea ecx [ ebp - 0x1154 ]
jmp sub_408e53
sub_42ed17
mov eax r--data
jmp sub_41d6da
sub_42ed21
lea ecx [ ebp - 0x1040 ]
jmp sub_408e53
sub_42ed2c
lea ecx [ ebp - 0x1c ]
jmp sub_40a6f4
sub_42ed34
mov eax r--data
jmp sub_41d6da
sub_42ed3e
lea ecx [ ebp - 0x20 ]
jmp sub_40a6f4
sub_42ed46
mov eax r--data
jmp sub_41d6da
sub_42ed50
lea ecx [ ebp - 0x2030 ]
jmp sub_408e53
sub_42ed5b
mov eax r--data
jmp sub_41d6da
sub_42ed65
lea ecx [ ebp - 0x1c ]
jmp sub_4017e5
sub_42ed6d
mov eax r--data
jmp sub_41d6da
sub_42ed77
mov ecx [ ebp - 0x10 ]
add ecx 0x4024
jmp j_sub_40da45
sub_42ed85
mov ecx [ ebp - 0x10 ]
add ecx 0x5168
jmp sub_40a6f4
sub_42ed93
mov eax r--data
jmp sub_41d6da
sub_42ed9d
mov ecx [ ebp - 0x10 ]
add ecx 0x90
jmp sub_409f9a
sub_42edab
mov ecx [ ebp - 0x10 ]
add ecx 0xa4
jmp sub_409f9a
sub_42edb9
mov ecx [ ebp - 0x10 ]
add ecx 0xb8
jmp sub_409f9a
sub_42edc7
push 0x10c0
push [ ebp - 0x14 ]
call sub_41c15e
pop ecx
pop ecx
retn
sub_42edd7
push 0x10c0
push [ ebp - 0x14 ]
call sub_41c15e
pop ecx
pop ecx
retn
sub_42ede7
mov eax r--data
jmp sub_41d6da
sub_42edf1
lea ecx [ ebp - 0x1048 ]
jmp sub_408e53
sub_42edfc
mov eax r--data
jmp sub_41d6da
sub_42ee06
push 0x1b8
push [ ebp - 0x10 ]
call sub_41c15e
pop ecx
pop ecx
retn
sub_42ee16
push 0x1b8
push [ ebp - 0x10 ]
call sub_41c15e
pop ecx
pop ecx
retn
sub_42ee26
mov eax r--data
jmp sub_41d6da
sub_42ee30
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_409e4c
sub_42ee3b
mov ecx [ ebp - 0x10 ]
add ecx 0x24
jmp sub_40a6f4
sub_42ee46
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_40a6f4
sub_42ee51
mov ecx [ ebp - 0x10 ]
add ecx 0x44
jmp sub_40a6f4
sub_42ee5c
mov ecx [ ebp - 0x10 ]
add ecx 0x4b38
jmp j_sub_412c25
sub_42ee6a
mov ecx [ ebp - 0x10 ]
add ecx 0x98d0
jmp sub_410368
sub_42ee78
mov ecx [ ebp - 0x10 ]
add ecx 0xe65c
jmp sub_40b2f9
sub_42ee86
mov ecx [ ebp - 0x10 ]
add ecx 0xe694
jmp sub_409e4c
sub_42ee94
mov ecx [ ebp - 0x10 ]
add ecx 0xe6a4
jmp sub_40a6f4
sub_42eea2
mov ecx [ ebp - 0x10 ]
add ecx 0xe6b4
jmp sub_40a6f4
sub_42eeb0
mov ecx [ ebp - 0x10 ]
add ecx 0xe6c4
jmp sub_40a6f4
sub_42eebe
mov eax r--data
jmp sub_41d6da
sub_42eec8
lea ecx [ ebp - 0x3c ]
jmp sub_40a6f4
sub_42eed0
mov eax r--data
jmp sub_41d6da
sub_42ef05
mov eax r--data
jmp sub_41d6da
sub_42ef0f
lea ecx [ ebp - 0x2c ]
jmp sub_40a6f4
sub_42ef17
mov eax r--data
jmp sub_41d6da
sub_42ef21
lea ecx [ ebp - 0x28 ]
jmp sub_40a6f4
sub_42ef29
mov eax r--data
jmp sub_41d6da
sub_42ef33
lea ecx [ ebp - 0x7d58 ]
jmp sub_401774
sub_42ef3e
lea ecx [ ebp - 0x20 ]
jmp sub_40a6f4
sub_42ef46
mov eax r--data
jmp sub_41d6da
sub_42ef50
lea ecx [ ebp - 0x3188 ]
jmp sub_408e53
sub_42ef5b
mov eax r--data
jmp sub_41d6da
sub_42ef65
lea ecx [ ebp - 0x8c8c ]
jmp sub_409b53
sub_42ef70
mov eax r--data
jmp sub_41d6da
sub_42ef7a
lea ecx [ ebp - 0x2108 ]
jmp sub_407611
sub_42ef85
mov eax r--data
jmp sub_41d6da
sub_42ef8f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_41cabf
mov eax r--data
jmp sub_41d6da
sub_42efaa
mov ecx rw-data
jmp sub_40c45a
sub_42efb4
mov ecx rw-data
jmp sub_40d9b2
sub_42efbe
push rw-data
call [ DeleteCriticalSection@IAT ]
retn
sub_42efca
mov ecx rw-data
jmp j_sub_40da45
sub_42efd4
mov ecx rw-data
jmp j_sub_40da45
sub_42efde
mov ecx rw-data
jmp sub_4185e6
