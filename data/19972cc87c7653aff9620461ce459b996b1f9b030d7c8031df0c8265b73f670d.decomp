sub_401000
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
jne r-xdata
push esi
mov esi [ eax + 0x8 ]
push edi
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
push 0x10
call sub_402206
add esp 0x4
mov [ rw-data ] eax
test eax eax
jne r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp [ esi ] 0x0
je r-xdata
mov [ eax + 0x4 ] 0x0
mov [ eax ] 0x0
mov [ eax + 0xc ] 0x0
mov [ eax + 0x8 ] eax
pop ebp
retn
mov esi edi
mov edi [ esi + 0xc ]
test edi edi
jne r-xdata
mov edx [ esi + 0x4 ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x8 ]
sbb eax eax
sbb eax 0xffffffff
test al al
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
xor eax eax
jmp r-xdata
mov al [ ecx + 0x1 ]
cmp al [ edx + 0x1 ]
jne r-xdata
test eax eax
je r-xdata
add ecx 0x2
add edx 0x2
test al al
jne r-xdata
mov al [ ecx ]
cmp al [ edx ]
jne r-xdata
sub_4010a0
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
call sub_401000
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ eax ]
xor ecx ebp
call sub_4021bd
mov esp ebp
pop ebp
retn
push 0x5289f207
mov [ ebp - 0x2b ] al
call sub_40229a
mov eax edi
add esp 0x4
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
shr eax 0x1
push esi
lea esi [ eax + 0x1 ]
mov eax edi
mov [ ebp - 0x34 ] esi
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
test al 0x1
je r-xdata
push esi
call sub_402206
add esp 0x4
mov [ ebp - 0x30 ] eax
test eax eax
jne r-xdata
mov eax edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4021bd
mov esp ebp
pop ebp
retn
mov [ eax ] 0x0
mov eax edi
xor esi esi
lea edx [ eax + 0x1 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4021bd
mov esp ebp
pop ebp
retn
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push ebx
je r-xdata
mov eax edi
lea edx [ eax + 0x1 ]
mov bl [ edi + esi + 0x1 ]
cmp bl 0x30
jl r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
call sub_402206
mov esi [ rw-data ]
mov ecx [ ebp - 0x30 ]
add esp 0x4
mov [ esi + 0x4 ] eax
mov [ esi ] ecx
test eax eax
jne r-xdata
sub bl 0x57
cmp bl 0x39
jg r-xdata
xor ecx ecx
mov [ esi ] eax
pop ebx
mov eax ecx
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4021bd
mov esp ebp
pop ebp
retn
sub al 0x57
cmp al 0x39
jg r-xdata
sub bl 0x30
jmp r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ebx
cmp ecx eax
jbe r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
cmp esi eax
jb r-xdata
sub al 0x30
jmp r-xdata
mov al [ edi + esi ]
cmp al 0x30
jl r-xdata
mov eax [ esi + 0x4 ]
mov dl [ edi + ecx ]
mov [ ecx + eax ] dl
mov eax edi
inc ecx
lea ebx [ eax + 0x1 ]
push 0x10
call sub_402206
mov ecx [ esi + 0x8 ]
mov [ esi + 0xc ] eax
mov [ eax + 0x8 ] ecx
mov esi [ esi + 0xc ]
add esp 0x4
xor eax eax
mov [ esi + 0xc ] eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x30 ]
pop ebx
mov [ rw-data ] esi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4021bd
mov esp ebp
pop ebp
retn
shl al 0x4
add bl al
call sub_4022ac
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x30 ]
sub bl al
lea eax [ ebp - 0x2c ]
push eax
push ecx
push edx
mov [ ebp - 0x2c ] bl
call sub_4022cd
mov eax edi
add esp 0xc
add esi 0x2
lea edx [ eax + 0x1 ]
sub_401250
push ebx
push esi
push edi
mov edi eax
call sub_4010a0
push 0x0
push 0x0
push 0xffffffff
mov esi eax
push esi
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov edi eax
lea eax [ edi + edi ]
push eax
call sub_402206
add esp 0x4
push edi
mov ebx eax
push ebx
push 0xffffffff
push esi
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
push esi
call sub_4021cc
add esp 0x4
pop edi
pop esi
mov eax ebx
pop ebx
retn
sub_4012b0
push ebp
mov ebp esp
sub esp 0x1c
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ LoadStringW@IAT ]
push 0x64
push rw-data
push 0x67
push esi
call edi
push 0x64
push rw-data
push 0x6d
push esi
call edi
push esi
call sub_401360
add esp 0x4
test eax eax
jne r-xdata
push 0x6d
push esi
call [ LoadAcceleratorsW@IAT ]
mov esi eax
call sub_401400
mov edi [ GetMessageW@IAT ]
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call edi
test eax eax
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
push ebx
mov ebx [ TranslateAcceleratorW@IAT ]
jmp r-xdata
mov edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x1c ]
push ecx
push esi
push edx
call ebx
test eax eax
jne r-xdata
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x1c ]
push edx
call edi
test eax eax
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ TranslateMessage@IAT ]
lea ecx [ ebp - 0x1c ]
push ecx
call [ DispatchMessageW@IAT ]
pop ebx
sub_401360
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi r--data
mov [ rw-data ] eax
call sub_4010a0
push 0x0
push 0x0
push 0xffffffff
mov esi eax
push esi
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov edi eax
lea ecx [ edi + edi ]
push ecx
call sub_402206
add esp 0x4
push edi
mov ebx eax
push ebx
push 0xffffffff
push esi
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
push esi
call sub_4021cc
mov edx [ ebp + 0x8 ]
add esp 0x4
push 0x0
push edx
push 0x0
push 0x0
push 0x0
push 0x80000000
push 0x0
push 0x80000000
push 0xcf0000
push 0x0
push ebx
push 0x0
call [ CreateWindowExW@IAT ]
pop edi
pop esi
pop ebx
test eax eax
jne r-xdata
push eax
call [ UpdateWindow@IAT ]
mov eax 0x1
pop ebp
retn
pop ebp
retn
sub_401400
push ebp
mov ebp esp
mov eax 0x14d0
call sub_4074a0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push 0x0
call sub_402f17
push eax
call sub_40229a
add esp 0x8
call sub_4022ac
push 0x0
mov [ ebp - 0x14c8 ] 0x0
mov [ ebp - 0x14c4 ] 0x1
call [ GetModuleHandleW@IAT ]
push r--data
push 0x81
push eax
call [ FindResourceW@IAT ]
mov esi eax
test esi esi
jne r-xdata
push ebx
push esi
push 0x0
call [ LoadResource@IAT ]
push eax
mov [ ebp - 0x14d0 ] eax
call [ LockResource@IAT ]
push esi
push 0x0
mov ebx eax
call [ SizeofResource@IAT ]
mov esi eax
test esi esi
jne r-xdata
or eax 0xffffffff
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4021bd
mov esp ebp
pop ebp
retn
push esi
call sub_402206
push esi
mov edi eax
push ebx
push edi
call sub_406d20
add esp 0x10
mov eax esi
mov ecx edi
call sub_402180
push 0x104
lea eax [ ebp - 0x780 ]
push eax
push 0x0
sub esi 0x5
call [ GetModuleFileNameW@IAT ]
push 0x111
lea ecx [ ebp - 0x1270 ]
push ecx
push 0x127
lea edx [ ebp - 0x14c0 ]
push edx
push 0x11b
lea eax [ ebp - 0xe1c ]
push eax
push 0x12
lea ecx [ ebp - 0x4c ]
push ecx
lea edx [ ebp - 0x780 ]
push edx
call sub_40233a
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x578 ]
push 0x121
push ecx
call sub_402eb4
lea edx [ ebp - 0xe1c ]
push edx
lea eax [ ebp - 0x578 ]
push 0x121
push eax
call sub_402e3f
add esp 0x3c
call sub_4022ac
lea ecx [ ebp - 0x26c ]
push ecx
push eax
push 0x0
lea edx [ ebp - 0x578 ]
push edx
call [ GetTempFileNameW@IAT ]
push 0x117
lea eax [ ebp - 0x104c ]
push eax
push 0x11e
lea ecx [ ebp - 0xbe4 ]
push ecx
push 0x113
lea edx [ ebp - 0x9a8 ]
push edx
push 0x11
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x26c ]
push ecx
call sub_40233a
lea edx [ ebp - 0x28 ]
push edx
lea eax [ ebp - 0x26c ]
push 0x110
push eax
call sub_402eb4
lea ecx [ ebp - 0x9a8 ]
push ecx
lea edx [ ebp - 0x26c ]
push 0x110
push edx
call sub_402e3f
lea eax [ ebp - 0xbe4 ]
push eax
lea ecx [ ebp - 0x26c ]
push 0x110
push ecx
call sub_402e3f
add esp 0x48
mov eax r--data
call sub_401250
push eax
lea edx [ ebp - 0x26c ]
push 0x110
push edx
call sub_402e3f
add esp 0xc
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0x120116
lea eax [ ebp - 0x26c ]
push eax
call [ CreateFileW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop ebx
xor ecx ebp
or eax 0xffffffff
pop esi
call sub_4021bd
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14c4 ] 0x0
push 0x0
lea ecx [ ebp - 0x14c8 ]
push ecx
push esi
lea edx [ edi + 0x5 ]
push edx
push ebx
call [ WriteFile@IAT ]
push edi
mov [ ebp - 0x14cc ] eax
call sub_4021cc
add esp 0x4
cmp [ ebp - 0x14cc ] 0x0
je r-xdata
call sub_401870
lea edx [ ebp - 0x334 ]
push edx
lea ecx [ ebp - 0x26c ]
call sub_4016c0
add esp 0x4
cmp [ ebp - 0x14c8 ] esi
je r-xdata
mov eax [ ebp - 0x14d0 ]
push eax
call [ FreeResource@IAT ]
push ebx
call [ CloseHandle@IAT ]
push 0x63
push r--data
push 0x64
lea ecx [ ebp - 0x334 ]
push ecx
push 0x0
call sub_402e1f
add esp 0x14
cmp [ ebp - 0x14c4 ] 0x1
jne r-xdata
sub_4016c0
push ebp
mov ebp esp
sub esp 0x250
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push r--data
mov esi ecx
lea ecx [ ebp - 0x248 ]
push 0x121
push ecx
mov [ ebp - 0x24c ] eax
call sub_402eb4
push esi
lea edx [ ebp - 0x248 ]
push 0x121
push edx
call sub_402e3f
push r--data
lea eax [ ebp - 0x248 ]
push 0x121
push eax
call sub_402e3f
add esp 0x24
mov edi r--data
call sub_4010a0
mov esi [ MultiByteToWideChar@IAT ]
push 0x0
push 0x0
push 0xffffffff
mov edi eax
push edi
push 0x0
push 0xfde9
call esi
mov ebx eax
lea ecx [ ebx + ebx ]
push ecx
call sub_402206
add esp 0x4
push ebx
push eax
push 0xffffffff
push edi
push 0x0
push 0xfde9
mov [ ebp - 0x250 ] eax
call esi
push edi
call sub_4021cc
mov edx [ ebp - 0x250 ]
push edx
lea eax [ ebp - 0x248 ]
push 0x121
push eax
call sub_402e3f
mov ecx [ ebp - 0x24c ]
push ecx
lea edx [ ebp - 0x248 ]
push 0x121
push edx
call sub_402e3f
add esp 0x1c
mov edi r--data
call sub_4010a0
push 0x0
push 0x0
push 0xffffffff
mov edi eax
push edi
push 0x0
push 0xfde9
call esi
mov ebx eax
lea eax [ ebx + ebx ]
push eax
call sub_402206
add esp 0x4
push ebx
push eax
push 0xffffffff
mov [ ebp - 0x24c ] eax
push edi
push 0x0
push 0xfde9
call esi
push edi
call sub_4021cc
add esp 0x4
mov edi r--data
call sub_4010a0
push 0x0
push 0x0
push 0xffffffff
mov edi eax
push edi
push 0x0
push 0xfde9
call esi
mov ebx eax
lea ecx [ ebx + ebx ]
push ecx
call sub_402206
add esp 0x4
push ebx
push eax
push 0xffffffff
push edi
push 0x0
push 0xfde9
mov [ ebp - 0x250 ] eax
call esi
push edi
call sub_4021cc
mov eax [ ebp - 0x24c ]
mov ecx [ ebp - 0x250 ]
add esp 0x4
push 0x0
push 0x0
lea edx [ ebp - 0x248 ]
push edx
push eax
push ecx
push 0x0
call [ ShellExecuteW@IAT ]
mov ecx [ ebp - 0x4 ]
xor edx edx
cmp eax 0x20
setle dl
pop edi
pop esi
xor ecx ebp
pop ebx
mov eax edx
call sub_4021bd
mov esp ebp
pop ebp
retn
sub_401870
push ebp
mov ebp esp
mov eax 0x28c8
call sub_4074a0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push 0x0
call sub_402f17
push eax
call sub_40229a
add esp 0x8
call sub_4022ac
push 0x104
lea eax [ ebp - 0x1e0c ]
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
push 0x112
lea ecx [ ebp - 0x2030 ]
push ecx
push 0x11c
lea edx [ ebp - 0x19b4 ]
push edx
push 0x109
lea eax [ ebp - 0x177c ]
push eax
push 0xa
lea ecx [ ebp - 0x24 ]
push ecx
lea edx [ ebp - 0x1e0c ]
push edx
call sub_40233a
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x1bbc ]
push 0x104
push ecx
call sub_402eb4
lea edx [ ebp - 0x177c ]
push edx
lea eax [ ebp - 0x1bbc ]
push 0x104
push eax
call sub_402e3f
add esp 0x3c
lea ecx [ ebp - 0xecc ]
push ecx
push 0xf4
call [ GetTempPathW@IAT ]
call sub_4022ac
lea edx [ ebp - 0x2238 ]
push edx
push eax
push 0x0
lea eax [ ebp - 0xecc ]
push eax
call [ GetTempFileNameW@IAT ]
push 0x117
lea ecx [ ebp - 0x28b8 ]
push ecx
push 0x117
lea edx [ ebp - 0x1568 ]
push edx
push 0x10b
lea eax [ ebp - 0x2450 ]
push eax
push 0x5
lea ecx [ ebp - 0x10 ]
push ecx
lea edx [ ebp - 0x2238 ]
push edx
call sub_40233a
add esp 0x24
mov edi r--data
call sub_4010a0
push 0x0
push 0x0
push 0xffffffff
mov edi eax
push edi
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov ebx eax
lea eax [ ebx + ebx ]
push eax
call sub_402206
add esp 0x4
push ebx
mov esi eax
push esi
push 0xffffffff
push edi
xor ebx ebx
push ebx
push 0xfde9
call [ MultiByteToWideChar@IAT ]
push edi
call sub_4021cc
lea ecx [ ebp - 0x10 ]
push ecx
lea edx [ ebp - 0x69c ]
push 0x12a
push edx
call sub_402eb4
lea eax [ ebp - 0x2450 ]
push eax
lea ecx [ ebp - 0x69c ]
push 0x12a
push ecx
call sub_402e3f
lea edx [ ebp - 0x1568 ]
push edx
lea eax [ ebp - 0x69c ]
push 0x12a
push eax
call sub_402e3f
push esi
lea ecx [ ebp - 0x69c ]
push 0x12a
push ecx
call sub_402e3f
lea edx [ ebp - 0x1568 ]
push edx
lea eax [ ebp - 0x1338 ]
push 0x109
push eax
call sub_402eb4
add esp 0x40
push esi
lea ecx [ ebp - 0x1338 ]
push 0x109
push ecx
call sub_402e3f
lea edx [ ebp - 0x19b4 ]
push edx
lea eax [ ebp - 0x1124 ]
push 0x12b
push eax
mov [ ebp - 0x28c0 ] ebx
call sub_402eb4
push esi
lea ecx [ ebp - 0x1124 ]
push 0x12b
push ecx
call sub_402e3f
lea edx [ ebp - 0x19b4 ]
push edx
lea eax [ ebp - 0xce0 ]
push 0x109
push eax
call sub_402eb4
lea ecx [ ebp - 0x2030 ]
push ecx
lea edx [ ebp - 0xce0 ]
push 0x109
push edx
call sub_402e3f
push 0x104
lea eax [ ebp - 0x1e0c ]
push eax
push 0x104
lea ecx [ ebp - 0x7a4 ]
mov [ ebp - 0x28bc ] 0x1
push ecx
push ebx
call sub_402b9d
add esp 0x50
test eax eax
je r-xdata
push 0x104
lea edx [ ebp - 0x1338 ]
push edx
push 0x104
lea eax [ ebp - 0x8ac ]
push eax
push ebx
call sub_402b9d
mov esi [ lstrcatA@IAT ]
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0x28bc ] ebx
cmp [ ebp - 0x28bc ] ebx
je r-xdata
mov [ ebp - 0x28bc ] ebx
jmp r-xdata
push ebx
push ebx
call sub_402688
add esp 0x8
mov edi eax
mov [ ebp - 0x28c4 ] ebx
cmp [ ebp - 0x28bc ] ebx
je r-xdata
push ebx
push 0x80
push 0x2
push ebx
push ebx
push 0x120116
lea ecx [ ebp - 0x69c ]
push ecx
call [ CreateFileW@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
push edi
call sub_4021cc
add esp 0x4
cmp [ ebp - 0x28c4 ] 0x20
jle r-xdata
lea edx [ ebp - 0xecc ]
push edx
call sub_4026d1
add esp 0x4
push ebx
push ebx
push ebx
lea eax [ ebp - 0x69c ]
push eax
push ebx
push ebx
call [ ShellExecuteW@IAT ]
push edi
mov [ ebp - 0x28c4 ] eax
call sub_4026d1
add esp 0x4
mov edi r--data
call sub_4010a0
push eax
lea edx [ ebp - 0x448 ]
push edx
call [ lstrcpyA@IAT ]
push 0x0
lea eax [ ebp - 0x28c0 ]
push eax
lea ecx [ ebp - 0x448 ]
push ecx
call [ lstrlenA@IAT ]
push eax
lea edx [ ebp - 0x448 ]
push edx
push ebx
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x28bc ] 0x0
lea ecx [ ebp - 0x69c ]
push ecx
call [ DeleteFileW@IAT ]
lea edx [ ebp - 0x24 ]
push edx
lea eax [ ebp - 0x69c ]
push 0x12a
push eax
mov [ ebp - 0x28bc ] 0x1
call sub_402eb4
lea ecx [ ebp - 0x177c ]
push ecx
lea edx [ ebp - 0x69c ]
push 0x12a
push edx
call sub_402e3f
push ebx
push ebx
call sub_402688
mov [ ebp - 0x28c8 ] eax
lea eax [ ebp - 0x69c ]
push eax
call sub_4026d1
lea ecx [ ebp - 0x1124 ]
push ecx
lea edx [ ebp - 0x69c ]
push 0x12a
push edx
call sub_402e3f
push 0x104
lea eax [ ebp - 0xce0 ]
push eax
push 0x104
lea ecx [ ebp - 0x7a4 ]
push ecx
push ebx
call sub_402b9d
add esp 0x44
test eax eax
je r-xdata
cmp [ ebp - 0x28bc ] 0x1
jne r-xdata
mov edi r--data
call sub_4010a0
push eax
lea eax [ ebp - 0x448 ]
push eax
call [ lstrcpyA@IAT ]
push r--data
lea ecx [ ebp - 0x448 ]
push ecx
call esi
lea edx [ ebp - 0x7a4 ]
push edx
lea eax [ ebp - 0x448 ]
push eax
call esi
push r--data
lea ecx [ ebp - 0x448 ]
push ecx
call esi
push r--data
lea edx [ ebp - 0x448 ]
push edx
call esi
push 0x0
lea eax [ ebp - 0x28c0 ]
push eax
lea ecx [ ebp - 0x448 ]
push ecx
call [ lstrlenA@IAT ]
push eax
lea edx [ ebp - 0x448 ]
push edx
push ebx
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x28bc ] eax
push 0x104
lea edx [ ebp - 0x1124 ]
push edx
push 0x104
lea eax [ ebp - 0x8ac ]
push eax
push ebx
call sub_402b9d
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0x28bc ] ebx
push ebx
call [ ExitProcess@IAT ]
mov edi r--data
call sub_4010a0
push eax
lea eax [ ebp - 0x448 ]
push eax
call [ lstrcpyA@IAT ]
push r--data
lea ecx [ ebp - 0x448 ]
push ecx
call esi
lea edx [ ebp - 0x7a4 ]
push edx
lea eax [ ebp - 0x448 ]
push eax
call esi
push r--data
lea ecx [ ebp - 0x448 ]
push ecx
call esi
mov edi r--data
call sub_4010a0
push eax
lea edx [ ebp - 0x448 ]
push edx
call esi
push 0x0
lea eax [ ebp - 0x28c0 ]
push eax
lea ecx [ ebp - 0x448 ]
push ecx
call [ lstrlenA@IAT ]
push eax
lea edx [ ebp - 0x448 ]
push edx
push ebx
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x28bc ] eax
cmp [ ebp - 0x28bc ] ebx
je r-xdata
mov [ ebp - 0x28bc ] ebx
jmp r-xdata
mov edi r--data
call sub_4010a0
push eax
lea eax [ ebp - 0x448 ]
push eax
call [ lstrcpyA@IAT ]
push r--data
lea ecx [ ebp - 0x448 ]
push ecx
call esi
lea edx [ ebp - 0x8ac ]
push edx
lea eax [ ebp - 0x448 ]
push eax
call esi
push r--data
lea ecx [ ebp - 0x448 ]
push ecx
call esi
push 0x0
lea edx [ ebp - 0x28c0 ]
push edx
lea eax [ ebp - 0x448 ]
push eax
call [ lstrlenA@IAT ]
push eax
lea ecx [ ebp - 0x448 ]
push ecx
push ebx
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x28bc ] eax
cmp [ ebp - 0x28c4 ] 0x20
jg r-xdata
push ebx
push 0x80
push 0x2
push ebx
push ebx
push 0x120116
lea ecx [ ebp - 0x69c ]
push ecx
call [ CreateFileW@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
push ebx
call [ CloseHandle@IAT ]
xor ebx ebx
mov [ ebp - 0x28bc ] eax
mov esi [ ebp - 0x28c8 ]
push esi
call sub_4026d1
push esi
call sub_4021cc
add esp 0x8
cmp [ ebp - 0x28bc ] 0x1
push ebx
jne r-xdata
mov [ ebp - 0x28bc ] ebx
mov edi r--data
call sub_4010a0
push eax
lea edx [ ebp - 0x448 ]
push edx
call [ lstrcpyA@IAT ]
push 0x0
lea eax [ ebp - 0x28c0 ]
push eax
lea ecx [ ebp - 0x448 ]
push ecx
call [ lstrlenA@IAT ]
push eax
lea edx [ ebp - 0x448 ]
push edx
push ebx
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x28bc ] 0x0
push ebx
call sub_402688
mov edi eax
lea eax [ ebp - 0x1bbc ]
push eax
call sub_4026d1
add esp 0xc
mov eax r--data
call sub_401250
lea ecx [ ebp - 0x69c ]
push ecx
mov esi eax
call [ DeleteFileW@IAT ]
push esi
lea edx [ ebp - 0xacc ]
push 0x10f
push edx
call sub_402eb4
lea eax [ ebp - 0xce0 ]
push eax
lea ecx [ ebp - 0xacc ]
push 0x10f
push ecx
call sub_402e3f
mov eax r--data
call sub_401250
push eax
lea edx [ ebp - 0xacc ]
push 0x10f
push edx
call sub_402e3f
add esp 0x24
mov eax r--data
call sub_401250
push 0x104
lea ecx [ ebp - 0x2688 ]
push ecx
push eax
call [ GetEnvironmentVariableW@IAT ]
test eax eax
je r-xdata
call [ ExitProcess@IAT ]
mov edi r--data
call sub_4010a0
push eax
lea eax [ ebp - 0x448 ]
push eax
call [ lstrcpyA@IAT ]
push r--data
lea ecx [ ebp - 0x448 ]
push ecx
call esi
lea edx [ ebp - 0x7a4 ]
push edx
lea eax [ ebp - 0x448 ]
push eax
call esi
push r--data
lea ecx [ ebp - 0x448 ]
push ecx
call esi
push r--data
lea edx [ ebp - 0x448 ]
push edx
call esi
push 0x0
lea eax [ ebp - 0x28c0 ]
push eax
lea ecx [ ebp - 0x448 ]
push ecx
call [ lstrlenA@IAT ]
push eax
lea edx [ ebp - 0x448 ]
push edx
push ebx
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x28bc ] eax
push edi
call sub_4026d1
push edi
call sub_4021cc
add esp 0x8
push ebx
call [ ExitProcess@IAT ]
push ebx
push ebx
lea edx [ ebp - 0xacc ]
push edx
lea eax [ ebp - 0x2688 ]
push eax
push ebx
push ebx
call [ ShellExecuteW@IAT ]
mov edi r--data
call sub_4010a0
push eax
lea eax [ ebp - 0x448 ]
push eax
call [ lstrcpyA@IAT ]
push r--data
lea ecx [ ebp - 0x448 ]
push ecx
call esi
lea edx [ ebp - 0x7a4 ]
push edx
lea eax [ ebp - 0x448 ]
push eax
call esi
push r--data
lea ecx [ ebp - 0x448 ]
push ecx
call esi
mov edi r--data
call sub_4010a0
push eax
lea edx [ ebp - 0x448 ]
push edx
call esi
push 0x0
lea eax [ ebp - 0x28c0 ]
push eax
lea ecx [ ebp - 0x448 ]
push ecx
call [ lstrlenA@IAT ]
push eax
lea edx [ ebp - 0x448 ]
push edx
push ebx
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x28bc ] eax
mov edi r--data
call sub_4010a0
push eax
lea eax [ ebp - 0x448 ]
push eax
call [ lstrcpyA@IAT ]
push r--data
lea ecx [ ebp - 0x448 ]
push ecx
call esi
lea edx [ ebp - 0x8ac ]
push edx
lea eax [ ebp - 0x448 ]
push eax
call esi
push r--data
lea ecx [ ebp - 0x448 ]
push ecx
call esi
push 0x0
lea edx [ ebp - 0x28c0 ]
push edx
lea eax [ ebp - 0x448 ]
push eax
call [ lstrlenA@IAT ]
push eax
lea ecx [ ebp - 0x448 ]
push ecx
push ebx
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x28bc ] eax
push ebx
call [ CloseHandle@IAT ]
cmp [ ebp - 0x28bc ] 0x0
je r-xdata
mov [ ebp - 0x28bc ] eax
xor ebx ebx
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x69c ]
push edx
push 0x0
push 0x0
call [ ShellExecuteW@IAT ]
mov [ ebp - 0x28c4 ] eax
sub_402180
push esi
push edi
mov edi eax
mov esi ecx
xor ecx ecx
test edi edi
je r-xdata
pop edi
pop esi
retn
push ebx
lea ecx [ ecx ]
mov eax 0x66666667
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
lea edx [ eax + eax * 4 ]
mov ebx ecx
sub ebx edx
mov dl [ ebx + rw-data ]
xor dl [ esi ]
inc esi
xor dl al
mov [ esi - 0x1 ] dl
inc ecx
dec edi
jne r-xdata
pop ebx
sub_4021cc
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_403250
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40320e
pop ecx
mov [ esi ] eax
pop esi
sub_402206
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_4037bf
pop ecx
call sub_403250
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_403777
push 0x1e
call sub_4035c8
push 0xff
call sub_4032e2
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_403250
mov [ eax ] esi
push ebx
call sub_4037bf
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
call sub_403250
mov [ eax ] esi
sub_4022cd
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
push edi
test ecx ecx
je r-xdata
call sub_403250
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi ecx
mov [ ecx ] 0x0
jmp r-xdata
test edi edi
je r-xdata
inc esi
dec edi
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] 0x0
call sub_403250
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ edx ]
mov [ esi + edx ] al
inc edx
test al al
je r-xdata
call sub_403de5
mov eax esi
jmp r-xdata
sub_40233a
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
xor edx edx
push esi
push edi
mov [ ebp - 0x4 ] edx
cmp ecx edx
je r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov edi [ ebp + 0xc ]
cmp edi edx
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax edx
je r-xdata
cmp [ ebp + 0x10 ] edx
je r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
mov eax [ ebp + 0x14 ]
cmp eax edx
je r-xdata
cmp [ ebp + 0x10 ] edx
jbe r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x1c ]
cmp eax edx
je r-xdata
cmp [ ebp + 0x18 ] edx
jbe r-xdata
xor esi esi
mov [ eax ] si
cmp [ ebp + 0x18 ] edx
je r-xdata
cmp [ ebp + 0x18 ] edx
jne r-xdata
mov eax [ ebp + 0x24 ]
cmp eax edx
je r-xdata
cmp [ ebp + 0x20 ] edx
jbe r-xdata
xor esi esi
mov [ eax ] si
cmp [ ebp + 0x1c ] edx
jne r-xdata
jmp r-xdata
cmp ecx edx
jne r-xdata
cmp [ ebp + 0x28 ] edx
jbe r-xdata
xor esi esi
mov [ eax ] si
cmp [ ebp + 0x20 ] edx
je r-xdata
cmp [ ebp + 0x20 ] edx
jne r-xdata
cmp [ ebp - 0x4 ] edx
jne r-xdata
call sub_403250
push 0x16
pop esi
mov [ eax ] esi
call sub_403de5
mov eax esi
jmp r-xdata
xor esi esi
mov [ eax ] si
cmp [ ebp + 0x24 ] edx
jne r-xdata
jmp r-xdata
call sub_403250
push 0x22
pop ecx
mov [ eax ] ecx
mov eax ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x28 ] edx
jne r-xdata
cmp [ ebp + 0x28 ] edx
jne r-xdata
xor eax eax
inc eax
mov esi ecx
cmp [ esi ] 0x3a
jne r-xdata
dec eax
add esi 0x2
cmp eax edx
ja r-xdata
cmp edi edx
je r-xdata
cmp edi edx
je r-xdata
cmp [ esi ] dx
je r-xdata
movzx eax [ ecx ]
xor edi edi
xor ebx ebx
mov esi ecx
cmp ax dx
je r-xdata
xor eax eax
mov [ edi ] ax
add esi 0x2
mov [ ebp + 0x8 ] esi
mov ecx esi
jmp r-xdata
cmp [ ebp + 0x10 ] 0x3
jb r-xdata
mov eax [ ebp + 0x14 ]
cmp eax edx
je r-xdata
cmp ax 0x2f
je r-xdata
push 0x2
push ecx
push [ ebp + 0x10 ]
push edi
call sub_403df5
add esp 0x10
xor edx edx
cmp ebx edx
je r-xdata
xor edi edi
mov [ eax ] di
lea edi [ esi + 0x2 ]
cmp ax 0x5c
je r-xdata
cmp [ ebp + 0x1c ] edx
je r-xdata
cmp ebx ecx
jb r-xdata
cmp edi edx
je r-xdata
cmp ax 0x2e
jne r-xdata
mov eax [ ebp + 0x24 ]
cmp eax edx
je r-xdata
sub esi ecx
sar esi 0x1
cmp [ ebp + 0x20 ] esi
jbe r-xdata
cmp [ ebp + 0x1c ] edx
je r-xdata
cmp [ ebp + 0x14 ] edx
je r-xdata
add esi 0x2
movzx eax [ esi ]
cmp ax dx
jne r-xdata
mov ebx esi
jmp r-xdata
xor eax eax
xor ecx ecx
mov [ eax ] cx
push esi
push ecx
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
call sub_403df5
add esp 0x10
xor edx edx
cmp [ ebp + 0x24 ] edx
je r-xdata
mov eax ebx
sub eax ecx
sar eax 0x1
cmp [ ebp + 0x20 ] eax
jbe r-xdata
mov [ ebp + 0x8 ] edi
mov ecx edi
jmp r-xdata
mov eax edi
sub eax ecx
sar eax 0x1
cmp [ ebp + 0x18 ] eax
jbe r-xdata
sub esi ebx
sar esi 0x1
cmp [ ebp + 0x28 ] esi
jbe r-xdata
push eax
push ecx
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
call sub_403df5
mov ecx [ ebp + 0x8 ]
add esp 0x10
xor edx edx
xor edx edx
push eax
push ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
call sub_403df5
add esp 0x10
xor edx edx
push esi
push ebx
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
call sub_403df5
add esp 0x10
jmp r-xdata
sub_40254c
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
test esi esi
je r-xdata
call sub_403f02
mov esi eax
push esi
call sub_403fd0
pop ecx
test eax eax
jne r-xdata
and [ ebp - 0x10 ] 0x0
test ebx ebx
jg r-xdata
test edi edi
je r-xdata
call sub_403263
mov [ eax ] 0xf
call sub_403250
mov [ eax ] 0xd
push 0x2e
pop eax
mov [ ebp - 0xc ] ax
xor eax eax
mov [ ebp - 0xa ] ax
push 0x3a
pop eax
mov [ ebp - 0xa ] ax
push 0x2e
pop eax
add esi 0x40
mov [ ebp - 0x8 ] ax
xor eax eax
mov [ ebp - 0xc ] si
mov [ ebp - 0x6 ] ax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] ebx
mov [ edi ] ax
jmp r-xdata
call sub_403250
mov [ eax ] 0x16
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
push eax
call sub_403276
pop ecx
test edi edi
je r-xdata
mov esi [ GetFullPathNameW@IAT ]
lea eax [ ebp - 0x14 ]
push eax
push edi
push [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
push eax
call esi
test eax eax
je r-xdata
test esi esi
je r-xdata
call sub_403de5
jmp r-xdata
cmp eax ebx
jle r-xdata
cmp eax [ ebp - 0x10 ]
jge r-xdata
push 0x2
push ebx
call sub_403ec2
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
mov ebx eax
call sub_403250
mov [ eax ] 0x22
xor eax eax
mov [ edi ] ax
jmp r-xdata
mov eax edi
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push edi
push ebx
lea eax [ ebp - 0xc ]
push eax
call esi
test eax eax
je r-xdata
call sub_403250
mov [ eax ] 0xc
call sub_403263
mov [ eax ] 0x8
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4021bd
leave
retn
cmp eax ebx
jl r-xdata
sub_402688
push 0xc
push r--data
call sub_4041e0
push 0x7
call sub_4041a4
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
call sub_40254c
add esp 0xc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4026c8
mov eax [ ebp - 0x1c ]
call sub_404225
retn
sub_4026d1
mov edi edi
push ebp
mov ebp esp
sub esp 0x220
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
and [ ebp - 0x220 ] 0x0
or [ ebp - 0x21c ] 0xffffffff
push esi
lea esi [ ebp - 0x218 ]
test eax eax
jne r-xdata
push ebx
push edi
push eax
call [ SetCurrentDirectoryW@IAT ]
test eax eax
je r-xdata
call sub_403263
and [ eax ] 0x0
call sub_403250
mov [ eax ] 0x16
call sub_403de5
or eax 0xffffffff
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call sub_403276
pop ecx
lea eax [ ebp - 0x218 ]
push eax
push 0x105
call [ GetCurrentDirectoryW@IAT ]
mov edi eax
cmp edi 0x104
jle r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_4021bd
leave
retn
mov eax [ ebp - 0x21c ]
push esi
call sub_4021cc
pop ecx
test edi edi
je r-xdata
lea ebx [ edi + 0x1 ]
push 0x2
push ebx
call sub_4044cd
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
movzx eax [ esi ]
cmp eax 0x5c
je r-xdata
mov [ ebp - 0x220 ] 0x1
test edi edi
je r-xdata
cmp ax [ esi + 0x2 ]
je r-xdata
cmp eax 0x2f
jne r-xdata
push esi
push ebx
call [ GetCurrentDirectoryW@IAT ]
mov edi eax
and [ ebp - 0x21c ] 0x0
jmp r-xdata
push 0x3d
pop eax
mov [ ebp - 0xc ] ax
movzx eax [ esi ]
push eax
call sub_404475
pop ecx
push 0x3a
mov [ ebp - 0xa ] ax
pop eax
mov [ ebp - 0x8 ] ax
xor eax eax
mov [ ebp - 0x6 ] ax
push esi
lea eax [ ebp - 0xc ]
push eax
call [ SetEnvironmentVariableW@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x220 ] 0x0
pop edi
pop ebx
je r-xdata
sub_4027fd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_403997
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_404f0b
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_40478a
mov [ esi + 0x4 ] eax
sub_402884
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x10 ] ebx
cmp edi ebx
je r-xdata
cmp esi ebx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x20 ]
call sub_4027fd
cmp edi ebx
je r-xdata
call sub_403250
mov [ eax ] 0x16
call sub_403de5
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov edi [ ebp - 0x20 ]
cmp [ edi + 0x14 ] ebx
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4021bd
leave
retn
lea ecx [ ebp - 0x10 ]
push ecx
push ebx
push ebx
push ebx
push 0xffffffff
push esi
push ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
jne r-xdata
movzx ecx [ esi ]
xor eax eax
mov edx esi
jmp r-xdata
cmp [ edi + 0xac ] 0x1
jne r-xdata
mov eax ebx
cmp [ ebp + 0x10 ] ebx
jbe r-xdata
cmp [ ebp - 0x10 ] ebx
jne r-xdata
call sub_403250
mov [ eax ] 0x2a
cmp [ ebp - 0x14 ] bl
je r-xdata
cmp cx bx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push ebx
push [ ebp + 0x10 ]
push [ ebp - 0x28 ]
push 0xffffffff
push esi
push ebx
push [ edi + 0x4 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx ebx
jbe r-xdata
cmp [ ebp - 0x14 ] bl
je r-xdata
mov ecx 0xff
cmp [ esi ] cx
ja r-xdata
dec eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
mov esi 0xff
cmp cx si
ja r-xdata
jmp r-xdata
cmp [ ebp - 0x10 ] ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push ebx
push [ ebp + 0x10 ]
push [ ebp - 0x28 ]
push [ ebp + 0x10 ]
push esi
push ebx
push [ edi + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov eax esi
mov ecx [ ebp - 0x18 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov cl [ esi ]
mov edx [ ebp - 0x28 ]
mov [ edx + eax ] cl
mov cx [ esi ]
add esi 0x2
test cx cx
je r-xdata
inc eax
add edx 0x2
movzx ecx [ edx ]
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp - 0x10 ] ebx
jne r-xdata
cmp ecx ebx
je r-xdata
add eax 0x2
dec ecx
jne r-xdata
inc eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp [ ebp + 0x10 ] ebx
jbe r-xdata
mov ecx [ ebp - 0x28 ]
cmp [ ecx + eax - 0x1 ] bl
jne r-xdata
cmp [ eax ] bx
jne r-xdata
cmp [ eax ] bx
je r-xdata
cmp [ ebp - 0x14 ] bl
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push ebx
push [ edi + 0xac ]
lea eax [ ebp - 0xc ]
push eax
push 0x1
push esi
push ebx
push [ edi + 0x4 ]
call [ WideCharToMultiByte@IAT ]
mov edx eax
mov [ ebp - 0x30 ] edx
cmp edx ebx
je r-xdata
jmp r-xdata
sub eax esi
sar eax 0x1
inc eax
mov [ ebp + 0x10 ] eax
mov eax [ ebp - 0x24 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x10 ] ebx
jne r-xdata
cmp edx ebx
jl r-xdata
cmp edx 0x5
ja r-xdata
mov eax [ ebp - 0x24 ]
lea ecx [ edx + eax ]
cmp ecx [ ebp + 0x10 ]
ja r-xdata
xor ecx ecx
mov [ ebp - 0x2c ] ecx
cmp edx ebx
jle r-xdata
add esi 0x2
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov cl [ ebp + ecx - 0xc ]
mov edx [ ebp - 0x28 ]
mov [ edx + eax ] cl
cmp cl bl
je r-xdata
mov ecx [ ebp - 0x2c ]
inc ecx
inc eax
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x24 ] eax
cmp ecx [ ebp - 0x30 ]
jl r-xdata
sub_402aeb
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
cmp edi ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp esi ebx
je r-xdata
call sub_403250
push 0x16
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
mov [ esi ] bl
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x18 ]
cmp eax edi
jbe r-xdata
mov [ eax ] ebx
cmp eax 0x7fffffff
ja r-xdata
mov eax edi
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push esi
call sub_402884
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
inc eax
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
cmp eax edi
jbe r-xdata
call sub_403250
mov eax [ eax ]
jmp r-xdata
mov [ esi ] bl
mov eax [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax + esi - 0x1 ] bl
cmp [ ebp + 0x18 ] 0xffffffff
je r-xdata
mov eax edi
mov [ ebp - 0x4 ] 0x50
mov [ esi ] bl
cmp edi eax
ja r-xdata
call sub_403250
push 0x22
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_403de5
mov eax esi
jmp r-xdata
sub_402b9d
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_402aeb
add esp 0x18
pop ebp
retn
sub_402bbd
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
push edi
xor edi edi
cmp ebx edi
je r-xdata
push esi
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_4027fd
mov eax [ ebp - 0x14 ]
cmp ebx edi
je r-xdata
call sub_403250
mov [ eax ] 0x16
call sub_403de5
jmp r-xdata
jbe r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x14 ] edi
jne r-xdata
cmp [ eax + 0x14 ] edi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
mov [ ebx ] ax
pop edi
pop ebx
leave
retn
push edi
push edi
push 0xffffffff
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
cmp eax edi
jne r-xdata
push esi
call sub_404f90
pop ecx
jmp r-xdata
push [ ebp + 0x10 ]
mov edi [ MultiByteToWideChar@IAT ]
push ebx
push 0xffffffff
push esi
push 0x9
push [ eax + 0x4 ]
call edi
test eax eax
jne r-xdata
mov eax edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
pop esi
dec eax
call sub_403250
mov [ eax ] 0x2a
cmp [ ebp - 0x8 ] 0x0
cmp [ ebp - 0x8 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
movzx ecx [ eax + esi ]
mov [ ebx ] cx
cmp [ eax + esi ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
call sub_403250
mov [ eax ] 0x2a
xor eax eax
cmp [ ebp - 0x8 ] al
mov [ ebx ] ax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
inc eax
add ebx 0x2
cmp eax [ ebp + 0x10 ]
jb r-xdata
je r-xdata
push [ ebp + 0x10 ]
sub esi [ ebp + 0xc ]
mov eax [ ebp - 0x14 ]
push ebx
push esi
push [ ebp + 0xc ]
push 0x1
push [ eax + 0x4 ]
call edi
test eax eax
jne r-xdata
mov al [ esi ]
dec [ ebp + 0x8 ]
test al al
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
movzx eax al
push ecx
push eax
call sub_40501b
pop ecx
pop ecx
test eax eax
je r-xdata
inc esi
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
inc esi
cmp [ esi ] 0x0
je r-xdata
sub_402d1f
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp esi ebx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
ja r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
xor eax eax
mov [ esi ] ax
call sub_403250
push 0x16
pop esi
mov [ eax ] esi
call sub_403de5
mov eax esi
jmp r-xdata
push edi
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
jmp r-xdata
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x14 ]
call sub_4027fd
mov eax [ ebp + 0x18 ]
cmp eax [ ebp + 0x10 ]
jbe r-xdata
mov [ edi ] ebx
pop esi
pop ebx
leave
retn
cmp eax 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0x14 ]
push ecx
push eax
push [ ebp + 0x14 ]
push esi
call sub_402bbd
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
call sub_403250
push 0x16
jmp r-xdata
inc eax
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
pop esi
mov [ eax ] esi
call sub_403de5
cmp [ ebp - 0x8 ] bl
je r-xdata
cmp edi ebx
je r-xdata
cmp eax [ ebp + 0x10 ]
jbe r-xdata
call sub_403250
mov eax [ eax ]
cmp [ ebp - 0x8 ] bl
je r-xdata
xor eax eax
mov [ esi ] ax
mov eax esi
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x8 ] bl
je r-xdata
mov [ edi ] eax
xor ecx ecx
mov [ esi + eax * 2 - 0x2 ] cx
cmp [ ebp + 0x18 ] 0xffffffff
je r-xdata
pop edi
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x50
xor eax eax
mov [ esi ] ax
call sub_403250
push 0x22
sub_402e1f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_402d1f
add esp 0x18
pop ebp
retn
sub_402e3f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_403250
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_403250
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_403de5
mov eax esi
sub_402eb4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_403250
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_403250
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_403de5
mov eax esi
sub_402f17
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
push 0x0
add eax 0x2ac18000
push 0x989680
adc ecx 0xfe624e21
push ecx
push eax
call sub_405060
cmp edx 0x7
jl r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
jg r-xdata
leave
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
or eax 0xffffffff
mov edx eax
cmp eax 0x93406fff
jbe r-xdata
sub_402f91
push 0x58
push r--data
call sub_4041e0
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoW@IAT ]
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
push esi
push esi
push 0x1
push esi
call [ HeapSetInformation@IAT ]
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_403299
test eax eax
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_403ae0
test eax eax
jne r-xdata
push 0x1c
call sub_402f68
xor ecx ecx
cmp [ eax + __coff_header ] esi
setne cl
mov [ ebp - 0x1c ] ecx
call sub_405825
mov [ ebp - 0x4 ] esi
call sub_4055e0
test eax eax
jns r-xdata
push 0x10
call sub_402f68
call [ GetCommandLineW@IAT ]
mov [ rw-data ] eax
call sub_405588
mov [ rw-data ] eax
call sub_4054da
test eax eax
jns r-xdata
push 0x1b
call sub_403584
call sub_4052a8
test eax eax
jns r-xdata
push 0x8
call sub_403584
push 0x1
call sub_403363
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_403584
call sub_405262
test [ ebp - 0x3c ] 0x1
je r-xdata
push eax
call sub_403584
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_403566
jmp sub_4030ee
push eax
call sub_40353a
push ecx
push eax
push esi
push __dos_header
call sub_4012b0
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
sub_403108
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_40590c
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_40590c
pop ecx
sub_40320e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_403276
mov edi edi
push ebp
mov ebp esp
push esi
call sub_403263
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_40320e
pop ecx
mov esi eax
call sub_403250
mov [ eax ] esi
pop esi
pop ebp
retn
sub_4032b7
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_40330c
mov edi edi
push esi
call sub_4037e7
mov esi eax
push esi
call sub_4037b0
push esi
call sub_403c5b
push esi
call sub_405b72
push esi
call sub_405b63
push esi
call sub_40595e
push esi
call sub_40594d
add esp 0x18
pop esi
retn
sub_40333f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_403363
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_405cbb
push r--data
push r--data
call sub_40333f
pop ecx
pop ecx
test eax eax
jne r-xdata
push rw-data
call sub_405d70
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_40584b
call sub_405ca4
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ rw-data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_405d70
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_4033fa
push 0x20
push r--data
call sub_4041e0
push 0x8
call sub_4041a4
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_403525
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_404225
retn
mov [ rw-data ] 0x1
push 0x8
call sub_4040cb
pop ecx
push [ ebp + 0x8 ]
call sub_4032e2
mov [ ebp - 0x20 ] r--data
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_4037e7
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_4037e7
mov [ edi ] eax
call ebx
push [ rw-data ]
call esi
mov ebx eax
push [ rw-data ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_4035a2
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_4035c8
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_4035a2
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4021bd
leave
retn
push 0x3
call sub_405fb3
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_405fb3
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rw-data
push edi
call sub_402eb4
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_404f90
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_403d93
push esi
call sub_405f98
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_402eb4
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_402e3f
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_405f98
lea eax [ eax * 2 + rw-data ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_403df5
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_402e3f
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_405e2c
add esp 0xc
jmp r-xdata
sub_403777
push 0x3
call sub_405fb3
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_4035c8
push 0xff
call sub_4035c8
pop ecx
pop ecx
push 0x3
call sub_405fb3
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_4037bf
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_4037f9
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_40382d
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
or [ rw-data ] 0xffffffff
jmp sub_404074
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_40386a
push 0x8
push r--data
call sub_4041e0
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_4041a4
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40390c
push 0xc
call sub_4041a4
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_404c4b
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_403915
call sub_404225
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_40391e
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_4037f9
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_4044cd
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_4021cc
pop ecx
xor esi esi
push 0x0
push esi
call sub_40386a
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_4039b1
push 0x8
push r--data
call sub_4041e0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_404225
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_4021cc
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_4021cc
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_4021cc
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_4021cc
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_4021cc
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_4021cc
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_4021cc
pop ecx
push 0xd
call sub_4041a4
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_4021cc
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_403acb
push 0xc
call sub_4041a4
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_403ad7
push esi
call sub_4021cc
pop ecx
push edi
call sub_404cda
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_4021cc
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_404d73
pop ecx
sub_403ae0
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_40382d
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_4037f0
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_40330c
push [ rw-data ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_40402a
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_40382d
mov edi [ DecodePointer@IAT ]
push sub_4039b1
push [ rw-data ]
call edi
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_4044cd
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_40386a
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_403c6a
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_406000
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_40590c
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4021bd
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_40590c
pop ecx
sub_403d93
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_403c6a
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_403db8
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_403d93
int3
pop ebp
jmp eax
sub_403df5
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_403250
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_403250
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_403de5
mov eax esi
jmp r-xdata
sub_403ec2
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40607a
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov eax esi
pop esi
leave
retn
cmp [ ebp - 0x4 ] eax
je r-xdata
call sub_403250
test eax eax
je r-xdata
call sub_403250
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
sub_403f02
mov edi edi
push ebp
mov ebp esp
sub esp 0x218
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x214 ] 0x0
push ebx
push esi
push edi
mov edi [ GetCurrentDirectoryW@IAT ]
lea ebx [ ebp - 0x210 ]
mov eax ebx
push eax
push 0x105
call edi
mov esi eax
cmp esi 0x104
jle r-xdata
xor edi edi
test esi esi
je r-xdata
lea eax [ esi + 0x1 ]
push 0x2
push eax
mov [ ebp - 0x218 ] eax
call sub_4044cd
mov ebx eax
pop ecx
pop ecx
test ebx ebx
jne r-xdata
call sub_403250
mov [ eax ] 0xc
cmp [ ebx + 0x2 ] 0x3a
jne r-xdata
mov [ ebp - 0x214 ] 0x1
test esi esi
je r-xdata
call sub_403250
mov [ eax ] 0xc
xor esi esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4021bd
leave
retn
push ebx
call sub_4021cc
pop ecx
cmp [ ebp - 0x214 ] 0x0
je r-xdata
movzx eax [ ebx ]
cmp eax 0x61
jb r-xdata
push ebx
push [ ebp - 0x218 ]
call edi
mov esi eax
lea edi [ eax - 0x40 ]
jmp r-xdata
cmp eax 0x7a
ja r-xdata
add eax 0xffffffe0
sub_403fd0
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
add eax 0x40
push 0x3a
mov [ ebp - 0xc ] ax
pop eax
mov [ ebp - 0xa ] ax
push 0x5c
pop eax
mov [ ebp - 0x8 ] ax
xor eax eax
mov [ ebp - 0x6 ] ax
lea eax [ ebp - 0xc ]
push eax
call [ GetDriveTypeW@IAT ]
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
xor eax eax
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4021bd
leave
retn
sub_40402a
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_404074
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_4021cc
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_4040e2
push 0xc
push r--data
call sub_4041e0
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_403777
push 0x1e
call sub_4035c8
push 0xff
call sub_4032e2
push 0x18
call sub_404488
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_4041a4
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_403250
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_404225
retn
push edi
call sub_4021cc
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_4021cc
pop ecx
call sub_403250
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40419b
mov eax [ ebp - 0x1c ]
sub_4041a4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_4040e2
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_403584
sub_4041e0
push sub_404240
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_404240
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4021bd
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4021bd
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_40629b
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_406252
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_4021bd
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4021bd
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_406282
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_40629b
mov eax [ ebp + 0xc ]
push rw-data
call sub_405d70
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_4021bd
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_406269
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4021bd
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ rw-data ]
add esp 0x8
sub_4043cf
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
je r-xdata
leave
retn
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_4027fd
mov esi [ ebp - 0x14 ]
mov eax [ esi + 0x14 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
mov ecx 0x100
cmp [ ebp + 0x8 ] cx
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp cx 0x19
ja r-xdata
push 0x1
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push 0x200
push eax
call sub_4062b2
add esp 0x18
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push 0x2
push [ ebp + 0x8 ]
call sub_4062e1
pop ecx
test eax eax
movzx eax [ ebp + 0x8 ]
pop ecx
je r-xdata
movzx eax ax
jmp r-xdata
sub ax 0x20
cmp [ ebp - 0x8 ] bl
je r-xdata
movzx eax [ ebp - 0x4 ]
mov ecx [ esi + 0xd0 ]
movzx eax [ ecx + eax ]
jmp r-xdata
pop esi
pop ebx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
sub_404488
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_402206
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_4044cd
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40607a
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_404519
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406336
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_404567
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_404596
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_406000
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_4045fa
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_406717
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_4065ea
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_4065ea
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4021bd
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_406000
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_40478a
push 0xc
push r--data
call sub_4041e0
call sub_403997
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_4041a4
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_404825
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_404225
retn
push 0x20
call sub_403584
cmp esi rw-data
je r-xdata
push esi
call sub_4021cc
pop ecx
sub_40482e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_4027fd
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_4048aa
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_40482e
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_404596
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_406000
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4021bd
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_404567
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_4045fa
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_406000
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_404567
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_404a93
push 0x14
push r--data
call sub_4041e0
or [ ebp - 0x20 ] 0xffffffff
call sub_403997
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_40478a
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_40482e
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_404488
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_404225
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_4048aa
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_403250
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_4021cc
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_4021cc
pop ecx
push 0xd
call sub_4041a4
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_404bf4
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_4021cc
pop ecx
sub_404c4b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_404cda
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_404d73
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_4021cc
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_4021cc
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_4021cc
push [ esi + 0xc0 ]
call sub_4021cc
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_406757
push [ esi + 0xd4 ]
call sub_4021cc
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_4021cc
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_4021cc
pop ecx
push [ esi + 0xb0 ]
call sub_4021cc
push [ esi + 0xbc ]
call sub_4021cc
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_4021cc
push [ esi + 0xbc ]
call sub_406b37
pop ecx
pop ecx
push eax
call sub_4021cc
pop ecx
push eax
call sub_4021cc
push [ esi + 0xbc ]
call sub_406ace
pop ecx
pop ecx
sub_404ebe
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_404c4b
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_404cda
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_404d73
pop ecx
sub_404f0b
push 0xc
push r--data
call sub_4041e0
call sub_403997
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_4041a4
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
add esi 0x6c
push esi
call sub_404ebe
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_404f78
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_403997
mov esi [ eax + 0x6c ]
mov eax esi
call sub_404225
retn
push 0x20
call sub_403584
sub_404f90
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_40501b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_4027fd
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_405060
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_4050c8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_405914
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_405118
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40391e
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_405262
mov eax [ rw-data ]
xor edx edx
test eax eax
jne r-xdata
movzx ecx [ eax ]
cmp ecx 0x20
ja r-xdata
mov eax r--data
cmp ecx 0x22
jne r-xdata
test cx cx
je r-xdata
add eax 0x2
jmp r-xdata
xor ecx ecx
test edx edx
sete cl
mov edx ecx
retn
test edx edx
je r-xdata
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp cx 0x20
ja r-xdata
add eax 0x2
sub_4052a8
mov edi edi
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
movzx eax [ esi ]
test ax ax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ax 0x3d
je r-xdata
push ebx
push 0x4
inc edi
push edi
call sub_4044cd
mov ebx eax
pop ecx
pop ecx
mov [ rw-data ] ebx
test ebx ebx
jne r-xdata
pop edi
pop esi
retn
push esi
call sub_405f98
pop ecx
lea esi [ esi + eax * 2 + 0x2 ]
inc edi
mov esi [ rw-data ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
pop ebx
push esi
call sub_405f98
cmp [ esi ] 0x3d
pop ecx
lea edi [ eax + 0x1 ]
je r-xdata
push [ rw-data ]
call sub_4021cc
and [ rw-data ] 0x0
and [ ebx ] 0x0
mov [ rw-data ] 0x1
xor eax eax
lea esi [ esi + edi * 2 ]
push 0x2
push edi
call sub_4044cd
pop ecx
pop ecx
mov [ ebx ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_4021cc
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push edi
push eax
call sub_402eb4
add esp 0xc
test eax eax
jne r-xdata
pop ecx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_403d93
int3
add ebx 0x4
sub_405384
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
xor edx edx
push edi
mov edi [ ebp + 0xc ]
mov [ ebx ] edx
mov esi ecx
mov [ edi ] 0x1
cmp [ ebp + 0x8 ] edx
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov ecx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ecx ] esi
inc [ ebx ]
test esi esi
je r-xdata
mov edi [ ebp + 0xc ]
xor ecx ecx
test edx edx
sete cl
push 0x22
add eax 0x2
mov edx ecx
pop ecx
jmp r-xdata
movzx ecx [ eax ]
add eax 0x2
test cx cx
je r-xdata
mov cx [ eax ]
mov [ esi ] cx
add esi 0x2
test edx edx
jne r-xdata
sub eax 0x2
jmp r-xdata
cmp cx 0x20
je r-xdata
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
cmp cx 0x9
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax edx
je r-xdata
movzx ecx [ eax ]
cmp ecx 0x20
je r-xdata
xor ecx ecx
mov [ esi - 0x2 ] cx
inc [ edi ]
pop edi
pop esi
leave
retn
mov [ eax ] edx
add eax 0x2
jmp r-xdata
cmp ecx 0x9
jne r-xdata
cmp [ eax ] dx
je r-xdata
cmp [ ebp + 0x8 ] edx
je r-xdata
inc [ edi ]
mov ecx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ecx ] esi
cmp [ eax ] 0x5c
je r-xdata
add eax 0x2
inc edx
cmp [ eax ] 0x22
jne r-xdata
test edx edx
jne r-xdata
test dl 0x1
jne r-xdata
dec edx
test esi esi
je r-xdata
movzx ecx [ eax ]
test cx cx
je r-xdata
shr edx 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
inc [ ebx ]
push 0x5c
pop ecx
mov [ esi ] cx
add esi 0x2
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] edx
jne r-xdata
xor ecx ecx
xor edi edi
cmp [ ebp - 0x4 ] ecx
sete cl
mov [ ebp - 0x4 ] ecx
cmp [ eax + 0x2 ] 0x22
jne r-xdata
inc [ ebx ]
mov edi [ ebp + 0xc ]
jmp r-xdata
xor ecx ecx
mov [ esi ] cx
add esi 0x2
test edi edi
je r-xdata
cmp ecx 0x20
je r-xdata
add eax 0x2
jmp r-xdata
xor edx edx
cmp [ eax ] dx
je r-xdata
add eax 0x2
jmp r-xdata
test esi esi
je r-xdata
cmp ecx 0x9
je r-xdata
xor edi edi
inc edi
xor edx edx
jmp r-xdata
inc [ ebx ]
mov [ esi ] cx
add esi 0x2
sub_4054da
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x104
mov esi rw-data
push esi
xor eax eax
xor ebx ebx
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
mov edi esi
mov edi eax
cmp [ eax ] bx
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0x8 ]
cmp ecx 0x7fffffff
jae r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
lea ebx [ ebp - 0x8 ]
xor ecx ecx
mov eax edi
call sub_405384
mov ebx [ ebp - 0x4 ]
pop ecx
pop ecx
cmp ebx 0x3fffffff
jae r-xdata
lea eax [ ecx + ebx * 2 ]
add eax eax
add ecx ecx
cmp eax ecx
jb r-xdata
push eax
call sub_404488
mov esi eax
pop ecx
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ esi + ebx * 4 ]
push esi
lea ebx [ ebp - 0x8 ]
mov eax edi
call sub_405384
mov eax [ ebp - 0x4 ]
dec eax
pop ecx
mov [ rw-data ] eax
pop ecx
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_405588
mov edi edi
push esi
call [ GetEnvironmentStringsW@IAT ]
mov esi eax
xor ecx ecx
cmp esi ecx
jne r-xdata
cmp [ esi ] cx
je r-xdata
xor eax eax
pop esi
retn
push ebx
sub eax esi
lea ebx [ eax + 0x2 ]
push edi
push ebx
call sub_404488
mov edi eax
pop ecx
test edi edi
jne r-xdata
add eax 0x2
cmp [ eax ] cx
jne r-xdata
push ebx
push esi
push edi
call sub_406d20
add esp 0xc
jmp r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax edi
pop edi
pop ebx
pop esi
retn
add eax 0x2
cmp [ eax ] cx
jne r-xdata
sub_4055e0
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_4044cd
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rw-data ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rw-data ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rw-data
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rw-data ]
add [ rw-data ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_4044cd
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_405825
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_40584b
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_405871
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_40597c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_4059c0
push 0x20
push r--data
call sub_4041e0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_40391e
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_404225
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_40597c
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_403550
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_403250
mov [ eax ] 0x16
call sub_403de5
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_4041a4
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_4037e7
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405b27
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_405b81
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_407103
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_404519
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_404519
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_405c37
mov edi edi
push esi
push 0x4
push 0x20
call sub_4044cd
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_405c68
push 0xc
push r--data
call sub_4041e0
call sub_4032fa
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_405b81
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405c9e
mov eax [ ebp - 0x1c ]
call sub_404225
retn
sub_405cbb
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rw-data ]
call [ EncodePointer@IAT ]
mov [ edi + rw-data ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_405ce0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_405d20
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_405d70
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_404240
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_405ce0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_405d20
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_405e2c
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_4037e7
and [ ebp - 0x14 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rw-data ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rw-data ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4021bd
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_405f98
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_405fb3
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_403250
mov [ eax ] 0x16
call sub_403de5
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_406000
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_40713f
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_40607a
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_403250
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_4037bf
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_406100
push sub_404240
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_406160
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_4061f0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_407325
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_407344
jmp r-xdata
sub_4061f0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_4021bd
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_406160
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_406252
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_406282
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4062b2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
jle r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
pop ebp
retn
push eax
push [ ebp + 0x10 ]
call sub_407347
pop ecx
pop ecx
sub_4062e1
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax 0xffff
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
movzx eax [ ebp - 0x4 ]
and [ ebp - 0x4 ] eax
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
sub_406336
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_402206
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_4021cc
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_4037bf
pop ecx
call sub_403250
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop edi
call sub_403250
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40320e
pop ecx
mov [ esi ] eax
push esi
call sub_4037bf
pop ecx
test eax eax
je r-xdata
call sub_403250
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40320e
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_4063e3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_4021cc
pop ecx
sub_406403
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4021bd
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_4063e3
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_402206
pop ecx
cmp eax ebx
je r-xdata
call sub_407370
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_4063e3
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_402206
pop ecx
cmp eax ebx
je r-xdata
call sub_407370
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_4065ea
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4027fd
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_406403
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_406630
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4021bd
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_406000
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_4063e3
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_402206
pop ecx
cmp eax ebx
je r-xdata
call sub_407370
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_406717
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4027fd
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_406630
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_406757
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_4021cc
push [ esi + 0x8 ]
call sub_4021cc
push [ esi + 0xc ]
call sub_4021cc
push [ esi + 0x10 ]
call sub_4021cc
push [ esi + 0x14 ]
call sub_4021cc
push [ esi + 0x18 ]
call sub_4021cc
push [ esi ]
call sub_4021cc
push [ esi + 0x20 ]
call sub_4021cc
push [ esi + 0x24 ]
call sub_4021cc
push [ esi + 0x28 ]
call sub_4021cc
push [ esi + 0x2c ]
call sub_4021cc
push [ esi + 0x30 ]
call sub_4021cc
push [ esi + 0x34 ]
call sub_4021cc
push [ esi + 0x1c ]
call sub_4021cc
push [ esi + 0x38 ]
call sub_4021cc
push [ esi + 0x3c ]
call sub_4021cc
add esp 0x40
push [ esi + 0x40 ]
call sub_4021cc
push [ esi + 0x44 ]
call sub_4021cc
push [ esi + 0x48 ]
call sub_4021cc
push [ esi + 0x4c ]
call sub_4021cc
push [ esi + 0x50 ]
call sub_4021cc
push [ esi + 0x54 ]
call sub_4021cc
push [ esi + 0x58 ]
call sub_4021cc
push [ esi + 0x5c ]
call sub_4021cc
push [ esi + 0x60 ]
call sub_4021cc
push [ esi + 0x64 ]
call sub_4021cc
push [ esi + 0x68 ]
call sub_4021cc
push [ esi + 0x6c ]
call sub_4021cc
push [ esi + 0x70 ]
call sub_4021cc
push [ esi + 0x74 ]
call sub_4021cc
push [ esi + 0x78 ]
call sub_4021cc
push [ esi + 0x7c ]
call sub_4021cc
add esp 0x40
push [ esi + 0x80 ]
call sub_4021cc
push [ esi + 0x84 ]
call sub_4021cc
push [ esi + 0x88 ]
call sub_4021cc
push [ esi + 0x8c ]
call sub_4021cc
push [ esi + 0x90 ]
call sub_4021cc
push [ esi + 0x94 ]
call sub_4021cc
push [ esi + 0x98 ]
call sub_4021cc
push [ esi + 0x9c ]
call sub_4021cc
push [ esi + 0xa0 ]
call sub_4021cc
push [ esi + 0xa4 ]
call sub_4021cc
push [ esi + 0xa8 ]
call sub_4021cc
push [ esi + 0xbc ]
call sub_4021cc
push [ esi + 0xc0 ]
call sub_4021cc
push [ esi + 0xc4 ]
call sub_4021cc
push [ esi + 0xc8 ]
call sub_4021cc
push [ esi + 0xcc ]
call sub_4021cc
add esp 0x40
push [ esi + 0xd0 ]
call sub_4021cc
push [ esi + 0xb8 ]
call sub_4021cc
push [ esi + 0xd8 ]
call sub_4021cc
push [ esi + 0xdc ]
call sub_4021cc
push [ esi + 0xe0 ]
call sub_4021cc
push [ esi + 0xe4 ]
call sub_4021cc
push [ esi + 0xe8 ]
call sub_4021cc
push [ esi + 0xec ]
call sub_4021cc
push [ esi + 0xd4 ]
call sub_4021cc
push [ esi + 0xf0 ]
call sub_4021cc
push [ esi + 0xf4 ]
call sub_4021cc
push [ esi + 0xf8 ]
call sub_4021cc
push [ esi + 0xfc ]
call sub_4021cc
push [ esi + 0x100 ]
call sub_4021cc
push [ esi + 0x104 ]
call sub_4021cc
push [ esi + 0x108 ]
call sub_4021cc
add esp 0x40
push [ esi + 0x10c ]
call sub_4021cc
push [ esi + 0x110 ]
call sub_4021cc
push [ esi + 0x114 ]
call sub_4021cc
push [ esi + 0x118 ]
call sub_4021cc
push [ esi + 0x11c ]
call sub_4021cc
push [ esi + 0x120 ]
call sub_4021cc
push [ esi + 0x124 ]
call sub_4021cc
push [ esi + 0x128 ]
call sub_4021cc
push [ esi + 0x12c ]
call sub_4021cc
push [ esi + 0x130 ]
call sub_4021cc
push [ esi + 0x134 ]
call sub_4021cc
push [ esi + 0x138 ]
call sub_4021cc
push [ esi + 0x13c ]
call sub_4021cc
push [ esi + 0x140 ]
call sub_4021cc
push [ esi + 0x144 ]
call sub_4021cc
push [ esi + 0x148 ]
call sub_4021cc
add esp 0x40
push [ esi + 0x14c ]
call sub_4021cc
push [ esi + 0x150 ]
call sub_4021cc
push [ esi + 0x154 ]
call sub_4021cc
push [ esi + 0x158 ]
call sub_4021cc
push [ esi + 0x15c ]
call sub_4021cc
push [ esi + 0x160 ]
call sub_4021cc
add esp 0x18
sub_406ace
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4021cc
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4021cc
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4021cc
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_4021cc
pop ecx
push esi
call sub_4021cc
pop ecx
sub_406b37
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4021cc
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4021cc
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4021cc
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4021cc
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4021cc
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4021cc
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4021cc
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4021cc
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4021cc
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4021cc
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4021cc
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_4021cc
pop ecx
push esi
call sub_4021cc
pop ecx
sub_406c40
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_406c90
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_406d20
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_406da4 ]
jmp [ ecx * 4 + jump_table_406e24 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_406e90 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_40702c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_406f30 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40702c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_406e90 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40702c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_406e90 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_406e90 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_406e90 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40702c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40702c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40702c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_407090
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_4070d0
call sub_4059b3
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_4059c0
pop ecx
push 0x3
call sub_403550
int3
push 0x1
push 0x40000015
push 0x3
call sub_403c6a
add esp 0xc
sub_407103
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_403250
mov [ eax ] 0x16
call sub_403de5
or eax 0xffffffff
pop ebp
retn
sub_40713f
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_407210
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_407230
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_4021bd
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_407275
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_407275
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_407230
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_407325
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_407344
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_407325
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_407347
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
add ecx 0x2
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub_4074a0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_4074d0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_407540
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_4075e0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_40229a
mov edi edi
push ebp
mov ebp esp
call sub_403997
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_4022ac
call sub_403997
mov ecx eax
mov eax [ ecx + 0x14 ]
imul eax eax 0x343fd
add eax 0x269ec3
mov [ ecx + 0x14 ] eax
shr eax 0x10
and eax 0x7fff
retn
sub_4026c8
push 0x7
call sub_4040cb
pop ecx
retn
sub_4030c0
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_405118
pop ecx
pop ecx
retn
sub_4030d4
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_403575
push eax
call sub_403550
sub_4030ee
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_404225
retn
_start
call sub_405871
jmp sub_402f91
sub_403263
call sub_40391e
test eax eax
jne r-xdata
add eax 0xc
retn
mov eax rw-data
retn
sub_403299
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_4032e2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4032b7
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_4032fa
push 0x8
call sub_4041a4
pop ecx
retn
sub_403303
push 0x8
call sub_4040cb
pop ecx
retn
sub_403525
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_4040cb
pop ecx
sub_40353a
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_4033fa
add esp 0xc
pop ebp
retn
sub_403550
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_4033fa
add esp 0xc
pop ebp
retn
sub_403566
push 0x1
push 0x0
push 0x0
call sub_4033fa
add esp 0xc
retn
sub_403575
push 0x1
push 0x1
push 0x0
call sub_4033fa
add esp 0xc
retn
sub_403584
mov edi edi
push ebp
mov ebp esp
call sub_403777
push [ ebp + 0x8 ]
call sub_4035c8
pop ecx
push 0xff
call sub_403550
int3
sub_4037b0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4037e7
push 0x0
call [ EncodePointer@IAT ]
retn
sub_4037f0
call [ TlsAlloc@IAT ]
retn 0x4
sub_40390c
push 0xd
call sub_4040cb
pop ecx
retn
sub_403915
push 0xc
call sub_4040cb
pop ecx
retn
sub_403acb
push 0xd
call sub_4040cb
pop ecx
retn
sub_403ad7
push 0xc
call sub_4040cb
pop ecx
retn
sub_403c5b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_403de5
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_403db8
add esp 0x14
retn
sub_4040cb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_40419b
push 0xa
call sub_4040cb
pop ecx
retn
sub_404225
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_404475
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_4043cf
pop ecx
pop ecx
pop ebp
retn
sub_404825
push 0xd
call sub_4040cb
pop ecx
retn
sub_404bf4
push 0xd
call sub_4040cb
pop ecx
retn
sub_404c2d
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_404a93
pop ecx
mov [ rw-data ] 0x1
sub_404f78
push 0xc
call sub_4040cb
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_40510a
push sub_4050c8
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_40590c
and [ rw-data ] 0x0
retn
sub_405914
push 0x8
push r--data
call sub_4041e0
call sub_403997
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_4070d0
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_405934
xor eax eax
inc eax
retn
sub_40594d
push sub_405914
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_40595e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_4059b3
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_405b27
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_4040cb
pop ecx
sub_405b63
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_405b72
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_405c9e
call sub_403303
retn
sub_405ca4
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_405c68
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_405dfb
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_406148
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_4021bd
jmp sub_404225
sub_406236
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_406160
add esp 0xc
pop ebp
retn 0x4
sub_406269
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_407325
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_40629b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_406160
add esp 0xc
pop ebp
retn 0x8
sub_407136
push 0x2
call sub_403584
sub_4071f9
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_4072f9
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_407230
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_407344
call eax
retn
sub_407370
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_4074a0
sub_407386
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_4074a0
RtlUnwind
jmp [ RtlUnwind@IAT ]
