sub_40102c
push ebp
mov ebp esp
fild [ ebp + 0xc ]
fild [ ebp + 0x10 ]
push esi
mov esi ecx
mov eax [ ebp + 0x14 ]
push edi
fadd [ esi + 0x18 ]
fld st1
fmul [ esi + 0x8 ]
cdq
fdiv st1
sub eax edx
sar eax 0x1
mov [ ebp + 0xc ] eax
fild [ ebp + 0xc ]
faddp st1
call _ftol
fld st1
fmul [ esi + 0x10 ]
mov edi eax
mov eax [ ebp + 0x18 ]
cdq
fdiv st1
sub eax edx
sar eax 0x1
mov [ ebp + 0xc ] eax
fild [ ebp + 0xc ]
faddp st1
call _ftol
mov ecx eax
mov eax [ ebp + 0x8 ]
fstp st0
mov [ eax ] edi
pop edi
fstp st0
mov [ eax + 0x4 ] ecx
pop esi
pop ebp
retn 0x14
sub_40109b
push ebp
mov ebp esp
sub esp 0x10
fld [ ebp + 0x8 ]
push esi
mov esi ecx
push ecx
push ecx
fstp [ esp ]
call cos
fmul [ esi + 0x8 ]
fstp [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
call sin
fmul [ esi + 0x10 ]
fsubr [ ebp - 0x8 ]
fstp [ ebp - 0x10 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
call sin
fmul [ esi + 0x8 ]
fstp [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
call cos
fmul [ esi + 0x10 ]
pop ecx
pop ecx
fadd [ ebp - 0x8 ]
fld [ ebp - 0x10 ]
fstp [ esi + 0x8 ]
fstp [ esi + 0x10 ]
pop esi
leave
retn 0x8
sub_402451
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
push edi
push esi
call Ordinal_MFC42_823
push esi
mov edi eax
push [ ebp + 0x8 ]
push edi
call memcpy
mov eax esi
mov edx edi
shr eax 0x4
add esp 0x10
add edi 0x10
dec eax
test eax eax
jbe rwxdata
add esi 0xfffffff0
xor ecx ecx
test esi esi
jbe rwxdata
push ebx
mov ecx edi
mov [ ebp + 0x10 ] eax
pop edi
pop esi
pop ebp
retn
sub edi rwxdata
mov bl [ eax + edx ]
xor [ ecx + eax ] bl
inc eax
cmp eax 0x10
jl rwxdata
add ecx 0x10
dec [ ebp + 0x10 ]
jne rwxdata
mov dl [ edi + ecx + rwxdata ]
lea eax [ ecx + rwxdata ]
xor dl 0xc3
inc ecx
cmp ecx esi
mov [ eax ] dl
jb rwxdata
xor eax eax
pop ebx
sub_402505
push esi
mov esi 0x1351
push esi
call Ordinal_MFC42_823
mov eax rwxdata
push esi
push eax
push eax
call sub_402451
add esp 0x10
mov esi 0xff82
push 0x25
pop eax
sub esi 0x64
dec eax
jne rwxdata
mov eax sub_401125
call eax
mov eax esi
pop esi
retn
sub_40253a
push ebp
mov ebp esp
mov eax 0x9c58
call sub_404590
push ebx
push esi
push edi
push 0x64
mov [ ebp - 0x18 ] ecx
lea esi [ ebp - 0x9c58 ]
pop ebx
call [ rand@IAT ]
push 0xa
cdq
pop ecx
idiv ecx
mov [ esi ] eax
add esi 0x4
dec edi
jne rwxdata
dec ebx
jne rwxdata
push 0x64
pop edi
cmp [ ebp + 0x8 ] 0x63
jg rwxdata
pop edi
pop esi
pop ebx
leave
retn 0x4
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jle rwxdata
push [ ebp - 0x4 ]
call Ordinal_MFC42_823
pop ecx
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea esi [ ebp - 0x9c58 ]
inc [ ebp - 0x8 ]
add esi 0x4
cmp [ ebp - 0x8 ] 0x64
jl rwxdata
cmp ebx [ ebp - 0x4 ]
jle rwxdata
push 0x0
call [ Sleep@IAT ]
mov edi [ esi ]
and [ ebp - 0xc ] 0x0
test edi edi
jle rwxdata
inc ebx
cmp ebx 0x64
jl rwxdata
push ebx
push [ ebp - 0x4 ]
jmp rwxdata
push ebx
call Ordinal_MFC42_823
and [ ebp - 0x8 ] 0x0
pop ecx
mov [ ebp - 0x14 ] eax
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x8 ]
jl rwxdata
inc [ ebp - 0xc ]
cmp [ ebp - 0xc ] edi
jl rwxdata
cmp eax [ ebp - 0x4 ]
jne rwxdata
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
call memcpy
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp ebx eax
jne rwxdata
jmp rwxdata
cmp [ ebp - 0x4 ] 0xa
jle rwxdata
mov ecx [ ebp - 0x18 ]
push 0x65
pop eax
cmp [ ecx + 0x4 ] eax
jne rwxdata
mov [ ecx + 0x4 ] eax
call sub_402505
sub_4026b2
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
pop edi
pop esi
retn 0x4
sub_402742
mov eax sub_404830
call sub_404604
push ecx
push ecx
push esi
push edi
mov edi ecx
mov [ ebp - 0x10 ] edi
mov [ edi ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x4 ]
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call Ordinal_MFC42_2414
or [ ebp - 0x4 ] 0xffffffff
mov ecx edi
mov [ esi ] r--data
call sub_4029b7
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_4027ba
mov eax sub_40484c
call sub_404604
sub esp 0x18
push esi
push edi
mov esi rw-data
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp + 0xc ]
add ecx 0x4
push ecx
mov ecx esi
mov eax [ esi ]
call [ eax + 0x30 ]
mov edi rw-data
push 0x0
push edi
mov ecx esi
mov [ ebp - 0x14 ] eax
call Ordinal_MFC42_2754
push 0x1
mov ecx esi
call Ordinal_MFC42_5875
mov eax [ esi ]
push 0xffff
mov ecx esi
call [ eax + 0x38 ]
push rw-data
lea ecx [ ebp + 0xc ]
call Ordinal_MFC42_537
mov eax [ ebp + 0xc ]
mov edx [ esi ]
and [ ebp - 0x4 ] 0x0
push 0x25
mov ecx [ eax - 0x8 ]
push edi
push ecx
push eax
mov ecx esi
call [ edx + 0x70 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xc ]
call Ordinal_MFC42_800
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x20 ]
sub eax ecx
push rw-data
cdq
sub eax edx
sar eax 0x1
lea eax [ ecx + eax - 0x50 ]
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x20 ] eax
call Ordinal_MFC42_537
mov eax [ ebp - 0x10 ]
mov edx [ esi ]
lea edi [ ebp - 0x24 ]
push 0x21
mov ecx [ eax - 0x8 ]
push edi
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call [ edx + 0x70 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call Ordinal_MFC42_800
mov eax [ esi ]
push [ ebp - 0x14 ]
mov ecx esi
call [ eax + 0x30 ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
sub_40289c
push esi
lea esi [ ecx + 0x4 ]
test esi esi
je rwxdata
push 0x0
push rw-data
push 0x104
mov ecx esi
call Ordinal_MFC42_2243
pop esi
retn
cmp [ esi + 0x4 ] 0x0
je rwxdata
mov ecx esi
call Ordinal_MFC42_2414
sub_40290a
mov eax sub_404860
call sub_404604
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call Ordinal_MFC42_2414
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_402959
mov eax sub_404874
call sub_404604
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call Ordinal_MFC42_2414
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_402a42
mov eax sub_404890
call sub_404604
push ecx
push ecx
push esi
push edi
mov edi ecx
mov [ ebp - 0x10 ] edi
mov [ edi ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x4 ]
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call Ordinal_MFC42_2414
or [ ebp - 0x4 ] 0xffffffff
mov ecx edi
mov [ esi ] r--data
call sub_4029b7
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_402a9b
mov eax sub_4048ac
call sub_404604
sub esp 0x18
push esi
push edi
mov esi rw-data
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp + 0xc ]
add ecx 0x4
push ecx
mov ecx esi
mov eax [ esi ]
call [ eax + 0x30 ]
mov edi rw-data
push 0x0
push edi
mov ecx esi
mov [ ebp - 0x14 ] eax
call Ordinal_MFC42_2754
push 0x1
mov ecx esi
call Ordinal_MFC42_5875
mov eax [ esi ]
push 0xffff
mov ecx esi
call [ eax + 0x38 ]
push rw-data
lea ecx [ ebp + 0xc ]
call Ordinal_MFC42_537
mov eax [ ebp + 0xc ]
mov edx [ esi ]
and [ ebp - 0x4 ] 0x0
push 0x25
mov ecx [ eax - 0x8 ]
push edi
push ecx
push eax
mov ecx esi
call [ edx + 0x70 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xc ]
call Ordinal_MFC42_800
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x20 ]
sub eax ecx
push rw-data
cdq
sub eax edx
sar eax 0x1
lea eax [ ecx + eax - 0x50 ]
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x20 ] eax
call Ordinal_MFC42_537
mov eax [ ebp - 0x10 ]
mov edx [ esi ]
lea edi [ ebp - 0x24 ]
push 0x21
mov ecx [ eax - 0x8 ]
push edi
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call [ edx + 0x70 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call Ordinal_MFC42_800
mov eax [ esi ]
push [ ebp - 0x14 ]
mov ecx esi
call [ eax + 0x30 ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
sub_402b7e
push esi
lea esi [ ecx + 0x4 ]
test esi esi
je rwxdata
push 0x0
push rw-data
push 0xa0
mov ecx esi
call Ordinal_MFC42_2243
pop esi
retn
cmp [ esi + 0x4 ] 0x0
je rwxdata
mov ecx esi
call Ordinal_MFC42_2414
sub_402c1c
mov eax sub_4048c8
call sub_404604
push ecx
push ecx
push esi
push edi
mov edi ecx
mov [ ebp - 0x10 ] edi
mov [ edi ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x4 ]
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call Ordinal_MFC42_2414
or [ ebp - 0x4 ] 0xffffffff
mov ecx edi
mov [ esi ] r--data
call sub_4029b7
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_402c6f
movsx eax [ esp + 0x8 ]
push esi
sub eax 0x70
mov esi ecx
je rwxdata
call sub_403083
dec eax
jne rwxdata
pop esi
retn 0x8
call sub_402a95
jmp rwxdata
push eax
mov ecx esi
push [ esp + 0xc ]
call sub_4029be
sub_402ca1
mov eax sub_4048ec
call sub_404604
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
add ecx 0x4
mov eax [ ebx ]
push edi
push ecx
mov ecx ebx
call [ eax + 0x30 ]
mov esi rw-data
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x0
push rw-data
mov ecx ebx
mov [ ebp - 0x14 ] eax
movsd [ edi ] [ esi ]
call Ordinal_MFC42_2754
mov eax [ ebx ]
push 0xffff
mov ecx ebx
call [ eax + 0x38 ]
push 0x1
mov ecx ebx
pop esi
push esi
call Ordinal_MFC42_5875
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x20 ]
sub eax ecx
push rw-data
cdq
sub eax edx
sar eax 0x1
lea eax [ ecx + eax - 0x28 ]
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x20 ] eax
call Ordinal_MFC42_537
mov eax [ ebp + 0xc ]
mov edx [ ebx ]
and [ ebp - 0x4 ] 0x0
lea edi [ ebp - 0x24 ]
mov ecx [ eax - 0x8 ]
push 0x21
push edi
push ecx
push eax
mov ecx ebx
call [ edx + 0x70 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xc ]
call Ordinal_MFC42_800
add [ ebp - 0x20 ] 0x28
push rw-data
lea ecx [ ebp + 0xc ]
call Ordinal_MFC42_537
mov eax [ ebp + 0xc ]
mov edx [ ebx ]
mov [ ebp - 0x4 ] esi
lea esi [ ebp - 0x24 ]
mov ecx [ eax - 0x8 ]
push 0x21
push esi
push ecx
push eax
mov ecx ebx
call [ edx + 0x70 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xc ]
call Ordinal_MFC42_800
mov eax [ ebx ]
push 0xffffff
mov ecx ebx
call [ eax + 0x38 ]
add [ ebp - 0x20 ] 0x8c
push rw-data
lea ecx [ ebp - 0x10 ]
call Ordinal_MFC42_537
mov eax [ ebp - 0x10 ]
mov edx [ ebx ]
lea esi [ ebp - 0x24 ]
push 0x21
mov ecx [ eax - 0x8 ]
push esi
push ecx
push eax
mov ecx ebx
mov [ ebp - 0x4 ] 0x2
call [ edx + 0x70 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call Ordinal_MFC42_800
mov eax [ ebx ]
push [ ebp - 0x14 ]
mov ecx ebx
call [ eax + 0x30 ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
sub_402dd1
mov eax sub_404901
call sub_404604
push ecx
push 0x1e4
call Ordinal_MFC42_823
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je rwxdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_402e1e
sub_402e1e
mov eax sub_404922
call sub_404604
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call Ordinal_MFC42_366
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0xc4 ]
call Ordinal_MFC42_529
lea ecx [ esi + 0x144 ]
mov [ ebp - 0x4 ] 0x1
call Ordinal_MFC42_554
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov [ esi + 0xc0 ] 0x1
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_402e8d
mov eax sub_404942
call sub_404604
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0x144 ]
mov [ ebp - 0x4 ] 0x1
call Ordinal_MFC42_807
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0xc4 ]
call Ordinal_MFC42_796
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call Ordinal_MFC42_674
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_402edd
push esi
push edi
push [ esp + 0xc ]
mov esi ecx
call Ordinal_MFC42_4457
cmp eax 0xffffffff
je rwxdata
or eax 0xffffffff
lea edi [ esi + 0xc4 ]
push 0xe801
push 0x50008200
push esi
mov ecx edi
call Ordinal_MFC42_2117
test eax eax
je rwxdata
push 0x4
push rw-data
mov ecx edi
call Ordinal_MFC42_6000
test eax eax
je rwxdata
xor eax eax
jmp rwxdata
pop edi
pop esi
retn 0x4
sub_402f9d
mov eax sub_40496a
call sub_404604
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_402992
xor eax eax
mov [ esi + 0x4 ] r--data
mov [ ebp - 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0xc ] r--data
lea ecx [ esi + 0x14 ]
mov [ ebp - 0x4 ] 0x2
call sub_403542
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_403009
mov eax sub_4049a2
call sub_404604
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0x14 ]
mov [ ebp - 0x4 ] 0x2
call sub_40358a
lea edi [ esi + 0xc ]
mov [ ebp - 0x14 ] edi
mov [ edi ] r--data
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call Ordinal_MFC42_2414
mov ebx r--data
mov [ edi ] ebx
lea edi [ esi + 0x4 ]
mov [ ebp - 0x14 ] edi
mov [ edi ] r--data
mov ecx edi
mov [ ebp - 0x4 ] 0x4
call Ordinal_MFC42_2414
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
mov [ edi ] ebx
call sub_4029b7
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
sub_403089
movsx eax [ esp + 0x8 ]
push esi
sub eax 0x31
mov esi ecx
je rwxdata
call sub_402795
dec eax
jne rwxdata
pop esi
retn 0x8
call sub_402c9b
jmp rwxdata
push eax
mov ecx esi
push [ esp + 0xc ]
call sub_4029be
sub_4030c0
mov eax sub_4049cc
call sub_404604
sub esp 0x3c
push ebx
push esi
push edi
mov esi rw-data
lea edi [ ebp - 0x20 ]
mov ebx ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea ecx [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
call Ordinal_MFC42_323
mov esi [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
test esi esi
jne rwxdata
mov eax [ esi + 0x4 ]
xor eax eax
jmp rwxdata
push eax
push [ ebp - 0x2c ]
call Ordinal_MFC42_5785
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x48 ]
push eax
push 0x18
push [ ebx + 0x10 ]
call [ GetObjectA@IAT ]
push 0x0
push rw-data
mov ecx esi
call Ordinal_MFC42_2754
push esi
mov ecx ebx
call sub_4032ea
mov eax [ rw-data ]
push 0xcc0020
sub eax [ rw-data ]
push 0x0
push 0x0
cdq
sub eax edx
mov ecx eax
mov eax [ ebp - 0x40 ]
cdq
sub eax edx
sar ecx 0x1
sar eax 0x1
sub ecx eax
mov eax [ rw-data ]
sub eax [ rw-data ]
cdq
sub eax edx
mov edi eax
mov eax [ ebp - 0x44 ]
cdq
sub eax edx
sar edi 0x1
sar eax 0x1
sub edi eax
lea eax [ ebp - 0x30 ]
neg eax
sbb eax eax
and eax [ ebp - 0x2c ]
push eax
push [ ebp - 0x40 ]
push [ ebp - 0x44 ]
push ecx
push edi
push [ esi + 0x4 ]
call [ BitBlt@IAT ]
mov eax [ esi ]
push 0xffff
mov ecx esi
call [ eax + 0x38 ]
push 0x1
mov ecx esi
call Ordinal_MFC42_5875
mov eax [ ebp - 0x18 ]
push 0x4
sub eax [ ebp - 0x20 ]
pop ecx
push 0x0
cdq
idiv ecx
neg eax
push eax
lea eax [ ebp - 0x20 ]
push eax
call [ InflateRect@IAT ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
sub eax ecx
push 0x81
cdq
sub eax edx
sar eax 0x1
lea eax [ ecx + eax + 0x28 ]
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
call Ordinal_MFC42_537
mov eax [ ebp + 0xc ]
mov edx [ esi ]
lea edi [ ebp - 0x20 ]
push 0x11
mov ecx [ eax - 0x8 ]
push edi
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call [ edx + 0x70 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0xc ]
call Ordinal_MFC42_800
mov eax [ esi ]
push 0xffffff
mov ecx esi
call [ eax + 0x38 ]
mov eax [ esi ]
add ebx 0x4
push ebx
mov ecx esi
call [ eax + 0x30 ]
mov edi eax
mov eax [ rw-data ]
sub eax [ rw-data ]
push 0x4
pop ecx
cdq
idiv ecx
push rw-data
lea ecx [ ebp + 0xc ]
sub [ ebp - 0x1c ] eax
sub [ ebp - 0x14 ] eax
call Ordinal_MFC42_537
mov eax [ ebp + 0xc ]
mov edx [ esi ]
lea ebx [ ebp - 0x20 ]
push 0x1
mov ecx [ eax - 0x8 ]
push ebx
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call [ edx + 0x70 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0xc ]
call Ordinal_MFC42_800
add [ ebp - 0x1c ] 0x3c
add [ ebp - 0x14 ] 0x3c
push rw-data
lea ecx [ ebp + 0xc ]
call Ordinal_MFC42_537
mov eax [ ebp + 0xc ]
mov edx [ esi ]
lea ebx [ ebp - 0x20 ]
push 0x1
mov ecx [ eax - 0x8 ]
push ebx
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call [ edx + 0x70 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0xc ]
call Ordinal_MFC42_800
mov eax [ ebp - 0x10 ]
test eax eax
je rwxdata
mov eax [ eax + 0x4 ]
push eax
call [ CreateCompatibleDC@IAT ]
push eax
lea ecx [ ebp - 0x30 ]
call Ordinal_MFC42_1640
lea eax [ ebx + 0xc ]
test eax eax
je rwxdata
push eax
push [ ebp - 0x2c ]
call Ordinal_MFC42_5785
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x30 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call Ordinal_MFC42_640
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
mov eax [ eax + 0x4 ]
sub_4032ea
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
add ecx 0x14
call sub_40372e
mov esi eax
xor edi edi
cmp [ esi + 0x8 ] edi
jle rwxdata
pop edi
pop esi
leave
retn 0x4
push ebx
mov eax [ esi + 0x4 ]
mov ecx [ rw-data ]
sub ecx [ rw-data ]
mov ebx [ eax + edi * 4 ]
mov eax [ rw-data ]
sub eax [ rw-data ]
push ecx
mov ecx ebx
push eax
cdq
sub eax edx
sar eax 0x1
push eax
lea eax [ ebp - 0x10 ]
push 0x100
push eax
call sub_40102c
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov ecx ebx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
call sub_40353e
push eax
mov eax [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ eax + 0x4 ]
call [ SetPixel@IAT ]
inc edi
cmp edi [ esi + 0x8 ]
jl rwxdata
pop ebx
sub_403370
push esi
push edi
mov edi ecx
lea esi [ edi + 0xc ]
test esi esi
je rwxdata
push 0x82
mov ecx esi
call sub_4034da
lea esi [ edi + 0x4 ]
test esi esi
je rwxdata
cmp [ esi + 0x4 ] 0x0
je rwxdata
push 0x0
push rw-data
push 0xa0
mov ecx esi
call Ordinal_MFC42_2243
mov ecx edi
call sub_4033c5
pop edi
pop esi
retn
cmp [ esi + 0x4 ] 0x0
je rwxdata
mov ecx esi
call Ordinal_MFC42_2414
mov ecx esi
call Ordinal_MFC42_2414
sub_4033c5
mov eax sub_4049e2
call sub_404604
push ecx
push ecx
push ebx
push esi
xor ebx ebx
push edi
cmp [ rw-data ] ebx
mov [ ebp - 0x10 ] esp
jne rwxdata
sub esp 0x10
mov esi rw-data
mov edi esp
add ecx 0x14
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x64
movsd [ edi ] [ esi ]
call sub_4035c3
cmp [ rw-data ] ebx
jne rwxdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
push 0x8
mov [ rw-data ] eax
mov [ ebp - 0x4 ] ebx
call Ordinal_MFC42_823
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
cmp ecx ebx
mov [ ebp - 0x4 ] 0x1
je rwxdata
cmp [ rw-data ] ebx
jne rwxdata
xor edi edi
call sub_4024c4
mov edi eax
jmp rwxdata
cmp [ rw-data ] ebx
je rwxdata
mov esi [ rand@IAT ]
mov [ ebp - 0x4 ] bl
call esi
push 0x64
cdq
pop ecx
idiv ecx
mov ecx edi
push eax
call sub_40253a
call esi
cdq
mov ecx 0x3e8
idiv ecx
mov ecx edi
push eax
call sub_40253a
push ebx
call [ ExitProcess@IAT ]
push 0x1f
pop eax
cmp [ rw-data ] eax
je rwxdata
sub_4034a7
mov eax sub_4049f4
call sub_404604
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call Ordinal_MFC42_2414
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_4034da
movzx eax [ esp + 0x4 ]
push esi
push eax
push 0x2
mov esi ecx
push eax
call Ordinal_MFC42_1146
push eax
call [ LoadBitmapA@IAT ]
push eax
mov ecx esi
call Ordinal_MFC42_1641
pop esi
retn 0x4
sub_403542
push esi
mov esi ecx
lea ecx [ esi + 0x8 ]
call Ordinal_MFC42_500
mov [ esi ] r--data
call [ GetTickCount@IAT ]
and [ esi + 0x4 ] 0x0
add eax 0xa
mov [ esi + 0x20 ] eax
mov [ esi + 0x1c ] 0x5
mov eax esi
pop esi
retn
sub_40358a
mov eax sub_404a0b
call sub_404604
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_4035fe
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x8 ]
call Ordinal_MFC42_772
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_4035c3
push ebx
mov ebx ecx
push esi
push edi
lea edi [ ebx + 0x24 ]
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_4035fe
mov edi [ esp + 0x10 ]
test edi edi
jle rwxdata
pop edi
pop esi
pop ebx
retn 0x14
lea esi [ ebx + 0x8 ]
mov ecx ebx
call sub_40362e
push eax
mov ecx esi
push [ esi + 0x8 ]
call Ordinal_MFC42_5860
dec edi
jne rwxdata
sub_4035fe
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x10 ] edi
jle rwxdata
push 0xffffffff
push 0x0
lea ecx [ esi + 0x8 ]
call Ordinal_MFC42_6142
pop edi
pop esi
retn
mov eax [ esi + 0xc ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je rwxdata
inc edi
cmp edi [ esi + 0x10 ]
jl rwxdata
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_40362e
mov eax sub_404a22
call sub_404604
push ecx
push ecx
push ebx
push esi
push edi
mov esi ecx
push 0x28
call Ordinal_MFC42_823
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je rwxdata
and [ ebp - 0x10 ] 0x0
call sub_4034fe
mov [ ebp - 0x10 ] eax
jmp rwxdata
mov [ ebp - 0x14 ] 0x1
mov eax [ esi + 0x2c ]
sub eax [ esi + 0x24 ]
mov [ ebp - 0x14 ] eax
jmp rwxdata
mov eax [ esi + 0x2c ]
sub eax [ esi + 0x24 ]
je rwxdata
mov [ ebp - 0x14 ] 0x1
mov eax [ esi + 0x30 ]
sub eax [ esi + 0x28 ]
mov [ ebp - 0x14 ] eax
jmp rwxdata
mov ebx [ esi + 0x2c ]
mov edi [ rand@IAT ]
sub ebx [ esi + 0x24 ]
call edi
cdq
idiv [ ebp - 0x14 ]
mov eax ebx
mov ecx edx
cdq
sub eax edx
sar eax 0x1
sub ecx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
fild [ ebp - 0x14 ]
fstp [ eax + 0x8 ]
mov eax [ esi + 0x30 ]
sub eax [ esi + 0x28 ]
je rwxdata
mov [ ebp - 0x14 ] 0x1
mov eax [ esi + 0x2c ]
sub eax [ esi + 0x24 ]
mov [ ebp - 0x14 ] eax
jmp rwxdata
mov ebx [ esi + 0x30 ]
sub ebx [ esi + 0x28 ]
call edi
cdq
idiv [ ebp - 0x14 ]
mov eax ebx
mov ecx edx
cdq
sub eax edx
sar eax 0x1
sub ecx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
fild [ ebp - 0x14 ]
fstp [ eax + 0x10 ]
mov eax [ esi + 0x2c ]
sub eax [ esi + 0x24 ]
je rwxdata
mov ebx [ esi + 0x2c ]
sub ebx [ esi + 0x24 ]
call edi
cdq
idiv [ ebp - 0x14 ]
mov eax ebx
pop edi
pop esi
pop ebx
mov ecx edx
cdq
sub eax edx
sar eax 0x1
sub ecx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0xc ]
fild [ ebp - 0x14 ]
fstp [ eax + 0x18 ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_403732
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x10 ] edi
jle rwxdata
pop edi
pop esi
retn 0x8
mov eax [ esi + 0xc ]
push ecx
fld [ esp + 0x10 ]
push ecx
mov ecx [ eax + edi * 4 ]
fstp [ esp ]
call sub_40108a
inc edi
cmp edi [ esi + 0x10 ]
jl rwxdata
sub_40375c
push ebp
mov ebp esp
push ecx
push edi
xor edi edi
cmp [ ecx + 0x10 ] edi
jle rwxdata
pop edi
leave
retn 0x8
push ebx
push esi
fstp st0
mov eax [ ecx + 0x2c ]
sub eax [ ecx + 0x24 ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
fld st1
fcompp
fnstsw ax
sahf
fstp st0
jbe rwxdata
mov eax [ ecx + 0xc ]
push 0xfffffffe
fld [ ebp + 0x8 ]
mov esi [ eax + edi * 4 ]
pop ebx
fadd [ esi + 0x18 ]
fst [ esi + 0x18 ]
mov eax [ ecx + 0x2c ]
sub eax [ ecx + 0x24 ]
cdq
idiv ebx
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
fld st1
fcompp
fnstsw ax
sahf
jb rwxdata
pop esi
pop ebx
inc edi
cmp edi [ ecx + 0x10 ]
jl rwxdata
jmp rwxdata
fldz
fstp [ esi + 0x18 ]
sub_4037c6
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ GetTickCount@IAT ]
mov esi ecx
call edi
cmp eax [ esi + 0x20 ]
jbe rwxdata
pop edi
pop esi
leave
retn
mov eax [ esi + 0x1c ]
push ecx
neg eax
mov [ ebp - 0x4 ] eax
push ecx
fild [ ebp - 0x4 ]
mov ecx esi
fstp [ esp ]
call sub_40375c
cmp [ esi + 0x4 ] 0x0
je rwxdata
call edi
add eax 0xa
mov [ esi + 0x20 ] eax
fld [ rw-data ]
push ecx
push ecx
fstp [ esp ]
call cos
fmul [ r--data ]
mov ecx esi
fstp [ esp ]
call sub_403732
fld [ rw-data ]
fadd [ r--data ]
fstp [ rw-data ]
sub_4038a1
mov eax sub_404a3d
call sub_404604
sub esp 0x28
push esi
push edi
mov esi ecx
push 0x0
call Ordinal_MFC42_1134
pop ecx
mov ecx esi
call Ordinal_MFC42_2621
push rw-data
mov ecx esi
call Ordinal_MFC42_6117
push 0x4
mov ecx esi
call Ordinal_MFC42_4159
push 0x6c
call Ordinal_MFC42_823
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je rwxdata
xor eax eax
push r--data
push r--data
push r--data
push 0x80
call Ordinal_MFC42_520
jmp rwxdata
mov ecx [ esi + 0x20 ]
push 0x0
call Ordinal_MFC42_6215
mov esi [ esi + 0x20 ]
push [ esi + 0x20 ]
call [ UpdateWindow@IAT ]
xor edi edi
jmp rwxdata
or [ ebp - 0x4 ] 0xffffffff
push eax
mov ecx esi
call Ordinal_MFC42_986
lea ecx [ ebp - 0x34 ]
call Ordinal_MFC42_296
push 0x1
lea eax [ ebp - 0x34 ]
pop edi
mov ecx esi
push eax
mov [ ebp - 0x4 ] edi
call Ordinal_MFC42_5214
lea eax [ ebp - 0x34 ]
mov ecx esi
push eax
call Ordinal_MFC42_5301
test eax eax
jne rwxdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x34 ]
call Ordinal_MFC42_617
mov ecx [ ebp - 0xc ]
mov eax edi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_4039b8
mov eax sub_404a50
call sub_404604
sub esp 0x60
lea ecx [ ebp - 0x6c ]
call sub_403972
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call Ordinal_MFC42_2514
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x6c ]
call Ordinal_MFC42_641
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_4039f1
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov ecx [ esi + 0x20 ]
cmp [ ecx + 0xc0 ] ebx
je rwxdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn
mov edi [ PeekMessageA@IAT ]
mov ecx [ esi + 0x20 ]
cmp [ ecx + 0xc0 ] ebx
jne rwxdata
cmp [ ebp - 0x18 ] 0x12
je rwxdata
call sub_402f35
mov eax [ esi ]
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx esi
call [ eax + 0x60 ]
lea eax [ ebp - 0x1c ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
jmp rwxdata
push 0x1
push ebx
push ebx
lea eax [ ebp - 0x1c ]
push ebx
push eax
call edi
test eax eax
je rwxdata
sub_403a74
mov eax sub_404a65
call sub_404604
push ecx
push 0x54
call Ordinal_MFC42_823
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je rwxdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_403abe
sub_403b11
mov eax sub_404a79
call sub_404604
push ecx
push 0x68
call Ordinal_MFC42_823
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je rwxdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_403b5b
sub_403b5b
mov eax sub_404a8c
call sub_404604
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call Ordinal_MFC42_560
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x44 ]
call sub_40262c
fld [ r--data ]
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
fstp [ esi + 0x60 ]
mov [ esi + 0x4c ] 0x1e
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_403bbe
mov eax sub_404aa0
call sub_404604
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x44 ]
call sub_402666
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call Ordinal_MFC42_813
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_403c14
cmp [ esp + 0x4 ] 0x1b
push esi
mov esi ecx
jne rwxdata
push [ esp + 0x8 ]
lea ecx [ esi + 0x44 ]
call sub_402682
mov ecx esi
call Ordinal_MFC42_2379
call sub_402f4e
push 0x0
push 0x0
push 0x10
push [ eax + 0x20 ]
call [ SendMessageA@IAT ]
jmp rwxdata
pop esi
retn 0xc
sub_403c4b
push ebx
push esi
push edi
mov edi [ GetTickCount@IAT ]
mov esi ecx
call edi
mov ecx [ esi + 0x4c ]
mov edx [ rw-data ]
lea ebx [ eax + ecx * 2 ]
cmp edx ebx
jbe rwxdata
cmp eax edx
jae rwxdata
lea edx [ ecx + eax ]
mov [ rw-data ] edx
call edi
add eax [ esi + 0x4c ]
push 0x1
mov [ rw-data ] eax
pop eax
xor eax eax
jmp rwxdata
pop edi
pop esi
pop ebx
retn
sub_403c8a
mov eax sub_404abc
call sub_404604
sub esp 0x50
push esi
mov esi ecx
call sub_403c4b
test eax eax
je rwxdata
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push esi
lea ecx [ ebp - 0x30 ]
call Ordinal_MFC42_289
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push [ esi + 0x20 ]
call [ GetClientRect@IAT ]
lea eax [ ebp - 0x1c ]
push 0xffffff
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x5c ]
call sub_403d25
push 0x5
mov [ ebp - 0x4 ] 0x1
call [ GetSysColor@IAT ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x5c ]
call Ordinal_MFC42_2754
add esi 0x44
mov ecx esi
call sub_402694
lea eax [ ebp - 0x5c ]
mov ecx esi
push eax
call sub_4026a0
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x5c ]
call sub_403e19
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call Ordinal_MFC42_613
sub_403d25
mov eax sub_404ad9
call sub_404604
push ecx
push ebx
push esi
mov ebx ecx
push edi
mov [ ebp - 0x10 ] ebx
call Ordinal_MFC42_323
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
and [ ebx + 0x14 ] 0x0
lea edi [ ebx + 0x1c ]
mov [ ebx + 0x18 ] eax
and [ ebp - 0x4 ] 0x0
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
test eax eax
mov [ ebx ] r--data
je rwxdata
push eax
call [ CreateCompatibleDC@IAT ]
push eax
mov ecx ebx
call Ordinal_MFC42_1640
push 0x8
call Ordinal_MFC42_823
xor edi edi
pop ecx
cmp eax edi
je rwxdata
mov eax [ eax + 0x4 ]
mov esi [ ebp + 0xc ]
mov [ ebx + 0x10 ] edi
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
sub eax [ esi + 0x4 ]
sub ecx [ esi ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push [ eax + 0x4 ]
call [ CreateCompatibleBitmap@IAT ]
push eax
mov ecx edi
call Ordinal_MFC42_1641
push 0x8
call Ordinal_MFC42_823
pop ecx
mov [ ebp + 0xc ] eax
test eax eax
mov [ ebp - 0x4 ] 0x1
je rwxdata
mov [ eax + 0x4 ] edi
mov [ eax ] r--data
mov edi eax
xor eax eax
push [ ebp + 0x10 ]
mov ecx eax
call Ordinal_MFC42_283
jmp rwxdata
mov eax [ ebx + 0x10 ]
test eax eax
je rwxdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx + 0x4 ]
and [ ebp - 0x4 ] 0x0
test eax eax
je rwxdata
push eax
push [ ebx + 0x4 ]
call Ordinal_MFC42_5785
mov [ ebx + 0x14 ] eax
mov eax [ ebp + 0x8 ]
lea edi [ ebx + 0x1c ]
mov [ ebx + 0x18 ] eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ ebp - 0xc ]
mov eax ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0xc
mov eax [ eax + 0x4 ]
sub_403e19
mov eax sub_404aec
call sub_404604
push ecx
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
mov edi [ esi + 0x20 ]
mov eax [ esi + 0x28 ]
mov ecx [ esi + 0x24 ]
and [ ebp - 0x4 ] 0x0
sub ecx [ esi + 0x1c ]
mov edx [ esi + 0x18 ]
sub eax edi
test esi esi
jne rwxdata
push ebx
mov ebx [ esi + 0x4 ]
mov [ ebp - 0x10 ] ebx
pop ebx
and [ ebp - 0x10 ] esi
jmp rwxdata
push eax
push [ esi + 0x4 ]
call Ordinal_MFC42_5785
mov ecx [ esi + 0x10 ]
test ecx ecx
je rwxdata
mov eax [ eax + 0x4 ]
push 0xcc0020
push edi
push [ esi + 0x1c ]
push [ ebp - 0x10 ]
push eax
push ecx
push edi
push [ esi + 0x1c ]
push [ edx + 0x4 ]
call [ BitBlt@IAT ]
mov eax [ esi + 0x14 ]
test eax eax
je rwxdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call Ordinal_MFC42_640
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_403ec9
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi ecx
call Ordinal_MFC42_2379
mov eax [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
lea ecx [ esi + 0x44 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4026b2
pop esi
leave
retn 0xc
sub_403f01
mov eax sub_404b00
call sub_404604
sub esp 0x54
push esi
mov esi ecx
push esi
lea ecx [ ebp - 0x60 ]
call Ordinal_MFC42_470
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_403c8a
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x60 ]
call Ordinal_MFC42_755
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_403f7e
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ ExtTextOutA@IAT ]
pop ebp
retn 0x1c
sub_403fa3
push ebp
mov ebp esp
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ecx + 0x4 ]
call [ TabbedTextOutA@IAT ]
mov ecx [ ebp + 0x8 ]
movsx edx ax
shr eax 0x10
movsx eax ax
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebp
retn 0x20
sub_403ff7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je rwxdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ecx + 0x4 ]
call [ GrayStringA@IAT ]
pop ebp
retn 0x20
mov eax [ eax + 0x4 ]
sub_404590
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb rwxdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae rwxdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_402b7d
cmp [ rw-data ] ebx
jne rwxdata
call sub_40479a
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne rwxdata
push sub_4047ac
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe rwxdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je rwxdata
mov al [ esi ]
cmp al bl
je rwxdata
inc esi
mov [ ebp - 0x74 ] esi
jmp rwxdata
cmp [ esi ] 0x22
jne rwxdata
cmp al 0x22
jne rwxdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je rwxdata
cmp al 0x20
jbe rwxdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp rwxdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_4047bc
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_4047d4
call Ordinal_MFC42_1168
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test ecx ecx
mov [ eax + 0x14 ] cl
mov [ eax + 0x1040 ] edx
jne rwxdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call [ _setmbcp@IAT ]
pop ecx
sub_401000
push esi
mov esi ecx
call sub_401025
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_40101c
mov eax ecx
mov [ eax ] r--data
retn
sub_401025
mov [ ecx ] r--data
retn
sub_40108a
fld [ esp + 0x4 ]
push ecx
push ecx
fstp [ esp ]
call sub_40109b
retn 0x8
sub_401125
std

sub_401f81
adc eax 0xe360ab36
fdivr [ edi - 0x6aa071a1 ]
add [ esi ] ebp
sub [ esi + 0x7e ] ebp
pop edx
stosd [ edi ]
lahf
add ecx [ esi + 0x3593ea28 ]
fidiv [ 0x7927f06f ]
xchg bl dl
fmul [ cs : ebp + 0x32f0b202 ]
hlt
sub_4024c4
push esi
mov esi ecx
push 0x0
mov [ esi ] r--data
call [ time@IAT ]
push eax
call [ srand@IAT ]
pop ecx
mov eax esi
pop ecx
pop esi
retn
sub_4024e2
push esi
mov esi ecx
call sub_4024fe
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_4024fe
mov [ ecx ] r--data
retn
sub_40262c
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_403083
push eax
mov ecx esi
call sub_40266d
mov eax esi
pop esi
retn
sub_40264a
push esi
mov esi ecx
call sub_402666
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_402666
mov [ ecx ] r--data
retn
sub_40266d
mov eax ecx
mov ecx [ esp + 0x4 ]
cmp ecx [ eax + 0x4 ]
je rwxdata
mov eax [ ecx ]
call [ eax ]
retn 0x4
mov [ eax + 0x4 ] ecx
sub_402682
mov eax [ ecx + 0x4 ]
push [ esp + 0x4 ]
mov edx [ eax ]
push ecx
mov ecx eax
call [ edx + 0x8 ]
retn 0x4
sub_402694
mov eax [ ecx + 0x4 ]
push ecx
mov ecx eax
mov edx [ eax ]
call [ edx + 0x10 ]
retn
sub_4026a0
mov eax [ ecx + 0x4 ]
push [ esp + 0x4 ]
mov edx [ eax ]
push ecx
mov ecx eax
call [ edx + 0xc ]
retn 0x4
sub_4026ce
call sub_4026d8
jmp sub_4026e2
sub_4026d8
mov ecx rw-data
jmp sub_402709
sub_4026e2
push sub_4026ee
call sub_4045eb
pop ecx
retn
sub_4026ee
test [ rw-data ] 0x1
jne rwxdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_402742
sub_402709
push esi
mov esi ecx
call sub_402992
and [ esi + 0x8 ] 0x0
mov [ esi + 0x4 ] r--data
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_402726
push esi
mov esi ecx
call sub_402742
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_402795
mov eax rw-data
retn
sub_40279b
cmp [ esp + 0x8 ] 0x70
push esi
mov esi ecx
jne rwxdata
pop esi
retn 0x8
call sub_402c9b
push eax
mov ecx esi
push [ esp + 0xc ]
call sub_4029be
sub_4028c6
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_4028e3
mov [ ecx ] r--data
retn
sub_4028ea
retn
sub_4028eb
retn 0x4
sub_4028ee
push esi
mov esi ecx
call sub_40290a
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_40293d
push esi
mov esi ecx
call sub_402959
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_40298c
jmp rwxdata
retn
sub_402992
mov eax ecx
mov [ eax ] r--data
retn
sub_40299b
push esi
mov esi ecx
call sub_4029b7
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_4029b7
mov [ ecx ] r--data
retn
sub_4029be
push [ esp + 0x8 ]
mov ecx [ esp + 0x8 ]
call sub_40266d
retn 0x8
sub_4029ce
call sub_4029d8
jmp sub_4029e2
sub_4029d8
mov ecx rw-data
jmp sub_402a09
sub_4029e2
push sub_4029ee
call sub_4045eb
pop ecx
retn
sub_4029ee
test [ rw-data ] 0x1
jne rwxdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_402a42
sub_402a09
push esi
mov esi ecx
call sub_402992
and [ esi + 0x8 ] 0x0
mov [ esi + 0x4 ] r--data
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_402a26
push esi
mov esi ecx
call sub_402a42
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_402a95
mov eax rw-data
retn
sub_402b7d
retn
sub_402ba8
call sub_402bb2
jmp sub_402bbc
sub_402bb2
mov ecx rw-data
jmp sub_402be3
sub_402bbc
push sub_402bc8
call sub_4045eb
pop ecx
retn
sub_402bc8
test [ rw-data ] 0x1
jne rwxdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_402c1c
sub_402be3
push esi
mov esi ecx
call sub_402992
and [ esi + 0x8 ] 0x0
mov [ esi + 0x4 ] r--data
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_402c00
push esi
mov esi ecx
call sub_402c1c
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_402c9b
mov eax rw-data
retn
sub_402e06
mov eax [ Ordinal_MFC42_1842@IAT ]
retn
sub_402e0c
mov eax r--data
retn
sub_402e12
mov eax [ Ordinal_MFC42_4242@IAT ]
retn
sub_402e18
mov eax r--data
retn
sub_402e71
push esi
mov esi ecx
call sub_402e8d
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_402f29
push [ esp + 0x4 ]
call Ordinal_MFC42_5252
retn 0x4
sub_402f35
call Ordinal_MFC42_2884
mov ecx eax
jmp sub_403c8a
sub_402f41
push [ esp + 0x4 ]
call Ordinal_MFC42_825
pop ecx
retn 0x4
sub_402f4e
call Ordinal_MFC42_1175
test eax eax
je rwxdata
xor eax eax
retn
mov edx [ eax ]
mov ecx eax
call [ edx + 0x7c ]
retn
sub_402f62
call sub_402f6c
jmp sub_402f76
sub_402f6c
mov ecx rw-data
jmp sub_402f9d
sub_402f76
push sub_402f82
call sub_4045eb
pop ecx
retn
sub_402f82
test [ rw-data ] 0x1
jne rwxdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_403009
sub_402fed
push esi
mov esi ecx
call sub_403009
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_403083
mov eax rw-data
retn
sub_4030b5
add ecx 0x14
call sub_4037c6
retn 0x4
j_sub_4033c5
jmp sub_4033c5
sub_403485
mov eax rwxdata
retn
sub_40348b
push esi
mov esi ecx
call sub_4034a7
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_4034fe
push esi
mov esi ecx
call sub_40101c
mov [ esi ] r--data
mov [ esi + 0x20 ] 0xffffff
mov eax esi
pop esi
retn
sub_403517
push esi
mov esi ecx
call sub_403533
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_403533
mov [ ecx ] r--data
jmp sub_401025
sub_40353e
mov eax [ ecx + 0x20 ]
retn
sub_40356e
push esi
mov esi ecx
call sub_40358a
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_40372e
lea eax [ ecx + 0x8 ]
retn
sub_403836
mov eax [ Ordinal_MFC42_4274@IAT ]
retn
sub_40383c
mov eax r--data
retn
sub_403842
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_561
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_403856
push esi
mov esi ecx
call sub_403872
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_403872
jmp Ordinal_MFC42_815
sub_403877
call sub_403881
jmp sub_40388b
sub_403881
mov ecx rw-data
jmp sub_403842
sub_40388b
push sub_403897
call sub_4045eb
pop ecx
retn
sub_403897
mov ecx rw-data
jmp sub_403872
sub_403972
push esi
push 0x0
mov esi ecx
push 0x64
call Ordinal_MFC42_324
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_403988
push esi
mov esi ecx
call sub_4039a4
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_4039a4
jmp Ordinal_MFC42_641
sub_4039a9
retn 0x4
sub_4039ac
mov eax [ Ordinal_MFC42_4234@IAT ]
retn
sub_4039b2
mov eax r--data
retn
sub_403a5c
push 0x0
push [ ecx + 0x20 ]
call [ EnableWindow@IAT ]
retn
sub_403a68
push 0x1
push [ ecx + 0x20 ]
call [ EnableWindow@IAT ]
retn
sub_403aa6
mov eax [ Ordinal_MFC42_1825@IAT ]
retn
sub_403aac
mov eax r--data
retn
sub_403ab2
mov eax [ Ordinal_MFC42_4238@IAT ]
retn
sub_403ab8
mov eax r--data
retn
sub_403abe
push esi
mov esi ecx
call Ordinal_MFC42_338
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_403ad0
push esi
mov esi ecx
call sub_403aec
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_403aec
mov [ ecx ] r--data
jmp Ordinal_MFC42_652
sub_403af7
call Ordinal_MFC42_4823
neg eax
sbb eax eax
neg eax
retn
sub_403b03
mov eax [ ecx + 0x48 ]
retn
sub_403b07
mov eax [ esp + 0x4 ]
mov [ ecx + 0x48 ] eax
retn 0x4
sub_403b43
mov eax [ Ordinal_MFC42_1945@IAT ]
retn
sub_403b49
mov eax r--data
retn
sub_403b4f
mov eax [ Ordinal_MFC42_4273@IAT ]
retn
sub_403b55
mov eax r--data
retn
sub_403ba2
push esi
mov esi ecx
call sub_403bbe
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_403bf9
push [ esp + 0x4 ]
call Ordinal_MFC42_5260
retn 0x4
sub_403c05
push [ esp + 0x4 ]
call Ordinal_MFC42_2535
retn 0x4
sub_403c11
retn 0x8
sub_403ead
push esi
mov esi ecx
call sub_403e19
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_403efc
xor eax eax
retn 0x4
sub_403f3e
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push [ ecx + 0x4 ]
call [ PtVisible@IAT ]
retn 0x8
sub_403f52
push [ esp + 0x4 ]
push [ ecx + 0x4 ]
call [ RectVisible@IAT ]
retn 0x4
sub_403f62
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ TextOutA@IAT ]
retn 0x10
sub_403fdb
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ DrawTextA@IAT ]
retn 0x10
sub_404027
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ Escape@IAT ]
retn 0x10
Ordinal_MFC42_825
jmp [ Ordinal_MFC42_825@IAT ]
Ordinal_MFC42_823
jmp [ Ordinal_MFC42_823@IAT ]
Ordinal_MFC42_3619
jmp [ Ordinal_MFC42_3619@IAT ]
Ordinal_MFC42_3663
jmp [ Ordinal_MFC42_3663@IAT ]
Ordinal_MFC42_3626
jmp [ Ordinal_MFC42_3626@IAT ]
Ordinal_MFC42_2414
jmp [ Ordinal_MFC42_2414@IAT ]
Ordinal_MFC42_800
jmp [ Ordinal_MFC42_800@IAT ]
Ordinal_MFC42_537
jmp [ Ordinal_MFC42_537@IAT ]
Ordinal_MFC42_5875
jmp [ Ordinal_MFC42_5875@IAT ]
Ordinal_MFC42_2754
jmp [ Ordinal_MFC42_2754@IAT ]
Ordinal_MFC42_2243
jmp [ Ordinal_MFC42_2243@IAT ]
Ordinal_MFC42_2723
jmp [ Ordinal_MFC42_2723@IAT ]
Ordinal_MFC42_2390
jmp [ Ordinal_MFC42_2390@IAT ]
Ordinal_MFC42_3059
jmp [ Ordinal_MFC42_3059@IAT ]
Ordinal_MFC42_5100
jmp [ Ordinal_MFC42_5100@IAT ]
Ordinal_MFC42_5103
jmp [ Ordinal_MFC42_5103@IAT ]
Ordinal_MFC42_4467
jmp [ Ordinal_MFC42_4467@IAT ]
Ordinal_MFC42_4303
jmp [ Ordinal_MFC42_4303@IAT ]
Ordinal_MFC42_3350
jmp [ Ordinal_MFC42_3350@IAT ]
Ordinal_MFC42_5012
jmp [ Ordinal_MFC42_5012@IAT ]
Ordinal_MFC42_975
jmp [ Ordinal_MFC42_975@IAT ]
Ordinal_MFC42_5472
jmp [ Ordinal_MFC42_5472@IAT ]
Ordinal_MFC42_3403
jmp [ Ordinal_MFC42_3403@IAT ]
Ordinal_MFC42_2879
jmp [ Ordinal_MFC42_2879@IAT ]
Ordinal_MFC42_2878
jmp [ Ordinal_MFC42_2878@IAT ]
Ordinal_MFC42_4151
jmp [ Ordinal_MFC42_4151@IAT ]
Ordinal_MFC42_6055
jmp [ Ordinal_MFC42_6055@IAT ]
Ordinal_MFC42_4077
jmp [ Ordinal_MFC42_4077@IAT ]
Ordinal_MFC42_1776
jmp [ Ordinal_MFC42_1776@IAT ]
Ordinal_MFC42_4407
jmp [ Ordinal_MFC42_4407@IAT ]
Ordinal_MFC42_5237
jmp [ Ordinal_MFC42_5237@IAT ]
Ordinal_MFC42_2385
jmp [ Ordinal_MFC42_2385@IAT ]
Ordinal_MFC42_5163
jmp [ Ordinal_MFC42_5163@IAT ]
Ordinal_MFC42_6374
jmp [ Ordinal_MFC42_6374@IAT ]
Ordinal_MFC42_4353
jmp [ Ordinal_MFC42_4353@IAT ]
Ordinal_MFC42_5282
jmp [ Ordinal_MFC42_5282@IAT ]
Ordinal_MFC42_2649
jmp [ Ordinal_MFC42_2649@IAT ]
Ordinal_MFC42_1665
jmp [ Ordinal_MFC42_1665@IAT ]
Ordinal_MFC42_3798
jmp [ Ordinal_MFC42_3798@IAT ]
Ordinal_MFC42_4837
jmp [ Ordinal_MFC42_4837@IAT ]
Ordinal_MFC42_4436
jmp [ Ordinal_MFC42_4436@IAT ]
Ordinal_MFC42_2648
jmp [ Ordinal_MFC42_2648@IAT ]
Ordinal_MFC42_2055
jmp [ Ordinal_MFC42_2055@IAT ]
Ordinal_MFC42_6376
jmp [ Ordinal_MFC42_6376@IAT ]
Ordinal_MFC42_3749
jmp [ Ordinal_MFC42_3749@IAT ]
Ordinal_MFC42_5065
jmp [ Ordinal_MFC42_5065@IAT ]
Ordinal_MFC42_1727
jmp [ Ordinal_MFC42_1727@IAT ]
Ordinal_MFC42_2446
jmp [ Ordinal_MFC42_2446@IAT ]
Ordinal_MFC42_2124
jmp [ Ordinal_MFC42_2124@IAT ]
Ordinal_MFC42_5277
jmp [ Ordinal_MFC42_5277@IAT ]
Ordinal_MFC42_2982
jmp [ Ordinal_MFC42_2982@IAT ]
Ordinal_MFC42_3147
jmp [ Ordinal_MFC42_3147@IAT ]
Ordinal_MFC42_3259
jmp [ Ordinal_MFC42_3259@IAT ]
Ordinal_MFC42_4465
jmp [ Ordinal_MFC42_4465@IAT ]
Ordinal_MFC42_3136
jmp [ Ordinal_MFC42_3136@IAT ]
Ordinal_MFC42_3262
jmp [ Ordinal_MFC42_3262@IAT ]
Ordinal_MFC42_2985
jmp [ Ordinal_MFC42_2985@IAT ]
Ordinal_MFC42_3081
jmp [ Ordinal_MFC42_3081@IAT ]
Ordinal_MFC42_2976
jmp [ Ordinal_MFC42_2976@IAT ]
Ordinal_MFC42_3830
jmp [ Ordinal_MFC42_3830@IAT ]
Ordinal_MFC42_3831
jmp [ Ordinal_MFC42_3831@IAT ]
Ordinal_MFC42_3825
jmp [ Ordinal_MFC42_3825@IAT ]
Ordinal_MFC42_3079
jmp [ Ordinal_MFC42_3079@IAT ]
Ordinal_MFC42_4080
jmp [ Ordinal_MFC42_4080@IAT ]
Ordinal_MFC42_4627
jmp [ Ordinal_MFC42_4627@IAT ]
Ordinal_MFC42_4427
jmp [ Ordinal_MFC42_4427@IAT ]
Ordinal_MFC42_796
jmp [ Ordinal_MFC42_796@IAT ]
Ordinal_MFC42_674
jmp [ Ordinal_MFC42_674@IAT ]
Ordinal_MFC42_554
jmp [ Ordinal_MFC42_554@IAT ]
Ordinal_MFC42_529
jmp [ Ordinal_MFC42_529@IAT ]
Ordinal_MFC42_366
jmp [ Ordinal_MFC42_366@IAT ]
Ordinal_MFC42_807
jmp [ Ordinal_MFC42_807@IAT ]
Ordinal_MFC42_6000
jmp [ Ordinal_MFC42_6000@IAT ]
Ordinal_MFC42_2117
jmp [ Ordinal_MFC42_2117@IAT ]
Ordinal_MFC42_4457
jmp [ Ordinal_MFC42_4457@IAT ]
Ordinal_MFC42_5252
jmp [ Ordinal_MFC42_5252@IAT ]
Ordinal_MFC42_2884
jmp [ Ordinal_MFC42_2884@IAT ]
Ordinal_MFC42_1175
jmp [ Ordinal_MFC42_1175@IAT ]
Ordinal_MFC42_3571
jmp [ Ordinal_MFC42_3571@IAT ]
Ordinal_MFC42_640
jmp [ Ordinal_MFC42_640@IAT ]
Ordinal_MFC42_5785
jmp [ Ordinal_MFC42_5785@IAT ]
Ordinal_MFC42_1640
jmp [ Ordinal_MFC42_1640@IAT ]
Ordinal_MFC42_323
jmp [ Ordinal_MFC42_323@IAT ]
Ordinal_MFC42_1641
jmp [ Ordinal_MFC42_1641@IAT ]
Ordinal_MFC42_1146
jmp [ Ordinal_MFC42_1146@IAT ]
Ordinal_MFC42_500
jmp [ Ordinal_MFC42_500@IAT ]
Ordinal_MFC42_772
jmp [ Ordinal_MFC42_772@IAT ]
Ordinal_MFC42_5860
jmp [ Ordinal_MFC42_5860@IAT ]
Ordinal_MFC42_6142
jmp [ Ordinal_MFC42_6142@IAT ]
Ordinal_MFC42_4615
jmp [ Ordinal_MFC42_4615@IAT ]
Ordinal_MFC42_4612
jmp [ Ordinal_MFC42_4612@IAT ]
Ordinal_MFC42_4610
jmp [ Ordinal_MFC42_4610@IAT ]
Ordinal_MFC42_6375
jmp [ Ordinal_MFC42_6375@IAT ]
Ordinal_MFC42_4486
jmp [ Ordinal_MFC42_4486@IAT ]
Ordinal_MFC42_2554
jmp [ Ordinal_MFC42_2554@IAT ]
Ordinal_MFC42_2512
jmp [ Ordinal_MFC42_2512@IAT ]
Ordinal_MFC42_5731
jmp [ Ordinal_MFC42_5731@IAT ]
Ordinal_MFC42_3922
jmp [ Ordinal_MFC42_3922@IAT ]
Ordinal_MFC42_1089
jmp [ Ordinal_MFC42_1089@IAT ]
Ordinal_MFC42_5199
jmp [ Ordinal_MFC42_5199@IAT ]
Ordinal_MFC42_2396
jmp [ Ordinal_MFC42_2396@IAT ]
Ordinal_MFC42_3346
jmp [ Ordinal_MFC42_3346@IAT ]
Ordinal_MFC42_5300
jmp [ Ordinal_MFC42_5300@IAT ]
Ordinal_MFC42_5302
jmp [ Ordinal_MFC42_5302@IAT ]
Ordinal_MFC42_2725
jmp [ Ordinal_MFC42_2725@IAT ]
Ordinal_MFC42_4079
jmp [ Ordinal_MFC42_4079@IAT ]
Ordinal_MFC42_4698
jmp [ Ordinal_MFC42_4698@IAT ]
Ordinal_MFC42_5307
jmp [ Ordinal_MFC42_5307@IAT ]
Ordinal_MFC42_5289
jmp [ Ordinal_MFC42_5289@IAT ]
Ordinal_MFC42_4622
jmp [ Ordinal_MFC42_4622@IAT ]
Ordinal_MFC42_4424
jmp [ Ordinal_MFC42_4424@IAT ]
Ordinal_MFC42_3738
jmp [ Ordinal_MFC42_3738@IAT ]
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_815
jmp [ Ordinal_MFC42_815@IAT ]
Ordinal_MFC42_617
jmp [ Ordinal_MFC42_617@IAT ]
Ordinal_MFC42_6215
jmp [ Ordinal_MFC42_6215@IAT ]
Ordinal_MFC42_5301
jmp [ Ordinal_MFC42_5301@IAT ]
Ordinal_MFC42_5214
jmp [ Ordinal_MFC42_5214@IAT ]
Ordinal_MFC42_296
jmp [ Ordinal_MFC42_296@IAT ]
Ordinal_MFC42_986
jmp [ Ordinal_MFC42_986@IAT ]
Ordinal_MFC42_520
jmp [ Ordinal_MFC42_520@IAT ]
Ordinal_MFC42_4159
jmp [ Ordinal_MFC42_4159@IAT ]
Ordinal_MFC42_6117
jmp [ Ordinal_MFC42_6117@IAT ]
Ordinal_MFC42_2621
jmp [ Ordinal_MFC42_2621@IAT ]
Ordinal_MFC42_1134
jmp [ Ordinal_MFC42_1134@IAT ]
Ordinal_MFC42_5265
jmp [ Ordinal_MFC42_5265@IAT ]
Ordinal_MFC42_4376
jmp [ Ordinal_MFC42_4376@IAT ]
Ordinal_MFC42_4853
jmp [ Ordinal_MFC42_4853@IAT ]
Ordinal_MFC42_4998
jmp [ Ordinal_MFC42_4998@IAT ]
Ordinal_MFC42_4710
jmp [ Ordinal_MFC42_4710@IAT ]
Ordinal_MFC42_2514
jmp [ Ordinal_MFC42_2514@IAT ]
Ordinal_MFC42_6052
jmp [ Ordinal_MFC42_6052@IAT ]
Ordinal_MFC42_4078
jmp [ Ordinal_MFC42_4078@IAT ]
Ordinal_MFC42_1775
jmp [ Ordinal_MFC42_1775@IAT ]
Ordinal_MFC42_5241
jmp [ Ordinal_MFC42_5241@IAT ]
Ordinal_MFC42_5280
jmp [ Ordinal_MFC42_5280@IAT ]
Ordinal_MFC42_4441
jmp [ Ordinal_MFC42_4441@IAT ]
Ordinal_MFC42_5261
jmp [ Ordinal_MFC42_5261@IAT ]
Ordinal_MFC42_4425
jmp [ Ordinal_MFC42_4425@IAT ]
Ordinal_MFC42_3597
jmp [ Ordinal_MFC42_3597@IAT ]
Ordinal_MFC42_324
jmp [ Ordinal_MFC42_324@IAT ]
Ordinal_MFC42_641
jmp [ Ordinal_MFC42_641@IAT ]
Ordinal_MFC42_4696
jmp [ Ordinal_MFC42_4696@IAT ]
Ordinal_MFC42_3058
jmp [ Ordinal_MFC42_3058@IAT ]
Ordinal_MFC42_3065
jmp [ Ordinal_MFC42_3065@IAT ]
Ordinal_MFC42_6336
jmp [ Ordinal_MFC42_6336@IAT ]
Ordinal_MFC42_2510
jmp [ Ordinal_MFC42_2510@IAT ]
Ordinal_MFC42_2542
jmp [ Ordinal_MFC42_2542@IAT ]
Ordinal_MFC42_5243
jmp [ Ordinal_MFC42_5243@IAT ]
Ordinal_MFC42_5740
jmp [ Ordinal_MFC42_5740@IAT ]
Ordinal_MFC42_1746
jmp [ Ordinal_MFC42_1746@IAT ]
Ordinal_MFC42_5577
jmp [ Ordinal_MFC42_5577@IAT ]
Ordinal_MFC42_3172
jmp [ Ordinal_MFC42_3172@IAT ]
Ordinal_MFC42_5653
jmp [ Ordinal_MFC42_5653@IAT ]
Ordinal_MFC42_4420
jmp [ Ordinal_MFC42_4420@IAT ]
Ordinal_MFC42_4953
jmp [ Ordinal_MFC42_4953@IAT ]
Ordinal_MFC42_4858
jmp [ Ordinal_MFC42_4858@IAT ]
Ordinal_MFC42_2399
jmp [ Ordinal_MFC42_2399@IAT ]
Ordinal_MFC42_4387
jmp [ Ordinal_MFC42_4387@IAT ]
Ordinal_MFC42_3454
jmp [ Ordinal_MFC42_3454@IAT ]
Ordinal_MFC42_3198
jmp [ Ordinal_MFC42_3198@IAT ]
Ordinal_MFC42_6080
jmp [ Ordinal_MFC42_6080@IAT ]
Ordinal_MFC42_6175
jmp [ Ordinal_MFC42_6175@IAT ]
Ordinal_MFC42_4623
jmp [ Ordinal_MFC42_4623@IAT ]
Ordinal_MFC42_4426
jmp [ Ordinal_MFC42_4426@IAT ]
Ordinal_MFC42_338
jmp [ Ordinal_MFC42_338@IAT ]
Ordinal_MFC42_652
jmp [ Ordinal_MFC42_652@IAT ]
Ordinal_MFC42_4823
jmp [ Ordinal_MFC42_4823@IAT ]
Ordinal_MFC42_4614
jmp [ Ordinal_MFC42_4614@IAT ]
Ordinal_MFC42_4613
jmp [ Ordinal_MFC42_4613@IAT ]
Ordinal_MFC42_4589
jmp [ Ordinal_MFC42_4589@IAT ]
Ordinal_MFC42_4899
jmp [ Ordinal_MFC42_4899@IAT ]
Ordinal_MFC42_5076
jmp [ Ordinal_MFC42_5076@IAT ]
Ordinal_MFC42_4341
jmp [ Ordinal_MFC42_4341@IAT ]
Ordinal_MFC42_4349
jmp [ Ordinal_MFC42_4349@IAT ]
Ordinal_MFC42_4723
jmp [ Ordinal_MFC42_4723@IAT ]
Ordinal_MFC42_4890
jmp [ Ordinal_MFC42_4890@IAT ]
Ordinal_MFC42_4531
jmp [ Ordinal_MFC42_4531@IAT ]
Ordinal_MFC42_4545
jmp [ Ordinal_MFC42_4545@IAT ]
Ordinal_MFC42_4543
jmp [ Ordinal_MFC42_4543@IAT ]
Ordinal_MFC42_4526
jmp [ Ordinal_MFC42_4526@IAT ]
Ordinal_MFC42_4529
jmp [ Ordinal_MFC42_4529@IAT ]
Ordinal_MFC42_4524
jmp [ Ordinal_MFC42_4524@IAT ]
Ordinal_MFC42_4964
jmp [ Ordinal_MFC42_4964@IAT ]
Ordinal_MFC42_4961
jmp [ Ordinal_MFC42_4961@IAT ]
Ordinal_MFC42_4108
jmp [ Ordinal_MFC42_4108@IAT ]
Ordinal_MFC42_5240
jmp [ Ordinal_MFC42_5240@IAT ]
Ordinal_MFC42_5290
jmp [ Ordinal_MFC42_5290@IAT ]
Ordinal_MFC42_3748
jmp [ Ordinal_MFC42_3748@IAT ]
Ordinal_MFC42_1726
jmp [ Ordinal_MFC42_1726@IAT ]
Ordinal_MFC42_4432
jmp [ Ordinal_MFC42_4432@IAT ]
Ordinal_MFC42_813
jmp [ Ordinal_MFC42_813@IAT ]
Ordinal_MFC42_560
jmp [ Ordinal_MFC42_560@IAT ]
Ordinal_MFC42_5260
jmp [ Ordinal_MFC42_5260@IAT ]
Ordinal_MFC42_2535
jmp [ Ordinal_MFC42_2535@IAT ]
Ordinal_MFC42_2379
jmp [ Ordinal_MFC42_2379@IAT ]
Ordinal_MFC42_613
jmp [ Ordinal_MFC42_613@IAT ]
Ordinal_MFC42_289
jmp [ Ordinal_MFC42_289@IAT ]
Ordinal_MFC42_2971
jmp [ Ordinal_MFC42_2971@IAT ]
Ordinal_MFC42_5759
jmp [ Ordinal_MFC42_5759@IAT ]
Ordinal_MFC42_6192
jmp [ Ordinal_MFC42_6192@IAT ]
Ordinal_MFC42_5756
jmp [ Ordinal_MFC42_5756@IAT ]
Ordinal_MFC42_6186
jmp [ Ordinal_MFC42_6186@IAT ]
Ordinal_MFC42_4330
jmp [ Ordinal_MFC42_4330@IAT ]
Ordinal_MFC42_6189
jmp [ Ordinal_MFC42_6189@IAT ]
Ordinal_MFC42_6021
jmp [ Ordinal_MFC42_6021@IAT ]
Ordinal_MFC42_6172
jmp [ Ordinal_MFC42_6172@IAT ]
Ordinal_MFC42_5873
jmp [ Ordinal_MFC42_5873@IAT ]
Ordinal_MFC42_5789
jmp [ Ordinal_MFC42_5789@IAT ]
Ordinal_MFC42_5794
jmp [ Ordinal_MFC42_5794@IAT ]
Ordinal_MFC42_5678
jmp [ Ordinal_MFC42_5678@IAT ]
Ordinal_MFC42_5736
jmp [ Ordinal_MFC42_5736@IAT ]
Ordinal_MFC42_5579
jmp [ Ordinal_MFC42_5579@IAT ]
Ordinal_MFC42_5571
jmp [ Ordinal_MFC42_5571@IAT ]
Ordinal_MFC42_6061
jmp [ Ordinal_MFC42_6061@IAT ]
Ordinal_MFC42_5864
jmp [ Ordinal_MFC42_5864@IAT ]
Ordinal_MFC42_3596
jmp [ Ordinal_MFC42_3596@IAT ]
Ordinal_MFC42_283
jmp [ Ordinal_MFC42_283@IAT ]
Ordinal_MFC42_755
jmp [ Ordinal_MFC42_755@IAT ]
Ordinal_MFC42_470
jmp [ Ordinal_MFC42_470@IAT ]
_ftol
jmp [ _ftol@IAT ]
sin
jmp [ sin@IAT ]
cos
jmp [ cos@IAT ]
memcpy
jmp [ memcpy@IAT ]
sub_4045bf
cmp [ rw-data ] 0xffffffff
jne rwxdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_4045eb
push [ esp + 0x4 ]
call sub_4045bf
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
sub_404604
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
_purecall
jmp [ _purecall@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_40479a
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_4047ac
xor eax eax
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_4047bc
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call Ordinal_MFC42_1576
retn 0x10
j_sub_404802
jmp sub_404802
sub_404802
push 0x600
push 0x0
call sub_4047d4
mov [ rw-data ] al
retn
Ordinal_MFC42_1576
jmp [ Ordinal_MFC42_1576@IAT ]
Ordinal_MFC42_1168
jmp [ Ordinal_MFC42_1168@IAT ]
sub_404820
mov ecx [ ebp - 0x10 ]
jmp sub_4029b7
sub_404828
mov ecx [ ebp - 0x14 ]
jmp sub_4028e3
sub_404830
mov eax r--data
jmp __CxxFrameHandler
sub_40483c
lea ecx [ ebp + 0xc ]
jmp Ordinal_MFC42_800
sub_404844
lea ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_800
sub_40484c
mov eax r--data
jmp __CxxFrameHandler
sub_404858
mov ecx [ ebp - 0x10 ]
jmp sub_4028e3
sub_404860
mov eax r--data
jmp __CxxFrameHandler
sub_40486c
mov ecx [ ebp - 0x10 ]
jmp sub_4028e3
sub_404874
mov eax r--data
jmp __CxxFrameHandler
sub_404880
mov ecx [ ebp - 0x10 ]
jmp sub_4029b7
sub_404888
mov ecx [ ebp - 0x14 ]
jmp sub_4028e3
sub_404890
mov eax r--data
jmp __CxxFrameHandler
sub_40489c
lea ecx [ ebp + 0xc ]
jmp Ordinal_MFC42_800
sub_4048a4
lea ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_800
sub_4048ac
mov eax r--data
jmp __CxxFrameHandler
sub_4048b8
mov ecx [ ebp - 0x10 ]
jmp sub_4029b7
sub_4048c0
mov ecx [ ebp - 0x14 ]
jmp sub_4028e3
sub_4048c8
mov eax r--data
jmp __CxxFrameHandler
sub_4048d4
lea ecx [ ebp + 0xc ]
jmp Ordinal_MFC42_800
sub_4048dc
lea ecx [ ebp + 0xc ]
jmp Ordinal_MFC42_800
sub_4048e4
lea ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_800
sub_4048ec
mov eax r--data
jmp __CxxFrameHandler
sub_4048f8
push [ ebp - 0x10 ]
call sub_402f41
retn
sub_404901
mov eax r--data
jmp __CxxFrameHandler
sub_40490c
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_674
sub_404914
mov ecx [ ebp - 0x10 ]
add ecx 0xc4
jmp Ordinal_MFC42_796
sub_404922
mov eax r--data
jmp __CxxFrameHandler
sub_40492c
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_674
sub_404934
mov ecx [ ebp - 0x10 ]
add ecx 0xc4
jmp Ordinal_MFC42_796
sub_404942
mov eax r--data
jmp __CxxFrameHandler
sub_40494c
mov ecx [ ebp - 0x10 ]
jmp sub_4029b7
sub_404954
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_402959
sub_40495f
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_4034a7
sub_40496a
mov eax r--data
jmp __CxxFrameHandler
sub_404974
mov ecx [ ebp - 0x10 ]
jmp sub_4029b7
sub_40497c
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_402959
sub_404987
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_4034a7
sub_404992
mov ecx [ ebp - 0x14 ]
jmp sub_4028e3
sub_40499a
mov ecx [ ebp - 0x14 ]
jmp sub_4028e3
sub_4049a2
mov eax r--data
jmp __CxxFrameHandler
sub_4049ac
lea ecx [ ebp - 0x30 ]
jmp Ordinal_MFC42_640
sub_4049b4
lea ecx [ ebp + 0xc ]
jmp Ordinal_MFC42_800
sub_4049bc
lea ecx [ ebp + 0xc ]
jmp Ordinal_MFC42_800
sub_4049c4
lea ecx [ ebp + 0xc ]
jmp Ordinal_MFC42_800
sub_4049cc
mov eax r--data
jmp __CxxFrameHandler
sub_4049d8
push [ ebp - 0x14 ]
call Ordinal_MFC42_825
pop ecx
retn
sub_4049e2
mov eax r--data
jmp __CxxFrameHandler
sub_4049ec
mov ecx [ ebp - 0x10 ]
jmp sub_4028e3
sub_4049f4
mov eax r--data
jmp __CxxFrameHandler
sub_404a00
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp Ordinal_MFC42_772
sub_404a0b
mov eax r--data
jmp __CxxFrameHandler
sub_404a18
push [ ebp - 0x14 ]
call Ordinal_MFC42_825
pop ecx
retn
sub_404a22
mov eax r--data
jmp __CxxFrameHandler
sub_404a2c
push [ ebp - 0x10 ]
call sub_402f41
retn
sub_404a35
lea ecx [ ebp - 0x34 ]
jmp Ordinal_MFC42_617
sub_404a3d
mov eax r--data
jmp __CxxFrameHandler
sub_404a48
lea ecx [ ebp - 0x6c ]
jmp sub_4039a4
sub_404a50
mov eax r--data
jmp __CxxFrameHandler
sub_404a5c
push [ ebp - 0x10 ]
call sub_402f41
retn
sub_404a65
mov eax r--data
jmp __CxxFrameHandler
sub_404a70
push [ ebp - 0x10 ]
call sub_402f41
retn
sub_404a79
mov eax r--data
jmp __CxxFrameHandler
sub_404a84
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_813
sub_404a8c
mov eax r--data
jmp __CxxFrameHandler
sub_404a98
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_813
sub_404aa0
mov eax r--data
jmp __CxxFrameHandler
sub_404aac
lea ecx [ ebp - 0x30 ]
jmp Ordinal_MFC42_613
sub_404ab4
lea ecx [ ebp - 0x5c ]
jmp sub_403e19
sub_404abc
mov eax r--data
jmp __CxxFrameHandler
sub_404ac8
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_640
sub_404ad0
push [ ebp + 0xc ]
call sub_402f41
retn
sub_404ad9
mov eax r--data
jmp __CxxFrameHandler
sub_404ae4
mov ecx [ ebp - 0x14 ]
jmp Ordinal_MFC42_640
sub_404aec
mov eax r--data
jmp __CxxFrameHandler
sub_404af8
lea ecx [ ebp - 0x60 ]
jmp Ordinal_MFC42_755
sub_404b00
mov eax r--data
jmp __CxxFrameHandler
